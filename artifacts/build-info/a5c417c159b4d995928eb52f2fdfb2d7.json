{"id":"a5c417c159b4d995928eb52f2fdfb2d7","_format":"hh-sol-build-info-1","solcVersion":"0.8.25","solcLongVersion":"0.8.25+commit.b61c2a91","input":{"language":"Solidity","sources":{"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ContextUpgradeable} from \"../utils/ContextUpgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\n    /// @custom:storage-location erc7201:openzeppelin.storage.Ownable\n    struct OwnableStorage {\n        address _owner;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Ownable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant OwnableStorageLocation = 0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300;\n\n    function _getOwnableStorage() private pure returns (OwnableStorage storage $) {\n        assembly {\n            $.slot := OwnableStorageLocation\n        }\n    }\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    function __Ownable_init(address initialOwner) internal onlyInitializing {\n        __Ownable_init_unchained(initialOwner);\n    }\n\n    function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        OwnableStorage storage $ = _getOwnableStorage();\n        return $._owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        OwnableStorage storage $ = _getOwnableStorage();\n        address oldOwner = $._owner;\n        $._owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Storage of the initializable contract.\n     *\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n     * when using with upgradeable contracts.\n     *\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\n     */\n    struct InitializableStorage {\n        /**\n         * @dev Indicates that the contract has been initialized.\n         */\n        uint64 _initialized;\n        /**\n         * @dev Indicates that the contract is in the process of being initialized.\n         */\n        bool _initializing;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Initializable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\n\n    /**\n     * @dev The contract is already initialized.\n     */\n    error InvalidInitialization();\n\n    /**\n     * @dev The contract is not initializing.\n     */\n    error NotInitializing();\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint64 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n     * production.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        // Cache values to avoid duplicated sloads\n        bool isTopLevelCall = !$._initializing;\n        uint64 initialized = $._initialized;\n\n        // Allowed calls:\n        // - initialSetup: the contract is not in the initializing state and no previous version was\n        //                 initialized\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\n        //                 current contract is just being deployed\n        bool initialSetup = initialized == 0 && isTopLevelCall;\n        bool construction = initialized == 1 && address(this).code.length == 0;\n\n        if (!initialSetup && !construction) {\n            revert InvalidInitialization();\n        }\n        $._initialized = 1;\n        if (isTopLevelCall) {\n            $._initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            $._initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint64 version) {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing || $._initialized >= version) {\n            revert InvalidInitialization();\n        }\n        $._initialized = version;\n        $._initializing = true;\n        _;\n        $._initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        _checkInitializing();\n        _;\n    }\n\n    /**\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\n     */\n    function _checkInitializing() internal view virtual {\n        if (!_isInitializing()) {\n            revert NotInitializing();\n        }\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing) {\n            revert InvalidInitialization();\n        }\n        if ($._initialized != type(uint64).max) {\n            $._initialized = type(uint64).max;\n            emit Initialized(type(uint64).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint64) {\n        return _getInitializableStorage()._initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _getInitializableStorage()._initializing;\n    }\n\n    /**\n     * @dev Returns a pointer to the storage namespace.\n     */\n    // solhint-disable-next-line var-name-mixedcase\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\n        assembly {\n            $.slot := INITIALIZABLE_STORAGE\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/UUPSUpgradeable.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC1822Proxiable} from \"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\";\nimport {ERC1967Utils} from \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\";\nimport {Initializable} from \"./Initializable.sol\";\n\n/**\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n *\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n * `UUPSUpgradeable` with a custom implementation of upgrades.\n *\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\n */\nabstract contract UUPSUpgradeable is Initializable, IERC1822Proxiable {\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable\n    address private immutable __self = address(this);\n\n    /**\n     * @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\n     * and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\n     * while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\n     * If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\n     * be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\n     * during an upgrade.\n     */\n    string public constant UPGRADE_INTERFACE_VERSION = \"5.0.0\";\n\n    /**\n     * @dev The call is from an unauthorized context.\n     */\n    error UUPSUnauthorizedCallContext();\n\n    /**\n     * @dev The storage `slot` is unsupported as a UUID.\n     */\n    error UUPSUnsupportedProxiableUUID(bytes32 slot);\n\n    /**\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n     * a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n     * function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n     * fail.\n     */\n    modifier onlyProxy() {\n        _checkProxy();\n        _;\n    }\n\n    /**\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n     * callable on the implementing contract but not through proxies.\n     */\n    modifier notDelegated() {\n        _checkNotDelegated();\n        _;\n    }\n\n    function __UUPSUpgradeable_init() internal onlyInitializing {\n    }\n\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\n     */\n    function proxiableUUID() external view virtual notDelegated returns (bytes32) {\n        return ERC1967Utils.IMPLEMENTATION_SLOT;\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n     * encoded in `data`.\n     *\n     * Calls {_authorizeUpgrade}.\n     *\n     * Emits an {Upgraded} event.\n     *\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {\n        _authorizeUpgrade(newImplementation);\n        _upgradeToAndCallUUPS(newImplementation, data);\n    }\n\n    /**\n     * @dev Reverts if the execution is not performed via delegatecall or the execution\n     * context is not of a proxy with an ERC1967-compliant implementation pointing to self.\n     * See {_onlyProxy}.\n     */\n    function _checkProxy() internal view virtual {\n        if (\n            address(this) == __self || // Must be called through delegatecall\n            ERC1967Utils.getImplementation() != __self // Must be called through an active proxy\n        ) {\n            revert UUPSUnauthorizedCallContext();\n        }\n    }\n\n    /**\n     * @dev Reverts if the execution is performed via delegatecall.\n     * See {notDelegated}.\n     */\n    function _checkNotDelegated() internal view virtual {\n        if (address(this) != __self) {\n            // Must not be called through delegatecall\n            revert UUPSUnauthorizedCallContext();\n        }\n    }\n\n    /**\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n     * {upgradeToAndCall}.\n     *\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n     *\n     * ```solidity\n     * function _authorizeUpgrade(address) internal onlyOwner {}\n     * ```\n     */\n    function _authorizeUpgrade(address newImplementation) internal virtual;\n\n    /**\n     * @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\n     *\n     * As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\n     * is expected to be the implementation slot in ERC1967.\n     *\n     * Emits an {IERC1967-Upgraded} event.\n     */\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {\n        try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\n            if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {\n                revert UUPSUnsupportedProxiableUUID(slot);\n            }\n            ERC1967Utils.upgradeToAndCall(newImplementation, data);\n        } catch {\n            // The implementation is not UUPS\n            revert ERC1967Utils.ERC1967InvalidImplementation(newImplementation);\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC1822.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC1822.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n * proxy whose upgrades are fully controlled by the current implementation.\n */\ninterface IERC1822Proxiable {\n    /**\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n     * address.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy.\n     */\n    function proxiableUUID() external view returns (bytes32);\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"},"@openzeppelin/contracts/proxy/beacon/IBeacon.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/IBeacon.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\n */\ninterface IBeacon {\n    /**\n     * @dev Must return an address that can be used as a delegate call target.\n     *\n     * {UpgradeableBeacon} will check that this address is a contract.\n     */\n    function implementation() external view returns (address);\n}\n"},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/ERC1967/ERC1967Utils.sol)\n\npragma solidity ^0.8.20;\n\nimport {IBeacon} from \"../beacon/IBeacon.sol\";\nimport {Address} from \"../../utils/Address.sol\";\nimport {StorageSlot} from \"../../utils/StorageSlot.sol\";\n\n/**\n * @dev This abstract contract provides getters and event emitting update functions for\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\n */\nlibrary ERC1967Utils {\n    // We re-declare ERC-1967 events here because they can't be used directly from IERC1967.\n    // This will be fixed in Solidity 0.8.21. At that point we should remove these events.\n    /**\n     * @dev Emitted when the implementation is upgraded.\n     */\n    event Upgraded(address indexed implementation);\n\n    /**\n     * @dev Emitted when the admin account has changed.\n     */\n    event AdminChanged(address previousAdmin, address newAdmin);\n\n    /**\n     * @dev Emitted when the beacon is changed.\n     */\n    event BeaconUpgraded(address indexed beacon);\n\n    /**\n     * @dev Storage slot with the address of the current implementation.\n     * This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n\n    /**\n     * @dev The `implementation` of the proxy is invalid.\n     */\n    error ERC1967InvalidImplementation(address implementation);\n\n    /**\n     * @dev The `admin` of the proxy is invalid.\n     */\n    error ERC1967InvalidAdmin(address admin);\n\n    /**\n     * @dev The `beacon` of the proxy is invalid.\n     */\n    error ERC1967InvalidBeacon(address beacon);\n\n    /**\n     * @dev An upgrade function sees `msg.value > 0` that may be lost.\n     */\n    error ERC1967NonPayable();\n\n    /**\n     * @dev Returns the current implementation address.\n     */\n    function getImplementation() internal view returns (address) {\n        return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 implementation slot.\n     */\n    function _setImplementation(address newImplementation) private {\n        if (newImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(newImplementation);\n        }\n        StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation;\n    }\n\n    /**\n     * @dev Performs implementation upgrade with additional setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-Upgraded} event.\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) internal {\n        _setImplementation(newImplementation);\n        emit Upgraded(newImplementation);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(newImplementation, data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Storage slot with the admin of the contract.\n     * This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\n\n    /**\n     * @dev Returns the current admin.\n     *\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using\n     * the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\n     */\n    function getAdmin() internal view returns (address) {\n        return StorageSlot.getAddressSlot(ADMIN_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 admin slot.\n     */\n    function _setAdmin(address newAdmin) private {\n        if (newAdmin == address(0)) {\n            revert ERC1967InvalidAdmin(address(0));\n        }\n        StorageSlot.getAddressSlot(ADMIN_SLOT).value = newAdmin;\n    }\n\n    /**\n     * @dev Changes the admin of the proxy.\n     *\n     * Emits an {IERC1967-AdminChanged} event.\n     */\n    function changeAdmin(address newAdmin) internal {\n        emit AdminChanged(getAdmin(), newAdmin);\n        _setAdmin(newAdmin);\n    }\n\n    /**\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n     * This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\n\n    /**\n     * @dev Returns the current beacon.\n     */\n    function getBeacon() internal view returns (address) {\n        return StorageSlot.getAddressSlot(BEACON_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\n     */\n    function _setBeacon(address newBeacon) private {\n        if (newBeacon.code.length == 0) {\n            revert ERC1967InvalidBeacon(newBeacon);\n        }\n\n        StorageSlot.getAddressSlot(BEACON_SLOT).value = newBeacon;\n\n        address beaconImplementation = IBeacon(newBeacon).implementation();\n        if (beaconImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(beaconImplementation);\n        }\n    }\n\n    /**\n     * @dev Change the beacon and trigger a setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-BeaconUpgraded} event.\n     *\n     * CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n     * it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n     * efficiency.\n     */\n    function upgradeBeaconToAndCall(address newBeacon, bytes memory data) internal {\n        _setBeacon(newBeacon);\n        emit BeaconUpgraded(newBeacon);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n     * if an upgrade doesn't perform an initialization call.\n     */\n    function _checkNonPayable() private {\n        if (msg.value > 0) {\n            revert ERC1967NonPayable();\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error AddressInsufficientBalance(address account);\n\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedInnerCall();\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert AddressInsufficientBalance(address(this));\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert FailedInnerCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {FailedInnerCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert AddressInsufficientBalance(address(this));\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n     * unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {FailedInnerCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert FailedInnerCall();\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/ReentrancyGuard.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant NOT_ENTERED = 1;\n    uint256 private constant ENTERED = 2;\n\n    uint256 private _status;\n\n    /**\n     * @dev Unauthorized reentrant call.\n     */\n    error ReentrancyGuardReentrantCall();\n\n    constructor() {\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\n        if (_status == ENTERED) {\n            revert ReentrancyGuardReentrantCall();\n        }\n\n        // Any calls to nonReentrant after this point will fail\n        _status = ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == ENTERED;\n    }\n}\n"},"@openzeppelin/contracts/utils/StorageSlot.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n}\n"},"contracts/BaluniV1Pool.sol":{"content":"// SPDX-License-Identifier: GNU AGPLv3\r\npragma solidity 0.8.25;\r\n/**\r\n *  __                  __                      __\r\n * /  |                /  |                    /  |\r\n * $$ |____    ______  $$ | __    __  _______  $$/\r\n * $$      \\  /      \\ $$ |/  |  /  |/       \\ /  |\r\n * $$$$$$$  | $$$$$$  |$$ |$$ |  $$ |$$$$$$$  |$$ |\r\n * $$ |  $$ | /    $$ |$$ |$$ |  $$ |$$ |  $$ |$$ |\r\n * $$ |__$$ |/$$$$$$$ |$$ |$$ \\__$$ |$$ |  $$ |$$ |\r\n * $$    $$/ $$    $$ |$$ |$$    $$/ $$ |  $$ |$$ |\r\n * $$$$$$$/   $$$$$$$/ $$/  $$$$$$/  $$/   $$/ $$/\r\n *\r\n *\r\n *                  ,-\"\"\"\"-.\r\n *                ,'      _ `.\r\n *               /       )_)  \\\r\n *              :              :\r\n *              \\              /\r\n *               \\            /\r\n *                `.        ,'\r\n *                  `.    ,'\r\n *                    `.,'\r\n *                     /\\`.   ,-._\r\n *                         `-'    \\__\r\n *                              .\r\n *               s                \\\r\n *                                \\\\\r\n *                                 \\\\\r\n *                                  >\\/7\r\n *                              _.-(6'  \\\r\n *                             (=___._/` \\\r\n *                                  )  \\ |\r\n *                                 /   / |\r\n *                                /    > /\r\n *                               j    < _\\\r\n *                           _.-' :      ``.\r\n *                           \\ r=._\\        `.\r\n */\r\n\r\nimport '@openzeppelin/contracts/token/ERC20/ERC20.sol';\r\nimport '@openzeppelin/contracts/utils/ReentrancyGuard.sol';\r\n\r\nimport './interfaces/IBaluniV1PoolPeriphery.sol';\r\nimport './interfaces/IBaluniV1Registry.sol';\r\nimport './interfaces/IBaluniV1Rebalancer.sol';\r\nimport './interfaces/IBaluniV1Oracle.sol';\r\nimport './libs/DSMath.sol';\r\n\r\ncontract BaluniV1Pool is ERC20, ReentrancyGuard {\r\n    AssetInfo[] public assetInfos;\r\n    using DSMath for uint256;\r\n\r\n    uint256 public trigger;\r\n    uint256 public ONE;\r\n    address public baseAsset;\r\n    uint256 private scalingFactor;\r\n\r\n    IBaluniV1Registry public registry;\r\n\r\n    /// @notice WAD unit. Used to handle most numbers.\r\n    uint256 internal constant WAD = 10 ** 18;\r\n\r\n    /// @notice RAY unit. Used for rpow function.\r\n    uint256 internal constant RAY = 10 ** 27;\r\n\r\n    uint256 _slippageParamK = 0.00002e18; //2 * 10**13 == 0.00002 * WETH\r\n    uint256 _slippageParamN = 7; // 7\r\n    uint256 _c1 = 376927610599998308; // ((k**(1/(n+1))) / (n**((n)/(n+1)))) + (k*n)**(1/(n+1))\r\n    uint256 _xThreshold = 329811659274998519; // (k*n)**(1/(n+1))\r\n    uint256 _haircutRate = 0.0004e18; // 4 * 10**14 == 0.0004 == 0.04% for intra-aggregate account swap\r\n    uint256 _retentionRatio = 1e18; // 1\r\n    uint256 _maxPriceDeviation = 0.02e18; // 2 * 10**16 == 2% = 0.02 in ETH_UNIT.\r\n\r\n    struct AssetInfo {\r\n        address asset;\r\n        uint256 weight;\r\n        uint256 slippage; // Nuovo parametro per lo slippage\r\n    }\r\n\r\n    event RebalancePerformed(address indexed by, address[] assets);\r\n    event WeightsRebalanced(address indexed user, uint256[] amountsAdded);\r\n    event Burn(address indexed user, uint256 sharesBurned);\r\n    event Mint(address indexed to, uint256 sharesMinted);\r\n    event Swap(\r\n        address indexed user,\r\n        address indexed fromToken,\r\n        address indexed toToken,\r\n        uint256 amountIn,\r\n        uint256 amountOut\r\n    );\r\n\r\n    constructor(\r\n        address[] memory _assets,\r\n        uint256[] memory _weights,\r\n        uint256 _trigger,\r\n        address _registry\r\n    ) ERC20('Baluni LP', 'BALUNI-LP') {\r\n        registry = IBaluniV1Registry(_registry);\r\n\r\n        ONE = 1e18;\r\n\r\n        bool result = initializeAssets(_assets, _weights);\r\n        require(result, 'Initialization failed');\r\n\r\n        trigger = _trigger;\r\n\r\n        baseAsset = registry.getUSDC();\r\n\r\n        scalingFactor = 10 ** (18 - 6);\r\n\r\n        require(baseAsset != address(0), 'Invalid base asset address');\r\n\r\n        uint256 totalWeight = 0;\r\n\r\n        for (uint256 i = 0; i < _weights.length; i++) {\r\n            totalWeight += _weights[i];\r\n        }\r\n\r\n        require(totalWeight == 10000, 'Invalid weights');\r\n    }\r\n\r\n    modifier onlyPeriphery() {\r\n        address periphery = registry.getBaluniPoolPeriphery();\r\n        require(msg.sender == periphery, 'Only Periphery');\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Initializes the assets and their weights for the pool.\r\n     * @param _assets The array of asset addresses.\r\n     * @param _weights The array of weights corresponding to each asset.\r\n     */\r\n    function initializeAssets(address[] memory _assets, uint256[] memory _weights) internal returns (bool) {\r\n        address rebalancer = registry.getBaluniRebalancer();\r\n\r\n        require(registry.getBaluniRebalancer() != address(0), 'Invalid rebalancer address');\r\n        require(_assets.length == _weights.length, 'Assets and weights length mismatch');\r\n\r\n        for (uint256 i = 0; i < _assets.length; i++) {\r\n            require(_assets[i] != address(0), 'Invalid asset address');\r\n            require(_weights[i] > 0, 'Invalid weight');\r\n\r\n            assetInfos.push(\r\n                AssetInfo({\r\n                    asset: _assets[i],\r\n                    weight: _weights[i],\r\n                    slippage: 0 // Imposta slippage iniziale a 1%\r\n                })\r\n            );\r\n\r\n            IERC20 asset = IERC20(_assets[i]);\r\n            if (asset.allowance(address(this), address(rebalancer)) == 0) {\r\n                asset.approve(address(rebalancer), type(uint256).max);\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Rebalances the weights of the pool by calculating the amounts to add for each token,\r\n     * transferring the calculated amounts from the user to the pool, minting the total added liquidity,\r\n     * updating the reserves, and emitting an event to indicate the rebalancing of weights.\r\n     * @param receiver The address to receive the minted liquidity tokens.\r\n     */\r\n    function rebalanceWeights(address receiver) external onlyPeriphery returns (uint256[] memory) {\r\n        require(isRebalanceNeeded(), 'Rebalance not needed');\r\n        (uint256 totalValuation, uint256[] memory valuations) = _computeTotalValuation(); // 6dec\r\n\r\n        uint256[] memory amountsToAdd = _calculateAmountsToAdd(totalValuation, valuations); // 6dec\r\n        uint256 totalAddedLiquidity = _calculateTotalAddedLiquidity(amountsToAdd);\r\n\r\n        totalAddedLiquidity *= scalingFactor;\r\n\r\n        uint256[] memory amounts = new uint256[](assetInfos.length);\r\n\r\n        for (uint256 i = 0; i < amountsToAdd.length; i++) {\r\n            if (amountsToAdd[i] > 0) {\r\n                amounts[i] = _calculateLiquidity(i, amountsToAdd[i]);\r\n            }\r\n        }\r\n\r\n        _mint(receiver, totalAddedLiquidity);\r\n\r\n        // Aggiorna lo slippage in base ai nuovi pesi\r\n        updateSlippage();\r\n\r\n        emit WeightsRebalanced(msg.sender, amountsToAdd);\r\n\r\n        return amounts;\r\n    }\r\n\r\n    /**\r\n     * @dev Swaps `amount` of `fromToken` to `toToken` and transfers the received amount to `receiver`.\r\n     *\r\n     * Requirements:\r\n     * - `fromToken` and `toToken` must be different tokens.\r\n     * - `amount` must be greater than zero.\r\n     * - Sufficient liquidity of `toToken` must be available in the contract.\r\n     *\r\n     * Emits a `Swap` event with the details of the swap.\r\n     *\r\n     * Updates the reserves after the swap.\r\n     *\r\n     * @param fromToken The address of the token to swap from.\r\n     * @param toToken The address of the token to swap to.\r\n     * @param amount The amount of `fromToken` to swap.\r\n     * @param receiver The address to receive the swapped tokens.\r\n     * @return amountOut The amount of `toToken` received after the swap.\r\n     */\r\n    function swap(\r\n        address fromToken,\r\n        address toToken,\r\n        uint256 amount,\r\n        address receiver\r\n    ) external nonReentrant returns (uint256 amountOut) {\r\n        uint256 _BPS_FEE = registry.getBPS_FEE();\r\n        require(fromToken != toToken, 'Cannot swap the same token');\r\n        require(amount > 0, 'Amount must be greater than zero');\r\n        updateSlippage();\r\n        uint256 receivedAmount = getAmountOutWithSlippage(fromToken, toToken, amount);\r\n        require(getAssetReserve(toToken) >= receivedAmount, 'Insufficient Liquidity');\r\n\r\n        uint256 fee = (receivedAmount * _BPS_FEE) / 10000;\r\n        amountOut = receivedAmount - fee;\r\n\r\n        require(amountOut > 0, 'Amount to send must be greater than 0');\r\n\r\n        // Aggiorna lo slippage in base ai pesi degli asset coinvolti nello swap\r\n        updateSlippage();\r\n\r\n        emit Swap(receiver, fromToken, toToken, amount, amountOut);\r\n\r\n        return amountOut;\r\n    }\r\n    /**\r\n     * @dev Calcola l'importo effettivo di `toToken` ricevuto tenendo conto dello slippage.\r\n     * @param fromToken The address of the token being swapped from.\r\n     * @param toToken The address of the token being swapped to.\r\n     * @param amount The amount of `fromToken` being swapped.\r\n     * @return The amount of `toToken` received after applying slippage.\r\n     */\r\n    function getAmountOutWithSlippage(\r\n        address fromToken,\r\n        address toToken,\r\n        uint256 amount\r\n    ) public view returns (uint256) {\r\n        uint256 amountOut = getAmountOut(fromToken, toToken, amount);\r\n\r\n        //uint256 slippageFrom = getSlippage(fromToken);\r\n        //uint256 slippageTo = getSlippage(toToken);\r\n\r\n        address to = toToken;\r\n        address from = fromToken;\r\n\r\n        uint256 totalValuation;\r\n        uint256[] memory valuations;\r\n        (totalValuation, valuations) = _computeTotalValuation();\r\n        uint256 toTokenWeightVaulation = (getTokenWeight(to) * totalValuation) / 10000;\r\n        uint256 toTokenWeightActualVaulation = (getTokenWeight(to) * totalValuation) / 10000;\r\n\r\n        uint a = amount;\r\n        uint256 slippageTo = _slippage(\r\n            _slippageParamK,\r\n            _slippageParamN,\r\n            _c1,\r\n            _xThreshold,\r\n            toTokenWeightVaulation,\r\n            toTokenWeightActualVaulation,\r\n            a,\r\n            false\r\n        );\r\n        uint256 fromTokenWeightVaulation = (getTokenWeight(from) * totalValuation) / 10000;\r\n        uint256 fromTokenWeightActualVaulation = (getTokenWeight(from) * totalValuation) / 10000;\r\n\r\n        uint256 slippageFrom = _slippage(\r\n            _slippageParamK,\r\n            _slippageParamN,\r\n            _c1,\r\n            _xThreshold,\r\n            fromTokenWeightVaulation,\r\n            fromTokenWeightActualVaulation,\r\n            a,\r\n            true\r\n        );\r\n\r\n        uint256 swappingSlippage = _swappingSlippage(slippageFrom, slippageTo);\r\n        uint256 toAmount = a.wmul(swappingSlippage);\r\n\r\n        return toAmount;\r\n    }\r\n\r\n    function getTokenWeight(address token) public view returns (uint256) {\r\n        for (uint256 i = 0; i < assetInfos.length; i++) {\r\n            if (assetInfos[i].asset == token) {\r\n                return assetInfos[i].weight;\r\n            }\r\n        }\r\n        return 0; // Default weight se non trovato\r\n    }\r\n\r\n    function _slippage(\r\n        uint256 k,\r\n        uint256 n,\r\n        uint256 c1,\r\n        uint256 xThreshold,\r\n        uint256 cash,\r\n        uint256 liability,\r\n        uint256 cashChange,\r\n        bool addCash\r\n    ) internal pure returns (uint256) {\r\n        uint256 covBefore = cash.wdiv(liability);\r\n        uint256 covAfter;\r\n        if (addCash) {\r\n            covAfter = (cash + cashChange).wdiv(liability);\r\n        } else {\r\n            covAfter = (cash - cashChange).wdiv(liability);\r\n        }\r\n\r\n        // if cov stays unchanged, slippage is 0\r\n        if (covBefore == covAfter) {\r\n            return 0;\r\n        }\r\n\r\n        uint256 slippageBefore = _slippageFunc(k, n, c1, xThreshold, covBefore);\r\n        uint256 slippageAfter = _slippageFunc(k, n, c1, xThreshold, covAfter);\r\n\r\n        if (covBefore > covAfter) {\r\n            return (slippageAfter - slippageBefore).wdiv(covBefore - covAfter);\r\n        } else {\r\n            return (slippageBefore - slippageAfter).wdiv(covAfter - covBefore);\r\n        }\r\n    }\r\n\r\n    function _slippageFunc(\r\n        uint256 k,\r\n        uint256 n,\r\n        uint256 c1,\r\n        uint256 xThreshold,\r\n        uint256 x\r\n    ) internal pure returns (uint256) {\r\n        if (x < xThreshold) {\r\n            return c1 - x;\r\n        } else {\r\n            return k.wdiv((((x * RAY) / WAD).rpow(n) * WAD) / RAY); // k / (x ** n)\r\n        }\r\n    }\r\n\r\n    function _swappingSlippage(uint256 si, uint256 sj) internal pure returns (uint256) {\r\n        return WAD + si - sj;\r\n    }\r\n    /**\r\n     * @dev Restituisce lo slippage attuale per un dato token.\r\n     * @param token The address of the token.\r\n     * @return Lo slippage attuale per il token.\r\n     */\r\n    function getSlippage(address token) public view returns (uint256) {\r\n        for (uint256 i = 0; i < assetInfos.length; i++) {\r\n            if (assetInfos[i].asset == token) {\r\n                return assetInfos[i].slippage;\r\n            }\r\n        }\r\n        return 0; // Default slippage se non trovato\r\n    }\r\n\r\n    /**\r\n     * @dev Funzione per aggiornare lo slippage in base ai pesi degli asset.\r\n     */\r\n    function updateSlippage() internal {\r\n        (bool[] memory directions, uint256[] memory deviations) = getDeviation();\r\n\r\n        for (uint256 i = 0; i < assetInfos.length; i++) {\r\n            uint256 previousSlippage = assetInfos[i].slippage;\r\n\r\n            if (directions[i]) {\r\n                // Aumenta lo slippage se il peso dell'asset è aumentato\r\n                assetInfos[i].slippage += deviations[i];\r\n                // Verifica che non ci sia overflow\r\n                require(assetInfos[i].slippage >= previousSlippage, 'Overflow incrementing slippage');\r\n            } else {\r\n                // Diminuisce lo slippage se il peso dell'asset è diminuito\r\n                if (assetInfos[i].slippage > deviations[i]) {\r\n                    assetInfos[i].slippage -= deviations[i];\r\n                    // Verifica che non ci sia underflow\r\n                    require(assetInfos[i].slippage <= previousSlippage, 'Underflow decrementing slippage');\r\n                } else {\r\n                    assetInfos[i].slippage = 0; // Evita lo slippage negativo\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    function getSlippages() external view returns (uint256[] memory) {\r\n        uint256[] memory slippages = new uint256[](assetInfos.length);\r\n        for (uint256 i = 0; i < assetInfos.length; i++) {\r\n            slippages[i] = assetInfos[i].slippage;\r\n        }\r\n        return slippages;\r\n    }\r\n\r\n    /**\r\n     * @dev Mints new tokens and adds them to the specified address.\r\n     * @param to The address to which the new tokens will be minted.\r\n     * @return The amount of tokens minted.\r\n     */\r\n    function mint(address to, uint256[] memory amounts) external onlyPeriphery returns (uint256) {\r\n        uint256 totalSupply = totalSupply();\r\n        uint256 totalValue = 0;\r\n        uint256[] memory _reserves = getReserves();\r\n        require(assetInfos.length == _reserves.length, 'Invalid reserves length');\r\n        require(assetInfos.length > 0, 'No assets');\r\n\r\n        for (uint256 i = 0; i < assetInfos.length; i++) {\r\n            address asset = assetInfos[i].asset;\r\n            uint256 valuation;\r\n            if (asset == baseAsset) {\r\n                valuation = amounts[i];\r\n                continue;\r\n            }\r\n            valuation = _convertTokenToBase(asset, amounts[i]);\r\n            totalValue += valuation;\r\n        }\r\n\r\n        require(totalValue > 0, 'Total value must be greater than 0');\r\n\r\n        uint256 toMint;\r\n\r\n        if (totalSupply == 0) {\r\n            toMint = totalValue * scalingFactor;\r\n        } else {\r\n            (uint256 totalLiquidity, ) = _computeTotalValuation();\r\n            require(totalLiquidity > 0, 'Total liquidity must be greater than 0');\r\n            toMint = ((totalValue * scalingFactor) * totalSupply) / (totalLiquidity * scalingFactor);\r\n        }\r\n        require(toMint != 0, 'Mint qty is 0');\r\n\r\n        _mint(to, toMint);\r\n\r\n        updateSlippage();\r\n\r\n        emit Mint(to, toMint);\r\n\r\n        return toMint;\r\n    }\r\n\r\n    /**\r\n     * @dev Burns the pool tokens and transfers the underlying assets to the specified address.\r\n     * @param to The address to transfer the underlying assets to.\r\n     * @notice This function can only be called by the periphery contract.\r\n     * @notice The pool tokens must have a balance greater than 0.\r\n     * @notice The total supply of pool tokens must be greater than 0.\r\n     * @notice The function calculates the amounts of each underlying asset to transfer based on the share of pool tokens being burned.\r\n     * @notice A fee is deducted from the share of pool tokens being burned and transferred to the treasury address.\r\n     * @notice The function checks if the pool has sufficient liquidity before performing any transfers.\r\n     * @notice If any transfer fails, the function reverts the entire operation.\r\n     * @notice After the transfers, the function updates the reserves of the pool.\r\n     * @notice Emits a `Burn` event with the address and share of pool tokens burned.\r\n     */\r\n    function burn(address to) external onlyPeriphery returns (uint256[] memory) {\r\n        uint256 _BPS_FEE = registry.getBPS_FEE();\r\n        address periphery = registry.getBaluniPoolPeriphery();\r\n\r\n        uint256 share = balanceOf(address(this));\r\n        require(share > 0, 'Share must be greater than 0');\r\n\r\n        uint256 totalSupply = totalSupply();\r\n        require(totalSupply > 0, 'No liquidity');\r\n\r\n        uint256[] memory amounts = new uint256[](assetInfos.length);\r\n        uint256 fee = (share * _BPS_FEE) / 10000;\r\n        uint256 shareAfterFee = share - fee;\r\n\r\n        for (uint256 i = 0; i < assetInfos.length; i++) {\r\n            uint256 assetBalance = IBaluniV1PoolPeriphery(periphery).getAssetReserve(\r\n                address(this),\r\n                assetInfos[i].asset\r\n            );\r\n            amounts[i] = (assetBalance * shareAfterFee) / totalSupply;\r\n        }\r\n\r\n        require(balanceOf(address(this)) >= shareAfterFee, 'Insufficient BALUNI liquidity');\r\n\r\n        address treasury = registry.getTreasury();\r\n        bool feeTransferSuccess = IERC20(address(this)).transfer(treasury, fee);\r\n        require(feeTransferSuccess, 'Fee transfer failed');\r\n\r\n        _burn(address(this), shareAfterFee);\r\n\r\n        updateSlippage();\r\n\r\n        emit Burn(to, shareAfterFee);\r\n\r\n        return amounts;\r\n    }\r\n\r\n    /**\r\n     * @dev Calculates the amount of `toToken` that will be received when swapping `fromToken` for `toToken`.\r\n     * @param fromToken The address of the token being swapped from.\r\n     * @param toToken The address of the token being swapped to.\r\n     * @param amount The amount of `fromToken` being swapped.\r\n     * @return The amount of `toToken` that will be received.\r\n     */\r\n    function getAmountOut(address fromToken, address toToken, uint256 amount) public view returns (uint256) {\r\n        IBaluniV1Oracle baluniOracle = IBaluniV1Oracle(registry.getBaluniOracle());\r\n        require(registry.getBaluniOracle() != address(0), 'Invalid oracle address');\r\n        uint256 amountOut = baluniOracle.convert(fromToken, toToken, amount);\r\n        return amountOut;\r\n    }\r\n\r\n    /**\r\n     * @dev Performs rebalance\r\n     */\r\n    function performRebalanceIfNeeded()\r\n        external\r\n        onlyPeriphery\r\n        returns (uint256[] memory amountsToAdd, uint256[] memory amountsToRemove)\r\n    {\r\n        require(isRebalanceNeeded(), 'Rebalance not needed');\r\n        return _performRebalanceIfNeeded();\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the deviation between the current weights and target weights of the assets in the pool.\r\n     * @return directions An array of boolean values indicating whether the current weight is higher (true) or lower (false) than the target weight.\r\n     */\r\n    function getDeviation() public view returns (bool[] memory directions, uint256[] memory deviations) {\r\n        (uint256 totVal, uint256[] memory valuations) = _computeTotalValuation();\r\n        uint256 numAssets = assetInfos.length;\r\n\r\n        directions = new bool[](numAssets);\r\n        deviations = new uint256[](numAssets);\r\n\r\n        for (uint256 i = 0; i < numAssets; i++) {\r\n            uint256 currentWeight = (valuations[i] * 10000) / totVal;\r\n            uint256 targetWeight = assetInfos[i].weight;\r\n\r\n            if (currentWeight > targetWeight) {\r\n                deviations[i] = currentWeight - targetWeight;\r\n                directions[i] = true;\r\n            } else {\r\n                deviations[i] = targetWeight - currentWeight;\r\n                directions[i] = false;\r\n            }\r\n        }\r\n\r\n        return (directions, deviations);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the liquidity of a specific asset in the pool.\r\n     * @param assetIndex The index of the asset.\r\n     * @return The liquidity of the asset.\r\n     */\r\n    function assetLiquidity(uint256 assetIndex) external view returns (uint256) {\r\n        (, uint256[] memory usdValuations) = _computeTotalValuation();\r\n        require(assetIndex < usdValuations.length, 'Invalid asset index');\r\n        return usdValuations[assetIndex];\r\n    }\r\n\r\n    /**\r\n     * @dev Computes the total valuation of the pool and returns the total valuation and an array of individual valuations.\r\n     * @return totalVal The total valuation of the pool.\r\n     * @return valuations An array of individual valuations.\r\n     */\r\n    function computeTotalValuation() external view returns (uint256 totalVal, uint256[] memory valuations) {\r\n        (totalVal, valuations) = _computeTotalValuation();\r\n        return (totalVal, valuations);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the total liquidity of the pool.\r\n     * @return The total liquidity of the pool.\r\n     */\r\n    function liquidity() external view returns (uint256) {\r\n        (uint256 totalVal, ) = _computeTotalValuation();\r\n        return totalVal;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the unit price of the pool.\r\n     * @return The unit price of the pool.\r\n     */\r\n    function unitPrice() external view returns (uint256) {\r\n        uint256 baseDecimal = IERC20Metadata(baseAsset).decimals();\r\n        uint256 factor = 10 ** (18 - baseDecimal);\r\n        (uint256 totalVal, ) = _computeTotalValuation();\r\n        uint256 totalSupply = totalSupply();\r\n        if (totalSupply == 0) {\r\n            return 0;\r\n        }\r\n        return (((totalVal * factor) / totalSupply) * ONE);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns an array of reserves for each asset in the pool.\r\n     * @return An array of reserves.\r\n     */\r\n    function getReserves() public view returns (uint256[] memory) {\r\n        address periphery = registry.getBaluniPoolPeriphery();\r\n        return IBaluniV1PoolPeriphery(periphery).getReserves(address(this));\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the reserve amount of the specified asset.\r\n     * @param asset The address of the asset.\r\n     * @return The reserve amount of the asset.\r\n     */\r\n    function getAssetReserve(address asset) public view returns (uint256) {\r\n        address periphery = registry.getBaluniPoolPeriphery();\r\n        return IBaluniV1PoolPeriphery(periphery).getAssetReserve(address(this), asset);\r\n    }\r\n\r\n    /**\r\n     * @dev Retrieves the list of assets in the pool.\r\n     * @return An array of addresses representing the assets.\r\n     */\r\n    function getAssets() external view returns (address[] memory) {\r\n        address[] memory assets = new address[](assetInfos.length);\r\n        for (uint256 i = 0; i < assetInfos.length; i++) {\r\n            assets[i] = assetInfos[i].asset;\r\n        }\r\n        return assets;\r\n    }\r\n\r\n    /**\r\n     * @dev Retrieves the list of weights associated with the assets in the pool.\r\n     * @return An array of uint256 values representing the weights.\r\n     */\r\n    function getWeights() external view returns (uint256[] memory) {\r\n        uint256[] memory weights = new uint256[](assetInfos.length);\r\n        for (uint256 i = 0; i < assetInfos.length; i++) {\r\n            weights[i] = assetInfos[i].weight;\r\n        }\r\n        return weights;\r\n    }\r\n\r\n    /**\r\n     * @dev Computes the total valuation of the assets in the pool.\r\n     * @return totalValuation The total valuation of the assets.\r\n     * @return valuations An array of valuations for each asset in the pool.\r\n     */\r\n    function _computeTotalValuation() internal view returns (uint256 totalValuation, uint256[] memory valuations) {\r\n        uint256 numAssets = assetInfos.length;\r\n        valuations = new uint256[](numAssets);\r\n        for (uint256 i = 0; i < numAssets; i++) {\r\n            address asset = assetInfos[i].asset;\r\n            uint256 assetReserve = getAssetReserve(address(asset));\r\n\r\n            if ((address(asset) == baseAsset)) {\r\n                valuations[i] = assetReserve;\r\n            } else {\r\n                uint256 valuation = _convertTokenToBase(address(asset), assetReserve);\r\n                valuations[i] = valuation;\r\n            }\r\n            totalValuation += valuations[i];\r\n        }\r\n        return (totalValuation, valuations);\r\n    }\r\n\r\n    /**\r\n     * @dev Performs rebalance if needed.\r\n     * This function retrieves the assets and weights from the `assetInfos` array,\r\n     * and calls the `rebalance` function of the `rebalancer` contract with the retrieved values.\r\n     * It emits a `RebalancePerformed` event after the rebalance is performed.\r\n     * @notice This function should only be called internally.\r\n     */\r\n    function _performRebalanceIfNeeded() internal returns (uint256[] memory, uint256[] memory) {\r\n        address periphery = registry.getBaluniPoolPeriphery();\r\n        address rebalancer = registry.getBaluniRebalancer();\r\n\r\n        address[] memory assets = new address[](assetInfos.length);\r\n        uint256[] memory weights = new uint256[](assetInfos.length);\r\n        uint256[] memory peripheryBalancesB4 = new uint256[](assetInfos.length);\r\n        uint256[] memory peripheryBalancesAfter = new uint256[](assetInfos.length);\r\n        uint256[] memory amountsToAdd = new uint256[](assetInfos.length);\r\n        uint256[] memory amountsToRemove = new uint256[](assetInfos.length);\r\n\r\n        for (uint256 i = 0; i < assetInfos.length; i++) {\r\n            assets[i] = assetInfos[i].asset;\r\n            weights[i] = assetInfos[i].weight;\r\n            peripheryBalancesB4[i] = IERC20(assets[i]).balanceOf(periphery);\r\n        }\r\n\r\n        uint256[] memory balances = getReserves();\r\n\r\n        IBaluniV1Rebalancer(rebalancer).rebalance(balances, assets, weights, trigger, periphery, periphery, baseAsset);\r\n\r\n        for (uint256 i = 0; i < assetInfos.length; i++) {\r\n            peripheryBalancesAfter[i] = IERC20(assets[i]).balanceOf(periphery);\r\n\r\n            if (peripheryBalancesAfter[i] > peripheryBalancesB4[i]) {\r\n                amountsToAdd[i] = peripheryBalancesAfter[i] - peripheryBalancesB4[i];\r\n            } else {\r\n                amountsToRemove[i] = peripheryBalancesB4[i] - peripheryBalancesAfter[i];\r\n            }\r\n        }\r\n\r\n        emit RebalancePerformed(msg.sender, assets);\r\n\r\n        return (amountsToAdd, amountsToRemove);\r\n    }\r\n\r\n    /**\r\n     * @dev Calculates the total added liquidity based on the amounts to add.\r\n     * @param amountsToAdd An array of amounts to add for each asset.\r\n     * @return totalAddedLiquidity The total added liquidity.\r\n     */\r\n    function _calculateTotalAddedLiquidity(\r\n        uint256[] memory amountsToAdd\r\n    ) internal view returns (uint256 totalAddedLiquidity) {\r\n        for (uint256 i = 0; i < assetInfos.length; i++) {\r\n            totalAddedLiquidity += amountsToAdd[i];\r\n        }\r\n        return totalAddedLiquidity;\r\n    }\r\n\r\n    /**\r\n     * @dev Calculates the amounts to add to each asset based on the total valuation and current valuations.\r\n     * @param totalValuation The total valuation of the pool.\r\n     * @param valuations An array of current valuations for each asset.\r\n     * @return amountsToAdd An array of amounts to add to each asset.\r\n     */\r\n    function _calculateAmountsToAdd(\r\n        uint256 totalValuation,\r\n        uint256[] memory valuations\r\n    ) internal view returns (uint256[] memory amountsToAdd) {\r\n        amountsToAdd = new uint256[](assetInfos.length);\r\n        for (uint256 i = 0; i < assetInfos.length; i++) {\r\n            uint256 targetValuation = (totalValuation * assetInfos[i].weight) / 10000;\r\n            if (valuations[i] < targetValuation) {\r\n                amountsToAdd[i] = targetValuation - valuations[i];\r\n            }\r\n        }\r\n\r\n        return amountsToAdd;\r\n    }\r\n\r\n    /**\r\n     * @dev Internal function to transfer tokens from the caller to the contract and calculate the liquidity.\r\n     * @param index The index of the asset in the assetInfos array.\r\n     * @param amountToAdd The amount of native tokens to add as liquidity.\r\n     */\r\n    function _calculateLiquidity(uint256 index, uint256 amountToAdd) internal view returns (uint256) {\r\n        if (assetInfos[index].asset == baseAsset) return amountToAdd;\r\n        uint256 tokenAmount = _convertBaseToToken(assetInfos[index].asset, amountToAdd);\r\n        require(tokenAmount > 0, 'Invalid token amount to add');\r\n        return tokenAmount;\r\n    }\r\n\r\n    /**\r\n     * @dev Converts the specified amount of native token to the corresponding token amount.\r\n     * @param toToken The address of the native token to convert from.\r\n     * @param amount The amount of native token to convert.\r\n     * @return The corresponding token amount.\r\n     */\r\n    function _convertBaseToToken(address toToken, uint256 amount) internal view returns (uint256) {\r\n        return getAmountOut(baseAsset, toToken, amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Converts the specified token to the native token using the rebalancer contract.\r\n     * @param fromToken The address of the token to convert from.\r\n     * @param amount The amount of tokens to convert.\r\n     * @return tokenAmount The converted amount of tokens.\r\n     */\r\n    function _convertTokenToBase(address fromToken, uint256 amount) internal view returns (uint256 tokenAmount) {\r\n        return getAmountOut(fromToken, baseAsset, amount);\r\n    }\r\n\r\n    // return true if one of the deviation overcome the trigger\r\n    /**\r\n     * @dev Checks if rebalancing is needed for the pool.\r\n     * @return A boolean value indicating whether rebalancing is needed or not.\r\n     */\r\n    function isRebalanceNeeded() public view returns (bool) {\r\n        (bool[] memory directions, uint256[] memory deviations) = getDeviation();\r\n        for (uint256 i = 0; i < deviations.length; i++) {\r\n            if (directions[i] && deviations[i] > trigger) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n}\r\n"},"contracts/BaluniV1PoolFactory.sol":{"content":"// SPDX-License-Identifier: GNU AGPLv3\r\npragma solidity 0.8.25;\r\n/**\r\n *  __                  __                      __\r\n * /  |                /  |                    /  |\r\n * $$ |____    ______  $$ | __    __  _______  $$/\r\n * $$      \\  /      \\ $$ |/  |  /  |/       \\ /  |\r\n * $$$$$$$  | $$$$$$  |$$ |$$ |  $$ |$$$$$$$  |$$ |\r\n * $$ |  $$ | /    $$ |$$ |$$ |  $$ |$$ |  $$ |$$ |\r\n * $$ |__$$ |/$$$$$$$ |$$ |$$ \\__$$ |$$ |  $$ |$$ |\r\n * $$    $$/ $$    $$ |$$ |$$    $$/ $$ |  $$ |$$ |\r\n * $$$$$$$/   $$$$$$$/ $$/  $$$$$$/  $$/   $$/ $$/\r\n *\r\n *\r\n *                  ,-\"\"\"\"-.\r\n *                ,'      _ `.\r\n *               /       )_)  \\\r\n *              :              :\r\n *              \\              /\r\n *               \\            /\r\n *                `.        ,'\r\n *                  `.    ,'\r\n *                    `.,'\r\n *                     /\\`.   ,-._\r\n *                         `-'    \\__\r\n *                              .\r\n *               s                \\\r\n *                                \\\\\r\n *                                 \\\\\r\n *                                  >\\/7\r\n *                              _.-(6'  \\\r\n *                             (=___._/` \\\r\n *                                  )  \\ |\r\n *                                 /   / |\r\n *                                /    > /\r\n *                               j    < _\\\r\n *                           _.-' :      ``.\r\n *                           \\ r=._\\        `.\r\n */\r\nimport './BaluniV1Pool.sol';\r\nimport '@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol';\r\nimport '@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol';\r\nimport '@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol';\r\nimport './interfaces/IBaluniV1Registry.sol';\r\n\r\ncontract BaluniV1PoolFactory is Initializable, UUPSUpgradeable, OwnableUpgradeable {\r\n    address[] public allPools;\r\n\r\n    IBaluniV1Registry public registry;\r\n\r\n    mapping(address => mapping(address => address)) public getPool;\r\n\r\n    event PoolCreated(address indexed pool, address[] assets);\r\n\r\n    function initialize(address _register) public initializer {\r\n        __UUPSUpgradeable_init();\r\n        __Ownable_init(msg.sender);\r\n        registry = IBaluniV1Registry(_register);\r\n    }\r\n\r\n    function reinitialize(address _register, uint64 _version) public reinitializer(_version) {\r\n        registry = IBaluniV1Registry(_register);\r\n    }\r\n\r\n    function _authorizeUpgrade(address newImplementation) internal override onlyOwner {}\r\n\r\n    /**\r\n     * @dev Creates a new BaluniV1Pool contract and registers it in the factory.\r\n     * @param assets The array of asset addresses to be included in the pool.\r\n     * @param weights The array of weights corresponding to each asset in the pool.\r\n     * @param trigger The trigger value for rebalancing the pool.\r\n     * @return The address of the newly created pool.\r\n     */\r\n    function createPool(address[] memory assets, uint256[] memory weights, uint256 trigger) external returns (address) {\r\n        require(assets.length > 1, 'At least two assets are required');\r\n        require(assets.length == weights.length, 'Assets and weights length mismatch');\r\n\r\n        for (uint256 i = 0; i < assets.length; i++) {\r\n            for (uint256 j = i + 1; j < assets.length; j++) {\r\n                require(address(getPool[assets[i]][assets[j]]) == address(0), 'Pool already exists for this pair');\r\n            }\r\n        }\r\n\r\n        BaluniV1Pool newPool = new BaluniV1Pool(assets, weights, trigger, address(registry));\r\n\r\n        address poolAddress = address(newPool);\r\n\r\n        allPools.push(poolAddress);\r\n        for (uint256 i = 0; i < assets.length; i++) {\r\n            for (uint256 j = i + 1; j < assets.length; j++) {\r\n                getPool[assets[i]][assets[j]] = poolAddress;\r\n                getPool[assets[j]][assets[i]] = poolAddress;\r\n            }\r\n        }\r\n\r\n        emit PoolCreated(poolAddress, assets);\r\n\r\n        return poolAddress;\r\n    }\r\n\r\n    /**\r\n     * @dev Retrieves all the pools created by the factory.\r\n     * @return An array of pool addresses.\r\n     */\r\n    function getAllPools() external view returns (address[] memory) {\r\n        return allPools;\r\n    }\r\n\r\n    /**\r\n     * @dev Retrieves the number of pools created by the factory.\r\n     * @return The count of pools.\r\n     */\r\n    function getPoolsCount() external view returns (uint256) {\r\n        return allPools.length;\r\n    }\r\n\r\n    /**\r\n     * @dev Retrieves the assets of a specific pool.\r\n     * @param poolAddress The address of the pool.\r\n     * @return An array of asset addresses.\r\n     */\r\n    function getPoolAssets(address poolAddress) external view returns (address[] memory) {\r\n        BaluniV1Pool pool = BaluniV1Pool(poolAddress);\r\n        return pool.getAssets();\r\n    }\r\n\r\n    /**\r\n     * @dev Retrieves the pool address based on the given assets.\r\n     * @param asset1 The address of the first asset.\r\n     * @param asset2 The address of the second asset.\r\n     * @return The address of the pool.\r\n     */\r\n    function getPoolByAssets(address asset1, address asset2) external view returns (address) {\r\n        return address(getPool[asset1][asset2]);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns an array of pool addresses that contain the specified token.\r\n     * @param token The address of the token to search for.\r\n     * @return An array of pool addresses.\r\n     */\r\n    function getPoolsByAsset(address token) external view returns (address[] memory) {\r\n        address[] memory pools = new address[](allPools.length);\r\n        uint256 count = 0;\r\n\r\n        for (uint256 i = 0; i < allPools.length; i++) {\r\n            BaluniV1Pool pool = BaluniV1Pool(allPools[i]);\r\n            address[] memory assets = pool.getAssets();\r\n\r\n            for (uint256 j = 0; j < assets.length; j++) {\r\n                if (assets[j] == token) {\r\n                    pools[count] = address(pool);\r\n                    count++;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (count == pools.length) {\r\n                break;\r\n            }\r\n        }\r\n\r\n        address[] memory result = new address[](count);\r\n        for (uint256 i = 0; i < count; i++) {\r\n            result[i] = pools[i];\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    function poolExist(address _pool) external view returns (bool) {\r\n        for (uint256 i = 0; i < allPools.length; i++) {\r\n            if (allPools[i] == _pool) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n}\r\n"},"contracts/interfaces/IBaluniV1Oracle.sol":{"content":"// SPDX-License-Identifier: GNU AGPLv3\r\npragma solidity 0.8.25;\r\n\r\ninterface IBaluniV1Oracle {\r\n    function convert(address fromToken, address toToken, uint256 amount) external view returns (uint256 valuation);\r\n\r\n    function convertScaled(\r\n        address fromToken,\r\n        address toToken,\r\n        uint256 amount\r\n    ) external view returns (uint256 valuation);\r\n}\r\n"},"contracts/interfaces/IBaluniV1PoolPeriphery.sol":{"content":"// SPDX-License-Identifier: GNU AGPLv3\r\npragma solidity 0.8.25;\r\n\r\n/**\r\n * @title IBaluniV1PoolPeriphery\r\n * @dev Interface for the BaluniV1PoolPeriphery contract.\r\n */\r\ninterface IBaluniV1PoolPeriphery {\r\n    /**\r\n     * @dev Swaps tokens in a BaluniV1Pool.\r\n     * @param fromToken The address of the token to swap from.\r\n     * @param toToken The address of the token to swap to.\r\n     * @param amount The amount of tokens to swap.\r\n     * @param receiver The address of the receiver.\r\n     * @return The amount of tokens received after the swap.\r\n     */\r\n    function swap(address fromToken, address toToken, uint256 amount, address receiver) external returns (uint256);\r\n\r\n    /**\r\n     * @dev Performs batch swaps between multiple token pairs.\r\n     * @param fromTokens An array of addresses representing the tokens to swap from.\r\n     * @param toTokens An array of addresses representing the tokens to swap to.\r\n     * @param amounts An array of amounts representing the amounts to swap.\r\n     * @param receivers An array of addresses representing the receivers of the swapped tokens.\r\n     * @return An array of amounts representing the amounts of tokens received after the swaps.\r\n     */\r\n    function batchSwap(\r\n        address[] calldata fromTokens,\r\n        address[] calldata toTokens,\r\n        uint256[] calldata amounts,\r\n        address[] calldata receivers\r\n    ) external returns (uint256[] memory);\r\n\r\n    /**\r\n     * @dev Rebalances weights in a pool.\r\n     * @param poolAddress The address of the pool.\r\n     * @param receiver The address of the receiver.\r\n     */\r\n    function rebalanceWeights(address poolAddress, address receiver) external;\r\n\r\n    /**\r\n     * @dev Adds liquidity to a BaluniV1Pool.\r\n     * @param amounts An array of amounts for each asset to add as liquidity.\r\n     * @param poolAddress The address of the pool.\r\n     * @param receiver The address of the receiver.\r\n     */\r\n    function addLiquidity(uint256[] memory amounts, address poolAddress, address receiver) external returns (uint256);\r\n\r\n    /**\r\n     * @dev Removes liquidity from a BaluniV1Pool.\r\n     * @param share The amount of liquidity tokens to remove.\r\n     * @param poolAddress The address of the pool.\r\n     * @param receiver The address of the receiver.\r\n     */\r\n    function removeLiquidity(uint256 share, address poolAddress, address receiver) external;\r\n\r\n    /**\r\n     * @dev Gets the amount of tokens received after a swap in a BaluniV1Pool.\r\n     * @param fromToken The address of the token to swap from.\r\n     * @param toToken The address of the token to swap to.\r\n     * @param amount The amount of tokens to swap.\r\n     * @return The amount of tokens received after the swap.\r\n     */\r\n    function getAmountOut(address fromToken, address toToken, uint256 amount) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Performs rebalance if needed for the given tokens.\r\n     * @param poolAddress The address of the token pool to rebalance.\r\n     */\r\n    function performRebalanceIfNeeded(address poolAddress) external;\r\n\r\n    /**\r\n     * @dev Returns an array of pool addresses that contain the given token.\r\n     * @param token The address of the token to search for.\r\n     * @return An array of pool addresses.\r\n     */\r\n    function getPoolsContainingToken(address token) external view returns (address[] memory);\r\n\r\n    /**\r\n     * @dev Returns the version of the contract.\r\n     * @return The version string.\r\n     */\r\n    function getVersion() external view returns (uint64);\r\n\r\n    /**\r\n     * @dev Returns the reserves of the pool.\r\n     * @param pool The address of the pool.\r\n     * @return An array of reserves.\r\n     */\r\n    function getReserves(address pool) external view returns (uint256[] memory);\r\n\r\n    /**\r\n     * @dev Returns the reserve of a specific asset in a pool.\r\n     * @param pool The address of the pool.\r\n     * @param asset The address of the asset.\r\n     * @return The reserve of the asset.\r\n     */\r\n    function getAssetReserve(address pool, address asset) external view returns (uint256);\r\n}\r\n"},"contracts/interfaces/IBaluniV1Rebalancer.sol":{"content":"// SPDX-License-Identifier: GNU AGPLv3\r\npragma solidity 0.8.25;\r\n\r\ninterface IBaluniV1Rebalancer {\r\n    struct RebalanceVars {\r\n        uint256 length;\r\n        uint256 totalValue;\r\n        uint256 finalUsdBalance;\r\n        uint256 overweightVaultsLength;\r\n        uint256 underweightVaultsLength;\r\n        uint256 totalActiveWeight;\r\n        uint256 amountOut;\r\n        uint256[] overweightVaults;\r\n        uint256[] overweightAmounts;\r\n        uint256[] underweightVaults;\r\n        uint256[] underweightAmounts;\r\n        uint256[] balances;\r\n    }\r\n\r\n    // Functions\r\n    function rebalance(\r\n        uint256[] memory balances,\r\n        address[] calldata assets,\r\n        uint256[] calldata weights,\r\n        uint256 limit,\r\n        address sender,\r\n        address receiver,\r\n        address baseAsset\r\n    ) external;\r\n\r\n    function checkRebalance(\r\n        uint256[] memory balances,\r\n        address[] calldata assets,\r\n        uint256[] calldata weights,\r\n        uint256 limit,\r\n        address sender,\r\n        address baseAsset\r\n    ) external view returns (RebalanceVars memory);\r\n\r\n    function convert(address fromToken, address toToken, uint256 amount) external view returns (uint256);\r\n}\r\n"},"contracts/interfaces/IBaluniV1Registry.sol":{"content":"// SPDX-License-Identifier: GNU AGPLv3\r\npragma solidity 0.8.25;\r\n\r\n/**\r\n * @title IBaluniV1Registry\r\n * @dev Interface for the BaluniV1Registry contract.\r\n */\r\ninterface IBaluniV1Registry {\r\n    function setUniswapFactory(address _uniswapFactory) external;\r\n\r\n    function setUniswapRouter(address _uniswapRouter) external;\r\n\r\n    function setBaluniAgentFactory(address _baluniAgentFactory) external;\r\n\r\n    function setBaluniPoolPeriphery(address _baluniPoolPeriphery) external;\r\n\r\n    function setBaluniSwapper(address _baluniSwapper) external;\r\n\r\n    function setBaluniOracle(address _baluniOracle) external;\r\n\r\n    function setBaluniPoolFactory(address _baluniPoolFactory) external;\r\n\r\n    function setBaluniRebalancer(address _baluniRebalancer) external;\r\n\r\n    function setBaluniRouter(address _baluniRouter) external;\r\n\r\n    function setBaluniRegistry(address _baluniRegistry) external;\r\n\r\n    function setWNATIVE(address _WNATIVE) external;\r\n\r\n    function setUSDC(address _USDC) external;\r\n\r\n    function setTreasury(address _treasury) external;\r\n\r\n    function set1inchSpotAgg(address __1inchSpotAgg) external;\r\n\r\n    function setBPS_FEE(uint256 __BPS_FEE) external;\r\n\r\n    function getUniswapFactory() external view returns (address);\r\n\r\n    function getUniswapRouter() external view returns (address);\r\n\r\n    function getBaluniSwapper() external view returns (address);\r\n\r\n    function getBaluniOracle() external view returns (address);\r\n\r\n    function getBaluniAgentFactory() external view returns (address);\r\n\r\n    function getBaluniPoolPeriphery() external view returns (address);\r\n\r\n    function getBaluniPoolFactory() external view returns (address);\r\n\r\n    function getBaluniRebalancer() external view returns (address);\r\n\r\n    function getBaluniRouter() external view returns (address);\r\n\r\n    function getBaluniRegistry() external view returns (address);\r\n\r\n    function getWNATIVE() external view returns (address);\r\n\r\n    function getUSDC() external view returns (address);\r\n\r\n    function get1inchSpotAgg() external view returns (address);\r\n\r\n    function getBPS_FEE() external view returns (uint256);\r\n\r\n    function getMAX_BPS_FEE() external view returns (uint256);\r\n\r\n    function getBPS_BASE() external view returns (uint256);\r\n\r\n    function getTreasury() external view returns (address);\r\n\r\n    function setStaticOracle(address _staticOracle) external;\r\n\r\n    function getStaticOracle() external view returns (address);\r\n}\r\n"},"contracts/libs/DSMath.sol":{"content":"/// math.sol -- mixin for inline numerical wizardry\r\n\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n\r\n// You should have received a copy of the GNU General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n// SPDX-License-Identifier: MIT\r\n\r\npragma solidity 0.8.25;\r\n\r\nlibrary DSMath {\r\n    uint256 public constant WAD = 10 ** 18;\r\n    uint256 public constant RAY = 10 ** 27;\r\n\r\n    //rounds to zero if x*y < WAD / 2\r\n    function wmul(uint256 x, uint256 y) internal pure returns (uint256) {\r\n        return ((x * y) + (WAD / 2)) / WAD;\r\n    }\r\n\r\n    //rounds to zero if x*y < WAD / 2\r\n    function wdiv(uint256 x, uint256 y) internal pure returns (uint256) {\r\n        return ((x * WAD) + (y / 2)) / y;\r\n    }\r\n\r\n    function reciprocal(uint256 x) internal pure returns (uint256) {\r\n        return wdiv(WAD, x);\r\n    }\r\n\r\n    // This famous algorithm is called \"exponentiation by squaring\"\r\n    // and calculates x^n with x as fixed-point and n as regular unsigned.\r\n    //\r\n    // It's O(log n), instead of O(n) for naive repeated multiplication.\r\n    //\r\n    // These facts are why it works:\r\n    //\r\n    //  If n is even, then x^n = (x^2)^(n/2).\r\n    //  If n is odd,  then x^n = x * x^(n-1),\r\n    //   and applying the equation for even x gives\r\n    //    x^n = x * (x^2)^((n-1) / 2).\r\n    //\r\n    //  Also, EVM division is flooring and\r\n    //    floor[(n-1) / 2] = floor[n / 2].\r\n    //\r\n    function rpow(uint256 x, uint256 n) internal pure returns (uint256 z) {\r\n        z = n % 2 != 0 ? x : RAY;\r\n\r\n        for (n /= 2; n != 0; n /= 2) {\r\n            x = rmul(x, x);\r\n\r\n            if (n % 2 != 0) {\r\n                z = rmul(z, x);\r\n            }\r\n        }\r\n    }\r\n\r\n    //rounds to zero if x*y < WAD / 2\r\n    function rmul(uint256 x, uint256 y) internal pure returns (uint256 z) {\r\n        z = ((x * y) + (RAY / 2)) / RAY;\r\n    }\r\n}\r\n"}},"settings":{"optimizer":{"enabled":true,"runs":200},"evmVersion":"cancun","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates","devdoc","userdoc"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"errors":[{"component":"general","errorCode":"2072","formattedMessage":"Warning: Unused local variable.\n   --> contracts/BaluniV1Pool.sol:248:9:\n    |\n248 |         uint256 amountOut = getAmountOut(fromToken, toToken, amount);\n    |         ^^^^^^^^^^^^^^^^^\n\n","message":"Unused local variable.","severity":"warning","sourceLocation":{"end":9339,"file":"contracts/BaluniV1Pool.sol","start":9322},"type":"Warning"}],"sources":{"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","exportedSymbols":{"ContextUpgradeable":[676],"Initializable":[448],"OwnableUpgradeable":[194]},"id":195,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:0"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../utils/ContextUpgradeable.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":195,"sourceUnit":677,"src":"128:67:0","symbolAliases":[{"foreign":{"id":2,"name":"ContextUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":676,"src":"136:18:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":5,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":195,"sourceUnit":449,"src":"196:63:0","symbolAliases":[{"foreign":{"id":4,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"204:13:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":7,"name":"Initializable","nameLocations":["789:13:0"],"nodeType":"IdentifierPath","referencedDeclaration":448,"src":"789:13:0"},"id":8,"nodeType":"InheritanceSpecifier","src":"789:13:0"},{"baseName":{"id":9,"name":"ContextUpgradeable","nameLocations":["804:18:0"],"nodeType":"IdentifierPath","referencedDeclaration":676,"src":"804:18:0"},"id":10,"nodeType":"InheritanceSpecifier","src":"804:18:0"}],"canonicalName":"OwnableUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":6,"nodeType":"StructuredDocumentation","src":"261:487:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":194,"linearizedBaseContracts":[194,676,448],"name":"OwnableUpgradeable","nameLocation":"767:18:0","nodeType":"ContractDefinition","nodes":[{"canonicalName":"OwnableUpgradeable.OwnableStorage","documentation":{"id":11,"nodeType":"StructuredDocumentation","src":"829:65:0","text":"@custom:storage-location erc7201:openzeppelin.storage.Ownable"},"id":14,"members":[{"constant":false,"id":13,"mutability":"mutable","name":"_owner","nameLocation":"939:6:0","nodeType":"VariableDeclaration","scope":14,"src":"931:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"OwnableStorage","nameLocation":"906:14:0","nodeType":"StructDefinition","scope":194,"src":"899:53:0","visibility":"public"},{"constant":true,"id":17,"mutability":"constant","name":"OwnableStorageLocation","nameLocation":"1094:22:0","nodeType":"VariableDeclaration","scope":194,"src":"1069:116:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1069:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307839303136643039643732643430666461653266643863656163366236323334633737303632313466643339633163643165363039613035323863313939333030","id":16,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1119:66:0","typeDescriptions":{"typeIdentifier":"t_rational_65173360639460082030725920392146925864023520599682862633725751242436743107328_by_1","typeString":"int_const 6517...(69 digits omitted)...7328"},"value":"0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300"},"visibility":"private"},{"body":{"id":24,"nodeType":"Block","src":"1270:81:0","statements":[{"AST":{"nativeSrc":"1289:56:0","nodeType":"YulBlock","src":"1289:56:0","statements":[{"nativeSrc":"1303:32:0","nodeType":"YulAssignment","src":"1303:32:0","value":{"name":"OwnableStorageLocation","nativeSrc":"1313:22:0","nodeType":"YulIdentifier","src":"1313:22:0"},"variableNames":[{"name":"$.slot","nativeSrc":"1303:6:0","nodeType":"YulIdentifier","src":"1303:6:0"}]}]},"evmVersion":"cancun","externalReferences":[{"declaration":21,"isOffset":false,"isSlot":true,"src":"1303:6:0","suffix":"slot","valueSize":1},{"declaration":17,"isOffset":false,"isSlot":false,"src":"1313:22:0","valueSize":1}],"id":23,"nodeType":"InlineAssembly","src":"1280:65:0"}]},"id":25,"implemented":true,"kind":"function","modifiers":[],"name":"_getOwnableStorage","nameLocation":"1201:18:0","nodeType":"FunctionDefinition","parameters":{"id":18,"nodeType":"ParameterList","parameters":[],"src":"1219:2:0"},"returnParameters":{"id":22,"nodeType":"ParameterList","parameters":[{"constant":false,"id":21,"mutability":"mutable","name":"$","nameLocation":"1267:1:0","nodeType":"VariableDeclaration","scope":25,"src":"1244:24:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"},"typeName":{"id":20,"nodeType":"UserDefinedTypeName","pathNode":{"id":19,"name":"OwnableStorage","nameLocations":["1244:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":14,"src":"1244:14:0"},"referencedDeclaration":14,"src":"1244:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"}},"visibility":"internal"}],"src":"1243:26:0"},"scope":194,"src":"1192:159:0","stateMutability":"pure","virtual":false,"visibility":"private"},{"documentation":{"id":26,"nodeType":"StructuredDocumentation","src":"1357:85:0","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":30,"name":"OwnableUnauthorizedAccount","nameLocation":"1453:26:0","nodeType":"ErrorDefinition","parameters":{"id":29,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28,"mutability":"mutable","name":"account","nameLocation":"1488:7:0","nodeType":"VariableDeclaration","scope":30,"src":"1480:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":27,"name":"address","nodeType":"ElementaryTypeName","src":"1480:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1479:17:0"},"src":"1447:50:0"},{"documentation":{"id":31,"nodeType":"StructuredDocumentation","src":"1503:82:0","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":35,"name":"OwnableInvalidOwner","nameLocation":"1596:19:0","nodeType":"ErrorDefinition","parameters":{"id":34,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33,"mutability":"mutable","name":"owner","nameLocation":"1624:5:0","nodeType":"VariableDeclaration","scope":35,"src":"1616:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":32,"name":"address","nodeType":"ElementaryTypeName","src":"1616:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1615:15:0"},"src":"1590:41:0"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":41,"name":"OwnershipTransferred","nameLocation":"1643:20:0","nodeType":"EventDefinition","parameters":{"id":40,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1680:13:0","nodeType":"VariableDeclaration","scope":41,"src":"1664:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":36,"name":"address","nodeType":"ElementaryTypeName","src":"1664:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":39,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1711:8:0","nodeType":"VariableDeclaration","scope":41,"src":"1695:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":38,"name":"address","nodeType":"ElementaryTypeName","src":"1695:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1663:57:0"},"src":"1637:84:0"},{"body":{"id":53,"nodeType":"Block","src":"1919:55:0","statements":[{"expression":{"arguments":[{"id":50,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":44,"src":"1954:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":49,"name":"__Ownable_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":81,"src":"1929:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":51,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1929:38:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":52,"nodeType":"ExpressionStatement","src":"1929:38:0"}]},"documentation":{"id":42,"nodeType":"StructuredDocumentation","src":"1727:115:0","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":54,"implemented":true,"kind":"function","modifiers":[{"id":47,"kind":"modifierInvocation","modifierName":{"id":46,"name":"onlyInitializing","nameLocations":["1902:16:0"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"1902:16:0"},"nodeType":"ModifierInvocation","src":"1902:16:0"}],"name":"__Ownable_init","nameLocation":"1856:14:0","nodeType":"FunctionDefinition","parameters":{"id":45,"nodeType":"ParameterList","parameters":[{"constant":false,"id":44,"mutability":"mutable","name":"initialOwner","nameLocation":"1879:12:0","nodeType":"VariableDeclaration","scope":54,"src":"1871:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":43,"name":"address","nodeType":"ElementaryTypeName","src":"1871:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1870:22:0"},"returnParameters":{"id":48,"nodeType":"ParameterList","parameters":[],"src":"1919:0:0"},"scope":194,"src":"1847:127:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":80,"nodeType":"Block","src":"2062:153:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":66,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":61,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":56,"src":"2076:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":64,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2100:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":63,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2092:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":62,"name":"address","nodeType":"ElementaryTypeName","src":"2092:7:0","typeDescriptions":{}}},"id":65,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2092:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2076:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":75,"nodeType":"IfStatement","src":"2072:95:0","trueBody":{"id":74,"nodeType":"Block","src":"2104:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":70,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2153:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":69,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2145:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":68,"name":"address","nodeType":"ElementaryTypeName","src":"2145:7:0","typeDescriptions":{}}},"id":71,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2145:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":67,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":35,"src":"2125:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":72,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2125:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":73,"nodeType":"RevertStatement","src":"2118:38:0"}]}},{"expression":{"arguments":[{"id":77,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":56,"src":"2195:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":76,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"2176:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":78,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2176:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":79,"nodeType":"ExpressionStatement","src":"2176:32:0"}]},"id":81,"implemented":true,"kind":"function","modifiers":[{"id":59,"kind":"modifierInvocation","modifierName":{"id":58,"name":"onlyInitializing","nameLocations":["2045:16:0"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"2045:16:0"},"nodeType":"ModifierInvocation","src":"2045:16:0"}],"name":"__Ownable_init_unchained","nameLocation":"1989:24:0","nodeType":"FunctionDefinition","parameters":{"id":57,"nodeType":"ParameterList","parameters":[{"constant":false,"id":56,"mutability":"mutable","name":"initialOwner","nameLocation":"2022:12:0","nodeType":"VariableDeclaration","scope":81,"src":"2014:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":55,"name":"address","nodeType":"ElementaryTypeName","src":"2014:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2013:22:0"},"returnParameters":{"id":60,"nodeType":"ParameterList","parameters":[],"src":"2062:0:0"},"scope":194,"src":"1980:235:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":88,"nodeType":"Block","src":"2324:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":84,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":122,"src":"2334:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":85,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2334:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":86,"nodeType":"ExpressionStatement","src":"2334:13:0"},{"id":87,"nodeType":"PlaceholderStatement","src":"2357:1:0"}]},"documentation":{"id":82,"nodeType":"StructuredDocumentation","src":"2221:77:0","text":" @dev Throws if called by any account other than the owner."},"id":89,"name":"onlyOwner","nameLocation":"2312:9:0","nodeType":"ModifierDefinition","parameters":{"id":83,"nodeType":"ParameterList","parameters":[],"src":"2321:2:0"},"src":"2303:62:0","virtual":false,"visibility":"internal"},{"body":{"id":104,"nodeType":"Block","src":"2496:89:0","statements":[{"assignments":[97],"declarations":[{"constant":false,"id":97,"mutability":"mutable","name":"$","nameLocation":"2529:1:0","nodeType":"VariableDeclaration","scope":104,"src":"2506:24:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"},"typeName":{"id":96,"nodeType":"UserDefinedTypeName","pathNode":{"id":95,"name":"OwnableStorage","nameLocations":["2506:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":14,"src":"2506:14:0"},"referencedDeclaration":14,"src":"2506:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"}},"visibility":"internal"}],"id":100,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":98,"name":"_getOwnableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":25,"src":"2533:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$14_storage_ptr_$","typeString":"function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"}},"id":99,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2533:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"2506:47:0"},{"expression":{"expression":{"id":101,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97,"src":"2570:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage storage pointer"}},"id":102,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2572:6:0","memberName":"_owner","nodeType":"MemberAccess","referencedDeclaration":13,"src":"2570:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":94,"id":103,"nodeType":"Return","src":"2563:15:0"}]},"documentation":{"id":90,"nodeType":"StructuredDocumentation","src":"2371:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":105,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"2450:5:0","nodeType":"FunctionDefinition","parameters":{"id":91,"nodeType":"ParameterList","parameters":[],"src":"2455:2:0"},"returnParameters":{"id":94,"nodeType":"ParameterList","parameters":[{"constant":false,"id":93,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":105,"src":"2487:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":92,"name":"address","nodeType":"ElementaryTypeName","src":"2487:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2486:9:0"},"scope":194,"src":"2441:144:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":121,"nodeType":"Block","src":"2703:117:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":109,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":105,"src":"2717:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":110,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2717:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":111,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":658,"src":"2728:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2728:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2717:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":120,"nodeType":"IfStatement","src":"2713:101:0","trueBody":{"id":119,"nodeType":"Block","src":"2742:72:0","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":115,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":658,"src":"2790:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2790:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":114,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"2763:26:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2763:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":118,"nodeType":"RevertStatement","src":"2756:47:0"}]}}]},"documentation":{"id":106,"nodeType":"StructuredDocumentation","src":"2591:62:0","text":" @dev Throws if the sender is not the owner."},"id":122,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"2667:11:0","nodeType":"FunctionDefinition","parameters":{"id":107,"nodeType":"ParameterList","parameters":[],"src":"2678:2:0"},"returnParameters":{"id":108,"nodeType":"ParameterList","parameters":[],"src":"2703:0:0"},"scope":194,"src":"2658:162:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":135,"nodeType":"Block","src":"3209:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3246:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":130,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3238:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":129,"name":"address","nodeType":"ElementaryTypeName","src":"3238:7:0","typeDescriptions":{}}},"id":132,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3238:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":128,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"3219:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":133,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3219:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":134,"nodeType":"ExpressionStatement","src":"3219:30:0"}]},"documentation":{"id":123,"nodeType":"StructuredDocumentation","src":"2826:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":136,"implemented":true,"kind":"function","modifiers":[{"id":126,"kind":"modifierInvocation","modifierName":{"id":125,"name":"onlyOwner","nameLocations":["3199:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"3199:9:0"},"nodeType":"ModifierInvocation","src":"3199:9:0"}],"name":"renounceOwnership","nameLocation":"3164:17:0","nodeType":"FunctionDefinition","parameters":{"id":124,"nodeType":"ParameterList","parameters":[],"src":"3181:2:0"},"returnParameters":{"id":127,"nodeType":"ParameterList","parameters":[],"src":"3209:0:0"},"scope":194,"src":"3155:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":163,"nodeType":"Block","src":"3475:145:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":144,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":139,"src":"3489:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3509:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":146,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3501:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":145,"name":"address","nodeType":"ElementaryTypeName","src":"3501:7:0","typeDescriptions":{}}},"id":148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3501:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3489:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":158,"nodeType":"IfStatement","src":"3485:91:0","trueBody":{"id":157,"nodeType":"Block","src":"3513:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3562:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":152,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3554:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":151,"name":"address","nodeType":"ElementaryTypeName","src":"3554:7:0","typeDescriptions":{}}},"id":154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3554:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":150,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":35,"src":"3534:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":155,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3534:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":156,"nodeType":"RevertStatement","src":"3527:38:0"}]}},{"expression":{"arguments":[{"id":160,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":139,"src":"3604:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":159,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"3585:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3585:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":162,"nodeType":"ExpressionStatement","src":"3585:28:0"}]},"documentation":{"id":137,"nodeType":"StructuredDocumentation","src":"3262:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":164,"implemented":true,"kind":"function","modifiers":[{"id":142,"kind":"modifierInvocation","modifierName":{"id":141,"name":"onlyOwner","nameLocations":["3465:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"3465:9:0"},"nodeType":"ModifierInvocation","src":"3465:9:0"}],"name":"transferOwnership","nameLocation":"3414:17:0","nodeType":"FunctionDefinition","parameters":{"id":140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":139,"mutability":"mutable","name":"newOwner","nameLocation":"3440:8:0","nodeType":"VariableDeclaration","scope":164,"src":"3432:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":138,"name":"address","nodeType":"ElementaryTypeName","src":"3432:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3431:18:0"},"returnParameters":{"id":143,"nodeType":"ParameterList","parameters":[],"src":"3475:0:0"},"scope":194,"src":"3405:215:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":192,"nodeType":"Block","src":"3837:185:0","statements":[{"assignments":[172],"declarations":[{"constant":false,"id":172,"mutability":"mutable","name":"$","nameLocation":"3870:1:0","nodeType":"VariableDeclaration","scope":192,"src":"3847:24:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"},"typeName":{"id":171,"nodeType":"UserDefinedTypeName","pathNode":{"id":170,"name":"OwnableStorage","nameLocations":["3847:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":14,"src":"3847:14:0"},"referencedDeclaration":14,"src":"3847:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"}},"visibility":"internal"}],"id":175,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":173,"name":"_getOwnableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":25,"src":"3874:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$14_storage_ptr_$","typeString":"function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"}},"id":174,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3874:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3847:47:0"},{"assignments":[177],"declarations":[{"constant":false,"id":177,"mutability":"mutable","name":"oldOwner","nameLocation":"3912:8:0","nodeType":"VariableDeclaration","scope":192,"src":"3904:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":176,"name":"address","nodeType":"ElementaryTypeName","src":"3904:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":180,"initialValue":{"expression":{"id":178,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":172,"src":"3923:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage storage pointer"}},"id":179,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3925:6:0","memberName":"_owner","nodeType":"MemberAccess","referencedDeclaration":13,"src":"3923:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3904:27:0"},{"expression":{"id":185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":181,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":172,"src":"3941:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage storage pointer"}},"id":183,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3943:6:0","memberName":"_owner","nodeType":"MemberAccess","referencedDeclaration":13,"src":"3941:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":184,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"3952:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3941:19:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":186,"nodeType":"ExpressionStatement","src":"3941:19:0"},{"eventCall":{"arguments":[{"id":188,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":177,"src":"3996:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":189,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"4006:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":187,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41,"src":"3975:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":190,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3975:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":191,"nodeType":"EmitStatement","src":"3970:45:0"}]},"documentation":{"id":165,"nodeType":"StructuredDocumentation","src":"3626:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":193,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"3783:18:0","nodeType":"FunctionDefinition","parameters":{"id":168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":167,"mutability":"mutable","name":"newOwner","nameLocation":"3810:8:0","nodeType":"VariableDeclaration","scope":193,"src":"3802:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":166,"name":"address","nodeType":"ElementaryTypeName","src":"3802:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3801:18:0"},"returnParameters":{"id":169,"nodeType":"ParameterList","parameters":[],"src":"3837:0:0"},"scope":194,"src":"3774:248:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":195,"src":"749:3275:0","usedErrors":[30,35,211,214],"usedEvents":[41,219]}],"src":"102:3923:0"},"id":0},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","exportedSymbols":{"Initializable":[448]},"id":449,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":196,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"113:24:1"},{"abstract":true,"baseContracts":[],"canonicalName":"Initializable","contractDependencies":[],"contractKind":"contract","documentation":{"id":197,"nodeType":"StructuredDocumentation","src":"139:2209:1","text":" @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="},"fullyImplemented":true,"id":448,"linearizedBaseContracts":[448],"name":"Initializable","nameLocation":"2367:13:1","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Initializable.InitializableStorage","documentation":{"id":198,"nodeType":"StructuredDocumentation","src":"2387:293:1","text":" @dev Storage of the initializable contract.\n It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n when using with upgradeable contracts.\n @custom:storage-location erc7201:openzeppelin.storage.Initializable"},"id":205,"members":[{"constant":false,"id":201,"mutability":"mutable","name":"_initialized","nameLocation":"2820:12:1","nodeType":"VariableDeclaration","scope":205,"src":"2813:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":200,"name":"uint64","nodeType":"ElementaryTypeName","src":"2813:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":204,"mutability":"mutable","name":"_initializing","nameLocation":"2955:13:1","nodeType":"VariableDeclaration","scope":205,"src":"2950:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":203,"name":"bool","nodeType":"ElementaryTypeName","src":"2950:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"InitializableStorage","nameLocation":"2692:20:1","nodeType":"StructDefinition","scope":448,"src":"2685:290:1","visibility":"public"},{"constant":true,"id":208,"mutability":"constant","name":"INITIALIZABLE_STORAGE","nameLocation":"3123:21:1","nodeType":"VariableDeclaration","scope":448,"src":"3098:115:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":206,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3098:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307866306335376531363834306466303430663135303838646332663831666533393163333932336265633733653233613936363265666339633232396336613030","id":207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3147:66:1","typeDescriptions":{"typeIdentifier":"t_rational_108904022758810753673719992590105913556127789646572562039383141376366747609600_by_1","typeString":"int_const 1089...(70 digits omitted)...9600"},"value":"0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00"},"visibility":"private"},{"documentation":{"id":209,"nodeType":"StructuredDocumentation","src":"3220:60:1","text":" @dev The contract is already initialized."},"errorSelector":"f92ee8a9","id":211,"name":"InvalidInitialization","nameLocation":"3291:21:1","nodeType":"ErrorDefinition","parameters":{"id":210,"nodeType":"ParameterList","parameters":[],"src":"3312:2:1"},"src":"3285:30:1"},{"documentation":{"id":212,"nodeType":"StructuredDocumentation","src":"3321:57:1","text":" @dev The contract is not initializing."},"errorSelector":"d7e6bcf8","id":214,"name":"NotInitializing","nameLocation":"3389:15:1","nodeType":"ErrorDefinition","parameters":{"id":213,"nodeType":"ParameterList","parameters":[],"src":"3404:2:1"},"src":"3383:24:1"},{"anonymous":false,"documentation":{"id":215,"nodeType":"StructuredDocumentation","src":"3413:90:1","text":" @dev Triggered when the contract has been initialized or reinitialized."},"eventSelector":"c7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2","id":219,"name":"Initialized","nameLocation":"3514:11:1","nodeType":"EventDefinition","parameters":{"id":218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":217,"indexed":false,"mutability":"mutable","name":"version","nameLocation":"3533:7:1","nodeType":"VariableDeclaration","scope":219,"src":"3526:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":216,"name":"uint64","nodeType":"ElementaryTypeName","src":"3526:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"3525:16:1"},"src":"3508:34:1"},{"body":{"id":301,"nodeType":"Block","src":"4092:1081:1","statements":[{"assignments":[224],"declarations":[{"constant":false,"id":224,"mutability":"mutable","name":"$","nameLocation":"4187:1:1","nodeType":"VariableDeclaration","scope":301,"src":"4158:30:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":223,"nodeType":"UserDefinedTypeName","pathNode":{"id":222,"name":"InitializableStorage","nameLocations":["4158:20:1"],"nodeType":"IdentifierPath","referencedDeclaration":205,"src":"4158:20:1"},"referencedDeclaration":205,"src":"4158:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"id":227,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":225,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"4191:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":226,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4191:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"4158:59:1"},{"assignments":[229],"declarations":[{"constant":false,"id":229,"mutability":"mutable","name":"isTopLevelCall","nameLocation":"4284:14:1","nodeType":"VariableDeclaration","scope":301,"src":"4279:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":228,"name":"bool","nodeType":"ElementaryTypeName","src":"4279:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":233,"initialValue":{"id":232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4301:16:1","subExpression":{"expression":{"id":230,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"4302:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":231,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4304:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"4302:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4279:38:1"},{"assignments":[235],"declarations":[{"constant":false,"id":235,"mutability":"mutable","name":"initialized","nameLocation":"4334:11:1","nodeType":"VariableDeclaration","scope":301,"src":"4327:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":234,"name":"uint64","nodeType":"ElementaryTypeName","src":"4327:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"id":238,"initialValue":{"expression":{"id":236,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"4348:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":237,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4350:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"4348:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"VariableDeclarationStatement","src":"4327:35:1"},{"assignments":[240],"declarations":[{"constant":false,"id":240,"mutability":"mutable","name":"initialSetup","nameLocation":"4711:12:1","nodeType":"VariableDeclaration","scope":301,"src":"4706:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":239,"name":"bool","nodeType":"ElementaryTypeName","src":"4706:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":246,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":241,"name":"initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":235,"src":"4726:11:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4741:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4726:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":244,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"4746:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4726:34:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4706:54:1"},{"assignments":[248],"declarations":[{"constant":false,"id":248,"mutability":"mutable","name":"construction","nameLocation":"4775:12:1","nodeType":"VariableDeclaration","scope":301,"src":"4770:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":247,"name":"bool","nodeType":"ElementaryTypeName","src":"4770:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":261,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":249,"name":"initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":235,"src":"4790:11:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4805:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4790:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"arguments":[{"id":254,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4818:4:1","typeDescriptions":{"typeIdentifier":"t_contract$_Initializable_$448","typeString":"contract Initializable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Initializable_$448","typeString":"contract Initializable"}],"id":253,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4810:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":252,"name":"address","nodeType":"ElementaryTypeName","src":"4810:7:1","typeDescriptions":{}}},"id":255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4810:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4824:4:1","memberName":"code","nodeType":"MemberAccess","src":"4810:18:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4829:6:1","memberName":"length","nodeType":"MemberAccess","src":"4810:25:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4839:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4810:30:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4790:50:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4770:70:1"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4855:13:1","subExpression":{"id":262,"name":"initialSetup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":240,"src":"4856:12:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4872:13:1","subExpression":{"id":264,"name":"construction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":248,"src":"4873:12:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4855:30:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":271,"nodeType":"IfStatement","src":"4851:91:1","trueBody":{"id":270,"nodeType":"Block","src":"4887:55:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":267,"name":"InvalidInitialization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":211,"src":"4908:21:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":268,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4908:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":269,"nodeType":"RevertStatement","src":"4901:30:1"}]}},{"expression":{"id":276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":272,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"4951:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":274,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4953:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"4951:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4968:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4951:18:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":277,"nodeType":"ExpressionStatement","src":"4951:18:1"},{"condition":{"id":278,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"4983:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":286,"nodeType":"IfStatement","src":"4979:67:1","trueBody":{"id":285,"nodeType":"Block","src":"4999:47:1","statements":[{"expression":{"id":283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":279,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"5013:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":281,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5015:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"5013:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5031:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5013:22:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":284,"nodeType":"ExpressionStatement","src":"5013:22:1"}]}},{"id":287,"nodeType":"PlaceholderStatement","src":"5055:1:1"},{"condition":{"id":288,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"5070:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":300,"nodeType":"IfStatement","src":"5066:101:1","trueBody":{"id":299,"nodeType":"Block","src":"5086:81:1","statements":[{"expression":{"id":293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":289,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"5100:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":291,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5102:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"5100:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":292,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5118:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"5100:23:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":294,"nodeType":"ExpressionStatement","src":"5100:23:1"},{"eventCall":{"arguments":[{"hexValue":"31","id":296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5154:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":295,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"5142:11:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$returns$__$","typeString":"function (uint64)"}},"id":297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5142:14:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":298,"nodeType":"EmitStatement","src":"5137:19:1"}]}}]},"documentation":{"id":220,"nodeType":"StructuredDocumentation","src":"3548:516:1","text":" @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n production.\n Emits an {Initialized} event."},"id":302,"name":"initializer","nameLocation":"4078:11:1","nodeType":"ModifierDefinition","parameters":{"id":221,"nodeType":"ParameterList","parameters":[],"src":"4089:2:1"},"src":"4069:1104:1","virtual":false,"visibility":"internal"},{"body":{"id":348,"nodeType":"Block","src":"6291:392:1","statements":[{"assignments":[309],"declarations":[{"constant":false,"id":309,"mutability":"mutable","name":"$","nameLocation":"6386:1:1","nodeType":"VariableDeclaration","scope":348,"src":"6357:30:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":308,"nodeType":"UserDefinedTypeName","pathNode":{"id":307,"name":"InitializableStorage","nameLocations":["6357:20:1"],"nodeType":"IdentifierPath","referencedDeclaration":205,"src":"6357:20:1"},"referencedDeclaration":205,"src":"6357:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"id":312,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":310,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"6390:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":311,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6390:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"6357:59:1"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":313,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"6431:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":314,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6433:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"6431:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":315,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"6450:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":316,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6452:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"6450:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":317,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"6468:7:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"6450:25:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6431:44:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":324,"nodeType":"IfStatement","src":"6427:105:1","trueBody":{"id":323,"nodeType":"Block","src":"6477:55:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":320,"name":"InvalidInitialization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":211,"src":"6498:21:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":321,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6498:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":322,"nodeType":"RevertStatement","src":"6491:30:1"}]}},{"expression":{"id":329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":325,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"6541:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":327,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6543:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"6541:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":328,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"6558:7:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"6541:24:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":330,"nodeType":"ExpressionStatement","src":"6541:24:1"},{"expression":{"id":335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":331,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"6575:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":333,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6577:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"6575:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":334,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6593:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"6575:22:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":336,"nodeType":"ExpressionStatement","src":"6575:22:1"},{"id":337,"nodeType":"PlaceholderStatement","src":"6607:1:1"},{"expression":{"id":342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":338,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"6618:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":340,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6620:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"6618:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6636:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"6618:23:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":343,"nodeType":"ExpressionStatement","src":"6618:23:1"},{"eventCall":{"arguments":[{"id":345,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"6668:7:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":344,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"6656:11:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$returns$__$","typeString":"function (uint64)"}},"id":346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6656:20:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":347,"nodeType":"EmitStatement","src":"6651:25:1"}]},"documentation":{"id":303,"nodeType":"StructuredDocumentation","src":"5179:1068:1","text":" @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n Emits an {Initialized} event."},"id":349,"name":"reinitializer","nameLocation":"6261:13:1","nodeType":"ModifierDefinition","parameters":{"id":306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":305,"mutability":"mutable","name":"version","nameLocation":"6282:7:1","nodeType":"VariableDeclaration","scope":349,"src":"6275:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":304,"name":"uint64","nodeType":"ElementaryTypeName","src":"6275:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"6274:16:1"},"src":"6252:431:1","virtual":false,"visibility":"internal"},{"body":{"id":356,"nodeType":"Block","src":"6921:48:1","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":352,"name":"_checkInitializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":370,"src":"6931:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":353,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6931:20:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":354,"nodeType":"ExpressionStatement","src":"6931:20:1"},{"id":355,"nodeType":"PlaceholderStatement","src":"6961:1:1"}]},"documentation":{"id":350,"nodeType":"StructuredDocumentation","src":"6689:199:1","text":" @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."},"id":357,"name":"onlyInitializing","nameLocation":"6902:16:1","nodeType":"ModifierDefinition","parameters":{"id":351,"nodeType":"ParameterList","parameters":[],"src":"6918:2:1"},"src":"6893:76:1","virtual":false,"visibility":"internal"},{"body":{"id":369,"nodeType":"Block","src":"7136:89:1","statements":[{"condition":{"id":363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7150:18:1","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":361,"name":"_isInitializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":438,"src":"7151:15:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":362,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7151:17:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":368,"nodeType":"IfStatement","src":"7146:73:1","trueBody":{"id":367,"nodeType":"Block","src":"7170:49:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":364,"name":"NotInitializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":214,"src":"7191:15:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7191:17:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":366,"nodeType":"RevertStatement","src":"7184:24:1"}]}}]},"documentation":{"id":358,"nodeType":"StructuredDocumentation","src":"6975:104:1","text":" @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}."},"id":370,"implemented":true,"kind":"function","modifiers":[],"name":"_checkInitializing","nameLocation":"7093:18:1","nodeType":"FunctionDefinition","parameters":{"id":359,"nodeType":"ParameterList","parameters":[],"src":"7111:2:1"},"returnParameters":{"id":360,"nodeType":"ParameterList","parameters":[],"src":"7136:0:1"},"scope":448,"src":"7084:141:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":415,"nodeType":"Block","src":"7760:373:1","statements":[{"assignments":[376],"declarations":[{"constant":false,"id":376,"mutability":"mutable","name":"$","nameLocation":"7855:1:1","nodeType":"VariableDeclaration","scope":415,"src":"7826:30:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":375,"nodeType":"UserDefinedTypeName","pathNode":{"id":374,"name":"InitializableStorage","nameLocations":["7826:20:1"],"nodeType":"IdentifierPath","referencedDeclaration":205,"src":"7826:20:1"},"referencedDeclaration":205,"src":"7826:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"id":379,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":377,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"7859:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7859:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"7826:59:1"},{"condition":{"expression":{"id":380,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"7900:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":381,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7902:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"7900:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":386,"nodeType":"IfStatement","src":"7896:76:1","trueBody":{"id":385,"nodeType":"Block","src":"7917:55:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":382,"name":"InvalidInitialization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":211,"src":"7938:21:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7938:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":384,"nodeType":"RevertStatement","src":"7931:30:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":387,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"7985:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":388,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7987:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"7985:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":391,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8008:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":390,"name":"uint64","nodeType":"ElementaryTypeName","src":"8008:6:1","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":389,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8003:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":392,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8003:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":393,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8016:3:1","memberName":"max","nodeType":"MemberAccess","src":"8003:16:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"7985:34:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":414,"nodeType":"IfStatement","src":"7981:146:1","trueBody":{"id":413,"nodeType":"Block","src":"8021:106:1","statements":[{"expression":{"id":403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":395,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"8035:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":397,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8037:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"8035:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"arguments":[{"id":400,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8057:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":399,"name":"uint64","nodeType":"ElementaryTypeName","src":"8057:6:1","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":398,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8052:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":401,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8052:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":402,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8065:3:1","memberName":"max","nodeType":"MemberAccess","src":"8052:16:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"8035:33:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":404,"nodeType":"ExpressionStatement","src":"8035:33:1"},{"eventCall":{"arguments":[{"expression":{"arguments":[{"id":408,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8104:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":407,"name":"uint64","nodeType":"ElementaryTypeName","src":"8104:6:1","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":406,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8099:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8099:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":410,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8112:3:1","memberName":"max","nodeType":"MemberAccess","src":"8099:16:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":405,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"8087:11:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$returns$__$","typeString":"function (uint64)"}},"id":411,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8087:29:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":412,"nodeType":"EmitStatement","src":"8082:34:1"}]}}]},"documentation":{"id":371,"nodeType":"StructuredDocumentation","src":"7231:475:1","text":" @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."},"id":416,"implemented":true,"kind":"function","modifiers":[],"name":"_disableInitializers","nameLocation":"7720:20:1","nodeType":"FunctionDefinition","parameters":{"id":372,"nodeType":"ParameterList","parameters":[],"src":"7740:2:1"},"returnParameters":{"id":373,"nodeType":"ParameterList","parameters":[],"src":"7760:0:1"},"scope":448,"src":"7711:422:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":426,"nodeType":"Block","src":"8308:63:1","statements":[{"expression":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":422,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"8325:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8325:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":424,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8352:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"8325:39:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":421,"id":425,"nodeType":"Return","src":"8318:46:1"}]},"documentation":{"id":417,"nodeType":"StructuredDocumentation","src":"8139:99:1","text":" @dev Returns the highest version that has been initialized. See {reinitializer}."},"id":427,"implemented":true,"kind":"function","modifiers":[],"name":"_getInitializedVersion","nameLocation":"8252:22:1","nodeType":"FunctionDefinition","parameters":{"id":418,"nodeType":"ParameterList","parameters":[],"src":"8274:2:1"},"returnParameters":{"id":421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":420,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":427,"src":"8300:6:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":419,"name":"uint64","nodeType":"ElementaryTypeName","src":"8300:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"8299:8:1"},"scope":448,"src":"8243:128:1","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":437,"nodeType":"Block","src":"8543:64:1","statements":[{"expression":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":433,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"8560:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":434,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8560:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":435,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8587:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"8560:40:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":432,"id":436,"nodeType":"Return","src":"8553:47:1"}]},"documentation":{"id":428,"nodeType":"StructuredDocumentation","src":"8377:105:1","text":" @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."},"id":438,"implemented":true,"kind":"function","modifiers":[],"name":"_isInitializing","nameLocation":"8496:15:1","nodeType":"FunctionDefinition","parameters":{"id":429,"nodeType":"ParameterList","parameters":[],"src":"8511:2:1"},"returnParameters":{"id":432,"nodeType":"ParameterList","parameters":[{"constant":false,"id":431,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":438,"src":"8537:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":430,"name":"bool","nodeType":"ElementaryTypeName","src":"8537:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8536:6:1"},"scope":448,"src":"8487:120:1","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":446,"nodeType":"Block","src":"8827:80:1","statements":[{"AST":{"nativeSrc":"8846:55:1","nodeType":"YulBlock","src":"8846:55:1","statements":[{"nativeSrc":"8860:31:1","nodeType":"YulAssignment","src":"8860:31:1","value":{"name":"INITIALIZABLE_STORAGE","nativeSrc":"8870:21:1","nodeType":"YulIdentifier","src":"8870:21:1"},"variableNames":[{"name":"$.slot","nativeSrc":"8860:6:1","nodeType":"YulIdentifier","src":"8860:6:1"}]}]},"evmVersion":"cancun","externalReferences":[{"declaration":443,"isOffset":false,"isSlot":true,"src":"8860:6:1","suffix":"slot","valueSize":1},{"declaration":208,"isOffset":false,"isSlot":false,"src":"8870:21:1","valueSize":1}],"id":445,"nodeType":"InlineAssembly","src":"8837:64:1"}]},"documentation":{"id":439,"nodeType":"StructuredDocumentation","src":"8613:67:1","text":" @dev Returns a pointer to the storage namespace."},"id":447,"implemented":true,"kind":"function","modifiers":[],"name":"_getInitializableStorage","nameLocation":"8746:24:1","nodeType":"FunctionDefinition","parameters":{"id":440,"nodeType":"ParameterList","parameters":[],"src":"8770:2:1"},"returnParameters":{"id":444,"nodeType":"ParameterList","parameters":[{"constant":false,"id":443,"mutability":"mutable","name":"$","nameLocation":"8824:1:1","nodeType":"VariableDeclaration","scope":447,"src":"8795:30:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":442,"nodeType":"UserDefinedTypeName","pathNode":{"id":441,"name":"InitializableStorage","nameLocations":["8795:20:1"],"nodeType":"IdentifierPath","referencedDeclaration":205,"src":"8795:20:1"},"referencedDeclaration":205,"src":"8795:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"src":"8794:32:1"},"scope":448,"src":"8737:170:1","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":449,"src":"2349:6560:1","usedErrors":[211,214],"usedEvents":[219]}],"src":"113:8797:1"},"id":1},"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","exportedSymbols":{"ERC1967Utils":[1126],"IERC1822Proxiable":[686],"Initializable":[448],"UUPSUpgradeable":[630]},"id":631,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":450,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:2"},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC1822.sol","file":"@openzeppelin/contracts/interfaces/draft-IERC1822.sol","id":452,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":631,"sourceUnit":687,"src":"141:88:2","symbolAliases":[{"foreign":{"id":451,"name":"IERC1822Proxiable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":686,"src":"149:17:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol","file":"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol","id":454,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":631,"sourceUnit":1127,"src":"230:84:2","symbolAliases":[{"foreign":{"id":453,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1126,"src":"238:12:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"./Initializable.sol","id":456,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":631,"sourceUnit":449,"src":"315:50:2","symbolAliases":[{"foreign":{"id":455,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"323:13:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":458,"name":"Initializable","nameLocations":["1023:13:2"],"nodeType":"IdentifierPath","referencedDeclaration":448,"src":"1023:13:2"},"id":459,"nodeType":"InheritanceSpecifier","src":"1023:13:2"},{"baseName":{"id":460,"name":"IERC1822Proxiable","nameLocations":["1038:17:2"],"nodeType":"IdentifierPath","referencedDeclaration":686,"src":"1038:17:2"},"id":461,"nodeType":"InheritanceSpecifier","src":"1038:17:2"}],"canonicalName":"UUPSUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":457,"nodeType":"StructuredDocumentation","src":"367:618:2","text":" @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n `UUPSUpgradeable` with a custom implementation of upgrades.\n The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism."},"fullyImplemented":false,"id":630,"linearizedBaseContracts":[630,686,448],"name":"UUPSUpgradeable","nameLocation":"1004:15:2","nodeType":"ContractDefinition","nodes":[{"constant":false,"documentation":{"id":462,"nodeType":"StructuredDocumentation","src":"1062:61:2","text":"@custom:oz-upgrades-unsafe-allow state-variable-immutable"},"id":468,"mutability":"immutable","name":"__self","nameLocation":"1154:6:2","nodeType":"VariableDeclaration","scope":630,"src":"1128:48:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":463,"name":"address","nodeType":"ElementaryTypeName","src":"1128:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"arguments":[{"id":466,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1171:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_UUPSUpgradeable_$630","typeString":"contract UUPSUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UUPSUpgradeable_$630","typeString":"contract UUPSUpgradeable"}],"id":465,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1163:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":464,"name":"address","nodeType":"ElementaryTypeName","src":"1163:7:2","typeDescriptions":{}}},"id":467,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1163:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":true,"documentation":{"id":469,"nodeType":"StructuredDocumentation","src":"1183:631:2","text":" @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\n and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\n while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\n If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\n be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\n during an upgrade."},"functionSelector":"ad3cb1cc","id":472,"mutability":"constant","name":"UPGRADE_INTERFACE_VERSION","nameLocation":"1842:25:2","nodeType":"VariableDeclaration","scope":630,"src":"1819:58:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":470,"name":"string","nodeType":"ElementaryTypeName","src":"1819:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"352e302e30","id":471,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1870:7:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_2ade050ecfcf8ae20ae1d10a23573f9d7e0bad85e74a2cf8338a65401e64558c","typeString":"literal_string \"5.0.0\""},"value":"5.0.0"},"visibility":"public"},{"documentation":{"id":473,"nodeType":"StructuredDocumentation","src":"1884:65:2","text":" @dev The call is from an unauthorized context."},"errorSelector":"e07c8dba","id":475,"name":"UUPSUnauthorizedCallContext","nameLocation":"1960:27:2","nodeType":"ErrorDefinition","parameters":{"id":474,"nodeType":"ParameterList","parameters":[],"src":"1987:2:2"},"src":"1954:36:2"},{"documentation":{"id":476,"nodeType":"StructuredDocumentation","src":"1996:68:2","text":" @dev The storage `slot` is unsupported as a UUID."},"errorSelector":"aa1d49a4","id":480,"name":"UUPSUnsupportedProxiableUUID","nameLocation":"2075:28:2","nodeType":"ErrorDefinition","parameters":{"id":479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":478,"mutability":"mutable","name":"slot","nameLocation":"2112:4:2","nodeType":"VariableDeclaration","scope":480,"src":"2104:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":477,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2104:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2103:14:2"},"src":"2069:49:2"},{"body":{"id":487,"nodeType":"Block","src":"2643:41:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":483,"name":"_checkProxy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":562,"src":"2653:11:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2653:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":485,"nodeType":"ExpressionStatement","src":"2653:13:2"},{"id":486,"nodeType":"PlaceholderStatement","src":"2676:1:2"}]},"documentation":{"id":481,"nodeType":"StructuredDocumentation","src":"2124:493:2","text":" @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\n for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n fail."},"id":488,"name":"onlyProxy","nameLocation":"2631:9:2","nodeType":"ModifierDefinition","parameters":{"id":482,"nodeType":"ParameterList","parameters":[],"src":"2640:2:2"},"src":"2622:62:2","virtual":false,"visibility":"internal"},{"body":{"id":495,"nodeType":"Block","src":"2914:48:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":491,"name":"_checkNotDelegated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":578,"src":"2924:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":492,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2924:20:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":493,"nodeType":"ExpressionStatement","src":"2924:20:2"},{"id":494,"nodeType":"PlaceholderStatement","src":"2954:1:2"}]},"documentation":{"id":489,"nodeType":"StructuredDocumentation","src":"2690:195:2","text":" @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n callable on the implementing contract but not through proxies."},"id":496,"name":"notDelegated","nameLocation":"2899:12:2","nodeType":"ModifierDefinition","parameters":{"id":490,"nodeType":"ParameterList","parameters":[],"src":"2911:2:2"},"src":"2890:72:2","virtual":false,"visibility":"internal"},{"body":{"id":501,"nodeType":"Block","src":"3028:7:2","statements":[]},"id":502,"implemented":true,"kind":"function","modifiers":[{"id":499,"kind":"modifierInvocation","modifierName":{"id":498,"name":"onlyInitializing","nameLocations":["3011:16:2"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"3011:16:2"},"nodeType":"ModifierInvocation","src":"3011:16:2"}],"name":"__UUPSUpgradeable_init","nameLocation":"2977:22:2","nodeType":"FunctionDefinition","parameters":{"id":497,"nodeType":"ParameterList","parameters":[],"src":"2999:2:2"},"returnParameters":{"id":500,"nodeType":"ParameterList","parameters":[],"src":"3028:0:2"},"scope":630,"src":"2968:67:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":507,"nodeType":"Block","src":"3111:7:2","statements":[]},"id":508,"implemented":true,"kind":"function","modifiers":[{"id":505,"kind":"modifierInvocation","modifierName":{"id":504,"name":"onlyInitializing","nameLocations":["3094:16:2"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"3094:16:2"},"nodeType":"ModifierInvocation","src":"3094:16:2"}],"name":"__UUPSUpgradeable_init_unchained","nameLocation":"3050:32:2","nodeType":"FunctionDefinition","parameters":{"id":503,"nodeType":"ParameterList","parameters":[],"src":"3082:2:2"},"returnParameters":{"id":506,"nodeType":"ParameterList","parameters":[],"src":"3111:0:2"},"scope":630,"src":"3041:77:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[685],"body":{"id":519,"nodeType":"Block","src":"3783:56:2","statements":[{"expression":{"expression":{"id":516,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1126,"src":"3800:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$1126_$","typeString":"type(library ERC1967Utils)"}},"id":517,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3813:19:2","memberName":"IMPLEMENTATION_SLOT","nodeType":"MemberAccess","referencedDeclaration":853,"src":"3800:32:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":515,"id":518,"nodeType":"Return","src":"3793:39:2"}]},"documentation":{"id":509,"nodeType":"StructuredDocumentation","src":"3123:577:2","text":" @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\n implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."},"functionSelector":"52d1902d","id":520,"implemented":true,"kind":"function","modifiers":[{"id":512,"kind":"modifierInvocation","modifierName":{"id":511,"name":"notDelegated","nameLocations":["3752:12:2"],"nodeType":"IdentifierPath","referencedDeclaration":496,"src":"3752:12:2"},"nodeType":"ModifierInvocation","src":"3752:12:2"}],"name":"proxiableUUID","nameLocation":"3714:13:2","nodeType":"FunctionDefinition","parameters":{"id":510,"nodeType":"ParameterList","parameters":[],"src":"3727:2:2"},"returnParameters":{"id":515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":514,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":520,"src":"3774:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":513,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3774:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3773:9:2"},"scope":630,"src":"3705:134:2","stateMutability":"view","virtual":true,"visibility":"external"},{"body":{"id":539,"nodeType":"Block","src":"4263:109:2","statements":[{"expression":{"arguments":[{"id":531,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":523,"src":"4291:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":530,"name":"_authorizeUpgrade","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":584,"src":"4273:17:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4273:36:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":533,"nodeType":"ExpressionStatement","src":"4273:36:2"},{"expression":{"arguments":[{"id":535,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":523,"src":"4341:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":536,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":525,"src":"4360:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":534,"name":"_upgradeToAndCallUUPS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":629,"src":"4319:21:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,bytes memory)"}},"id":537,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4319:46:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":538,"nodeType":"ExpressionStatement","src":"4319:46:2"}]},"documentation":{"id":521,"nodeType":"StructuredDocumentation","src":"3845:308:2","text":" @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n encoded in `data`.\n Calls {_authorizeUpgrade}.\n Emits an {Upgraded} event.\n @custom:oz-upgrades-unsafe-allow-reachable delegatecall"},"functionSelector":"4f1ef286","id":540,"implemented":true,"kind":"function","modifiers":[{"id":528,"kind":"modifierInvocation","modifierName":{"id":527,"name":"onlyProxy","nameLocations":["4253:9:2"],"nodeType":"IdentifierPath","referencedDeclaration":488,"src":"4253:9:2"},"nodeType":"ModifierInvocation","src":"4253:9:2"}],"name":"upgradeToAndCall","nameLocation":"4167:16:2","nodeType":"FunctionDefinition","parameters":{"id":526,"nodeType":"ParameterList","parameters":[{"constant":false,"id":523,"mutability":"mutable","name":"newImplementation","nameLocation":"4192:17:2","nodeType":"VariableDeclaration","scope":540,"src":"4184:25:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":522,"name":"address","nodeType":"ElementaryTypeName","src":"4184:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":525,"mutability":"mutable","name":"data","nameLocation":"4224:4:2","nodeType":"VariableDeclaration","scope":540,"src":"4211:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":524,"name":"bytes","nodeType":"ElementaryTypeName","src":"4211:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4183:46:2"},"returnParameters":{"id":529,"nodeType":"ParameterList","parameters":[],"src":"4263:0:2"},"scope":630,"src":"4158:214:2","stateMutability":"payable","virtual":true,"visibility":"public"},{"body":{"id":561,"nodeType":"Block","src":"4644:267:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":546,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4679:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_UUPSUpgradeable_$630","typeString":"contract UUPSUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UUPSUpgradeable_$630","typeString":"contract UUPSUpgradeable"}],"id":545,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4671:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":544,"name":"address","nodeType":"ElementaryTypeName","src":"4671:7:2","typeDescriptions":{}}},"id":547,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4671:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":548,"name":"__self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":468,"src":"4688:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4671:23:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":550,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1126,"src":"4749:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$1126_$","typeString":"type(library ERC1967Utils)"}},"id":551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4762:17:2","memberName":"getImplementation","nodeType":"MemberAccess","referencedDeclaration":884,"src":"4749:30:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":552,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4749:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":553,"name":"__self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":468,"src":"4785:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4749:42:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4671:120:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":560,"nodeType":"IfStatement","src":"4654:251:2","trueBody":{"id":559,"nodeType":"Block","src":"4844:61:2","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":556,"name":"UUPSUnauthorizedCallContext","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":475,"src":"4865:27:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":557,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4865:29:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":558,"nodeType":"RevertStatement","src":"4858:36:2"}]}}]},"documentation":{"id":541,"nodeType":"StructuredDocumentation","src":"4378:216:2","text":" @dev Reverts if the execution is not performed via delegatecall or the execution\n context is not of a proxy with an ERC1967-compliant implementation pointing to self.\n See {_onlyProxy}."},"id":562,"implemented":true,"kind":"function","modifiers":[],"name":"_checkProxy","nameLocation":"4608:11:2","nodeType":"FunctionDefinition","parameters":{"id":542,"nodeType":"ParameterList","parameters":[],"src":"4619:2:2"},"returnParameters":{"id":543,"nodeType":"ParameterList","parameters":[],"src":"4644:0:2"},"scope":630,"src":"4599:312:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":577,"nodeType":"Block","src":"5080:161:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":568,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5102:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_UUPSUpgradeable_$630","typeString":"contract UUPSUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UUPSUpgradeable_$630","typeString":"contract UUPSUpgradeable"}],"id":567,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5094:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":566,"name":"address","nodeType":"ElementaryTypeName","src":"5094:7:2","typeDescriptions":{}}},"id":569,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5094:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":570,"name":"__self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":468,"src":"5111:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5094:23:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":576,"nodeType":"IfStatement","src":"5090:145:2","trueBody":{"id":575,"nodeType":"Block","src":"5119:116:2","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":572,"name":"UUPSUnauthorizedCallContext","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":475,"src":"5195:27:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":573,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5195:29:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":574,"nodeType":"RevertStatement","src":"5188:36:2"}]}}]},"documentation":{"id":563,"nodeType":"StructuredDocumentation","src":"4917:106:2","text":" @dev Reverts if the execution is performed via delegatecall.\n See {notDelegated}."},"id":578,"implemented":true,"kind":"function","modifiers":[],"name":"_checkNotDelegated","nameLocation":"5037:18:2","nodeType":"FunctionDefinition","parameters":{"id":564,"nodeType":"ParameterList","parameters":[],"src":"5055:2:2"},"returnParameters":{"id":565,"nodeType":"ParameterList","parameters":[],"src":"5080:0:2"},"scope":630,"src":"5028:213:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"documentation":{"id":579,"nodeType":"StructuredDocumentation","src":"5247:372:2","text":" @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n {upgradeToAndCall}.\n Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n ```solidity\n function _authorizeUpgrade(address) internal onlyOwner {}\n ```"},"id":584,"implemented":false,"kind":"function","modifiers":[],"name":"_authorizeUpgrade","nameLocation":"5633:17:2","nodeType":"FunctionDefinition","parameters":{"id":582,"nodeType":"ParameterList","parameters":[{"constant":false,"id":581,"mutability":"mutable","name":"newImplementation","nameLocation":"5659:17:2","nodeType":"VariableDeclaration","scope":584,"src":"5651:25:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":580,"name":"address","nodeType":"ElementaryTypeName","src":"5651:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5650:27:2"},"returnParameters":{"id":583,"nodeType":"ParameterList","parameters":[],"src":"5694:0:2"},"scope":630,"src":"5624:71:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":628,"nodeType":"Block","src":"6137:453:2","statements":[{"clauses":[{"block":{"id":617,"nodeType":"Block","src":"6227:212:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":600,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":598,"src":"6245:4:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":601,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1126,"src":"6253:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$1126_$","typeString":"type(library ERC1967Utils)"}},"id":602,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6266:19:2","memberName":"IMPLEMENTATION_SLOT","nodeType":"MemberAccess","referencedDeclaration":853,"src":"6253:32:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"6245:40:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":609,"nodeType":"IfStatement","src":"6241:120:2","trueBody":{"id":608,"nodeType":"Block","src":"6287:74:2","statements":[{"errorCall":{"arguments":[{"id":605,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":598,"src":"6341:4:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":604,"name":"UUPSUnsupportedProxiableUUID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":480,"src":"6312:28:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$returns$__$","typeString":"function (bytes32) pure"}},"id":606,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6312:34:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":607,"nodeType":"RevertStatement","src":"6305:41:2"}]}},{"expression":{"arguments":[{"id":613,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":587,"src":"6404:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":614,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":589,"src":"6423:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":610,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1126,"src":"6374:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$1126_$","typeString":"type(library ERC1967Utils)"}},"id":612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6387:16:2","memberName":"upgradeToAndCall","nodeType":"MemberAccess","referencedDeclaration":945,"src":"6374:29:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,bytes memory)"}},"id":615,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6374:54:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":616,"nodeType":"ExpressionStatement","src":"6374:54:2"}]},"errorName":"","id":618,"nodeType":"TryCatchClause","parameters":{"id":599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":598,"mutability":"mutable","name":"slot","nameLocation":"6221:4:2","nodeType":"VariableDeclaration","scope":618,"src":"6213:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":597,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6213:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6212:14:2"},"src":"6204:235:2"},{"block":{"id":625,"nodeType":"Block","src":"6446:138:2","statements":[{"errorCall":{"arguments":[{"id":622,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":587,"src":"6555:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":619,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1126,"src":"6513:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$1126_$","typeString":"type(library ERC1967Utils)"}},"id":621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6526:28:2","memberName":"ERC1967InvalidImplementation","nodeType":"MemberAccess","referencedDeclaration":858,"src":"6513:41:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":623,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6513:60:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":624,"nodeType":"RevertStatement","src":"6506:67:2"}]},"errorName":"","id":626,"nodeType":"TryCatchClause","src":"6440:144:2"}],"externalCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":593,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":587,"src":"6169:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":592,"name":"IERC1822Proxiable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":686,"src":"6151:17:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1822Proxiable_$686_$","typeString":"type(contract IERC1822Proxiable)"}},"id":594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6151:36:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC1822Proxiable_$686","typeString":"contract IERC1822Proxiable"}},"id":595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6188:13:2","memberName":"proxiableUUID","nodeType":"MemberAccess","referencedDeclaration":685,"src":"6151:50:2","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_bytes32_$","typeString":"function () view external returns (bytes32)"}},"id":596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6151:52:2","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":627,"nodeType":"TryStatement","src":"6147:437:2"}]},"documentation":{"id":585,"nodeType":"StructuredDocumentation","src":"5701:346:2","text":" @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\n As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\n is expected to be the implementation slot in ERC1967.\n Emits an {IERC1967-Upgraded} event."},"id":629,"implemented":true,"kind":"function","modifiers":[],"name":"_upgradeToAndCallUUPS","nameLocation":"6061:21:2","nodeType":"FunctionDefinition","parameters":{"id":590,"nodeType":"ParameterList","parameters":[{"constant":false,"id":587,"mutability":"mutable","name":"newImplementation","nameLocation":"6091:17:2","nodeType":"VariableDeclaration","scope":629,"src":"6083:25:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":586,"name":"address","nodeType":"ElementaryTypeName","src":"6083:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":589,"mutability":"mutable","name":"data","nameLocation":"6123:4:2","nodeType":"VariableDeclaration","scope":629,"src":"6110:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":588,"name":"bytes","nodeType":"ElementaryTypeName","src":"6110:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6082:46:2"},"returnParameters":{"id":591,"nodeType":"ParameterList","parameters":[],"src":"6137:0:2"},"scope":630,"src":"6052:538:2","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":631,"src":"986:5606:2","usedErrors":[211,214,475,480,858,871,1768,1771],"usedEvents":[219,837]}],"src":"115:6478:2"},"id":2},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","exportedSymbols":{"ContextUpgradeable":[676],"Initializable":[448]},"id":677,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":632,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:3"},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":634,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":677,"sourceUnit":449,"src":"126:63:3","symbolAliases":[{"foreign":{"id":633,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"134:13:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":636,"name":"Initializable","nameLocations":["728:13:3"],"nodeType":"IdentifierPath","referencedDeclaration":448,"src":"728:13:3"},"id":637,"nodeType":"InheritanceSpecifier","src":"728:13:3"}],"canonicalName":"ContextUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":635,"nodeType":"StructuredDocumentation","src":"191:496:3","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":676,"linearizedBaseContracts":[676,448],"name":"ContextUpgradeable","nameLocation":"706:18:3","nodeType":"ContractDefinition","nodes":[{"body":{"id":642,"nodeType":"Block","src":"800:7:3","statements":[]},"id":643,"implemented":true,"kind":"function","modifiers":[{"id":640,"kind":"modifierInvocation","modifierName":{"id":639,"name":"onlyInitializing","nameLocations":["783:16:3"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"783:16:3"},"nodeType":"ModifierInvocation","src":"783:16:3"}],"name":"__Context_init","nameLocation":"757:14:3","nodeType":"FunctionDefinition","parameters":{"id":638,"nodeType":"ParameterList","parameters":[],"src":"771:2:3"},"returnParameters":{"id":641,"nodeType":"ParameterList","parameters":[],"src":"800:0:3"},"scope":676,"src":"748:59:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":648,"nodeType":"Block","src":"875:7:3","statements":[]},"id":649,"implemented":true,"kind":"function","modifiers":[{"id":646,"kind":"modifierInvocation","modifierName":{"id":645,"name":"onlyInitializing","nameLocations":["858:16:3"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"858:16:3"},"nodeType":"ModifierInvocation","src":"858:16:3"}],"name":"__Context_init_unchained","nameLocation":"822:24:3","nodeType":"FunctionDefinition","parameters":{"id":644,"nodeType":"ParameterList","parameters":[],"src":"846:2:3"},"returnParameters":{"id":647,"nodeType":"ParameterList","parameters":[],"src":"875:0:3"},"scope":676,"src":"813:69:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":657,"nodeType":"Block","src":"949:34:3","statements":[{"expression":{"expression":{"id":654,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"966:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"970:6:3","memberName":"sender","nodeType":"MemberAccess","src":"966:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":653,"id":656,"nodeType":"Return","src":"959:17:3"}]},"id":658,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"896:10:3","nodeType":"FunctionDefinition","parameters":{"id":650,"nodeType":"ParameterList","parameters":[],"src":"906:2:3"},"returnParameters":{"id":653,"nodeType":"ParameterList","parameters":[{"constant":false,"id":652,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":658,"src":"940:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":651,"name":"address","nodeType":"ElementaryTypeName","src":"940:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"939:9:3"},"scope":676,"src":"887:96:3","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":666,"nodeType":"Block","src":"1056:32:3","statements":[{"expression":{"expression":{"id":663,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1073:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1077:4:3","memberName":"data","nodeType":"MemberAccess","src":"1073:8:3","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":662,"id":665,"nodeType":"Return","src":"1066:15:3"}]},"id":667,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"998:8:3","nodeType":"FunctionDefinition","parameters":{"id":659,"nodeType":"ParameterList","parameters":[],"src":"1006:2:3"},"returnParameters":{"id":662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":661,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":667,"src":"1040:14:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":660,"name":"bytes","nodeType":"ElementaryTypeName","src":"1040:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1039:16:3"},"scope":676,"src":"989:99:3","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":674,"nodeType":"Block","src":"1166:25:3","statements":[{"expression":{"hexValue":"30","id":672,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1183:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":671,"id":673,"nodeType":"Return","src":"1176:8:3"}]},"id":675,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"1103:20:3","nodeType":"FunctionDefinition","parameters":{"id":668,"nodeType":"ParameterList","parameters":[],"src":"1123:2:3"},"returnParameters":{"id":671,"nodeType":"ParameterList","parameters":[{"constant":false,"id":670,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":675,"src":"1157:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":669,"name":"uint256","nodeType":"ElementaryTypeName","src":"1157:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1156:9:3"},"scope":676,"src":"1094:97:3","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":677,"src":"688:505:3","usedErrors":[211,214],"usedEvents":[219]}],"src":"101:1093:3"},"id":3},"@openzeppelin/contracts/interfaces/draft-IERC1822.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC1822.sol","exportedSymbols":{"IERC1822Proxiable":[686]},"id":687,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":678,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"113:24:4"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1822Proxiable","contractDependencies":[],"contractKind":"interface","documentation":{"id":679,"nodeType":"StructuredDocumentation","src":"139:203:4","text":" @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n proxy whose upgrades are fully controlled by the current implementation."},"fullyImplemented":false,"id":686,"linearizedBaseContracts":[686],"name":"IERC1822Proxiable","nameLocation":"353:17:4","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":680,"nodeType":"StructuredDocumentation","src":"377:438:4","text":" @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n address.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy."},"functionSelector":"52d1902d","id":685,"implemented":false,"kind":"function","modifiers":[],"name":"proxiableUUID","nameLocation":"829:13:4","nodeType":"FunctionDefinition","parameters":{"id":681,"nodeType":"ParameterList","parameters":[],"src":"842:2:4"},"returnParameters":{"id":684,"nodeType":"ParameterList","parameters":[{"constant":false,"id":683,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":685,"src":"868:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":682,"name":"bytes32","nodeType":"ElementaryTypeName","src":"868:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"867:9:4"},"scope":686,"src":"820:57:4","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":687,"src":"343:536:4","usedErrors":[],"usedEvents":[]}],"src":"113:767:4"},"id":4},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","exportedSymbols":{"IERC1155Errors":[823],"IERC20Errors":[728],"IERC721Errors":[776]},"id":824,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":688,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:5"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":689,"nodeType":"StructuredDocumentation","src":"138:139:5","text":" @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."},"fullyImplemented":true,"id":728,"linearizedBaseContracts":[728],"name":"IERC20Errors","nameLocation":"288:12:5","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":690,"nodeType":"StructuredDocumentation","src":"307:309:5","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"e450d38c","id":698,"name":"ERC20InsufficientBalance","nameLocation":"627:24:5","nodeType":"ErrorDefinition","parameters":{"id":697,"nodeType":"ParameterList","parameters":[{"constant":false,"id":692,"mutability":"mutable","name":"sender","nameLocation":"660:6:5","nodeType":"VariableDeclaration","scope":698,"src":"652:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":691,"name":"address","nodeType":"ElementaryTypeName","src":"652:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":694,"mutability":"mutable","name":"balance","nameLocation":"676:7:5","nodeType":"VariableDeclaration","scope":698,"src":"668:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":693,"name":"uint256","nodeType":"ElementaryTypeName","src":"668:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":696,"mutability":"mutable","name":"needed","nameLocation":"693:6:5","nodeType":"VariableDeclaration","scope":698,"src":"685:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":695,"name":"uint256","nodeType":"ElementaryTypeName","src":"685:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"651:49:5"},"src":"621:80:5"},{"documentation":{"id":699,"nodeType":"StructuredDocumentation","src":"707:152:5","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"96c6fd1e","id":703,"name":"ERC20InvalidSender","nameLocation":"870:18:5","nodeType":"ErrorDefinition","parameters":{"id":702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":701,"mutability":"mutable","name":"sender","nameLocation":"897:6:5","nodeType":"VariableDeclaration","scope":703,"src":"889:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":700,"name":"address","nodeType":"ElementaryTypeName","src":"889:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"888:16:5"},"src":"864:41:5"},{"documentation":{"id":704,"nodeType":"StructuredDocumentation","src":"911:159:5","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"ec442f05","id":708,"name":"ERC20InvalidReceiver","nameLocation":"1081:20:5","nodeType":"ErrorDefinition","parameters":{"id":707,"nodeType":"ParameterList","parameters":[{"constant":false,"id":706,"mutability":"mutable","name":"receiver","nameLocation":"1110:8:5","nodeType":"VariableDeclaration","scope":708,"src":"1102:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":705,"name":"address","nodeType":"ElementaryTypeName","src":"1102:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1101:18:5"},"src":"1075:45:5"},{"documentation":{"id":709,"nodeType":"StructuredDocumentation","src":"1126:345:5","text":" @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"fb8f41b2","id":717,"name":"ERC20InsufficientAllowance","nameLocation":"1482:26:5","nodeType":"ErrorDefinition","parameters":{"id":716,"nodeType":"ParameterList","parameters":[{"constant":false,"id":711,"mutability":"mutable","name":"spender","nameLocation":"1517:7:5","nodeType":"VariableDeclaration","scope":717,"src":"1509:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":710,"name":"address","nodeType":"ElementaryTypeName","src":"1509:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":713,"mutability":"mutable","name":"allowance","nameLocation":"1534:9:5","nodeType":"VariableDeclaration","scope":717,"src":"1526:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":712,"name":"uint256","nodeType":"ElementaryTypeName","src":"1526:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":715,"mutability":"mutable","name":"needed","nameLocation":"1553:6:5","nodeType":"VariableDeclaration","scope":717,"src":"1545:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":714,"name":"uint256","nodeType":"ElementaryTypeName","src":"1545:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1508:52:5"},"src":"1476:85:5"},{"documentation":{"id":718,"nodeType":"StructuredDocumentation","src":"1567:174:5","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"e602df05","id":722,"name":"ERC20InvalidApprover","nameLocation":"1752:20:5","nodeType":"ErrorDefinition","parameters":{"id":721,"nodeType":"ParameterList","parameters":[{"constant":false,"id":720,"mutability":"mutable","name":"approver","nameLocation":"1781:8:5","nodeType":"VariableDeclaration","scope":722,"src":"1773:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":719,"name":"address","nodeType":"ElementaryTypeName","src":"1773:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1772:18:5"},"src":"1746:45:5"},{"documentation":{"id":723,"nodeType":"StructuredDocumentation","src":"1797:195:5","text":" @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"94280d62","id":727,"name":"ERC20InvalidSpender","nameLocation":"2003:19:5","nodeType":"ErrorDefinition","parameters":{"id":726,"nodeType":"ParameterList","parameters":[{"constant":false,"id":725,"mutability":"mutable","name":"spender","nameLocation":"2031:7:5","nodeType":"VariableDeclaration","scope":727,"src":"2023:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":724,"name":"address","nodeType":"ElementaryTypeName","src":"2023:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2022:17:5"},"src":"1997:43:5"}],"scope":824,"src":"278:1764:5","usedErrors":[698,703,708,717,722,727],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":729,"nodeType":"StructuredDocumentation","src":"2044:141:5","text":" @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."},"fullyImplemented":true,"id":776,"linearizedBaseContracts":[776],"name":"IERC721Errors","nameLocation":"2196:13:5","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":730,"nodeType":"StructuredDocumentation","src":"2216:219:5","text":" @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."},"errorSelector":"89c62b64","id":734,"name":"ERC721InvalidOwner","nameLocation":"2446:18:5","nodeType":"ErrorDefinition","parameters":{"id":733,"nodeType":"ParameterList","parameters":[{"constant":false,"id":732,"mutability":"mutable","name":"owner","nameLocation":"2473:5:5","nodeType":"VariableDeclaration","scope":734,"src":"2465:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":731,"name":"address","nodeType":"ElementaryTypeName","src":"2465:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2464:15:5"},"src":"2440:40:5"},{"documentation":{"id":735,"nodeType":"StructuredDocumentation","src":"2486:132:5","text":" @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."},"errorSelector":"7e273289","id":739,"name":"ERC721NonexistentToken","nameLocation":"2629:22:5","nodeType":"ErrorDefinition","parameters":{"id":738,"nodeType":"ParameterList","parameters":[{"constant":false,"id":737,"mutability":"mutable","name":"tokenId","nameLocation":"2660:7:5","nodeType":"VariableDeclaration","scope":739,"src":"2652:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":736,"name":"uint256","nodeType":"ElementaryTypeName","src":"2652:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2651:17:5"},"src":"2623:46:5"},{"documentation":{"id":740,"nodeType":"StructuredDocumentation","src":"2675:289:5","text":" @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."},"errorSelector":"64283d7b","id":748,"name":"ERC721IncorrectOwner","nameLocation":"2975:20:5","nodeType":"ErrorDefinition","parameters":{"id":747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":742,"mutability":"mutable","name":"sender","nameLocation":"3004:6:5","nodeType":"VariableDeclaration","scope":748,"src":"2996:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":741,"name":"address","nodeType":"ElementaryTypeName","src":"2996:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":744,"mutability":"mutable","name":"tokenId","nameLocation":"3020:7:5","nodeType":"VariableDeclaration","scope":748,"src":"3012:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":743,"name":"uint256","nodeType":"ElementaryTypeName","src":"3012:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":746,"mutability":"mutable","name":"owner","nameLocation":"3037:5:5","nodeType":"VariableDeclaration","scope":748,"src":"3029:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":745,"name":"address","nodeType":"ElementaryTypeName","src":"3029:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2995:48:5"},"src":"2969:75:5"},{"documentation":{"id":749,"nodeType":"StructuredDocumentation","src":"3050:152:5","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"73c6ac6e","id":753,"name":"ERC721InvalidSender","nameLocation":"3213:19:5","nodeType":"ErrorDefinition","parameters":{"id":752,"nodeType":"ParameterList","parameters":[{"constant":false,"id":751,"mutability":"mutable","name":"sender","nameLocation":"3241:6:5","nodeType":"VariableDeclaration","scope":753,"src":"3233:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":750,"name":"address","nodeType":"ElementaryTypeName","src":"3233:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3232:16:5"},"src":"3207:42:5"},{"documentation":{"id":754,"nodeType":"StructuredDocumentation","src":"3255:159:5","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"64a0ae92","id":758,"name":"ERC721InvalidReceiver","nameLocation":"3425:21:5","nodeType":"ErrorDefinition","parameters":{"id":757,"nodeType":"ParameterList","parameters":[{"constant":false,"id":756,"mutability":"mutable","name":"receiver","nameLocation":"3455:8:5","nodeType":"VariableDeclaration","scope":758,"src":"3447:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":755,"name":"address","nodeType":"ElementaryTypeName","src":"3447:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3446:18:5"},"src":"3419:46:5"},{"documentation":{"id":759,"nodeType":"StructuredDocumentation","src":"3471:247:5","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."},"errorSelector":"177e802f","id":765,"name":"ERC721InsufficientApproval","nameLocation":"3729:26:5","nodeType":"ErrorDefinition","parameters":{"id":764,"nodeType":"ParameterList","parameters":[{"constant":false,"id":761,"mutability":"mutable","name":"operator","nameLocation":"3764:8:5","nodeType":"VariableDeclaration","scope":765,"src":"3756:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":760,"name":"address","nodeType":"ElementaryTypeName","src":"3756:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":763,"mutability":"mutable","name":"tokenId","nameLocation":"3782:7:5","nodeType":"VariableDeclaration","scope":765,"src":"3774:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":762,"name":"uint256","nodeType":"ElementaryTypeName","src":"3774:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3755:35:5"},"src":"3723:68:5"},{"documentation":{"id":766,"nodeType":"StructuredDocumentation","src":"3797:174:5","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"a9fbf51f","id":770,"name":"ERC721InvalidApprover","nameLocation":"3982:21:5","nodeType":"ErrorDefinition","parameters":{"id":769,"nodeType":"ParameterList","parameters":[{"constant":false,"id":768,"mutability":"mutable","name":"approver","nameLocation":"4012:8:5","nodeType":"VariableDeclaration","scope":770,"src":"4004:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":767,"name":"address","nodeType":"ElementaryTypeName","src":"4004:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4003:18:5"},"src":"3976:46:5"},{"documentation":{"id":771,"nodeType":"StructuredDocumentation","src":"4028:197:5","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"5b08ba18","id":775,"name":"ERC721InvalidOperator","nameLocation":"4236:21:5","nodeType":"ErrorDefinition","parameters":{"id":774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":773,"mutability":"mutable","name":"operator","nameLocation":"4266:8:5","nodeType":"VariableDeclaration","scope":775,"src":"4258:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":772,"name":"address","nodeType":"ElementaryTypeName","src":"4258:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4257:18:5"},"src":"4230:46:5"}],"scope":824,"src":"2186:2092:5","usedErrors":[734,739,748,753,758,765,770,775],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1155Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":777,"nodeType":"StructuredDocumentation","src":"4280:143:5","text":" @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."},"fullyImplemented":true,"id":823,"linearizedBaseContracts":[823],"name":"IERC1155Errors","nameLocation":"4434:14:5","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":778,"nodeType":"StructuredDocumentation","src":"4455:361:5","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."},"errorSelector":"03dee4c5","id":788,"name":"ERC1155InsufficientBalance","nameLocation":"4827:26:5","nodeType":"ErrorDefinition","parameters":{"id":787,"nodeType":"ParameterList","parameters":[{"constant":false,"id":780,"mutability":"mutable","name":"sender","nameLocation":"4862:6:5","nodeType":"VariableDeclaration","scope":788,"src":"4854:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":779,"name":"address","nodeType":"ElementaryTypeName","src":"4854:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":782,"mutability":"mutable","name":"balance","nameLocation":"4878:7:5","nodeType":"VariableDeclaration","scope":788,"src":"4870:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":781,"name":"uint256","nodeType":"ElementaryTypeName","src":"4870:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":784,"mutability":"mutable","name":"needed","nameLocation":"4895:6:5","nodeType":"VariableDeclaration","scope":788,"src":"4887:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":783,"name":"uint256","nodeType":"ElementaryTypeName","src":"4887:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":786,"mutability":"mutable","name":"tokenId","nameLocation":"4911:7:5","nodeType":"VariableDeclaration","scope":788,"src":"4903:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":785,"name":"uint256","nodeType":"ElementaryTypeName","src":"4903:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4853:66:5"},"src":"4821:99:5"},{"documentation":{"id":789,"nodeType":"StructuredDocumentation","src":"4926:152:5","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"01a83514","id":793,"name":"ERC1155InvalidSender","nameLocation":"5089:20:5","nodeType":"ErrorDefinition","parameters":{"id":792,"nodeType":"ParameterList","parameters":[{"constant":false,"id":791,"mutability":"mutable","name":"sender","nameLocation":"5118:6:5","nodeType":"VariableDeclaration","scope":793,"src":"5110:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":790,"name":"address","nodeType":"ElementaryTypeName","src":"5110:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5109:16:5"},"src":"5083:43:5"},{"documentation":{"id":794,"nodeType":"StructuredDocumentation","src":"5132:159:5","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"57f447ce","id":798,"name":"ERC1155InvalidReceiver","nameLocation":"5302:22:5","nodeType":"ErrorDefinition","parameters":{"id":797,"nodeType":"ParameterList","parameters":[{"constant":false,"id":796,"mutability":"mutable","name":"receiver","nameLocation":"5333:8:5","nodeType":"VariableDeclaration","scope":798,"src":"5325:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":795,"name":"address","nodeType":"ElementaryTypeName","src":"5325:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5324:18:5"},"src":"5296:47:5"},{"documentation":{"id":799,"nodeType":"StructuredDocumentation","src":"5349:256:5","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."},"errorSelector":"e237d922","id":805,"name":"ERC1155MissingApprovalForAll","nameLocation":"5616:28:5","nodeType":"ErrorDefinition","parameters":{"id":804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":801,"mutability":"mutable","name":"operator","nameLocation":"5653:8:5","nodeType":"VariableDeclaration","scope":805,"src":"5645:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":800,"name":"address","nodeType":"ElementaryTypeName","src":"5645:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":803,"mutability":"mutable","name":"owner","nameLocation":"5671:5:5","nodeType":"VariableDeclaration","scope":805,"src":"5663:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":802,"name":"address","nodeType":"ElementaryTypeName","src":"5663:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5644:33:5"},"src":"5610:68:5"},{"documentation":{"id":806,"nodeType":"StructuredDocumentation","src":"5684:174:5","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"3e31884e","id":810,"name":"ERC1155InvalidApprover","nameLocation":"5869:22:5","nodeType":"ErrorDefinition","parameters":{"id":809,"nodeType":"ParameterList","parameters":[{"constant":false,"id":808,"mutability":"mutable","name":"approver","nameLocation":"5900:8:5","nodeType":"VariableDeclaration","scope":810,"src":"5892:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":807,"name":"address","nodeType":"ElementaryTypeName","src":"5892:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5891:18:5"},"src":"5863:47:5"},{"documentation":{"id":811,"nodeType":"StructuredDocumentation","src":"5916:197:5","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"ced3e100","id":815,"name":"ERC1155InvalidOperator","nameLocation":"6124:22:5","nodeType":"ErrorDefinition","parameters":{"id":814,"nodeType":"ParameterList","parameters":[{"constant":false,"id":813,"mutability":"mutable","name":"operator","nameLocation":"6155:8:5","nodeType":"VariableDeclaration","scope":815,"src":"6147:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":812,"name":"address","nodeType":"ElementaryTypeName","src":"6147:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6146:18:5"},"src":"6118:47:5"},{"documentation":{"id":816,"nodeType":"StructuredDocumentation","src":"6171:280:5","text":" @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"},"errorSelector":"5b059991","id":822,"name":"ERC1155InvalidArrayLength","nameLocation":"6462:25:5","nodeType":"ErrorDefinition","parameters":{"id":821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":818,"mutability":"mutable","name":"idsLength","nameLocation":"6496:9:5","nodeType":"VariableDeclaration","scope":822,"src":"6488:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":817,"name":"uint256","nodeType":"ElementaryTypeName","src":"6488:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":820,"mutability":"mutable","name":"valuesLength","nameLocation":"6515:12:5","nodeType":"VariableDeclaration","scope":822,"src":"6507:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":819,"name":"uint256","nodeType":"ElementaryTypeName","src":"6507:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6487:41:5"},"src":"6456:73:5"}],"scope":824,"src":"4424:2107:5","usedErrors":[788,793,798,805,810,815,822],"usedEvents":[]}],"src":"112:6420:5"},"id":5},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol","exportedSymbols":{"Address":[2008],"ERC1967Utils":[1126],"IBeacon":[1136],"StorageSlot":[2217]},"id":1127,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":825,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"114:24:6"},{"absolutePath":"@openzeppelin/contracts/proxy/beacon/IBeacon.sol","file":"../beacon/IBeacon.sol","id":827,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1127,"sourceUnit":1137,"src":"140:46:6","symbolAliases":[{"foreign":{"id":826,"name":"IBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1136,"src":"148:7:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../../utils/Address.sol","id":829,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1127,"sourceUnit":2009,"src":"187:48:6","symbolAliases":[{"foreign":{"id":828,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2008,"src":"195:7:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","file":"../../utils/StorageSlot.sol","id":831,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1127,"sourceUnit":2218,"src":"236:56:6","symbolAliases":[{"foreign":{"id":830,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2217,"src":"244:11:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ERC1967Utils","contractDependencies":[],"contractKind":"library","documentation":{"id":832,"nodeType":"StructuredDocumentation","src":"294:154:6","text":" @dev This abstract contract provides getters and event emitting update functions for\n https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots."},"fullyImplemented":true,"id":1126,"linearizedBaseContracts":[1126],"name":"ERC1967Utils","nameLocation":"457:12:6","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":833,"nodeType":"StructuredDocumentation","src":"660:68:6","text":" @dev Emitted when the implementation is upgraded."},"eventSelector":"bc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b","id":837,"name":"Upgraded","nameLocation":"739:8:6","nodeType":"EventDefinition","parameters":{"id":836,"nodeType":"ParameterList","parameters":[{"constant":false,"id":835,"indexed":true,"mutability":"mutable","name":"implementation","nameLocation":"764:14:6","nodeType":"VariableDeclaration","scope":837,"src":"748:30:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":834,"name":"address","nodeType":"ElementaryTypeName","src":"748:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"747:32:6"},"src":"733:47:6"},{"anonymous":false,"documentation":{"id":838,"nodeType":"StructuredDocumentation","src":"786:67:6","text":" @dev Emitted when the admin account has changed."},"eventSelector":"7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f","id":844,"name":"AdminChanged","nameLocation":"864:12:6","nodeType":"EventDefinition","parameters":{"id":843,"nodeType":"ParameterList","parameters":[{"constant":false,"id":840,"indexed":false,"mutability":"mutable","name":"previousAdmin","nameLocation":"885:13:6","nodeType":"VariableDeclaration","scope":844,"src":"877:21:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":839,"name":"address","nodeType":"ElementaryTypeName","src":"877:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":842,"indexed":false,"mutability":"mutable","name":"newAdmin","nameLocation":"908:8:6","nodeType":"VariableDeclaration","scope":844,"src":"900:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":841,"name":"address","nodeType":"ElementaryTypeName","src":"900:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"876:41:6"},"src":"858:60:6"},{"anonymous":false,"documentation":{"id":845,"nodeType":"StructuredDocumentation","src":"924:59:6","text":" @dev Emitted when the beacon is changed."},"eventSelector":"1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e","id":849,"name":"BeaconUpgraded","nameLocation":"994:14:6","nodeType":"EventDefinition","parameters":{"id":848,"nodeType":"ParameterList","parameters":[{"constant":false,"id":847,"indexed":true,"mutability":"mutable","name":"beacon","nameLocation":"1025:6:6","nodeType":"VariableDeclaration","scope":849,"src":"1009:22:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":846,"name":"address","nodeType":"ElementaryTypeName","src":"1009:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1008:24:6"},"src":"988:45:6"},{"constant":true,"documentation":{"id":850,"nodeType":"StructuredDocumentation","src":"1039:170:6","text":" @dev Storage slot with the address of the current implementation.\n This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1."},"id":853,"mutability":"constant","name":"IMPLEMENTATION_SLOT","nameLocation":"1305:19:6","nodeType":"VariableDeclaration","scope":1126,"src":"1279:114:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":851,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1279:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307833363038393461313362613161333231303636376338323834393264623938646361336532303736636333373335613932306133636135303564333832626263","id":852,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1327:66:6","typeDescriptions":{"typeIdentifier":"t_rational_24440054405305269366569402256811496959409073762505157381672968839269610695612_by_1","typeString":"int_const 2444...(69 digits omitted)...5612"},"value":"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc"},"visibility":"internal"},{"documentation":{"id":854,"nodeType":"StructuredDocumentation","src":"1400:69:6","text":" @dev The `implementation` of the proxy is invalid."},"errorSelector":"4c9c8ce3","id":858,"name":"ERC1967InvalidImplementation","nameLocation":"1480:28:6","nodeType":"ErrorDefinition","parameters":{"id":857,"nodeType":"ParameterList","parameters":[{"constant":false,"id":856,"mutability":"mutable","name":"implementation","nameLocation":"1517:14:6","nodeType":"VariableDeclaration","scope":858,"src":"1509:22:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":855,"name":"address","nodeType":"ElementaryTypeName","src":"1509:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1508:24:6"},"src":"1474:59:6"},{"documentation":{"id":859,"nodeType":"StructuredDocumentation","src":"1539:60:6","text":" @dev The `admin` of the proxy is invalid."},"errorSelector":"62e77ba2","id":863,"name":"ERC1967InvalidAdmin","nameLocation":"1610:19:6","nodeType":"ErrorDefinition","parameters":{"id":862,"nodeType":"ParameterList","parameters":[{"constant":false,"id":861,"mutability":"mutable","name":"admin","nameLocation":"1638:5:6","nodeType":"VariableDeclaration","scope":863,"src":"1630:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":860,"name":"address","nodeType":"ElementaryTypeName","src":"1630:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1629:15:6"},"src":"1604:41:6"},{"documentation":{"id":864,"nodeType":"StructuredDocumentation","src":"1651:61:6","text":" @dev The `beacon` of the proxy is invalid."},"errorSelector":"64ced0ec","id":868,"name":"ERC1967InvalidBeacon","nameLocation":"1723:20:6","nodeType":"ErrorDefinition","parameters":{"id":867,"nodeType":"ParameterList","parameters":[{"constant":false,"id":866,"mutability":"mutable","name":"beacon","nameLocation":"1752:6:6","nodeType":"VariableDeclaration","scope":868,"src":"1744:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":865,"name":"address","nodeType":"ElementaryTypeName","src":"1744:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1743:16:6"},"src":"1717:43:6"},{"documentation":{"id":869,"nodeType":"StructuredDocumentation","src":"1766:82:6","text":" @dev An upgrade function sees `msg.value > 0` that may be lost."},"errorSelector":"b398979f","id":871,"name":"ERC1967NonPayable","nameLocation":"1859:17:6","nodeType":"ErrorDefinition","parameters":{"id":870,"nodeType":"ParameterList","parameters":[],"src":"1876:2:6"},"src":"1853:26:6"},{"body":{"id":883,"nodeType":"Block","src":"2018:77:6","statements":[{"expression":{"expression":{"arguments":[{"id":879,"name":"IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":853,"src":"2062:19:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":877,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2217,"src":"2035:11:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$2217_$","typeString":"type(library StorageSlot)"}},"id":878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2047:14:6","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":2139,"src":"2035:26:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2113_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":880,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2035:47:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2113_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":881,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2083:5:6","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2112,"src":"2035:53:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":876,"id":882,"nodeType":"Return","src":"2028:60:6"}]},"documentation":{"id":872,"nodeType":"StructuredDocumentation","src":"1885:67:6","text":" @dev Returns the current implementation address."},"id":884,"implemented":true,"kind":"function","modifiers":[],"name":"getImplementation","nameLocation":"1966:17:6","nodeType":"FunctionDefinition","parameters":{"id":873,"nodeType":"ParameterList","parameters":[],"src":"1983:2:6"},"returnParameters":{"id":876,"nodeType":"ParameterList","parameters":[{"constant":false,"id":875,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":884,"src":"2009:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":874,"name":"address","nodeType":"ElementaryTypeName","src":"2009:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2008:9:6"},"scope":1126,"src":"1957:138:6","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":910,"nodeType":"Block","src":"2249:218:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":890,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":887,"src":"2263:17:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2281:4:6","memberName":"code","nodeType":"MemberAccess","src":"2263:22:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2286:6:6","memberName":"length","nodeType":"MemberAccess","src":"2263:29:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2296:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2263:34:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":900,"nodeType":"IfStatement","src":"2259:119:6","trueBody":{"id":899,"nodeType":"Block","src":"2299:79:6","statements":[{"errorCall":{"arguments":[{"id":896,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":887,"src":"2349:17:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":895,"name":"ERC1967InvalidImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":858,"src":"2320:28:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":897,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2320:47:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":898,"nodeType":"RevertStatement","src":"2313:54:6"}]}},{"expression":{"id":908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":904,"name":"IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":853,"src":"2414:19:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":901,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2217,"src":"2387:11:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$2217_$","typeString":"type(library StorageSlot)"}},"id":903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2399:14:6","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":2139,"src":"2387:26:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2113_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":905,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2387:47:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2113_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":906,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2435:5:6","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2112,"src":"2387:53:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":907,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":887,"src":"2443:17:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2387:73:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":909,"nodeType":"ExpressionStatement","src":"2387:73:6"}]},"documentation":{"id":885,"nodeType":"StructuredDocumentation","src":"2101:80:6","text":" @dev Stores a new address in the EIP1967 implementation slot."},"id":911,"implemented":true,"kind":"function","modifiers":[],"name":"_setImplementation","nameLocation":"2195:18:6","nodeType":"FunctionDefinition","parameters":{"id":888,"nodeType":"ParameterList","parameters":[{"constant":false,"id":887,"mutability":"mutable","name":"newImplementation","nameLocation":"2222:17:6","nodeType":"VariableDeclaration","scope":911,"src":"2214:25:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":886,"name":"address","nodeType":"ElementaryTypeName","src":"2214:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2213:27:6"},"returnParameters":{"id":889,"nodeType":"ParameterList","parameters":[],"src":"2249:0:6"},"scope":1126,"src":"2186:281:6","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":944,"nodeType":"Block","src":"2860:254:6","statements":[{"expression":{"arguments":[{"id":920,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":914,"src":"2889:17:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":919,"name":"_setImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":911,"src":"2870:18:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":921,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2870:37:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":922,"nodeType":"ExpressionStatement","src":"2870:37:6"},{"eventCall":{"arguments":[{"id":924,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":914,"src":"2931:17:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":923,"name":"Upgraded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":837,"src":"2922:8:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":925,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2922:27:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":926,"nodeType":"EmitStatement","src":"2917:32:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":927,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":916,"src":"2964:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2969:6:6","memberName":"length","nodeType":"MemberAccess","src":"2964:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":929,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2978:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2964:15:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":942,"nodeType":"Block","src":"3065:43:6","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":939,"name":"_checkNonPayable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1125,"src":"3079:16:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":940,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3079:18:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":941,"nodeType":"ExpressionStatement","src":"3079:18:6"}]},"id":943,"nodeType":"IfStatement","src":"2960:148:6","trueBody":{"id":938,"nodeType":"Block","src":"2981:78:6","statements":[{"expression":{"arguments":[{"id":934,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":914,"src":"3024:17:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":935,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":916,"src":"3043:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":931,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2008,"src":"2995:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$2008_$","typeString":"type(library Address)"}},"id":933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3003:20:6","memberName":"functionDelegateCall","nodeType":"MemberAccess","referencedDeclaration":1927,"src":"2995:28:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory) returns (bytes memory)"}},"id":936,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2995:53:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":937,"nodeType":"ExpressionStatement","src":"2995:53:6"}]}}]},"documentation":{"id":912,"nodeType":"StructuredDocumentation","src":"2473:301:6","text":" @dev Performs implementation upgrade with additional setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-Upgraded} event."},"id":945,"implemented":true,"kind":"function","modifiers":[],"name":"upgradeToAndCall","nameLocation":"2788:16:6","nodeType":"FunctionDefinition","parameters":{"id":917,"nodeType":"ParameterList","parameters":[{"constant":false,"id":914,"mutability":"mutable","name":"newImplementation","nameLocation":"2813:17:6","nodeType":"VariableDeclaration","scope":945,"src":"2805:25:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":913,"name":"address","nodeType":"ElementaryTypeName","src":"2805:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":916,"mutability":"mutable","name":"data","nameLocation":"2845:4:6","nodeType":"VariableDeclaration","scope":945,"src":"2832:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":915,"name":"bytes","nodeType":"ElementaryTypeName","src":"2832:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2804:46:6"},"returnParameters":{"id":918,"nodeType":"ParameterList","parameters":[],"src":"2860:0:6"},"scope":1126,"src":"2779:335:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":true,"documentation":{"id":946,"nodeType":"StructuredDocumentation","src":"3120:145:6","text":" @dev Storage slot with the admin of the contract.\n This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1."},"id":949,"mutability":"constant","name":"ADMIN_SLOT","nameLocation":"3361:10:6","nodeType":"VariableDeclaration","scope":1126,"src":"3335:105:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":947,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3335:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307862353331323736383461353638623331373361653133623966386136303136653234336536336236653865653131373864366137313738353062356436313033","id":948,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3374:66:6","typeDescriptions":{"typeIdentifier":"t_rational_81955473079516046949633743016697847541294818689821282749996681496272635257091_by_1","typeString":"int_const 8195...(69 digits omitted)...7091"},"value":"0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103"},"visibility":"internal"},{"body":{"id":961,"nodeType":"Block","src":"3844:68:6","statements":[{"expression":{"expression":{"arguments":[{"id":957,"name":"ADMIN_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":949,"src":"3888:10:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":955,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2217,"src":"3861:11:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$2217_$","typeString":"type(library StorageSlot)"}},"id":956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3873:14:6","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":2139,"src":"3861:26:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2113_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":958,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3861:38:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2113_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":959,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3900:5:6","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2112,"src":"3861:44:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":954,"id":960,"nodeType":"Return","src":"3854:51:6"}]},"documentation":{"id":950,"nodeType":"StructuredDocumentation","src":"3447:340:6","text":" @dev Returns the current admin.\n TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using\n the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`"},"id":962,"implemented":true,"kind":"function","modifiers":[],"name":"getAdmin","nameLocation":"3801:8:6","nodeType":"FunctionDefinition","parameters":{"id":951,"nodeType":"ParameterList","parameters":[],"src":"3809:2:6"},"returnParameters":{"id":954,"nodeType":"ParameterList","parameters":[{"constant":false,"id":953,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":962,"src":"3835:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":952,"name":"address","nodeType":"ElementaryTypeName","src":"3835:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3834:9:6"},"scope":1126,"src":"3792:120:6","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":992,"nodeType":"Block","src":"4039:172:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":968,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":965,"src":"4053:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":971,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4073:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":970,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4065:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":969,"name":"address","nodeType":"ElementaryTypeName","src":"4065:7:6","typeDescriptions":{}}},"id":972,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4065:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4053:22:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":982,"nodeType":"IfStatement","src":"4049:91:6","trueBody":{"id":981,"nodeType":"Block","src":"4077:63:6","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4126:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":976,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4118:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":975,"name":"address","nodeType":"ElementaryTypeName","src":"4118:7:6","typeDescriptions":{}}},"id":978,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4118:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":974,"name":"ERC1967InvalidAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":863,"src":"4098:19:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":979,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4098:31:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":980,"nodeType":"RevertStatement","src":"4091:38:6"}]}},{"expression":{"id":990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":986,"name":"ADMIN_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":949,"src":"4176:10:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":983,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2217,"src":"4149:11:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$2217_$","typeString":"type(library StorageSlot)"}},"id":985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4161:14:6","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":2139,"src":"4149:26:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2113_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":987,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4149:38:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2113_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":988,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4188:5:6","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2112,"src":"4149:44:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":989,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":965,"src":"4196:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4149:55:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":991,"nodeType":"ExpressionStatement","src":"4149:55:6"}]},"documentation":{"id":963,"nodeType":"StructuredDocumentation","src":"3918:71:6","text":" @dev Stores a new address in the EIP1967 admin slot."},"id":993,"implemented":true,"kind":"function","modifiers":[],"name":"_setAdmin","nameLocation":"4003:9:6","nodeType":"FunctionDefinition","parameters":{"id":966,"nodeType":"ParameterList","parameters":[{"constant":false,"id":965,"mutability":"mutable","name":"newAdmin","nameLocation":"4021:8:6","nodeType":"VariableDeclaration","scope":993,"src":"4013:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":964,"name":"address","nodeType":"ElementaryTypeName","src":"4013:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4012:18:6"},"returnParameters":{"id":967,"nodeType":"ParameterList","parameters":[],"src":"4039:0:6"},"scope":1126,"src":"3994:217:6","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1009,"nodeType":"Block","src":"4379:85:6","statements":[{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1000,"name":"getAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":962,"src":"4407:8:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1001,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4407:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1002,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":996,"src":"4419:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":999,"name":"AdminChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":844,"src":"4394:12:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":1003,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4394:34:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1004,"nodeType":"EmitStatement","src":"4389:39:6"},{"expression":{"arguments":[{"id":1006,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":996,"src":"4448:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1005,"name":"_setAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":993,"src":"4438:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1007,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4438:19:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1008,"nodeType":"ExpressionStatement","src":"4438:19:6"}]},"documentation":{"id":994,"nodeType":"StructuredDocumentation","src":"4217:109:6","text":" @dev Changes the admin of the proxy.\n Emits an {IERC1967-AdminChanged} event."},"id":1010,"implemented":true,"kind":"function","modifiers":[],"name":"changeAdmin","nameLocation":"4340:11:6","nodeType":"FunctionDefinition","parameters":{"id":997,"nodeType":"ParameterList","parameters":[{"constant":false,"id":996,"mutability":"mutable","name":"newAdmin","nameLocation":"4360:8:6","nodeType":"VariableDeclaration","scope":1010,"src":"4352:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":995,"name":"address","nodeType":"ElementaryTypeName","src":"4352:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4351:18:6"},"returnParameters":{"id":998,"nodeType":"ParameterList","parameters":[],"src":"4379:0:6"},"scope":1126,"src":"4331:133:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":true,"documentation":{"id":1011,"nodeType":"StructuredDocumentation","src":"4470:201:6","text":" @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1."},"id":1014,"mutability":"constant","name":"BEACON_SLOT","nameLocation":"4767:11:6","nodeType":"VariableDeclaration","scope":1126,"src":"4741:106:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1012,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4741:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307861336630616437346535343233616562666438306433656634333436353738333335613961373261656165653539666636636233353832623335313333643530","id":1013,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4781:66:6","typeDescriptions":{"typeIdentifier":"t_rational_74152234768234802001998023604048924213078445070507226371336425913862612794704_by_1","typeString":"int_const 7415...(69 digits omitted)...4704"},"value":"0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50"},"visibility":"internal"},{"body":{"id":1026,"nodeType":"Block","src":"4963:69:6","statements":[{"expression":{"expression":{"arguments":[{"id":1022,"name":"BEACON_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1014,"src":"5007:11:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1020,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2217,"src":"4980:11:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$2217_$","typeString":"type(library StorageSlot)"}},"id":1021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4992:14:6","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":2139,"src":"4980:26:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2113_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":1023,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4980:39:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2113_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":1024,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5020:5:6","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2112,"src":"4980:45:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1019,"id":1025,"nodeType":"Return","src":"4973:52:6"}]},"documentation":{"id":1015,"nodeType":"StructuredDocumentation","src":"4854:51:6","text":" @dev Returns the current beacon."},"id":1027,"implemented":true,"kind":"function","modifiers":[],"name":"getBeacon","nameLocation":"4919:9:6","nodeType":"FunctionDefinition","parameters":{"id":1016,"nodeType":"ParameterList","parameters":[],"src":"4928:2:6"},"returnParameters":{"id":1019,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1018,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1027,"src":"4954:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1017,"name":"address","nodeType":"ElementaryTypeName","src":"4954:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4953:9:6"},"scope":1126,"src":"4910:122:6","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1072,"nodeType":"Block","src":"5161:390:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1033,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1030,"src":"5175:9:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5185:4:6","memberName":"code","nodeType":"MemberAccess","src":"5175:14:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5190:6:6","memberName":"length","nodeType":"MemberAccess","src":"5175:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1036,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5200:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5175:26:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1043,"nodeType":"IfStatement","src":"5171:95:6","trueBody":{"id":1042,"nodeType":"Block","src":"5203:63:6","statements":[{"errorCall":{"arguments":[{"id":1039,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1030,"src":"5245:9:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1038,"name":"ERC1967InvalidBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":868,"src":"5224:20:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1040,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5224:31:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1041,"nodeType":"RevertStatement","src":"5217:38:6"}]}},{"expression":{"id":1051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":1047,"name":"BEACON_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1014,"src":"5303:11:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1044,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2217,"src":"5276:11:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$2217_$","typeString":"type(library StorageSlot)"}},"id":1046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5288:14:6","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":2139,"src":"5276:26:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2113_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":1048,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5276:39:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2113_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":1049,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5316:5:6","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2112,"src":"5276:45:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1050,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1030,"src":"5324:9:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5276:57:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1052,"nodeType":"ExpressionStatement","src":"5276:57:6"},{"assignments":[1054],"declarations":[{"constant":false,"id":1054,"mutability":"mutable","name":"beaconImplementation","nameLocation":"5352:20:6","nodeType":"VariableDeclaration","scope":1072,"src":"5344:28:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1053,"name":"address","nodeType":"ElementaryTypeName","src":"5344:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1060,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":1056,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1030,"src":"5383:9:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1055,"name":"IBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1136,"src":"5375:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBeacon_$1136_$","typeString":"type(contract IBeacon)"}},"id":1057,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5375:18:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBeacon_$1136","typeString":"contract IBeacon"}},"id":1058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5394:14:6","memberName":"implementation","nodeType":"MemberAccess","referencedDeclaration":1135,"src":"5375:33:6","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":1059,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5375:35:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5344:66:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1061,"name":"beaconImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1054,"src":"5424:20:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5445:4:6","memberName":"code","nodeType":"MemberAccess","src":"5424:25:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5450:6:6","memberName":"length","nodeType":"MemberAccess","src":"5424:32:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1064,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5460:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5424:37:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1071,"nodeType":"IfStatement","src":"5420:125:6","trueBody":{"id":1070,"nodeType":"Block","src":"5463:82:6","statements":[{"errorCall":{"arguments":[{"id":1067,"name":"beaconImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1054,"src":"5513:20:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1066,"name":"ERC1967InvalidImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":858,"src":"5484:28:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1068,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5484:50:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1069,"nodeType":"RevertStatement","src":"5477:57:6"}]}}]},"documentation":{"id":1028,"nodeType":"StructuredDocumentation","src":"5038:71:6","text":" @dev Stores a new beacon in the EIP1967 beacon slot."},"id":1073,"implemented":true,"kind":"function","modifiers":[],"name":"_setBeacon","nameLocation":"5123:10:6","nodeType":"FunctionDefinition","parameters":{"id":1031,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1030,"mutability":"mutable","name":"newBeacon","nameLocation":"5142:9:6","nodeType":"VariableDeclaration","scope":1073,"src":"5134:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1029,"name":"address","nodeType":"ElementaryTypeName","src":"5134:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5133:19:6"},"returnParameters":{"id":1032,"nodeType":"ParameterList","parameters":[],"src":"5161:0:6"},"scope":1126,"src":"5114:437:6","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1110,"nodeType":"Block","src":"6155:254:6","statements":[{"expression":{"arguments":[{"id":1082,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1076,"src":"6176:9:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1081,"name":"_setBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1073,"src":"6165:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1083,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6165:21:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1084,"nodeType":"ExpressionStatement","src":"6165:21:6"},{"eventCall":{"arguments":[{"id":1086,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1076,"src":"6216:9:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1085,"name":"BeaconUpgraded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":849,"src":"6201:14:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1087,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6201:25:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1088,"nodeType":"EmitStatement","src":"6196:30:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1089,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1078,"src":"6241:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6246:6:6","memberName":"length","nodeType":"MemberAccess","src":"6241:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1091,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6255:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6241:15:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1108,"nodeType":"Block","src":"6360:43:6","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1105,"name":"_checkNonPayable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1125,"src":"6374:16:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1106,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6374:18:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1107,"nodeType":"ExpressionStatement","src":"6374:18:6"}]},"id":1109,"nodeType":"IfStatement","src":"6237:166:6","trueBody":{"id":1104,"nodeType":"Block","src":"6258:96:6","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":1097,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1076,"src":"6309:9:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1096,"name":"IBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1136,"src":"6301:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBeacon_$1136_$","typeString":"type(contract IBeacon)"}},"id":1098,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6301:18:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBeacon_$1136","typeString":"contract IBeacon"}},"id":1099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6320:14:6","memberName":"implementation","nodeType":"MemberAccess","referencedDeclaration":1135,"src":"6301:33:6","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":1100,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6301:35:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1101,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1078,"src":"6338:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1093,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2008,"src":"6272:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$2008_$","typeString":"type(library Address)"}},"id":1095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6280:20:6","memberName":"functionDelegateCall","nodeType":"MemberAccess","referencedDeclaration":1927,"src":"6272:28:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory) returns (bytes memory)"}},"id":1102,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6272:71:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1103,"nodeType":"ExpressionStatement","src":"6272:71:6"}]}}]},"documentation":{"id":1074,"nodeType":"StructuredDocumentation","src":"5557:514:6","text":" @dev Change the beacon and trigger a setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-BeaconUpgraded} event.\n CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n efficiency."},"id":1111,"implemented":true,"kind":"function","modifiers":[],"name":"upgradeBeaconToAndCall","nameLocation":"6085:22:6","nodeType":"FunctionDefinition","parameters":{"id":1079,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1076,"mutability":"mutable","name":"newBeacon","nameLocation":"6116:9:6","nodeType":"VariableDeclaration","scope":1111,"src":"6108:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1075,"name":"address","nodeType":"ElementaryTypeName","src":"6108:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1078,"mutability":"mutable","name":"data","nameLocation":"6140:4:6","nodeType":"VariableDeclaration","scope":1111,"src":"6127:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1077,"name":"bytes","nodeType":"ElementaryTypeName","src":"6127:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6107:38:6"},"returnParameters":{"id":1080,"nodeType":"ParameterList","parameters":[],"src":"6155:0:6"},"scope":1126,"src":"6076:333:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1124,"nodeType":"Block","src":"6634:86:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1115,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6648:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6652:5:6","memberName":"value","nodeType":"MemberAccess","src":"6648:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1117,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6660:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6648:13:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1123,"nodeType":"IfStatement","src":"6644:70:6","trueBody":{"id":1122,"nodeType":"Block","src":"6663:51:6","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1119,"name":"ERC1967NonPayable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":871,"src":"6684:17:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1120,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6684:19:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1121,"nodeType":"RevertStatement","src":"6677:26:6"}]}}]},"documentation":{"id":1112,"nodeType":"StructuredDocumentation","src":"6415:178:6","text":" @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n if an upgrade doesn't perform an initialization call."},"id":1125,"implemented":true,"kind":"function","modifiers":[],"name":"_checkNonPayable","nameLocation":"6607:16:6","nodeType":"FunctionDefinition","parameters":{"id":1113,"nodeType":"ParameterList","parameters":[],"src":"6623:2:6"},"returnParameters":{"id":1114,"nodeType":"ParameterList","parameters":[],"src":"6634:0:6"},"scope":1126,"src":"6598:122:6","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":1127,"src":"449:6273:6","usedErrors":[858,863,868,871],"usedEvents":[837,844,849]}],"src":"114:6609:6"},"id":6},"@openzeppelin/contracts/proxy/beacon/IBeacon.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/proxy/beacon/IBeacon.sol","exportedSymbols":{"IBeacon":[1136]},"id":1137,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1128,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"108:24:7"},{"abstract":false,"baseContracts":[],"canonicalName":"IBeacon","contractDependencies":[],"contractKind":"interface","documentation":{"id":1129,"nodeType":"StructuredDocumentation","src":"134:79:7","text":" @dev This is the interface that {BeaconProxy} expects of its beacon."},"fullyImplemented":false,"id":1136,"linearizedBaseContracts":[1136],"name":"IBeacon","nameLocation":"224:7:7","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1130,"nodeType":"StructuredDocumentation","src":"238:168:7","text":" @dev Must return an address that can be used as a delegate call target.\n {UpgradeableBeacon} will check that this address is a contract."},"functionSelector":"5c60da1b","id":1135,"implemented":false,"kind":"function","modifiers":[],"name":"implementation","nameLocation":"420:14:7","nodeType":"FunctionDefinition","parameters":{"id":1131,"nodeType":"ParameterList","parameters":[],"src":"434:2:7"},"returnParameters":{"id":1134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1133,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1135,"src":"460:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1132,"name":"address","nodeType":"ElementaryTypeName","src":"460:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"459:9:7"},"scope":1136,"src":"411:58:7","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1137,"src":"214:257:7","usedErrors":[],"usedEvents":[]}],"src":"108:364:7"},"id":7},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","exportedSymbols":{"Context":[2038],"ERC20":[1651],"IERC20":[1729],"IERC20Errors":[728],"IERC20Metadata":[1755]},"id":1652,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1138,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:8"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"./IERC20.sol","id":1140,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1652,"sourceUnit":1730,"src":"131:36:8","symbolAliases":[{"foreign":{"id":1139,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1729,"src":"139:6:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"./extensions/IERC20Metadata.sol","id":1142,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1652,"sourceUnit":1756,"src":"168:63:8","symbolAliases":[{"foreign":{"id":1141,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1755,"src":"176:14:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":1144,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1652,"sourceUnit":2039,"src":"232:48:8","symbolAliases":[{"foreign":{"id":1143,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2038,"src":"240:7:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":1146,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1652,"sourceUnit":824,"src":"281:65:8","symbolAliases":[{"foreign":{"id":1145,"name":"IERC20Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":728,"src":"289:12:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1148,"name":"Context","nameLocations":["1428:7:8"],"nodeType":"IdentifierPath","referencedDeclaration":2038,"src":"1428:7:8"},"id":1149,"nodeType":"InheritanceSpecifier","src":"1428:7:8"},{"baseName":{"id":1150,"name":"IERC20","nameLocations":["1437:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":1729,"src":"1437:6:8"},"id":1151,"nodeType":"InheritanceSpecifier","src":"1437:6:8"},{"baseName":{"id":1152,"name":"IERC20Metadata","nameLocations":["1445:14:8"],"nodeType":"IdentifierPath","referencedDeclaration":1755,"src":"1445:14:8"},"id":1153,"nodeType":"InheritanceSpecifier","src":"1445:14:8"},{"baseName":{"id":1154,"name":"IERC20Errors","nameLocations":["1461:12:8"],"nodeType":"IdentifierPath","referencedDeclaration":728,"src":"1461:12:8"},"id":1155,"nodeType":"InheritanceSpecifier","src":"1461:12:8"}],"canonicalName":"ERC20","contractDependencies":[],"contractKind":"contract","documentation":{"id":1147,"nodeType":"StructuredDocumentation","src":"348:1052:8","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."},"fullyImplemented":true,"id":1651,"linearizedBaseContracts":[1651,728,1755,1729,2038],"name":"ERC20","nameLocation":"1419:5:8","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":1159,"mutability":"mutable","name":"_balances","nameLocation":"1524:9:8","nodeType":"VariableDeclaration","scope":1651,"src":"1480:53:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":1158,"keyName":"account","keyNameLocation":"1496:7:8","keyType":{"id":1156,"name":"address","nodeType":"ElementaryTypeName","src":"1488:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1480:35:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1157,"name":"uint256","nodeType":"ElementaryTypeName","src":"1507:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":1165,"mutability":"mutable","name":"_allowances","nameLocation":"1612:11:8","nodeType":"VariableDeclaration","scope":1651,"src":"1540:83:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":1164,"keyName":"account","keyNameLocation":"1556:7:8","keyType":{"id":1160,"name":"address","nodeType":"ElementaryTypeName","src":"1548:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1540:63:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1163,"keyName":"spender","keyNameLocation":"1583:7:8","keyType":{"id":1161,"name":"address","nodeType":"ElementaryTypeName","src":"1575:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1567:35:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1162,"name":"uint256","nodeType":"ElementaryTypeName","src":"1594:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":1167,"mutability":"mutable","name":"_totalSupply","nameLocation":"1646:12:8","nodeType":"VariableDeclaration","scope":1651,"src":"1630:28:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1166,"name":"uint256","nodeType":"ElementaryTypeName","src":"1630:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":1169,"mutability":"mutable","name":"_name","nameLocation":"1680:5:8","nodeType":"VariableDeclaration","scope":1651,"src":"1665:20:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":1168,"name":"string","nodeType":"ElementaryTypeName","src":"1665:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":1171,"mutability":"mutable","name":"_symbol","nameLocation":"1706:7:8","nodeType":"VariableDeclaration","scope":1651,"src":"1691:22:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":1170,"name":"string","nodeType":"ElementaryTypeName","src":"1691:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":1187,"nodeType":"Block","src":"1952:57:8","statements":[{"expression":{"id":1181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1179,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1169,"src":"1962:5:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1180,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1174,"src":"1970:5:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1962:13:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1182,"nodeType":"ExpressionStatement","src":"1962:13:8"},{"expression":{"id":1185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1183,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1171,"src":"1985:7:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1184,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1176,"src":"1995:7:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1985:17:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1186,"nodeType":"ExpressionStatement","src":"1985:17:8"}]},"documentation":{"id":1172,"nodeType":"StructuredDocumentation","src":"1720:171:8","text":" @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."},"id":1188,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1174,"mutability":"mutable","name":"name_","nameLocation":"1922:5:8","nodeType":"VariableDeclaration","scope":1188,"src":"1908:19:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1173,"name":"string","nodeType":"ElementaryTypeName","src":"1908:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1176,"mutability":"mutable","name":"symbol_","nameLocation":"1943:7:8","nodeType":"VariableDeclaration","scope":1188,"src":"1929:21:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1175,"name":"string","nodeType":"ElementaryTypeName","src":"1929:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1907:44:8"},"returnParameters":{"id":1178,"nodeType":"ParameterList","parameters":[],"src":"1952:0:8"},"scope":1651,"src":"1896:113:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1742],"body":{"id":1196,"nodeType":"Block","src":"2134:29:8","statements":[{"expression":{"id":1194,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1169,"src":"2151:5:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1193,"id":1195,"nodeType":"Return","src":"2144:12:8"}]},"documentation":{"id":1189,"nodeType":"StructuredDocumentation","src":"2015:54:8","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":1197,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2083:4:8","nodeType":"FunctionDefinition","parameters":{"id":1190,"nodeType":"ParameterList","parameters":[],"src":"2087:2:8"},"returnParameters":{"id":1193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1192,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1197,"src":"2119:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1191,"name":"string","nodeType":"ElementaryTypeName","src":"2119:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2118:15:8"},"scope":1651,"src":"2074:89:8","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1748],"body":{"id":1205,"nodeType":"Block","src":"2338:31:8","statements":[{"expression":{"id":1203,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1171,"src":"2355:7:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1202,"id":1204,"nodeType":"Return","src":"2348:14:8"}]},"documentation":{"id":1198,"nodeType":"StructuredDocumentation","src":"2169:102:8","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":1206,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2285:6:8","nodeType":"FunctionDefinition","parameters":{"id":1199,"nodeType":"ParameterList","parameters":[],"src":"2291:2:8"},"returnParameters":{"id":1202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1201,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1206,"src":"2323:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1200,"name":"string","nodeType":"ElementaryTypeName","src":"2323:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2322:15:8"},"scope":1651,"src":"2276:93:8","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1754],"body":{"id":1214,"nodeType":"Block","src":"3058:26:8","statements":[{"expression":{"hexValue":"3138","id":1212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3075:2:8","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":1211,"id":1213,"nodeType":"Return","src":"3068:9:8"}]},"documentation":{"id":1207,"nodeType":"StructuredDocumentation","src":"2375:622:8","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":1215,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"3011:8:8","nodeType":"FunctionDefinition","parameters":{"id":1208,"nodeType":"ParameterList","parameters":[],"src":"3019:2:8"},"returnParameters":{"id":1211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1210,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1215,"src":"3051:5:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1209,"name":"uint8","nodeType":"ElementaryTypeName","src":"3051:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"3050:7:8"},"scope":1651,"src":"3002:82:8","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1678],"body":{"id":1223,"nodeType":"Block","src":"3205:36:8","statements":[{"expression":{"id":1221,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1167,"src":"3222:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1220,"id":1222,"nodeType":"Return","src":"3215:19:8"}]},"documentation":{"id":1216,"nodeType":"StructuredDocumentation","src":"3090:49:8","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":1224,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"3153:11:8","nodeType":"FunctionDefinition","parameters":{"id":1217,"nodeType":"ParameterList","parameters":[],"src":"3164:2:8"},"returnParameters":{"id":1220,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1219,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1224,"src":"3196:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1218,"name":"uint256","nodeType":"ElementaryTypeName","src":"3196:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3195:9:8"},"scope":1651,"src":"3144:97:8","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1686],"body":{"id":1236,"nodeType":"Block","src":"3373:42:8","statements":[{"expression":{"baseExpression":{"id":1232,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1159,"src":"3390:9:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1234,"indexExpression":{"id":1233,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1227,"src":"3400:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3390:18:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1231,"id":1235,"nodeType":"Return","src":"3383:25:8"}]},"documentation":{"id":1225,"nodeType":"StructuredDocumentation","src":"3247:47:8","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":1237,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"3308:9:8","nodeType":"FunctionDefinition","parameters":{"id":1228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1227,"mutability":"mutable","name":"account","nameLocation":"3326:7:8","nodeType":"VariableDeclaration","scope":1237,"src":"3318:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1226,"name":"address","nodeType":"ElementaryTypeName","src":"3318:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3317:17:8"},"returnParameters":{"id":1231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1230,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1237,"src":"3364:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1229,"name":"uint256","nodeType":"ElementaryTypeName","src":"3364:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3363:9:8"},"scope":1651,"src":"3299:116:8","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1696],"body":{"id":1260,"nodeType":"Block","src":"3685:103:8","statements":[{"assignments":[1248],"declarations":[{"constant":false,"id":1248,"mutability":"mutable","name":"owner","nameLocation":"3703:5:8","nodeType":"VariableDeclaration","scope":1260,"src":"3695:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1247,"name":"address","nodeType":"ElementaryTypeName","src":"3695:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1251,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1249,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2020,"src":"3711:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1250,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3711:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3695:28:8"},{"expression":{"arguments":[{"id":1253,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1248,"src":"3743:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1254,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1240,"src":"3750:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1255,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1242,"src":"3754:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1252,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1381,"src":"3733:9:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1256,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3733:27:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1257,"nodeType":"ExpressionStatement","src":"3733:27:8"},{"expression":{"hexValue":"74727565","id":1258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3777:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1246,"id":1259,"nodeType":"Return","src":"3770:11:8"}]},"documentation":{"id":1238,"nodeType":"StructuredDocumentation","src":"3421:184:8","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."},"functionSelector":"a9059cbb","id":1261,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"3619:8:8","nodeType":"FunctionDefinition","parameters":{"id":1243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1240,"mutability":"mutable","name":"to","nameLocation":"3636:2:8","nodeType":"VariableDeclaration","scope":1261,"src":"3628:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1239,"name":"address","nodeType":"ElementaryTypeName","src":"3628:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1242,"mutability":"mutable","name":"value","nameLocation":"3648:5:8","nodeType":"VariableDeclaration","scope":1261,"src":"3640:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1241,"name":"uint256","nodeType":"ElementaryTypeName","src":"3640:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3627:27:8"},"returnParameters":{"id":1246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1245,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1261,"src":"3679:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1244,"name":"bool","nodeType":"ElementaryTypeName","src":"3679:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3678:6:8"},"scope":1651,"src":"3610:178:8","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1706],"body":{"id":1277,"nodeType":"Block","src":"3935:51:8","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":1271,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1165,"src":"3952:11:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":1273,"indexExpression":{"id":1272,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1264,"src":"3964:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3952:18:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1275,"indexExpression":{"id":1274,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"3971:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3952:27:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1270,"id":1276,"nodeType":"Return","src":"3945:34:8"}]},"documentation":{"id":1262,"nodeType":"StructuredDocumentation","src":"3794:47:8","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":1278,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"3855:9:8","nodeType":"FunctionDefinition","parameters":{"id":1267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1264,"mutability":"mutable","name":"owner","nameLocation":"3873:5:8","nodeType":"VariableDeclaration","scope":1278,"src":"3865:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1263,"name":"address","nodeType":"ElementaryTypeName","src":"3865:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1266,"mutability":"mutable","name":"spender","nameLocation":"3888:7:8","nodeType":"VariableDeclaration","scope":1278,"src":"3880:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1265,"name":"address","nodeType":"ElementaryTypeName","src":"3880:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3864:32:8"},"returnParameters":{"id":1270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1269,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1278,"src":"3926:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1268,"name":"uint256","nodeType":"ElementaryTypeName","src":"3926:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3925:9:8"},"scope":1651,"src":"3846:140:8","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1716],"body":{"id":1301,"nodeType":"Block","src":"4372:107:8","statements":[{"assignments":[1289],"declarations":[{"constant":false,"id":1289,"mutability":"mutable","name":"owner","nameLocation":"4390:5:8","nodeType":"VariableDeclaration","scope":1301,"src":"4382:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1288,"name":"address","nodeType":"ElementaryTypeName","src":"4382:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1292,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1290,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2020,"src":"4398:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1291,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4398:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4382:28:8"},{"expression":{"arguments":[{"id":1294,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1289,"src":"4429:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1295,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1281,"src":"4436:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1296,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1283,"src":"4445:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1293,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1542,1602],"referencedDeclaration":1542,"src":"4420:8:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4420:31:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1298,"nodeType":"ExpressionStatement","src":"4420:31:8"},{"expression":{"hexValue":"74727565","id":1299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4468:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1287,"id":1300,"nodeType":"Return","src":"4461:11:8"}]},"documentation":{"id":1279,"nodeType":"StructuredDocumentation","src":"3992:296:8","text":" @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":1302,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4302:7:8","nodeType":"FunctionDefinition","parameters":{"id":1284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1281,"mutability":"mutable","name":"spender","nameLocation":"4318:7:8","nodeType":"VariableDeclaration","scope":1302,"src":"4310:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1280,"name":"address","nodeType":"ElementaryTypeName","src":"4310:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1283,"mutability":"mutable","name":"value","nameLocation":"4335:5:8","nodeType":"VariableDeclaration","scope":1302,"src":"4327:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1282,"name":"uint256","nodeType":"ElementaryTypeName","src":"4327:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4309:32:8"},"returnParameters":{"id":1287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1286,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1302,"src":"4366:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1285,"name":"bool","nodeType":"ElementaryTypeName","src":"4366:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4365:6:8"},"scope":1651,"src":"4293:186:8","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1728],"body":{"id":1333,"nodeType":"Block","src":"5132:151:8","statements":[{"assignments":[1315],"declarations":[{"constant":false,"id":1315,"mutability":"mutable","name":"spender","nameLocation":"5150:7:8","nodeType":"VariableDeclaration","scope":1333,"src":"5142:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1314,"name":"address","nodeType":"ElementaryTypeName","src":"5142:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1318,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1316,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2020,"src":"5160:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1317,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5160:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5142:30:8"},{"expression":{"arguments":[{"id":1320,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1305,"src":"5198:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1321,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1315,"src":"5204:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1322,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1309,"src":"5213:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1319,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1650,"src":"5182:15:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1323,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5182:37:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1324,"nodeType":"ExpressionStatement","src":"5182:37:8"},{"expression":{"arguments":[{"id":1326,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1305,"src":"5239:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1327,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1307,"src":"5245:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1328,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1309,"src":"5249:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1325,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1381,"src":"5229:9:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1329,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5229:26:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1330,"nodeType":"ExpressionStatement","src":"5229:26:8"},{"expression":{"hexValue":"74727565","id":1331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5272:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1313,"id":1332,"nodeType":"Return","src":"5265:11:8"}]},"documentation":{"id":1303,"nodeType":"StructuredDocumentation","src":"4485:549:8","text":" @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."},"functionSelector":"23b872dd","id":1334,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"5048:12:8","nodeType":"FunctionDefinition","parameters":{"id":1310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1305,"mutability":"mutable","name":"from","nameLocation":"5069:4:8","nodeType":"VariableDeclaration","scope":1334,"src":"5061:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1304,"name":"address","nodeType":"ElementaryTypeName","src":"5061:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1307,"mutability":"mutable","name":"to","nameLocation":"5083:2:8","nodeType":"VariableDeclaration","scope":1334,"src":"5075:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1306,"name":"address","nodeType":"ElementaryTypeName","src":"5075:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1309,"mutability":"mutable","name":"value","nameLocation":"5095:5:8","nodeType":"VariableDeclaration","scope":1334,"src":"5087:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1308,"name":"uint256","nodeType":"ElementaryTypeName","src":"5087:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5060:41:8"},"returnParameters":{"id":1313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1312,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1334,"src":"5126:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1311,"name":"bool","nodeType":"ElementaryTypeName","src":"5126:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5125:6:8"},"scope":1651,"src":"5039:244:8","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1380,"nodeType":"Block","src":"5725:231:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1344,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1337,"src":"5739:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1347,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5755:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1346,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5747:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1345,"name":"address","nodeType":"ElementaryTypeName","src":"5747:7:8","typeDescriptions":{}}},"id":1348,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5747:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5739:18:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1358,"nodeType":"IfStatement","src":"5735:86:8","trueBody":{"id":1357,"nodeType":"Block","src":"5759:62:8","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5807:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1352,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5799:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1351,"name":"address","nodeType":"ElementaryTypeName","src":"5799:7:8","typeDescriptions":{}}},"id":1354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5799:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1350,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":703,"src":"5780:18:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5780:30:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1356,"nodeType":"RevertStatement","src":"5773:37:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1359,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1339,"src":"5834:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1362,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5848:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1361,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5840:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1360,"name":"address","nodeType":"ElementaryTypeName","src":"5840:7:8","typeDescriptions":{}}},"id":1363,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5840:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5834:16:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1373,"nodeType":"IfStatement","src":"5830:86:8","trueBody":{"id":1372,"nodeType":"Block","src":"5852:64:8","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5902:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1367,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5894:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1366,"name":"address","nodeType":"ElementaryTypeName","src":"5894:7:8","typeDescriptions":{}}},"id":1369,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5894:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1365,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":708,"src":"5873:20:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1370,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5873:32:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1371,"nodeType":"RevertStatement","src":"5866:39:8"}]}},{"expression":{"arguments":[{"id":1375,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1337,"src":"5933:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1376,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1339,"src":"5939:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1377,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1341,"src":"5943:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1374,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1458,"src":"5925:7:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5925:24:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1379,"nodeType":"ExpressionStatement","src":"5925:24:8"}]},"documentation":{"id":1335,"nodeType":"StructuredDocumentation","src":"5289:362:8","text":" @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":1381,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"5665:9:8","nodeType":"FunctionDefinition","parameters":{"id":1342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1337,"mutability":"mutable","name":"from","nameLocation":"5683:4:8","nodeType":"VariableDeclaration","scope":1381,"src":"5675:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1336,"name":"address","nodeType":"ElementaryTypeName","src":"5675:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1339,"mutability":"mutable","name":"to","nameLocation":"5697:2:8","nodeType":"VariableDeclaration","scope":1381,"src":"5689:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1338,"name":"address","nodeType":"ElementaryTypeName","src":"5689:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1341,"mutability":"mutable","name":"value","nameLocation":"5709:5:8","nodeType":"VariableDeclaration","scope":1381,"src":"5701:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1340,"name":"uint256","nodeType":"ElementaryTypeName","src":"5701:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5674:41:8"},"returnParameters":{"id":1343,"nodeType":"ParameterList","parameters":[],"src":"5725:0:8"},"scope":1651,"src":"5656:300:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1457,"nodeType":"Block","src":"6346:1032:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1391,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1384,"src":"6360:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6376:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1393,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6368:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1392,"name":"address","nodeType":"ElementaryTypeName","src":"6368:7:8","typeDescriptions":{}}},"id":1395,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6368:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6360:18:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1428,"nodeType":"Block","src":"6534:362:8","statements":[{"assignments":[1403],"declarations":[{"constant":false,"id":1403,"mutability":"mutable","name":"fromBalance","nameLocation":"6556:11:8","nodeType":"VariableDeclaration","scope":1428,"src":"6548:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1402,"name":"uint256","nodeType":"ElementaryTypeName","src":"6548:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1407,"initialValue":{"baseExpression":{"id":1404,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1159,"src":"6570:9:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1406,"indexExpression":{"id":1405,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1384,"src":"6580:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6570:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6548:37:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1408,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1403,"src":"6603:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1409,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1388,"src":"6617:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6603:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1418,"nodeType":"IfStatement","src":"6599:115:8","trueBody":{"id":1417,"nodeType":"Block","src":"6624:90:8","statements":[{"errorCall":{"arguments":[{"id":1412,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1384,"src":"6674:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1413,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1403,"src":"6680:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1414,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1388,"src":"6693:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1411,"name":"ERC20InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":698,"src":"6649:24:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":1415,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6649:50:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1416,"nodeType":"RevertStatement","src":"6642:57:8"}]}},{"id":1427,"nodeType":"UncheckedBlock","src":"6727:159:8","statements":[{"expression":{"id":1425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1419,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1159,"src":"6834:9:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1421,"indexExpression":{"id":1420,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1384,"src":"6844:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6834:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1422,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1403,"src":"6852:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1423,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1388,"src":"6866:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6852:19:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6834:37:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1426,"nodeType":"ExpressionStatement","src":"6834:37:8"}]}]},"id":1429,"nodeType":"IfStatement","src":"6356:540:8","trueBody":{"id":1401,"nodeType":"Block","src":"6380:148:8","statements":[{"expression":{"id":1399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1397,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1167,"src":"6496:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1398,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1388,"src":"6512:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6496:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1400,"nodeType":"ExpressionStatement","src":"6496:21:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1430,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1386,"src":"6910:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1433,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6924:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1432,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1431,"name":"address","nodeType":"ElementaryTypeName","src":"6916:7:8","typeDescriptions":{}}},"id":1434,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6910:16:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1449,"nodeType":"Block","src":"7125:206:8","statements":[{"id":1448,"nodeType":"UncheckedBlock","src":"7139:182:8","statements":[{"expression":{"id":1446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1442,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1159,"src":"7284:9:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1444,"indexExpression":{"id":1443,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1386,"src":"7294:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7284:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1445,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1388,"src":"7301:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7284:22:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1447,"nodeType":"ExpressionStatement","src":"7284:22:8"}]}]},"id":1450,"nodeType":"IfStatement","src":"6906:425:8","trueBody":{"id":1441,"nodeType":"Block","src":"6928:191:8","statements":[{"id":1440,"nodeType":"UncheckedBlock","src":"6942:167:8","statements":[{"expression":{"id":1438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1436,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1167,"src":"7073:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":1437,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1388,"src":"7089:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7073:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1439,"nodeType":"ExpressionStatement","src":"7073:21:8"}]}]}},{"eventCall":{"arguments":[{"id":1452,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1384,"src":"7355:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1453,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1386,"src":"7361:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1454,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1388,"src":"7365:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1451,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1663,"src":"7346:8:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1455,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7346:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1456,"nodeType":"EmitStatement","src":"7341:30:8"}]},"documentation":{"id":1382,"nodeType":"StructuredDocumentation","src":"5962:304:8","text":" @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."},"id":1458,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"6280:7:8","nodeType":"FunctionDefinition","parameters":{"id":1389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1384,"mutability":"mutable","name":"from","nameLocation":"6296:4:8","nodeType":"VariableDeclaration","scope":1458,"src":"6288:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1383,"name":"address","nodeType":"ElementaryTypeName","src":"6288:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1386,"mutability":"mutable","name":"to","nameLocation":"6310:2:8","nodeType":"VariableDeclaration","scope":1458,"src":"6302:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1385,"name":"address","nodeType":"ElementaryTypeName","src":"6302:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1388,"mutability":"mutable","name":"value","nameLocation":"6322:5:8","nodeType":"VariableDeclaration","scope":1458,"src":"6314:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1387,"name":"uint256","nodeType":"ElementaryTypeName","src":"6314:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6287:41:8"},"returnParameters":{"id":1390,"nodeType":"ParameterList","parameters":[],"src":"6346:0:8"},"scope":1651,"src":"6271:1107:8","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1490,"nodeType":"Block","src":"7777:152:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1466,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1461,"src":"7791:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7810:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1468,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7802:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1467,"name":"address","nodeType":"ElementaryTypeName","src":"7802:7:8","typeDescriptions":{}}},"id":1470,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7802:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7791:21:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1480,"nodeType":"IfStatement","src":"7787:91:8","trueBody":{"id":1479,"nodeType":"Block","src":"7814:64:8","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7864:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1474,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7856:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1473,"name":"address","nodeType":"ElementaryTypeName","src":"7856:7:8","typeDescriptions":{}}},"id":1476,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7856:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1472,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":708,"src":"7835:20:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1477,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7835:32:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1478,"nodeType":"RevertStatement","src":"7828:39:8"}]}},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7903:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1483,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7895:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1482,"name":"address","nodeType":"ElementaryTypeName","src":"7895:7:8","typeDescriptions":{}}},"id":1485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7895:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1486,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1461,"src":"7907:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1487,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1463,"src":"7916:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1481,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1458,"src":"7887:7:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1488,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7887:35:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1489,"nodeType":"ExpressionStatement","src":"7887:35:8"}]},"documentation":{"id":1459,"nodeType":"StructuredDocumentation","src":"7384:332:8","text":" @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":1491,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"7730:5:8","nodeType":"FunctionDefinition","parameters":{"id":1464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1461,"mutability":"mutable","name":"account","nameLocation":"7744:7:8","nodeType":"VariableDeclaration","scope":1491,"src":"7736:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1460,"name":"address","nodeType":"ElementaryTypeName","src":"7736:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1463,"mutability":"mutable","name":"value","nameLocation":"7761:5:8","nodeType":"VariableDeclaration","scope":1491,"src":"7753:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1462,"name":"uint256","nodeType":"ElementaryTypeName","src":"7753:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7735:32:8"},"returnParameters":{"id":1465,"nodeType":"ParameterList","parameters":[],"src":"7777:0:8"},"scope":1651,"src":"7721:208:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1523,"nodeType":"Block","src":"8303:150:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1499,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1494,"src":"8317:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8336:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1501,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8328:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1500,"name":"address","nodeType":"ElementaryTypeName","src":"8328:7:8","typeDescriptions":{}}},"id":1503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8328:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8317:21:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1513,"nodeType":"IfStatement","src":"8313:89:8","trueBody":{"id":1512,"nodeType":"Block","src":"8340:62:8","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1508,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8388:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1507,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8380:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1506,"name":"address","nodeType":"ElementaryTypeName","src":"8380:7:8","typeDescriptions":{}}},"id":1509,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8380:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1505,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":703,"src":"8361:18:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1510,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8361:30:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1511,"nodeType":"RevertStatement","src":"8354:37:8"}]}},{"expression":{"arguments":[{"id":1515,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1494,"src":"8419:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1518,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8436:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1517,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8428:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1516,"name":"address","nodeType":"ElementaryTypeName","src":"8428:7:8","typeDescriptions":{}}},"id":1519,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8428:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1520,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1496,"src":"8440:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1514,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1458,"src":"8411:7:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8411:35:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1522,"nodeType":"ExpressionStatement","src":"8411:35:8"}]},"documentation":{"id":1492,"nodeType":"StructuredDocumentation","src":"7935:307:8","text":" @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"},"id":1524,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"8256:5:8","nodeType":"FunctionDefinition","parameters":{"id":1497,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1494,"mutability":"mutable","name":"account","nameLocation":"8270:7:8","nodeType":"VariableDeclaration","scope":1524,"src":"8262:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1493,"name":"address","nodeType":"ElementaryTypeName","src":"8262:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1496,"mutability":"mutable","name":"value","nameLocation":"8287:5:8","nodeType":"VariableDeclaration","scope":1524,"src":"8279:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1495,"name":"uint256","nodeType":"ElementaryTypeName","src":"8279:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8261:32:8"},"returnParameters":{"id":1498,"nodeType":"ParameterList","parameters":[],"src":"8303:0:8"},"scope":1651,"src":"8247:206:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1541,"nodeType":"Block","src":"9063:54:8","statements":[{"expression":{"arguments":[{"id":1535,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1527,"src":"9082:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1536,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1529,"src":"9089:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1537,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1531,"src":"9098:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":1538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9105:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1534,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1542,1602],"referencedDeclaration":1602,"src":"9073:8:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":1539,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9073:37:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1540,"nodeType":"ExpressionStatement","src":"9073:37:8"}]},"documentation":{"id":1525,"nodeType":"StructuredDocumentation","src":"8459:525:8","text":" @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"id":1542,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"8998:8:8","nodeType":"FunctionDefinition","parameters":{"id":1532,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1527,"mutability":"mutable","name":"owner","nameLocation":"9015:5:8","nodeType":"VariableDeclaration","scope":1542,"src":"9007:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1526,"name":"address","nodeType":"ElementaryTypeName","src":"9007:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1529,"mutability":"mutable","name":"spender","nameLocation":"9030:7:8","nodeType":"VariableDeclaration","scope":1542,"src":"9022:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1528,"name":"address","nodeType":"ElementaryTypeName","src":"9022:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1531,"mutability":"mutable","name":"value","nameLocation":"9047:5:8","nodeType":"VariableDeclaration","scope":1542,"src":"9039:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1530,"name":"uint256","nodeType":"ElementaryTypeName","src":"9039:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9006:47:8"},"returnParameters":{"id":1533,"nodeType":"ParameterList","parameters":[],"src":"9063:0:8"},"scope":1651,"src":"8989:128:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1601,"nodeType":"Block","src":"10047:334:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1554,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1545,"src":"10061:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10078:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1556,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10070:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1555,"name":"address","nodeType":"ElementaryTypeName","src":"10070:7:8","typeDescriptions":{}}},"id":1558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10070:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10061:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1568,"nodeType":"IfStatement","src":"10057:89:8","trueBody":{"id":1567,"nodeType":"Block","src":"10082:64:8","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10132:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1562,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10124:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1561,"name":"address","nodeType":"ElementaryTypeName","src":"10124:7:8","typeDescriptions":{}}},"id":1564,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10124:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1560,"name":"ERC20InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":722,"src":"10103:20:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1565,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10103:32:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1566,"nodeType":"RevertStatement","src":"10096:39:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1569,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1547,"src":"10159:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1572,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10178:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1571,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10170:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1570,"name":"address","nodeType":"ElementaryTypeName","src":"10170:7:8","typeDescriptions":{}}},"id":1573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10170:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10159:21:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1583,"nodeType":"IfStatement","src":"10155:90:8","trueBody":{"id":1582,"nodeType":"Block","src":"10182:63:8","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1578,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10231:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1577,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10223:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1576,"name":"address","nodeType":"ElementaryTypeName","src":"10223:7:8","typeDescriptions":{}}},"id":1579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10223:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1575,"name":"ERC20InvalidSpender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":727,"src":"10203:19:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1580,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10203:31:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1581,"nodeType":"RevertStatement","src":"10196:38:8"}]}},{"expression":{"id":1590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1584,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1165,"src":"10254:11:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":1587,"indexExpression":{"id":1585,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1545,"src":"10266:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10254:18:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1588,"indexExpression":{"id":1586,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1547,"src":"10273:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10254:27:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1589,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1549,"src":"10284:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10254:35:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1591,"nodeType":"ExpressionStatement","src":"10254:35:8"},{"condition":{"id":1592,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1551,"src":"10303:9:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1600,"nodeType":"IfStatement","src":"10299:76:8","trueBody":{"id":1599,"nodeType":"Block","src":"10314:61:8","statements":[{"eventCall":{"arguments":[{"id":1594,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1545,"src":"10342:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1595,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1547,"src":"10349:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1596,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1549,"src":"10358:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1593,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1672,"src":"10333:8:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1597,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10333:31:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1598,"nodeType":"EmitStatement","src":"10328:36:8"}]}}]},"documentation":{"id":1543,"nodeType":"StructuredDocumentation","src":"9123:821:8","text":" @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."},"id":1602,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"9958:8:8","nodeType":"FunctionDefinition","parameters":{"id":1552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1545,"mutability":"mutable","name":"owner","nameLocation":"9975:5:8","nodeType":"VariableDeclaration","scope":1602,"src":"9967:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1544,"name":"address","nodeType":"ElementaryTypeName","src":"9967:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1547,"mutability":"mutable","name":"spender","nameLocation":"9990:7:8","nodeType":"VariableDeclaration","scope":1602,"src":"9982:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1546,"name":"address","nodeType":"ElementaryTypeName","src":"9982:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1549,"mutability":"mutable","name":"value","nameLocation":"10007:5:8","nodeType":"VariableDeclaration","scope":1602,"src":"9999:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1548,"name":"uint256","nodeType":"ElementaryTypeName","src":"9999:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1551,"mutability":"mutable","name":"emitEvent","nameLocation":"10019:9:8","nodeType":"VariableDeclaration","scope":1602,"src":"10014:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1550,"name":"bool","nodeType":"ElementaryTypeName","src":"10014:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9966:63:8"},"returnParameters":{"id":1553,"nodeType":"ParameterList","parameters":[],"src":"10047:0:8"},"scope":1651,"src":"9949:432:8","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1649,"nodeType":"Block","src":"10752:388:8","statements":[{"assignments":[1613],"declarations":[{"constant":false,"id":1613,"mutability":"mutable","name":"currentAllowance","nameLocation":"10770:16:8","nodeType":"VariableDeclaration","scope":1649,"src":"10762:24:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1612,"name":"uint256","nodeType":"ElementaryTypeName","src":"10762:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1618,"initialValue":{"arguments":[{"id":1615,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1605,"src":"10799:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1616,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1607,"src":"10806:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1614,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1278,"src":"10789:9:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":1617,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10789:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10762:52:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1619,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1613,"src":"10828:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":1622,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10853:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1621,"name":"uint256","nodeType":"ElementaryTypeName","src":"10853:7:8","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":1620,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10848:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10848:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":1624,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10862:3:8","memberName":"max","nodeType":"MemberAccess","src":"10848:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10828:37:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1648,"nodeType":"IfStatement","src":"10824:310:8","trueBody":{"id":1647,"nodeType":"Block","src":"10867:267:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1626,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1613,"src":"10885:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1627,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1609,"src":"10904:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10885:24:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1636,"nodeType":"IfStatement","src":"10881:130:8","trueBody":{"id":1635,"nodeType":"Block","src":"10911:100:8","statements":[{"errorCall":{"arguments":[{"id":1630,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1607,"src":"10963:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1631,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1613,"src":"10972:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1632,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1609,"src":"10990:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1629,"name":"ERC20InsufficientAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":717,"src":"10936:26:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":1633,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10936:60:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1634,"nodeType":"RevertStatement","src":"10929:67:8"}]}},{"id":1646,"nodeType":"UncheckedBlock","src":"11024:100:8","statements":[{"expression":{"arguments":[{"id":1638,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1605,"src":"11061:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1639,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1607,"src":"11068:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1640,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1613,"src":"11077:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1641,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1609,"src":"11096:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11077:24:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":1643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11103:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1637,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1542,1602],"referencedDeclaration":1602,"src":"11052:8:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":1644,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11052:57:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1645,"nodeType":"ExpressionStatement","src":"11052:57:8"}]}]}}]},"documentation":{"id":1603,"nodeType":"StructuredDocumentation","src":"10387:271:8","text":" @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."},"id":1650,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"10672:15:8","nodeType":"FunctionDefinition","parameters":{"id":1610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1605,"mutability":"mutable","name":"owner","nameLocation":"10696:5:8","nodeType":"VariableDeclaration","scope":1650,"src":"10688:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1604,"name":"address","nodeType":"ElementaryTypeName","src":"10688:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1607,"mutability":"mutable","name":"spender","nameLocation":"10711:7:8","nodeType":"VariableDeclaration","scope":1650,"src":"10703:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1606,"name":"address","nodeType":"ElementaryTypeName","src":"10703:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1609,"mutability":"mutable","name":"value","nameLocation":"10728:5:8","nodeType":"VariableDeclaration","scope":1650,"src":"10720:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1608,"name":"uint256","nodeType":"ElementaryTypeName","src":"10720:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10687:47:8"},"returnParameters":{"id":1611,"nodeType":"ParameterList","parameters":[],"src":"10752:0:8"},"scope":1651,"src":"10663:477:8","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1652,"src":"1401:9741:8","usedErrors":[698,703,708,717,722,727],"usedEvents":[1663,1672]}],"src":"105:11038:8"},"id":8},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[1729]},"id":1730,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1653,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:9"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":1654,"nodeType":"StructuredDocumentation","src":"132:70:9","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":1729,"linearizedBaseContracts":[1729],"name":"IERC20","nameLocation":"213:6:9","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1655,"nodeType":"StructuredDocumentation","src":"226:158:9","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":1663,"name":"Transfer","nameLocation":"395:8:9","nodeType":"EventDefinition","parameters":{"id":1662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1657,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"420:4:9","nodeType":"VariableDeclaration","scope":1663,"src":"404:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1656,"name":"address","nodeType":"ElementaryTypeName","src":"404:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1659,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"442:2:9","nodeType":"VariableDeclaration","scope":1663,"src":"426:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1658,"name":"address","nodeType":"ElementaryTypeName","src":"426:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1661,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"454:5:9","nodeType":"VariableDeclaration","scope":1663,"src":"446:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1660,"name":"uint256","nodeType":"ElementaryTypeName","src":"446:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"403:57:9"},"src":"389:72:9"},{"anonymous":false,"documentation":{"id":1664,"nodeType":"StructuredDocumentation","src":"467:148:9","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":1672,"name":"Approval","nameLocation":"626:8:9","nodeType":"EventDefinition","parameters":{"id":1671,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1666,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"651:5:9","nodeType":"VariableDeclaration","scope":1672,"src":"635:21:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1665,"name":"address","nodeType":"ElementaryTypeName","src":"635:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1668,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"674:7:9","nodeType":"VariableDeclaration","scope":1672,"src":"658:23:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1667,"name":"address","nodeType":"ElementaryTypeName","src":"658:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1670,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"691:5:9","nodeType":"VariableDeclaration","scope":1672,"src":"683:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1669,"name":"uint256","nodeType":"ElementaryTypeName","src":"683:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"634:63:9"},"src":"620:78:9"},{"documentation":{"id":1673,"nodeType":"StructuredDocumentation","src":"704:65:9","text":" @dev Returns the value of tokens in existence."},"functionSelector":"18160ddd","id":1678,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:9","nodeType":"FunctionDefinition","parameters":{"id":1674,"nodeType":"ParameterList","parameters":[],"src":"794:2:9"},"returnParameters":{"id":1677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1676,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1678,"src":"820:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1675,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:9"},"scope":1729,"src":"774:55:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1679,"nodeType":"StructuredDocumentation","src":"835:71:9","text":" @dev Returns the value of tokens owned by `account`."},"functionSelector":"70a08231","id":1686,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"920:9:9","nodeType":"FunctionDefinition","parameters":{"id":1682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1681,"mutability":"mutable","name":"account","nameLocation":"938:7:9","nodeType":"VariableDeclaration","scope":1686,"src":"930:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1680,"name":"address","nodeType":"ElementaryTypeName","src":"930:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"929:17:9"},"returnParameters":{"id":1685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1684,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1686,"src":"970:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1683,"name":"uint256","nodeType":"ElementaryTypeName","src":"970:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"969:9:9"},"scope":1729,"src":"911:68:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1687,"nodeType":"StructuredDocumentation","src":"985:213:9","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":1696,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1212:8:9","nodeType":"FunctionDefinition","parameters":{"id":1692,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1689,"mutability":"mutable","name":"to","nameLocation":"1229:2:9","nodeType":"VariableDeclaration","scope":1696,"src":"1221:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1688,"name":"address","nodeType":"ElementaryTypeName","src":"1221:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1691,"mutability":"mutable","name":"value","nameLocation":"1241:5:9","nodeType":"VariableDeclaration","scope":1696,"src":"1233:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1690,"name":"uint256","nodeType":"ElementaryTypeName","src":"1233:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1220:27:9"},"returnParameters":{"id":1695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1694,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1696,"src":"1266:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1693,"name":"bool","nodeType":"ElementaryTypeName","src":"1266:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1265:6:9"},"scope":1729,"src":"1203:69:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1697,"nodeType":"StructuredDocumentation","src":"1278:264:9","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":1706,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1556:9:9","nodeType":"FunctionDefinition","parameters":{"id":1702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1699,"mutability":"mutable","name":"owner","nameLocation":"1574:5:9","nodeType":"VariableDeclaration","scope":1706,"src":"1566:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1698,"name":"address","nodeType":"ElementaryTypeName","src":"1566:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1701,"mutability":"mutable","name":"spender","nameLocation":"1589:7:9","nodeType":"VariableDeclaration","scope":1706,"src":"1581:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1700,"name":"address","nodeType":"ElementaryTypeName","src":"1581:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1565:32:9"},"returnParameters":{"id":1705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1704,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1706,"src":"1621:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1703,"name":"uint256","nodeType":"ElementaryTypeName","src":"1621:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1620:9:9"},"scope":1729,"src":"1547:83:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1707,"nodeType":"StructuredDocumentation","src":"1636:667:9","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":1716,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2317:7:9","nodeType":"FunctionDefinition","parameters":{"id":1712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1709,"mutability":"mutable","name":"spender","nameLocation":"2333:7:9","nodeType":"VariableDeclaration","scope":1716,"src":"2325:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1708,"name":"address","nodeType":"ElementaryTypeName","src":"2325:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1711,"mutability":"mutable","name":"value","nameLocation":"2350:5:9","nodeType":"VariableDeclaration","scope":1716,"src":"2342:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1710,"name":"uint256","nodeType":"ElementaryTypeName","src":"2342:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2324:32:9"},"returnParameters":{"id":1715,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1714,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1716,"src":"2375:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1713,"name":"bool","nodeType":"ElementaryTypeName","src":"2375:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2374:6:9"},"scope":1729,"src":"2308:73:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1717,"nodeType":"StructuredDocumentation","src":"2387:297:9","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":1728,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2698:12:9","nodeType":"FunctionDefinition","parameters":{"id":1724,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1719,"mutability":"mutable","name":"from","nameLocation":"2719:4:9","nodeType":"VariableDeclaration","scope":1728,"src":"2711:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1718,"name":"address","nodeType":"ElementaryTypeName","src":"2711:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1721,"mutability":"mutable","name":"to","nameLocation":"2733:2:9","nodeType":"VariableDeclaration","scope":1728,"src":"2725:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1720,"name":"address","nodeType":"ElementaryTypeName","src":"2725:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1723,"mutability":"mutable","name":"value","nameLocation":"2745:5:9","nodeType":"VariableDeclaration","scope":1728,"src":"2737:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1722,"name":"uint256","nodeType":"ElementaryTypeName","src":"2737:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2710:41:9"},"returnParameters":{"id":1727,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1726,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1728,"src":"2770:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1725,"name":"bool","nodeType":"ElementaryTypeName","src":"2770:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2769:6:9"},"scope":1729,"src":"2689:87:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1730,"src":"203:2575:9","usedErrors":[],"usedEvents":[1663,1672]}],"src":"106:2673:9"},"id":9},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[1729],"IERC20Metadata":[1755]},"id":1756,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1731,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"125:24:10"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":1733,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1756,"sourceUnit":1730,"src":"151:37:10","symbolAliases":[{"foreign":{"id":1732,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1729,"src":"159:6:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1735,"name":"IERC20","nameLocations":["305:6:10"],"nodeType":"IdentifierPath","referencedDeclaration":1729,"src":"305:6:10"},"id":1736,"nodeType":"InheritanceSpecifier","src":"305:6:10"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":1734,"nodeType":"StructuredDocumentation","src":"190:86:10","text":" @dev Interface for the optional metadata functions from the ERC20 standard."},"fullyImplemented":false,"id":1755,"linearizedBaseContracts":[1755,1729],"name":"IERC20Metadata","nameLocation":"287:14:10","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1737,"nodeType":"StructuredDocumentation","src":"318:54:10","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":1742,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"386:4:10","nodeType":"FunctionDefinition","parameters":{"id":1738,"nodeType":"ParameterList","parameters":[],"src":"390:2:10"},"returnParameters":{"id":1741,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1740,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1742,"src":"416:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1739,"name":"string","nodeType":"ElementaryTypeName","src":"416:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"415:15:10"},"scope":1755,"src":"377:54:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1743,"nodeType":"StructuredDocumentation","src":"437:56:10","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":1748,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"507:6:10","nodeType":"FunctionDefinition","parameters":{"id":1744,"nodeType":"ParameterList","parameters":[],"src":"513:2:10"},"returnParameters":{"id":1747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1746,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1748,"src":"539:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1745,"name":"string","nodeType":"ElementaryTypeName","src":"539:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"538:15:10"},"scope":1755,"src":"498:56:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1749,"nodeType":"StructuredDocumentation","src":"560:65:10","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":1754,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"639:8:10","nodeType":"FunctionDefinition","parameters":{"id":1750,"nodeType":"ParameterList","parameters":[],"src":"647:2:10"},"returnParameters":{"id":1753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1752,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1754,"src":"673:5:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1751,"name":"uint8","nodeType":"ElementaryTypeName","src":"673:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"672:7:10"},"scope":1755,"src":"630:50:10","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1756,"src":"277:405:10","usedErrors":[],"usedEvents":[1663,1672]}],"src":"125:558:10"},"id":10},"@openzeppelin/contracts/utils/Address.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[2008]},"id":2009,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1757,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:11"},{"abstract":false,"baseContracts":[],"canonicalName":"Address","contractDependencies":[],"contractKind":"library","documentation":{"id":1758,"nodeType":"StructuredDocumentation","src":"127:67:11","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":2008,"linearizedBaseContracts":[2008],"name":"Address","nameLocation":"203:7:11","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1759,"nodeType":"StructuredDocumentation","src":"217:94:11","text":" @dev The ETH balance of the account is not enough to perform the operation."},"errorSelector":"cd786059","id":1763,"name":"AddressInsufficientBalance","nameLocation":"322:26:11","nodeType":"ErrorDefinition","parameters":{"id":1762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1761,"mutability":"mutable","name":"account","nameLocation":"357:7:11","nodeType":"VariableDeclaration","scope":1763,"src":"349:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1760,"name":"address","nodeType":"ElementaryTypeName","src":"349:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"348:17:11"},"src":"316:50:11"},{"documentation":{"id":1764,"nodeType":"StructuredDocumentation","src":"372:75:11","text":" @dev There's no code at `target` (it is not a contract)."},"errorSelector":"9996b315","id":1768,"name":"AddressEmptyCode","nameLocation":"458:16:11","nodeType":"ErrorDefinition","parameters":{"id":1767,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1766,"mutability":"mutable","name":"target","nameLocation":"483:6:11","nodeType":"VariableDeclaration","scope":1768,"src":"475:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1765,"name":"address","nodeType":"ElementaryTypeName","src":"475:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"474:16:11"},"src":"452:39:11"},{"documentation":{"id":1769,"nodeType":"StructuredDocumentation","src":"497:89:11","text":" @dev A call to an address target failed. The target may have reverted."},"errorSelector":"1425ea42","id":1771,"name":"FailedInnerCall","nameLocation":"597:15:11","nodeType":"ErrorDefinition","parameters":{"id":1770,"nodeType":"ParameterList","parameters":[],"src":"612:2:11"},"src":"591:24:11"},{"body":{"id":1811,"nodeType":"Block","src":"1602:260:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1781,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1624:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$2008","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$2008","typeString":"library Address"}],"id":1780,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1616:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1779,"name":"address","nodeType":"ElementaryTypeName","src":"1616:7:11","typeDescriptions":{}}},"id":1782,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1616:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1630:7:11","memberName":"balance","nodeType":"MemberAccess","src":"1616:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1784,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1776,"src":"1640:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1616:30:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1794,"nodeType":"IfStatement","src":"1612:109:11","trueBody":{"id":1793,"nodeType":"Block","src":"1648:73:11","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":1789,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1704:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$2008","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$2008","typeString":"library Address"}],"id":1788,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1696:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1787,"name":"address","nodeType":"ElementaryTypeName","src":"1696:7:11","typeDescriptions":{}}},"id":1790,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1696:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1786,"name":"AddressInsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1763,"src":"1669:26:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1791,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1669:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1792,"nodeType":"RevertStatement","src":"1662:48:11"}]}},{"assignments":[1796,null],"declarations":[{"constant":false,"id":1796,"mutability":"mutable","name":"success","nameLocation":"1737:7:11","nodeType":"VariableDeclaration","scope":1811,"src":"1732:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1795,"name":"bool","nodeType":"ElementaryTypeName","src":"1732:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":1803,"initialValue":{"arguments":[{"hexValue":"","id":1801,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1780:2:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":1797,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1774,"src":"1750:9:11","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":1798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1760:4:11","memberName":"call","nodeType":"MemberAccess","src":"1750:14:11","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1799,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1776,"src":"1772:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"1750:29:11","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1802,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1750:33:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"1731:52:11"},{"condition":{"id":1805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1797:8:11","subExpression":{"id":1804,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1796,"src":"1798:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1810,"nodeType":"IfStatement","src":"1793:63:11","trueBody":{"id":1809,"nodeType":"Block","src":"1807:49:11","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1806,"name":"FailedInnerCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1771,"src":"1828:15:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1807,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1828:17:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1808,"nodeType":"RevertStatement","src":"1821:24:11"}]}}]},"documentation":{"id":1772,"nodeType":"StructuredDocumentation","src":"621:905:11","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":1812,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"1540:9:11","nodeType":"FunctionDefinition","parameters":{"id":1777,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1774,"mutability":"mutable","name":"recipient","nameLocation":"1566:9:11","nodeType":"VariableDeclaration","scope":1812,"src":"1550:25:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":1773,"name":"address","nodeType":"ElementaryTypeName","src":"1550:15:11","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":1776,"mutability":"mutable","name":"amount","nameLocation":"1585:6:11","nodeType":"VariableDeclaration","scope":1812,"src":"1577:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1775,"name":"uint256","nodeType":"ElementaryTypeName","src":"1577:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1549:43:11"},"returnParameters":{"id":1778,"nodeType":"ParameterList","parameters":[],"src":"1602:0:11"},"scope":2008,"src":"1531:331:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1828,"nodeType":"Block","src":"2794:62:11","statements":[{"expression":{"arguments":[{"id":1823,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1815,"src":"2833:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1824,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1817,"src":"2841:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":1825,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2847:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1822,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1875,"src":"2811:21:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256) returns (bytes memory)"}},"id":1826,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2811:38:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1821,"id":1827,"nodeType":"Return","src":"2804:45:11"}]},"documentation":{"id":1813,"nodeType":"StructuredDocumentation","src":"1868:832:11","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {FailedInnerCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."},"id":1829,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"2714:12:11","nodeType":"FunctionDefinition","parameters":{"id":1818,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1815,"mutability":"mutable","name":"target","nameLocation":"2735:6:11","nodeType":"VariableDeclaration","scope":1829,"src":"2727:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1814,"name":"address","nodeType":"ElementaryTypeName","src":"2727:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1817,"mutability":"mutable","name":"data","nameLocation":"2756:4:11","nodeType":"VariableDeclaration","scope":1829,"src":"2743:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1816,"name":"bytes","nodeType":"ElementaryTypeName","src":"2743:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2726:35:11"},"returnParameters":{"id":1821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1820,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1829,"src":"2780:12:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1819,"name":"bytes","nodeType":"ElementaryTypeName","src":"2780:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2779:14:11"},"scope":2008,"src":"2705:151:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1874,"nodeType":"Block","src":"3293:279:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1843,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3315:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$2008","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$2008","typeString":"library Address"}],"id":1842,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3307:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1841,"name":"address","nodeType":"ElementaryTypeName","src":"3307:7:11","typeDescriptions":{}}},"id":1844,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3307:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3321:7:11","memberName":"balance","nodeType":"MemberAccess","src":"3307:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1846,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1836,"src":"3331:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3307:29:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1856,"nodeType":"IfStatement","src":"3303:108:11","trueBody":{"id":1855,"nodeType":"Block","src":"3338:73:11","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":1851,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3394:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$2008","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$2008","typeString":"library Address"}],"id":1850,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3386:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1849,"name":"address","nodeType":"ElementaryTypeName","src":"3386:7:11","typeDescriptions":{}}},"id":1852,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3386:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1848,"name":"AddressInsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1763,"src":"3359:26:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1853,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3359:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1854,"nodeType":"RevertStatement","src":"3352:48:11"}]}},{"assignments":[1858,1860],"declarations":[{"constant":false,"id":1858,"mutability":"mutable","name":"success","nameLocation":"3426:7:11","nodeType":"VariableDeclaration","scope":1874,"src":"3421:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1857,"name":"bool","nodeType":"ElementaryTypeName","src":"3421:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1860,"mutability":"mutable","name":"returndata","nameLocation":"3448:10:11","nodeType":"VariableDeclaration","scope":1874,"src":"3435:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1859,"name":"bytes","nodeType":"ElementaryTypeName","src":"3435:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1867,"initialValue":{"arguments":[{"id":1865,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1834,"src":"3488:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1861,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1832,"src":"3462:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3469:4:11","memberName":"call","nodeType":"MemberAccess","src":"3462:11:11","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1863,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1836,"src":"3481:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"3462:25:11","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1866,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3462:31:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3420:73:11"},{"expression":{"arguments":[{"id":1869,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1832,"src":"3537:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1870,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1858,"src":"3545:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1871,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1860,"src":"3554:10:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1868,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1967,"src":"3510:26:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":1872,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3510:55:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1840,"id":1873,"nodeType":"Return","src":"3503:62:11"}]},"documentation":{"id":1830,"nodeType":"StructuredDocumentation","src":"2862:313:11","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."},"id":1875,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"3189:21:11","nodeType":"FunctionDefinition","parameters":{"id":1837,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1832,"mutability":"mutable","name":"target","nameLocation":"3219:6:11","nodeType":"VariableDeclaration","scope":1875,"src":"3211:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1831,"name":"address","nodeType":"ElementaryTypeName","src":"3211:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1834,"mutability":"mutable","name":"data","nameLocation":"3240:4:11","nodeType":"VariableDeclaration","scope":1875,"src":"3227:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1833,"name":"bytes","nodeType":"ElementaryTypeName","src":"3227:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1836,"mutability":"mutable","name":"value","nameLocation":"3254:5:11","nodeType":"VariableDeclaration","scope":1875,"src":"3246:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1835,"name":"uint256","nodeType":"ElementaryTypeName","src":"3246:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3210:50:11"},"returnParameters":{"id":1840,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1839,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1875,"src":"3279:12:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1838,"name":"bytes","nodeType":"ElementaryTypeName","src":"3279:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3278:14:11"},"scope":2008,"src":"3180:392:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1900,"nodeType":"Block","src":"3811:154:11","statements":[{"assignments":[1886,1888],"declarations":[{"constant":false,"id":1886,"mutability":"mutable","name":"success","nameLocation":"3827:7:11","nodeType":"VariableDeclaration","scope":1900,"src":"3822:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1885,"name":"bool","nodeType":"ElementaryTypeName","src":"3822:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1888,"mutability":"mutable","name":"returndata","nameLocation":"3849:10:11","nodeType":"VariableDeclaration","scope":1900,"src":"3836:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1887,"name":"bytes","nodeType":"ElementaryTypeName","src":"3836:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1893,"initialValue":{"arguments":[{"id":1891,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1880,"src":"3881:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1889,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1878,"src":"3863:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3870:10:11","memberName":"staticcall","nodeType":"MemberAccess","src":"3863:17:11","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":1892,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3863:23:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3821:65:11"},{"expression":{"arguments":[{"id":1895,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1878,"src":"3930:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1896,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1886,"src":"3938:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1897,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1888,"src":"3947:10:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1894,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1967,"src":"3903:26:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":1898,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3903:55:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1884,"id":1899,"nodeType":"Return","src":"3896:62:11"}]},"documentation":{"id":1876,"nodeType":"StructuredDocumentation","src":"3578:128:11","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."},"id":1901,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"3720:18:11","nodeType":"FunctionDefinition","parameters":{"id":1881,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1878,"mutability":"mutable","name":"target","nameLocation":"3747:6:11","nodeType":"VariableDeclaration","scope":1901,"src":"3739:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1877,"name":"address","nodeType":"ElementaryTypeName","src":"3739:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1880,"mutability":"mutable","name":"data","nameLocation":"3768:4:11","nodeType":"VariableDeclaration","scope":1901,"src":"3755:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1879,"name":"bytes","nodeType":"ElementaryTypeName","src":"3755:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3738:35:11"},"returnParameters":{"id":1884,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1883,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1901,"src":"3797:12:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1882,"name":"bytes","nodeType":"ElementaryTypeName","src":"3797:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3796:14:11"},"scope":2008,"src":"3711:254:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1926,"nodeType":"Block","src":"4203:156:11","statements":[{"assignments":[1912,1914],"declarations":[{"constant":false,"id":1912,"mutability":"mutable","name":"success","nameLocation":"4219:7:11","nodeType":"VariableDeclaration","scope":1926,"src":"4214:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1911,"name":"bool","nodeType":"ElementaryTypeName","src":"4214:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1914,"mutability":"mutable","name":"returndata","nameLocation":"4241:10:11","nodeType":"VariableDeclaration","scope":1926,"src":"4228:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1913,"name":"bytes","nodeType":"ElementaryTypeName","src":"4228:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1919,"initialValue":{"arguments":[{"id":1917,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1906,"src":"4275:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1915,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1904,"src":"4255:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4262:12:11","memberName":"delegatecall","nodeType":"MemberAccess","src":"4255:19:11","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":1918,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4255:25:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"4213:67:11"},{"expression":{"arguments":[{"id":1921,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1904,"src":"4324:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1922,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1912,"src":"4332:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1923,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1914,"src":"4341:10:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1920,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1967,"src":"4297:26:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":1924,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4297:55:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1910,"id":1925,"nodeType":"Return","src":"4290:62:11"}]},"documentation":{"id":1902,"nodeType":"StructuredDocumentation","src":"3971:130:11","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."},"id":1927,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"4115:20:11","nodeType":"FunctionDefinition","parameters":{"id":1907,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1904,"mutability":"mutable","name":"target","nameLocation":"4144:6:11","nodeType":"VariableDeclaration","scope":1927,"src":"4136:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1903,"name":"address","nodeType":"ElementaryTypeName","src":"4136:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1906,"mutability":"mutable","name":"data","nameLocation":"4165:4:11","nodeType":"VariableDeclaration","scope":1927,"src":"4152:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1905,"name":"bytes","nodeType":"ElementaryTypeName","src":"4152:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4135:35:11"},"returnParameters":{"id":1910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1909,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1927,"src":"4189:12:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1908,"name":"bytes","nodeType":"ElementaryTypeName","src":"4189:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4188:14:11"},"scope":2008,"src":"4106:253:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1966,"nodeType":"Block","src":"4783:424:11","statements":[{"condition":{"id":1940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4797:8:11","subExpression":{"id":1939,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1932,"src":"4798:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1964,"nodeType":"Block","src":"4857:344:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1946,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1934,"src":"5045:10:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5056:6:11","memberName":"length","nodeType":"MemberAccess","src":"5045:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1948,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5066:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5045:22:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1950,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1930,"src":"5071:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5078:4:11","memberName":"code","nodeType":"MemberAccess","src":"5071:11:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5083:6:11","memberName":"length","nodeType":"MemberAccess","src":"5071:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1953,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5093:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5071:23:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5045:49:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1961,"nodeType":"IfStatement","src":"5041:119:11","trueBody":{"id":1960,"nodeType":"Block","src":"5096:64:11","statements":[{"errorCall":{"arguments":[{"id":1957,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1930,"src":"5138:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1956,"name":"AddressEmptyCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1768,"src":"5121:16:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1958,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5121:24:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1959,"nodeType":"RevertStatement","src":"5114:31:11"}]}},{"expression":{"id":1962,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1934,"src":"5180:10:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1938,"id":1963,"nodeType":"Return","src":"5173:17:11"}]},"id":1965,"nodeType":"IfStatement","src":"4793:408:11","trueBody":{"id":1945,"nodeType":"Block","src":"4807:44:11","statements":[{"expression":{"arguments":[{"id":1942,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1934,"src":"4829:10:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1941,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2007,"src":"4821:7:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":1943,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4821:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1944,"nodeType":"ExpressionStatement","src":"4821:19:11"}]}}]},"documentation":{"id":1928,"nodeType":"StructuredDocumentation","src":"4365:255:11","text":" @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n unsuccessful call."},"id":1967,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"4634:26:11","nodeType":"FunctionDefinition","parameters":{"id":1935,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1930,"mutability":"mutable","name":"target","nameLocation":"4678:6:11","nodeType":"VariableDeclaration","scope":1967,"src":"4670:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1929,"name":"address","nodeType":"ElementaryTypeName","src":"4670:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1932,"mutability":"mutable","name":"success","nameLocation":"4699:7:11","nodeType":"VariableDeclaration","scope":1967,"src":"4694:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1931,"name":"bool","nodeType":"ElementaryTypeName","src":"4694:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1934,"mutability":"mutable","name":"returndata","nameLocation":"4729:10:11","nodeType":"VariableDeclaration","scope":1967,"src":"4716:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1933,"name":"bytes","nodeType":"ElementaryTypeName","src":"4716:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4660:85:11"},"returnParameters":{"id":1938,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1937,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1967,"src":"4769:12:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1936,"name":"bytes","nodeType":"ElementaryTypeName","src":"4769:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4768:14:11"},"scope":2008,"src":"4625:582:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1988,"nodeType":"Block","src":"5509:122:11","statements":[{"condition":{"id":1978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5523:8:11","subExpression":{"id":1977,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1970,"src":"5524:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1986,"nodeType":"Block","src":"5583:42:11","statements":[{"expression":{"id":1984,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1972,"src":"5604:10:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1976,"id":1985,"nodeType":"Return","src":"5597:17:11"}]},"id":1987,"nodeType":"IfStatement","src":"5519:106:11","trueBody":{"id":1983,"nodeType":"Block","src":"5533:44:11","statements":[{"expression":{"arguments":[{"id":1980,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1972,"src":"5555:10:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1979,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2007,"src":"5547:7:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":1981,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5547:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1982,"nodeType":"ExpressionStatement","src":"5547:19:11"}]}}]},"documentation":{"id":1968,"nodeType":"StructuredDocumentation","src":"5213:189:11","text":" @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {FailedInnerCall} error."},"id":1989,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"5416:16:11","nodeType":"FunctionDefinition","parameters":{"id":1973,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1970,"mutability":"mutable","name":"success","nameLocation":"5438:7:11","nodeType":"VariableDeclaration","scope":1989,"src":"5433:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1969,"name":"bool","nodeType":"ElementaryTypeName","src":"5433:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1972,"mutability":"mutable","name":"returndata","nameLocation":"5460:10:11","nodeType":"VariableDeclaration","scope":1989,"src":"5447:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1971,"name":"bytes","nodeType":"ElementaryTypeName","src":"5447:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5432:39:11"},"returnParameters":{"id":1976,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1975,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1989,"src":"5495:12:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1974,"name":"bytes","nodeType":"ElementaryTypeName","src":"5495:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5494:14:11"},"scope":2008,"src":"5407:224:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2006,"nodeType":"Block","src":"5798:461:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1995,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1992,"src":"5874:10:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5885:6:11","memberName":"length","nodeType":"MemberAccess","src":"5874:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1997,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5894:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5874:21:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2004,"nodeType":"Block","src":"6204:49:11","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2001,"name":"FailedInnerCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1771,"src":"6225:15:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2002,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6225:17:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2003,"nodeType":"RevertStatement","src":"6218:24:11"}]},"id":2005,"nodeType":"IfStatement","src":"5870:383:11","trueBody":{"id":2000,"nodeType":"Block","src":"5897:301:11","statements":[{"AST":{"nativeSrc":"6055:133:11","nodeType":"YulBlock","src":"6055:133:11","statements":[{"nativeSrc":"6073:40:11","nodeType":"YulVariableDeclaration","src":"6073:40:11","value":{"arguments":[{"name":"returndata","nativeSrc":"6102:10:11","nodeType":"YulIdentifier","src":"6102:10:11"}],"functionName":{"name":"mload","nativeSrc":"6096:5:11","nodeType":"YulIdentifier","src":"6096:5:11"},"nativeSrc":"6096:17:11","nodeType":"YulFunctionCall","src":"6096:17:11"},"variables":[{"name":"returndata_size","nativeSrc":"6077:15:11","nodeType":"YulTypedName","src":"6077:15:11","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"6141:2:11","nodeType":"YulLiteral","src":"6141:2:11","type":"","value":"32"},{"name":"returndata","nativeSrc":"6145:10:11","nodeType":"YulIdentifier","src":"6145:10:11"}],"functionName":{"name":"add","nativeSrc":"6137:3:11","nodeType":"YulIdentifier","src":"6137:3:11"},"nativeSrc":"6137:19:11","nodeType":"YulFunctionCall","src":"6137:19:11"},{"name":"returndata_size","nativeSrc":"6158:15:11","nodeType":"YulIdentifier","src":"6158:15:11"}],"functionName":{"name":"revert","nativeSrc":"6130:6:11","nodeType":"YulIdentifier","src":"6130:6:11"},"nativeSrc":"6130:44:11","nodeType":"YulFunctionCall","src":"6130:44:11"},"nativeSrc":"6130:44:11","nodeType":"YulExpressionStatement","src":"6130:44:11"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"cancun","externalReferences":[{"declaration":1992,"isOffset":false,"isSlot":false,"src":"6102:10:11","valueSize":1},{"declaration":1992,"isOffset":false,"isSlot":false,"src":"6145:10:11","valueSize":1}],"id":1999,"nodeType":"InlineAssembly","src":"6046:142:11"}]}}]},"documentation":{"id":1990,"nodeType":"StructuredDocumentation","src":"5637:101:11","text":" @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}."},"id":2007,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"5752:7:11","nodeType":"FunctionDefinition","parameters":{"id":1993,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1992,"mutability":"mutable","name":"returndata","nameLocation":"5773:10:11","nodeType":"VariableDeclaration","scope":2007,"src":"5760:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1991,"name":"bytes","nodeType":"ElementaryTypeName","src":"5760:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5759:25:11"},"returnParameters":{"id":1994,"nodeType":"ParameterList","parameters":[],"src":"5798:0:11"},"scope":2008,"src":"5743:516:11","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":2009,"src":"195:6066:11","usedErrors":[1763,1768,1771],"usedEvents":[]}],"src":"101:6161:11"},"id":11},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[2038]},"id":2039,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2010,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:12"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":2011,"nodeType":"StructuredDocumentation","src":"127:496:12","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":2038,"linearizedBaseContracts":[2038],"name":"Context","nameLocation":"642:7:12","nodeType":"ContractDefinition","nodes":[{"body":{"id":2019,"nodeType":"Block","src":"718:34:12","statements":[{"expression":{"expression":{"id":2016,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:12","memberName":"sender","nodeType":"MemberAccess","src":"735:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2015,"id":2018,"nodeType":"Return","src":"728:17:12"}]},"id":2020,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:12","nodeType":"FunctionDefinition","parameters":{"id":2012,"nodeType":"ParameterList","parameters":[],"src":"675:2:12"},"returnParameters":{"id":2015,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2014,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2020,"src":"709:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2013,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:12"},"scope":2038,"src":"656:96:12","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2028,"nodeType":"Block","src":"825:32:12","statements":[{"expression":{"expression":{"id":2025,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:12","memberName":"data","nodeType":"MemberAccess","src":"842:8:12","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":2024,"id":2027,"nodeType":"Return","src":"835:15:12"}]},"id":2029,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:12","nodeType":"FunctionDefinition","parameters":{"id":2021,"nodeType":"ParameterList","parameters":[],"src":"775:2:12"},"returnParameters":{"id":2024,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2023,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2029,"src":"809:14:12","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2022,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:12"},"scope":2038,"src":"758:99:12","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2036,"nodeType":"Block","src":"935:25:12","statements":[{"expression":{"hexValue":"30","id":2034,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2033,"id":2035,"nodeType":"Return","src":"945:8:12"}]},"id":2037,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:12","nodeType":"FunctionDefinition","parameters":{"id":2030,"nodeType":"ParameterList","parameters":[],"src":"892:2:12"},"returnParameters":{"id":2033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2032,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2037,"src":"926:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2031,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:12"},"scope":2038,"src":"863:97:12","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":2039,"src":"624:338:12","usedErrors":[],"usedEvents":[]}],"src":"101:862:12"},"id":12},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","exportedSymbols":{"ReentrancyGuard":[2107]},"id":2108,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2040,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:13"},{"abstract":true,"baseContracts":[],"canonicalName":"ReentrancyGuard","contractDependencies":[],"contractKind":"contract","documentation":{"id":2041,"nodeType":"StructuredDocumentation","src":"135:750:13","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"id":2107,"linearizedBaseContracts":[2107],"name":"ReentrancyGuard","nameLocation":"904:15:13","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":2044,"mutability":"constant","name":"NOT_ENTERED","nameLocation":"1699:11:13","nodeType":"VariableDeclaration","scope":2107,"src":"1674:40:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2042,"name":"uint256","nodeType":"ElementaryTypeName","src":"1674:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":2043,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1713:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":2047,"mutability":"constant","name":"ENTERED","nameLocation":"1745:7:13","nodeType":"VariableDeclaration","scope":2107,"src":"1720:36:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2045,"name":"uint256","nodeType":"ElementaryTypeName","src":"1720:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":2046,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1755:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":false,"id":2049,"mutability":"mutable","name":"_status","nameLocation":"1779:7:13","nodeType":"VariableDeclaration","scope":2107,"src":"1763:23:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2048,"name":"uint256","nodeType":"ElementaryTypeName","src":"1763:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"documentation":{"id":2050,"nodeType":"StructuredDocumentation","src":"1793:52:13","text":" @dev Unauthorized reentrant call."},"errorSelector":"3ee5aeb5","id":2052,"name":"ReentrancyGuardReentrantCall","nameLocation":"1856:28:13","nodeType":"ErrorDefinition","parameters":{"id":2051,"nodeType":"ParameterList","parameters":[],"src":"1884:2:13"},"src":"1850:37:13"},{"body":{"id":2059,"nodeType":"Block","src":"1907:38:13","statements":[{"expression":{"id":2057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2055,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2049,"src":"1917:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2056,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2044,"src":"1927:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1917:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2058,"nodeType":"ExpressionStatement","src":"1917:21:13"}]},"id":2060,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2053,"nodeType":"ParameterList","parameters":[],"src":"1904:2:13"},"returnParameters":{"id":2054,"nodeType":"ParameterList","parameters":[],"src":"1907:0:13"},"scope":2107,"src":"1893:52:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2070,"nodeType":"Block","src":"2346:79:13","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2063,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2087,"src":"2356:19:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2064,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2356:21:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2065,"nodeType":"ExpressionStatement","src":"2356:21:13"},{"id":2066,"nodeType":"PlaceholderStatement","src":"2387:1:13"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2067,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2095,"src":"2398:18:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2068,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2398:20:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2069,"nodeType":"ExpressionStatement","src":"2398:20:13"}]},"documentation":{"id":2061,"nodeType":"StructuredDocumentation","src":"1951:366:13","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"id":2071,"name":"nonReentrant","nameLocation":"2331:12:13","nodeType":"ModifierDefinition","parameters":{"id":2062,"nodeType":"ParameterList","parameters":[],"src":"2343:2:13"},"src":"2322:103:13","virtual":false,"visibility":"internal"},{"body":{"id":2086,"nodeType":"Block","src":"2470:268:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2074,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2049,"src":"2558:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2075,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2047,"src":"2569:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2558:18:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2081,"nodeType":"IfStatement","src":"2554:86:13","trueBody":{"id":2080,"nodeType":"Block","src":"2578:62:13","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2077,"name":"ReentrancyGuardReentrantCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2052,"src":"2599:28:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2078,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2599:30:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2079,"nodeType":"RevertStatement","src":"2592:37:13"}]}},{"expression":{"id":2084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2082,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2049,"src":"2714:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2083,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2047,"src":"2724:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2714:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2085,"nodeType":"ExpressionStatement","src":"2714:17:13"}]},"id":2087,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"2440:19:13","nodeType":"FunctionDefinition","parameters":{"id":2072,"nodeType":"ParameterList","parameters":[],"src":"2459:2:13"},"returnParameters":{"id":2073,"nodeType":"ParameterList","parameters":[],"src":"2470:0:13"},"scope":2107,"src":"2431:307:13","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2094,"nodeType":"Block","src":"2782:170:13","statements":[{"expression":{"id":2092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2090,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2049,"src":"2924:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2091,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2044,"src":"2934:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2924:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2093,"nodeType":"ExpressionStatement","src":"2924:21:13"}]},"id":2095,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"2753:18:13","nodeType":"FunctionDefinition","parameters":{"id":2088,"nodeType":"ParameterList","parameters":[],"src":"2771:2:13"},"returnParameters":{"id":2089,"nodeType":"ParameterList","parameters":[],"src":"2782:0:13"},"scope":2107,"src":"2744:208:13","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2105,"nodeType":"Block","src":"3195:42:13","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2101,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2049,"src":"3212:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2102,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2047,"src":"3223:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3212:18:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2100,"id":2104,"nodeType":"Return","src":"3205:25:13"}]},"documentation":{"id":2096,"nodeType":"StructuredDocumentation","src":"2958:168:13","text":" @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."},"id":2106,"implemented":true,"kind":"function","modifiers":[],"name":"_reentrancyGuardEntered","nameLocation":"3140:23:13","nodeType":"FunctionDefinition","parameters":{"id":2097,"nodeType":"ParameterList","parameters":[],"src":"3163:2:13"},"returnParameters":{"id":2100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2099,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2106,"src":"3189:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2098,"name":"bool","nodeType":"ElementaryTypeName","src":"3189:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3188:6:13"},"scope":2107,"src":"3131:106:13","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":2108,"src":"886:2353:13","usedErrors":[2052],"usedEvents":[]}],"src":"109:3131:13"},"id":13},"@openzeppelin/contracts/utils/StorageSlot.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","exportedSymbols":{"StorageSlot":[2217]},"id":2218,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2109,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"193:24:14"},{"abstract":false,"baseContracts":[],"canonicalName":"StorageSlot","contractDependencies":[],"contractKind":"library","documentation":{"id":2110,"nodeType":"StructuredDocumentation","src":"219:1025:14","text":" @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```"},"fullyImplemented":true,"id":2217,"linearizedBaseContracts":[2217],"name":"StorageSlot","nameLocation":"1253:11:14","nodeType":"ContractDefinition","nodes":[{"canonicalName":"StorageSlot.AddressSlot","id":2113,"members":[{"constant":false,"id":2112,"mutability":"mutable","name":"value","nameLocation":"1308:5:14","nodeType":"VariableDeclaration","scope":2113,"src":"1300:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2111,"name":"address","nodeType":"ElementaryTypeName","src":"1300:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"AddressSlot","nameLocation":"1278:11:14","nodeType":"StructDefinition","scope":2217,"src":"1271:49:14","visibility":"public"},{"canonicalName":"StorageSlot.BooleanSlot","id":2116,"members":[{"constant":false,"id":2115,"mutability":"mutable","name":"value","nameLocation":"1360:5:14","nodeType":"VariableDeclaration","scope":2116,"src":"1355:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2114,"name":"bool","nodeType":"ElementaryTypeName","src":"1355:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"BooleanSlot","nameLocation":"1333:11:14","nodeType":"StructDefinition","scope":2217,"src":"1326:46:14","visibility":"public"},{"canonicalName":"StorageSlot.Bytes32Slot","id":2119,"members":[{"constant":false,"id":2118,"mutability":"mutable","name":"value","nameLocation":"1415:5:14","nodeType":"VariableDeclaration","scope":2119,"src":"1407:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2117,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1407:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Bytes32Slot","nameLocation":"1385:11:14","nodeType":"StructDefinition","scope":2217,"src":"1378:49:14","visibility":"public"},{"canonicalName":"StorageSlot.Uint256Slot","id":2122,"members":[{"constant":false,"id":2121,"mutability":"mutable","name":"value","nameLocation":"1470:5:14","nodeType":"VariableDeclaration","scope":2122,"src":"1462:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2120,"name":"uint256","nodeType":"ElementaryTypeName","src":"1462:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Uint256Slot","nameLocation":"1440:11:14","nodeType":"StructDefinition","scope":2217,"src":"1433:49:14","visibility":"public"},{"canonicalName":"StorageSlot.StringSlot","id":2125,"members":[{"constant":false,"id":2124,"mutability":"mutable","name":"value","nameLocation":"1523:5:14","nodeType":"VariableDeclaration","scope":2125,"src":"1516:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2123,"name":"string","nodeType":"ElementaryTypeName","src":"1516:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"StringSlot","nameLocation":"1495:10:14","nodeType":"StructDefinition","scope":2217,"src":"1488:47:14","visibility":"public"},{"canonicalName":"StorageSlot.BytesSlot","id":2128,"members":[{"constant":false,"id":2127,"mutability":"mutable","name":"value","nameLocation":"1574:5:14","nodeType":"VariableDeclaration","scope":2128,"src":"1568:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":2126,"name":"bytes","nodeType":"ElementaryTypeName","src":"1568:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"BytesSlot","nameLocation":"1548:9:14","nodeType":"StructDefinition","scope":2217,"src":"1541:45:14","visibility":"public"},{"body":{"id":2138,"nodeType":"Block","src":"1768:106:14","statements":[{"AST":{"nativeSrc":"1830:38:14","nodeType":"YulBlock","src":"1830:38:14","statements":[{"nativeSrc":"1844:14:14","nodeType":"YulAssignment","src":"1844:14:14","value":{"name":"slot","nativeSrc":"1854:4:14","nodeType":"YulIdentifier","src":"1854:4:14"},"variableNames":[{"name":"r.slot","nativeSrc":"1844:6:14","nodeType":"YulIdentifier","src":"1844:6:14"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"cancun","externalReferences":[{"declaration":2135,"isOffset":false,"isSlot":true,"src":"1844:6:14","suffix":"slot","valueSize":1},{"declaration":2131,"isOffset":false,"isSlot":false,"src":"1854:4:14","valueSize":1}],"id":2137,"nodeType":"InlineAssembly","src":"1821:47:14"}]},"documentation":{"id":2129,"nodeType":"StructuredDocumentation","src":"1592:87:14","text":" @dev Returns an `AddressSlot` with member `value` located at `slot`."},"id":2139,"implemented":true,"kind":"function","modifiers":[],"name":"getAddressSlot","nameLocation":"1693:14:14","nodeType":"FunctionDefinition","parameters":{"id":2132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2131,"mutability":"mutable","name":"slot","nameLocation":"1716:4:14","nodeType":"VariableDeclaration","scope":2139,"src":"1708:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2130,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1708:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1707:14:14"},"returnParameters":{"id":2136,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2135,"mutability":"mutable","name":"r","nameLocation":"1765:1:14","nodeType":"VariableDeclaration","scope":2139,"src":"1745:21:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2113_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":2134,"nodeType":"UserDefinedTypeName","pathNode":{"id":2133,"name":"AddressSlot","nameLocations":["1745:11:14"],"nodeType":"IdentifierPath","referencedDeclaration":2113,"src":"1745:11:14"},"referencedDeclaration":2113,"src":"1745:11:14","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2113_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"1744:23:14"},"scope":2217,"src":"1684:190:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2149,"nodeType":"Block","src":"2056:106:14","statements":[{"AST":{"nativeSrc":"2118:38:14","nodeType":"YulBlock","src":"2118:38:14","statements":[{"nativeSrc":"2132:14:14","nodeType":"YulAssignment","src":"2132:14:14","value":{"name":"slot","nativeSrc":"2142:4:14","nodeType":"YulIdentifier","src":"2142:4:14"},"variableNames":[{"name":"r.slot","nativeSrc":"2132:6:14","nodeType":"YulIdentifier","src":"2132:6:14"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"cancun","externalReferences":[{"declaration":2146,"isOffset":false,"isSlot":true,"src":"2132:6:14","suffix":"slot","valueSize":1},{"declaration":2142,"isOffset":false,"isSlot":false,"src":"2142:4:14","valueSize":1}],"id":2148,"nodeType":"InlineAssembly","src":"2109:47:14"}]},"documentation":{"id":2140,"nodeType":"StructuredDocumentation","src":"1880:87:14","text":" @dev Returns an `BooleanSlot` with member `value` located at `slot`."},"id":2150,"implemented":true,"kind":"function","modifiers":[],"name":"getBooleanSlot","nameLocation":"1981:14:14","nodeType":"FunctionDefinition","parameters":{"id":2143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2142,"mutability":"mutable","name":"slot","nameLocation":"2004:4:14","nodeType":"VariableDeclaration","scope":2150,"src":"1996:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2141,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1996:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1995:14:14"},"returnParameters":{"id":2147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2146,"mutability":"mutable","name":"r","nameLocation":"2053:1:14","nodeType":"VariableDeclaration","scope":2150,"src":"2033:21:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$2116_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"},"typeName":{"id":2145,"nodeType":"UserDefinedTypeName","pathNode":{"id":2144,"name":"BooleanSlot","nameLocations":["2033:11:14"],"nodeType":"IdentifierPath","referencedDeclaration":2116,"src":"2033:11:14"},"referencedDeclaration":2116,"src":"2033:11:14","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$2116_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"}},"visibility":"internal"}],"src":"2032:23:14"},"scope":2217,"src":"1972:190:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2160,"nodeType":"Block","src":"2344:106:14","statements":[{"AST":{"nativeSrc":"2406:38:14","nodeType":"YulBlock","src":"2406:38:14","statements":[{"nativeSrc":"2420:14:14","nodeType":"YulAssignment","src":"2420:14:14","value":{"name":"slot","nativeSrc":"2430:4:14","nodeType":"YulIdentifier","src":"2430:4:14"},"variableNames":[{"name":"r.slot","nativeSrc":"2420:6:14","nodeType":"YulIdentifier","src":"2420:6:14"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"cancun","externalReferences":[{"declaration":2157,"isOffset":false,"isSlot":true,"src":"2420:6:14","suffix":"slot","valueSize":1},{"declaration":2153,"isOffset":false,"isSlot":false,"src":"2430:4:14","valueSize":1}],"id":2159,"nodeType":"InlineAssembly","src":"2397:47:14"}]},"documentation":{"id":2151,"nodeType":"StructuredDocumentation","src":"2168:87:14","text":" @dev Returns an `Bytes32Slot` with member `value` located at `slot`."},"id":2161,"implemented":true,"kind":"function","modifiers":[],"name":"getBytes32Slot","nameLocation":"2269:14:14","nodeType":"FunctionDefinition","parameters":{"id":2154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2153,"mutability":"mutable","name":"slot","nameLocation":"2292:4:14","nodeType":"VariableDeclaration","scope":2161,"src":"2284:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2152,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2284:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2283:14:14"},"returnParameters":{"id":2158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2157,"mutability":"mutable","name":"r","nameLocation":"2341:1:14","nodeType":"VariableDeclaration","scope":2161,"src":"2321:21:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$2119_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":2156,"nodeType":"UserDefinedTypeName","pathNode":{"id":2155,"name":"Bytes32Slot","nameLocations":["2321:11:14"],"nodeType":"IdentifierPath","referencedDeclaration":2119,"src":"2321:11:14"},"referencedDeclaration":2119,"src":"2321:11:14","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$2119_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"2320:23:14"},"scope":2217,"src":"2260:190:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2171,"nodeType":"Block","src":"2632:106:14","statements":[{"AST":{"nativeSrc":"2694:38:14","nodeType":"YulBlock","src":"2694:38:14","statements":[{"nativeSrc":"2708:14:14","nodeType":"YulAssignment","src":"2708:14:14","value":{"name":"slot","nativeSrc":"2718:4:14","nodeType":"YulIdentifier","src":"2718:4:14"},"variableNames":[{"name":"r.slot","nativeSrc":"2708:6:14","nodeType":"YulIdentifier","src":"2708:6:14"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"cancun","externalReferences":[{"declaration":2168,"isOffset":false,"isSlot":true,"src":"2708:6:14","suffix":"slot","valueSize":1},{"declaration":2164,"isOffset":false,"isSlot":false,"src":"2718:4:14","valueSize":1}],"id":2170,"nodeType":"InlineAssembly","src":"2685:47:14"}]},"documentation":{"id":2162,"nodeType":"StructuredDocumentation","src":"2456:87:14","text":" @dev Returns an `Uint256Slot` with member `value` located at `slot`."},"id":2172,"implemented":true,"kind":"function","modifiers":[],"name":"getUint256Slot","nameLocation":"2557:14:14","nodeType":"FunctionDefinition","parameters":{"id":2165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2164,"mutability":"mutable","name":"slot","nameLocation":"2580:4:14","nodeType":"VariableDeclaration","scope":2172,"src":"2572:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2163,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2572:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2571:14:14"},"returnParameters":{"id":2169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2168,"mutability":"mutable","name":"r","nameLocation":"2629:1:14","nodeType":"VariableDeclaration","scope":2172,"src":"2609:21:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$2122_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":2167,"nodeType":"UserDefinedTypeName","pathNode":{"id":2166,"name":"Uint256Slot","nameLocations":["2609:11:14"],"nodeType":"IdentifierPath","referencedDeclaration":2122,"src":"2609:11:14"},"referencedDeclaration":2122,"src":"2609:11:14","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$2122_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"2608:23:14"},"scope":2217,"src":"2548:190:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2182,"nodeType":"Block","src":"2917:106:14","statements":[{"AST":{"nativeSrc":"2979:38:14","nodeType":"YulBlock","src":"2979:38:14","statements":[{"nativeSrc":"2993:14:14","nodeType":"YulAssignment","src":"2993:14:14","value":{"name":"slot","nativeSrc":"3003:4:14","nodeType":"YulIdentifier","src":"3003:4:14"},"variableNames":[{"name":"r.slot","nativeSrc":"2993:6:14","nodeType":"YulIdentifier","src":"2993:6:14"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"cancun","externalReferences":[{"declaration":2179,"isOffset":false,"isSlot":true,"src":"2993:6:14","suffix":"slot","valueSize":1},{"declaration":2175,"isOffset":false,"isSlot":false,"src":"3003:4:14","valueSize":1}],"id":2181,"nodeType":"InlineAssembly","src":"2970:47:14"}]},"documentation":{"id":2173,"nodeType":"StructuredDocumentation","src":"2744:86:14","text":" @dev Returns an `StringSlot` with member `value` located at `slot`."},"id":2183,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"2844:13:14","nodeType":"FunctionDefinition","parameters":{"id":2176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2175,"mutability":"mutable","name":"slot","nameLocation":"2866:4:14","nodeType":"VariableDeclaration","scope":2183,"src":"2858:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2174,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2858:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2857:14:14"},"returnParameters":{"id":2180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2179,"mutability":"mutable","name":"r","nameLocation":"2914:1:14","nodeType":"VariableDeclaration","scope":2183,"src":"2895:20:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2125_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":2178,"nodeType":"UserDefinedTypeName","pathNode":{"id":2177,"name":"StringSlot","nameLocations":["2895:10:14"],"nodeType":"IdentifierPath","referencedDeclaration":2125,"src":"2895:10:14"},"referencedDeclaration":2125,"src":"2895:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2125_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"2894:22:14"},"scope":2217,"src":"2835:188:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2193,"nodeType":"Block","src":"3225:112:14","statements":[{"AST":{"nativeSrc":"3287:44:14","nodeType":"YulBlock","src":"3287:44:14","statements":[{"nativeSrc":"3301:20:14","nodeType":"YulAssignment","src":"3301:20:14","value":{"name":"store.slot","nativeSrc":"3311:10:14","nodeType":"YulIdentifier","src":"3311:10:14"},"variableNames":[{"name":"r.slot","nativeSrc":"3301:6:14","nodeType":"YulIdentifier","src":"3301:6:14"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"cancun","externalReferences":[{"declaration":2190,"isOffset":false,"isSlot":true,"src":"3301:6:14","suffix":"slot","valueSize":1},{"declaration":2186,"isOffset":false,"isSlot":true,"src":"3311:10:14","suffix":"slot","valueSize":1}],"id":2192,"nodeType":"InlineAssembly","src":"3278:53:14"}]},"documentation":{"id":2184,"nodeType":"StructuredDocumentation","src":"3029:101:14","text":" @dev Returns an `StringSlot` representation of the string storage pointer `store`."},"id":2194,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3144:13:14","nodeType":"FunctionDefinition","parameters":{"id":2187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2186,"mutability":"mutable","name":"store","nameLocation":"3173:5:14","nodeType":"VariableDeclaration","scope":2194,"src":"3158:20:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2185,"name":"string","nodeType":"ElementaryTypeName","src":"3158:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3157:22:14"},"returnParameters":{"id":2191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2190,"mutability":"mutable","name":"r","nameLocation":"3222:1:14","nodeType":"VariableDeclaration","scope":2194,"src":"3203:20:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2125_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":2189,"nodeType":"UserDefinedTypeName","pathNode":{"id":2188,"name":"StringSlot","nameLocations":["3203:10:14"],"nodeType":"IdentifierPath","referencedDeclaration":2125,"src":"3203:10:14"},"referencedDeclaration":2125,"src":"3203:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2125_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3202:22:14"},"scope":2217,"src":"3135:202:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2204,"nodeType":"Block","src":"3513:106:14","statements":[{"AST":{"nativeSrc":"3575:38:14","nodeType":"YulBlock","src":"3575:38:14","statements":[{"nativeSrc":"3589:14:14","nodeType":"YulAssignment","src":"3589:14:14","value":{"name":"slot","nativeSrc":"3599:4:14","nodeType":"YulIdentifier","src":"3599:4:14"},"variableNames":[{"name":"r.slot","nativeSrc":"3589:6:14","nodeType":"YulIdentifier","src":"3589:6:14"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"cancun","externalReferences":[{"declaration":2201,"isOffset":false,"isSlot":true,"src":"3589:6:14","suffix":"slot","valueSize":1},{"declaration":2197,"isOffset":false,"isSlot":false,"src":"3599:4:14","valueSize":1}],"id":2203,"nodeType":"InlineAssembly","src":"3566:47:14"}]},"documentation":{"id":2195,"nodeType":"StructuredDocumentation","src":"3343:85:14","text":" @dev Returns an `BytesSlot` with member `value` located at `slot`."},"id":2205,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3442:12:14","nodeType":"FunctionDefinition","parameters":{"id":2198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2197,"mutability":"mutable","name":"slot","nameLocation":"3463:4:14","nodeType":"VariableDeclaration","scope":2205,"src":"3455:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2196,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3455:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3454:14:14"},"returnParameters":{"id":2202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2201,"mutability":"mutable","name":"r","nameLocation":"3510:1:14","nodeType":"VariableDeclaration","scope":2205,"src":"3492:19:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2128_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":2200,"nodeType":"UserDefinedTypeName","pathNode":{"id":2199,"name":"BytesSlot","nameLocations":["3492:9:14"],"nodeType":"IdentifierPath","referencedDeclaration":2128,"src":"3492:9:14"},"referencedDeclaration":2128,"src":"3492:9:14","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2128_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3491:21:14"},"scope":2217,"src":"3433:186:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2215,"nodeType":"Block","src":"3816:112:14","statements":[{"AST":{"nativeSrc":"3878:44:14","nodeType":"YulBlock","src":"3878:44:14","statements":[{"nativeSrc":"3892:20:14","nodeType":"YulAssignment","src":"3892:20:14","value":{"name":"store.slot","nativeSrc":"3902:10:14","nodeType":"YulIdentifier","src":"3902:10:14"},"variableNames":[{"name":"r.slot","nativeSrc":"3892:6:14","nodeType":"YulIdentifier","src":"3892:6:14"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"cancun","externalReferences":[{"declaration":2212,"isOffset":false,"isSlot":true,"src":"3892:6:14","suffix":"slot","valueSize":1},{"declaration":2208,"isOffset":false,"isSlot":true,"src":"3902:10:14","suffix":"slot","valueSize":1}],"id":2214,"nodeType":"InlineAssembly","src":"3869:53:14"}]},"documentation":{"id":2206,"nodeType":"StructuredDocumentation","src":"3625:99:14","text":" @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."},"id":2216,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3738:12:14","nodeType":"FunctionDefinition","parameters":{"id":2209,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2208,"mutability":"mutable","name":"store","nameLocation":"3765:5:14","nodeType":"VariableDeclaration","scope":2216,"src":"3751:19:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":2207,"name":"bytes","nodeType":"ElementaryTypeName","src":"3751:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3750:21:14"},"returnParameters":{"id":2213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2212,"mutability":"mutable","name":"r","nameLocation":"3813:1:14","nodeType":"VariableDeclaration","scope":2216,"src":"3795:19:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2128_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":2211,"nodeType":"UserDefinedTypeName","pathNode":{"id":2210,"name":"BytesSlot","nameLocations":["3795:9:14"],"nodeType":"IdentifierPath","referencedDeclaration":2128,"src":"3795:9:14"},"referencedDeclaration":2128,"src":"3795:9:14","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2128_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3794:21:14"},"scope":2217,"src":"3729:199:14","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2218,"src":"1245:2685:14","usedErrors":[],"usedEvents":[]}],"src":"193:3738:14"},"id":14},"contracts/BaluniV1Pool.sol":{"ast":{"absolutePath":"contracts/BaluniV1Pool.sol","exportedSymbols":{"BaluniV1Pool":[4596],"Context":[2038],"DSMath":[5624],"ERC20":[1651],"IBaluniV1Oracle":[5093],"IBaluniV1PoolPeriphery":[5213],"IBaluniV1Rebalancer":[5298],"IBaluniV1Registry":[5472],"IERC20":[1729],"IERC20Errors":[728],"IERC20Metadata":[1755],"ReentrancyGuard":[2107]},"id":4597,"license":"GNU AGPLv3","nodeType":"SourceUnit","nodes":[{"id":2219,"literals":["solidity","0.8",".25"],"nodeType":"PragmaDirective","src":"40:23:15"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":2220,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4597,"sourceUnit":1652,"src":"1468:55:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","file":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","id":2221,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4597,"sourceUnit":2108,"src":"1525:59:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IBaluniV1PoolPeriphery.sol","file":"./interfaces/IBaluniV1PoolPeriphery.sol","id":2222,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4597,"sourceUnit":5214,"src":"1588:49:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IBaluniV1Registry.sol","file":"./interfaces/IBaluniV1Registry.sol","id":2223,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4597,"sourceUnit":5473,"src":"1639:44:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IBaluniV1Rebalancer.sol","file":"./interfaces/IBaluniV1Rebalancer.sol","id":2224,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4597,"sourceUnit":5299,"src":"1685:46:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IBaluniV1Oracle.sol","file":"./interfaces/IBaluniV1Oracle.sol","id":2225,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4597,"sourceUnit":5094,"src":"1733:42:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/libs/DSMath.sol","file":"./libs/DSMath.sol","id":2226,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4597,"sourceUnit":5625,"src":"1777:27:15","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2227,"name":"ERC20","nameLocations":["1833:5:15"],"nodeType":"IdentifierPath","referencedDeclaration":1651,"src":"1833:5:15"},"id":2228,"nodeType":"InheritanceSpecifier","src":"1833:5:15"},{"baseName":{"id":2229,"name":"ReentrancyGuard","nameLocations":["1840:15:15"],"nodeType":"IdentifierPath","referencedDeclaration":2107,"src":"1840:15:15"},"id":2230,"nodeType":"InheritanceSpecifier","src":"1840:15:15"}],"canonicalName":"BaluniV1Pool","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":4596,"linearizedBaseContracts":[4596,2107,1651,728,1755,1729,2038],"name":"BaluniV1Pool","nameLocation":"1817:12:15","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"d14ef46d","id":2234,"mutability":"mutable","name":"assetInfos","nameLocation":"1882:10:15","nodeType":"VariableDeclaration","scope":4596,"src":"1863:29:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2288_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo[]"},"typeName":{"baseType":{"id":2232,"nodeType":"UserDefinedTypeName","pathNode":{"id":2231,"name":"AssetInfo","nameLocations":["1863:9:15"],"nodeType":"IdentifierPath","referencedDeclaration":2288,"src":"1863:9:15"},"referencedDeclaration":2288,"src":"1863:9:15","typeDescriptions":{"typeIdentifier":"t_struct$_AssetInfo_$2288_storage_ptr","typeString":"struct BaluniV1Pool.AssetInfo"}},"id":2233,"nodeType":"ArrayTypeName","src":"1863:11:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2288_storage_$dyn_storage_ptr","typeString":"struct BaluniV1Pool.AssetInfo[]"}},"visibility":"public"},{"global":false,"id":2237,"libraryName":{"id":2235,"name":"DSMath","nameLocations":["1905:6:15"],"nodeType":"IdentifierPath","referencedDeclaration":5624,"src":"1905:6:15"},"nodeType":"UsingForDirective","src":"1899:25:15","typeName":{"id":2236,"name":"uint256","nodeType":"ElementaryTypeName","src":"1916:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":false,"functionSelector":"7fec8d38","id":2239,"mutability":"mutable","name":"trigger","nameLocation":"1947:7:15","nodeType":"VariableDeclaration","scope":4596,"src":"1932:22:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2238,"name":"uint256","nodeType":"ElementaryTypeName","src":"1932:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"c2ee3a08","id":2241,"mutability":"mutable","name":"ONE","nameLocation":"1976:3:15","nodeType":"VariableDeclaration","scope":4596,"src":"1961:18:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2240,"name":"uint256","nodeType":"ElementaryTypeName","src":"1961:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"cdf456e1","id":2243,"mutability":"mutable","name":"baseAsset","nameLocation":"2001:9:15","nodeType":"VariableDeclaration","scope":4596,"src":"1986:24:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2242,"name":"address","nodeType":"ElementaryTypeName","src":"1986:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"id":2245,"mutability":"mutable","name":"scalingFactor","nameLocation":"2033:13:15","nodeType":"VariableDeclaration","scope":4596,"src":"2017:29:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2244,"name":"uint256","nodeType":"ElementaryTypeName","src":"2017:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"functionSelector":"7b103999","id":2248,"mutability":"mutable","name":"registry","nameLocation":"2080:8:15","nodeType":"VariableDeclaration","scope":4596,"src":"2055:33:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$5472","typeString":"contract IBaluniV1Registry"},"typeName":{"id":2247,"nodeType":"UserDefinedTypeName","pathNode":{"id":2246,"name":"IBaluniV1Registry","nameLocations":["2055:17:15"],"nodeType":"IdentifierPath","referencedDeclaration":5472,"src":"2055:17:15"},"referencedDeclaration":5472,"src":"2055:17:15","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$5472","typeString":"contract IBaluniV1Registry"}},"visibility":"public"},{"constant":true,"documentation":{"id":2249,"nodeType":"StructuredDocumentation","src":"2097:50:15","text":"@notice WAD unit. Used to handle most numbers."},"id":2254,"mutability":"constant","name":"WAD","nameLocation":"2179:3:15","nodeType":"VariableDeclaration","scope":4596,"src":"2153:40:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2250,"name":"uint256","nodeType":"ElementaryTypeName","src":"2153:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"id":2253,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2185:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3138","id":2252,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2191:2:15","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"2185:8:15","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}},"visibility":"internal"},{"constant":true,"documentation":{"id":2255,"nodeType":"StructuredDocumentation","src":"2202:45:15","text":"@notice RAY unit. Used for rpow function."},"id":2260,"mutability":"constant","name":"RAY","nameLocation":"2279:3:15","nodeType":"VariableDeclaration","scope":4596,"src":"2253:40:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2256,"name":"uint256","nodeType":"ElementaryTypeName","src":"2253:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_1000000000000000000000000000_by_1","typeString":"int_const 1000000000000000000000000000"},"id":2259,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2257,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2285:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3237","id":2258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2291:2:15","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"2285:8:15","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000000000000_by_1","typeString":"int_const 1000000000000000000000000000"}},"visibility":"internal"},{"constant":false,"id":2263,"mutability":"mutable","name":"_slippageParamK","nameLocation":"2310:15:15","nodeType":"VariableDeclaration","scope":4596,"src":"2302:36:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2261,"name":"uint256","nodeType":"ElementaryTypeName","src":"2302:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"302e3030303032653138","id":2262,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2328:10:15","typeDescriptions":{"typeIdentifier":"t_rational_20000000000000_by_1","typeString":"int_const 20000000000000"},"value":"0.00002e18"},"visibility":"internal"},{"constant":false,"id":2266,"mutability":"mutable","name":"_slippageParamN","nameLocation":"2384:15:15","nodeType":"VariableDeclaration","scope":4596,"src":"2376:27:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2264,"name":"uint256","nodeType":"ElementaryTypeName","src":"2376:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"37","id":2265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2402:1:15","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"visibility":"internal"},{"constant":false,"id":2269,"mutability":"mutable","name":"_c1","nameLocation":"2423:3:15","nodeType":"VariableDeclaration","scope":4596,"src":"2415:32:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2267,"name":"uint256","nodeType":"ElementaryTypeName","src":"2415:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"333736393237363130353939393938333038","id":2268,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2429:18:15","typeDescriptions":{"typeIdentifier":"t_rational_376927610599998308_by_1","typeString":"int_const 376927610599998308"},"value":"376927610599998308"},"visibility":"internal"},{"constant":false,"id":2272,"mutability":"mutable","name":"_xThreshold","nameLocation":"2520:11:15","nodeType":"VariableDeclaration","scope":4596,"src":"2512:40:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2270,"name":"uint256","nodeType":"ElementaryTypeName","src":"2512:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"333239383131363539323734393938353139","id":2271,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2534:18:15","typeDescriptions":{"typeIdentifier":"t_rational_329811659274998519_by_1","typeString":"int_const 329811659274998519"},"value":"329811659274998519"},"visibility":"internal"},{"constant":false,"id":2275,"mutability":"mutable","name":"_haircutRate","nameLocation":"2587:12:15","nodeType":"VariableDeclaration","scope":4596,"src":"2579:32:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2273,"name":"uint256","nodeType":"ElementaryTypeName","src":"2579:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"302e30303034653138","id":2274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2602:9:15","typeDescriptions":{"typeIdentifier":"t_rational_400000000000000_by_1","typeString":"int_const 400000000000000"},"value":"0.0004e18"},"visibility":"internal"},{"constant":false,"id":2278,"mutability":"mutable","name":"_retentionRatio","nameLocation":"2692:15:15","nodeType":"VariableDeclaration","scope":4596,"src":"2684:30:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2276,"name":"uint256","nodeType":"ElementaryTypeName","src":"2684:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31653138","id":2277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2710:4:15","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"visibility":"internal"},{"constant":false,"id":2281,"mutability":"mutable","name":"_maxPriceDeviation","nameLocation":"2734:18:15","nodeType":"VariableDeclaration","scope":4596,"src":"2726:36:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2279,"name":"uint256","nodeType":"ElementaryTypeName","src":"2726:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"302e3032653138","id":2280,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2755:7:15","typeDescriptions":{"typeIdentifier":"t_rational_20000000000000000_by_1","typeString":"int_const 20000000000000000"},"value":"0.02e18"},"visibility":"internal"},{"canonicalName":"BaluniV1Pool.AssetInfo","id":2288,"members":[{"constant":false,"id":2283,"mutability":"mutable","name":"asset","nameLocation":"2847:5:15","nodeType":"VariableDeclaration","scope":2288,"src":"2839:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2282,"name":"address","nodeType":"ElementaryTypeName","src":"2839:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2285,"mutability":"mutable","name":"weight","nameLocation":"2871:6:15","nodeType":"VariableDeclaration","scope":2288,"src":"2863:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2284,"name":"uint256","nodeType":"ElementaryTypeName","src":"2863:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2287,"mutability":"mutable","name":"slippage","nameLocation":"2896:8:15","nodeType":"VariableDeclaration","scope":2288,"src":"2888:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2286,"name":"uint256","nodeType":"ElementaryTypeName","src":"2888:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"AssetInfo","nameLocation":"2818:9:15","nodeType":"StructDefinition","scope":4596,"src":"2811:136:15","visibility":"public"},{"anonymous":false,"eventSelector":"279b343370f587af7fb675ae7c8578e9c8abcc373236ad02c501a4771fe7a7b8","id":2295,"name":"RebalancePerformed","nameLocation":"2961:18:15","nodeType":"EventDefinition","parameters":{"id":2294,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2290,"indexed":true,"mutability":"mutable","name":"by","nameLocation":"2996:2:15","nodeType":"VariableDeclaration","scope":2295,"src":"2980:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2289,"name":"address","nodeType":"ElementaryTypeName","src":"2980:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2293,"indexed":false,"mutability":"mutable","name":"assets","nameLocation":"3010:6:15","nodeType":"VariableDeclaration","scope":2295,"src":"3000:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2291,"name":"address","nodeType":"ElementaryTypeName","src":"3000:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2292,"nodeType":"ArrayTypeName","src":"3000:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"2979:38:15"},"src":"2955:63:15"},{"anonymous":false,"eventSelector":"a95ad530009c6f929555e70a66aadbeae7231e45756c5b028ca77fbaa376e73e","id":2302,"name":"WeightsRebalanced","nameLocation":"3030:17:15","nodeType":"EventDefinition","parameters":{"id":2301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2297,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"3064:4:15","nodeType":"VariableDeclaration","scope":2302,"src":"3048:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2296,"name":"address","nodeType":"ElementaryTypeName","src":"3048:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2300,"indexed":false,"mutability":"mutable","name":"amountsAdded","nameLocation":"3080:12:15","nodeType":"VariableDeclaration","scope":2302,"src":"3070:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2298,"name":"uint256","nodeType":"ElementaryTypeName","src":"3070:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2299,"nodeType":"ArrayTypeName","src":"3070:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"3047:46:15"},"src":"3024:70:15"},{"anonymous":false,"eventSelector":"cc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5","id":2308,"name":"Burn","nameLocation":"3106:4:15","nodeType":"EventDefinition","parameters":{"id":2307,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2304,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"3127:4:15","nodeType":"VariableDeclaration","scope":2308,"src":"3111:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2303,"name":"address","nodeType":"ElementaryTypeName","src":"3111:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2306,"indexed":false,"mutability":"mutable","name":"sharesBurned","nameLocation":"3141:12:15","nodeType":"VariableDeclaration","scope":2308,"src":"3133:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2305,"name":"uint256","nodeType":"ElementaryTypeName","src":"3133:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3110:44:15"},"src":"3100:55:15"},{"anonymous":false,"eventSelector":"0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d4121396885","id":2314,"name":"Mint","nameLocation":"3167:4:15","nodeType":"EventDefinition","parameters":{"id":2313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2310,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"3188:2:15","nodeType":"VariableDeclaration","scope":2314,"src":"3172:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2309,"name":"address","nodeType":"ElementaryTypeName","src":"3172:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2312,"indexed":false,"mutability":"mutable","name":"sharesMinted","nameLocation":"3200:12:15","nodeType":"VariableDeclaration","scope":2314,"src":"3192:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2311,"name":"uint256","nodeType":"ElementaryTypeName","src":"3192:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3171:42:15"},"src":"3161:53:15"},{"anonymous":false,"eventSelector":"cd3829a3813dc3cdd188fd3d01dcf3268c16be2fdd2dd21d0665418816e46062","id":2326,"name":"Swap","nameLocation":"3226:4:15","nodeType":"EventDefinition","parameters":{"id":2325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2316,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"3257:4:15","nodeType":"VariableDeclaration","scope":2326,"src":"3241:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2315,"name":"address","nodeType":"ElementaryTypeName","src":"3241:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2318,"indexed":true,"mutability":"mutable","name":"fromToken","nameLocation":"3288:9:15","nodeType":"VariableDeclaration","scope":2326,"src":"3272:25:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2317,"name":"address","nodeType":"ElementaryTypeName","src":"3272:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2320,"indexed":true,"mutability":"mutable","name":"toToken","nameLocation":"3324:7:15","nodeType":"VariableDeclaration","scope":2326,"src":"3308:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2319,"name":"address","nodeType":"ElementaryTypeName","src":"3308:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2322,"indexed":false,"mutability":"mutable","name":"amountIn","nameLocation":"3350:8:15","nodeType":"VariableDeclaration","scope":2326,"src":"3342:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2321,"name":"uint256","nodeType":"ElementaryTypeName","src":"3342:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2324,"indexed":false,"mutability":"mutable","name":"amountOut","nameLocation":"3377:9:15","nodeType":"VariableDeclaration","scope":2326,"src":"3369:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2323,"name":"uint256","nodeType":"ElementaryTypeName","src":"3369:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3230:163:15"},"src":"3220:174:15"},{"body":{"id":2424,"nodeType":"Block","src":"3579:594:15","statements":[{"expression":{"id":2347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2343,"name":"registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2248,"src":"3590:8:15","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$5472","typeString":"contract IBaluniV1Registry"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2345,"name":"_registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2336,"src":"3619:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2344,"name":"IBaluniV1Registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5472,"src":"3601:17:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBaluniV1Registry_$5472_$","typeString":"type(contract IBaluniV1Registry)"}},"id":2346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3601:28:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$5472","typeString":"contract IBaluniV1Registry"}},"src":"3590:39:15","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$5472","typeString":"contract IBaluniV1Registry"}},"id":2348,"nodeType":"ExpressionStatement","src":"3590:39:15"},{"expression":{"id":2351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2349,"name":"ONE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2241,"src":"3642:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31653138","id":2350,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3648:4:15","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"src":"3642:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2352,"nodeType":"ExpressionStatement","src":"3642:10:15"},{"assignments":[2354],"declarations":[{"constant":false,"id":2354,"mutability":"mutable","name":"result","nameLocation":"3670:6:15","nodeType":"VariableDeclaration","scope":2424,"src":"3665:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2353,"name":"bool","nodeType":"ElementaryTypeName","src":"3665:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2359,"initialValue":{"arguments":[{"id":2356,"name":"_assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2329,"src":"3696:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},{"id":2357,"name":"_weights","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2332,"src":"3705:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":2355,"name":"initializeAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2571,"src":"3679:16:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_bool_$","typeString":"function (address[] memory,uint256[] memory) returns (bool)"}},"id":2358,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3679:35:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"3665:49:15"},{"expression":{"arguments":[{"id":2361,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2354,"src":"3733:6:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a6174696f6e206661696c6564","id":2362,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3741:23:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_0ced64e7a7e72856969cefe00640aa7f13f8db705f9748f7d3003a20bc61daa4","typeString":"literal_string \"Initialization failed\""},"value":"Initialization failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0ced64e7a7e72856969cefe00640aa7f13f8db705f9748f7d3003a20bc61daa4","typeString":"literal_string \"Initialization failed\""}],"id":2360,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3725:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2363,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3725:40:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2364,"nodeType":"ExpressionStatement","src":"3725:40:15"},{"expression":{"id":2367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2365,"name":"trigger","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2239,"src":"3778:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2366,"name":"_trigger","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2334,"src":"3788:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3778:18:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2368,"nodeType":"ExpressionStatement","src":"3778:18:15"},{"expression":{"id":2373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2369,"name":"baseAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2243,"src":"3809:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2370,"name":"registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2248,"src":"3821:8:15","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$5472","typeString":"contract IBaluniV1Registry"}},"id":2371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3830:7:15","memberName":"getUSDC","nodeType":"MemberAccess","referencedDeclaration":5436,"src":"3821:16:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":2372,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3821:18:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3809:30:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2374,"nodeType":"ExpressionStatement","src":"3809:30:15"},{"expression":{"id":2382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2375,"name":"scalingFactor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2245,"src":"3852:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_1000000000000_by_1","typeString":"int_const 1000000000000"},"id":2381,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2376,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3868:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"id":2379,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3138","id":2377,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3875:2:15","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"36","id":2378,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3880:1:15","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"3875:6:15","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"}}],"id":2380,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"3874:8:15","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"}},"src":"3868:14:15","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000_by_1","typeString":"int_const 1000000000000"}},"src":"3852:30:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2383,"nodeType":"ExpressionStatement","src":"3852:30:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2385,"name":"baseAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2243,"src":"3903:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2388,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3924:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2387,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3916:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2386,"name":"address","nodeType":"ElementaryTypeName","src":"3916:7:15","typeDescriptions":{}}},"id":2389,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3916:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3903:23:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420626173652061737365742061646472657373","id":2391,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3928:28:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_391a75680d8ec99739af126cde56833526e4b720a416f24f1d7ee98c294a45b1","typeString":"literal_string \"Invalid base asset address\""},"value":"Invalid base asset address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_391a75680d8ec99739af126cde56833526e4b720a416f24f1d7ee98c294a45b1","typeString":"literal_string \"Invalid base asset address\""}],"id":2384,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3895:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2392,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3895:62:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2393,"nodeType":"ExpressionStatement","src":"3895:62:15"},{"assignments":[2395],"declarations":[{"constant":false,"id":2395,"mutability":"mutable","name":"totalWeight","nameLocation":"3978:11:15","nodeType":"VariableDeclaration","scope":2424,"src":"3970:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2394,"name":"uint256","nodeType":"ElementaryTypeName","src":"3970:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2397,"initialValue":{"hexValue":"30","id":2396,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3992:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3970:23:15"},{"body":{"id":2415,"nodeType":"Block","src":"4052:53:15","statements":[{"expression":{"id":2413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2409,"name":"totalWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2395,"src":"4067:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"baseExpression":{"id":2410,"name":"_weights","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2332,"src":"4082:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2412,"indexExpression":{"id":2411,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2399,"src":"4091:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4082:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4067:26:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2414,"nodeType":"ExpressionStatement","src":"4067:26:15"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2402,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2399,"src":"4026:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2403,"name":"_weights","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2332,"src":"4030:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4039:6:15","memberName":"length","nodeType":"MemberAccess","src":"4030:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4026:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2416,"initializationExpression":{"assignments":[2399],"declarations":[{"constant":false,"id":2399,"mutability":"mutable","name":"i","nameLocation":"4019:1:15","nodeType":"VariableDeclaration","scope":2416,"src":"4011:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2398,"name":"uint256","nodeType":"ElementaryTypeName","src":"4011:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2401,"initialValue":{"hexValue":"30","id":2400,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4023:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4011:13:15"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":2407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4047:3:15","subExpression":{"id":2406,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2399,"src":"4047:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2408,"nodeType":"ExpressionStatement","src":"4047:3:15"},"nodeType":"ForStatement","src":"4006:99:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2418,"name":"totalWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2395,"src":"4125:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3130303030","id":2419,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4140:5:15","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"src":"4125:20:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642077656967687473","id":2421,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4147:17:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_5cbb8d647918028d0523fccac550113bbbb71d463bbb8b573c02c32bc5cf2b89","typeString":"literal_string \"Invalid weights\""},"value":"Invalid weights"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5cbb8d647918028d0523fccac550113bbbb71d463bbb8b573c02c32bc5cf2b89","typeString":"literal_string \"Invalid weights\""}],"id":2417,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4117:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2422,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4117:48:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2423,"nodeType":"ExpressionStatement","src":"4117:48:15"}]},"id":2425,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"42616c756e69204c50","id":2339,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3553:11:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_ffab3cad7a41854f5c383caa9a930fe1ab39b32cbc67d790708a7a9f02409818","typeString":"literal_string \"Baluni LP\""},"value":"Baluni LP"},{"hexValue":"42414c554e492d4c50","id":2340,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3566:11:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_e9cdad270784d4cf630085b188c6ca83632e4ebde5d7094eec6989a900521298","typeString":"literal_string \"BALUNI-LP\""},"value":"BALUNI-LP"}],"id":2341,"kind":"baseConstructorSpecifier","modifierName":{"id":2338,"name":"ERC20","nameLocations":["3547:5:15"],"nodeType":"IdentifierPath","referencedDeclaration":1651,"src":"3547:5:15"},"nodeType":"ModifierInvocation","src":"3547:31:15"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2337,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2329,"mutability":"mutable","name":"_assets","nameLocation":"3441:7:15","nodeType":"VariableDeclaration","scope":2425,"src":"3424:24:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2327,"name":"address","nodeType":"ElementaryTypeName","src":"3424:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2328,"nodeType":"ArrayTypeName","src":"3424:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":2332,"mutability":"mutable","name":"_weights","nameLocation":"3476:8:15","nodeType":"VariableDeclaration","scope":2425,"src":"3459:25:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2330,"name":"uint256","nodeType":"ElementaryTypeName","src":"3459:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2331,"nodeType":"ArrayTypeName","src":"3459:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2334,"mutability":"mutable","name":"_trigger","nameLocation":"3503:8:15","nodeType":"VariableDeclaration","scope":2425,"src":"3495:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2333,"name":"uint256","nodeType":"ElementaryTypeName","src":"3495:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2336,"mutability":"mutable","name":"_registry","nameLocation":"3530:9:15","nodeType":"VariableDeclaration","scope":2425,"src":"3522:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2335,"name":"address","nodeType":"ElementaryTypeName","src":"3522:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3413:133:15"},"returnParameters":{"id":2342,"nodeType":"ParameterList","parameters":[],"src":"3579:0:15"},"scope":4596,"src":"3402:771:15","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2442,"nodeType":"Block","src":"4206:145:15","statements":[{"assignments":[2428],"declarations":[{"constant":false,"id":2428,"mutability":"mutable","name":"periphery","nameLocation":"4225:9:15","nodeType":"VariableDeclaration","scope":2442,"src":"4217:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2427,"name":"address","nodeType":"ElementaryTypeName","src":"4217:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2432,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2429,"name":"registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2248,"src":"4237:8:15","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$5472","typeString":"contract IBaluniV1Registry"}},"id":2430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4246:22:15","memberName":"getBaluniPoolPeriphery","nodeType":"MemberAccess","referencedDeclaration":5406,"src":"4237:31:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":2431,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4237:33:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4217:53:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2434,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4289:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4293:6:15","memberName":"sender","nodeType":"MemberAccess","src":"4289:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2436,"name":"periphery","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2428,"src":"4303:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4289:23:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c7920506572697068657279","id":2438,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4314:16:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_e84ca658204d8225a6124393bf429fae79ddb71fa88578d833d3a2b9b5da52d2","typeString":"literal_string \"Only Periphery\""},"value":"Only Periphery"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e84ca658204d8225a6124393bf429fae79ddb71fa88578d833d3a2b9b5da52d2","typeString":"literal_string \"Only Periphery\""}],"id":2433,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4281:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2439,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4281:50:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2440,"nodeType":"ExpressionStatement","src":"4281:50:15"},{"id":2441,"nodeType":"PlaceholderStatement","src":"4342:1:15"}]},"id":2443,"name":"onlyPeriphery","nameLocation":"4190:13:15","nodeType":"ModifierDefinition","parameters":{"id":2426,"nodeType":"ParameterList","parameters":[],"src":"4203:2:15"},"src":"4181:170:15","virtual":false,"visibility":"internal"},{"body":{"id":2570,"nodeType":"Block","src":"4675:938:15","statements":[{"assignments":[2456],"declarations":[{"constant":false,"id":2456,"mutability":"mutable","name":"rebalancer","nameLocation":"4694:10:15","nodeType":"VariableDeclaration","scope":2570,"src":"4686:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2455,"name":"address","nodeType":"ElementaryTypeName","src":"4686:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2460,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2457,"name":"registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2248,"src":"4707:8:15","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$5472","typeString":"contract IBaluniV1Registry"}},"id":2458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4716:19:15","memberName":"getBaluniRebalancer","nodeType":"MemberAccess","referencedDeclaration":5416,"src":"4707:28:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":2459,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4707:30:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4686:51:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2462,"name":"registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2248,"src":"4758:8:15","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$5472","typeString":"contract IBaluniV1Registry"}},"id":2463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4767:19:15","memberName":"getBaluniRebalancer","nodeType":"MemberAccess","referencedDeclaration":5416,"src":"4758:28:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":2464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4758:30:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2467,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4800:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2466,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4792:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2465,"name":"address","nodeType":"ElementaryTypeName","src":"4792:7:15","typeDescriptions":{}}},"id":2468,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4792:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4758:44:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420726562616c616e6365722061646472657373","id":2470,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4804:28:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_b3262886d4e83856703b764357b6a852eb26ef34a7982063b49217460e097ddc","typeString":"literal_string \"Invalid rebalancer address\""},"value":"Invalid rebalancer address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b3262886d4e83856703b764357b6a852eb26ef34a7982063b49217460e097ddc","typeString":"literal_string \"Invalid rebalancer address\""}],"id":2461,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4750:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2471,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4750:83:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2472,"nodeType":"ExpressionStatement","src":"4750:83:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2474,"name":"_assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2447,"src":"4852:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4860:6:15","memberName":"length","nodeType":"MemberAccess","src":"4852:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2476,"name":"_weights","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2450,"src":"4870:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4879:6:15","memberName":"length","nodeType":"MemberAccess","src":"4870:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4852:33:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"41737365747320616e642077656967687473206c656e677468206d69736d61746368","id":2479,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4887:36:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_ebb567ad160cf2ebbf5e53ab40a3ffae6f6492169d006ee3f8bad6794e36f372","typeString":"literal_string \"Assets and weights length mismatch\""},"value":"Assets and weights length mismatch"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ebb567ad160cf2ebbf5e53ab40a3ffae6f6492169d006ee3f8bad6794e36f372","typeString":"literal_string \"Assets and weights length mismatch\""}],"id":2473,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4844:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2480,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4844:80:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2481,"nodeType":"ExpressionStatement","src":"4844:80:15"},{"body":{"id":2566,"nodeType":"Block","src":"4982:602:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":2494,"name":"_assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2447,"src":"5005:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2496,"indexExpression":{"id":2495,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2483,"src":"5013:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5005:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2499,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5027:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2498,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5019:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2497,"name":"address","nodeType":"ElementaryTypeName","src":"5019:7:15","typeDescriptions":{}}},"id":2500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5019:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5005:24:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642061737365742061646472657373","id":2502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5031:23:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_795f8eca8a22be2e70f1d9bdebdbf85a1dc43e172c3964e13eac586b45ff2b92","typeString":"literal_string \"Invalid asset address\""},"value":"Invalid asset address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_795f8eca8a22be2e70f1d9bdebdbf85a1dc43e172c3964e13eac586b45ff2b92","typeString":"literal_string \"Invalid asset address\""}],"id":2493,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4997:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2503,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4997:58:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2504,"nodeType":"ExpressionStatement","src":"4997:58:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":2506,"name":"_weights","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2450,"src":"5078:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2508,"indexExpression":{"id":2507,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2483,"src":"5087:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5078:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2509,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5092:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5078:15:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420776569676874","id":2511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5095:16:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_ff1ef73e4333da4da038aba1312a1df349427c8859c23d4b6d4a7df22bfc1a19","typeString":"literal_string \"Invalid weight\""},"value":"Invalid weight"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ff1ef73e4333da4da038aba1312a1df349427c8859c23d4b6d4a7df22bfc1a19","typeString":"literal_string \"Invalid weight\""}],"id":2505,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5070:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2512,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5070:42:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2513,"nodeType":"ExpressionStatement","src":"5070:42:15"},{"expression":{"arguments":[{"arguments":[{"baseExpression":{"id":2518,"name":"_assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2447,"src":"5203:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2520,"indexExpression":{"id":2519,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2483,"src":"5211:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5203:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":2521,"name":"_weights","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2450,"src":"5244:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2523,"indexExpression":{"id":2522,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2483,"src":"5253:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5244:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"30","id":2524,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5288:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2517,"name":"AssetInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2288,"src":"5163:9:15","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_AssetInfo_$2288_storage_ptr_$","typeString":"type(struct BaluniV1Pool.AssetInfo storage pointer)"}},"id":2525,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["5196:5:15","5236:6:15","5278:8:15"],"names":["asset","weight","slippage"],"nodeType":"FunctionCall","src":"5163:180:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AssetInfo_$2288_memory_ptr","typeString":"struct BaluniV1Pool.AssetInfo memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_AssetInfo_$2288_memory_ptr","typeString":"struct BaluniV1Pool.AssetInfo memory"}],"expression":{"id":2514,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2234,"src":"5129:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2288_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":2516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5140:4:15","memberName":"push","nodeType":"MemberAccess","src":"5129:15:15","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_AssetInfo_$2288_storage_$dyn_storage_ptr_$_t_struct$_AssetInfo_$2288_storage_$returns$__$attached_to$_t_array$_t_struct$_AssetInfo_$2288_storage_$dyn_storage_ptr_$","typeString":"function (struct BaluniV1Pool.AssetInfo storage ref[] storage pointer,struct BaluniV1Pool.AssetInfo storage ref)"}},"id":2526,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5129:229:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2527,"nodeType":"ExpressionStatement","src":"5129:229:15"},{"assignments":[2530],"declarations":[{"constant":false,"id":2530,"mutability":"mutable","name":"asset","nameLocation":"5382:5:15","nodeType":"VariableDeclaration","scope":2566,"src":"5375:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"},"typeName":{"id":2529,"nodeType":"UserDefinedTypeName","pathNode":{"id":2528,"name":"IERC20","nameLocations":["5375:6:15"],"nodeType":"IdentifierPath","referencedDeclaration":1729,"src":"5375:6:15"},"referencedDeclaration":1729,"src":"5375:6:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"}},"visibility":"internal"}],"id":2536,"initialValue":{"arguments":[{"baseExpression":{"id":2532,"name":"_assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2447,"src":"5397:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2534,"indexExpression":{"id":2533,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2483,"src":"5405:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5397:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2531,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1729,"src":"5390:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1729_$","typeString":"type(contract IERC20)"}},"id":2535,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5390:18:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"}},"nodeType":"VariableDeclarationStatement","src":"5375:33:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2541,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5451:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Pool_$4596","typeString":"contract BaluniV1Pool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniV1Pool_$4596","typeString":"contract BaluniV1Pool"}],"id":2540,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5443:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2539,"name":"address","nodeType":"ElementaryTypeName","src":"5443:7:15","typeDescriptions":{}}},"id":2542,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5443:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":2545,"name":"rebalancer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2456,"src":"5466:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2544,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5458:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2543,"name":"address","nodeType":"ElementaryTypeName","src":"5458:7:15","typeDescriptions":{}}},"id":2546,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5458:19:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2537,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2530,"src":"5427:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"}},"id":2538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5433:9:15","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":1706,"src":"5427:15:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":2547,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5427:51:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2548,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5482:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5427:56:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2565,"nodeType":"IfStatement","src":"5423:150:15","trueBody":{"id":2564,"nodeType":"Block","src":"5485:88:15","statements":[{"expression":{"arguments":[{"arguments":[{"id":2555,"name":"rebalancer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2456,"src":"5526:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2554,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5518:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2553,"name":"address","nodeType":"ElementaryTypeName","src":"5518:7:15","typeDescriptions":{}}},"id":2556,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5518:19:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"arguments":[{"id":2559,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5544:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2558,"name":"uint256","nodeType":"ElementaryTypeName","src":"5544:7:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":2557,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5539:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2560,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5539:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":2561,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5553:3:15","memberName":"max","nodeType":"MemberAccess","src":"5539:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2550,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2530,"src":"5504:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"}},"id":2552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5510:7:15","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":1716,"src":"5504:13:15","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":2562,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5504:53:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2563,"nodeType":"ExpressionStatement","src":"5504:53:15"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2486,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2483,"src":"4957:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2487,"name":"_assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2447,"src":"4961:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4969:6:15","memberName":"length","nodeType":"MemberAccess","src":"4961:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4957:18:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2567,"initializationExpression":{"assignments":[2483],"declarations":[{"constant":false,"id":2483,"mutability":"mutable","name":"i","nameLocation":"4950:1:15","nodeType":"VariableDeclaration","scope":2567,"src":"4942:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2482,"name":"uint256","nodeType":"ElementaryTypeName","src":"4942:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2485,"initialValue":{"hexValue":"30","id":2484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4954:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4942:13:15"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":2491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4977:3:15","subExpression":{"id":2490,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2483,"src":"4977:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2492,"nodeType":"ExpressionStatement","src":"4977:3:15"},"nodeType":"ForStatement","src":"4937:647:15"},{"expression":{"hexValue":"74727565","id":2568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5601:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":2454,"id":2569,"nodeType":"Return","src":"5594:11:15"}]},"documentation":{"id":2444,"nodeType":"StructuredDocumentation","src":"4359:207:15","text":" @dev Initializes the assets and their weights for the pool.\n @param _assets The array of asset addresses.\n @param _weights The array of weights corresponding to each asset."},"id":2571,"implemented":true,"kind":"function","modifiers":[],"name":"initializeAssets","nameLocation":"4581:16:15","nodeType":"FunctionDefinition","parameters":{"id":2451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2447,"mutability":"mutable","name":"_assets","nameLocation":"4615:7:15","nodeType":"VariableDeclaration","scope":2571,"src":"4598:24:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2445,"name":"address","nodeType":"ElementaryTypeName","src":"4598:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2446,"nodeType":"ArrayTypeName","src":"4598:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":2450,"mutability":"mutable","name":"_weights","nameLocation":"4641:8:15","nodeType":"VariableDeclaration","scope":2571,"src":"4624:25:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2448,"name":"uint256","nodeType":"ElementaryTypeName","src":"4624:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2449,"nodeType":"ArrayTypeName","src":"4624:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"4597:53:15"},"returnParameters":{"id":2454,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2453,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2571,"src":"4669:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2452,"name":"bool","nodeType":"ElementaryTypeName","src":"4669:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4668:6:15"},"scope":4596,"src":"4572:1041:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2675,"nodeType":"Block","src":"6106:899:15","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2583,"name":"isRebalanceNeeded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4595,"src":"6125:17:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":2584,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6125:19:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"526562616c616e6365206e6f74206e6565646564","id":2585,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6146:22:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_e4fcae9c0286e861087281117e0a3185ced905823104b290e1fe3ba826d8d280","typeString":"literal_string \"Rebalance not needed\""},"value":"Rebalance not needed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e4fcae9c0286e861087281117e0a3185ced905823104b290e1fe3ba826d8d280","typeString":"literal_string \"Rebalance not needed\""}],"id":2582,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6117:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2586,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6117:52:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2587,"nodeType":"ExpressionStatement","src":"6117:52:15"},{"assignments":[2589,2592],"declarations":[{"constant":false,"id":2589,"mutability":"mutable","name":"totalValuation","nameLocation":"6189:14:15","nodeType":"VariableDeclaration","scope":2675,"src":"6181:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2588,"name":"uint256","nodeType":"ElementaryTypeName","src":"6181:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2592,"mutability":"mutable","name":"valuations","nameLocation":"6222:10:15","nodeType":"VariableDeclaration","scope":2675,"src":"6205:27:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2590,"name":"uint256","nodeType":"ElementaryTypeName","src":"6205:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2591,"nodeType":"ArrayTypeName","src":"6205:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":2595,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2593,"name":"_computeTotalValuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4149,"src":"6236:22:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function () view returns (uint256,uint256[] memory)"}},"id":2594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6236:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256,uint256[] memory)"}},"nodeType":"VariableDeclarationStatement","src":"6180:80:15"},{"assignments":[2600],"declarations":[{"constant":false,"id":2600,"mutability":"mutable","name":"amountsToAdd","nameLocation":"6298:12:15","nodeType":"VariableDeclaration","scope":2675,"src":"6281:29:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2598,"name":"uint256","nodeType":"ElementaryTypeName","src":"6281:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2599,"nodeType":"ArrayTypeName","src":"6281:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":2605,"initialValue":{"arguments":[{"id":2602,"name":"totalValuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2589,"src":"6336:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2603,"name":"valuations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2592,"src":"6352:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":2601,"name":"_calculateAmountsToAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4476,"src":"6313:22:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256,uint256[] memory) view returns (uint256[] memory)"}},"id":2604,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6313:50:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"6281:82:15"},{"assignments":[2607],"declarations":[{"constant":false,"id":2607,"mutability":"mutable","name":"totalAddedLiquidity","nameLocation":"6390:19:15","nodeType":"VariableDeclaration","scope":2675,"src":"6382:27:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2606,"name":"uint256","nodeType":"ElementaryTypeName","src":"6382:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2611,"initialValue":{"arguments":[{"id":2609,"name":"amountsToAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"6442:12:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":2608,"name":"_calculateTotalAddedLiquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4410,"src":"6412:29:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256[] memory) view returns (uint256)"}},"id":2610,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6412:43:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6382:73:15"},{"expression":{"id":2614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2612,"name":"totalAddedLiquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2607,"src":"6468:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"id":2613,"name":"scalingFactor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2245,"src":"6491:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6468:36:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2615,"nodeType":"ExpressionStatement","src":"6468:36:15"},{"assignments":[2620],"declarations":[{"constant":false,"id":2620,"mutability":"mutable","name":"amounts","nameLocation":"6534:7:15","nodeType":"VariableDeclaration","scope":2675,"src":"6517:24:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2618,"name":"uint256","nodeType":"ElementaryTypeName","src":"6517:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2619,"nodeType":"ArrayTypeName","src":"6517:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":2627,"initialValue":{"arguments":[{"expression":{"id":2624,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2234,"src":"6558:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2288_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":2625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6569:6:15","memberName":"length","nodeType":"MemberAccess","src":"6558:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2623,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"6544:13:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":2621,"name":"uint256","nodeType":"ElementaryTypeName","src":"6548:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2622,"nodeType":"ArrayTypeName","src":"6548:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":2626,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6544:32:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"6517:59:15"},{"body":{"id":2657,"nodeType":"Block","src":"6639:138:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":2639,"name":"amountsToAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"6658:12:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2641,"indexExpression":{"id":2640,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2629,"src":"6671:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6658:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6676:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6658:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2656,"nodeType":"IfStatement","src":"6654:112:15","trueBody":{"id":2655,"nodeType":"Block","src":"6679:87:15","statements":[{"expression":{"id":2653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2644,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2620,"src":"6698:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2646,"indexExpression":{"id":2645,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2629,"src":"6706:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6698:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2648,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2629,"src":"6731:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":2649,"name":"amountsToAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"6734:12:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2651,"indexExpression":{"id":2650,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2629,"src":"6747:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6734:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2647,"name":"_calculateLiquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4515,"src":"6711:19:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) view returns (uint256)"}},"id":2652,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6711:39:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6698:52:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2654,"nodeType":"ExpressionStatement","src":"6698:52:15"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2632,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2629,"src":"6609:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2633,"name":"amountsToAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"6613:12:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6626:6:15","memberName":"length","nodeType":"MemberAccess","src":"6613:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6609:23:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2658,"initializationExpression":{"assignments":[2629],"declarations":[{"constant":false,"id":2629,"mutability":"mutable","name":"i","nameLocation":"6602:1:15","nodeType":"VariableDeclaration","scope":2658,"src":"6594:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2628,"name":"uint256","nodeType":"ElementaryTypeName","src":"6594:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2631,"initialValue":{"hexValue":"30","id":2630,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6606:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6594:13:15"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":2637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6634:3:15","subExpression":{"id":2636,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2629,"src":"6634:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2638,"nodeType":"ExpressionStatement","src":"6634:3:15"},"nodeType":"ForStatement","src":"6589:188:15"},{"expression":{"arguments":[{"id":2660,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2574,"src":"6795:8:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2661,"name":"totalAddedLiquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2607,"src":"6805:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2659,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1491,"src":"6789:5:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2662,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6789:36:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2663,"nodeType":"ExpressionStatement","src":"6789:36:15"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2664,"name":"updateSlippage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3244,"src":"6893:14:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2665,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6893:16:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2666,"nodeType":"ExpressionStatement","src":"6893:16:15"},{"eventCall":{"arguments":[{"expression":{"id":2668,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6945:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6949:6:15","memberName":"sender","nodeType":"MemberAccess","src":"6945:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2670,"name":"amountsToAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"6957:12:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":2667,"name":"WeightsRebalanced","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2302,"src":"6927:17:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (address,uint256[] memory)"}},"id":2671,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6927:43:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2672,"nodeType":"EmitStatement","src":"6922:48:15"},{"expression":{"id":2673,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2620,"src":"6990:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":2581,"id":2674,"nodeType":"Return","src":"6983:14:15"}]},"documentation":{"id":2572,"nodeType":"StructuredDocumentation","src":"5621:385:15","text":" @dev Rebalances the weights of the pool by calculating the amounts to add for each token,\n transferring the calculated amounts from the user to the pool, minting the total added liquidity,\n updating the reserves, and emitting an event to indicate the rebalancing of weights.\n @param receiver The address to receive the minted liquidity tokens."},"functionSelector":"0723c999","id":2676,"implemented":true,"kind":"function","modifiers":[{"id":2577,"kind":"modifierInvocation","modifierName":{"id":2576,"name":"onlyPeriphery","nameLocations":["6065:13:15"],"nodeType":"IdentifierPath","referencedDeclaration":2443,"src":"6065:13:15"},"nodeType":"ModifierInvocation","src":"6065:13:15"}],"name":"rebalanceWeights","nameLocation":"6021:16:15","nodeType":"FunctionDefinition","parameters":{"id":2575,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2574,"mutability":"mutable","name":"receiver","nameLocation":"6046:8:15","nodeType":"VariableDeclaration","scope":2676,"src":"6038:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2573,"name":"address","nodeType":"ElementaryTypeName","src":"6038:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6037:18:15"},"returnParameters":{"id":2581,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2580,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2676,"src":"6088:16:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2578,"name":"uint256","nodeType":"ElementaryTypeName","src":"6088:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2579,"nodeType":"ArrayTypeName","src":"6088:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"6087:18:15"},"scope":4596,"src":"6012:993:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2767,"nodeType":"Block","src":"7981:790:15","statements":[{"assignments":[2693],"declarations":[{"constant":false,"id":2693,"mutability":"mutable","name":"_BPS_FEE","nameLocation":"8000:8:15","nodeType":"VariableDeclaration","scope":2767,"src":"7992:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2692,"name":"uint256","nodeType":"ElementaryTypeName","src":"7992:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2697,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2694,"name":"registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2248,"src":"8011:8:15","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$5472","typeString":"contract IBaluniV1Registry"}},"id":2695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8020:10:15","memberName":"getBPS_FEE","nodeType":"MemberAccess","referencedDeclaration":5446,"src":"8011:19:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint256_$","typeString":"function () view external returns (uint256)"}},"id":2696,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8011:21:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7992:40:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2699,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2679,"src":"8051:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2700,"name":"toToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2681,"src":"8064:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8051:20:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43616e6e6f742073776170207468652073616d6520746f6b656e","id":2702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8073:28:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_6f3b6914a8f4e42f0dc4d6fcf60d1470463793693c123b4b0782b9cd43668c23","typeString":"literal_string \"Cannot swap the same token\""},"value":"Cannot swap the same token"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6f3b6914a8f4e42f0dc4d6fcf60d1470463793693c123b4b0782b9cd43668c23","typeString":"literal_string \"Cannot swap the same token\""}],"id":2698,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8043:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2703,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8043:59:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2704,"nodeType":"ExpressionStatement","src":"8043:59:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2706,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2683,"src":"8121:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8130:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8121:10:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416d6f756e74206d7573742062652067726561746572207468616e207a65726f","id":2709,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8133:34:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887","typeString":"literal_string \"Amount must be greater than zero\""},"value":"Amount must be greater than zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887","typeString":"literal_string \"Amount must be greater than zero\""}],"id":2705,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8113:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2710,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8113:55:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2711,"nodeType":"ExpressionStatement","src":"8113:55:15"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2712,"name":"updateSlippage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3244,"src":"8179:14:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2713,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8179:16:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2714,"nodeType":"ExpressionStatement","src":"8179:16:15"},{"assignments":[2716],"declarations":[{"constant":false,"id":2716,"mutability":"mutable","name":"receivedAmount","nameLocation":"8214:14:15","nodeType":"VariableDeclaration","scope":2767,"src":"8206:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2715,"name":"uint256","nodeType":"ElementaryTypeName","src":"8206:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2722,"initialValue":{"arguments":[{"id":2718,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2679,"src":"8256:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2719,"name":"toToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2681,"src":"8267:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2720,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2683,"src":"8276:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2717,"name":"getAmountOutWithSlippage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2903,"src":"8231:24:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,address,uint256) view returns (uint256)"}},"id":2721,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8231:52:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8206:77:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2725,"name":"toToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2681,"src":"8318:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2724,"name":"getAssetReserve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3968,"src":"8302:15:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":2726,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8302:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2727,"name":"receivedAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2716,"src":"8330:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8302:42:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e74204c6971756964697479","id":2729,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8346:24:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_85d32796faf4bbe37cfdb7e983d4048fee52ebcfc8d2f22a939ce47e85d98ae8","typeString":"literal_string \"Insufficient Liquidity\""},"value":"Insufficient Liquidity"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_85d32796faf4bbe37cfdb7e983d4048fee52ebcfc8d2f22a939ce47e85d98ae8","typeString":"literal_string \"Insufficient Liquidity\""}],"id":2723,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8294:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2730,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8294:77:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2731,"nodeType":"ExpressionStatement","src":"8294:77:15"},{"assignments":[2733],"declarations":[{"constant":false,"id":2733,"mutability":"mutable","name":"fee","nameLocation":"8392:3:15","nodeType":"VariableDeclaration","scope":2767,"src":"8384:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2732,"name":"uint256","nodeType":"ElementaryTypeName","src":"8384:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2740,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2734,"name":"receivedAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2716,"src":"8399:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2735,"name":"_BPS_FEE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2693,"src":"8416:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8399:25:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2737,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8398:27:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3130303030","id":2738,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8428:5:15","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"src":"8398:35:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8384:49:15"},{"expression":{"id":2745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2741,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2690,"src":"8444:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2742,"name":"receivedAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2716,"src":"8456:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2743,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2733,"src":"8473:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8456:20:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8444:32:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2746,"nodeType":"ExpressionStatement","src":"8444:32:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2748,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2690,"src":"8497:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2749,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8509:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8497:13:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416d6f756e7420746f2073656e64206d7573742062652067726561746572207468616e2030","id":2751,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8512:39:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_293eab1376cea4527a492c75c5b4d240032b8920c86961428e65758e4fd3daec","typeString":"literal_string \"Amount to send must be greater than 0\""},"value":"Amount to send must be greater than 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_293eab1376cea4527a492c75c5b4d240032b8920c86961428e65758e4fd3daec","typeString":"literal_string \"Amount to send must be greater than 0\""}],"id":2747,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8489:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2752,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8489:63:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2753,"nodeType":"ExpressionStatement","src":"8489:63:15"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2754,"name":"updateSlippage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3244,"src":"8647:14:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2755,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8647:16:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2756,"nodeType":"ExpressionStatement","src":"8647:16:15"},{"eventCall":{"arguments":[{"id":2758,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2685,"src":"8686:8:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2759,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2679,"src":"8696:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2760,"name":"toToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2681,"src":"8707:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2761,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2683,"src":"8716:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2762,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2690,"src":"8724:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2757,"name":"Swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2326,"src":"8681:4:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,address,uint256,uint256)"}},"id":2763,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8681:53:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2764,"nodeType":"EmitStatement","src":"8676:58:15"},{"expression":{"id":2765,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2690,"src":"8754:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2691,"id":2766,"nodeType":"Return","src":"8747:16:15"}]},"documentation":{"id":2677,"nodeType":"StructuredDocumentation","src":"7013:785:15","text":" @dev Swaps `amount` of `fromToken` to `toToken` and transfers the received amount to `receiver`.\n Requirements:\n - `fromToken` and `toToken` must be different tokens.\n - `amount` must be greater than zero.\n - Sufficient liquidity of `toToken` must be available in the contract.\n Emits a `Swap` event with the details of the swap.\n Updates the reserves after the swap.\n @param fromToken The address of the token to swap from.\n @param toToken The address of the token to swap to.\n @param amount The amount of `fromToken` to swap.\n @param receiver The address to receive the swapped tokens.\n @return amountOut The amount of `toToken` received after the swap."},"functionSelector":"6e81221c","id":2768,"implemented":true,"kind":"function","modifiers":[{"id":2688,"kind":"modifierInvocation","modifierName":{"id":2687,"name":"nonReentrant","nameLocations":["7940:12:15"],"nodeType":"IdentifierPath","referencedDeclaration":2071,"src":"7940:12:15"},"nodeType":"ModifierInvocation","src":"7940:12:15"}],"name":"swap","nameLocation":"7813:4:15","nodeType":"FunctionDefinition","parameters":{"id":2686,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2679,"mutability":"mutable","name":"fromToken","nameLocation":"7836:9:15","nodeType":"VariableDeclaration","scope":2768,"src":"7828:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2678,"name":"address","nodeType":"ElementaryTypeName","src":"7828:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2681,"mutability":"mutable","name":"toToken","nameLocation":"7864:7:15","nodeType":"VariableDeclaration","scope":2768,"src":"7856:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2680,"name":"address","nodeType":"ElementaryTypeName","src":"7856:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2683,"mutability":"mutable","name":"amount","nameLocation":"7890:6:15","nodeType":"VariableDeclaration","scope":2768,"src":"7882:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2682,"name":"uint256","nodeType":"ElementaryTypeName","src":"7882:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2685,"mutability":"mutable","name":"receiver","nameLocation":"7915:8:15","nodeType":"VariableDeclaration","scope":2768,"src":"7907:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2684,"name":"address","nodeType":"ElementaryTypeName","src":"7907:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7817:113:15"},"returnParameters":{"id":2691,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2690,"mutability":"mutable","name":"amountOut","nameLocation":"7970:9:15","nodeType":"VariableDeclaration","scope":2768,"src":"7962:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2689,"name":"uint256","nodeType":"ElementaryTypeName","src":"7962:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7961:19:15"},"scope":4596,"src":"7804:967:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2902,"nodeType":"Block","src":"9311:1520:15","statements":[{"assignments":[2781],"declarations":[{"constant":false,"id":2781,"mutability":"mutable","name":"amountOut","nameLocation":"9330:9:15","nodeType":"VariableDeclaration","scope":2902,"src":"9322:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2780,"name":"uint256","nodeType":"ElementaryTypeName","src":"9322:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2787,"initialValue":{"arguments":[{"id":2783,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2771,"src":"9355:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2784,"name":"toToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2773,"src":"9366:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2785,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2775,"src":"9375:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2782,"name":"getAmountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3672,"src":"9342:12:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,address,uint256) view returns (uint256)"}},"id":2786,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9342:40:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9322:60:15"},{"assignments":[2789],"declarations":[{"constant":false,"id":2789,"mutability":"mutable","name":"to","nameLocation":"9517:2:15","nodeType":"VariableDeclaration","scope":2902,"src":"9509:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2788,"name":"address","nodeType":"ElementaryTypeName","src":"9509:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2791,"initialValue":{"id":2790,"name":"toToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2773,"src":"9522:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"9509:20:15"},{"assignments":[2793],"declarations":[{"constant":false,"id":2793,"mutability":"mutable","name":"from","nameLocation":"9548:4:15","nodeType":"VariableDeclaration","scope":2902,"src":"9540:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2792,"name":"address","nodeType":"ElementaryTypeName","src":"9540:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2795,"initialValue":{"id":2794,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2771,"src":"9555:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"9540:24:15"},{"assignments":[2797],"declarations":[{"constant":false,"id":2797,"mutability":"mutable","name":"totalValuation","nameLocation":"9585:14:15","nodeType":"VariableDeclaration","scope":2902,"src":"9577:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2796,"name":"uint256","nodeType":"ElementaryTypeName","src":"9577:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2798,"nodeType":"VariableDeclarationStatement","src":"9577:22:15"},{"assignments":[2803],"declarations":[{"constant":false,"id":2803,"mutability":"mutable","name":"valuations","nameLocation":"9627:10:15","nodeType":"VariableDeclaration","scope":2902,"src":"9610:27:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2801,"name":"uint256","nodeType":"ElementaryTypeName","src":"9610:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2802,"nodeType":"ArrayTypeName","src":"9610:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":2804,"nodeType":"VariableDeclarationStatement","src":"9610:27:15"},{"expression":{"id":2810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":2805,"name":"totalValuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2797,"src":"9649:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2806,"name":"valuations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2803,"src":"9665:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"id":2807,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"9648:28:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256,uint256[] memory)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"id":2808,"name":"_computeTotalValuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4149,"src":"9679:22:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function () view returns (uint256,uint256[] memory)"}},"id":2809,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9679:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256,uint256[] memory)"}},"src":"9648:55:15","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2811,"nodeType":"ExpressionStatement","src":"9648:55:15"},{"assignments":[2813],"declarations":[{"constant":false,"id":2813,"mutability":"mutable","name":"toTokenWeightVaulation","nameLocation":"9722:22:15","nodeType":"VariableDeclaration","scope":2902,"src":"9714:30:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2812,"name":"uint256","nodeType":"ElementaryTypeName","src":"9714:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2822,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2815,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2789,"src":"9763:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2814,"name":"getTokenWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2939,"src":"9748:14:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":2816,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9748:18:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2817,"name":"totalValuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2797,"src":"9769:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9748:35:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2819,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9747:37:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3130303030","id":2820,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9787:5:15","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"src":"9747:45:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9714:78:15"},{"assignments":[2824],"declarations":[{"constant":false,"id":2824,"mutability":"mutable","name":"toTokenWeightActualVaulation","nameLocation":"9811:28:15","nodeType":"VariableDeclaration","scope":2902,"src":"9803:36:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2823,"name":"uint256","nodeType":"ElementaryTypeName","src":"9803:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2833,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2826,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2789,"src":"9858:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2825,"name":"getTokenWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2939,"src":"9843:14:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":2827,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9843:18:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2828,"name":"totalValuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2797,"src":"9864:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9843:35:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2830,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9842:37:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3130303030","id":2831,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9882:5:15","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"src":"9842:45:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9803:84:15"},{"assignments":[2835],"declarations":[{"constant":false,"id":2835,"mutability":"mutable","name":"a","nameLocation":"9905:1:15","nodeType":"VariableDeclaration","scope":2902,"src":"9900:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2834,"name":"uint","nodeType":"ElementaryTypeName","src":"9900:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2837,"initialValue":{"id":2836,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2775,"src":"9909:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9900:15:15"},{"assignments":[2839],"declarations":[{"constant":false,"id":2839,"mutability":"mutable","name":"slippageTo","nameLocation":"9934:10:15","nodeType":"VariableDeclaration","scope":2902,"src":"9926:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2838,"name":"uint256","nodeType":"ElementaryTypeName","src":"9926:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2850,"initialValue":{"arguments":[{"id":2841,"name":"_slippageParamK","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2263,"src":"9971:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2842,"name":"_slippageParamN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2266,"src":"10001:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2843,"name":"_c1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2269,"src":"10031:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2844,"name":"_xThreshold","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2272,"src":"10049:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2845,"name":"toTokenWeightVaulation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2813,"src":"10075:22:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2846,"name":"toTokenWeightActualVaulation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2824,"src":"10112:28:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2847,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2835,"src":"10155:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":2848,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10171:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2840,"name":"_slippage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3048,"src":"9947:9:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_bool_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256,uint256,uint256,uint256,uint256,bool) pure returns (uint256)"}},"id":2849,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9947:240:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9926:261:15"},{"assignments":[2852],"declarations":[{"constant":false,"id":2852,"mutability":"mutable","name":"fromTokenWeightVaulation","nameLocation":"10206:24:15","nodeType":"VariableDeclaration","scope":2902,"src":"10198:32:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2851,"name":"uint256","nodeType":"ElementaryTypeName","src":"10198:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2861,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2854,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2793,"src":"10249:4:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2853,"name":"getTokenWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2939,"src":"10234:14:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":2855,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10234:20:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2856,"name":"totalValuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2797,"src":"10257:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10234:37:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2858,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10233:39:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3130303030","id":2859,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10275:5:15","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"src":"10233:47:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10198:82:15"},{"assignments":[2863],"declarations":[{"constant":false,"id":2863,"mutability":"mutable","name":"fromTokenWeightActualVaulation","nameLocation":"10299:30:15","nodeType":"VariableDeclaration","scope":2902,"src":"10291:38:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2862,"name":"uint256","nodeType":"ElementaryTypeName","src":"10291:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2872,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2865,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2793,"src":"10348:4:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2864,"name":"getTokenWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2939,"src":"10333:14:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":2866,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10333:20:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2867,"name":"totalValuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2797,"src":"10356:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10333:37:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2869,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10332:39:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3130303030","id":2870,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10374:5:15","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"src":"10332:47:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10291:88:15"},{"assignments":[2874],"declarations":[{"constant":false,"id":2874,"mutability":"mutable","name":"slippageFrom","nameLocation":"10400:12:15","nodeType":"VariableDeclaration","scope":2902,"src":"10392:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2873,"name":"uint256","nodeType":"ElementaryTypeName","src":"10392:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2885,"initialValue":{"arguments":[{"id":2876,"name":"_slippageParamK","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2263,"src":"10439:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2877,"name":"_slippageParamN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2266,"src":"10469:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2878,"name":"_c1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2269,"src":"10499:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2879,"name":"_xThreshold","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2272,"src":"10517:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2880,"name":"fromTokenWeightVaulation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2852,"src":"10543:24:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2881,"name":"fromTokenWeightActualVaulation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2863,"src":"10582:30:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2882,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2835,"src":"10627:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":2883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10643:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2875,"name":"_slippage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3048,"src":"10415:9:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_bool_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256,uint256,uint256,uint256,uint256,bool) pure returns (uint256)"}},"id":2884,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10415:243:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10392:266:15"},{"assignments":[2887],"declarations":[{"constant":false,"id":2887,"mutability":"mutable","name":"swappingSlippage","nameLocation":"10679:16:15","nodeType":"VariableDeclaration","scope":2902,"src":"10671:24:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2886,"name":"uint256","nodeType":"ElementaryTypeName","src":"10671:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2892,"initialValue":{"arguments":[{"id":2889,"name":"slippageFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2874,"src":"10716:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2890,"name":"slippageTo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2839,"src":"10730:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2888,"name":"_swappingSlippage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3109,"src":"10698:17:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2891,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10698:43:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10671:70:15"},{"assignments":[2894],"declarations":[{"constant":false,"id":2894,"mutability":"mutable","name":"toAmount","nameLocation":"10760:8:15","nodeType":"VariableDeclaration","scope":2902,"src":"10752:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2893,"name":"uint256","nodeType":"ElementaryTypeName","src":"10752:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2899,"initialValue":{"arguments":[{"id":2897,"name":"swappingSlippage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2887,"src":"10778:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2895,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2835,"src":"10771:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10773:4:15","memberName":"wmul","nodeType":"MemberAccess","referencedDeclaration":5507,"src":"10771:6:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2898,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10771:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10752:43:15"},{"expression":{"id":2900,"name":"toAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2894,"src":"10815:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2779,"id":2901,"nodeType":"Return","src":"10808:15:15"}]},"documentation":{"id":2769,"nodeType":"StructuredDocumentation","src":"8777:378:15","text":" @dev Calcola l'importo effettivo di `toToken` ricevuto tenendo conto dello slippage.\n @param fromToken The address of the token being swapped from.\n @param toToken The address of the token being swapped to.\n @param amount The amount of `fromToken` being swapped.\n @return The amount of `toToken` received after applying slippage."},"functionSelector":"a1f241cc","id":2903,"implemented":true,"kind":"function","modifiers":[],"name":"getAmountOutWithSlippage","nameLocation":"9170:24:15","nodeType":"FunctionDefinition","parameters":{"id":2776,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2771,"mutability":"mutable","name":"fromToken","nameLocation":"9213:9:15","nodeType":"VariableDeclaration","scope":2903,"src":"9205:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2770,"name":"address","nodeType":"ElementaryTypeName","src":"9205:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2773,"mutability":"mutable","name":"toToken","nameLocation":"9241:7:15","nodeType":"VariableDeclaration","scope":2903,"src":"9233:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2772,"name":"address","nodeType":"ElementaryTypeName","src":"9233:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2775,"mutability":"mutable","name":"amount","nameLocation":"9267:6:15","nodeType":"VariableDeclaration","scope":2903,"src":"9259:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2774,"name":"uint256","nodeType":"ElementaryTypeName","src":"9259:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9194:86:15"},"returnParameters":{"id":2779,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2778,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2903,"src":"9302:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2777,"name":"uint256","nodeType":"ElementaryTypeName","src":"9302:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9301:9:15"},"scope":4596,"src":"9161:1670:15","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2938,"nodeType":"Block","src":"10908:240:15","statements":[{"body":{"id":2934,"nodeType":"Block","src":"10967:122:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":2921,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2234,"src":"10986:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2288_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":2923,"indexExpression":{"id":2922,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2911,"src":"10997:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10986:13:15","typeDescriptions":{"typeIdentifier":"t_struct$_AssetInfo_$2288_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref"}},"id":2924,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11000:5:15","memberName":"asset","nodeType":"MemberAccess","referencedDeclaration":2283,"src":"10986:19:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2925,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2905,"src":"11009:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10986:28:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2933,"nodeType":"IfStatement","src":"10982:96:15","trueBody":{"id":2932,"nodeType":"Block","src":"11016:62:15","statements":[{"expression":{"expression":{"baseExpression":{"id":2927,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2234,"src":"11042:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2288_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":2929,"indexExpression":{"id":2928,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2911,"src":"11053:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11042:13:15","typeDescriptions":{"typeIdentifier":"t_struct$_AssetInfo_$2288_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref"}},"id":2930,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11056:6:15","memberName":"weight","nodeType":"MemberAccess","referencedDeclaration":2285,"src":"11042:20:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2909,"id":2931,"nodeType":"Return","src":"11035:27:15"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2914,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2911,"src":"10939:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2915,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2234,"src":"10943:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2288_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":2916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10954:6:15","memberName":"length","nodeType":"MemberAccess","src":"10943:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10939:21:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2935,"initializationExpression":{"assignments":[2911],"declarations":[{"constant":false,"id":2911,"mutability":"mutable","name":"i","nameLocation":"10932:1:15","nodeType":"VariableDeclaration","scope":2935,"src":"10924:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2910,"name":"uint256","nodeType":"ElementaryTypeName","src":"10924:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2913,"initialValue":{"hexValue":"30","id":2912,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10936:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10924:13:15"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":2919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10962:3:15","subExpression":{"id":2918,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2911,"src":"10962:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2920,"nodeType":"ExpressionStatement","src":"10962:3:15"},"nodeType":"ForStatement","src":"10919:170:15"},{"expression":{"hexValue":"30","id":2936,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11106:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2909,"id":2937,"nodeType":"Return","src":"11099:8:15"}]},"functionSelector":"250aa683","id":2939,"implemented":true,"kind":"function","modifiers":[],"name":"getTokenWeight","nameLocation":"10848:14:15","nodeType":"FunctionDefinition","parameters":{"id":2906,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2905,"mutability":"mutable","name":"token","nameLocation":"10871:5:15","nodeType":"VariableDeclaration","scope":2939,"src":"10863:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2904,"name":"address","nodeType":"ElementaryTypeName","src":"10863:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10862:15:15"},"returnParameters":{"id":2909,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2908,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2939,"src":"10899:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2907,"name":"uint256","nodeType":"ElementaryTypeName","src":"10899:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10898:9:15"},"scope":4596,"src":"10839:309:15","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3047,"nodeType":"Block","src":"11407:779:15","statements":[{"assignments":[2961],"declarations":[{"constant":false,"id":2961,"mutability":"mutable","name":"covBefore","nameLocation":"11426:9:15","nodeType":"VariableDeclaration","scope":3047,"src":"11418:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2960,"name":"uint256","nodeType":"ElementaryTypeName","src":"11418:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2966,"initialValue":{"arguments":[{"id":2964,"name":"liability","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2951,"src":"11448:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2962,"name":"cash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2949,"src":"11438:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11443:4:15","memberName":"wdiv","nodeType":"MemberAccess","referencedDeclaration":5530,"src":"11438:9:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2965,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11438:20:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11418:40:15"},{"assignments":[2968],"declarations":[{"constant":false,"id":2968,"mutability":"mutable","name":"covAfter","nameLocation":"11477:8:15","nodeType":"VariableDeclaration","scope":3047,"src":"11469:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2967,"name":"uint256","nodeType":"ElementaryTypeName","src":"11469:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2969,"nodeType":"VariableDeclarationStatement","src":"11469:16:15"},{"condition":{"id":2970,"name":"addCash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2955,"src":"11500:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2992,"nodeType":"Block","src":"11588:73:15","statements":[{"expression":{"id":2990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2982,"name":"covAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2968,"src":"11603:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2988,"name":"liability","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2951,"src":"11639:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2983,"name":"cash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2949,"src":"11615:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2984,"name":"cashChange","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2953,"src":"11622:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11615:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2986,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11614:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11634:4:15","memberName":"wdiv","nodeType":"MemberAccess","referencedDeclaration":5530,"src":"11614:24:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2989,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11614:35:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11603:46:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2991,"nodeType":"ExpressionStatement","src":"11603:46:15"}]},"id":2993,"nodeType":"IfStatement","src":"11496:165:15","trueBody":{"id":2981,"nodeType":"Block","src":"11509:73:15","statements":[{"expression":{"id":2979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2971,"name":"covAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2968,"src":"11524:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2977,"name":"liability","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2951,"src":"11560:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2972,"name":"cash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2949,"src":"11536:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2973,"name":"cashChange","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2953,"src":"11543:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11536:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2975,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11535:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11555:4:15","memberName":"wdiv","nodeType":"MemberAccess","referencedDeclaration":5530,"src":"11535:24:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2978,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11535:35:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11524:46:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2980,"nodeType":"ExpressionStatement","src":"11524:46:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2994,"name":"covBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2961,"src":"11727:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2995,"name":"covAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2968,"src":"11740:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11727:21:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3000,"nodeType":"IfStatement","src":"11723:62:15","trueBody":{"id":2999,"nodeType":"Block","src":"11750:35:15","statements":[{"expression":{"hexValue":"30","id":2997,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11772:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2959,"id":2998,"nodeType":"Return","src":"11765:8:15"}]}},{"assignments":[3002],"declarations":[{"constant":false,"id":3002,"mutability":"mutable","name":"slippageBefore","nameLocation":"11805:14:15","nodeType":"VariableDeclaration","scope":3047,"src":"11797:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3001,"name":"uint256","nodeType":"ElementaryTypeName","src":"11797:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3010,"initialValue":{"arguments":[{"id":3004,"name":"k","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2941,"src":"11836:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3005,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2943,"src":"11839:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3006,"name":"c1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2945,"src":"11842:2:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3007,"name":"xThreshold","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2947,"src":"11846:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3008,"name":"covBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2961,"src":"11858:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3003,"name":"_slippageFunc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3093,"src":"11822:13:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256,uint256,uint256) pure returns (uint256)"}},"id":3009,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11822:46:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11797:71:15"},{"assignments":[3012],"declarations":[{"constant":false,"id":3012,"mutability":"mutable","name":"slippageAfter","nameLocation":"11887:13:15","nodeType":"VariableDeclaration","scope":3047,"src":"11879:21:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3011,"name":"uint256","nodeType":"ElementaryTypeName","src":"11879:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3020,"initialValue":{"arguments":[{"id":3014,"name":"k","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2941,"src":"11917:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3015,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2943,"src":"11920:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3016,"name":"c1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2945,"src":"11923:2:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3017,"name":"xThreshold","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2947,"src":"11927:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3018,"name":"covAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2968,"src":"11939:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3013,"name":"_slippageFunc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3093,"src":"11903:13:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256,uint256,uint256) pure returns (uint256)"}},"id":3019,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11903:45:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11879:69:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3021,"name":"covBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2961,"src":"11965:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3022,"name":"covAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2968,"src":"11977:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11965:20:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3045,"nodeType":"Block","src":"12086:93:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3040,"name":"covAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2968,"src":"12146:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3041,"name":"covBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2961,"src":"12157:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12146:20:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3035,"name":"slippageBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3002,"src":"12109:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3036,"name":"slippageAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3012,"src":"12126:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12109:30:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3038,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12108:32:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12141:4:15","memberName":"wdiv","nodeType":"MemberAccess","referencedDeclaration":5530,"src":"12108:37:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3043,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12108:59:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2959,"id":3044,"nodeType":"Return","src":"12101:66:15"}]},"id":3046,"nodeType":"IfStatement","src":"11961:218:15","trueBody":{"id":3034,"nodeType":"Block","src":"11987:93:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3029,"name":"covBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2961,"src":"12047:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3030,"name":"covAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2968,"src":"12059:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12047:20:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3024,"name":"slippageAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3012,"src":"12010:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3025,"name":"slippageBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3002,"src":"12026:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12010:30:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3027,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12009:32:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12042:4:15","memberName":"wdiv","nodeType":"MemberAccess","referencedDeclaration":5530,"src":"12009:37:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3032,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12009:59:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2959,"id":3033,"nodeType":"Return","src":"12002:66:15"}]}}]},"id":3048,"implemented":true,"kind":"function","modifiers":[],"name":"_slippage","nameLocation":"11165:9:15","nodeType":"FunctionDefinition","parameters":{"id":2956,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2941,"mutability":"mutable","name":"k","nameLocation":"11193:1:15","nodeType":"VariableDeclaration","scope":3048,"src":"11185:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2940,"name":"uint256","nodeType":"ElementaryTypeName","src":"11185:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2943,"mutability":"mutable","name":"n","nameLocation":"11213:1:15","nodeType":"VariableDeclaration","scope":3048,"src":"11205:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2942,"name":"uint256","nodeType":"ElementaryTypeName","src":"11205:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2945,"mutability":"mutable","name":"c1","nameLocation":"11233:2:15","nodeType":"VariableDeclaration","scope":3048,"src":"11225:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2944,"name":"uint256","nodeType":"ElementaryTypeName","src":"11225:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2947,"mutability":"mutable","name":"xThreshold","nameLocation":"11254:10:15","nodeType":"VariableDeclaration","scope":3048,"src":"11246:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2946,"name":"uint256","nodeType":"ElementaryTypeName","src":"11246:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2949,"mutability":"mutable","name":"cash","nameLocation":"11283:4:15","nodeType":"VariableDeclaration","scope":3048,"src":"11275:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2948,"name":"uint256","nodeType":"ElementaryTypeName","src":"11275:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2951,"mutability":"mutable","name":"liability","nameLocation":"11306:9:15","nodeType":"VariableDeclaration","scope":3048,"src":"11298:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2950,"name":"uint256","nodeType":"ElementaryTypeName","src":"11298:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2953,"mutability":"mutable","name":"cashChange","nameLocation":"11334:10:15","nodeType":"VariableDeclaration","scope":3048,"src":"11326:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2952,"name":"uint256","nodeType":"ElementaryTypeName","src":"11326:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2955,"mutability":"mutable","name":"addCash","nameLocation":"11360:7:15","nodeType":"VariableDeclaration","scope":3048,"src":"11355:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2954,"name":"bool","nodeType":"ElementaryTypeName","src":"11355:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11174:200:15"},"returnParameters":{"id":2959,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2958,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3048,"src":"11398:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2957,"name":"uint256","nodeType":"ElementaryTypeName","src":"11398:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11397:9:15"},"scope":4596,"src":"11156:1030:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3092,"nodeType":"Block","src":"12366:181:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3063,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3058,"src":"12381:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3064,"name":"xThreshold","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3056,"src":"12385:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12381:14:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3090,"nodeType":"Block","src":"12443:97:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3081,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3052,"src":"12496:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3073,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3058,"src":"12475:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3074,"name":"RAY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2260,"src":"12479:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12475:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3076,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12474:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3077,"name":"WAD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2254,"src":"12486:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12474:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3079,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12473:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12491:4:15","memberName":"rpow","nodeType":"MemberAccess","referencedDeclaration":5598,"src":"12473:22:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3082,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12473:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3083,"name":"WAD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2254,"src":"12501:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12473:31:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3085,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12472:33:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3086,"name":"RAY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2260,"src":"12508:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12472:39:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3071,"name":"k","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3050,"src":"12465:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12467:4:15","memberName":"wdiv","nodeType":"MemberAccess","referencedDeclaration":5530,"src":"12465:6:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3088,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12465:47:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3062,"id":3089,"nodeType":"Return","src":"12458:54:15"}]},"id":3091,"nodeType":"IfStatement","src":"12377:163:15","trueBody":{"id":3070,"nodeType":"Block","src":"12397:40:15","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3066,"name":"c1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3054,"src":"12419:2:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3067,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3058,"src":"12424:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12419:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3062,"id":3069,"nodeType":"Return","src":"12412:13:15"}]}}]},"id":3093,"implemented":true,"kind":"function","modifiers":[],"name":"_slippageFunc","nameLocation":"12203:13:15","nodeType":"FunctionDefinition","parameters":{"id":3059,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3050,"mutability":"mutable","name":"k","nameLocation":"12235:1:15","nodeType":"VariableDeclaration","scope":3093,"src":"12227:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3049,"name":"uint256","nodeType":"ElementaryTypeName","src":"12227:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3052,"mutability":"mutable","name":"n","nameLocation":"12255:1:15","nodeType":"VariableDeclaration","scope":3093,"src":"12247:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3051,"name":"uint256","nodeType":"ElementaryTypeName","src":"12247:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3054,"mutability":"mutable","name":"c1","nameLocation":"12275:2:15","nodeType":"VariableDeclaration","scope":3093,"src":"12267:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3053,"name":"uint256","nodeType":"ElementaryTypeName","src":"12267:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3056,"mutability":"mutable","name":"xThreshold","nameLocation":"12296:10:15","nodeType":"VariableDeclaration","scope":3093,"src":"12288:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3055,"name":"uint256","nodeType":"ElementaryTypeName","src":"12288:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3058,"mutability":"mutable","name":"x","nameLocation":"12325:1:15","nodeType":"VariableDeclaration","scope":3093,"src":"12317:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3057,"name":"uint256","nodeType":"ElementaryTypeName","src":"12317:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12216:117:15"},"returnParameters":{"id":3062,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3061,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3093,"src":"12357:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3060,"name":"uint256","nodeType":"ElementaryTypeName","src":"12357:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12356:9:15"},"scope":4596,"src":"12194:353:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3108,"nodeType":"Block","src":"12638:39:15","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3102,"name":"WAD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2254,"src":"12656:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3103,"name":"si","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3095,"src":"12662:2:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12656:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3105,"name":"sj","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3097,"src":"12667:2:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12656:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3101,"id":3107,"nodeType":"Return","src":"12649:20:15"}]},"id":3109,"implemented":true,"kind":"function","modifiers":[],"name":"_swappingSlippage","nameLocation":"12564:17:15","nodeType":"FunctionDefinition","parameters":{"id":3098,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3095,"mutability":"mutable","name":"si","nameLocation":"12590:2:15","nodeType":"VariableDeclaration","scope":3109,"src":"12582:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3094,"name":"uint256","nodeType":"ElementaryTypeName","src":"12582:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3097,"mutability":"mutable","name":"sj","nameLocation":"12602:2:15","nodeType":"VariableDeclaration","scope":3109,"src":"12594:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3096,"name":"uint256","nodeType":"ElementaryTypeName","src":"12594:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12581:24:15"},"returnParameters":{"id":3101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3100,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3109,"src":"12629:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3099,"name":"uint256","nodeType":"ElementaryTypeName","src":"12629:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12628:9:15"},"scope":4596,"src":"12555:122:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3145,"nodeType":"Block","src":"12928:244:15","statements":[{"body":{"id":3141,"nodeType":"Block","src":"12987:124:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":3128,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2234,"src":"13006:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2288_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3130,"indexExpression":{"id":3129,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3118,"src":"13017:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13006:13:15","typeDescriptions":{"typeIdentifier":"t_struct$_AssetInfo_$2288_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref"}},"id":3131,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13020:5:15","memberName":"asset","nodeType":"MemberAccess","referencedDeclaration":2283,"src":"13006:19:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3132,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3112,"src":"13029:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13006:28:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3140,"nodeType":"IfStatement","src":"13002:98:15","trueBody":{"id":3139,"nodeType":"Block","src":"13036:64:15","statements":[{"expression":{"expression":{"baseExpression":{"id":3134,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2234,"src":"13062:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2288_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3136,"indexExpression":{"id":3135,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3118,"src":"13073:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13062:13:15","typeDescriptions":{"typeIdentifier":"t_struct$_AssetInfo_$2288_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref"}},"id":3137,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13076:8:15","memberName":"slippage","nodeType":"MemberAccess","referencedDeclaration":2287,"src":"13062:22:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3116,"id":3138,"nodeType":"Return","src":"13055:29:15"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3121,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3118,"src":"12959:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3122,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2234,"src":"12963:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2288_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12974:6:15","memberName":"length","nodeType":"MemberAccess","src":"12963:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12959:21:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3142,"initializationExpression":{"assignments":[3118],"declarations":[{"constant":false,"id":3118,"mutability":"mutable","name":"i","nameLocation":"12952:1:15","nodeType":"VariableDeclaration","scope":3142,"src":"12944:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3117,"name":"uint256","nodeType":"ElementaryTypeName","src":"12944:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3120,"initialValue":{"hexValue":"30","id":3119,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12956:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12944:13:15"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"12982:3:15","subExpression":{"id":3125,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3118,"src":"12982:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3127,"nodeType":"ExpressionStatement","src":"12982:3:15"},"nodeType":"ForStatement","src":"12939:172:15"},{"expression":{"hexValue":"30","id":3143,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13128:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3116,"id":3144,"nodeType":"Return","src":"13121:8:15"}]},"documentation":{"id":3110,"nodeType":"StructuredDocumentation","src":"12683:173:15","text":" @dev Restituisce lo slippage attuale per un dato token.\n @param token The address of the token.\n @return Lo slippage attuale per il token."},"functionSelector":"12899068","id":3146,"implemented":true,"kind":"function","modifiers":[],"name":"getSlippage","nameLocation":"12871:11:15","nodeType":"FunctionDefinition","parameters":{"id":3113,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3112,"mutability":"mutable","name":"token","nameLocation":"12891:5:15","nodeType":"VariableDeclaration","scope":3146,"src":"12883:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3111,"name":"address","nodeType":"ElementaryTypeName","src":"12883:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"12882:15:15"},"returnParameters":{"id":3116,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3115,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3146,"src":"12919:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3114,"name":"uint256","nodeType":"ElementaryTypeName","src":"12919:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12918:9:15"},"scope":4596,"src":"12862:310:15","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3243,"nodeType":"Block","src":"13311:1084:15","statements":[{"assignments":[3154,3157],"declarations":[{"constant":false,"id":3154,"mutability":"mutable","name":"directions","nameLocation":"13337:10:15","nodeType":"VariableDeclaration","scope":3243,"src":"13323:24:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":3152,"name":"bool","nodeType":"ElementaryTypeName","src":"13323:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3153,"nodeType":"ArrayTypeName","src":"13323:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":3157,"mutability":"mutable","name":"deviations","nameLocation":"13366:10:15","nodeType":"VariableDeclaration","scope":3243,"src":"13349:27:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3155,"name":"uint256","nodeType":"ElementaryTypeName","src":"13349:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3156,"nodeType":"ArrayTypeName","src":"13349:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":3160,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":3158,"name":"getDeviation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3802,"src":"13380:12:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_array$_t_bool_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function () view returns (bool[] memory,uint256[] memory)"}},"id":3159,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13380:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_bool_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(bool[] memory,uint256[] memory)"}},"nodeType":"VariableDeclarationStatement","src":"13322:72:15"},{"body":{"id":3241,"nodeType":"Block","src":"13455:933:15","statements":[{"assignments":[3173],"declarations":[{"constant":false,"id":3173,"mutability":"mutable","name":"previousSlippage","nameLocation":"13478:16:15","nodeType":"VariableDeclaration","scope":3241,"src":"13470:24:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3172,"name":"uint256","nodeType":"ElementaryTypeName","src":"13470:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3178,"initialValue":{"expression":{"baseExpression":{"id":3174,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2234,"src":"13497:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2288_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3176,"indexExpression":{"id":3175,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3162,"src":"13508:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13497:13:15","typeDescriptions":{"typeIdentifier":"t_struct$_AssetInfo_$2288_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref"}},"id":3177,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13511:8:15","memberName":"slippage","nodeType":"MemberAccess","referencedDeclaration":2287,"src":"13497:22:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13470:49:15"},{"condition":{"baseExpression":{"id":3179,"name":"directions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3154,"src":"13540:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"id":3181,"indexExpression":{"id":3180,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3162,"src":"13551:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13540:13:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3239,"nodeType":"Block","src":"13867:510:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":3202,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2234,"src":"13968:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2288_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3204,"indexExpression":{"id":3203,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3162,"src":"13979:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13968:13:15","typeDescriptions":{"typeIdentifier":"t_struct$_AssetInfo_$2288_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref"}},"id":3205,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13982:8:15","memberName":"slippage","nodeType":"MemberAccess","referencedDeclaration":2287,"src":"13968:22:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"baseExpression":{"id":3206,"name":"deviations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3157,"src":"13993:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3208,"indexExpression":{"id":3207,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3162,"src":"14004:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13993:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13968:38:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3237,"nodeType":"Block","src":"14263:99:15","statements":[{"expression":{"id":3235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":3230,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2234,"src":"14286:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2288_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3232,"indexExpression":{"id":3231,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3162,"src":"14297:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14286:13:15","typeDescriptions":{"typeIdentifier":"t_struct$_AssetInfo_$2288_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref"}},"id":3233,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"14300:8:15","memberName":"slippage","nodeType":"MemberAccess","referencedDeclaration":2287,"src":"14286:22:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":3234,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14311:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14286:26:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3236,"nodeType":"ExpressionStatement","src":"14286:26:15"}]},"id":3238,"nodeType":"IfStatement","src":"13964:398:15","trueBody":{"id":3229,"nodeType":"Block","src":"14008:249:15","statements":[{"expression":{"id":3217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":3210,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2234,"src":"14031:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2288_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3212,"indexExpression":{"id":3211,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3162,"src":"14042:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14031:13:15","typeDescriptions":{"typeIdentifier":"t_struct$_AssetInfo_$2288_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref"}},"id":3213,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"14045:8:15","memberName":"slippage","nodeType":"MemberAccess","referencedDeclaration":2287,"src":"14031:22:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"baseExpression":{"id":3214,"name":"deviations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3157,"src":"14057:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3216,"indexExpression":{"id":3215,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3162,"src":"14068:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14057:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14031:39:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3218,"nodeType":"ExpressionStatement","src":"14031:39:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":3220,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2234,"src":"14159:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2288_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3222,"indexExpression":{"id":3221,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3162,"src":"14170:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14159:13:15","typeDescriptions":{"typeIdentifier":"t_struct$_AssetInfo_$2288_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref"}},"id":3223,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14173:8:15","memberName":"slippage","nodeType":"MemberAccess","referencedDeclaration":2287,"src":"14159:22:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":3224,"name":"previousSlippage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3173,"src":"14185:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14159:42:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"556e646572666c6f772064656372656d656e74696e6720736c697070616765","id":3226,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14203:33:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_7fe042c7e90969a67f580740cd6d07f084ba832097aca9eaaa282ad95462461f","typeString":"literal_string \"Underflow decrementing slippage\""},"value":"Underflow decrementing slippage"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7fe042c7e90969a67f580740cd6d07f084ba832097aca9eaaa282ad95462461f","typeString":"literal_string \"Underflow decrementing slippage\""}],"id":3219,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14151:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3227,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14151:86:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3228,"nodeType":"ExpressionStatement","src":"14151:86:15"}]}}]},"id":3240,"nodeType":"IfStatement","src":"13536:841:15","trueBody":{"id":3201,"nodeType":"Block","src":"13555:306:15","statements":[{"expression":{"id":3189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":3182,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2234,"src":"13649:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2288_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3184,"indexExpression":{"id":3183,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3162,"src":"13660:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13649:13:15","typeDescriptions":{"typeIdentifier":"t_struct$_AssetInfo_$2288_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref"}},"id":3185,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"13663:8:15","memberName":"slippage","nodeType":"MemberAccess","referencedDeclaration":2287,"src":"13649:22:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"baseExpression":{"id":3186,"name":"deviations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3157,"src":"13675:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3188,"indexExpression":{"id":3187,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3162,"src":"13686:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13675:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13649:39:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3190,"nodeType":"ExpressionStatement","src":"13649:39:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":3192,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2234,"src":"13768:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2288_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3194,"indexExpression":{"id":3193,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3162,"src":"13779:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13768:13:15","typeDescriptions":{"typeIdentifier":"t_struct$_AssetInfo_$2288_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref"}},"id":3195,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13782:8:15","memberName":"slippage","nodeType":"MemberAccess","referencedDeclaration":2287,"src":"13768:22:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":3196,"name":"previousSlippage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3173,"src":"13794:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13768:42:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f766572666c6f7720696e6372656d656e74696e6720736c697070616765","id":3198,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13812:32:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_9500bef01f061c69a5831abd395429bc0d4bf975a9340af0622098e5d0422cc6","typeString":"literal_string \"Overflow incrementing slippage\""},"value":"Overflow incrementing slippage"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9500bef01f061c69a5831abd395429bc0d4bf975a9340af0622098e5d0422cc6","typeString":"literal_string \"Overflow incrementing slippage\""}],"id":3191,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13760:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3199,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13760:85:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3200,"nodeType":"ExpressionStatement","src":"13760:85:15"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3165,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3162,"src":"13427:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3166,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2234,"src":"13431:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2288_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13442:6:15","memberName":"length","nodeType":"MemberAccess","src":"13431:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13427:21:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3242,"initializationExpression":{"assignments":[3162],"declarations":[{"constant":false,"id":3162,"mutability":"mutable","name":"i","nameLocation":"13420:1:15","nodeType":"VariableDeclaration","scope":3242,"src":"13412:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3161,"name":"uint256","nodeType":"ElementaryTypeName","src":"13412:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3164,"initialValue":{"hexValue":"30","id":3163,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13424:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13412:13:15"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"13450:3:15","subExpression":{"id":3169,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3162,"src":"13450:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3171,"nodeType":"ExpressionStatement","src":"13450:3:15"},"nodeType":"ForStatement","src":"13407:981:15"}]},"documentation":{"id":3147,"nodeType":"StructuredDocumentation","src":"13180:90:15","text":" @dev Funzione per aggiornare lo slippage in base ai pesi degli asset."},"id":3244,"implemented":true,"kind":"function","modifiers":[],"name":"updateSlippage","nameLocation":"13285:14:15","nodeType":"FunctionDefinition","parameters":{"id":3148,"nodeType":"ParameterList","parameters":[],"src":"13299:2:15"},"returnParameters":{"id":3149,"nodeType":"ParameterList","parameters":[],"src":"13311:0:15"},"scope":4596,"src":"13276:1119:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3286,"nodeType":"Block","src":"14468:229:15","statements":[{"assignments":[3254],"declarations":[{"constant":false,"id":3254,"mutability":"mutable","name":"slippages","nameLocation":"14496:9:15","nodeType":"VariableDeclaration","scope":3286,"src":"14479:26:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3252,"name":"uint256","nodeType":"ElementaryTypeName","src":"14479:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3253,"nodeType":"ArrayTypeName","src":"14479:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":3261,"initialValue":{"arguments":[{"expression":{"id":3258,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2234,"src":"14522:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2288_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14533:6:15","memberName":"length","nodeType":"MemberAccess","src":"14522:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3257,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"14508:13:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":3255,"name":"uint256","nodeType":"ElementaryTypeName","src":"14512:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3256,"nodeType":"ArrayTypeName","src":"14512:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":3260,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14508:32:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"14479:61:15"},{"body":{"id":3282,"nodeType":"Block","src":"14599:64:15","statements":[{"expression":{"id":3280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3273,"name":"slippages","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3254,"src":"14614:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3275,"indexExpression":{"id":3274,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3263,"src":"14624:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"14614:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":3276,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2234,"src":"14629:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2288_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3278,"indexExpression":{"id":3277,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3263,"src":"14640:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14629:13:15","typeDescriptions":{"typeIdentifier":"t_struct$_AssetInfo_$2288_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref"}},"id":3279,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14643:8:15","memberName":"slippage","nodeType":"MemberAccess","referencedDeclaration":2287,"src":"14629:22:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14614:37:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3281,"nodeType":"ExpressionStatement","src":"14614:37:15"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3266,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3263,"src":"14571:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3267,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2234,"src":"14575:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2288_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14586:6:15","memberName":"length","nodeType":"MemberAccess","src":"14575:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14571:21:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3283,"initializationExpression":{"assignments":[3263],"declarations":[{"constant":false,"id":3263,"mutability":"mutable","name":"i","nameLocation":"14564:1:15","nodeType":"VariableDeclaration","scope":3283,"src":"14556:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3262,"name":"uint256","nodeType":"ElementaryTypeName","src":"14556:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3265,"initialValue":{"hexValue":"30","id":3264,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14568:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"14556:13:15"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"14594:3:15","subExpression":{"id":3270,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3263,"src":"14594:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3272,"nodeType":"ExpressionStatement","src":"14594:3:15"},"nodeType":"ForStatement","src":"14551:112:15"},{"expression":{"id":3284,"name":"slippages","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3254,"src":"14680:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":3249,"id":3285,"nodeType":"Return","src":"14673:16:15"}]},"functionSelector":"18904ea4","id":3287,"implemented":true,"kind":"function","modifiers":[],"name":"getSlippages","nameLocation":"14412:12:15","nodeType":"FunctionDefinition","parameters":{"id":3245,"nodeType":"ParameterList","parameters":[],"src":"14424:2:15"},"returnParameters":{"id":3249,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3248,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3287,"src":"14450:16:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3246,"name":"uint256","nodeType":"ElementaryTypeName","src":"14450:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3247,"nodeType":"ArrayTypeName","src":"14450:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"14449:18:15"},"scope":4596,"src":"14403:294:15","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":3453,"nodeType":"Block","src":"15001:1294:15","statements":[{"assignments":[3301],"declarations":[{"constant":false,"id":3301,"mutability":"mutable","name":"totalSupply","nameLocation":"15020:11:15","nodeType":"VariableDeclaration","scope":3453,"src":"15012:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3300,"name":"uint256","nodeType":"ElementaryTypeName","src":"15012:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3304,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":3302,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1224,"src":"15034:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":3303,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15034:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15012:35:15"},{"assignments":[3306],"declarations":[{"constant":false,"id":3306,"mutability":"mutable","name":"totalValue","nameLocation":"15066:10:15","nodeType":"VariableDeclaration","scope":3453,"src":"15058:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3305,"name":"uint256","nodeType":"ElementaryTypeName","src":"15058:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3308,"initialValue":{"hexValue":"30","id":3307,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15079:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"15058:22:15"},{"assignments":[3313],"declarations":[{"constant":false,"id":3313,"mutability":"mutable","name":"_reserves","nameLocation":"15108:9:15","nodeType":"VariableDeclaration","scope":3453,"src":"15091:26:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3311,"name":"uint256","nodeType":"ElementaryTypeName","src":"15091:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3312,"nodeType":"ArrayTypeName","src":"15091:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":3316,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":3314,"name":"getReserves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3942,"src":"15120:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function () view returns (uint256[] memory)"}},"id":3315,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15120:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"15091:42:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3318,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2234,"src":"15152:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2288_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15163:6:15","memberName":"length","nodeType":"MemberAccess","src":"15152:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3320,"name":"_reserves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3313,"src":"15173:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15183:6:15","memberName":"length","nodeType":"MemberAccess","src":"15173:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15152:37:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964207265736572766573206c656e677468","id":3323,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15191:25:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_788ce755d61da147edad70af92467c8a383af859573990e9defde5b6e0bdf24d","typeString":"literal_string \"Invalid reserves length\""},"value":"Invalid reserves length"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_788ce755d61da147edad70af92467c8a383af859573990e9defde5b6e0bdf24d","typeString":"literal_string \"Invalid reserves length\""}],"id":3317,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"15144:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3324,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15144:73:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3325,"nodeType":"ExpressionStatement","src":"15144:73:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3327,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2234,"src":"15236:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2288_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15247:6:15","memberName":"length","nodeType":"MemberAccess","src":"15236:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3329,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15256:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"15236:21:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f20617373657473","id":3331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15259:11:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_195739df032cb3c07c5ed70a4cae73c5d077df4296263c6db3d1f3b4671efbd0","typeString":"literal_string \"No assets\""},"value":"No assets"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_195739df032cb3c07c5ed70a4cae73c5d077df4296263c6db3d1f3b4671efbd0","typeString":"literal_string \"No assets\""}],"id":3326,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"15228:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3332,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15228:43:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3333,"nodeType":"ExpressionStatement","src":"15228:43:15"},{"body":{"id":3380,"nodeType":"Block","src":"15332:319:15","statements":[{"assignments":[3346],"declarations":[{"constant":false,"id":3346,"mutability":"mutable","name":"asset","nameLocation":"15355:5:15","nodeType":"VariableDeclaration","scope":3380,"src":"15347:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3345,"name":"address","nodeType":"ElementaryTypeName","src":"15347:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3351,"initialValue":{"expression":{"baseExpression":{"id":3347,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2234,"src":"15363:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2288_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3349,"indexExpression":{"id":3348,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3335,"src":"15374:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15363:13:15","typeDescriptions":{"typeIdentifier":"t_struct$_AssetInfo_$2288_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref"}},"id":3350,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15377:5:15","memberName":"asset","nodeType":"MemberAccess","referencedDeclaration":2283,"src":"15363:19:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"15347:35:15"},{"assignments":[3353],"declarations":[{"constant":false,"id":3353,"mutability":"mutable","name":"valuation","nameLocation":"15405:9:15","nodeType":"VariableDeclaration","scope":3380,"src":"15397:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3352,"name":"uint256","nodeType":"ElementaryTypeName","src":"15397:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3354,"nodeType":"VariableDeclarationStatement","src":"15397:17:15"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3355,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3346,"src":"15433:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3356,"name":"baseAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2243,"src":"15442:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15433:18:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3366,"nodeType":"IfStatement","src":"15429:108:15","trueBody":{"id":3365,"nodeType":"Block","src":"15453:84:15","statements":[{"expression":{"id":3362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3358,"name":"valuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3353,"src":"15472:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":3359,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3293,"src":"15484:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3361,"indexExpression":{"id":3360,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3335,"src":"15492:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15484:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15472:22:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3363,"nodeType":"ExpressionStatement","src":"15472:22:15"},{"id":3364,"nodeType":"Continue","src":"15513:8:15"}]}},{"expression":{"id":3374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3367,"name":"valuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3353,"src":"15551:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3369,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3346,"src":"15583:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":3370,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3293,"src":"15590:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3372,"indexExpression":{"id":3371,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3335,"src":"15598:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15590:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3368,"name":"_convertTokenToBase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4549,"src":"15563:19:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view returns (uint256)"}},"id":3373,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15563:38:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15551:50:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3375,"nodeType":"ExpressionStatement","src":"15551:50:15"},{"expression":{"id":3378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3376,"name":"totalValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3306,"src":"15616:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":3377,"name":"valuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3353,"src":"15630:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15616:23:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3379,"nodeType":"ExpressionStatement","src":"15616:23:15"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3338,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3335,"src":"15304:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3339,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2234,"src":"15308:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2288_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15319:6:15","memberName":"length","nodeType":"MemberAccess","src":"15308:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15304:21:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3381,"initializationExpression":{"assignments":[3335],"declarations":[{"constant":false,"id":3335,"mutability":"mutable","name":"i","nameLocation":"15297:1:15","nodeType":"VariableDeclaration","scope":3381,"src":"15289:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3334,"name":"uint256","nodeType":"ElementaryTypeName","src":"15289:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3337,"initialValue":{"hexValue":"30","id":3336,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15301:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"15289:13:15"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"15327:3:15","subExpression":{"id":3342,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3335,"src":"15327:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3344,"nodeType":"ExpressionStatement","src":"15327:3:15"},"nodeType":"ForStatement","src":"15284:367:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3383,"name":"totalValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3306,"src":"15671:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3384,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15684:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"15671:14:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f74616c2076616c7565206d7573742062652067726561746572207468616e2030","id":3386,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15687:36:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_e8ec4a06d76118e3b24afbc30b183e086aa6aaa6e137c81160fc8d59e1a33e3f","typeString":"literal_string \"Total value must be greater than 0\""},"value":"Total value must be greater than 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e8ec4a06d76118e3b24afbc30b183e086aa6aaa6e137c81160fc8d59e1a33e3f","typeString":"literal_string \"Total value must be greater than 0\""}],"id":3382,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"15663:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3387,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15663:61:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3388,"nodeType":"ExpressionStatement","src":"15663:61:15"},{"assignments":[3390],"declarations":[{"constant":false,"id":3390,"mutability":"mutable","name":"toMint","nameLocation":"15745:6:15","nodeType":"VariableDeclaration","scope":3453,"src":"15737:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3389,"name":"uint256","nodeType":"ElementaryTypeName","src":"15737:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3391,"nodeType":"VariableDeclarationStatement","src":"15737:14:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3392,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3301,"src":"15768:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15783:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"15768:16:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3429,"nodeType":"Block","src":"15854:267:15","statements":[{"assignments":[3403,null],"declarations":[{"constant":false,"id":3403,"mutability":"mutable","name":"totalLiquidity","nameLocation":"15878:14:15","nodeType":"VariableDeclaration","scope":3429,"src":"15870:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3402,"name":"uint256","nodeType":"ElementaryTypeName","src":"15870:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},null],"id":3406,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":3404,"name":"_computeTotalValuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4149,"src":"15898:22:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function () view returns (uint256,uint256[] memory)"}},"id":3405,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15898:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256,uint256[] memory)"}},"nodeType":"VariableDeclarationStatement","src":"15869:53:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3408,"name":"totalLiquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3403,"src":"15945:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15962:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"15945:18:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f74616c206c6971756964697479206d7573742062652067726561746572207468616e2030","id":3411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15965:40:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_a245c00c976af272c663e732300fe860097516364a0d92887494f54e860fa54c","typeString":"literal_string \"Total liquidity must be greater than 0\""},"value":"Total liquidity must be greater than 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a245c00c976af272c663e732300fe860097516364a0d92887494f54e860fa54c","typeString":"literal_string \"Total liquidity must be greater than 0\""}],"id":3407,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"15937:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3412,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15937:69:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3413,"nodeType":"ExpressionStatement","src":"15937:69:15"},{"expression":{"id":3427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3414,"name":"toMint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3390,"src":"16021:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3415,"name":"totalValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3306,"src":"16032:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3416,"name":"scalingFactor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2245,"src":"16045:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16032:26:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3418,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"16031:28:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3419,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3301,"src":"16062:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16031:42:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3421,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"16030:44:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3422,"name":"totalLiquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3403,"src":"16078:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3423,"name":"scalingFactor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2245,"src":"16095:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16078:30:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3425,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"16077:32:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16030:79:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16021:88:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3428,"nodeType":"ExpressionStatement","src":"16021:88:15"}]},"id":3430,"nodeType":"IfStatement","src":"15764:357:15","trueBody":{"id":3401,"nodeType":"Block","src":"15786:62:15","statements":[{"expression":{"id":3399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3395,"name":"toMint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3390,"src":"15801:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3396,"name":"totalValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3306,"src":"15810:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3397,"name":"scalingFactor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2245,"src":"15823:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15810:26:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15801:35:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3400,"nodeType":"ExpressionStatement","src":"15801:35:15"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3432,"name":"toMint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3390,"src":"16139:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3433,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16149:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"16139:11:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d696e74207174792069732030","id":3435,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16152:15:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_50327403b25acc6e0d15796c676b8320f8d9ffcece005326d31f4226e4f741bb","typeString":"literal_string \"Mint qty is 0\""},"value":"Mint qty is 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_50327403b25acc6e0d15796c676b8320f8d9ffcece005326d31f4226e4f741bb","typeString":"literal_string \"Mint qty is 0\""}],"id":3431,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"16131:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3436,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16131:37:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3437,"nodeType":"ExpressionStatement","src":"16131:37:15"},{"expression":{"arguments":[{"id":3439,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3290,"src":"16187:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3440,"name":"toMint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3390,"src":"16191:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3438,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1491,"src":"16181:5:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":3441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16181:17:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3442,"nodeType":"ExpressionStatement","src":"16181:17:15"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3443,"name":"updateSlippage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3244,"src":"16211:14:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":3444,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16211:16:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3445,"nodeType":"ExpressionStatement","src":"16211:16:15"},{"eventCall":{"arguments":[{"id":3447,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3290,"src":"16250:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3448,"name":"toMint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3390,"src":"16254:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3446,"name":"Mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2314,"src":"16245:4:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":3449,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16245:16:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3450,"nodeType":"EmitStatement","src":"16240:21:15"},{"expression":{"id":3451,"name":"toMint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3390,"src":"16281:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3299,"id":3452,"nodeType":"Return","src":"16274:13:15"}]},"documentation":{"id":3288,"nodeType":"StructuredDocumentation","src":"14705:197:15","text":" @dev Mints new tokens and adds them to the specified address.\n @param to The address to which the new tokens will be minted.\n @return The amount of tokens minted."},"functionSelector":"de836ebd","id":3454,"implemented":true,"kind":"function","modifiers":[{"id":3296,"kind":"modifierInvocation","modifierName":{"id":3295,"name":"onlyPeriphery","nameLocations":["14969:13:15"],"nodeType":"IdentifierPath","referencedDeclaration":2443,"src":"14969:13:15"},"nodeType":"ModifierInvocation","src":"14969:13:15"}],"name":"mint","nameLocation":"14917:4:15","nodeType":"FunctionDefinition","parameters":{"id":3294,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3290,"mutability":"mutable","name":"to","nameLocation":"14930:2:15","nodeType":"VariableDeclaration","scope":3454,"src":"14922:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3289,"name":"address","nodeType":"ElementaryTypeName","src":"14922:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3293,"mutability":"mutable","name":"amounts","nameLocation":"14951:7:15","nodeType":"VariableDeclaration","scope":3454,"src":"14934:24:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3291,"name":"uint256","nodeType":"ElementaryTypeName","src":"14934:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3292,"nodeType":"ArrayTypeName","src":"14934:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"14921:38:15"},"returnParameters":{"id":3299,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3298,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3454,"src":"14992:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3297,"name":"uint256","nodeType":"ElementaryTypeName","src":"14992:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14991:9:15"},"scope":4596,"src":"14908:1387:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3626,"nodeType":"Block","src":"17392:1259:15","statements":[{"assignments":[3466],"declarations":[{"constant":false,"id":3466,"mutability":"mutable","name":"_BPS_FEE","nameLocation":"17411:8:15","nodeType":"VariableDeclaration","scope":3626,"src":"17403:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3465,"name":"uint256","nodeType":"ElementaryTypeName","src":"17403:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3470,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3467,"name":"registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2248,"src":"17422:8:15","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$5472","typeString":"contract IBaluniV1Registry"}},"id":3468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17431:10:15","memberName":"getBPS_FEE","nodeType":"MemberAccess","referencedDeclaration":5446,"src":"17422:19:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint256_$","typeString":"function () view external returns (uint256)"}},"id":3469,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17422:21:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"17403:40:15"},{"assignments":[3472],"declarations":[{"constant":false,"id":3472,"mutability":"mutable","name":"periphery","nameLocation":"17462:9:15","nodeType":"VariableDeclaration","scope":3626,"src":"17454:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3471,"name":"address","nodeType":"ElementaryTypeName","src":"17454:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3476,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3473,"name":"registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2248,"src":"17474:8:15","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$5472","typeString":"contract IBaluniV1Registry"}},"id":3474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17483:22:15","memberName":"getBaluniPoolPeriphery","nodeType":"MemberAccess","referencedDeclaration":5406,"src":"17474:31:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":3475,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17474:33:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"17454:53:15"},{"assignments":[3478],"declarations":[{"constant":false,"id":3478,"mutability":"mutable","name":"share","nameLocation":"17528:5:15","nodeType":"VariableDeclaration","scope":3626,"src":"17520:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3477,"name":"uint256","nodeType":"ElementaryTypeName","src":"17520:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3485,"initialValue":{"arguments":[{"arguments":[{"id":3482,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"17554:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Pool_$4596","typeString":"contract BaluniV1Pool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniV1Pool_$4596","typeString":"contract BaluniV1Pool"}],"id":3481,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17546:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3480,"name":"address","nodeType":"ElementaryTypeName","src":"17546:7:15","typeDescriptions":{}}},"id":3483,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17546:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3479,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1237,"src":"17536:9:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":3484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17536:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"17520:40:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3487,"name":"share","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3478,"src":"17579:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3488,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17587:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17579:9:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5368617265206d7573742062652067726561746572207468616e2030","id":3490,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17590:30:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_37b2136db8906a0fa9dcfb36fa22f3e5724d70ae1dfd30e29853723b16bc684b","typeString":"literal_string \"Share must be greater than 0\""},"value":"Share must be greater than 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_37b2136db8906a0fa9dcfb36fa22f3e5724d70ae1dfd30e29853723b16bc684b","typeString":"literal_string \"Share must be greater than 0\""}],"id":3486,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"17571:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3491,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17571:50:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3492,"nodeType":"ExpressionStatement","src":"17571:50:15"},{"assignments":[3494],"declarations":[{"constant":false,"id":3494,"mutability":"mutable","name":"totalSupply","nameLocation":"17642:11:15","nodeType":"VariableDeclaration","scope":3626,"src":"17634:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3493,"name":"uint256","nodeType":"ElementaryTypeName","src":"17634:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3497,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":3495,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1224,"src":"17656:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":3496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17656:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"17634:35:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3499,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3494,"src":"17688:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17702:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17688:15:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f206c6971756964697479","id":3502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17705:14:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_379a432f00aa43993bfbf4e01492a8eab5138dcd2e395864ede728644390fc31","typeString":"literal_string \"No liquidity\""},"value":"No liquidity"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_379a432f00aa43993bfbf4e01492a8eab5138dcd2e395864ede728644390fc31","typeString":"literal_string \"No liquidity\""}],"id":3498,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"17680:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3503,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17680:40:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3504,"nodeType":"ExpressionStatement","src":"17680:40:15"},{"assignments":[3509],"declarations":[{"constant":false,"id":3509,"mutability":"mutable","name":"amounts","nameLocation":"17750:7:15","nodeType":"VariableDeclaration","scope":3626,"src":"17733:24:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3507,"name":"uint256","nodeType":"ElementaryTypeName","src":"17733:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3508,"nodeType":"ArrayTypeName","src":"17733:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":3516,"initialValue":{"arguments":[{"expression":{"id":3513,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2234,"src":"17774:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2288_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17785:6:15","memberName":"length","nodeType":"MemberAccess","src":"17774:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3512,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"17760:13:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":3510,"name":"uint256","nodeType":"ElementaryTypeName","src":"17764:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3511,"nodeType":"ArrayTypeName","src":"17764:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":3515,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17760:32:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"17733:59:15"},{"assignments":[3518],"declarations":[{"constant":false,"id":3518,"mutability":"mutable","name":"fee","nameLocation":"17811:3:15","nodeType":"VariableDeclaration","scope":3626,"src":"17803:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3517,"name":"uint256","nodeType":"ElementaryTypeName","src":"17803:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3525,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3519,"name":"share","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3478,"src":"17818:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3520,"name":"_BPS_FEE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3466,"src":"17826:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17818:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3522,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17817:18:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3130303030","id":3523,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17838:5:15","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"src":"17817:26:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"17803:40:15"},{"assignments":[3527],"declarations":[{"constant":false,"id":3527,"mutability":"mutable","name":"shareAfterFee","nameLocation":"17862:13:15","nodeType":"VariableDeclaration","scope":3626,"src":"17854:21:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3526,"name":"uint256","nodeType":"ElementaryTypeName","src":"17854:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3531,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3528,"name":"share","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3478,"src":"17878:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3529,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3518,"src":"17886:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17878:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"17854:35:15"},{"body":{"id":3570,"nodeType":"Block","src":"17950:256:15","statements":[{"assignments":[3544],"declarations":[{"constant":false,"id":3544,"mutability":"mutable","name":"assetBalance","nameLocation":"17973:12:15","nodeType":"VariableDeclaration","scope":3570,"src":"17965:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3543,"name":"uint256","nodeType":"ElementaryTypeName","src":"17965:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3558,"initialValue":{"arguments":[{"arguments":[{"id":3551,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"18064:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Pool_$4596","typeString":"contract BaluniV1Pool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniV1Pool_$4596","typeString":"contract BaluniV1Pool"}],"id":3550,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18056:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3549,"name":"address","nodeType":"ElementaryTypeName","src":"18056:7:15","typeDescriptions":{}}},"id":3552,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18056:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"baseExpression":{"id":3553,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2234,"src":"18088:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2288_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3555,"indexExpression":{"id":3554,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3533,"src":"18099:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18088:13:15","typeDescriptions":{"typeIdentifier":"t_struct$_AssetInfo_$2288_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref"}},"id":3556,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18102:5:15","memberName":"asset","nodeType":"MemberAccess","referencedDeclaration":2283,"src":"18088:19:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":3546,"name":"periphery","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3472,"src":"18011:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3545,"name":"IBaluniV1PoolPeriphery","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5213,"src":"17988:22:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBaluniV1PoolPeriphery_$5213_$","typeString":"type(contract IBaluniV1PoolPeriphery)"}},"id":3547,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17988:33:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1PoolPeriphery_$5213","typeString":"contract IBaluniV1PoolPeriphery"}},"id":3548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18022:15:15","memberName":"getAssetReserve","nodeType":"MemberAccess","referencedDeclaration":5212,"src":"17988:49:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":3557,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17988:134:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"17965:157:15"},{"expression":{"id":3568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3559,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3509,"src":"18137:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3561,"indexExpression":{"id":3560,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3533,"src":"18145:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18137:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3562,"name":"assetBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3544,"src":"18151:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3563,"name":"shareAfterFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3527,"src":"18166:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18151:28:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3565,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"18150:30:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3566,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3494,"src":"18183:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18150:44:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18137:57:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3569,"nodeType":"ExpressionStatement","src":"18137:57:15"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3536,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3533,"src":"17922:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3537,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2234,"src":"17926:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2288_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17937:6:15","memberName":"length","nodeType":"MemberAccess","src":"17926:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17922:21:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3571,"initializationExpression":{"assignments":[3533],"declarations":[{"constant":false,"id":3533,"mutability":"mutable","name":"i","nameLocation":"17915:1:15","nodeType":"VariableDeclaration","scope":3571,"src":"17907:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3532,"name":"uint256","nodeType":"ElementaryTypeName","src":"17907:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3535,"initialValue":{"hexValue":"30","id":3534,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17919:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"17907:13:15"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17945:3:15","subExpression":{"id":3540,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3533,"src":"17945:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3542,"nodeType":"ExpressionStatement","src":"17945:3:15"},"nodeType":"ForStatement","src":"17902:304:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":3576,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"18244:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Pool_$4596","typeString":"contract BaluniV1Pool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniV1Pool_$4596","typeString":"contract BaluniV1Pool"}],"id":3575,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18236:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3574,"name":"address","nodeType":"ElementaryTypeName","src":"18236:7:15","typeDescriptions":{}}},"id":3577,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18236:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3573,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1237,"src":"18226:9:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":3578,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18226:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":3579,"name":"shareAfterFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3527,"src":"18254:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18226:41:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e742042414c554e49206c6971756964697479","id":3581,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18269:31:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_fc2f8692ca59eb8838d740ab96a08e7dab54c967cc56eb0a9b640ce78eb1103e","typeString":"literal_string \"Insufficient BALUNI liquidity\""},"value":"Insufficient BALUNI liquidity"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fc2f8692ca59eb8838d740ab96a08e7dab54c967cc56eb0a9b640ce78eb1103e","typeString":"literal_string \"Insufficient BALUNI liquidity\""}],"id":3572,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"18218:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3582,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18218:83:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3583,"nodeType":"ExpressionStatement","src":"18218:83:15"},{"assignments":[3585],"declarations":[{"constant":false,"id":3585,"mutability":"mutable","name":"treasury","nameLocation":"18322:8:15","nodeType":"VariableDeclaration","scope":3626,"src":"18314:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3584,"name":"address","nodeType":"ElementaryTypeName","src":"18314:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3589,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3586,"name":"registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2248,"src":"18333:8:15","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$5472","typeString":"contract IBaluniV1Registry"}},"id":3587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18342:11:15","memberName":"getTreasury","nodeType":"MemberAccess","referencedDeclaration":5461,"src":"18333:20:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":3588,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18333:22:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"18314:41:15"},{"assignments":[3591],"declarations":[{"constant":false,"id":3591,"mutability":"mutable","name":"feeTransferSuccess","nameLocation":"18371:18:15","nodeType":"VariableDeclaration","scope":3626,"src":"18366:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3590,"name":"bool","nodeType":"ElementaryTypeName","src":"18366:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3602,"initialValue":{"arguments":[{"id":3599,"name":"treasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3585,"src":"18423:8:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3600,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3518,"src":"18433:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"arguments":[{"id":3595,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"18407:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Pool_$4596","typeString":"contract BaluniV1Pool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniV1Pool_$4596","typeString":"contract BaluniV1Pool"}],"id":3594,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18399:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3593,"name":"address","nodeType":"ElementaryTypeName","src":"18399:7:15","typeDescriptions":{}}},"id":3596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18399:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3592,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1729,"src":"18392:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1729_$","typeString":"type(contract IERC20)"}},"id":3597,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18392:21:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"}},"id":3598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18414:8:15","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":1696,"src":"18392:30:15","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":3601,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18392:45:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"18366:71:15"},{"expression":{"arguments":[{"id":3604,"name":"feeTransferSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3591,"src":"18456:18:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"466565207472616e73666572206661696c6564","id":3605,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18476:21:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_5ce83e457e48ac9624285a3c527b5c2f9ccbef788eaf8b73a2271dc0a760bc56","typeString":"literal_string \"Fee transfer failed\""},"value":"Fee transfer failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5ce83e457e48ac9624285a3c527b5c2f9ccbef788eaf8b73a2271dc0a760bc56","typeString":"literal_string \"Fee transfer failed\""}],"id":3603,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"18448:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3606,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18448:50:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3607,"nodeType":"ExpressionStatement","src":"18448:50:15"},{"expression":{"arguments":[{"arguments":[{"id":3611,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"18525:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Pool_$4596","typeString":"contract BaluniV1Pool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniV1Pool_$4596","typeString":"contract BaluniV1Pool"}],"id":3610,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18517:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3609,"name":"address","nodeType":"ElementaryTypeName","src":"18517:7:15","typeDescriptions":{}}},"id":3612,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18517:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3613,"name":"shareAfterFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3527,"src":"18532:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3608,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1524,"src":"18511:5:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":3614,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18511:35:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3615,"nodeType":"ExpressionStatement","src":"18511:35:15"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3616,"name":"updateSlippage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3244,"src":"18559:14:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":3617,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18559:16:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3618,"nodeType":"ExpressionStatement","src":"18559:16:15"},{"eventCall":{"arguments":[{"id":3620,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3457,"src":"18598:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3621,"name":"shareAfterFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3527,"src":"18602:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3619,"name":"Burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2308,"src":"18593:4:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":3622,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18593:23:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3623,"nodeType":"EmitStatement","src":"18588:28:15"},{"expression":{"id":3624,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3509,"src":"18636:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":3464,"id":3625,"nodeType":"Return","src":"18629:14:15"}]},"documentation":{"id":3455,"nodeType":"StructuredDocumentation","src":"16303:1007:15","text":" @dev Burns the pool tokens and transfers the underlying assets to the specified address.\n @param to The address to transfer the underlying assets to.\n @notice This function can only be called by the periphery contract.\n @notice The pool tokens must have a balance greater than 0.\n @notice The total supply of pool tokens must be greater than 0.\n @notice The function calculates the amounts of each underlying asset to transfer based on the share of pool tokens being burned.\n @notice A fee is deducted from the share of pool tokens being burned and transferred to the treasury address.\n @notice The function checks if the pool has sufficient liquidity before performing any transfers.\n @notice If any transfer fails, the function reverts the entire operation.\n @notice After the transfers, the function updates the reserves of the pool.\n @notice Emits a `Burn` event with the address and share of pool tokens burned."},"functionSelector":"89afcb44","id":3627,"implemented":true,"kind":"function","modifiers":[{"id":3460,"kind":"modifierInvocation","modifierName":{"id":3459,"name":"onlyPeriphery","nameLocations":["17351:13:15"],"nodeType":"IdentifierPath","referencedDeclaration":2443,"src":"17351:13:15"},"nodeType":"ModifierInvocation","src":"17351:13:15"}],"name":"burn","nameLocation":"17325:4:15","nodeType":"FunctionDefinition","parameters":{"id":3458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3457,"mutability":"mutable","name":"to","nameLocation":"17338:2:15","nodeType":"VariableDeclaration","scope":3627,"src":"17330:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3456,"name":"address","nodeType":"ElementaryTypeName","src":"17330:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"17329:12:15"},"returnParameters":{"id":3464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3463,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3627,"src":"17374:16:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3461,"name":"uint256","nodeType":"ElementaryTypeName","src":"17374:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3462,"nodeType":"ArrayTypeName","src":"17374:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"17373:18:15"},"scope":4596,"src":"17316:1335:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3671,"nodeType":"Block","src":"19154:285:15","statements":[{"assignments":[3641],"declarations":[{"constant":false,"id":3641,"mutability":"mutable","name":"baluniOracle","nameLocation":"19181:12:15","nodeType":"VariableDeclaration","scope":3671,"src":"19165:28:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Oracle_$5093","typeString":"contract IBaluniV1Oracle"},"typeName":{"id":3640,"nodeType":"UserDefinedTypeName","pathNode":{"id":3639,"name":"IBaluniV1Oracle","nameLocations":["19165:15:15"],"nodeType":"IdentifierPath","referencedDeclaration":5093,"src":"19165:15:15"},"referencedDeclaration":5093,"src":"19165:15:15","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Oracle_$5093","typeString":"contract IBaluniV1Oracle"}},"visibility":"internal"}],"id":3647,"initialValue":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3643,"name":"registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2248,"src":"19212:8:15","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$5472","typeString":"contract IBaluniV1Registry"}},"id":3644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19221:15:15","memberName":"getBaluniOracle","nodeType":"MemberAccess","referencedDeclaration":5396,"src":"19212:24:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":3645,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19212:26:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3642,"name":"IBaluniV1Oracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5093,"src":"19196:15:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBaluniV1Oracle_$5093_$","typeString":"type(contract IBaluniV1Oracle)"}},"id":3646,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19196:43:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Oracle_$5093","typeString":"contract IBaluniV1Oracle"}},"nodeType":"VariableDeclarationStatement","src":"19165:74:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3649,"name":"registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2248,"src":"19258:8:15","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$5472","typeString":"contract IBaluniV1Registry"}},"id":3650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19267:15:15","memberName":"getBaluniOracle","nodeType":"MemberAccess","referencedDeclaration":5396,"src":"19258:24:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":3651,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19258:26:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":3654,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19296:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3653,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19288:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3652,"name":"address","nodeType":"ElementaryTypeName","src":"19288:7:15","typeDescriptions":{}}},"id":3655,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19288:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"19258:40:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964206f7261636c652061646472657373","id":3657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"19300:24:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_b5c25d5c4ca6addfa23ca815554bb7bee3a9885ce01501a275168a62aa7cded3","typeString":"literal_string \"Invalid oracle address\""},"value":"Invalid oracle address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b5c25d5c4ca6addfa23ca815554bb7bee3a9885ce01501a275168a62aa7cded3","typeString":"literal_string \"Invalid oracle address\""}],"id":3648,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"19250:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3658,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19250:75:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3659,"nodeType":"ExpressionStatement","src":"19250:75:15"},{"assignments":[3661],"declarations":[{"constant":false,"id":3661,"mutability":"mutable","name":"amountOut","nameLocation":"19344:9:15","nodeType":"VariableDeclaration","scope":3671,"src":"19336:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3660,"name":"uint256","nodeType":"ElementaryTypeName","src":"19336:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3668,"initialValue":{"arguments":[{"id":3664,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3630,"src":"19377:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3665,"name":"toToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3632,"src":"19388:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3666,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3634,"src":"19397:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3662,"name":"baluniOracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3641,"src":"19356:12:15","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Oracle_$5093","typeString":"contract IBaluniV1Oracle"}},"id":3663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19369:7:15","memberName":"convert","nodeType":"MemberAccess","referencedDeclaration":5081,"src":"19356:20:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,address,uint256) view external returns (uint256)"}},"id":3667,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19356:48:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19336:68:15"},{"expression":{"id":3669,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3661,"src":"19422:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3638,"id":3670,"nodeType":"Return","src":"19415:16:15"}]},"documentation":{"id":3628,"nodeType":"StructuredDocumentation","src":"18659:385:15","text":" @dev Calculates the amount of `toToken` that will be received when swapping `fromToken` for `toToken`.\n @param fromToken The address of the token being swapped from.\n @param toToken The address of the token being swapped to.\n @param amount The amount of `fromToken` being swapped.\n @return The amount of `toToken` that will be received."},"functionSelector":"4aa06652","id":3672,"implemented":true,"kind":"function","modifiers":[],"name":"getAmountOut","nameLocation":"19059:12:15","nodeType":"FunctionDefinition","parameters":{"id":3635,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3630,"mutability":"mutable","name":"fromToken","nameLocation":"19080:9:15","nodeType":"VariableDeclaration","scope":3672,"src":"19072:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3629,"name":"address","nodeType":"ElementaryTypeName","src":"19072:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3632,"mutability":"mutable","name":"toToken","nameLocation":"19099:7:15","nodeType":"VariableDeclaration","scope":3672,"src":"19091:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3631,"name":"address","nodeType":"ElementaryTypeName","src":"19091:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3634,"mutability":"mutable","name":"amount","nameLocation":"19116:6:15","nodeType":"VariableDeclaration","scope":3672,"src":"19108:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3633,"name":"uint256","nodeType":"ElementaryTypeName","src":"19108:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"19071:52:15"},"returnParameters":{"id":3638,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3637,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3672,"src":"19145:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3636,"name":"uint256","nodeType":"ElementaryTypeName","src":"19145:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"19144:9:15"},"scope":4596,"src":"19050:389:15","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3693,"nodeType":"Block","src":"19662:116:15","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":3685,"name":"isRebalanceNeeded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4595,"src":"19681:17:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":3686,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19681:19:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"526562616c616e6365206e6f74206e6565646564","id":3687,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"19702:22:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_e4fcae9c0286e861087281117e0a3185ced905823104b290e1fe3ba826d8d280","typeString":"literal_string \"Rebalance not needed\""},"value":"Rebalance not needed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e4fcae9c0286e861087281117e0a3185ced905823104b290e1fe3ba826d8d280","typeString":"literal_string \"Rebalance not needed\""}],"id":3684,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"19673:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3688,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19673:52:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3689,"nodeType":"ExpressionStatement","src":"19673:52:15"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3690,"name":"_performRebalanceIfNeeded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4379,"src":"19743:25:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function () returns (uint256[] memory,uint256[] memory)"}},"id":3691,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19743:27:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256[] memory,uint256[] memory)"}},"functionReturnParameters":3683,"id":3692,"nodeType":"Return","src":"19736:34:15"}]},"documentation":{"id":3673,"nodeType":"StructuredDocumentation","src":"19447:44:15","text":" @dev Performs rebalance"},"functionSelector":"f47b45e8","id":3694,"implemented":true,"kind":"function","modifiers":[{"id":3676,"kind":"modifierInvocation","modifierName":{"id":3675,"name":"onlyPeriphery","nameLocations":["19560:13:15"],"nodeType":"IdentifierPath","referencedDeclaration":2443,"src":"19560:13:15"},"nodeType":"ModifierInvocation","src":"19560:13:15"}],"name":"performRebalanceIfNeeded","nameLocation":"19506:24:15","nodeType":"FunctionDefinition","parameters":{"id":3674,"nodeType":"ParameterList","parameters":[],"src":"19530:2:15"},"returnParameters":{"id":3683,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3679,"mutability":"mutable","name":"amountsToAdd","nameLocation":"19609:12:15","nodeType":"VariableDeclaration","scope":3694,"src":"19592:29:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3677,"name":"uint256","nodeType":"ElementaryTypeName","src":"19592:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3678,"nodeType":"ArrayTypeName","src":"19592:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3682,"mutability":"mutable","name":"amountsToRemove","nameLocation":"19640:15:15","nodeType":"VariableDeclaration","scope":3694,"src":"19623:32:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3680,"name":"uint256","nodeType":"ElementaryTypeName","src":"19623:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3681,"nodeType":"ArrayTypeName","src":"19623:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"19591:65:15"},"scope":4596,"src":"19497:281:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3801,"nodeType":"Block","src":"20163:764:15","statements":[{"assignments":[3705,3708],"declarations":[{"constant":false,"id":3705,"mutability":"mutable","name":"totVal","nameLocation":"20183:6:15","nodeType":"VariableDeclaration","scope":3801,"src":"20175:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3704,"name":"uint256","nodeType":"ElementaryTypeName","src":"20175:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3708,"mutability":"mutable","name":"valuations","nameLocation":"20208:10:15","nodeType":"VariableDeclaration","scope":3801,"src":"20191:27:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3706,"name":"uint256","nodeType":"ElementaryTypeName","src":"20191:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3707,"nodeType":"ArrayTypeName","src":"20191:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":3711,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":3709,"name":"_computeTotalValuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4149,"src":"20222:22:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function () view returns (uint256,uint256[] memory)"}},"id":3710,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20222:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256,uint256[] memory)"}},"nodeType":"VariableDeclarationStatement","src":"20174:72:15"},{"assignments":[3713],"declarations":[{"constant":false,"id":3713,"mutability":"mutable","name":"numAssets","nameLocation":"20265:9:15","nodeType":"VariableDeclaration","scope":3801,"src":"20257:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3712,"name":"uint256","nodeType":"ElementaryTypeName","src":"20257:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3716,"initialValue":{"expression":{"id":3714,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2234,"src":"20277:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2288_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20288:6:15","memberName":"length","nodeType":"MemberAccess","src":"20277:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"20257:37:15"},{"expression":{"id":3723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3717,"name":"directions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3699,"src":"20307:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3721,"name":"numAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3713,"src":"20331:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3720,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"20320:10:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bool_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bool[] memory)"},"typeName":{"baseType":{"id":3718,"name":"bool","nodeType":"ElementaryTypeName","src":"20324:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3719,"nodeType":"ArrayTypeName","src":"20324:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}}},"id":3722,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20320:21:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"src":"20307:34:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"id":3724,"nodeType":"ExpressionStatement","src":"20307:34:15"},{"expression":{"id":3731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3725,"name":"deviations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3702,"src":"20352:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3729,"name":"numAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3713,"src":"20379:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3728,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"20365:13:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":3726,"name":"uint256","nodeType":"ElementaryTypeName","src":"20369:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3727,"nodeType":"ArrayTypeName","src":"20369:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":3730,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20365:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"src":"20352:37:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3732,"nodeType":"ExpressionStatement","src":"20352:37:15"},{"body":{"id":3795,"nodeType":"Block","src":"20442:434:15","statements":[{"assignments":[3744],"declarations":[{"constant":false,"id":3744,"mutability":"mutable","name":"currentWeight","nameLocation":"20465:13:15","nodeType":"VariableDeclaration","scope":3795,"src":"20457:21:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3743,"name":"uint256","nodeType":"ElementaryTypeName","src":"20457:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3753,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":3745,"name":"valuations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3708,"src":"20482:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3747,"indexExpression":{"id":3746,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3734,"src":"20493:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20482:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3130303030","id":3748,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20498:5:15","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"src":"20482:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3750,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"20481:23:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3751,"name":"totVal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3705,"src":"20507:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20481:32:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"20457:56:15"},{"assignments":[3755],"declarations":[{"constant":false,"id":3755,"mutability":"mutable","name":"targetWeight","nameLocation":"20536:12:15","nodeType":"VariableDeclaration","scope":3795,"src":"20528:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3754,"name":"uint256","nodeType":"ElementaryTypeName","src":"20528:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3760,"initialValue":{"expression":{"baseExpression":{"id":3756,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2234,"src":"20551:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2288_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3758,"indexExpression":{"id":3757,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3734,"src":"20562:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20551:13:15","typeDescriptions":{"typeIdentifier":"t_struct$_AssetInfo_$2288_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref"}},"id":3759,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"20565:6:15","memberName":"weight","nodeType":"MemberAccess","referencedDeclaration":2285,"src":"20551:20:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"20528:43:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3761,"name":"currentWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3744,"src":"20592:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3762,"name":"targetWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3755,"src":"20608:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20592:28:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3793,"nodeType":"Block","src":"20746:119:15","statements":[{"expression":{"id":3785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3779,"name":"deviations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3702,"src":"20765:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3781,"indexExpression":{"id":3780,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3734,"src":"20776:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"20765:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3782,"name":"targetWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3755,"src":"20781:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3783,"name":"currentWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3744,"src":"20796:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20781:28:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20765:44:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3786,"nodeType":"ExpressionStatement","src":"20765:44:15"},{"expression":{"id":3791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3787,"name":"directions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3699,"src":"20828:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"id":3789,"indexExpression":{"id":3788,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3734,"src":"20839:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"20828:13:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":3790,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20844:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"20828:21:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3792,"nodeType":"ExpressionStatement","src":"20828:21:15"}]},"id":3794,"nodeType":"IfStatement","src":"20588:277:15","trueBody":{"id":3778,"nodeType":"Block","src":"20622:118:15","statements":[{"expression":{"id":3770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3764,"name":"deviations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3702,"src":"20641:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3766,"indexExpression":{"id":3765,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3734,"src":"20652:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"20641:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3767,"name":"currentWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3744,"src":"20657:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3768,"name":"targetWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3755,"src":"20673:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20657:28:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20641:44:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3771,"nodeType":"ExpressionStatement","src":"20641:44:15"},{"expression":{"id":3776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3772,"name":"directions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3699,"src":"20704:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"id":3774,"indexExpression":{"id":3773,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3734,"src":"20715:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"20704:13:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":3775,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20720:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"20704:20:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3777,"nodeType":"ExpressionStatement","src":"20704:20:15"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3737,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3734,"src":"20422:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3738,"name":"numAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3713,"src":"20426:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20422:13:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3796,"initializationExpression":{"assignments":[3734],"declarations":[{"constant":false,"id":3734,"mutability":"mutable","name":"i","nameLocation":"20415:1:15","nodeType":"VariableDeclaration","scope":3796,"src":"20407:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3733,"name":"uint256","nodeType":"ElementaryTypeName","src":"20407:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3736,"initialValue":{"hexValue":"30","id":3735,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20419:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"20407:13:15"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"20437:3:15","subExpression":{"id":3740,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3734,"src":"20437:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3742,"nodeType":"ExpressionStatement","src":"20437:3:15"},"nodeType":"ForStatement","src":"20402:474:15"},{"expression":{"components":[{"id":3797,"name":"directions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3699,"src":"20896:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},{"id":3798,"name":"deviations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3702,"src":"20908:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"id":3799,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"20895:24:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_bool_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(bool[] memory,uint256[] memory)"}},"functionReturnParameters":3703,"id":3800,"nodeType":"Return","src":"20888:31:15"}]},"documentation":{"id":3695,"nodeType":"StructuredDocumentation","src":"19786:271:15","text":" @dev Returns the deviation between the current weights and target weights of the assets in the pool.\n @return directions An array of boolean values indicating whether the current weight is higher (true) or lower (false) than the target weight."},"functionSelector":"89ab3532","id":3802,"implemented":true,"kind":"function","modifiers":[],"name":"getDeviation","nameLocation":"20072:12:15","nodeType":"FunctionDefinition","parameters":{"id":3696,"nodeType":"ParameterList","parameters":[],"src":"20084:2:15"},"returnParameters":{"id":3703,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3699,"mutability":"mutable","name":"directions","nameLocation":"20122:10:15","nodeType":"VariableDeclaration","scope":3802,"src":"20108:24:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":3697,"name":"bool","nodeType":"ElementaryTypeName","src":"20108:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3698,"nodeType":"ArrayTypeName","src":"20108:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":3702,"mutability":"mutable","name":"deviations","nameLocation":"20151:10:15","nodeType":"VariableDeclaration","scope":3802,"src":"20134:27:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3700,"name":"uint256","nodeType":"ElementaryTypeName","src":"20134:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3701,"nodeType":"ArrayTypeName","src":"20134:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"20107:55:15"},"scope":4596,"src":"20063:864:15","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3830,"nodeType":"Block","src":"21191:199:15","statements":[{"assignments":[null,3814],"declarations":[null,{"constant":false,"id":3814,"mutability":"mutable","name":"usdValuations","nameLocation":"21222:13:15","nodeType":"VariableDeclaration","scope":3830,"src":"21205:30:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3812,"name":"uint256","nodeType":"ElementaryTypeName","src":"21205:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3813,"nodeType":"ArrayTypeName","src":"21205:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":3817,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":3815,"name":"_computeTotalValuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4149,"src":"21239:22:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function () view returns (uint256,uint256[] memory)"}},"id":3816,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21239:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256,uint256[] memory)"}},"nodeType":"VariableDeclarationStatement","src":"21202:61:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3819,"name":"assetIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3805,"src":"21282:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3820,"name":"usdValuations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3814,"src":"21295:13:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"21309:6:15","memberName":"length","nodeType":"MemberAccess","src":"21295:20:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"21282:33:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420617373657420696e646578","id":3823,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"21317:21:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_f8b105b0b4a7ff5c11f41135d6d4600fd47da6168663f6cb1810745b08d83918","typeString":"literal_string \"Invalid asset index\""},"value":"Invalid asset index"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f8b105b0b4a7ff5c11f41135d6d4600fd47da6168663f6cb1810745b08d83918","typeString":"literal_string \"Invalid asset index\""}],"id":3818,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"21274:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3824,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21274:65:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3825,"nodeType":"ExpressionStatement","src":"21274:65:15"},{"expression":{"baseExpression":{"id":3826,"name":"usdValuations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3814,"src":"21357:13:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3828,"indexExpression":{"id":3827,"name":"assetIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3805,"src":"21371:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"21357:25:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3809,"id":3829,"nodeType":"Return","src":"21350:32:15"}]},"documentation":{"id":3803,"nodeType":"StructuredDocumentation","src":"20935:174:15","text":" @dev Returns the liquidity of a specific asset in the pool.\n @param assetIndex The index of the asset.\n @return The liquidity of the asset."},"functionSelector":"cf8fa764","id":3831,"implemented":true,"kind":"function","modifiers":[],"name":"assetLiquidity","nameLocation":"21124:14:15","nodeType":"FunctionDefinition","parameters":{"id":3806,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3805,"mutability":"mutable","name":"assetIndex","nameLocation":"21147:10:15","nodeType":"VariableDeclaration","scope":3831,"src":"21139:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3804,"name":"uint256","nodeType":"ElementaryTypeName","src":"21139:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"21138:20:15"},"returnParameters":{"id":3809,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3808,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3831,"src":"21182:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3807,"name":"uint256","nodeType":"ElementaryTypeName","src":"21182:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"21181:9:15"},"scope":4596,"src":"21115:275:15","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":3851,"nodeType":"Block","src":"21764:108:15","statements":[{"expression":{"id":3845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":3840,"name":"totalVal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3835,"src":"21776:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3841,"name":"valuations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3838,"src":"21786:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"id":3842,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"21775:22:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256,uint256[] memory)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"id":3843,"name":"_computeTotalValuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4149,"src":"21800:22:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function () view returns (uint256,uint256[] memory)"}},"id":3844,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21800:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256,uint256[] memory)"}},"src":"21775:49:15","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3846,"nodeType":"ExpressionStatement","src":"21775:49:15"},{"expression":{"components":[{"id":3847,"name":"totalVal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3835,"src":"21843:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3848,"name":"valuations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3838,"src":"21853:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"id":3849,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"21842:22:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256,uint256[] memory)"}},"functionReturnParameters":3839,"id":3850,"nodeType":"Return","src":"21835:29:15"}]},"documentation":{"id":3832,"nodeType":"StructuredDocumentation","src":"21398:257:15","text":" @dev Computes the total valuation of the pool and returns the total valuation and an array of individual valuations.\n @return totalVal The total valuation of the pool.\n @return valuations An array of individual valuations."},"functionSelector":"36bf6e39","id":3852,"implemented":true,"kind":"function","modifiers":[],"name":"computeTotalValuation","nameLocation":"21670:21:15","nodeType":"FunctionDefinition","parameters":{"id":3833,"nodeType":"ParameterList","parameters":[],"src":"21691:2:15"},"returnParameters":{"id":3839,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3835,"mutability":"mutable","name":"totalVal","nameLocation":"21725:8:15","nodeType":"VariableDeclaration","scope":3852,"src":"21717:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3834,"name":"uint256","nodeType":"ElementaryTypeName","src":"21717:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3838,"mutability":"mutable","name":"valuations","nameLocation":"21752:10:15","nodeType":"VariableDeclaration","scope":3852,"src":"21735:27:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3836,"name":"uint256","nodeType":"ElementaryTypeName","src":"21735:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3837,"nodeType":"ArrayTypeName","src":"21735:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"21716:47:15"},"scope":4596,"src":"21661:211:15","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":3865,"nodeType":"Block","src":"22054:92:15","statements":[{"assignments":[3859,null],"declarations":[{"constant":false,"id":3859,"mutability":"mutable","name":"totalVal","nameLocation":"22074:8:15","nodeType":"VariableDeclaration","scope":3865,"src":"22066:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3858,"name":"uint256","nodeType":"ElementaryTypeName","src":"22066:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},null],"id":3862,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":3860,"name":"_computeTotalValuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4149,"src":"22088:22:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function () view returns (uint256,uint256[] memory)"}},"id":3861,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22088:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256,uint256[] memory)"}},"nodeType":"VariableDeclarationStatement","src":"22065:47:15"},{"expression":{"id":3863,"name":"totalVal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3859,"src":"22130:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3857,"id":3864,"nodeType":"Return","src":"22123:15:15"}]},"documentation":{"id":3853,"nodeType":"StructuredDocumentation","src":"21880:115:15","text":" @dev Returns the total liquidity of the pool.\n @return The total liquidity of the pool."},"functionSelector":"1a686502","id":3866,"implemented":true,"kind":"function","modifiers":[],"name":"liquidity","nameLocation":"22010:9:15","nodeType":"FunctionDefinition","parameters":{"id":3854,"nodeType":"ParameterList","parameters":[],"src":"22019:2:15"},"returnParameters":{"id":3857,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3856,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3866,"src":"22045:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3855,"name":"uint256","nodeType":"ElementaryTypeName","src":"22045:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"22044:9:15"},"scope":4596,"src":"22001:145:15","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":3917,"nodeType":"Block","src":"22318:361:15","statements":[{"assignments":[3873],"declarations":[{"constant":false,"id":3873,"mutability":"mutable","name":"baseDecimal","nameLocation":"22337:11:15","nodeType":"VariableDeclaration","scope":3917,"src":"22329:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3872,"name":"uint256","nodeType":"ElementaryTypeName","src":"22329:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3879,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":3875,"name":"baseAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2243,"src":"22366:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3874,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1755,"src":"22351:14:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20Metadata_$1755_$","typeString":"type(contract IERC20Metadata)"}},"id":3876,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22351:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Metadata_$1755","typeString":"contract IERC20Metadata"}},"id":3877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"22377:8:15","memberName":"decimals","nodeType":"MemberAccess","referencedDeclaration":1754,"src":"22351:34:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint8_$","typeString":"function () view external returns (uint8)"}},"id":3878,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22351:36:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"22329:58:15"},{"assignments":[3881],"declarations":[{"constant":false,"id":3881,"mutability":"mutable","name":"factor","nameLocation":"22406:6:15","nodeType":"VariableDeclaration","scope":3917,"src":"22398:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3880,"name":"uint256","nodeType":"ElementaryTypeName","src":"22398:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3888,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3882,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22415:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3138","id":3883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22422:2:15","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3884,"name":"baseDecimal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3873,"src":"22427:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22422:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3886,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22421:18:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22415:24:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"22398:41:15"},{"assignments":[3890,null],"declarations":[{"constant":false,"id":3890,"mutability":"mutable","name":"totalVal","nameLocation":"22459:8:15","nodeType":"VariableDeclaration","scope":3917,"src":"22451:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3889,"name":"uint256","nodeType":"ElementaryTypeName","src":"22451:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},null],"id":3893,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":3891,"name":"_computeTotalValuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4149,"src":"22473:22:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function () view returns (uint256,uint256[] memory)"}},"id":3892,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22473:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256,uint256[] memory)"}},"nodeType":"VariableDeclarationStatement","src":"22450:47:15"},{"assignments":[3895],"declarations":[{"constant":false,"id":3895,"mutability":"mutable","name":"totalSupply","nameLocation":"22516:11:15","nodeType":"VariableDeclaration","scope":3917,"src":"22508:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3894,"name":"uint256","nodeType":"ElementaryTypeName","src":"22508:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3898,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":3896,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1224,"src":"22530:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":3897,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22530:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"22508:35:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3899,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3895,"src":"22558:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3900,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22573:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"22558:16:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3905,"nodeType":"IfStatement","src":"22554:57:15","trueBody":{"id":3904,"nodeType":"Block","src":"22576:35:15","statements":[{"expression":{"hexValue":"30","id":3902,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22598:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3871,"id":3903,"nodeType":"Return","src":"22591:8:15"}]}},{"expression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3906,"name":"totalVal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3890,"src":"22631:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3907,"name":"factor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3881,"src":"22642:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22631:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3909,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22630:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3910,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3895,"src":"22652:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22630:33:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3912,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22629:35:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3913,"name":"ONE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2241,"src":"22667:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22629:41:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3915,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22628:43:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3871,"id":3916,"nodeType":"Return","src":"22621:50:15"}]},"documentation":{"id":3867,"nodeType":"StructuredDocumentation","src":"22154:105:15","text":" @dev Returns the unit price of the pool.\n @return The unit price of the pool."},"functionSelector":"e73faa2d","id":3918,"implemented":true,"kind":"function","modifiers":[],"name":"unitPrice","nameLocation":"22274:9:15","nodeType":"FunctionDefinition","parameters":{"id":3868,"nodeType":"ParameterList","parameters":[],"src":"22283:2:15"},"returnParameters":{"id":3871,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3870,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3918,"src":"22309:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3869,"name":"uint256","nodeType":"ElementaryTypeName","src":"22309:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"22308:9:15"},"scope":4596,"src":"22265:414:15","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":3941,"nodeType":"Block","src":"22875:150:15","statements":[{"assignments":[3926],"declarations":[{"constant":false,"id":3926,"mutability":"mutable","name":"periphery","nameLocation":"22894:9:15","nodeType":"VariableDeclaration","scope":3941,"src":"22886:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3925,"name":"address","nodeType":"ElementaryTypeName","src":"22886:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3930,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3927,"name":"registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2248,"src":"22906:8:15","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$5472","typeString":"contract IBaluniV1Registry"}},"id":3928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"22915:22:15","memberName":"getBaluniPoolPeriphery","nodeType":"MemberAccess","referencedDeclaration":5406,"src":"22906:31:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":3929,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22906:33:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"22886:53:15"},{"expression":{"arguments":[{"arguments":[{"id":3937,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"23011:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Pool_$4596","typeString":"contract BaluniV1Pool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniV1Pool_$4596","typeString":"contract BaluniV1Pool"}],"id":3936,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23003:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3935,"name":"address","nodeType":"ElementaryTypeName","src":"23003:7:15","typeDescriptions":{}}},"id":3938,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23003:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":3932,"name":"periphery","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3926,"src":"22980:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3931,"name":"IBaluniV1PoolPeriphery","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5213,"src":"22957:22:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBaluniV1PoolPeriphery_$5213_$","typeString":"type(contract IBaluniV1PoolPeriphery)"}},"id":3933,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22957:33:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1PoolPeriphery_$5213","typeString":"contract IBaluniV1PoolPeriphery"}},"id":3934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"22991:11:15","memberName":"getReserves","nodeType":"MemberAccess","referencedDeclaration":5202,"src":"22957:45:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (address) view external returns (uint256[] memory)"}},"id":3939,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22957:60:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":3924,"id":3940,"nodeType":"Return","src":"22950:67:15"}]},"documentation":{"id":3919,"nodeType":"StructuredDocumentation","src":"22687:120:15","text":" @dev Returns an array of reserves for each asset in the pool.\n @return An array of reserves."},"functionSelector":"0902f1ac","id":3942,"implemented":true,"kind":"function","modifiers":[],"name":"getReserves","nameLocation":"22822:11:15","nodeType":"FunctionDefinition","parameters":{"id":3920,"nodeType":"ParameterList","parameters":[],"src":"22833:2:15"},"returnParameters":{"id":3924,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3923,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3942,"src":"22857:16:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3921,"name":"uint256","nodeType":"ElementaryTypeName","src":"22857:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3922,"nodeType":"ArrayTypeName","src":"22857:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"22856:18:15"},"scope":4596,"src":"22813:212:15","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3967,"nodeType":"Block","src":"23281:161:15","statements":[{"assignments":[3951],"declarations":[{"constant":false,"id":3951,"mutability":"mutable","name":"periphery","nameLocation":"23300:9:15","nodeType":"VariableDeclaration","scope":3967,"src":"23292:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3950,"name":"address","nodeType":"ElementaryTypeName","src":"23292:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3955,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3952,"name":"registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2248,"src":"23312:8:15","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$5472","typeString":"contract IBaluniV1Registry"}},"id":3953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23321:22:15","memberName":"getBaluniPoolPeriphery","nodeType":"MemberAccess","referencedDeclaration":5406,"src":"23312:31:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":3954,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23312:33:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"23292:53:15"},{"expression":{"arguments":[{"arguments":[{"id":3962,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"23421:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Pool_$4596","typeString":"contract BaluniV1Pool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniV1Pool_$4596","typeString":"contract BaluniV1Pool"}],"id":3961,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23413:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3960,"name":"address","nodeType":"ElementaryTypeName","src":"23413:7:15","typeDescriptions":{}}},"id":3963,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23413:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3964,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3945,"src":"23428:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":3957,"name":"periphery","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3951,"src":"23386:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3956,"name":"IBaluniV1PoolPeriphery","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5213,"src":"23363:22:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBaluniV1PoolPeriphery_$5213_$","typeString":"type(contract IBaluniV1PoolPeriphery)"}},"id":3958,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23363:33:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1PoolPeriphery_$5213","typeString":"contract IBaluniV1PoolPeriphery"}},"id":3959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23397:15:15","memberName":"getAssetReserve","nodeType":"MemberAccess","referencedDeclaration":5212,"src":"23363:49:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":3965,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23363:71:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3949,"id":3966,"nodeType":"Return","src":"23356:78:15"}]},"documentation":{"id":3943,"nodeType":"StructuredDocumentation","src":"23033:172:15","text":" @dev Returns the reserve amount of the specified asset.\n @param asset The address of the asset.\n @return The reserve amount of the asset."},"functionSelector":"b2b55d70","id":3968,"implemented":true,"kind":"function","modifiers":[],"name":"getAssetReserve","nameLocation":"23220:15:15","nodeType":"FunctionDefinition","parameters":{"id":3946,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3945,"mutability":"mutable","name":"asset","nameLocation":"23244:5:15","nodeType":"VariableDeclaration","scope":3968,"src":"23236:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3944,"name":"address","nodeType":"ElementaryTypeName","src":"23236:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"23235:15:15"},"returnParameters":{"id":3949,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3948,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3968,"src":"23272:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3947,"name":"uint256","nodeType":"ElementaryTypeName","src":"23272:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23271:9:15"},"scope":4596,"src":"23211:231:15","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":4011,"nodeType":"Block","src":"23648:217:15","statements":[{"assignments":[3979],"declarations":[{"constant":false,"id":3979,"mutability":"mutable","name":"assets","nameLocation":"23676:6:15","nodeType":"VariableDeclaration","scope":4011,"src":"23659:23:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3977,"name":"address","nodeType":"ElementaryTypeName","src":"23659:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3978,"nodeType":"ArrayTypeName","src":"23659:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":3986,"initialValue":{"arguments":[{"expression":{"id":3983,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2234,"src":"23699:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2288_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23710:6:15","memberName":"length","nodeType":"MemberAccess","src":"23699:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3982,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"23685:13:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address[] memory)"},"typeName":{"baseType":{"id":3980,"name":"address","nodeType":"ElementaryTypeName","src":"23689:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3981,"nodeType":"ArrayTypeName","src":"23689:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"id":3985,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23685:32:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"23659:58:15"},{"body":{"id":4007,"nodeType":"Block","src":"23776:58:15","statements":[{"expression":{"id":4005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3998,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3979,"src":"23791:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4000,"indexExpression":{"id":3999,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3988,"src":"23798:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"23791:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":4001,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2234,"src":"23803:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2288_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":4003,"indexExpression":{"id":4002,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3988,"src":"23814:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"23803:13:15","typeDescriptions":{"typeIdentifier":"t_struct$_AssetInfo_$2288_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref"}},"id":4004,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"23817:5:15","memberName":"asset","nodeType":"MemberAccess","referencedDeclaration":2283,"src":"23803:19:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"23791:31:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4006,"nodeType":"ExpressionStatement","src":"23791:31:15"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3991,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3988,"src":"23748:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3992,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2234,"src":"23752:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2288_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23763:6:15","memberName":"length","nodeType":"MemberAccess","src":"23752:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23748:21:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4008,"initializationExpression":{"assignments":[3988],"declarations":[{"constant":false,"id":3988,"mutability":"mutable","name":"i","nameLocation":"23741:1:15","nodeType":"VariableDeclaration","scope":4008,"src":"23733:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3987,"name":"uint256","nodeType":"ElementaryTypeName","src":"23733:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3990,"initialValue":{"hexValue":"30","id":3989,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23745:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"23733:13:15"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"23771:3:15","subExpression":{"id":3995,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3988,"src":"23771:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3997,"nodeType":"ExpressionStatement","src":"23771:3:15"},"nodeType":"ForStatement","src":"23728:106:15"},{"expression":{"id":4009,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3979,"src":"23851:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":3974,"id":4010,"nodeType":"Return","src":"23844:13:15"}]},"documentation":{"id":3969,"nodeType":"StructuredDocumentation","src":"23450:130:15","text":" @dev Retrieves the list of assets in the pool.\n @return An array of addresses representing the assets."},"functionSelector":"67e4ac2c","id":4012,"implemented":true,"kind":"function","modifiers":[],"name":"getAssets","nameLocation":"23595:9:15","nodeType":"FunctionDefinition","parameters":{"id":3970,"nodeType":"ParameterList","parameters":[],"src":"23604:2:15"},"returnParameters":{"id":3974,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3973,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4012,"src":"23630:16:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3971,"name":"address","nodeType":"ElementaryTypeName","src":"23630:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3972,"nodeType":"ArrayTypeName","src":"23630:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"23629:18:15"},"scope":4596,"src":"23586:279:15","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":4055,"nodeType":"Block","src":"24106:221:15","statements":[{"assignments":[4023],"declarations":[{"constant":false,"id":4023,"mutability":"mutable","name":"weights","nameLocation":"24134:7:15","nodeType":"VariableDeclaration","scope":4055,"src":"24117:24:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4021,"name":"uint256","nodeType":"ElementaryTypeName","src":"24117:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4022,"nodeType":"ArrayTypeName","src":"24117:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":4030,"initialValue":{"arguments":[{"expression":{"id":4027,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2234,"src":"24158:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2288_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":4028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24169:6:15","memberName":"length","nodeType":"MemberAccess","src":"24158:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4026,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"24144:13:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":4024,"name":"uint256","nodeType":"ElementaryTypeName","src":"24148:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4025,"nodeType":"ArrayTypeName","src":"24148:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":4029,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24144:32:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"24117:59:15"},{"body":{"id":4051,"nodeType":"Block","src":"24235:60:15","statements":[{"expression":{"id":4049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4042,"name":"weights","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4023,"src":"24250:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":4044,"indexExpression":{"id":4043,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4032,"src":"24258:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"24250:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":4045,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2234,"src":"24263:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2288_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":4047,"indexExpression":{"id":4046,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4032,"src":"24274:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"24263:13:15","typeDescriptions":{"typeIdentifier":"t_struct$_AssetInfo_$2288_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref"}},"id":4048,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"24277:6:15","memberName":"weight","nodeType":"MemberAccess","referencedDeclaration":2285,"src":"24263:20:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24250:33:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4050,"nodeType":"ExpressionStatement","src":"24250:33:15"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4035,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4032,"src":"24207:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4036,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2234,"src":"24211:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2288_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":4037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24222:6:15","memberName":"length","nodeType":"MemberAccess","src":"24211:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24207:21:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4052,"initializationExpression":{"assignments":[4032],"declarations":[{"constant":false,"id":4032,"mutability":"mutable","name":"i","nameLocation":"24200:1:15","nodeType":"VariableDeclaration","scope":4052,"src":"24192:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4031,"name":"uint256","nodeType":"ElementaryTypeName","src":"24192:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4034,"initialValue":{"hexValue":"30","id":4033,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24204:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"24192:13:15"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"24230:3:15","subExpression":{"id":4039,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4032,"src":"24230:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4041,"nodeType":"ExpressionStatement","src":"24230:3:15"},"nodeType":"ForStatement","src":"24187:108:15"},{"expression":{"id":4053,"name":"weights","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4023,"src":"24312:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":4018,"id":4054,"nodeType":"Return","src":"24305:14:15"}]},"documentation":{"id":4013,"nodeType":"StructuredDocumentation","src":"23873:164:15","text":" @dev Retrieves the list of weights associated with the assets in the pool.\n @return An array of uint256 values representing the weights."},"functionSelector":"22acb867","id":4056,"implemented":true,"kind":"function","modifiers":[],"name":"getWeights","nameLocation":"24052:10:15","nodeType":"FunctionDefinition","parameters":{"id":4014,"nodeType":"ParameterList","parameters":[],"src":"24062:2:15"},"returnParameters":{"id":4018,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4017,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4056,"src":"24088:16:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4015,"name":"uint256","nodeType":"ElementaryTypeName","src":"24088:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4016,"nodeType":"ArrayTypeName","src":"24088:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"24087:18:15"},"scope":4596,"src":"24043:284:15","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":4148,"nodeType":"Block","src":"24676:645:15","statements":[{"assignments":[4066],"declarations":[{"constant":false,"id":4066,"mutability":"mutable","name":"numAssets","nameLocation":"24695:9:15","nodeType":"VariableDeclaration","scope":4148,"src":"24687:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4065,"name":"uint256","nodeType":"ElementaryTypeName","src":"24687:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4069,"initialValue":{"expression":{"id":4067,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2234,"src":"24707:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2288_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":4068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24718:6:15","memberName":"length","nodeType":"MemberAccess","src":"24707:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"24687:37:15"},{"expression":{"id":4076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4070,"name":"valuations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4063,"src":"24735:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4074,"name":"numAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4066,"src":"24762:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4073,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"24748:13:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":4071,"name":"uint256","nodeType":"ElementaryTypeName","src":"24752:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4072,"nodeType":"ArrayTypeName","src":"24752:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":4075,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24748:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"src":"24735:37:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":4077,"nodeType":"ExpressionStatement","src":"24735:37:15"},{"body":{"id":4142,"nodeType":"Block","src":"24823:445:15","statements":[{"assignments":[4089],"declarations":[{"constant":false,"id":4089,"mutability":"mutable","name":"asset","nameLocation":"24846:5:15","nodeType":"VariableDeclaration","scope":4142,"src":"24838:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4088,"name":"address","nodeType":"ElementaryTypeName","src":"24838:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4094,"initialValue":{"expression":{"baseExpression":{"id":4090,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2234,"src":"24854:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2288_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":4092,"indexExpression":{"id":4091,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4079,"src":"24865:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"24854:13:15","typeDescriptions":{"typeIdentifier":"t_struct$_AssetInfo_$2288_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref"}},"id":4093,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"24868:5:15","memberName":"asset","nodeType":"MemberAccess","referencedDeclaration":2283,"src":"24854:19:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"24838:35:15"},{"assignments":[4096],"declarations":[{"constant":false,"id":4096,"mutability":"mutable","name":"assetReserve","nameLocation":"24896:12:15","nodeType":"VariableDeclaration","scope":4142,"src":"24888:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4095,"name":"uint256","nodeType":"ElementaryTypeName","src":"24888:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4103,"initialValue":{"arguments":[{"arguments":[{"id":4100,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4089,"src":"24935:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4099,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24927:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4098,"name":"address","nodeType":"ElementaryTypeName","src":"24927:7:15","typeDescriptions":{}}},"id":4101,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24927:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4097,"name":"getAssetReserve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3968,"src":"24911:15:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":4102,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24911:31:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"24888:54:15"},{"condition":{"components":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4106,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4089,"src":"24972:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4105,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24964:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4104,"name":"address","nodeType":"ElementaryTypeName","src":"24964:7:15","typeDescriptions":{}}},"id":4107,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24964:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4108,"name":"baseAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2243,"src":"24982:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"24964:27:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":4110,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24963:29:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4134,"nodeType":"Block","src":"25063:148:15","statements":[{"assignments":[4119],"declarations":[{"constant":false,"id":4119,"mutability":"mutable","name":"valuation","nameLocation":"25090:9:15","nodeType":"VariableDeclaration","scope":4134,"src":"25082:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4118,"name":"uint256","nodeType":"ElementaryTypeName","src":"25082:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4127,"initialValue":{"arguments":[{"arguments":[{"id":4123,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4089,"src":"25130:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4122,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25122:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4121,"name":"address","nodeType":"ElementaryTypeName","src":"25122:7:15","typeDescriptions":{}}},"id":4124,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25122:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4125,"name":"assetReserve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4096,"src":"25138:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4120,"name":"_convertTokenToBase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4549,"src":"25102:19:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view returns (uint256)"}},"id":4126,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25102:49:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"25082:69:15"},{"expression":{"id":4132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4128,"name":"valuations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4063,"src":"25170:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":4130,"indexExpression":{"id":4129,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4079,"src":"25181:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"25170:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4131,"name":"valuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4119,"src":"25186:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25170:25:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4133,"nodeType":"ExpressionStatement","src":"25170:25:15"}]},"id":4135,"nodeType":"IfStatement","src":"24959:252:15","trueBody":{"id":4117,"nodeType":"Block","src":"24994:63:15","statements":[{"expression":{"id":4115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4111,"name":"valuations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4063,"src":"25013:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":4113,"indexExpression":{"id":4112,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4079,"src":"25024:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"25013:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4114,"name":"assetReserve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4096,"src":"25029:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25013:28:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4116,"nodeType":"ExpressionStatement","src":"25013:28:15"}]}},{"expression":{"id":4140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4136,"name":"totalValuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4060,"src":"25225:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"baseExpression":{"id":4137,"name":"valuations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4063,"src":"25243:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":4139,"indexExpression":{"id":4138,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4079,"src":"25254:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"25243:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25225:31:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4141,"nodeType":"ExpressionStatement","src":"25225:31:15"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4082,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4079,"src":"24803:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4083,"name":"numAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4066,"src":"24807:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24803:13:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4143,"initializationExpression":{"assignments":[4079],"declarations":[{"constant":false,"id":4079,"mutability":"mutable","name":"i","nameLocation":"24796:1:15","nodeType":"VariableDeclaration","scope":4143,"src":"24788:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4078,"name":"uint256","nodeType":"ElementaryTypeName","src":"24788:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4081,"initialValue":{"hexValue":"30","id":4080,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24800:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"24788:13:15"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"24818:3:15","subExpression":{"id":4085,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4079,"src":"24818:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4087,"nodeType":"ExpressionStatement","src":"24818:3:15"},"nodeType":"ForStatement","src":"24783:485:15"},{"expression":{"components":[{"id":4144,"name":"totalValuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4060,"src":"25286:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4145,"name":"valuations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4063,"src":"25302:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"id":4146,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25285:28:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256,uint256[] memory)"}},"functionReturnParameters":4064,"id":4147,"nodeType":"Return","src":"25278:35:15"}]},"documentation":{"id":4057,"nodeType":"StructuredDocumentation","src":"24335:225:15","text":" @dev Computes the total valuation of the assets in the pool.\n @return totalValuation The total valuation of the assets.\n @return valuations An array of valuations for each asset in the pool."},"id":4149,"implemented":true,"kind":"function","modifiers":[],"name":"_computeTotalValuation","nameLocation":"24575:22:15","nodeType":"FunctionDefinition","parameters":{"id":4058,"nodeType":"ParameterList","parameters":[],"src":"24597:2:15"},"returnParameters":{"id":4064,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4060,"mutability":"mutable","name":"totalValuation","nameLocation":"24631:14:15","nodeType":"VariableDeclaration","scope":4149,"src":"24623:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4059,"name":"uint256","nodeType":"ElementaryTypeName","src":"24623:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4063,"mutability":"mutable","name":"valuations","nameLocation":"24664:10:15","nodeType":"VariableDeclaration","scope":4149,"src":"24647:27:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4061,"name":"uint256","nodeType":"ElementaryTypeName","src":"24647:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4062,"nodeType":"ArrayTypeName","src":"24647:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"24622:53:15"},"scope":4596,"src":"24566:755:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4378,"nodeType":"Block","src":"25808:1563:15","statements":[{"assignments":[4160],"declarations":[{"constant":false,"id":4160,"mutability":"mutable","name":"periphery","nameLocation":"25827:9:15","nodeType":"VariableDeclaration","scope":4378,"src":"25819:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4159,"name":"address","nodeType":"ElementaryTypeName","src":"25819:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4164,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4161,"name":"registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2248,"src":"25839:8:15","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$5472","typeString":"contract IBaluniV1Registry"}},"id":4162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25848:22:15","memberName":"getBaluniPoolPeriphery","nodeType":"MemberAccess","referencedDeclaration":5406,"src":"25839:31:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":4163,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25839:33:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"25819:53:15"},{"assignments":[4166],"declarations":[{"constant":false,"id":4166,"mutability":"mutable","name":"rebalancer","nameLocation":"25891:10:15","nodeType":"VariableDeclaration","scope":4378,"src":"25883:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4165,"name":"address","nodeType":"ElementaryTypeName","src":"25883:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4170,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4167,"name":"registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2248,"src":"25904:8:15","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$5472","typeString":"contract IBaluniV1Registry"}},"id":4168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25913:19:15","memberName":"getBaluniRebalancer","nodeType":"MemberAccess","referencedDeclaration":5416,"src":"25904:28:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":4169,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25904:30:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"25883:51:15"},{"assignments":[4175],"declarations":[{"constant":false,"id":4175,"mutability":"mutable","name":"assets","nameLocation":"25964:6:15","nodeType":"VariableDeclaration","scope":4378,"src":"25947:23:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4173,"name":"address","nodeType":"ElementaryTypeName","src":"25947:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4174,"nodeType":"ArrayTypeName","src":"25947:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":4182,"initialValue":{"arguments":[{"expression":{"id":4179,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2234,"src":"25987:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2288_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":4180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25998:6:15","memberName":"length","nodeType":"MemberAccess","src":"25987:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4178,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"25973:13:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address[] memory)"},"typeName":{"baseType":{"id":4176,"name":"address","nodeType":"ElementaryTypeName","src":"25977:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4177,"nodeType":"ArrayTypeName","src":"25977:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"id":4181,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25973:32:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"25947:58:15"},{"assignments":[4187],"declarations":[{"constant":false,"id":4187,"mutability":"mutable","name":"weights","nameLocation":"26033:7:15","nodeType":"VariableDeclaration","scope":4378,"src":"26016:24:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4185,"name":"uint256","nodeType":"ElementaryTypeName","src":"26016:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4186,"nodeType":"ArrayTypeName","src":"26016:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":4194,"initialValue":{"arguments":[{"expression":{"id":4191,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2234,"src":"26057:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2288_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":4192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26068:6:15","memberName":"length","nodeType":"MemberAccess","src":"26057:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4190,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"26043:13:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":4188,"name":"uint256","nodeType":"ElementaryTypeName","src":"26047:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4189,"nodeType":"ArrayTypeName","src":"26047:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":4193,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26043:32:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"26016:59:15"},{"assignments":[4199],"declarations":[{"constant":false,"id":4199,"mutability":"mutable","name":"peripheryBalancesB4","nameLocation":"26103:19:15","nodeType":"VariableDeclaration","scope":4378,"src":"26086:36:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4197,"name":"uint256","nodeType":"ElementaryTypeName","src":"26086:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4198,"nodeType":"ArrayTypeName","src":"26086:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":4206,"initialValue":{"arguments":[{"expression":{"id":4203,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2234,"src":"26139:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2288_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":4204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26150:6:15","memberName":"length","nodeType":"MemberAccess","src":"26139:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4202,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"26125:13:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":4200,"name":"uint256","nodeType":"ElementaryTypeName","src":"26129:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4201,"nodeType":"ArrayTypeName","src":"26129:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":4205,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26125:32:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"26086:71:15"},{"assignments":[4211],"declarations":[{"constant":false,"id":4211,"mutability":"mutable","name":"peripheryBalancesAfter","nameLocation":"26185:22:15","nodeType":"VariableDeclaration","scope":4378,"src":"26168:39:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4209,"name":"uint256","nodeType":"ElementaryTypeName","src":"26168:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4210,"nodeType":"ArrayTypeName","src":"26168:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":4218,"initialValue":{"arguments":[{"expression":{"id":4215,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2234,"src":"26224:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2288_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":4216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26235:6:15","memberName":"length","nodeType":"MemberAccess","src":"26224:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4214,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"26210:13:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":4212,"name":"uint256","nodeType":"ElementaryTypeName","src":"26214:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4213,"nodeType":"ArrayTypeName","src":"26214:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":4217,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26210:32:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"26168:74:15"},{"assignments":[4223],"declarations":[{"constant":false,"id":4223,"mutability":"mutable","name":"amountsToAdd","nameLocation":"26270:12:15","nodeType":"VariableDeclaration","scope":4378,"src":"26253:29:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4221,"name":"uint256","nodeType":"ElementaryTypeName","src":"26253:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4222,"nodeType":"ArrayTypeName","src":"26253:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":4230,"initialValue":{"arguments":[{"expression":{"id":4227,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2234,"src":"26299:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2288_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":4228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26310:6:15","memberName":"length","nodeType":"MemberAccess","src":"26299:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4226,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"26285:13:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":4224,"name":"uint256","nodeType":"ElementaryTypeName","src":"26289:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4225,"nodeType":"ArrayTypeName","src":"26289:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":4229,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26285:32:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"26253:64:15"},{"assignments":[4235],"declarations":[{"constant":false,"id":4235,"mutability":"mutable","name":"amountsToRemove","nameLocation":"26345:15:15","nodeType":"VariableDeclaration","scope":4378,"src":"26328:32:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4233,"name":"uint256","nodeType":"ElementaryTypeName","src":"26328:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4234,"nodeType":"ArrayTypeName","src":"26328:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":4242,"initialValue":{"arguments":[{"expression":{"id":4239,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2234,"src":"26377:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2288_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":4240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26388:6:15","memberName":"length","nodeType":"MemberAccess","src":"26377:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4238,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"26363:13:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":4236,"name":"uint256","nodeType":"ElementaryTypeName","src":"26367:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4237,"nodeType":"ArrayTypeName","src":"26367:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":4241,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26363:32:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"26328:67:15"},{"body":{"id":4285,"nodeType":"Block","src":"26456:184:15","statements":[{"expression":{"id":4261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4254,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4175,"src":"26471:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4256,"indexExpression":{"id":4255,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4244,"src":"26478:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"26471:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":4257,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2234,"src":"26483:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2288_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":4259,"indexExpression":{"id":4258,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4244,"src":"26494:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"26483:13:15","typeDescriptions":{"typeIdentifier":"t_struct$_AssetInfo_$2288_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref"}},"id":4260,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"26497:5:15","memberName":"asset","nodeType":"MemberAccess","referencedDeclaration":2283,"src":"26483:19:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"26471:31:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4262,"nodeType":"ExpressionStatement","src":"26471:31:15"},{"expression":{"id":4270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4263,"name":"weights","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4187,"src":"26517:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":4265,"indexExpression":{"id":4264,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4244,"src":"26525:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"26517:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":4266,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2234,"src":"26530:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2288_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":4268,"indexExpression":{"id":4267,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4244,"src":"26541:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"26530:13:15","typeDescriptions":{"typeIdentifier":"t_struct$_AssetInfo_$2288_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref"}},"id":4269,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"26544:6:15","memberName":"weight","nodeType":"MemberAccess","referencedDeclaration":2285,"src":"26530:20:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26517:33:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4271,"nodeType":"ExpressionStatement","src":"26517:33:15"},{"expression":{"id":4283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4272,"name":"peripheryBalancesB4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4199,"src":"26565:19:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":4274,"indexExpression":{"id":4273,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4244,"src":"26585:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"26565:22:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4281,"name":"periphery","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4160,"src":"26618:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"baseExpression":{"id":4276,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4175,"src":"26597:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4278,"indexExpression":{"id":4277,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4244,"src":"26604:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"26597:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4275,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1729,"src":"26590:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1729_$","typeString":"type(contract IERC20)"}},"id":4279,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26590:17:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"}},"id":4280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26608:9:15","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":1686,"src":"26590:27:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":4282,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26590:38:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26565:63:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4284,"nodeType":"ExpressionStatement","src":"26565:63:15"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4247,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4244,"src":"26428:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4248,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2234,"src":"26432:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2288_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":4249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26443:6:15","memberName":"length","nodeType":"MemberAccess","src":"26432:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26428:21:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4286,"initializationExpression":{"assignments":[4244],"declarations":[{"constant":false,"id":4244,"mutability":"mutable","name":"i","nameLocation":"26421:1:15","nodeType":"VariableDeclaration","scope":4286,"src":"26413:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4243,"name":"uint256","nodeType":"ElementaryTypeName","src":"26413:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4246,"initialValue":{"hexValue":"30","id":4245,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26425:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"26413:13:15"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"26451:3:15","subExpression":{"id":4251,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4244,"src":"26451:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4253,"nodeType":"ExpressionStatement","src":"26451:3:15"},"nodeType":"ForStatement","src":"26408:232:15"},{"assignments":[4291],"declarations":[{"constant":false,"id":4291,"mutability":"mutable","name":"balances","nameLocation":"26669:8:15","nodeType":"VariableDeclaration","scope":4378,"src":"26652:25:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4289,"name":"uint256","nodeType":"ElementaryTypeName","src":"26652:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4290,"nodeType":"ArrayTypeName","src":"26652:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":4294,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":4292,"name":"getReserves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3942,"src":"26680:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function () view returns (uint256[] memory)"}},"id":4293,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26680:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"26652:41:15"},{"expression":{"arguments":[{"id":4299,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4291,"src":"26748:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":4300,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4175,"src":"26758:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},{"id":4301,"name":"weights","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4187,"src":"26766:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":4302,"name":"trigger","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2239,"src":"26775:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4303,"name":"periphery","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4160,"src":"26784:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4304,"name":"periphery","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4160,"src":"26795:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4305,"name":"baseAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2243,"src":"26806:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":4296,"name":"rebalancer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4166,"src":"26726:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4295,"name":"IBaluniV1Rebalancer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5298,"src":"26706:19:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBaluniV1Rebalancer_$5298_$","typeString":"type(contract IBaluniV1Rebalancer)"}},"id":4297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26706:31:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Rebalancer_$5298","typeString":"contract IBaluniV1Rebalancer"}},"id":4298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26738:9:15","memberName":"rebalance","nodeType":"MemberAccess","referencedDeclaration":5265,"src":"26706:41:15","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_address_$_t_address_$_t_address_$returns$__$","typeString":"function (uint256[] memory,address[] memory,uint256[] memory,uint256,address,address,address) external"}},"id":4306,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26706:110:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4307,"nodeType":"ExpressionStatement","src":"26706:110:15"},{"body":{"id":4366,"nodeType":"Block","src":"26877:380:15","statements":[{"expression":{"id":4330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4319,"name":"peripheryBalancesAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4211,"src":"26892:22:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":4321,"indexExpression":{"id":4320,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4309,"src":"26915:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"26892:25:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4328,"name":"periphery","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4160,"src":"26948:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"baseExpression":{"id":4323,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4175,"src":"26927:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4325,"indexExpression":{"id":4324,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4309,"src":"26934:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"26927:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4322,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1729,"src":"26920:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1729_$","typeString":"type(contract IERC20)"}},"id":4326,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26920:17:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"}},"id":4327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26938:9:15","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":1686,"src":"26920:27:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":4329,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26920:38:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26892:66:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4331,"nodeType":"ExpressionStatement","src":"26892:66:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":4332,"name":"peripheryBalancesAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4211,"src":"26979:22:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":4334,"indexExpression":{"id":4333,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4309,"src":"27002:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"26979:25:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"baseExpression":{"id":4335,"name":"peripheryBalancesB4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4199,"src":"27007:19:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":4337,"indexExpression":{"id":4336,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4309,"src":"27027:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"27007:22:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26979:50:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4364,"nodeType":"Block","src":"27140:106:15","statements":[{"expression":{"id":4362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4352,"name":"amountsToRemove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4235,"src":"27159:15:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":4354,"indexExpression":{"id":4353,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4309,"src":"27175:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"27159:18:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":4355,"name":"peripheryBalancesB4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4199,"src":"27180:19:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":4357,"indexExpression":{"id":4356,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4309,"src":"27200:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"27180:22:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"baseExpression":{"id":4358,"name":"peripheryBalancesAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4211,"src":"27205:22:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":4360,"indexExpression":{"id":4359,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4309,"src":"27228:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"27205:25:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27180:50:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27159:71:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4363,"nodeType":"ExpressionStatement","src":"27159:71:15"}]},"id":4365,"nodeType":"IfStatement","src":"26975:271:15","trueBody":{"id":4351,"nodeType":"Block","src":"27031:103:15","statements":[{"expression":{"id":4349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4339,"name":"amountsToAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4223,"src":"27050:12:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":4341,"indexExpression":{"id":4340,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4309,"src":"27063:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"27050:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":4342,"name":"peripheryBalancesAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4211,"src":"27068:22:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":4344,"indexExpression":{"id":4343,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4309,"src":"27091:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"27068:25:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"baseExpression":{"id":4345,"name":"peripheryBalancesB4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4199,"src":"27096:19:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":4347,"indexExpression":{"id":4346,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4309,"src":"27116:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"27096:22:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27068:50:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27050:68:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4350,"nodeType":"ExpressionStatement","src":"27050:68:15"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4312,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4309,"src":"26849:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4313,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2234,"src":"26853:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2288_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":4314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26864:6:15","memberName":"length","nodeType":"MemberAccess","src":"26853:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26849:21:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4367,"initializationExpression":{"assignments":[4309],"declarations":[{"constant":false,"id":4309,"mutability":"mutable","name":"i","nameLocation":"26842:1:15","nodeType":"VariableDeclaration","scope":4367,"src":"26834:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4308,"name":"uint256","nodeType":"ElementaryTypeName","src":"26834:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4311,"initialValue":{"hexValue":"30","id":4310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26846:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"26834:13:15"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"26872:3:15","subExpression":{"id":4316,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4309,"src":"26872:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4318,"nodeType":"ExpressionStatement","src":"26872:3:15"},"nodeType":"ForStatement","src":"26829:428:15"},{"eventCall":{"arguments":[{"expression":{"id":4369,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"27293:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27297:6:15","memberName":"sender","nodeType":"MemberAccess","src":"27293:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4371,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4175,"src":"27305:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}],"id":4368,"name":"RebalancePerformed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2295,"src":"27274:18:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_array$_t_address_$dyn_memory_ptr_$returns$__$","typeString":"function (address,address[] memory)"}},"id":4372,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27274:38:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4373,"nodeType":"EmitStatement","src":"27269:43:15"},{"expression":{"components":[{"id":4374,"name":"amountsToAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4223,"src":"27333:12:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":4375,"name":"amountsToRemove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4235,"src":"27347:15:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"id":4376,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"27332:31:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256[] memory,uint256[] memory)"}},"functionReturnParameters":4158,"id":4377,"nodeType":"Return","src":"27325:38:15"}]},"documentation":{"id":4150,"nodeType":"StructuredDocumentation","src":"25329:382:15","text":" @dev Performs rebalance if needed.\n This function retrieves the assets and weights from the `assetInfos` array,\n and calls the `rebalance` function of the `rebalancer` contract with the retrieved values.\n It emits a `RebalancePerformed` event after the rebalance is performed.\n @notice This function should only be called internally."},"id":4379,"implemented":true,"kind":"function","modifiers":[],"name":"_performRebalanceIfNeeded","nameLocation":"25726:25:15","nodeType":"FunctionDefinition","parameters":{"id":4151,"nodeType":"ParameterList","parameters":[],"src":"25751:2:15"},"returnParameters":{"id":4158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4154,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4379,"src":"25772:16:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4152,"name":"uint256","nodeType":"ElementaryTypeName","src":"25772:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4153,"nodeType":"ArrayTypeName","src":"25772:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":4157,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4379,"src":"25790:16:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4155,"name":"uint256","nodeType":"ElementaryTypeName","src":"25790:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4156,"nodeType":"ArrayTypeName","src":"25790:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"25771:36:15"},"scope":4596,"src":"25717:1654:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4409,"nodeType":"Block","src":"27748:168:15","statements":[{"body":{"id":4405,"nodeType":"Block","src":"27807:65:15","statements":[{"expression":{"id":4403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4399,"name":"totalAddedLiquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4386,"src":"27822:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"baseExpression":{"id":4400,"name":"amountsToAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4383,"src":"27845:12:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":4402,"indexExpression":{"id":4401,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4389,"src":"27858:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"27845:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27822:38:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4404,"nodeType":"ExpressionStatement","src":"27822:38:15"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4392,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4389,"src":"27779:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4393,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2234,"src":"27783:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2288_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":4394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27794:6:15","memberName":"length","nodeType":"MemberAccess","src":"27783:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27779:21:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4406,"initializationExpression":{"assignments":[4389],"declarations":[{"constant":false,"id":4389,"mutability":"mutable","name":"i","nameLocation":"27772:1:15","nodeType":"VariableDeclaration","scope":4406,"src":"27764:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4388,"name":"uint256","nodeType":"ElementaryTypeName","src":"27764:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4391,"initialValue":{"hexValue":"30","id":4390,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27776:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"27764:13:15"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"27802:3:15","subExpression":{"id":4396,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4389,"src":"27802:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4398,"nodeType":"ExpressionStatement","src":"27802:3:15"},"nodeType":"ForStatement","src":"27759:113:15"},{"expression":{"id":4407,"name":"totalAddedLiquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4386,"src":"27889:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4387,"id":4408,"nodeType":"Return","src":"27882:26:15"}]},"documentation":{"id":4380,"nodeType":"StructuredDocumentation","src":"27379:225:15","text":" @dev Calculates the total added liquidity based on the amounts to add.\n @param amountsToAdd An array of amounts to add for each asset.\n @return totalAddedLiquidity The total added liquidity."},"id":4410,"implemented":true,"kind":"function","modifiers":[],"name":"_calculateTotalAddedLiquidity","nameLocation":"27619:29:15","nodeType":"FunctionDefinition","parameters":{"id":4384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4383,"mutability":"mutable","name":"amountsToAdd","nameLocation":"27676:12:15","nodeType":"VariableDeclaration","scope":4410,"src":"27659:29:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4381,"name":"uint256","nodeType":"ElementaryTypeName","src":"27659:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4382,"nodeType":"ArrayTypeName","src":"27659:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"27648:47:15"},"returnParameters":{"id":4387,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4386,"mutability":"mutable","name":"totalAddedLiquidity","nameLocation":"27727:19:15","nodeType":"VariableDeclaration","scope":4410,"src":"27719:27:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4385,"name":"uint256","nodeType":"ElementaryTypeName","src":"27719:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"27718:29:15"},"scope":4596,"src":"27610:306:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4475,"nodeType":"Block","src":"28423:391:15","statements":[{"expression":{"id":4429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4422,"name":"amountsToAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4420,"src":"28434:12:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":4426,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2234,"src":"28463:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2288_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":4427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"28474:6:15","memberName":"length","nodeType":"MemberAccess","src":"28463:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4425,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"28449:13:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":4423,"name":"uint256","nodeType":"ElementaryTypeName","src":"28453:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4424,"nodeType":"ArrayTypeName","src":"28453:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":4428,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28449:32:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"src":"28434:47:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":4430,"nodeType":"ExpressionStatement","src":"28434:47:15"},{"body":{"id":4471,"nodeType":"Block","src":"28540:235:15","statements":[{"assignments":[4443],"declarations":[{"constant":false,"id":4443,"mutability":"mutable","name":"targetValuation","nameLocation":"28563:15:15","nodeType":"VariableDeclaration","scope":4471,"src":"28555:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4442,"name":"uint256","nodeType":"ElementaryTypeName","src":"28555:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4453,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4444,"name":"totalValuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4413,"src":"28582:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"baseExpression":{"id":4445,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2234,"src":"28599:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2288_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":4447,"indexExpression":{"id":4446,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4432,"src":"28610:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"28599:13:15","typeDescriptions":{"typeIdentifier":"t_struct$_AssetInfo_$2288_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref"}},"id":4448,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"28613:6:15","memberName":"weight","nodeType":"MemberAccess","referencedDeclaration":2285,"src":"28599:20:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28582:37:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4450,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"28581:39:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3130303030","id":4451,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28623:5:15","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"src":"28581:47:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"28555:73:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":4454,"name":"valuations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4416,"src":"28647:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":4456,"indexExpression":{"id":4455,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4432,"src":"28658:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"28647:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4457,"name":"targetValuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4443,"src":"28663:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28647:31:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4470,"nodeType":"IfStatement","src":"28643:121:15","trueBody":{"id":4469,"nodeType":"Block","src":"28680:84:15","statements":[{"expression":{"id":4467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4459,"name":"amountsToAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4420,"src":"28699:12:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":4461,"indexExpression":{"id":4460,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4432,"src":"28712:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"28699:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4462,"name":"targetValuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4443,"src":"28717:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"baseExpression":{"id":4463,"name":"valuations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4416,"src":"28735:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":4465,"indexExpression":{"id":4464,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4432,"src":"28746:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"28735:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28717:31:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28699:49:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4468,"nodeType":"ExpressionStatement","src":"28699:49:15"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4435,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4432,"src":"28512:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4436,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2234,"src":"28516:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2288_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":4437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"28527:6:15","memberName":"length","nodeType":"MemberAccess","src":"28516:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28512:21:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4472,"initializationExpression":{"assignments":[4432],"declarations":[{"constant":false,"id":4432,"mutability":"mutable","name":"i","nameLocation":"28505:1:15","nodeType":"VariableDeclaration","scope":4472,"src":"28497:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4431,"name":"uint256","nodeType":"ElementaryTypeName","src":"28497:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4434,"initialValue":{"hexValue":"30","id":4433,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28509:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"28497:13:15"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"28535:3:15","subExpression":{"id":4439,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4432,"src":"28535:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4441,"nodeType":"ExpressionStatement","src":"28535:3:15"},"nodeType":"ForStatement","src":"28492:283:15"},{"expression":{"id":4473,"name":"amountsToAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4420,"src":"28794:12:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":4421,"id":4474,"nodeType":"Return","src":"28787:19:15"}]},"documentation":{"id":4411,"nodeType":"StructuredDocumentation","src":"27924:329:15","text":" @dev Calculates the amounts to add to each asset based on the total valuation and current valuations.\n @param totalValuation The total valuation of the pool.\n @param valuations An array of current valuations for each asset.\n @return amountsToAdd An array of amounts to add to each asset."},"id":4476,"implemented":true,"kind":"function","modifiers":[],"name":"_calculateAmountsToAdd","nameLocation":"28268:22:15","nodeType":"FunctionDefinition","parameters":{"id":4417,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4413,"mutability":"mutable","name":"totalValuation","nameLocation":"28309:14:15","nodeType":"VariableDeclaration","scope":4476,"src":"28301:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4412,"name":"uint256","nodeType":"ElementaryTypeName","src":"28301:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4416,"mutability":"mutable","name":"valuations","nameLocation":"28351:10:15","nodeType":"VariableDeclaration","scope":4476,"src":"28334:27:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4414,"name":"uint256","nodeType":"ElementaryTypeName","src":"28334:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4415,"nodeType":"ArrayTypeName","src":"28334:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"28290:78:15"},"returnParameters":{"id":4421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4420,"mutability":"mutable","name":"amountsToAdd","nameLocation":"28409:12:15","nodeType":"VariableDeclaration","scope":4476,"src":"28392:29:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4418,"name":"uint256","nodeType":"ElementaryTypeName","src":"28392:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4419,"nodeType":"ArrayTypeName","src":"28392:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"28391:31:15"},"scope":4596,"src":"28259:555:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4514,"nodeType":"Block","src":"29193:264:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":4486,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2234,"src":"29208:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2288_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":4488,"indexExpression":{"id":4487,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4479,"src":"29219:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"29208:17:15","typeDescriptions":{"typeIdentifier":"t_struct$_AssetInfo_$2288_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref"}},"id":4489,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"29226:5:15","memberName":"asset","nodeType":"MemberAccess","referencedDeclaration":2283,"src":"29208:23:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4490,"name":"baseAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2243,"src":"29235:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"29208:36:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4494,"nodeType":"IfStatement","src":"29204:60:15","trueBody":{"expression":{"id":4492,"name":"amountToAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4481,"src":"29253:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4485,"id":4493,"nodeType":"Return","src":"29246:18:15"}},{"assignments":[4496],"declarations":[{"constant":false,"id":4496,"mutability":"mutable","name":"tokenAmount","nameLocation":"29283:11:15","nodeType":"VariableDeclaration","scope":4514,"src":"29275:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4495,"name":"uint256","nodeType":"ElementaryTypeName","src":"29275:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4504,"initialValue":{"arguments":[{"expression":{"baseExpression":{"id":4498,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2234,"src":"29317:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2288_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":4500,"indexExpression":{"id":4499,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4479,"src":"29328:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"29317:17:15","typeDescriptions":{"typeIdentifier":"t_struct$_AssetInfo_$2288_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref"}},"id":4501,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"29335:5:15","memberName":"asset","nodeType":"MemberAccess","referencedDeclaration":2283,"src":"29317:23:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4502,"name":"amountToAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4481,"src":"29342:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4497,"name":"_convertBaseToToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4532,"src":"29297:19:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view returns (uint256)"}},"id":4503,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29297:57:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"29275:79:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4506,"name":"tokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4496,"src":"29373:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4507,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29387:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"29373:15:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420746f6b656e20616d6f756e7420746f20616464","id":4509,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"29390:29:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_231381c7ce9cab5a06140be844586c7572b2dd117d8de83c9f9bda39108cd19d","typeString":"literal_string \"Invalid token amount to add\""},"value":"Invalid token amount to add"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_231381c7ce9cab5a06140be844586c7572b2dd117d8de83c9f9bda39108cd19d","typeString":"literal_string \"Invalid token amount to add\""}],"id":4505,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"29365:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4510,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29365:55:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4511,"nodeType":"ExpressionStatement","src":"29365:55:15"},{"expression":{"id":4512,"name":"tokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4496,"src":"29438:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4485,"id":4513,"nodeType":"Return","src":"29431:18:15"}]},"documentation":{"id":4477,"nodeType":"StructuredDocumentation","src":"28822:268:15","text":" @dev Internal function to transfer tokens from the caller to the contract and calculate the liquidity.\n @param index The index of the asset in the assetInfos array.\n @param amountToAdd The amount of native tokens to add as liquidity."},"id":4515,"implemented":true,"kind":"function","modifiers":[],"name":"_calculateLiquidity","nameLocation":"29105:19:15","nodeType":"FunctionDefinition","parameters":{"id":4482,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4479,"mutability":"mutable","name":"index","nameLocation":"29133:5:15","nodeType":"VariableDeclaration","scope":4515,"src":"29125:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4478,"name":"uint256","nodeType":"ElementaryTypeName","src":"29125:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4481,"mutability":"mutable","name":"amountToAdd","nameLocation":"29148:11:15","nodeType":"VariableDeclaration","scope":4515,"src":"29140:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4480,"name":"uint256","nodeType":"ElementaryTypeName","src":"29140:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29124:36:15"},"returnParameters":{"id":4485,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4484,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4515,"src":"29184:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4483,"name":"uint256","nodeType":"ElementaryTypeName","src":"29184:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29183:9:15"},"scope":4596,"src":"29096:361:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4531,"nodeType":"Block","src":"29852:66:15","statements":[{"expression":{"arguments":[{"id":4526,"name":"baseAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2243,"src":"29883:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4527,"name":"toToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4518,"src":"29894:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4528,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4520,"src":"29903:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4525,"name":"getAmountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3672,"src":"29870:12:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,address,uint256) view returns (uint256)"}},"id":4529,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29870:40:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4524,"id":4530,"nodeType":"Return","src":"29863:47:15"}]},"documentation":{"id":4516,"nodeType":"StructuredDocumentation","src":"29465:287:15","text":" @dev Converts the specified amount of native token to the corresponding token amount.\n @param toToken The address of the native token to convert from.\n @param amount The amount of native token to convert.\n @return The corresponding token amount."},"id":4532,"implemented":true,"kind":"function","modifiers":[],"name":"_convertBaseToToken","nameLocation":"29767:19:15","nodeType":"FunctionDefinition","parameters":{"id":4521,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4518,"mutability":"mutable","name":"toToken","nameLocation":"29795:7:15","nodeType":"VariableDeclaration","scope":4532,"src":"29787:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4517,"name":"address","nodeType":"ElementaryTypeName","src":"29787:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4520,"mutability":"mutable","name":"amount","nameLocation":"29812:6:15","nodeType":"VariableDeclaration","scope":4532,"src":"29804:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4519,"name":"uint256","nodeType":"ElementaryTypeName","src":"29804:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29786:33:15"},"returnParameters":{"id":4524,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4523,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4532,"src":"29843:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4522,"name":"uint256","nodeType":"ElementaryTypeName","src":"29843:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29842:9:15"},"scope":4596,"src":"29758:160:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4548,"nodeType":"Block","src":"30327:68:15","statements":[{"expression":{"arguments":[{"id":4543,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4535,"src":"30358:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4544,"name":"baseAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2243,"src":"30369:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4545,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4537,"src":"30380:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4542,"name":"getAmountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3672,"src":"30345:12:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,address,uint256) view returns (uint256)"}},"id":4546,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30345:42:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4541,"id":4547,"nodeType":"Return","src":"30338:49:15"}]},"documentation":{"id":4533,"nodeType":"StructuredDocumentation","src":"29926:287:15","text":" @dev Converts the specified token to the native token using the rebalancer contract.\n @param fromToken The address of the token to convert from.\n @param amount The amount of tokens to convert.\n @return tokenAmount The converted amount of tokens."},"id":4549,"implemented":true,"kind":"function","modifiers":[],"name":"_convertTokenToBase","nameLocation":"30228:19:15","nodeType":"FunctionDefinition","parameters":{"id":4538,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4535,"mutability":"mutable","name":"fromToken","nameLocation":"30256:9:15","nodeType":"VariableDeclaration","scope":4549,"src":"30248:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4534,"name":"address","nodeType":"ElementaryTypeName","src":"30248:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4537,"mutability":"mutable","name":"amount","nameLocation":"30275:6:15","nodeType":"VariableDeclaration","scope":4549,"src":"30267:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4536,"name":"uint256","nodeType":"ElementaryTypeName","src":"30267:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30247:35:15"},"returnParameters":{"id":4541,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4540,"mutability":"mutable","name":"tokenAmount","nameLocation":"30314:11:15","nodeType":"VariableDeclaration","scope":4549,"src":"30306:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4539,"name":"uint256","nodeType":"ElementaryTypeName","src":"30306:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30305:21:15"},"scope":4596,"src":"30219:176:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4594,"nodeType":"Block","src":"30682:290:15","statements":[{"assignments":[4559,4562],"declarations":[{"constant":false,"id":4559,"mutability":"mutable","name":"directions","nameLocation":"30708:10:15","nodeType":"VariableDeclaration","scope":4594,"src":"30694:24:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":4557,"name":"bool","nodeType":"ElementaryTypeName","src":"30694:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4558,"nodeType":"ArrayTypeName","src":"30694:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":4562,"mutability":"mutable","name":"deviations","nameLocation":"30737:10:15","nodeType":"VariableDeclaration","scope":4594,"src":"30720:27:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4560,"name":"uint256","nodeType":"ElementaryTypeName","src":"30720:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4561,"nodeType":"ArrayTypeName","src":"30720:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":4565,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":4563,"name":"getDeviation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3802,"src":"30751:12:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_array$_t_bool_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function () view returns (bool[] memory,uint256[] memory)"}},"id":4564,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30751:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_bool_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(bool[] memory,uint256[] memory)"}},"nodeType":"VariableDeclarationStatement","src":"30693:72:15"},{"body":{"id":4590,"nodeType":"Block","src":"30824:118:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":4577,"name":"directions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4559,"src":"30843:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"id":4579,"indexExpression":{"id":4578,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4567,"src":"30854:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"30843:13:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":4580,"name":"deviations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4562,"src":"30860:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":4582,"indexExpression":{"id":4581,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4567,"src":"30871:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"30860:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4583,"name":"trigger","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2239,"src":"30876:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30860:23:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"30843:40:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4589,"nodeType":"IfStatement","src":"30839:92:15","trueBody":{"id":4588,"nodeType":"Block","src":"30885:46:15","statements":[{"expression":{"hexValue":"74727565","id":4586,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"30911:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":4554,"id":4587,"nodeType":"Return","src":"30904:11:15"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4570,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4567,"src":"30796:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4571,"name":"deviations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4562,"src":"30800:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":4572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30811:6:15","memberName":"length","nodeType":"MemberAccess","src":"30800:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30796:21:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4591,"initializationExpression":{"assignments":[4567],"declarations":[{"constant":false,"id":4567,"mutability":"mutable","name":"i","nameLocation":"30789:1:15","nodeType":"VariableDeclaration","scope":4591,"src":"30781:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4566,"name":"uint256","nodeType":"ElementaryTypeName","src":"30781:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4569,"initialValue":{"hexValue":"30","id":4568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30793:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"30781:13:15"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"30819:3:15","subExpression":{"id":4574,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4567,"src":"30819:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4576,"nodeType":"ExpressionStatement","src":"30819:3:15"},"nodeType":"ForStatement","src":"30776:166:15"},{"expression":{"hexValue":"66616c7365","id":4592,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"30959:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":4554,"id":4593,"nodeType":"Return","src":"30952:12:15"}]},"documentation":{"id":4550,"nodeType":"StructuredDocumentation","src":"30468:152:15","text":" @dev Checks if rebalancing is needed for the pool.\n @return A boolean value indicating whether rebalancing is needed or not."},"functionSelector":"8a77c8dc","id":4595,"implemented":true,"kind":"function","modifiers":[],"name":"isRebalanceNeeded","nameLocation":"30635:17:15","nodeType":"FunctionDefinition","parameters":{"id":4551,"nodeType":"ParameterList","parameters":[],"src":"30652:2:15"},"returnParameters":{"id":4554,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4553,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4595,"src":"30676:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4552,"name":"bool","nodeType":"ElementaryTypeName","src":"30676:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"30675:6:15"},"scope":4596,"src":"30626:346:15","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":4597,"src":"1808:29167:15","usedErrors":[698,703,708,717,722,727,2052],"usedEvents":[1663,1672,2295,2302,2308,2314,2326]}],"src":"40:30937:15"},"id":15},"contracts/BaluniV1PoolFactory.sol":{"ast":{"absolutePath":"contracts/BaluniV1PoolFactory.sol","exportedSymbols":{"BaluniV1Pool":[4596],"BaluniV1PoolFactory":[5068],"Context":[2038],"ContextUpgradeable":[676],"DSMath":[5624],"ERC1967Utils":[1126],"ERC20":[1651],"IBaluniV1Oracle":[5093],"IBaluniV1PoolPeriphery":[5213],"IBaluniV1Rebalancer":[5298],"IBaluniV1Registry":[5472],"IERC1822Proxiable":[686],"IERC20":[1729],"IERC20Errors":[728],"IERC20Metadata":[1755],"Initializable":[448],"OwnableUpgradeable":[194],"ReentrancyGuard":[2107],"UUPSUpgradeable":[630]},"id":5069,"license":"GNU AGPLv3","nodeType":"SourceUnit","nodes":[{"id":4598,"literals":["solidity","0.8",".25"],"nodeType":"PragmaDirective","src":"40:23:16"},{"absolutePath":"contracts/BaluniV1Pool.sol","file":"./BaluniV1Pool.sol","id":4599,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5069,"sourceUnit":4597,"src":"1466:28:16","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","id":4600,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5069,"sourceUnit":195,"src":"1496:75:16","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","id":4601,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5069,"sourceUnit":449,"src":"1573:75:16","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","id":4602,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5069,"sourceUnit":631,"src":"1650:77:16","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IBaluniV1Registry.sol","file":"./interfaces/IBaluniV1Registry.sol","id":4603,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5069,"sourceUnit":5473,"src":"1729:44:16","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":4604,"name":"Initializable","nameLocations":["1809:13:16"],"nodeType":"IdentifierPath","referencedDeclaration":448,"src":"1809:13:16"},"id":4605,"nodeType":"InheritanceSpecifier","src":"1809:13:16"},{"baseName":{"id":4606,"name":"UUPSUpgradeable","nameLocations":["1824:15:16"],"nodeType":"IdentifierPath","referencedDeclaration":630,"src":"1824:15:16"},"id":4607,"nodeType":"InheritanceSpecifier","src":"1824:15:16"},{"baseName":{"id":4608,"name":"OwnableUpgradeable","nameLocations":["1841:18:16"],"nodeType":"IdentifierPath","referencedDeclaration":194,"src":"1841:18:16"},"id":4609,"nodeType":"InheritanceSpecifier","src":"1841:18:16"}],"canonicalName":"BaluniV1PoolFactory","contractDependencies":[4596],"contractKind":"contract","fullyImplemented":true,"id":5068,"linearizedBaseContracts":[5068,194,676,630,686,448],"name":"BaluniV1PoolFactory","nameLocation":"1786:19:16","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"41d1de97","id":4612,"mutability":"mutable","name":"allPools","nameLocation":"1884:8:16","nodeType":"VariableDeclaration","scope":5068,"src":"1867:25:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[]"},"typeName":{"baseType":{"id":4610,"name":"address","nodeType":"ElementaryTypeName","src":"1867:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4611,"nodeType":"ArrayTypeName","src":"1867:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"public"},{"constant":false,"functionSelector":"7b103999","id":4615,"mutability":"mutable","name":"registry","nameLocation":"1926:8:16","nodeType":"VariableDeclaration","scope":5068,"src":"1901:33:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$5472","typeString":"contract IBaluniV1Registry"},"typeName":{"id":4614,"nodeType":"UserDefinedTypeName","pathNode":{"id":4613,"name":"IBaluniV1Registry","nameLocations":["1901:17:16"],"nodeType":"IdentifierPath","referencedDeclaration":5472,"src":"1901:17:16"},"referencedDeclaration":5472,"src":"1901:17:16","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$5472","typeString":"contract IBaluniV1Registry"}},"visibility":"public"},{"constant":false,"functionSelector":"531aa03e","id":4621,"mutability":"mutable","name":"getPool","nameLocation":"1998:7:16","nodeType":"VariableDeclaration","scope":5068,"src":"1943:62:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$","typeString":"mapping(address => mapping(address => address))"},"typeName":{"id":4620,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":4616,"name":"address","nodeType":"ElementaryTypeName","src":"1951:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1943:47:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$","typeString":"mapping(address => mapping(address => address))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":4619,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":4617,"name":"address","nodeType":"ElementaryTypeName","src":"1970:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1962:27:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":4618,"name":"address","nodeType":"ElementaryTypeName","src":"1981:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}}},"visibility":"public"},{"anonymous":false,"eventSelector":"0a4af51f99a910b453b81f2f9f5673acd70bf8895729e0a6de8e5e0908d89f2b","id":4628,"name":"PoolCreated","nameLocation":"2020:11:16","nodeType":"EventDefinition","parameters":{"id":4627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4623,"indexed":true,"mutability":"mutable","name":"pool","nameLocation":"2048:4:16","nodeType":"VariableDeclaration","scope":4628,"src":"2032:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4622,"name":"address","nodeType":"ElementaryTypeName","src":"2032:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4626,"indexed":false,"mutability":"mutable","name":"assets","nameLocation":"2064:6:16","nodeType":"VariableDeclaration","scope":4628,"src":"2054:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4624,"name":"address","nodeType":"ElementaryTypeName","src":"2054:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4625,"nodeType":"ArrayTypeName","src":"2054:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"2031:40:16"},"src":"2014:58:16"},{"body":{"id":4649,"nodeType":"Block","src":"2138:130:16","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":4635,"name":"__UUPSUpgradeable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":502,"src":"2149:22:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":4636,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2149:24:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4637,"nodeType":"ExpressionStatement","src":"2149:24:16"},{"expression":{"arguments":[{"expression":{"id":4639,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2199:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2203:6:16","memberName":"sender","nodeType":"MemberAccess","src":"2199:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4638,"name":"__Ownable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":54,"src":"2184:14:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":4641,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2184:26:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4642,"nodeType":"ExpressionStatement","src":"2184:26:16"},{"expression":{"id":4647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4643,"name":"registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4615,"src":"2221:8:16","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$5472","typeString":"contract IBaluniV1Registry"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4645,"name":"_register","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4630,"src":"2250:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4644,"name":"IBaluniV1Registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5472,"src":"2232:17:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBaluniV1Registry_$5472_$","typeString":"type(contract IBaluniV1Registry)"}},"id":4646,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2232:28:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$5472","typeString":"contract IBaluniV1Registry"}},"src":"2221:39:16","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$5472","typeString":"contract IBaluniV1Registry"}},"id":4648,"nodeType":"ExpressionStatement","src":"2221:39:16"}]},"functionSelector":"c4d66de8","id":4650,"implemented":true,"kind":"function","modifiers":[{"id":4633,"kind":"modifierInvocation","modifierName":{"id":4632,"name":"initializer","nameLocations":["2126:11:16"],"nodeType":"IdentifierPath","referencedDeclaration":302,"src":"2126:11:16"},"nodeType":"ModifierInvocation","src":"2126:11:16"}],"name":"initialize","nameLocation":"2089:10:16","nodeType":"FunctionDefinition","parameters":{"id":4631,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4630,"mutability":"mutable","name":"_register","nameLocation":"2108:9:16","nodeType":"VariableDeclaration","scope":4650,"src":"2100:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4629,"name":"address","nodeType":"ElementaryTypeName","src":"2100:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2099:19:16"},"returnParameters":{"id":4634,"nodeType":"ParameterList","parameters":[],"src":"2138:0:16"},"scope":5068,"src":"2080:188:16","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4666,"nodeType":"Block","src":"2365:58:16","statements":[{"expression":{"id":4664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4660,"name":"registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4615,"src":"2376:8:16","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$5472","typeString":"contract IBaluniV1Registry"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4662,"name":"_register","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4652,"src":"2405:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4661,"name":"IBaluniV1Registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5472,"src":"2387:17:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBaluniV1Registry_$5472_$","typeString":"type(contract IBaluniV1Registry)"}},"id":4663,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2387:28:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$5472","typeString":"contract IBaluniV1Registry"}},"src":"2376:39:16","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$5472","typeString":"contract IBaluniV1Registry"}},"id":4665,"nodeType":"ExpressionStatement","src":"2376:39:16"}]},"functionSelector":"8f2248bc","id":4667,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":4657,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4654,"src":"2355:8:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"id":4658,"kind":"modifierInvocation","modifierName":{"id":4656,"name":"reinitializer","nameLocations":["2341:13:16"],"nodeType":"IdentifierPath","referencedDeclaration":349,"src":"2341:13:16"},"nodeType":"ModifierInvocation","src":"2341:23:16"}],"name":"reinitialize","nameLocation":"2285:12:16","nodeType":"FunctionDefinition","parameters":{"id":4655,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4652,"mutability":"mutable","name":"_register","nameLocation":"2306:9:16","nodeType":"VariableDeclaration","scope":4667,"src":"2298:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4651,"name":"address","nodeType":"ElementaryTypeName","src":"2298:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4654,"mutability":"mutable","name":"_version","nameLocation":"2324:8:16","nodeType":"VariableDeclaration","scope":4667,"src":"2317:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4653,"name":"uint64","nodeType":"ElementaryTypeName","src":"2317:6:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"2297:36:16"},"returnParameters":{"id":4659,"nodeType":"ParameterList","parameters":[],"src":"2365:0:16"},"scope":5068,"src":"2276:147:16","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[584],"body":{"id":4675,"nodeType":"Block","src":"2513:2:16","statements":[]},"id":4676,"implemented":true,"kind":"function","modifiers":[{"id":4673,"kind":"modifierInvocation","modifierName":{"id":4672,"name":"onlyOwner","nameLocations":["2503:9:16"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"2503:9:16"},"nodeType":"ModifierInvocation","src":"2503:9:16"}],"name":"_authorizeUpgrade","nameLocation":"2440:17:16","nodeType":"FunctionDefinition","overrides":{"id":4671,"nodeType":"OverrideSpecifier","overrides":[],"src":"2494:8:16"},"parameters":{"id":4670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4669,"mutability":"mutable","name":"newImplementation","nameLocation":"2466:17:16","nodeType":"VariableDeclaration","scope":4676,"src":"2458:25:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4668,"name":"address","nodeType":"ElementaryTypeName","src":"2458:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2457:27:16"},"returnParameters":{"id":4674,"nodeType":"ParameterList","parameters":[],"src":"2513:0:16"},"scope":5068,"src":"2431:84:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4843,"nodeType":"Block","src":"3024:969:16","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4691,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4680,"src":"3043:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3050:6:16","memberName":"length","nodeType":"MemberAccess","src":"3043:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":4693,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3059:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3043:17:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4174206c656173742074776f2061737365747320617265207265717569726564","id":4695,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3062:34:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_39cbcbdd9e6251e82f28a321c8ea534706a2cf624e365b64351e1f84ffc7ff8d","typeString":"literal_string \"At least two assets are required\""},"value":"At least two assets are required"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_39cbcbdd9e6251e82f28a321c8ea534706a2cf624e365b64351e1f84ffc7ff8d","typeString":"literal_string \"At least two assets are required\""}],"id":4690,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3035:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4696,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3035:62:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4697,"nodeType":"ExpressionStatement","src":"3035:62:16"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4699,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4680,"src":"3116:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3123:6:16","memberName":"length","nodeType":"MemberAccess","src":"3116:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4701,"name":"weights","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4683,"src":"3133:7:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":4702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3141:6:16","memberName":"length","nodeType":"MemberAccess","src":"3133:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3116:31:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"41737365747320616e642077656967687473206c656e677468206d69736d61746368","id":4704,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3149:36:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_ebb567ad160cf2ebbf5e53ab40a3ffae6f6492169d006ee3f8bad6794e36f372","typeString":"literal_string \"Assets and weights length mismatch\""},"value":"Assets and weights length mismatch"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ebb567ad160cf2ebbf5e53ab40a3ffae6f6492169d006ee3f8bad6794e36f372","typeString":"literal_string \"Assets and weights length mismatch\""}],"id":4698,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3108:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4705,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3108:78:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4706,"nodeType":"ExpressionStatement","src":"3108:78:16"},{"body":{"id":4754,"nodeType":"Block","src":"3243:207:16","statements":[{"body":{"id":4752,"nodeType":"Block","src":"3306:133:16","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"baseExpression":{"baseExpression":{"id":4734,"name":"getPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4621,"src":"3341:7:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$","typeString":"mapping(address => mapping(address => address))"}},"id":4738,"indexExpression":{"baseExpression":{"id":4735,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4680,"src":"3349:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4737,"indexExpression":{"id":4736,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4708,"src":"3356:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3349:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3341:18:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":4742,"indexExpression":{"baseExpression":{"id":4739,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4680,"src":"3360:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4741,"indexExpression":{"id":4740,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4719,"src":"3367:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3360:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3341:29:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4733,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3333:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4732,"name":"address","nodeType":"ElementaryTypeName","src":"3333:7:16","typeDescriptions":{}}},"id":4743,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3333:38:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":4746,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3383:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4745,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3375:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4744,"name":"address","nodeType":"ElementaryTypeName","src":"3375:7:16","typeDescriptions":{}}},"id":4747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3375:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3333:52:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"506f6f6c20616c72656164792065786973747320666f7220746869732070616972","id":4749,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3387:35:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_2258c7547209181d37eb4aebb58e4d2c60f10b97b943ea694f4dec24e242181e","typeString":"literal_string \"Pool already exists for this pair\""},"value":"Pool already exists for this pair"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2258c7547209181d37eb4aebb58e4d2c60f10b97b943ea694f4dec24e242181e","typeString":"literal_string \"Pool already exists for this pair\""}],"id":4731,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3325:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4750,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3325:98:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4751,"nodeType":"ExpressionStatement","src":"3325:98:16"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4724,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4719,"src":"3282:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4725,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4680,"src":"3286:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3293:6:16","memberName":"length","nodeType":"MemberAccess","src":"3286:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3282:17:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4753,"initializationExpression":{"assignments":[4719],"declarations":[{"constant":false,"id":4719,"mutability":"mutable","name":"j","nameLocation":"3271:1:16","nodeType":"VariableDeclaration","scope":4753,"src":"3263:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4718,"name":"uint256","nodeType":"ElementaryTypeName","src":"3263:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4723,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4720,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4708,"src":"3275:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4721,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3279:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3275:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3263:17:16"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3301:3:16","subExpression":{"id":4728,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4719,"src":"3301:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4730,"nodeType":"ExpressionStatement","src":"3301:3:16"},"nodeType":"ForStatement","src":"3258:181:16"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4711,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4708,"src":"3219:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4712,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4680,"src":"3223:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3230:6:16","memberName":"length","nodeType":"MemberAccess","src":"3223:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3219:17:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4755,"initializationExpression":{"assignments":[4708],"declarations":[{"constant":false,"id":4708,"mutability":"mutable","name":"i","nameLocation":"3212:1:16","nodeType":"VariableDeclaration","scope":4755,"src":"3204:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4707,"name":"uint256","nodeType":"ElementaryTypeName","src":"3204:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4710,"initialValue":{"hexValue":"30","id":4709,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3216:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3204:13:16"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3238:3:16","subExpression":{"id":4715,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4708,"src":"3238:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4717,"nodeType":"ExpressionStatement","src":"3238:3:16"},"nodeType":"ForStatement","src":"3199:251:16"},{"assignments":[4758],"declarations":[{"constant":false,"id":4758,"mutability":"mutable","name":"newPool","nameLocation":"3475:7:16","nodeType":"VariableDeclaration","scope":4843,"src":"3462:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Pool_$4596","typeString":"contract BaluniV1Pool"},"typeName":{"id":4757,"nodeType":"UserDefinedTypeName","pathNode":{"id":4756,"name":"BaluniV1Pool","nameLocations":["3462:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":4596,"src":"3462:12:16"},"referencedDeclaration":4596,"src":"3462:12:16","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Pool_$4596","typeString":"contract BaluniV1Pool"}},"visibility":"internal"}],"id":4770,"initialValue":{"arguments":[{"id":4762,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4680,"src":"3502:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},{"id":4763,"name":"weights","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4683,"src":"3510:7:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":4764,"name":"trigger","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4685,"src":"3519:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":4767,"name":"registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4615,"src":"3536:8:16","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$5472","typeString":"contract IBaluniV1Registry"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IBaluniV1Registry_$5472","typeString":"contract IBaluniV1Registry"}],"id":4766,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3528:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4765,"name":"address","nodeType":"ElementaryTypeName","src":"3528:7:16","typeDescriptions":{}}},"id":4768,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3528:17:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":4761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"NewExpression","src":"3485:16:16","typeDescriptions":{"typeIdentifier":"t_function_creation_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_address_$returns$_t_contract$_BaluniV1Pool_$4596_$","typeString":"function (address[] memory,uint256[] memory,uint256,address) returns (contract BaluniV1Pool)"},"typeName":{"id":4760,"nodeType":"UserDefinedTypeName","pathNode":{"id":4759,"name":"BaluniV1Pool","nameLocations":["3489:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":4596,"src":"3489:12:16"},"referencedDeclaration":4596,"src":"3489:12:16","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Pool_$4596","typeString":"contract BaluniV1Pool"}}},"id":4769,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3485:61:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Pool_$4596","typeString":"contract BaluniV1Pool"}},"nodeType":"VariableDeclarationStatement","src":"3462:84:16"},{"assignments":[4772],"declarations":[{"constant":false,"id":4772,"mutability":"mutable","name":"poolAddress","nameLocation":"3567:11:16","nodeType":"VariableDeclaration","scope":4843,"src":"3559:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4771,"name":"address","nodeType":"ElementaryTypeName","src":"3559:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4777,"initialValue":{"arguments":[{"id":4775,"name":"newPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4758,"src":"3589:7:16","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Pool_$4596","typeString":"contract BaluniV1Pool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniV1Pool_$4596","typeString":"contract BaluniV1Pool"}],"id":4774,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3581:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4773,"name":"address","nodeType":"ElementaryTypeName","src":"3581:7:16","typeDescriptions":{}}},"id":4776,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3581:16:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3559:38:16"},{"expression":{"arguments":[{"id":4781,"name":"poolAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4772,"src":"3624:11:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":4778,"name":"allPools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4612,"src":"3610:8:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":4780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3619:4:16","memberName":"push","nodeType":"MemberAccess","src":"3610:13:16","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer,address)"}},"id":4782,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3610:26:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4783,"nodeType":"ExpressionStatement","src":"3610:26:16"},{"body":{"id":4834,"nodeType":"Block","src":"3691:214:16","statements":[{"body":{"id":4832,"nodeType":"Block","src":"3754:140:16","statements":[{"expression":{"id":4818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":4808,"name":"getPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4621,"src":"3773:7:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$","typeString":"mapping(address => mapping(address => address))"}},"id":4815,"indexExpression":{"baseExpression":{"id":4809,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4680,"src":"3781:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4811,"indexExpression":{"id":4810,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4785,"src":"3788:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3781:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3773:18:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":4816,"indexExpression":{"baseExpression":{"id":4812,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4680,"src":"3792:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4814,"indexExpression":{"id":4813,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4796,"src":"3799:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3792:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3773:29:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4817,"name":"poolAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4772,"src":"3805:11:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3773:43:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4819,"nodeType":"ExpressionStatement","src":"3773:43:16"},{"expression":{"id":4830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":4820,"name":"getPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4621,"src":"3835:7:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$","typeString":"mapping(address => mapping(address => address))"}},"id":4827,"indexExpression":{"baseExpression":{"id":4821,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4680,"src":"3843:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4823,"indexExpression":{"id":4822,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4796,"src":"3850:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3843:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3835:18:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":4828,"indexExpression":{"baseExpression":{"id":4824,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4680,"src":"3854:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4826,"indexExpression":{"id":4825,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4785,"src":"3861:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3854:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3835:29:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4829,"name":"poolAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4772,"src":"3867:11:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3835:43:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4831,"nodeType":"ExpressionStatement","src":"3835:43:16"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4801,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4796,"src":"3730:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4802,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4680,"src":"3734:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3741:6:16","memberName":"length","nodeType":"MemberAccess","src":"3734:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3730:17:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4833,"initializationExpression":{"assignments":[4796],"declarations":[{"constant":false,"id":4796,"mutability":"mutable","name":"j","nameLocation":"3719:1:16","nodeType":"VariableDeclaration","scope":4833,"src":"3711:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4795,"name":"uint256","nodeType":"ElementaryTypeName","src":"3711:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4800,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4797,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4785,"src":"3723:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4798,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3727:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3723:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3711:17:16"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3749:3:16","subExpression":{"id":4805,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4796,"src":"3749:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4807,"nodeType":"ExpressionStatement","src":"3749:3:16"},"nodeType":"ForStatement","src":"3706:188:16"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4788,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4785,"src":"3667:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4789,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4680,"src":"3671:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3678:6:16","memberName":"length","nodeType":"MemberAccess","src":"3671:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3667:17:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4835,"initializationExpression":{"assignments":[4785],"declarations":[{"constant":false,"id":4785,"mutability":"mutable","name":"i","nameLocation":"3660:1:16","nodeType":"VariableDeclaration","scope":4835,"src":"3652:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4784,"name":"uint256","nodeType":"ElementaryTypeName","src":"3652:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4787,"initialValue":{"hexValue":"30","id":4786,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3664:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3652:13:16"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3686:3:16","subExpression":{"id":4792,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4785,"src":"3686:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4794,"nodeType":"ExpressionStatement","src":"3686:3:16"},"nodeType":"ForStatement","src":"3647:258:16"},{"eventCall":{"arguments":[{"id":4837,"name":"poolAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4772,"src":"3934:11:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4838,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4680,"src":"3947:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}],"id":4836,"name":"PoolCreated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4628,"src":"3922:11:16","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_array$_t_address_$dyn_memory_ptr_$returns$__$","typeString":"function (address,address[] memory)"}},"id":4839,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3922:32:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4840,"nodeType":"EmitStatement","src":"3917:37:16"},{"expression":{"id":4841,"name":"poolAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4772,"src":"3974:11:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":4689,"id":4842,"nodeType":"Return","src":"3967:18:16"}]},"documentation":{"id":4677,"nodeType":"StructuredDocumentation","src":"2523:380:16","text":" @dev Creates a new BaluniV1Pool contract and registers it in the factory.\n @param assets The array of asset addresses to be included in the pool.\n @param weights The array of weights corresponding to each asset in the pool.\n @param trigger The trigger value for rebalancing the pool.\n @return The address of the newly created pool."},"functionSelector":"3069873b","id":4844,"implemented":true,"kind":"function","modifiers":[],"name":"createPool","nameLocation":"2918:10:16","nodeType":"FunctionDefinition","parameters":{"id":4686,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4680,"mutability":"mutable","name":"assets","nameLocation":"2946:6:16","nodeType":"VariableDeclaration","scope":4844,"src":"2929:23:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4678,"name":"address","nodeType":"ElementaryTypeName","src":"2929:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4679,"nodeType":"ArrayTypeName","src":"2929:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":4683,"mutability":"mutable","name":"weights","nameLocation":"2971:7:16","nodeType":"VariableDeclaration","scope":4844,"src":"2954:24:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4681,"name":"uint256","nodeType":"ElementaryTypeName","src":"2954:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4682,"nodeType":"ArrayTypeName","src":"2954:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":4685,"mutability":"mutable","name":"trigger","nameLocation":"2988:7:16","nodeType":"VariableDeclaration","scope":4844,"src":"2980:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4684,"name":"uint256","nodeType":"ElementaryTypeName","src":"2980:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2928:68:16"},"returnParameters":{"id":4689,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4688,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4844,"src":"3015:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4687,"name":"address","nodeType":"ElementaryTypeName","src":"3015:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3014:9:16"},"scope":5068,"src":"2909:1084:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4853,"nodeType":"Block","src":"4188:34:16","statements":[{"expression":{"id":4851,"name":"allPools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4612,"src":"4206:8:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"functionReturnParameters":4850,"id":4852,"nodeType":"Return","src":"4199:15:16"}]},"documentation":{"id":4845,"nodeType":"StructuredDocumentation","src":"4001:117:16","text":" @dev Retrieves all the pools created by the factory.\n @return An array of pool addresses."},"functionSelector":"d88ff1f4","id":4854,"implemented":true,"kind":"function","modifiers":[],"name":"getAllPools","nameLocation":"4133:11:16","nodeType":"FunctionDefinition","parameters":{"id":4846,"nodeType":"ParameterList","parameters":[],"src":"4144:2:16"},"returnParameters":{"id":4850,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4849,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4854,"src":"4170:16:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4847,"name":"address","nodeType":"ElementaryTypeName","src":"4170:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4848,"nodeType":"ArrayTypeName","src":"4170:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"4169:18:16"},"scope":5068,"src":"4124:98:16","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":4863,"nodeType":"Block","src":"4408:41:16","statements":[{"expression":{"expression":{"id":4860,"name":"allPools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4612,"src":"4426:8:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":4861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4435:6:16","memberName":"length","nodeType":"MemberAccess","src":"4426:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4859,"id":4862,"nodeType":"Return","src":"4419:22:16"}]},"documentation":{"id":4855,"nodeType":"StructuredDocumentation","src":"4230:115:16","text":" @dev Retrieves the number of pools created by the factory.\n @return The count of pools."},"functionSelector":"b4ac6860","id":4864,"implemented":true,"kind":"function","modifiers":[],"name":"getPoolsCount","nameLocation":"4360:13:16","nodeType":"FunctionDefinition","parameters":{"id":4856,"nodeType":"ParameterList","parameters":[],"src":"4373:2:16"},"returnParameters":{"id":4859,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4858,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4864,"src":"4399:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4857,"name":"uint256","nodeType":"ElementaryTypeName","src":"4399:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4398:9:16"},"scope":5068,"src":"4351:98:16","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":4884,"nodeType":"Block","src":"4711:98:16","statements":[{"assignments":[4875],"declarations":[{"constant":false,"id":4875,"mutability":"mutable","name":"pool","nameLocation":"4735:4:16","nodeType":"VariableDeclaration","scope":4884,"src":"4722:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Pool_$4596","typeString":"contract BaluniV1Pool"},"typeName":{"id":4874,"nodeType":"UserDefinedTypeName","pathNode":{"id":4873,"name":"BaluniV1Pool","nameLocations":["4722:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":4596,"src":"4722:12:16"},"referencedDeclaration":4596,"src":"4722:12:16","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Pool_$4596","typeString":"contract BaluniV1Pool"}},"visibility":"internal"}],"id":4879,"initialValue":{"arguments":[{"id":4877,"name":"poolAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4867,"src":"4755:11:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4876,"name":"BaluniV1Pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4596,"src":"4742:12:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_BaluniV1Pool_$4596_$","typeString":"type(contract BaluniV1Pool)"}},"id":4878,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4742:25:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Pool_$4596","typeString":"contract BaluniV1Pool"}},"nodeType":"VariableDeclarationStatement","src":"4722:45:16"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4880,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4875,"src":"4785:4:16","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Pool_$4596","typeString":"contract BaluniV1Pool"}},"id":4881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4790:9:16","memberName":"getAssets","nodeType":"MemberAccess","referencedDeclaration":4012,"src":"4785:14:16","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function () view external returns (address[] memory)"}},"id":4882,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4785:16:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":4872,"id":4883,"nodeType":"Return","src":"4778:23:16"}]},"documentation":{"id":4865,"nodeType":"StructuredDocumentation","src":"4457:163:16","text":" @dev Retrieves the assets of a specific pool.\n @param poolAddress The address of the pool.\n @return An array of asset addresses."},"functionSelector":"4276b97b","id":4885,"implemented":true,"kind":"function","modifiers":[],"name":"getPoolAssets","nameLocation":"4635:13:16","nodeType":"FunctionDefinition","parameters":{"id":4868,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4867,"mutability":"mutable","name":"poolAddress","nameLocation":"4657:11:16","nodeType":"VariableDeclaration","scope":4885,"src":"4649:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4866,"name":"address","nodeType":"ElementaryTypeName","src":"4649:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4648:21:16"},"returnParameters":{"id":4872,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4871,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4885,"src":"4693:16:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4869,"name":"address","nodeType":"ElementaryTypeName","src":"4693:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4870,"nodeType":"ArrayTypeName","src":"4693:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"4692:18:16"},"scope":5068,"src":"4626:183:16","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":4904,"nodeType":"Block","src":"5141:58:16","statements":[{"expression":{"arguments":[{"baseExpression":{"baseExpression":{"id":4897,"name":"getPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4621,"src":"5167:7:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$","typeString":"mapping(address => mapping(address => address))"}},"id":4899,"indexExpression":{"id":4898,"name":"asset1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4888,"src":"5175:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5167:15:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":4901,"indexExpression":{"id":4900,"name":"asset2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4890,"src":"5183:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5167:23:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4896,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5159:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4895,"name":"address","nodeType":"ElementaryTypeName","src":"5159:7:16","typeDescriptions":{}}},"id":4902,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5159:32:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":4894,"id":4903,"nodeType":"Return","src":"5152:39:16"}]},"documentation":{"id":4886,"nodeType":"StructuredDocumentation","src":"4817:229:16","text":" @dev Retrieves the pool address based on the given assets.\n @param asset1 The address of the first asset.\n @param asset2 The address of the second asset.\n @return The address of the pool."},"functionSelector":"2d5e94a7","id":4905,"implemented":true,"kind":"function","modifiers":[],"name":"getPoolByAssets","nameLocation":"5061:15:16","nodeType":"FunctionDefinition","parameters":{"id":4891,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4888,"mutability":"mutable","name":"asset1","nameLocation":"5085:6:16","nodeType":"VariableDeclaration","scope":4905,"src":"5077:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4887,"name":"address","nodeType":"ElementaryTypeName","src":"5077:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4890,"mutability":"mutable","name":"asset2","nameLocation":"5101:6:16","nodeType":"VariableDeclaration","scope":4905,"src":"5093:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4889,"name":"address","nodeType":"ElementaryTypeName","src":"5093:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5076:32:16"},"returnParameters":{"id":4894,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4893,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4905,"src":"5132:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4892,"name":"address","nodeType":"ElementaryTypeName","src":"5132:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5131:9:16"},"scope":5068,"src":"5052:147:16","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":5034,"nodeType":"Block","src":"5493:797:16","statements":[{"assignments":[4918],"declarations":[{"constant":false,"id":4918,"mutability":"mutable","name":"pools","nameLocation":"5521:5:16","nodeType":"VariableDeclaration","scope":5034,"src":"5504:22:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4916,"name":"address","nodeType":"ElementaryTypeName","src":"5504:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4917,"nodeType":"ArrayTypeName","src":"5504:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":4925,"initialValue":{"arguments":[{"expression":{"id":4922,"name":"allPools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4612,"src":"5543:8:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":4923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5552:6:16","memberName":"length","nodeType":"MemberAccess","src":"5543:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4921,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5529:13:16","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address[] memory)"},"typeName":{"baseType":{"id":4919,"name":"address","nodeType":"ElementaryTypeName","src":"5533:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4920,"nodeType":"ArrayTypeName","src":"5533:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"id":4924,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5529:30:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"5504:55:16"},{"assignments":[4927],"declarations":[{"constant":false,"id":4927,"mutability":"mutable","name":"count","nameLocation":"5578:5:16","nodeType":"VariableDeclaration","scope":5034,"src":"5570:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4926,"name":"uint256","nodeType":"ElementaryTypeName","src":"5570:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4929,"initialValue":{"hexValue":"30","id":4928,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5586:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5570:17:16"},{"body":{"id":4999,"nodeType":"Block","src":"5646:459:16","statements":[{"assignments":[4943],"declarations":[{"constant":false,"id":4943,"mutability":"mutable","name":"pool","nameLocation":"5674:4:16","nodeType":"VariableDeclaration","scope":4999,"src":"5661:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Pool_$4596","typeString":"contract BaluniV1Pool"},"typeName":{"id":4942,"nodeType":"UserDefinedTypeName","pathNode":{"id":4941,"name":"BaluniV1Pool","nameLocations":["5661:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":4596,"src":"5661:12:16"},"referencedDeclaration":4596,"src":"5661:12:16","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Pool_$4596","typeString":"contract BaluniV1Pool"}},"visibility":"internal"}],"id":4949,"initialValue":{"arguments":[{"baseExpression":{"id":4945,"name":"allPools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4612,"src":"5694:8:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":4947,"indexExpression":{"id":4946,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4931,"src":"5703:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5694:11:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4944,"name":"BaluniV1Pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4596,"src":"5681:12:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_BaluniV1Pool_$4596_$","typeString":"type(contract BaluniV1Pool)"}},"id":4948,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5681:25:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Pool_$4596","typeString":"contract BaluniV1Pool"}},"nodeType":"VariableDeclarationStatement","src":"5661:45:16"},{"assignments":[4954],"declarations":[{"constant":false,"id":4954,"mutability":"mutable","name":"assets","nameLocation":"5738:6:16","nodeType":"VariableDeclaration","scope":4999,"src":"5721:23:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4952,"name":"address","nodeType":"ElementaryTypeName","src":"5721:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4953,"nodeType":"ArrayTypeName","src":"5721:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":4958,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4955,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4943,"src":"5747:4:16","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Pool_$4596","typeString":"contract BaluniV1Pool"}},"id":4956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5752:9:16","memberName":"getAssets","nodeType":"MemberAccess","referencedDeclaration":4012,"src":"5747:14:16","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function () view external returns (address[] memory)"}},"id":4957,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5747:16:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"5721:42:16"},{"body":{"id":4990,"nodeType":"Block","src":"5824:187:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":4970,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4954,"src":"5847:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4972,"indexExpression":{"id":4971,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4960,"src":"5854:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5847:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4973,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4908,"src":"5860:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5847:18:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4989,"nodeType":"IfStatement","src":"5843:153:16","trueBody":{"id":4988,"nodeType":"Block","src":"5867:129:16","statements":[{"expression":{"id":4982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4975,"name":"pools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4918,"src":"5890:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4977,"indexExpression":{"id":4976,"name":"count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4927,"src":"5896:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5890:12:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4980,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4943,"src":"5913:4:16","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Pool_$4596","typeString":"contract BaluniV1Pool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniV1Pool_$4596","typeString":"contract BaluniV1Pool"}],"id":4979,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5905:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4978,"name":"address","nodeType":"ElementaryTypeName","src":"5905:7:16","typeDescriptions":{}}},"id":4981,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5905:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5890:28:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4983,"nodeType":"ExpressionStatement","src":"5890:28:16"},{"expression":{"id":4985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5941:7:16","subExpression":{"id":4984,"name":"count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4927,"src":"5941:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4986,"nodeType":"ExpressionStatement","src":"5941:7:16"},{"id":4987,"nodeType":"Break","src":"5971:5:16"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4963,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4960,"src":"5800:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4964,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4954,"src":"5804:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5811:6:16","memberName":"length","nodeType":"MemberAccess","src":"5804:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5800:17:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4991,"initializationExpression":{"assignments":[4960],"declarations":[{"constant":false,"id":4960,"mutability":"mutable","name":"j","nameLocation":"5793:1:16","nodeType":"VariableDeclaration","scope":4991,"src":"5785:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4959,"name":"uint256","nodeType":"ElementaryTypeName","src":"5785:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4962,"initialValue":{"hexValue":"30","id":4961,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5797:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5785:13:16"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5819:3:16","subExpression":{"id":4967,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4960,"src":"5819:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4969,"nodeType":"ExpressionStatement","src":"5819:3:16"},"nodeType":"ForStatement","src":"5780:231:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4992,"name":"count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4927,"src":"6031:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4993,"name":"pools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4918,"src":"6040:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6046:6:16","memberName":"length","nodeType":"MemberAccess","src":"6040:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6031:21:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4998,"nodeType":"IfStatement","src":"6027:67:16","trueBody":{"id":4997,"nodeType":"Block","src":"6054:40:16","statements":[{"id":4996,"nodeType":"Break","src":"6073:5:16"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4934,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4931,"src":"5620:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4935,"name":"allPools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4612,"src":"5624:8:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":4936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5633:6:16","memberName":"length","nodeType":"MemberAccess","src":"5624:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5620:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5000,"initializationExpression":{"assignments":[4931],"declarations":[{"constant":false,"id":4931,"mutability":"mutable","name":"i","nameLocation":"5613:1:16","nodeType":"VariableDeclaration","scope":5000,"src":"5605:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4930,"name":"uint256","nodeType":"ElementaryTypeName","src":"5605:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4933,"initialValue":{"hexValue":"30","id":4932,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5617:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5605:13:16"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5641:3:16","subExpression":{"id":4938,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4931,"src":"5641:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4940,"nodeType":"ExpressionStatement","src":"5641:3:16"},"nodeType":"ForStatement","src":"5600:505:16"},{"assignments":[5005],"declarations":[{"constant":false,"id":5005,"mutability":"mutable","name":"result","nameLocation":"6134:6:16","nodeType":"VariableDeclaration","scope":5034,"src":"6117:23:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":5003,"name":"address","nodeType":"ElementaryTypeName","src":"6117:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5004,"nodeType":"ArrayTypeName","src":"6117:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":5011,"initialValue":{"arguments":[{"id":5009,"name":"count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4927,"src":"6157:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5008,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"6143:13:16","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address[] memory)"},"typeName":{"baseType":{"id":5006,"name":"address","nodeType":"ElementaryTypeName","src":"6147:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5007,"nodeType":"ArrayTypeName","src":"6147:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"id":5010,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6143:20:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"6117:46:16"},{"body":{"id":5030,"nodeType":"Block","src":"6210:47:16","statements":[{"expression":{"id":5028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5022,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5005,"src":"6225:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":5024,"indexExpression":{"id":5023,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5013,"src":"6232:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6225:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":5025,"name":"pools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4918,"src":"6237:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":5027,"indexExpression":{"id":5026,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5013,"src":"6243:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6237:8:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6225:20:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5029,"nodeType":"ExpressionStatement","src":"6225:20:16"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5016,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5013,"src":"6194:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5017,"name":"count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4927,"src":"6198:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6194:9:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5031,"initializationExpression":{"assignments":[5013],"declarations":[{"constant":false,"id":5013,"mutability":"mutable","name":"i","nameLocation":"6187:1:16","nodeType":"VariableDeclaration","scope":5031,"src":"6179:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5012,"name":"uint256","nodeType":"ElementaryTypeName","src":"6179:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5015,"initialValue":{"hexValue":"30","id":5014,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6191:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6179:13:16"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":5020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6205:3:16","subExpression":{"id":5019,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5013,"src":"6205:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5021,"nodeType":"ExpressionStatement","src":"6205:3:16"},"nodeType":"ForStatement","src":"6174:83:16"},{"expression":{"id":5032,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5005,"src":"6276:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":4913,"id":5033,"nodeType":"Return","src":"6269:13:16"}]},"documentation":{"id":4906,"nodeType":"StructuredDocumentation","src":"5207:199:16","text":" @dev Returns an array of pool addresses that contain the specified token.\n @param token The address of the token to search for.\n @return An array of pool addresses."},"functionSelector":"b4340e6a","id":5035,"implemented":true,"kind":"function","modifiers":[],"name":"getPoolsByAsset","nameLocation":"5421:15:16","nodeType":"FunctionDefinition","parameters":{"id":4909,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4908,"mutability":"mutable","name":"token","nameLocation":"5445:5:16","nodeType":"VariableDeclaration","scope":5035,"src":"5437:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4907,"name":"address","nodeType":"ElementaryTypeName","src":"5437:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5436:15:16"},"returnParameters":{"id":4913,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4912,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5035,"src":"5475:16:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4910,"name":"address","nodeType":"ElementaryTypeName","src":"5475:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4911,"nodeType":"ArrayTypeName","src":"5475:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"5474:18:16"},"scope":5068,"src":"5412:878:16","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":5066,"nodeType":"Block","src":"6361:185:16","statements":[{"body":{"id":5062,"nodeType":"Block","src":"6418:98:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":5053,"name":"allPools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4612,"src":"6437:8:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":5055,"indexExpression":{"id":5054,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5043,"src":"6446:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6437:11:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5056,"name":"_pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5037,"src":"6452:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6437:20:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5061,"nodeType":"IfStatement","src":"6433:72:16","trueBody":{"id":5060,"nodeType":"Block","src":"6459:46:16","statements":[{"expression":{"hexValue":"74727565","id":5058,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6485:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":5041,"id":5059,"nodeType":"Return","src":"6478:11:16"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5046,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5043,"src":"6392:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":5047,"name":"allPools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4612,"src":"6396:8:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":5048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6405:6:16","memberName":"length","nodeType":"MemberAccess","src":"6396:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6392:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5063,"initializationExpression":{"assignments":[5043],"declarations":[{"constant":false,"id":5043,"mutability":"mutable","name":"i","nameLocation":"6385:1:16","nodeType":"VariableDeclaration","scope":5063,"src":"6377:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5042,"name":"uint256","nodeType":"ElementaryTypeName","src":"6377:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5045,"initialValue":{"hexValue":"30","id":5044,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6389:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6377:13:16"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":5051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6413:3:16","subExpression":{"id":5050,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5043,"src":"6413:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5052,"nodeType":"ExpressionStatement","src":"6413:3:16"},"nodeType":"ForStatement","src":"6372:144:16"},{"expression":{"hexValue":"66616c7365","id":5064,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6533:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":5041,"id":5065,"nodeType":"Return","src":"6526:12:16"}]},"functionSelector":"89345efb","id":5067,"implemented":true,"kind":"function","modifiers":[],"name":"poolExist","nameLocation":"6307:9:16","nodeType":"FunctionDefinition","parameters":{"id":5038,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5037,"mutability":"mutable","name":"_pool","nameLocation":"6325:5:16","nodeType":"VariableDeclaration","scope":5067,"src":"6317:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5036,"name":"address","nodeType":"ElementaryTypeName","src":"6317:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6316:15:16"},"returnParameters":{"id":5041,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5040,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5067,"src":"6355:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5039,"name":"bool","nodeType":"ElementaryTypeName","src":"6355:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6354:6:16"},"scope":5068,"src":"6298:248:16","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":5069,"src":"1777:4772:16","usedErrors":[30,35,211,214,475,480,858,871,1768,1771],"usedEvents":[41,219,837,4628]}],"src":"40:6511:16"},"id":16},"contracts/interfaces/IBaluniV1Oracle.sol":{"ast":{"absolutePath":"contracts/interfaces/IBaluniV1Oracle.sol","exportedSymbols":{"IBaluniV1Oracle":[5093]},"id":5094,"license":"GNU AGPLv3","nodeType":"SourceUnit","nodes":[{"id":5070,"literals":["solidity","0.8",".25"],"nodeType":"PragmaDirective","src":"40:23:17"},{"abstract":false,"baseContracts":[],"canonicalName":"IBaluniV1Oracle","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":5093,"linearizedBaseContracts":[5093],"name":"IBaluniV1Oracle","nameLocation":"77:15:17","nodeType":"ContractDefinition","nodes":[{"functionSelector":"248391ff","id":5081,"implemented":false,"kind":"function","modifiers":[],"name":"convert","nameLocation":"109:7:17","nodeType":"FunctionDefinition","parameters":{"id":5077,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5072,"mutability":"mutable","name":"fromToken","nameLocation":"125:9:17","nodeType":"VariableDeclaration","scope":5081,"src":"117:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5071,"name":"address","nodeType":"ElementaryTypeName","src":"117:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5074,"mutability":"mutable","name":"toToken","nameLocation":"144:7:17","nodeType":"VariableDeclaration","scope":5081,"src":"136:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5073,"name":"address","nodeType":"ElementaryTypeName","src":"136:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5076,"mutability":"mutable","name":"amount","nameLocation":"161:6:17","nodeType":"VariableDeclaration","scope":5081,"src":"153:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5075,"name":"uint256","nodeType":"ElementaryTypeName","src":"153:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"116:52:17"},"returnParameters":{"id":5080,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5079,"mutability":"mutable","name":"valuation","nameLocation":"200:9:17","nodeType":"VariableDeclaration","scope":5081,"src":"192:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5078,"name":"uint256","nodeType":"ElementaryTypeName","src":"192:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"191:19:17"},"scope":5093,"src":"100:111:17","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"b27b5e75","id":5092,"implemented":false,"kind":"function","modifiers":[],"name":"convertScaled","nameLocation":"228:13:17","nodeType":"FunctionDefinition","parameters":{"id":5088,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5083,"mutability":"mutable","name":"fromToken","nameLocation":"260:9:17","nodeType":"VariableDeclaration","scope":5092,"src":"252:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5082,"name":"address","nodeType":"ElementaryTypeName","src":"252:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5085,"mutability":"mutable","name":"toToken","nameLocation":"288:7:17","nodeType":"VariableDeclaration","scope":5092,"src":"280:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5084,"name":"address","nodeType":"ElementaryTypeName","src":"280:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5087,"mutability":"mutable","name":"amount","nameLocation":"314:6:17","nodeType":"VariableDeclaration","scope":5092,"src":"306:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5086,"name":"uint256","nodeType":"ElementaryTypeName","src":"306:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"241:86:17"},"returnParameters":{"id":5091,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5090,"mutability":"mutable","name":"valuation","nameLocation":"359:9:17","nodeType":"VariableDeclaration","scope":5092,"src":"351:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5089,"name":"uint256","nodeType":"ElementaryTypeName","src":"351:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"350:19:17"},"scope":5093,"src":"219:151:17","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":5094,"src":"67:306:17","usedErrors":[],"usedEvents":[]}],"src":"40:335:17"},"id":17},"contracts/interfaces/IBaluniV1PoolPeriphery.sol":{"ast":{"absolutePath":"contracts/interfaces/IBaluniV1PoolPeriphery.sol","exportedSymbols":{"IBaluniV1PoolPeriphery":[5213]},"id":5214,"license":"GNU AGPLv3","nodeType":"SourceUnit","nodes":[{"id":5095,"literals":["solidity","0.8",".25"],"nodeType":"PragmaDirective","src":"40:23:18"},{"abstract":false,"baseContracts":[],"canonicalName":"IBaluniV1PoolPeriphery","contractDependencies":[],"contractKind":"interface","documentation":{"id":5096,"nodeType":"StructuredDocumentation","src":"67:101:18","text":" @title IBaluniV1PoolPeriphery\n @dev Interface for the BaluniV1PoolPeriphery contract."},"fullyImplemented":false,"id":5213,"linearizedBaseContracts":[5213],"name":"IBaluniV1PoolPeriphery","nameLocation":"180:22:18","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":5097,"nodeType":"StructuredDocumentation","src":"210:348:18","text":" @dev Swaps tokens in a BaluniV1Pool.\n @param fromToken The address of the token to swap from.\n @param toToken The address of the token to swap to.\n @param amount The amount of tokens to swap.\n @param receiver The address of the receiver.\n @return The amount of tokens received after the swap."},"functionSelector":"6e81221c","id":5110,"implemented":false,"kind":"function","modifiers":[],"name":"swap","nameLocation":"573:4:18","nodeType":"FunctionDefinition","parameters":{"id":5106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5099,"mutability":"mutable","name":"fromToken","nameLocation":"586:9:18","nodeType":"VariableDeclaration","scope":5110,"src":"578:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5098,"name":"address","nodeType":"ElementaryTypeName","src":"578:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5101,"mutability":"mutable","name":"toToken","nameLocation":"605:7:18","nodeType":"VariableDeclaration","scope":5110,"src":"597:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5100,"name":"address","nodeType":"ElementaryTypeName","src":"597:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5103,"mutability":"mutable","name":"amount","nameLocation":"622:6:18","nodeType":"VariableDeclaration","scope":5110,"src":"614:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5102,"name":"uint256","nodeType":"ElementaryTypeName","src":"614:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5105,"mutability":"mutable","name":"receiver","nameLocation":"638:8:18","nodeType":"VariableDeclaration","scope":5110,"src":"630:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5104,"name":"address","nodeType":"ElementaryTypeName","src":"630:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"577:70:18"},"returnParameters":{"id":5109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5108,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5110,"src":"666:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5107,"name":"uint256","nodeType":"ElementaryTypeName","src":"666:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"665:9:18"},"scope":5213,"src":"564:111:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":5111,"nodeType":"StructuredDocumentation","src":"683:515:18","text":" @dev Performs batch swaps between multiple token pairs.\n @param fromTokens An array of addresses representing the tokens to swap from.\n @param toTokens An array of addresses representing the tokens to swap to.\n @param amounts An array of amounts representing the amounts to swap.\n @param receivers An array of addresses representing the receivers of the swapped tokens.\n @return An array of amounts representing the amounts of tokens received after the swaps."},"functionSelector":"e74e9b06","id":5129,"implemented":false,"kind":"function","modifiers":[],"name":"batchSwap","nameLocation":"1213:9:18","nodeType":"FunctionDefinition","parameters":{"id":5124,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5114,"mutability":"mutable","name":"fromTokens","nameLocation":"1252:10:18","nodeType":"VariableDeclaration","scope":5129,"src":"1233:29:18","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":5112,"name":"address","nodeType":"ElementaryTypeName","src":"1233:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5113,"nodeType":"ArrayTypeName","src":"1233:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":5117,"mutability":"mutable","name":"toTokens","nameLocation":"1292:8:18","nodeType":"VariableDeclaration","scope":5129,"src":"1273:27:18","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":5115,"name":"address","nodeType":"ElementaryTypeName","src":"1273:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5116,"nodeType":"ArrayTypeName","src":"1273:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":5120,"mutability":"mutable","name":"amounts","nameLocation":"1330:7:18","nodeType":"VariableDeclaration","scope":5129,"src":"1311:26:18","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5118,"name":"uint256","nodeType":"ElementaryTypeName","src":"1311:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5119,"nodeType":"ArrayTypeName","src":"1311:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":5123,"mutability":"mutable","name":"receivers","nameLocation":"1367:9:18","nodeType":"VariableDeclaration","scope":5129,"src":"1348:28:18","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":5121,"name":"address","nodeType":"ElementaryTypeName","src":"1348:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5122,"nodeType":"ArrayTypeName","src":"1348:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"1222:161:18"},"returnParameters":{"id":5128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5127,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5129,"src":"1402:16:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5125,"name":"uint256","nodeType":"ElementaryTypeName","src":"1402:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5126,"nodeType":"ArrayTypeName","src":"1402:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1401:18:18"},"scope":5213,"src":"1204:216:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":5130,"nodeType":"StructuredDocumentation","src":"1428:160:18","text":" @dev Rebalances weights in a pool.\n @param poolAddress The address of the pool.\n @param receiver The address of the receiver."},"functionSelector":"ad414263","id":5137,"implemented":false,"kind":"function","modifiers":[],"name":"rebalanceWeights","nameLocation":"1603:16:18","nodeType":"FunctionDefinition","parameters":{"id":5135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5132,"mutability":"mutable","name":"poolAddress","nameLocation":"1628:11:18","nodeType":"VariableDeclaration","scope":5137,"src":"1620:19:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5131,"name":"address","nodeType":"ElementaryTypeName","src":"1620:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5134,"mutability":"mutable","name":"receiver","nameLocation":"1649:8:18","nodeType":"VariableDeclaration","scope":5137,"src":"1641:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5133,"name":"address","nodeType":"ElementaryTypeName","src":"1641:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1619:39:18"},"returnParameters":{"id":5136,"nodeType":"ParameterList","parameters":[],"src":"1667:0:18"},"scope":5213,"src":"1594:74:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":5138,"nodeType":"StructuredDocumentation","src":"1676:243:18","text":" @dev Adds liquidity to a BaluniV1Pool.\n @param amounts An array of amounts for each asset to add as liquidity.\n @param poolAddress The address of the pool.\n @param receiver The address of the receiver."},"functionSelector":"ec0cd2eb","id":5150,"implemented":false,"kind":"function","modifiers":[],"name":"addLiquidity","nameLocation":"1934:12:18","nodeType":"FunctionDefinition","parameters":{"id":5146,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5141,"mutability":"mutable","name":"amounts","nameLocation":"1964:7:18","nodeType":"VariableDeclaration","scope":5150,"src":"1947:24:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5139,"name":"uint256","nodeType":"ElementaryTypeName","src":"1947:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5140,"nodeType":"ArrayTypeName","src":"1947:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":5143,"mutability":"mutable","name":"poolAddress","nameLocation":"1981:11:18","nodeType":"VariableDeclaration","scope":5150,"src":"1973:19:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5142,"name":"address","nodeType":"ElementaryTypeName","src":"1973:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5145,"mutability":"mutable","name":"receiver","nameLocation":"2002:8:18","nodeType":"VariableDeclaration","scope":5150,"src":"1994:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5144,"name":"address","nodeType":"ElementaryTypeName","src":"1994:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1946:65:18"},"returnParameters":{"id":5149,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5148,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5150,"src":"2030:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5147,"name":"uint256","nodeType":"ElementaryTypeName","src":"2030:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2029:9:18"},"scope":5213,"src":"1925:114:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":5151,"nodeType":"StructuredDocumentation","src":"2047:232:18","text":" @dev Removes liquidity from a BaluniV1Pool.\n @param share The amount of liquidity tokens to remove.\n @param poolAddress The address of the pool.\n @param receiver The address of the receiver."},"functionSelector":"f31abcc4","id":5160,"implemented":false,"kind":"function","modifiers":[],"name":"removeLiquidity","nameLocation":"2294:15:18","nodeType":"FunctionDefinition","parameters":{"id":5158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5153,"mutability":"mutable","name":"share","nameLocation":"2318:5:18","nodeType":"VariableDeclaration","scope":5160,"src":"2310:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5152,"name":"uint256","nodeType":"ElementaryTypeName","src":"2310:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5155,"mutability":"mutable","name":"poolAddress","nameLocation":"2333:11:18","nodeType":"VariableDeclaration","scope":5160,"src":"2325:19:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5154,"name":"address","nodeType":"ElementaryTypeName","src":"2325:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5157,"mutability":"mutable","name":"receiver","nameLocation":"2354:8:18","nodeType":"VariableDeclaration","scope":5160,"src":"2346:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5156,"name":"address","nodeType":"ElementaryTypeName","src":"2346:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2309:54:18"},"returnParameters":{"id":5159,"nodeType":"ParameterList","parameters":[],"src":"2372:0:18"},"scope":5213,"src":"2285:88:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":5161,"nodeType":"StructuredDocumentation","src":"2381:330:18","text":" @dev Gets the amount of tokens received after a swap in a BaluniV1Pool.\n @param fromToken The address of the token to swap from.\n @param toToken The address of the token to swap to.\n @param amount The amount of tokens to swap.\n @return The amount of tokens received after the swap."},"functionSelector":"4aa06652","id":5172,"implemented":false,"kind":"function","modifiers":[],"name":"getAmountOut","nameLocation":"2726:12:18","nodeType":"FunctionDefinition","parameters":{"id":5168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5163,"mutability":"mutable","name":"fromToken","nameLocation":"2747:9:18","nodeType":"VariableDeclaration","scope":5172,"src":"2739:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5162,"name":"address","nodeType":"ElementaryTypeName","src":"2739:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5165,"mutability":"mutable","name":"toToken","nameLocation":"2766:7:18","nodeType":"VariableDeclaration","scope":5172,"src":"2758:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5164,"name":"address","nodeType":"ElementaryTypeName","src":"2758:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5167,"mutability":"mutable","name":"amount","nameLocation":"2783:6:18","nodeType":"VariableDeclaration","scope":5172,"src":"2775:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5166,"name":"uint256","nodeType":"ElementaryTypeName","src":"2775:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2738:52:18"},"returnParameters":{"id":5171,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5170,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5172,"src":"2814:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5169,"name":"uint256","nodeType":"ElementaryTypeName","src":"2814:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2813:9:18"},"scope":5213,"src":"2717:106:18","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":5173,"nodeType":"StructuredDocumentation","src":"2831:147:18","text":" @dev Performs rebalance if needed for the given tokens.\n @param poolAddress The address of the token pool to rebalance."},"functionSelector":"5568081a","id":5178,"implemented":false,"kind":"function","modifiers":[],"name":"performRebalanceIfNeeded","nameLocation":"2993:24:18","nodeType":"FunctionDefinition","parameters":{"id":5176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5175,"mutability":"mutable","name":"poolAddress","nameLocation":"3026:11:18","nodeType":"VariableDeclaration","scope":5178,"src":"3018:19:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5174,"name":"address","nodeType":"ElementaryTypeName","src":"3018:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3017:21:18"},"returnParameters":{"id":5177,"nodeType":"ParameterList","parameters":[],"src":"3047:0:18"},"scope":5213,"src":"2984:64:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":5179,"nodeType":"StructuredDocumentation","src":"3056:195:18","text":" @dev Returns an array of pool addresses that contain the given token.\n @param token The address of the token to search for.\n @return An array of pool addresses."},"functionSelector":"ae3cce1c","id":5187,"implemented":false,"kind":"function","modifiers":[],"name":"getPoolsContainingToken","nameLocation":"3266:23:18","nodeType":"FunctionDefinition","parameters":{"id":5182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5181,"mutability":"mutable","name":"token","nameLocation":"3298:5:18","nodeType":"VariableDeclaration","scope":5187,"src":"3290:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5180,"name":"address","nodeType":"ElementaryTypeName","src":"3290:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3289:15:18"},"returnParameters":{"id":5186,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5185,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5187,"src":"3328:16:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":5183,"name":"address","nodeType":"ElementaryTypeName","src":"3328:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5184,"nodeType":"ArrayTypeName","src":"3328:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"3327:18:18"},"scope":5213,"src":"3257:89:18","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":5188,"nodeType":"StructuredDocumentation","src":"3354:98:18","text":" @dev Returns the version of the contract.\n @return The version string."},"functionSelector":"0d8e6e2c","id":5193,"implemented":false,"kind":"function","modifiers":[],"name":"getVersion","nameLocation":"3467:10:18","nodeType":"FunctionDefinition","parameters":{"id":5189,"nodeType":"ParameterList","parameters":[],"src":"3477:2:18"},"returnParameters":{"id":5192,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5191,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5193,"src":"3503:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":5190,"name":"uint64","nodeType":"ElementaryTypeName","src":"3503:6:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"3502:8:18"},"scope":5213,"src":"3458:53:18","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":5194,"nodeType":"StructuredDocumentation","src":"3519:142:18","text":" @dev Returns the reserves of the pool.\n @param pool The address of the pool.\n @return An array of reserves."},"functionSelector":"3e99c1e4","id":5202,"implemented":false,"kind":"function","modifiers":[],"name":"getReserves","nameLocation":"3676:11:18","nodeType":"FunctionDefinition","parameters":{"id":5197,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5196,"mutability":"mutable","name":"pool","nameLocation":"3696:4:18","nodeType":"VariableDeclaration","scope":5202,"src":"3688:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5195,"name":"address","nodeType":"ElementaryTypeName","src":"3688:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3687:14:18"},"returnParameters":{"id":5201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5200,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5202,"src":"3725:16:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5198,"name":"uint256","nodeType":"ElementaryTypeName","src":"3725:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5199,"nodeType":"ArrayTypeName","src":"3725:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"3724:18:18"},"scope":5213,"src":"3667:76:18","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":5203,"nodeType":"StructuredDocumentation","src":"3751:210:18","text":" @dev Returns the reserve of a specific asset in a pool.\n @param pool The address of the pool.\n @param asset The address of the asset.\n @return The reserve of the asset."},"functionSelector":"a3e113fb","id":5212,"implemented":false,"kind":"function","modifiers":[],"name":"getAssetReserve","nameLocation":"3976:15:18","nodeType":"FunctionDefinition","parameters":{"id":5208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5205,"mutability":"mutable","name":"pool","nameLocation":"4000:4:18","nodeType":"VariableDeclaration","scope":5212,"src":"3992:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5204,"name":"address","nodeType":"ElementaryTypeName","src":"3992:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5207,"mutability":"mutable","name":"asset","nameLocation":"4014:5:18","nodeType":"VariableDeclaration","scope":5212,"src":"4006:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5206,"name":"address","nodeType":"ElementaryTypeName","src":"4006:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3991:29:18"},"returnParameters":{"id":5211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5210,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5212,"src":"4044:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5209,"name":"uint256","nodeType":"ElementaryTypeName","src":"4044:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4043:9:18"},"scope":5213,"src":"3967:86:18","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":5214,"src":"170:3886:18","usedErrors":[],"usedEvents":[]}],"src":"40:4018:18"},"id":18},"contracts/interfaces/IBaluniV1Rebalancer.sol":{"ast":{"absolutePath":"contracts/interfaces/IBaluniV1Rebalancer.sol","exportedSymbols":{"IBaluniV1Rebalancer":[5298]},"id":5299,"license":"GNU AGPLv3","nodeType":"SourceUnit","nodes":[{"id":5215,"literals":["solidity","0.8",".25"],"nodeType":"PragmaDirective","src":"40:23:19"},{"abstract":false,"baseContracts":[],"canonicalName":"IBaluniV1Rebalancer","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":5298,"linearizedBaseContracts":[5298],"name":"IBaluniV1Rebalancer","nameLocation":"77:19:19","nodeType":"ContractDefinition","nodes":[{"canonicalName":"IBaluniV1Rebalancer.RebalanceVars","id":5245,"members":[{"constant":false,"id":5217,"mutability":"mutable","name":"length","nameLocation":"144:6:19","nodeType":"VariableDeclaration","scope":5245,"src":"136:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5216,"name":"uint256","nodeType":"ElementaryTypeName","src":"136:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5219,"mutability":"mutable","name":"totalValue","nameLocation":"169:10:19","nodeType":"VariableDeclaration","scope":5245,"src":"161:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5218,"name":"uint256","nodeType":"ElementaryTypeName","src":"161:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5221,"mutability":"mutable","name":"finalUsdBalance","nameLocation":"198:15:19","nodeType":"VariableDeclaration","scope":5245,"src":"190:23:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5220,"name":"uint256","nodeType":"ElementaryTypeName","src":"190:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5223,"mutability":"mutable","name":"overweightVaultsLength","nameLocation":"232:22:19","nodeType":"VariableDeclaration","scope":5245,"src":"224:30:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5222,"name":"uint256","nodeType":"ElementaryTypeName","src":"224:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5225,"mutability":"mutable","name":"underweightVaultsLength","nameLocation":"273:23:19","nodeType":"VariableDeclaration","scope":5245,"src":"265:31:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5224,"name":"uint256","nodeType":"ElementaryTypeName","src":"265:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5227,"mutability":"mutable","name":"totalActiveWeight","nameLocation":"315:17:19","nodeType":"VariableDeclaration","scope":5245,"src":"307:25:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5226,"name":"uint256","nodeType":"ElementaryTypeName","src":"307:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5229,"mutability":"mutable","name":"amountOut","nameLocation":"351:9:19","nodeType":"VariableDeclaration","scope":5245,"src":"343:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5228,"name":"uint256","nodeType":"ElementaryTypeName","src":"343:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5232,"mutability":"mutable","name":"overweightVaults","nameLocation":"381:16:19","nodeType":"VariableDeclaration","scope":5245,"src":"371:26:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5230,"name":"uint256","nodeType":"ElementaryTypeName","src":"371:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5231,"nodeType":"ArrayTypeName","src":"371:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":5235,"mutability":"mutable","name":"overweightAmounts","nameLocation":"418:17:19","nodeType":"VariableDeclaration","scope":5245,"src":"408:27:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5233,"name":"uint256","nodeType":"ElementaryTypeName","src":"408:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5234,"nodeType":"ArrayTypeName","src":"408:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":5238,"mutability":"mutable","name":"underweightVaults","nameLocation":"456:17:19","nodeType":"VariableDeclaration","scope":5245,"src":"446:27:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5236,"name":"uint256","nodeType":"ElementaryTypeName","src":"446:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5237,"nodeType":"ArrayTypeName","src":"446:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":5241,"mutability":"mutable","name":"underweightAmounts","nameLocation":"494:18:19","nodeType":"VariableDeclaration","scope":5245,"src":"484:28:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5239,"name":"uint256","nodeType":"ElementaryTypeName","src":"484:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5240,"nodeType":"ArrayTypeName","src":"484:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":5244,"mutability":"mutable","name":"balances","nameLocation":"533:8:19","nodeType":"VariableDeclaration","scope":5245,"src":"523:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5242,"name":"uint256","nodeType":"ElementaryTypeName","src":"523:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5243,"nodeType":"ArrayTypeName","src":"523:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"name":"RebalanceVars","nameLocation":"111:13:19","nodeType":"StructDefinition","scope":5298,"src":"104:445:19","visibility":"public"},{"functionSelector":"f0bf7714","id":5265,"implemented":false,"kind":"function","modifiers":[],"name":"rebalance","nameLocation":"584:9:19","nodeType":"FunctionDefinition","parameters":{"id":5263,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5248,"mutability":"mutable","name":"balances","nameLocation":"621:8:19","nodeType":"VariableDeclaration","scope":5265,"src":"604:25:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5246,"name":"uint256","nodeType":"ElementaryTypeName","src":"604:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5247,"nodeType":"ArrayTypeName","src":"604:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":5251,"mutability":"mutable","name":"assets","nameLocation":"659:6:19","nodeType":"VariableDeclaration","scope":5265,"src":"640:25:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":5249,"name":"address","nodeType":"ElementaryTypeName","src":"640:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5250,"nodeType":"ArrayTypeName","src":"640:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":5254,"mutability":"mutable","name":"weights","nameLocation":"695:7:19","nodeType":"VariableDeclaration","scope":5265,"src":"676:26:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5252,"name":"uint256","nodeType":"ElementaryTypeName","src":"676:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5253,"nodeType":"ArrayTypeName","src":"676:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":5256,"mutability":"mutable","name":"limit","nameLocation":"721:5:19","nodeType":"VariableDeclaration","scope":5265,"src":"713:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5255,"name":"uint256","nodeType":"ElementaryTypeName","src":"713:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5258,"mutability":"mutable","name":"sender","nameLocation":"745:6:19","nodeType":"VariableDeclaration","scope":5265,"src":"737:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5257,"name":"address","nodeType":"ElementaryTypeName","src":"737:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5260,"mutability":"mutable","name":"receiver","nameLocation":"770:8:19","nodeType":"VariableDeclaration","scope":5265,"src":"762:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5259,"name":"address","nodeType":"ElementaryTypeName","src":"762:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5262,"mutability":"mutable","name":"baseAsset","nameLocation":"797:9:19","nodeType":"VariableDeclaration","scope":5265,"src":"789:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5261,"name":"address","nodeType":"ElementaryTypeName","src":"789:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"593:220:19"},"returnParameters":{"id":5264,"nodeType":"ParameterList","parameters":[],"src":"822:0:19"},"scope":5298,"src":"575:248:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"997146f5","id":5286,"implemented":false,"kind":"function","modifiers":[],"name":"checkRebalance","nameLocation":"840:14:19","nodeType":"FunctionDefinition","parameters":{"id":5281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5268,"mutability":"mutable","name":"balances","nameLocation":"882:8:19","nodeType":"VariableDeclaration","scope":5286,"src":"865:25:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5266,"name":"uint256","nodeType":"ElementaryTypeName","src":"865:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5267,"nodeType":"ArrayTypeName","src":"865:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":5271,"mutability":"mutable","name":"assets","nameLocation":"920:6:19","nodeType":"VariableDeclaration","scope":5286,"src":"901:25:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":5269,"name":"address","nodeType":"ElementaryTypeName","src":"901:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5270,"nodeType":"ArrayTypeName","src":"901:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":5274,"mutability":"mutable","name":"weights","nameLocation":"956:7:19","nodeType":"VariableDeclaration","scope":5286,"src":"937:26:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5272,"name":"uint256","nodeType":"ElementaryTypeName","src":"937:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5273,"nodeType":"ArrayTypeName","src":"937:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":5276,"mutability":"mutable","name":"limit","nameLocation":"982:5:19","nodeType":"VariableDeclaration","scope":5286,"src":"974:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5275,"name":"uint256","nodeType":"ElementaryTypeName","src":"974:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5278,"mutability":"mutable","name":"sender","nameLocation":"1006:6:19","nodeType":"VariableDeclaration","scope":5286,"src":"998:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5277,"name":"address","nodeType":"ElementaryTypeName","src":"998:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5280,"mutability":"mutable","name":"baseAsset","nameLocation":"1031:9:19","nodeType":"VariableDeclaration","scope":5286,"src":"1023:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5279,"name":"address","nodeType":"ElementaryTypeName","src":"1023:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"854:193:19"},"returnParameters":{"id":5285,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5284,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5286,"src":"1071:20:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_RebalanceVars_$5245_memory_ptr","typeString":"struct IBaluniV1Rebalancer.RebalanceVars"},"typeName":{"id":5283,"nodeType":"UserDefinedTypeName","pathNode":{"id":5282,"name":"RebalanceVars","nameLocations":["1071:13:19"],"nodeType":"IdentifierPath","referencedDeclaration":5245,"src":"1071:13:19"},"referencedDeclaration":5245,"src":"1071:13:19","typeDescriptions":{"typeIdentifier":"t_struct$_RebalanceVars_$5245_storage_ptr","typeString":"struct IBaluniV1Rebalancer.RebalanceVars"}},"visibility":"internal"}],"src":"1070:22:19"},"scope":5298,"src":"831:262:19","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"248391ff","id":5297,"implemented":false,"kind":"function","modifiers":[],"name":"convert","nameLocation":"1110:7:19","nodeType":"FunctionDefinition","parameters":{"id":5293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5288,"mutability":"mutable","name":"fromToken","nameLocation":"1126:9:19","nodeType":"VariableDeclaration","scope":5297,"src":"1118:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5287,"name":"address","nodeType":"ElementaryTypeName","src":"1118:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5290,"mutability":"mutable","name":"toToken","nameLocation":"1145:7:19","nodeType":"VariableDeclaration","scope":5297,"src":"1137:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5289,"name":"address","nodeType":"ElementaryTypeName","src":"1137:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5292,"mutability":"mutable","name":"amount","nameLocation":"1162:6:19","nodeType":"VariableDeclaration","scope":5297,"src":"1154:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5291,"name":"uint256","nodeType":"ElementaryTypeName","src":"1154:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1117:52:19"},"returnParameters":{"id":5296,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5295,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5297,"src":"1193:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5294,"name":"uint256","nodeType":"ElementaryTypeName","src":"1193:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1192:9:19"},"scope":5298,"src":"1101:101:19","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":5299,"src":"67:1138:19","usedErrors":[],"usedEvents":[]}],"src":"40:1167:19"},"id":19},"contracts/interfaces/IBaluniV1Registry.sol":{"ast":{"absolutePath":"contracts/interfaces/IBaluniV1Registry.sol","exportedSymbols":{"IBaluniV1Registry":[5472]},"id":5473,"license":"GNU AGPLv3","nodeType":"SourceUnit","nodes":[{"id":5300,"literals":["solidity","0.8",".25"],"nodeType":"PragmaDirective","src":"40:23:20"},{"abstract":false,"baseContracts":[],"canonicalName":"IBaluniV1Registry","contractDependencies":[],"contractKind":"interface","documentation":{"id":5301,"nodeType":"StructuredDocumentation","src":"67:91:20","text":" @title IBaluniV1Registry\n @dev Interface for the BaluniV1Registry contract."},"fullyImplemented":false,"id":5472,"linearizedBaseContracts":[5472],"name":"IBaluniV1Registry","nameLocation":"170:17:20","nodeType":"ContractDefinition","nodes":[{"functionSelector":"e04b677f","id":5306,"implemented":false,"kind":"function","modifiers":[],"name":"setUniswapFactory","nameLocation":"204:17:20","nodeType":"FunctionDefinition","parameters":{"id":5304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5303,"mutability":"mutable","name":"_uniswapFactory","nameLocation":"230:15:20","nodeType":"VariableDeclaration","scope":5306,"src":"222:23:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5302,"name":"address","nodeType":"ElementaryTypeName","src":"222:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"221:25:20"},"returnParameters":{"id":5305,"nodeType":"ParameterList","parameters":[],"src":"255:0:20"},"scope":5472,"src":"195:61:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"bea9849e","id":5311,"implemented":false,"kind":"function","modifiers":[],"name":"setUniswapRouter","nameLocation":"273:16:20","nodeType":"FunctionDefinition","parameters":{"id":5309,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5308,"mutability":"mutable","name":"_uniswapRouter","nameLocation":"298:14:20","nodeType":"VariableDeclaration","scope":5311,"src":"290:22:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5307,"name":"address","nodeType":"ElementaryTypeName","src":"290:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"289:24:20"},"returnParameters":{"id":5310,"nodeType":"ParameterList","parameters":[],"src":"322:0:20"},"scope":5472,"src":"264:59:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"f1dccde7","id":5316,"implemented":false,"kind":"function","modifiers":[],"name":"setBaluniAgentFactory","nameLocation":"340:21:20","nodeType":"FunctionDefinition","parameters":{"id":5314,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5313,"mutability":"mutable","name":"_baluniAgentFactory","nameLocation":"370:19:20","nodeType":"VariableDeclaration","scope":5316,"src":"362:27:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5312,"name":"address","nodeType":"ElementaryTypeName","src":"362:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"361:29:20"},"returnParameters":{"id":5315,"nodeType":"ParameterList","parameters":[],"src":"399:0:20"},"scope":5472,"src":"331:69:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"588c5b70","id":5321,"implemented":false,"kind":"function","modifiers":[],"name":"setBaluniPoolPeriphery","nameLocation":"417:22:20","nodeType":"FunctionDefinition","parameters":{"id":5319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5318,"mutability":"mutable","name":"_baluniPoolPeriphery","nameLocation":"448:20:20","nodeType":"VariableDeclaration","scope":5321,"src":"440:28:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5317,"name":"address","nodeType":"ElementaryTypeName","src":"440:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"439:30:20"},"returnParameters":{"id":5320,"nodeType":"ParameterList","parameters":[],"src":"478:0:20"},"scope":5472,"src":"408:71:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"c3f5df5c","id":5326,"implemented":false,"kind":"function","modifiers":[],"name":"setBaluniSwapper","nameLocation":"496:16:20","nodeType":"FunctionDefinition","parameters":{"id":5324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5323,"mutability":"mutable","name":"_baluniSwapper","nameLocation":"521:14:20","nodeType":"VariableDeclaration","scope":5326,"src":"513:22:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5322,"name":"address","nodeType":"ElementaryTypeName","src":"513:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"512:24:20"},"returnParameters":{"id":5325,"nodeType":"ParameterList","parameters":[],"src":"545:0:20"},"scope":5472,"src":"487:59:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"f5b84f64","id":5331,"implemented":false,"kind":"function","modifiers":[],"name":"setBaluniOracle","nameLocation":"563:15:20","nodeType":"FunctionDefinition","parameters":{"id":5329,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5328,"mutability":"mutable","name":"_baluniOracle","nameLocation":"587:13:20","nodeType":"VariableDeclaration","scope":5331,"src":"579:21:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5327,"name":"address","nodeType":"ElementaryTypeName","src":"579:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"578:23:20"},"returnParameters":{"id":5330,"nodeType":"ParameterList","parameters":[],"src":"610:0:20"},"scope":5472,"src":"554:57:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"8267c2c8","id":5336,"implemented":false,"kind":"function","modifiers":[],"name":"setBaluniPoolFactory","nameLocation":"628:20:20","nodeType":"FunctionDefinition","parameters":{"id":5334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5333,"mutability":"mutable","name":"_baluniPoolFactory","nameLocation":"657:18:20","nodeType":"VariableDeclaration","scope":5336,"src":"649:26:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5332,"name":"address","nodeType":"ElementaryTypeName","src":"649:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"648:28:20"},"returnParameters":{"id":5335,"nodeType":"ParameterList","parameters":[],"src":"685:0:20"},"scope":5472,"src":"619:67:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"0241bffa","id":5341,"implemented":false,"kind":"function","modifiers":[],"name":"setBaluniRebalancer","nameLocation":"703:19:20","nodeType":"FunctionDefinition","parameters":{"id":5339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5338,"mutability":"mutable","name":"_baluniRebalancer","nameLocation":"731:17:20","nodeType":"VariableDeclaration","scope":5341,"src":"723:25:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5337,"name":"address","nodeType":"ElementaryTypeName","src":"723:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"722:27:20"},"returnParameters":{"id":5340,"nodeType":"ParameterList","parameters":[],"src":"758:0:20"},"scope":5472,"src":"694:65:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"400fb668","id":5346,"implemented":false,"kind":"function","modifiers":[],"name":"setBaluniRouter","nameLocation":"776:15:20","nodeType":"FunctionDefinition","parameters":{"id":5344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5343,"mutability":"mutable","name":"_baluniRouter","nameLocation":"800:13:20","nodeType":"VariableDeclaration","scope":5346,"src":"792:21:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5342,"name":"address","nodeType":"ElementaryTypeName","src":"792:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"791:23:20"},"returnParameters":{"id":5345,"nodeType":"ParameterList","parameters":[],"src":"823:0:20"},"scope":5472,"src":"767:57:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"6c43274c","id":5351,"implemented":false,"kind":"function","modifiers":[],"name":"setBaluniRegistry","nameLocation":"841:17:20","nodeType":"FunctionDefinition","parameters":{"id":5349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5348,"mutability":"mutable","name":"_baluniRegistry","nameLocation":"867:15:20","nodeType":"VariableDeclaration","scope":5351,"src":"859:23:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5347,"name":"address","nodeType":"ElementaryTypeName","src":"859:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"858:25:20"},"returnParameters":{"id":5350,"nodeType":"ParameterList","parameters":[],"src":"892:0:20"},"scope":5472,"src":"832:61:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"b6fe9cc7","id":5356,"implemented":false,"kind":"function","modifiers":[],"name":"setWNATIVE","nameLocation":"910:10:20","nodeType":"FunctionDefinition","parameters":{"id":5354,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5353,"mutability":"mutable","name":"_WNATIVE","nameLocation":"929:8:20","nodeType":"VariableDeclaration","scope":5356,"src":"921:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5352,"name":"address","nodeType":"ElementaryTypeName","src":"921:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"920:18:20"},"returnParameters":{"id":5355,"nodeType":"ParameterList","parameters":[],"src":"947:0:20"},"scope":5472,"src":"901:47:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"b3e089a2","id":5361,"implemented":false,"kind":"function","modifiers":[],"name":"setUSDC","nameLocation":"965:7:20","nodeType":"FunctionDefinition","parameters":{"id":5359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5358,"mutability":"mutable","name":"_USDC","nameLocation":"981:5:20","nodeType":"VariableDeclaration","scope":5361,"src":"973:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5357,"name":"address","nodeType":"ElementaryTypeName","src":"973:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"972:15:20"},"returnParameters":{"id":5360,"nodeType":"ParameterList","parameters":[],"src":"996:0:20"},"scope":5472,"src":"956:41:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"f0f44260","id":5366,"implemented":false,"kind":"function","modifiers":[],"name":"setTreasury","nameLocation":"1014:11:20","nodeType":"FunctionDefinition","parameters":{"id":5364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5363,"mutability":"mutable","name":"_treasury","nameLocation":"1034:9:20","nodeType":"VariableDeclaration","scope":5366,"src":"1026:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5362,"name":"address","nodeType":"ElementaryTypeName","src":"1026:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1025:19:20"},"returnParameters":{"id":5365,"nodeType":"ParameterList","parameters":[],"src":"1053:0:20"},"scope":5472,"src":"1005:49:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"c08f786b","id":5371,"implemented":false,"kind":"function","modifiers":[],"name":"set1inchSpotAgg","nameLocation":"1071:15:20","nodeType":"FunctionDefinition","parameters":{"id":5369,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5368,"mutability":"mutable","name":"__1inchSpotAgg","nameLocation":"1095:14:20","nodeType":"VariableDeclaration","scope":5371,"src":"1087:22:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5367,"name":"address","nodeType":"ElementaryTypeName","src":"1087:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1086:24:20"},"returnParameters":{"id":5370,"nodeType":"ParameterList","parameters":[],"src":"1119:0:20"},"scope":5472,"src":"1062:58:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"9e6453f8","id":5376,"implemented":false,"kind":"function","modifiers":[],"name":"setBPS_FEE","nameLocation":"1137:10:20","nodeType":"FunctionDefinition","parameters":{"id":5374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5373,"mutability":"mutable","name":"__BPS_FEE","nameLocation":"1156:9:20","nodeType":"VariableDeclaration","scope":5376,"src":"1148:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5372,"name":"uint256","nodeType":"ElementaryTypeName","src":"1148:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1147:19:20"},"returnParameters":{"id":5375,"nodeType":"ParameterList","parameters":[],"src":"1175:0:20"},"scope":5472,"src":"1128:48:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"3e6dfa36","id":5381,"implemented":false,"kind":"function","modifiers":[],"name":"getUniswapFactory","nameLocation":"1193:17:20","nodeType":"FunctionDefinition","parameters":{"id":5377,"nodeType":"ParameterList","parameters":[],"src":"1210:2:20"},"returnParameters":{"id":5380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5379,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5381,"src":"1236:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5378,"name":"address","nodeType":"ElementaryTypeName","src":"1236:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1235:9:20"},"scope":5472,"src":"1184:61:20","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"524900b5","id":5386,"implemented":false,"kind":"function","modifiers":[],"name":"getUniswapRouter","nameLocation":"1262:16:20","nodeType":"FunctionDefinition","parameters":{"id":5382,"nodeType":"ParameterList","parameters":[],"src":"1278:2:20"},"returnParameters":{"id":5385,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5384,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5386,"src":"1304:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5383,"name":"address","nodeType":"ElementaryTypeName","src":"1304:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1303:9:20"},"scope":5472,"src":"1253:60:20","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"82755ebb","id":5391,"implemented":false,"kind":"function","modifiers":[],"name":"getBaluniSwapper","nameLocation":"1330:16:20","nodeType":"FunctionDefinition","parameters":{"id":5387,"nodeType":"ParameterList","parameters":[],"src":"1346:2:20"},"returnParameters":{"id":5390,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5389,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5391,"src":"1372:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5388,"name":"address","nodeType":"ElementaryTypeName","src":"1372:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1371:9:20"},"scope":5472,"src":"1321:60:20","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"bb3ba04c","id":5396,"implemented":false,"kind":"function","modifiers":[],"name":"getBaluniOracle","nameLocation":"1398:15:20","nodeType":"FunctionDefinition","parameters":{"id":5392,"nodeType":"ParameterList","parameters":[],"src":"1413:2:20"},"returnParameters":{"id":5395,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5394,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5396,"src":"1439:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5393,"name":"address","nodeType":"ElementaryTypeName","src":"1439:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1438:9:20"},"scope":5472,"src":"1389:59:20","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"f5d2d998","id":5401,"implemented":false,"kind":"function","modifiers":[],"name":"getBaluniAgentFactory","nameLocation":"1465:21:20","nodeType":"FunctionDefinition","parameters":{"id":5397,"nodeType":"ParameterList","parameters":[],"src":"1486:2:20"},"returnParameters":{"id":5400,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5399,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5401,"src":"1512:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5398,"name":"address","nodeType":"ElementaryTypeName","src":"1512:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1511:9:20"},"scope":5472,"src":"1456:65:20","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"1acb6141","id":5406,"implemented":false,"kind":"function","modifiers":[],"name":"getBaluniPoolPeriphery","nameLocation":"1538:22:20","nodeType":"FunctionDefinition","parameters":{"id":5402,"nodeType":"ParameterList","parameters":[],"src":"1560:2:20"},"returnParameters":{"id":5405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5404,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5406,"src":"1586:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5403,"name":"address","nodeType":"ElementaryTypeName","src":"1586:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1585:9:20"},"scope":5472,"src":"1529:66:20","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"7c6fd308","id":5411,"implemented":false,"kind":"function","modifiers":[],"name":"getBaluniPoolFactory","nameLocation":"1612:20:20","nodeType":"FunctionDefinition","parameters":{"id":5407,"nodeType":"ParameterList","parameters":[],"src":"1632:2:20"},"returnParameters":{"id":5410,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5409,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5411,"src":"1658:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5408,"name":"address","nodeType":"ElementaryTypeName","src":"1658:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1657:9:20"},"scope":5472,"src":"1603:64:20","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"cff49d68","id":5416,"implemented":false,"kind":"function","modifiers":[],"name":"getBaluniRebalancer","nameLocation":"1684:19:20","nodeType":"FunctionDefinition","parameters":{"id":5412,"nodeType":"ParameterList","parameters":[],"src":"1703:2:20"},"returnParameters":{"id":5415,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5414,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5416,"src":"1729:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5413,"name":"address","nodeType":"ElementaryTypeName","src":"1729:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1728:9:20"},"scope":5472,"src":"1675:63:20","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"04cc7325","id":5421,"implemented":false,"kind":"function","modifiers":[],"name":"getBaluniRouter","nameLocation":"1755:15:20","nodeType":"FunctionDefinition","parameters":{"id":5417,"nodeType":"ParameterList","parameters":[],"src":"1770:2:20"},"returnParameters":{"id":5420,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5419,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5421,"src":"1796:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5418,"name":"address","nodeType":"ElementaryTypeName","src":"1796:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1795:9:20"},"scope":5472,"src":"1746:59:20","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"c9aba8ae","id":5426,"implemented":false,"kind":"function","modifiers":[],"name":"getBaluniRegistry","nameLocation":"1822:17:20","nodeType":"FunctionDefinition","parameters":{"id":5422,"nodeType":"ParameterList","parameters":[],"src":"1839:2:20"},"returnParameters":{"id":5425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5424,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5426,"src":"1865:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5423,"name":"address","nodeType":"ElementaryTypeName","src":"1865:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1864:9:20"},"scope":5472,"src":"1813:61:20","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"6c9c0078","id":5431,"implemented":false,"kind":"function","modifiers":[],"name":"getWNATIVE","nameLocation":"1891:10:20","nodeType":"FunctionDefinition","parameters":{"id":5427,"nodeType":"ParameterList","parameters":[],"src":"1901:2:20"},"returnParameters":{"id":5430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5429,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5431,"src":"1927:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5428,"name":"address","nodeType":"ElementaryTypeName","src":"1927:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1926:9:20"},"scope":5472,"src":"1882:54:20","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"1bf01e9b","id":5436,"implemented":false,"kind":"function","modifiers":[],"name":"getUSDC","nameLocation":"1953:7:20","nodeType":"FunctionDefinition","parameters":{"id":5432,"nodeType":"ParameterList","parameters":[],"src":"1960:2:20"},"returnParameters":{"id":5435,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5434,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5436,"src":"1986:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5433,"name":"address","nodeType":"ElementaryTypeName","src":"1986:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1985:9:20"},"scope":5472,"src":"1944:51:20","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"8e1c3a8a","id":5441,"implemented":false,"kind":"function","modifiers":[],"name":"get1inchSpotAgg","nameLocation":"2012:15:20","nodeType":"FunctionDefinition","parameters":{"id":5437,"nodeType":"ParameterList","parameters":[],"src":"2027:2:20"},"returnParameters":{"id":5440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5439,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5441,"src":"2053:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5438,"name":"address","nodeType":"ElementaryTypeName","src":"2053:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2052:9:20"},"scope":5472,"src":"2003:59:20","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"85462d6f","id":5446,"implemented":false,"kind":"function","modifiers":[],"name":"getBPS_FEE","nameLocation":"2079:10:20","nodeType":"FunctionDefinition","parameters":{"id":5442,"nodeType":"ParameterList","parameters":[],"src":"2089:2:20"},"returnParameters":{"id":5445,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5444,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5446,"src":"2115:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5443,"name":"uint256","nodeType":"ElementaryTypeName","src":"2115:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2114:9:20"},"scope":5472,"src":"2070:54:20","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"9380fb6f","id":5451,"implemented":false,"kind":"function","modifiers":[],"name":"getMAX_BPS_FEE","nameLocation":"2141:14:20","nodeType":"FunctionDefinition","parameters":{"id":5447,"nodeType":"ParameterList","parameters":[],"src":"2155:2:20"},"returnParameters":{"id":5450,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5449,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5451,"src":"2181:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5448,"name":"uint256","nodeType":"ElementaryTypeName","src":"2181:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2180:9:20"},"scope":5472,"src":"2132:58:20","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"4f4608a2","id":5456,"implemented":false,"kind":"function","modifiers":[],"name":"getBPS_BASE","nameLocation":"2207:11:20","nodeType":"FunctionDefinition","parameters":{"id":5452,"nodeType":"ParameterList","parameters":[],"src":"2218:2:20"},"returnParameters":{"id":5455,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5454,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5456,"src":"2244:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5453,"name":"uint256","nodeType":"ElementaryTypeName","src":"2244:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2243:9:20"},"scope":5472,"src":"2198:55:20","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"3b19e84a","id":5461,"implemented":false,"kind":"function","modifiers":[],"name":"getTreasury","nameLocation":"2270:11:20","nodeType":"FunctionDefinition","parameters":{"id":5457,"nodeType":"ParameterList","parameters":[],"src":"2281:2:20"},"returnParameters":{"id":5460,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5459,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5461,"src":"2307:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5458,"name":"address","nodeType":"ElementaryTypeName","src":"2307:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2306:9:20"},"scope":5472,"src":"2261:55:20","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"cc01e9a6","id":5466,"implemented":false,"kind":"function","modifiers":[],"name":"setStaticOracle","nameLocation":"2333:15:20","nodeType":"FunctionDefinition","parameters":{"id":5464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5463,"mutability":"mutable","name":"_staticOracle","nameLocation":"2357:13:20","nodeType":"VariableDeclaration","scope":5466,"src":"2349:21:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5462,"name":"address","nodeType":"ElementaryTypeName","src":"2349:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2348:23:20"},"returnParameters":{"id":5465,"nodeType":"ParameterList","parameters":[],"src":"2380:0:20"},"scope":5472,"src":"2324:57:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"a5d2236f","id":5471,"implemented":false,"kind":"function","modifiers":[],"name":"getStaticOracle","nameLocation":"2398:15:20","nodeType":"FunctionDefinition","parameters":{"id":5467,"nodeType":"ParameterList","parameters":[],"src":"2413:2:20"},"returnParameters":{"id":5470,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5469,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5471,"src":"2439:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5468,"name":"address","nodeType":"ElementaryTypeName","src":"2439:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2438:9:20"},"scope":5472,"src":"2389:59:20","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":5473,"src":"160:2291:20","usedErrors":[],"usedEvents":[]}],"src":"40:2413:20"},"id":20},"contracts/libs/DSMath.sol":{"ast":{"absolutePath":"contracts/libs/DSMath.sol","exportedSymbols":{"DSMath":[5624]},"id":5625,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5474,"literals":["solidity","0.8",".25"],"nodeType":"PragmaDirective","src":"746:23:21"},{"abstract":false,"baseContracts":[],"canonicalName":"DSMath","contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":5624,"linearizedBaseContracts":[5624],"name":"DSMath","nameLocation":"781:6:21","nodeType":"ContractDefinition","nodes":[{"constant":true,"functionSelector":"6a146024","id":5479,"mutability":"constant","name":"WAD","nameLocation":"819:3:21","nodeType":"VariableDeclaration","scope":5624,"src":"795:38:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5475,"name":"uint256","nodeType":"ElementaryTypeName","src":"795:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"id":5478,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5476,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"825:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3138","id":5477,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"831:2:21","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"825:8:21","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}},"visibility":"public"},{"constant":true,"functionSelector":"552033c4","id":5484,"mutability":"constant","name":"RAY","nameLocation":"864:3:21","nodeType":"VariableDeclaration","scope":5624,"src":"840:38:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5480,"name":"uint256","nodeType":"ElementaryTypeName","src":"840:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_1000000000000000000000000000_by_1","typeString":"int_const 1000000000000000000000000000"},"id":5483,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5481,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"870:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3237","id":5482,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"876:2:21","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"870:8:21","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000000000000_by_1","typeString":"int_const 1000000000000000000000000000"}},"visibility":"public"},{"body":{"id":5506,"nodeType":"Block","src":"994:53:21","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5493,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5486,"src":"1014:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5494,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5488,"src":"1018:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1014:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5496,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1013:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5499,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"id":5497,"name":"WAD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5479,"src":"1024:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":5498,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1030:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1024:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5500,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1023:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1013:19:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5502,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1012:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5503,"name":"WAD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5479,"src":"1036:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1012:27:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5492,"id":5505,"nodeType":"Return","src":"1005:34:21"}]},"id":5507,"implemented":true,"kind":"function","modifiers":[],"name":"wmul","nameLocation":"935:4:21","nodeType":"FunctionDefinition","parameters":{"id":5489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5486,"mutability":"mutable","name":"x","nameLocation":"948:1:21","nodeType":"VariableDeclaration","scope":5507,"src":"940:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5485,"name":"uint256","nodeType":"ElementaryTypeName","src":"940:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5488,"mutability":"mutable","name":"y","nameLocation":"959:1:21","nodeType":"VariableDeclaration","scope":5507,"src":"951:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5487,"name":"uint256","nodeType":"ElementaryTypeName","src":"951:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"939:22:21"},"returnParameters":{"id":5492,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5491,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5507,"src":"985:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5490,"name":"uint256","nodeType":"ElementaryTypeName","src":"985:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"984:9:21"},"scope":5624,"src":"926:121:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5529,"nodeType":"Block","src":"1162:51:21","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5516,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5509,"src":"1182:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5517,"name":"WAD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5479,"src":"1186:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1182:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5519,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1181:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5520,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5511,"src":"1194:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":5521,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1198:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1194:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5523,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1193:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1181:19:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5525,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1180:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5526,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5511,"src":"1204:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1180:25:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5515,"id":5528,"nodeType":"Return","src":"1173:32:21"}]},"id":5530,"implemented":true,"kind":"function","modifiers":[],"name":"wdiv","nameLocation":"1103:4:21","nodeType":"FunctionDefinition","parameters":{"id":5512,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5509,"mutability":"mutable","name":"x","nameLocation":"1116:1:21","nodeType":"VariableDeclaration","scope":5530,"src":"1108:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5508,"name":"uint256","nodeType":"ElementaryTypeName","src":"1108:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5511,"mutability":"mutable","name":"y","nameLocation":"1127:1:21","nodeType":"VariableDeclaration","scope":5530,"src":"1119:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5510,"name":"uint256","nodeType":"ElementaryTypeName","src":"1119:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1107:22:21"},"returnParameters":{"id":5515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5514,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5530,"src":"1153:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5513,"name":"uint256","nodeType":"ElementaryTypeName","src":"1153:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1152:9:21"},"scope":5624,"src":"1094:119:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5542,"nodeType":"Block","src":"1284:38:21","statements":[{"expression":{"arguments":[{"id":5538,"name":"WAD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5479,"src":"1307:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5539,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5532,"src":"1312:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5537,"name":"wdiv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5530,"src":"1302:4:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5540,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1302:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5536,"id":5541,"nodeType":"Return","src":"1295:19:21"}]},"id":5543,"implemented":true,"kind":"function","modifiers":[],"name":"reciprocal","nameLocation":"1230:10:21","nodeType":"FunctionDefinition","parameters":{"id":5533,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5532,"mutability":"mutable","name":"x","nameLocation":"1249:1:21","nodeType":"VariableDeclaration","scope":5543,"src":"1241:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5531,"name":"uint256","nodeType":"ElementaryTypeName","src":"1241:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1240:11:21"},"returnParameters":{"id":5536,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5535,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5543,"src":"1275:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5534,"name":"uint256","nodeType":"ElementaryTypeName","src":"1275:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1274:9:21"},"scope":5624,"src":"1221:101:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5597,"nodeType":"Block","src":"1972:206:21","statements":[{"expression":{"id":5561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5552,"name":"z","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5550,"src":"1983:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5553,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5547,"src":"1987:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":5554,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1991:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1987:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":5556,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1996:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1987:10:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":5559,"name":"RAY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5484,"src":"2004:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1987:20:21","trueExpression":{"id":5558,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5545,"src":"2000:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1983:24:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5562,"nodeType":"ExpressionStatement","src":"1983:24:21"},{"body":{"id":5595,"nodeType":"Block","src":"2049:122:21","statements":[{"expression":{"id":5579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5574,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5545,"src":"2064:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5576,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5545,"src":"2073:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5577,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5545,"src":"2076:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5575,"name":"rmul","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5623,"src":"2068:4:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5578,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2068:10:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2064:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5580,"nodeType":"ExpressionStatement","src":"2064:14:21"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5581,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5547,"src":"2099:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":5582,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2103:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2099:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":5584,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2108:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2099:10:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5594,"nodeType":"IfStatement","src":"2095:65:21","trueBody":{"id":5593,"nodeType":"Block","src":"2111:49:21","statements":[{"expression":{"id":5591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5586,"name":"z","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5550,"src":"2130:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5588,"name":"z","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5550,"src":"2139:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5589,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5545,"src":"2142:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5587,"name":"rmul","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5623,"src":"2134:4:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5590,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2134:10:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2130:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5592,"nodeType":"ExpressionStatement","src":"2130:14:21"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5567,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5547,"src":"2033:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":5568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2038:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2033:6:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5596,"initializationExpression":{"expression":{"id":5565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5563,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5547,"src":"2025:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"32","id":5564,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2030:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2025:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5566,"nodeType":"ExpressionStatement","src":"2025:6:21"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":5572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5570,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5547,"src":"2041:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"32","id":5571,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2046:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2041:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5573,"nodeType":"ExpressionStatement","src":"2041:6:21"},"nodeType":"ForStatement","src":"2020:151:21"}]},"id":5598,"implemented":true,"kind":"function","modifiers":[],"name":"rpow","nameLocation":"1911:4:21","nodeType":"FunctionDefinition","parameters":{"id":5548,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5545,"mutability":"mutable","name":"x","nameLocation":"1924:1:21","nodeType":"VariableDeclaration","scope":5598,"src":"1916:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5544,"name":"uint256","nodeType":"ElementaryTypeName","src":"1916:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5547,"mutability":"mutable","name":"n","nameLocation":"1935:1:21","nodeType":"VariableDeclaration","scope":5598,"src":"1927:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5546,"name":"uint256","nodeType":"ElementaryTypeName","src":"1927:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1915:22:21"},"returnParameters":{"id":5551,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5550,"mutability":"mutable","name":"z","nameLocation":"1969:1:21","nodeType":"VariableDeclaration","scope":5598,"src":"1961:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5549,"name":"uint256","nodeType":"ElementaryTypeName","src":"1961:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1960:11:21"},"scope":5624,"src":"1902:276:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5622,"nodeType":"Block","src":"2295:50:21","statements":[{"expression":{"id":5620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5607,"name":"z","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5605,"src":"2306:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5608,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5600,"src":"2312:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5609,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5602,"src":"2316:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2312:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5611,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2311:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5614,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"id":5612,"name":"RAY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5484,"src":"2322:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":5613,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2328:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2322:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5615,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2321:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2311:19:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5617,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2310:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5618,"name":"RAY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5484,"src":"2334:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2310:27:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2306:31:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5621,"nodeType":"ExpressionStatement","src":"2306:31:21"}]},"id":5623,"implemented":true,"kind":"function","modifiers":[],"name":"rmul","nameLocation":"2234:4:21","nodeType":"FunctionDefinition","parameters":{"id":5603,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5600,"mutability":"mutable","name":"x","nameLocation":"2247:1:21","nodeType":"VariableDeclaration","scope":5623,"src":"2239:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5599,"name":"uint256","nodeType":"ElementaryTypeName","src":"2239:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5602,"mutability":"mutable","name":"y","nameLocation":"2258:1:21","nodeType":"VariableDeclaration","scope":5623,"src":"2250:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5601,"name":"uint256","nodeType":"ElementaryTypeName","src":"2250:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2238:22:21"},"returnParameters":{"id":5606,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5605,"mutability":"mutable","name":"z","nameLocation":"2292:1:21","nodeType":"VariableDeclaration","scope":5623,"src":"2284:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5604,"name":"uint256","nodeType":"ElementaryTypeName","src":"2284:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2283:11:21"},"scope":5624,"src":"2225:120:21","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":5625,"src":"773:1575:21","usedErrors":[],"usedEvents":[]}],"src":"746:1604:21"},"id":21}},"contracts":{"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"OwnableUpgradeable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.","errors":{"InvalidInitialization()":[{"details":"The contract is already initialized."}],"NotInitializing()":[{"details":"The contract is not initializing."}],"OwnableInvalidOwner(address)":[{"details":"The owner is not a valid owner account. (eg. `address(0)`)"}],"OwnableUnauthorizedAccount(address)":[{"details":"The caller account is not authorized to perform an operation."}]},"events":{"Initialized(uint64)":{"details":"Triggered when the contract has been initialized or reinitialized."}},"kind":"dev","methods":{"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":\"OwnableUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {ContextUpgradeable} from \\\"../utils/ContextUpgradeable.sol\\\";\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\\n    /// @custom:storage-location erc7201:openzeppelin.storage.Ownable\\n    struct OwnableStorage {\\n        address _owner;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.Ownable\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant OwnableStorageLocation = 0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300;\\n\\n    function _getOwnableStorage() private pure returns (OwnableStorage storage $) {\\n        assembly {\\n            $.slot := OwnableStorageLocation\\n        }\\n    }\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    function __Ownable_init(address initialOwner) internal onlyInitializing {\\n        __Ownable_init_unchained(initialOwner);\\n    }\\n\\n    function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        OwnableStorage storage $ = _getOwnableStorage();\\n        return $._owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        OwnableStorage storage $ = _getOwnableStorage();\\n        address oldOwner = $._owner;\\n        $._owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Storage of the initializable contract.\\n     *\\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\\n     * when using with upgradeable contracts.\\n     *\\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\\n     */\\n    struct InitializableStorage {\\n        /**\\n         * @dev Indicates that the contract has been initialized.\\n         */\\n        uint64 _initialized;\\n        /**\\n         * @dev Indicates that the contract is in the process of being initialized.\\n         */\\n        bool _initializing;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.Initializable\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\\n\\n    /**\\n     * @dev The contract is already initialized.\\n     */\\n    error InvalidInitialization();\\n\\n    /**\\n     * @dev The contract is not initializing.\\n     */\\n    error NotInitializing();\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint64 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\\n     * production.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        // Cache values to avoid duplicated sloads\\n        bool isTopLevelCall = !$._initializing;\\n        uint64 initialized = $._initialized;\\n\\n        // Allowed calls:\\n        // - initialSetup: the contract is not in the initializing state and no previous version was\\n        //                 initialized\\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\\n        //                 current contract is just being deployed\\n        bool initialSetup = initialized == 0 && isTopLevelCall;\\n        bool construction = initialized == 1 && address(this).code.length == 0;\\n\\n        if (!initialSetup && !construction) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = 1;\\n        if (isTopLevelCall) {\\n            $._initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            $._initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint64 version) {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing || $._initialized >= version) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = version;\\n        $._initializing = true;\\n        _;\\n        $._initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        _checkInitializing();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\\n     */\\n    function _checkInitializing() internal view virtual {\\n        if (!_isInitializing()) {\\n            revert NotInitializing();\\n        }\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing) {\\n            revert InvalidInitialization();\\n        }\\n        if ($._initialized != type(uint64).max) {\\n            $._initialized = type(uint64).max;\\n            emit Initialized(type(uint64).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint64) {\\n        return _getInitializableStorage()._initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _getInitializableStorage()._initializing;\\n    }\\n\\n    /**\\n     * @dev Returns a pointer to the storage namespace.\\n     */\\n    // solhint-disable-next-line var-name-mixedcase\\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\\n        assembly {\\n            $.slot := INITIALIZABLE_STORAGE\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"Initializable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"}],"devdoc":{"custom:oz-upgrades-unsafe-allow":"constructor constructor() {     _disableInitializers(); } ``` ====","details":"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```","errors":{"InvalidInitialization()":[{"details":"The contract is already initialized."}],"NotInitializing()":[{"details":"The contract is not initializing."}]},"events":{"Initialized(uint64)":{"details":"Triggered when the contract has been initialized or reinitialized."}},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Storage of the initializable contract.\\n     *\\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\\n     * when using with upgradeable contracts.\\n     *\\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\\n     */\\n    struct InitializableStorage {\\n        /**\\n         * @dev Indicates that the contract has been initialized.\\n         */\\n        uint64 _initialized;\\n        /**\\n         * @dev Indicates that the contract is in the process of being initialized.\\n         */\\n        bool _initializing;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.Initializable\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\\n\\n    /**\\n     * @dev The contract is already initialized.\\n     */\\n    error InvalidInitialization();\\n\\n    /**\\n     * @dev The contract is not initializing.\\n     */\\n    error NotInitializing();\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint64 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\\n     * production.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        // Cache values to avoid duplicated sloads\\n        bool isTopLevelCall = !$._initializing;\\n        uint64 initialized = $._initialized;\\n\\n        // Allowed calls:\\n        // - initialSetup: the contract is not in the initializing state and no previous version was\\n        //                 initialized\\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\\n        //                 current contract is just being deployed\\n        bool initialSetup = initialized == 0 && isTopLevelCall;\\n        bool construction = initialized == 1 && address(this).code.length == 0;\\n\\n        if (!initialSetup && !construction) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = 1;\\n        if (isTopLevelCall) {\\n            $._initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            $._initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint64 version) {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing || $._initialized >= version) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = version;\\n        $._initializing = true;\\n        _;\\n        $._initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        _checkInitializing();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\\n     */\\n    function _checkInitializing() internal view virtual {\\n        if (!_isInitializing()) {\\n            revert NotInitializing();\\n        }\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing) {\\n            revert InvalidInitialization();\\n        }\\n        if ($._initialized != type(uint64).max) {\\n            $._initialized = type(uint64).max;\\n            emit Initialized(type(uint64).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint64) {\\n        return _getInitializableStorage()._initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _getInitializableStorage()._initializing;\\n    }\\n\\n    /**\\n     * @dev Returns a pointer to the storage namespace.\\n     */\\n    // solhint-disable-next-line var-name-mixedcase\\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\\n        assembly {\\n            $.slot := INITIALIZABLE_STORAGE\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol":{"UUPSUpgradeable":{"abi":[{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"},{"inputs":[{"internalType":"address","name":"implementation","type":"address"}],"name":"ERC1967InvalidImplementation","type":"error"},{"inputs":[],"name":"ERC1967NonPayable","type":"error"},{"inputs":[],"name":"FailedInnerCall","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"inputs":[],"name":"UUPSUnauthorizedCallContext","type":"error"},{"inputs":[{"internalType":"bytes32","name":"slot","type":"bytes32"}],"name":"UUPSUnsupportedProxiableUUID","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"inputs":[],"name":"UPGRADE_INTERFACE_VERSION","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"upgradeToAndCall","outputs":[],"stateMutability":"payable","type":"function"}],"devdoc":{"details":"An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.","errors":{"AddressEmptyCode(address)":[{"details":"There's no code at `target` (it is not a contract)."}],"ERC1967InvalidImplementation(address)":[{"details":"The `implementation` of the proxy is invalid."}],"ERC1967NonPayable()":[{"details":"An upgrade function sees `msg.value > 0` that may be lost."}],"FailedInnerCall()":[{"details":"A call to an address target failed. The target may have reverted."}],"InvalidInitialization()":[{"details":"The contract is already initialized."}],"NotInitializing()":[{"details":"The contract is not initializing."}],"UUPSUnauthorizedCallContext()":[{"details":"The call is from an unauthorized context."}],"UUPSUnsupportedProxiableUUID(bytes32)":[{"details":"The storage `slot` is unsupported as a UUID."}]},"events":{"Initialized(uint64)":{"details":"Triggered when the contract has been initialized or reinitialized."},"Upgraded(address)":{"details":"Emitted when the implementation is upgraded."}},"kind":"dev","methods":{"proxiableUUID()":{"details":"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."},"upgradeToAndCall(address,bytes)":{"custom:oz-upgrades-unsafe-allow-reachable":"delegatecall","details":"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."}},"stateVariables":{"UPGRADE_INTERFACE_VERSION":{"details":"The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)` and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called, while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string. If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must be the empty byte string if no function should be called, making it impossible to invoke the `receive` function during an upgrade."},"__self":{"custom:oz-upgrades-unsafe-allow":"state-variable-immutable"}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"UPGRADE_INTERFACE_VERSION()":"ad3cb1cc","proxiableUUID()":"52d1902d","upgradeToAndCall(address,bytes)":"4f1ef286"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"stateVariables\":{\"UPGRADE_INTERFACE_VERSION\":{\"details\":\"The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)` and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called, while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string. If the getter returns `\\\"5.0.0\\\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must be the empty byte string if no function should be called, making it impossible to invoke the `receive` function during an upgrade.\"},\"__self\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":\"UUPSUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Storage of the initializable contract.\\n     *\\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\\n     * when using with upgradeable contracts.\\n     *\\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\\n     */\\n    struct InitializableStorage {\\n        /**\\n         * @dev Indicates that the contract has been initialized.\\n         */\\n        uint64 _initialized;\\n        /**\\n         * @dev Indicates that the contract is in the process of being initialized.\\n         */\\n        bool _initializing;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.Initializable\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\\n\\n    /**\\n     * @dev The contract is already initialized.\\n     */\\n    error InvalidInitialization();\\n\\n    /**\\n     * @dev The contract is not initializing.\\n     */\\n    error NotInitializing();\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint64 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\\n     * production.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        // Cache values to avoid duplicated sloads\\n        bool isTopLevelCall = !$._initializing;\\n        uint64 initialized = $._initialized;\\n\\n        // Allowed calls:\\n        // - initialSetup: the contract is not in the initializing state and no previous version was\\n        //                 initialized\\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\\n        //                 current contract is just being deployed\\n        bool initialSetup = initialized == 0 && isTopLevelCall;\\n        bool construction = initialized == 1 && address(this).code.length == 0;\\n\\n        if (!initialSetup && !construction) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = 1;\\n        if (isTopLevelCall) {\\n            $._initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            $._initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint64 version) {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing || $._initialized >= version) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = version;\\n        $._initializing = true;\\n        _;\\n        $._initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        _checkInitializing();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\\n     */\\n    function _checkInitializing() internal view virtual {\\n        if (!_isInitializing()) {\\n            revert NotInitializing();\\n        }\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing) {\\n            revert InvalidInitialization();\\n        }\\n        if ($._initialized != type(uint64).max) {\\n            $._initialized = type(uint64).max;\\n            emit Initialized(type(uint64).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint64) {\\n        return _getInitializableStorage()._initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _getInitializableStorage()._initializing;\\n    }\\n\\n    /**\\n     * @dev Returns a pointer to the storage namespace.\\n     */\\n    // solhint-disable-next-line var-name-mixedcase\\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\\n        assembly {\\n            $.slot := INITIALIZABLE_STORAGE\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/UUPSUpgradeable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC1822Proxiable} from \\\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\\\";\\nimport {ERC1967Utils} from \\\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\\\";\\nimport {Initializable} from \\\"./Initializable.sol\\\";\\n\\n/**\\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\\n *\\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\\n * `UUPSUpgradeable` with a custom implementation of upgrades.\\n *\\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\\n */\\nabstract contract UUPSUpgradeable is Initializable, IERC1822Proxiable {\\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable\\n    address private immutable __self = address(this);\\n\\n    /**\\n     * @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\\n     * and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\\n     * while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\\n     * If the getter returns `\\\"5.0.0\\\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\\n     * be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\\n     * during an upgrade.\\n     */\\n    string public constant UPGRADE_INTERFACE_VERSION = \\\"5.0.0\\\";\\n\\n    /**\\n     * @dev The call is from an unauthorized context.\\n     */\\n    error UUPSUnauthorizedCallContext();\\n\\n    /**\\n     * @dev The storage `slot` is unsupported as a UUID.\\n     */\\n    error UUPSUnsupportedProxiableUUID(bytes32 slot);\\n\\n    /**\\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\\n     * a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\\n     * function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\\n     * fail.\\n     */\\n    modifier onlyProxy() {\\n        _checkProxy();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\\n     * callable on the implementing contract but not through proxies.\\n     */\\n    modifier notDelegated() {\\n        _checkNotDelegated();\\n        _;\\n    }\\n\\n    function __UUPSUpgradeable_init() internal onlyInitializing {\\n    }\\n\\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\\n    }\\n    /**\\n     * @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\\n     */\\n    function proxiableUUID() external view virtual notDelegated returns (bytes32) {\\n        return ERC1967Utils.IMPLEMENTATION_SLOT;\\n    }\\n\\n    /**\\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\\n     * encoded in `data`.\\n     *\\n     * Calls {_authorizeUpgrade}.\\n     *\\n     * Emits an {Upgraded} event.\\n     *\\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\\n     */\\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {\\n        _authorizeUpgrade(newImplementation);\\n        _upgradeToAndCallUUPS(newImplementation, data);\\n    }\\n\\n    /**\\n     * @dev Reverts if the execution is not performed via delegatecall or the execution\\n     * context is not of a proxy with an ERC1967-compliant implementation pointing to self.\\n     * See {_onlyProxy}.\\n     */\\n    function _checkProxy() internal view virtual {\\n        if (\\n            address(this) == __self || // Must be called through delegatecall\\n            ERC1967Utils.getImplementation() != __self // Must be called through an active proxy\\n        ) {\\n            revert UUPSUnauthorizedCallContext();\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts if the execution is performed via delegatecall.\\n     * See {notDelegated}.\\n     */\\n    function _checkNotDelegated() internal view virtual {\\n        if (address(this) != __self) {\\n            // Must not be called through delegatecall\\n            revert UUPSUnauthorizedCallContext();\\n        }\\n    }\\n\\n    /**\\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\\n     * {upgradeToAndCall}.\\n     *\\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\\n     *\\n     * ```solidity\\n     * function _authorizeUpgrade(address) internal onlyOwner {}\\n     * ```\\n     */\\n    function _authorizeUpgrade(address newImplementation) internal virtual;\\n\\n    /**\\n     * @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\\n     *\\n     * As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\\n     * is expected to be the implementation slot in ERC1967.\\n     *\\n     * Emits an {IERC1967-Upgraded} event.\\n     */\\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {\\n        try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\\n            if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {\\n                revert UUPSUnsupportedProxiableUUID(slot);\\n            }\\n            ERC1967Utils.upgradeToAndCall(newImplementation, data);\\n        } catch {\\n            // The implementation is not UUPS\\n            revert ERC1967Utils.ERC1967InvalidImplementation(newImplementation);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x3f13b947637c4969c0644cab4ef399cdc4b67f101463b8775c5a43b118558e53\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC1822.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\\n * proxy whose upgrades are fully controlled by the current implementation.\\n */\\ninterface IERC1822Proxiable {\\n    /**\\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\\n     * address.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy.\\n     */\\n    function proxiableUUID() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/ERC1967/ERC1967Utils.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IBeacon} from \\\"../beacon/IBeacon.sol\\\";\\nimport {Address} from \\\"../../utils/Address.sol\\\";\\nimport {StorageSlot} from \\\"../../utils/StorageSlot.sol\\\";\\n\\n/**\\n * @dev This abstract contract provides getters and event emitting update functions for\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\\n */\\nlibrary ERC1967Utils {\\n    // We re-declare ERC-1967 events here because they can't be used directly from IERC1967.\\n    // This will be fixed in Solidity 0.8.21. At that point we should remove these events.\\n    /**\\n     * @dev Emitted when the implementation is upgraded.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Emitted when the admin account has changed.\\n     */\\n    event AdminChanged(address previousAdmin, address newAdmin);\\n\\n    /**\\n     * @dev Emitted when the beacon is changed.\\n     */\\n    event BeaconUpgraded(address indexed beacon);\\n\\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /**\\n     * @dev The `implementation` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidImplementation(address implementation);\\n\\n    /**\\n     * @dev The `admin` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidAdmin(address admin);\\n\\n    /**\\n     * @dev The `beacon` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidBeacon(address beacon);\\n\\n    /**\\n     * @dev An upgrade function sees `msg.value > 0` that may be lost.\\n     */\\n    error ERC1967NonPayable();\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function getImplementation() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 implementation slot.\\n     */\\n    function _setImplementation(address newImplementation) private {\\n        if (newImplementation.code.length == 0) {\\n            revert ERC1967InvalidImplementation(newImplementation);\\n        }\\n        StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation;\\n    }\\n\\n    /**\\n     * @dev Performs implementation upgrade with additional setup call if data is nonempty.\\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\\n     * to avoid stuck value in the contract.\\n     *\\n     * Emits an {IERC1967-Upgraded} event.\\n     */\\n    function upgradeToAndCall(address newImplementation, bytes memory data) internal {\\n        _setImplementation(newImplementation);\\n        emit Upgraded(newImplementation);\\n\\n        if (data.length > 0) {\\n            Address.functionDelegateCall(newImplementation, data);\\n        } else {\\n            _checkNonPayable();\\n        }\\n    }\\n\\n    /**\\n     * @dev Storage slot with the admin of the contract.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n\\n    /**\\n     * @dev Returns the current admin.\\n     *\\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using\\n     * the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\\n     */\\n    function getAdmin() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(ADMIN_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 admin slot.\\n     */\\n    function _setAdmin(address newAdmin) private {\\n        if (newAdmin == address(0)) {\\n            revert ERC1967InvalidAdmin(address(0));\\n        }\\n        StorageSlot.getAddressSlot(ADMIN_SLOT).value = newAdmin;\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {IERC1967-AdminChanged} event.\\n     */\\n    function changeAdmin(address newAdmin) internal {\\n        emit AdminChanged(getAdmin(), newAdmin);\\n        _setAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.beacon\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\\n\\n    /**\\n     * @dev Returns the current beacon.\\n     */\\n    function getBeacon() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(BEACON_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\\n     */\\n    function _setBeacon(address newBeacon) private {\\n        if (newBeacon.code.length == 0) {\\n            revert ERC1967InvalidBeacon(newBeacon);\\n        }\\n\\n        StorageSlot.getAddressSlot(BEACON_SLOT).value = newBeacon;\\n\\n        address beaconImplementation = IBeacon(newBeacon).implementation();\\n        if (beaconImplementation.code.length == 0) {\\n            revert ERC1967InvalidImplementation(beaconImplementation);\\n        }\\n    }\\n\\n    /**\\n     * @dev Change the beacon and trigger a setup call if data is nonempty.\\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\\n     * to avoid stuck value in the contract.\\n     *\\n     * Emits an {IERC1967-BeaconUpgraded} event.\\n     *\\n     * CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\\n     * it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\\n     * efficiency.\\n     */\\n    function upgradeBeaconToAndCall(address newBeacon, bytes memory data) internal {\\n        _setBeacon(newBeacon);\\n        emit BeaconUpgraded(newBeacon);\\n\\n        if (data.length > 0) {\\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\\n        } else {\\n            _checkNonPayable();\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\\n     * if an upgrade doesn't perform an initialization call.\\n     */\\n    function _checkNonPayable() private {\\n        if (msg.value > 0) {\\n            revert ERC1967NonPayable();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeacon {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {UpgradeableBeacon} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev The ETH balance of the account is not enough to perform the operation.\\n     */\\n    error AddressInsufficientBalance(address account);\\n\\n    /**\\n     * @dev There's no code at `target` (it is not a contract).\\n     */\\n    error AddressEmptyCode(address target);\\n\\n    /**\\n     * @dev A call to an address target failed. The target may have reverted.\\n     */\\n    error FailedInnerCall();\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        if (address(this).balance < amount) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        if (!success) {\\n            revert FailedInnerCall();\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason or custom error, it is bubbled\\n     * up by this function (like regular Solidity function calls). However, if\\n     * the call reverted with no returned reason, this function reverts with a\\n     * {FailedInnerCall} error.\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        if (address(this).balance < value) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\\n     * unsuccessful call.\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata\\n    ) internal view returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            // only check if target is a contract if the call was successful and the return data is empty\\n            // otherwise we already know that it was a contract\\n            if (returndata.length == 0 && target.code.length == 0) {\\n                revert AddressEmptyCode(target);\\n            }\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\\n     * revert reason or with a default {FailedInnerCall} error.\\n     */\\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\\n     */\\n    function _revert(bytes memory returndata) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert FailedInnerCall();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```solidity\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(newImplementation.code.length > 0);\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    struct StringSlot {\\n        string value;\\n    }\\n\\n    struct BytesSlot {\\n        bytes value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\\n     */\\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\\n     */\\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\\n     */\\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\\n     */\\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ContextUpgradeable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"}],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","errors":{"InvalidInitialization()":[{"details":"The contract is already initialized."}],"NotInitializing()":[{"details":"The contract is not initializing."}]},"events":{"Initialized(uint64)":{"details":"Triggered when the contract has been initialized or reinitialized."}},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Storage of the initializable contract.\\n     *\\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\\n     * when using with upgradeable contracts.\\n     *\\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\\n     */\\n    struct InitializableStorage {\\n        /**\\n         * @dev Indicates that the contract has been initialized.\\n         */\\n        uint64 _initialized;\\n        /**\\n         * @dev Indicates that the contract is in the process of being initialized.\\n         */\\n        bool _initializing;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.Initializable\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\\n\\n    /**\\n     * @dev The contract is already initialized.\\n     */\\n    error InvalidInitialization();\\n\\n    /**\\n     * @dev The contract is not initializing.\\n     */\\n    error NotInitializing();\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint64 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\\n     * production.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        // Cache values to avoid duplicated sloads\\n        bool isTopLevelCall = !$._initializing;\\n        uint64 initialized = $._initialized;\\n\\n        // Allowed calls:\\n        // - initialSetup: the contract is not in the initializing state and no previous version was\\n        //                 initialized\\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\\n        //                 current contract is just being deployed\\n        bool initialSetup = initialized == 0 && isTopLevelCall;\\n        bool construction = initialized == 1 && address(this).code.length == 0;\\n\\n        if (!initialSetup && !construction) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = 1;\\n        if (isTopLevelCall) {\\n            $._initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            $._initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint64 version) {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing || $._initialized >= version) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = version;\\n        $._initializing = true;\\n        _;\\n        $._initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        _checkInitializing();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\\n     */\\n    function _checkInitializing() internal view virtual {\\n        if (!_isInitializing()) {\\n            revert NotInitializing();\\n        }\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing) {\\n            revert InvalidInitialization();\\n        }\\n        if ($._initialized != type(uint64).max) {\\n            $._initialized = type(uint64).max;\\n            emit Initialized(type(uint64).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint64) {\\n        return _getInitializableStorage()._initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _getInitializableStorage()._initializing;\\n    }\\n\\n    /**\\n     * @dev Returns a pointer to the storage namespace.\\n     */\\n    // solhint-disable-next-line var-name-mixedcase\\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\\n        assembly {\\n            $.slot := INITIALIZABLE_STORAGE\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/interfaces/draft-IERC1822.sol":{"IERC1822Proxiable":{"abi":[{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.","kind":"dev","methods":{"proxiableUUID()":{"details":"Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"proxiableUUID()":"52d1902d"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.\",\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":\"IERC1822Proxiable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC1822.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\\n * proxy whose upgrades are fully controlled by the current implementation.\\n */\\ninterface IERC1822Proxiable {\\n    /**\\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\\n     * address.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy.\\n     */\\n    function proxiableUUID() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"IERC1155Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"}],"devdoc":{"details":"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.","errors":{"ERC1155InsufficientBalance(address,uint256,uint256,uint256)":[{"details":"Indicates an error related to the current `balance` of a `sender`. Used in transfers.","params":{"balance":"Current balance for the interacting account.","needed":"Minimum amount required to perform a transfer.","sender":"Address whose tokens are being transferred.","tokenId":"Identifier number of a token."}}],"ERC1155InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC1155InvalidArrayLength(uint256,uint256)":[{"details":"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.","params":{"idsLength":"Length of the array of token identifiers","valuesLength":"Length of the array of token amounts"}}],"ERC1155InvalidOperator(address)":[{"details":"Indicates a failure with the `operator` to be approved. Used in approvals.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC1155InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC1155InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC1155MissingApprovalForAll(address,address)":[{"details":"Indicates a failure with the `operator`’s approval. Used in transfers.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner.","owner":"Address of the current owner of a token."}}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}},"IERC20Errors":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"}],"devdoc":{"details":"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.","errors":{"ERC20InsufficientAllowance(address,uint256,uint256)":[{"details":"Indicates a failure with the `spender`’s `allowance`. Used in transfers.","params":{"allowance":"Amount of tokens a `spender` is allowed to operate with.","needed":"Minimum amount required to perform a transfer.","spender":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC20InsufficientBalance(address,uint256,uint256)":[{"details":"Indicates an error related to the current `balance` of a `sender`. Used in transfers.","params":{"balance":"Current balance for the interacting account.","needed":"Minimum amount required to perform a transfer.","sender":"Address whose tokens are being transferred."}}],"ERC20InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC20InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC20InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC20InvalidSpender(address)":[{"details":"Indicates a failure with the `spender` to be approved. Used in approvals.","params":{"spender":"Address that may be allowed to operate on tokens without being their owner."}}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}},"IERC721Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"}],"devdoc":{"details":"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.","errors":{"ERC721IncorrectOwner(address,uint256,address)":[{"details":"Indicates an error related to the ownership over a particular token. Used in transfers.","params":{"owner":"Address of the current owner of a token.","sender":"Address whose tokens are being transferred.","tokenId":"Identifier number of a token."}}],"ERC721InsufficientApproval(address,uint256)":[{"details":"Indicates a failure with the `operator`’s approval. Used in transfers.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner.","tokenId":"Identifier number of a token."}}],"ERC721InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC721InvalidOperator(address)":[{"details":"Indicates a failure with the `operator` to be approved. Used in approvals.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC721InvalidOwner(address)":[{"details":"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.","params":{"owner":"Address of the current owner of a token."}}],"ERC721InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC721InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC721NonexistentToken(uint256)":[{"details":"Indicates a `tokenId` whose `owner` is the zero address.","params":{"tokenId":"Identifier number of a token."}}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol":{"ERC1967Utils":{"abi":[{"inputs":[{"internalType":"address","name":"admin","type":"address"}],"name":"ERC1967InvalidAdmin","type":"error"},{"inputs":[{"internalType":"address","name":"beacon","type":"address"}],"name":"ERC1967InvalidBeacon","type":"error"},{"inputs":[{"internalType":"address","name":"implementation","type":"address"}],"name":"ERC1967InvalidImplementation","type":"error"},{"inputs":[],"name":"ERC1967NonPayable","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousAdmin","type":"address"},{"indexed":false,"internalType":"address","name":"newAdmin","type":"address"}],"name":"AdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"beacon","type":"address"}],"name":"BeaconUpgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"}],"devdoc":{"details":"This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.","errors":{"ERC1967InvalidAdmin(address)":[{"details":"The `admin` of the proxy is invalid."}],"ERC1967InvalidBeacon(address)":[{"details":"The `beacon` of the proxy is invalid."}],"ERC1967InvalidImplementation(address)":[{"details":"The `implementation` of the proxy is invalid."}],"ERC1967NonPayable()":[{"details":"An upgrade function sees `msg.value > 0` that may be lost."}]},"events":{"AdminChanged(address,address)":{"details":"Emitted when the admin account has changed."},"BeaconUpgraded(address)":{"details":"Emitted when the beacon is changed."},"Upgraded(address)":{"details":"Emitted when the implementation is upgraded."}},"kind":"dev","methods":{},"stateVariables":{"ADMIN_SLOT":{"details":"Storage slot with the admin of the contract. This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1."},"BEACON_SLOT":{"details":"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1."},"IMPLEMENTATION_SLOT":{"details":"Storage slot with the address of the current implementation. This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220ee9917e6ed504cde9d7c9ca5c5802f84d18c00157c16042db28624c54a0a00ee64736f6c63430008190033","opcodes":"PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEE SWAP10 OR 0xE6 0xED POP 0x4C 0xDE SWAP14 PUSH29 0x9CA5C5802F84D18C00157C16042DB28624C54A0A00EE64736F6C634300 ADDMOD NOT STOP CALLER ","sourceMap":"449:6273:6:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;449:6273:6;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220ee9917e6ed504cde9d7c9ca5c5802f84d18c00157c16042db28624c54a0a00ee64736f6c63430008190033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEE SWAP10 OR 0xE6 0xED POP 0x4C 0xDE SWAP14 PUSH29 0x9CA5C5802F84D18C00157C16042DB28624C54A0A00EE64736F6C634300 ADDMOD NOT STOP CALLER ","sourceMap":"449:6273:6:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17000","executionCost":"96","totalCost":"17096"},"internal":{"_checkNonPayable()":"infinite","_setAdmin(address)":"infinite","_setBeacon(address)":"infinite","_setImplementation(address)":"infinite","changeAdmin(address)":"infinite","getAdmin()":"infinite","getBeacon()":"infinite","getImplementation()":"infinite","upgradeBeaconToAndCall(address,bytes memory)":"infinite","upgradeToAndCall(address,bytes memory)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidAdmin\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidBeacon\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\",\"errors\":{\"ERC1967InvalidAdmin(address)\":[{\"details\":\"The `admin` of the proxy is invalid.\"}],\"ERC1967InvalidBeacon(address)\":[{\"details\":\"The `beacon` of the proxy is invalid.\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}]},\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ADMIN_SLOT\":{\"details\":\"Storage slot with the admin of the contract. This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1.\"},\"BEACON_SLOT\":{\"details\":\"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is the keccak-256 hash of \\\"eip1967.proxy.beacon\\\" subtracted by 1.\"},\"IMPLEMENTATION_SLOT\":{\"details\":\"Storage slot with the address of the current implementation. This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":\"ERC1967Utils\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/ERC1967/ERC1967Utils.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IBeacon} from \\\"../beacon/IBeacon.sol\\\";\\nimport {Address} from \\\"../../utils/Address.sol\\\";\\nimport {StorageSlot} from \\\"../../utils/StorageSlot.sol\\\";\\n\\n/**\\n * @dev This abstract contract provides getters and event emitting update functions for\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\\n */\\nlibrary ERC1967Utils {\\n    // We re-declare ERC-1967 events here because they can't be used directly from IERC1967.\\n    // This will be fixed in Solidity 0.8.21. At that point we should remove these events.\\n    /**\\n     * @dev Emitted when the implementation is upgraded.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Emitted when the admin account has changed.\\n     */\\n    event AdminChanged(address previousAdmin, address newAdmin);\\n\\n    /**\\n     * @dev Emitted when the beacon is changed.\\n     */\\n    event BeaconUpgraded(address indexed beacon);\\n\\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /**\\n     * @dev The `implementation` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidImplementation(address implementation);\\n\\n    /**\\n     * @dev The `admin` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidAdmin(address admin);\\n\\n    /**\\n     * @dev The `beacon` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidBeacon(address beacon);\\n\\n    /**\\n     * @dev An upgrade function sees `msg.value > 0` that may be lost.\\n     */\\n    error ERC1967NonPayable();\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function getImplementation() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 implementation slot.\\n     */\\n    function _setImplementation(address newImplementation) private {\\n        if (newImplementation.code.length == 0) {\\n            revert ERC1967InvalidImplementation(newImplementation);\\n        }\\n        StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation;\\n    }\\n\\n    /**\\n     * @dev Performs implementation upgrade with additional setup call if data is nonempty.\\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\\n     * to avoid stuck value in the contract.\\n     *\\n     * Emits an {IERC1967-Upgraded} event.\\n     */\\n    function upgradeToAndCall(address newImplementation, bytes memory data) internal {\\n        _setImplementation(newImplementation);\\n        emit Upgraded(newImplementation);\\n\\n        if (data.length > 0) {\\n            Address.functionDelegateCall(newImplementation, data);\\n        } else {\\n            _checkNonPayable();\\n        }\\n    }\\n\\n    /**\\n     * @dev Storage slot with the admin of the contract.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n\\n    /**\\n     * @dev Returns the current admin.\\n     *\\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using\\n     * the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\\n     */\\n    function getAdmin() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(ADMIN_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 admin slot.\\n     */\\n    function _setAdmin(address newAdmin) private {\\n        if (newAdmin == address(0)) {\\n            revert ERC1967InvalidAdmin(address(0));\\n        }\\n        StorageSlot.getAddressSlot(ADMIN_SLOT).value = newAdmin;\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {IERC1967-AdminChanged} event.\\n     */\\n    function changeAdmin(address newAdmin) internal {\\n        emit AdminChanged(getAdmin(), newAdmin);\\n        _setAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.beacon\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\\n\\n    /**\\n     * @dev Returns the current beacon.\\n     */\\n    function getBeacon() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(BEACON_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\\n     */\\n    function _setBeacon(address newBeacon) private {\\n        if (newBeacon.code.length == 0) {\\n            revert ERC1967InvalidBeacon(newBeacon);\\n        }\\n\\n        StorageSlot.getAddressSlot(BEACON_SLOT).value = newBeacon;\\n\\n        address beaconImplementation = IBeacon(newBeacon).implementation();\\n        if (beaconImplementation.code.length == 0) {\\n            revert ERC1967InvalidImplementation(beaconImplementation);\\n        }\\n    }\\n\\n    /**\\n     * @dev Change the beacon and trigger a setup call if data is nonempty.\\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\\n     * to avoid stuck value in the contract.\\n     *\\n     * Emits an {IERC1967-BeaconUpgraded} event.\\n     *\\n     * CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\\n     * it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\\n     * efficiency.\\n     */\\n    function upgradeBeaconToAndCall(address newBeacon, bytes memory data) internal {\\n        _setBeacon(newBeacon);\\n        emit BeaconUpgraded(newBeacon);\\n\\n        if (data.length > 0) {\\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\\n        } else {\\n            _checkNonPayable();\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\\n     * if an upgrade doesn't perform an initialization call.\\n     */\\n    function _checkNonPayable() private {\\n        if (msg.value > 0) {\\n            revert ERC1967NonPayable();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeacon {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {UpgradeableBeacon} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev The ETH balance of the account is not enough to perform the operation.\\n     */\\n    error AddressInsufficientBalance(address account);\\n\\n    /**\\n     * @dev There's no code at `target` (it is not a contract).\\n     */\\n    error AddressEmptyCode(address target);\\n\\n    /**\\n     * @dev A call to an address target failed. The target may have reverted.\\n     */\\n    error FailedInnerCall();\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        if (address(this).balance < amount) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        if (!success) {\\n            revert FailedInnerCall();\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason or custom error, it is bubbled\\n     * up by this function (like regular Solidity function calls). However, if\\n     * the call reverted with no returned reason, this function reverts with a\\n     * {FailedInnerCall} error.\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        if (address(this).balance < value) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\\n     * unsuccessful call.\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata\\n    ) internal view returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            // only check if target is a contract if the call was successful and the return data is empty\\n            // otherwise we already know that it was a contract\\n            if (returndata.length == 0 && target.code.length == 0) {\\n                revert AddressEmptyCode(target);\\n            }\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\\n     * revert reason or with a default {FailedInnerCall} error.\\n     */\\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\\n     */\\n    function _revert(bytes memory returndata) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert FailedInnerCall();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```solidity\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(newImplementation.code.length > 0);\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    struct StringSlot {\\n        string value;\\n    }\\n\\n    struct BytesSlot {\\n        bytes value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\\n     */\\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\\n     */\\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\\n     */\\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\\n     */\\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/proxy/beacon/IBeacon.sol":{"IBeacon":{"abi":[{"inputs":[],"name":"implementation","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"This is the interface that {BeaconProxy} expects of its beacon.","kind":"dev","methods":{"implementation()":{"details":"Must return an address that can be used as a delegate call target. {UpgradeableBeacon} will check that this address is a contract."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"implementation()":"5c60da1b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is the interface that {BeaconProxy} expects of its beacon.\",\"kind\":\"dev\",\"methods\":{\"implementation()\":{\"details\":\"Must return an address that can be used as a delegate call target. {UpgradeableBeacon} will check that this address is a contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":\"IBeacon\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeacon {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {UpgradeableBeacon} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ERC20":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.","errors":{"ERC20InsufficientAllowance(address,uint256,uint256)":[{"details":"Indicates a failure with the `spender`’s `allowance`. Used in transfers.","params":{"allowance":"Amount of tokens a `spender` is allowed to operate with.","needed":"Minimum amount required to perform a transfer.","spender":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC20InsufficientBalance(address,uint256,uint256)":[{"details":"Indicates an error related to the current `balance` of a `sender`. Used in transfers.","params":{"balance":"Current balance for the interacting account.","needed":"Minimum amount required to perform a transfer.","sender":"Address whose tokens are being transferred."}}],"ERC20InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC20InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC20InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC20InvalidSpender(address)":[{"details":"Indicates a failure with the `spender` to be approved. Used in approvals.","params":{"spender":"Address that may be allowed to operate on tokens without being their owner."}}]},"events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"See {IERC20-allowance}."},"approve(address,uint256)":{"details":"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{"details":"See {IERC20-balanceOf}."},"constructor":{"details":"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."},"decimals()":{"details":"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{"details":"See {IERC20-totalSupply}."},"transfer(address,uint256)":{"details":"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."},"transferFrom(address,address,uint256)":{"details":"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"./IERC20.sol\\\";\\nimport {IERC20Metadata} from \\\"./extensions/IERC20Metadata.sol\\\";\\nimport {Context} from \\\"../../utils/Context.sol\\\";\\nimport {IERC20Errors} from \\\"../../interfaces/draft-IERC6093.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n */\\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\\n    mapping(address account => uint256) private _balances;\\n\\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `value`.\\n     */\\n    function transfer(address to, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `value`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `value`.\\n     */\\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, value);\\n        _transfer(from, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _transfer(address from, address to, uint256 value) internal {\\n        if (from == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        if (to == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\\n     * this function.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _update(address from, address to, uint256 value) internal virtual {\\n        if (from == address(0)) {\\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\\n            _totalSupply += value;\\n        } else {\\n            uint256 fromBalance = _balances[from];\\n            if (fromBalance < value) {\\n                revert ERC20InsufficientBalance(from, fromBalance, value);\\n            }\\n            unchecked {\\n                // Overflow not possible: value <= fromBalance <= totalSupply.\\n                _balances[from] = fromBalance - value;\\n            }\\n        }\\n\\n        if (to == address(0)) {\\n            unchecked {\\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\\n                _totalSupply -= value;\\n            }\\n        } else {\\n            unchecked {\\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\\n                _balances[to] += value;\\n            }\\n        }\\n\\n        emit Transfer(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\\n     * Relies on the `_update` mechanism\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _mint(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(address(0), account, value);\\n    }\\n\\n    /**\\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\\n     * Relies on the `_update` mechanism.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead\\n     */\\n    function _burn(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        _update(account, address(0), value);\\n    }\\n\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     *\\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\\n     */\\n    function _approve(address owner, address spender, uint256 value) internal {\\n        _approve(owner, spender, value, true);\\n    }\\n\\n    /**\\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\\n     *\\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\\n     * `Approval` event during `transferFrom` operations.\\n     *\\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\\n     * true using the following override:\\n     * ```\\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\\n     *     super._approve(owner, spender, value, true);\\n     * }\\n     * ```\\n     *\\n     * Requirements are the same as {_approve}.\\n     */\\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\\n        if (owner == address(0)) {\\n            revert ERC20InvalidApprover(address(0));\\n        }\\n        if (spender == address(0)) {\\n            revert ERC20InvalidSpender(address(0));\\n        }\\n        _allowances[owner][spender] = value;\\n        if (emitEvent) {\\n            emit Approval(owner, spender, value);\\n        }\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\\n     *\\n     * Does not update the allowance value in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Does not emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            if (currentAllowance < value) {\\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\\n            }\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - value, false);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1159,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":1165,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_allowances","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":1167,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":1169,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_name","offset":0,"slot":"3","type":"t_string_storage"},{"astId":1171,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_symbol","offset":0,"slot":"4","type":"t_string_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface of the ERC20 standard as defined in the EIP.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the value of tokens owned by `account`."},"totalSupply()":{"details":"Returns the value of tokens in existence."},"transfer(address,uint256)":{"details":"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface for the optional metadata functions from the ERC20 standard.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the value of tokens owned by `account`."},"decimals()":{"details":"Returns the decimals places of the token."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token."},"totalSupply()":{"details":"Returns the value of tokens in existence."},"transfer(address,uint256)":{"details":"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"AddressInsufficientBalance","type":"error"},{"inputs":[],"name":"FailedInnerCall","type":"error"}],"devdoc":{"details":"Collection of functions related to the address type","errors":{"AddressEmptyCode(address)":[{"details":"There's no code at `target` (it is not a contract)."}],"AddressInsufficientBalance(address)":[{"details":"The ETH balance of the account is not enough to perform the operation."}],"FailedInnerCall()":[{"details":"A call to an address target failed. The target may have reverted."}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122051dc24f413b53af17c84454cc41c7de5752c59cdec05ea279e3d228b46fcbdd364736f6c63430008190033","opcodes":"PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MLOAD 0xDC 0x24 DELEGATECALL SGT 0xB5 GASPRICE CALL PUSH29 0x84454CC41C7DE5752C59CDEC05EA279E3D228B46FCBDD364736F6C6343 STOP ADDMOD NOT STOP CALLER ","sourceMap":"195:6066:11:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;195:6066:11;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122051dc24f413b53af17c84454cc41c7de5752c59cdec05ea279e3d228b46fcbdd364736f6c63430008190033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MLOAD 0xDC 0x24 DELEGATECALL SGT 0xB5 GASPRICE CALL PUSH29 0x84454CC41C7DE5752C59CDEC05EA279E3D228B46FCBDD364736F6C6343 STOP ADDMOD NOT STOP CALLER ","sourceMap":"195:6066:11:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17000","executionCost":"96","totalCost":"17096"},"internal":{"_revert(bytes memory)":"infinite","functionCall(address,bytes memory)":"infinite","functionCallWithValue(address,bytes memory,uint256)":"infinite","functionDelegateCall(address,bytes memory)":"infinite","functionStaticCall(address,bytes memory)":"infinite","sendValue(address payable,uint256)":"infinite","verifyCallResult(bool,bytes memory)":"infinite","verifyCallResultFromTarget(address,bool,bytes memory)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev The ETH balance of the account is not enough to perform the operation.\\n     */\\n    error AddressInsufficientBalance(address account);\\n\\n    /**\\n     * @dev There's no code at `target` (it is not a contract).\\n     */\\n    error AddressEmptyCode(address target);\\n\\n    /**\\n     * @dev A call to an address target failed. The target may have reverted.\\n     */\\n    error FailedInnerCall();\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        if (address(this).balance < amount) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        if (!success) {\\n            revert FailedInnerCall();\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason or custom error, it is bubbled\\n     * up by this function (like regular Solidity function calls). However, if\\n     * the call reverted with no returned reason, this function reverts with a\\n     * {FailedInnerCall} error.\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        if (address(this).balance < value) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\\n     * unsuccessful call.\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata\\n    ) internal view returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            // only check if target is a contract if the call was successful and the return data is empty\\n            // otherwise we already know that it was a contract\\n            if (returndata.length == 0 && target.code.length == 0) {\\n                revert AddressEmptyCode(target);\\n            }\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\\n     * revert reason or with a default {FailedInnerCall} error.\\n     */\\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\\n     */\\n    function _revert(bytes memory returndata) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert FailedInnerCall();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"ReentrancyGuard":{"abi":[{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"}],"devdoc":{"details":"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].","errors":{"ReentrancyGuardReentrantCall()":[{"details":"Unauthorized reentrant call."}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant NOT_ENTERED = 1;\\n    uint256 private constant ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    /**\\n     * @dev Unauthorized reentrant call.\\n     */\\n    error ReentrancyGuardReentrantCall();\\n\\n    constructor() {\\n        _status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\\n        if (_status == ENTERED) {\\n            revert ReentrancyGuardReentrantCall();\\n        }\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Returns true if the reentrancy guard is currently set to \\\"entered\\\", which indicates there is a\\n     * `nonReentrant` function in the call stack.\\n     */\\n    function _reentrancyGuardEntered() internal view returns (bool) {\\n        return _status == ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":2049,"contract":"@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard","label":"_status","offset":0,"slot":"0","type":"t_uint256"}],"types":{"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/StorageSlot.sol":{"StorageSlot":{"abi":[],"devdoc":{"details":"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220e00d7dcc4ccb7e13407402c0e1b33421858ce0275ba42649a4b4b3360c5b7d3464736f6c63430008190033","opcodes":"PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE0 0xD PUSH30 0xCC4CCB7E13407402C0E1B33421858CE0275BA42649A4B4B3360C5B7D3464 PUSH20 0x6F6C634300081900330000000000000000000000 ","sourceMap":"1245:2685:14:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1245:2685:14;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220e00d7dcc4ccb7e13407402c0e1b33421858ce0275ba42649a4b4b3360c5b7d3464736f6c63430008190033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE0 0xD PUSH30 0xCC4CCB7E13407402C0E1B33421858CE0275BA42649A4B4B3360C5B7D3464 PUSH20 0x6F6C634300081900330000000000000000000000 ","sourceMap":"1245:2685:14:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17000","executionCost":"96","totalCost":"17096"},"internal":{"getAddressSlot(bytes32)":"infinite","getBooleanSlot(bytes32)":"infinite","getBytes32Slot(bytes32)":"infinite","getBytesSlot(bytes storage pointer)":"infinite","getBytesSlot(bytes32)":"infinite","getStringSlot(bytes32)":"infinite","getStringSlot(string storage pointer)":"infinite","getUint256Slot(bytes32)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```solidity\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(newImplementation.code.length > 0);\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    struct StringSlot {\\n        string value;\\n    }\\n\\n    struct BytesSlot {\\n        bytes value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\\n     */\\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\\n     */\\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\\n     */\\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\\n     */\\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/BaluniV1Pool.sol":{"BaluniV1Pool":{"abi":[{"inputs":[{"internalType":"address[]","name":"_assets","type":"address[]"},{"internalType":"uint256[]","name":"_weights","type":"uint256[]"},{"internalType":"uint256","name":"_trigger","type":"uint256"},{"internalType":"address","name":"_registry","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"sharesBurned","type":"uint256"}],"name":"Burn","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"sharesMinted","type":"uint256"}],"name":"Mint","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"by","type":"address"},{"indexed":false,"internalType":"address[]","name":"assets","type":"address[]"}],"name":"RebalancePerformed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"address","name":"fromToken","type":"address"},{"indexed":true,"internalType":"address","name":"toToken","type":"address"},{"indexed":false,"internalType":"uint256","name":"amountIn","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amountOut","type":"uint256"}],"name":"Swap","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"amountsAdded","type":"uint256[]"}],"name":"WeightsRebalanced","type":"event"},{"inputs":[],"name":"ONE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"assetInfos","outputs":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"uint256","name":"weight","type":"uint256"},{"internalType":"uint256","name":"slippage","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"assetIndex","type":"uint256"}],"name":"assetLiquidity","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"baseAsset","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"}],"name":"burn","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"computeTotalValuation","outputs":[{"internalType":"uint256","name":"totalVal","type":"uint256"},{"internalType":"uint256[]","name":"valuations","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"fromToken","type":"address"},{"internalType":"address","name":"toToken","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"getAmountOut","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"fromToken","type":"address"},{"internalType":"address","name":"toToken","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"getAmountOutWithSlippage","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"}],"name":"getAssetReserve","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getAssets","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getDeviation","outputs":[{"internalType":"bool[]","name":"directions","type":"bool[]"},{"internalType":"uint256[]","name":"deviations","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getReserves","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"getSlippage","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getSlippages","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"getTokenWeight","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getWeights","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"isRebalanceNeeded","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"liquidity","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"name":"mint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"performRebalanceIfNeeded","outputs":[{"internalType":"uint256[]","name":"amountsToAdd","type":"uint256[]"},{"internalType":"uint256[]","name":"amountsToRemove","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"rebalanceWeights","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"registry","outputs":[{"internalType":"contract IBaluniV1Registry","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"fromToken","type":"address"},{"internalType":"address","name":"toToken","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"receiver","type":"address"}],"name":"swap","outputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"trigger","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"unitPrice","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"errors":{"ERC20InsufficientAllowance(address,uint256,uint256)":[{"details":"Indicates a failure with the `spender`’s `allowance`. Used in transfers.","params":{"allowance":"Amount of tokens a `spender` is allowed to operate with.","needed":"Minimum amount required to perform a transfer.","spender":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC20InsufficientBalance(address,uint256,uint256)":[{"details":"Indicates an error related to the current `balance` of a `sender`. Used in transfers.","params":{"balance":"Current balance for the interacting account.","needed":"Minimum amount required to perform a transfer.","sender":"Address whose tokens are being transferred."}}],"ERC20InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC20InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC20InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC20InvalidSpender(address)":[{"details":"Indicates a failure with the `spender` to be approved. Used in approvals.","params":{"spender":"Address that may be allowed to operate on tokens without being their owner."}}],"ReentrancyGuardReentrantCall()":[{"details":"Unauthorized reentrant call."}]},"events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"See {IERC20-allowance}."},"approve(address,uint256)":{"details":"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."},"assetLiquidity(uint256)":{"details":"Returns the liquidity of a specific asset in the pool.","params":{"assetIndex":"The index of the asset."},"returns":{"_0":"The liquidity of the asset."}},"balanceOf(address)":{"details":"See {IERC20-balanceOf}."},"burn(address)":{"details":"Burns the pool tokens and transfers the underlying assets to the specified address.","params":{"to":"The address to transfer the underlying assets to."}},"computeTotalValuation()":{"details":"Computes the total valuation of the pool and returns the total valuation and an array of individual valuations.","returns":{"totalVal":"The total valuation of the pool.","valuations":"An array of individual valuations."}},"decimals()":{"details":"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"getAmountOut(address,address,uint256)":{"details":"Calculates the amount of `toToken` that will be received when swapping `fromToken` for `toToken`.","params":{"amount":"The amount of `fromToken` being swapped.","fromToken":"The address of the token being swapped from.","toToken":"The address of the token being swapped to."},"returns":{"_0":"The amount of `toToken` that will be received."}},"getAmountOutWithSlippage(address,address,uint256)":{"details":"Calcola l'importo effettivo di `toToken` ricevuto tenendo conto dello slippage.","params":{"amount":"The amount of `fromToken` being swapped.","fromToken":"The address of the token being swapped from.","toToken":"The address of the token being swapped to."},"returns":{"_0":"The amount of `toToken` received after applying slippage."}},"getAssetReserve(address)":{"details":"Returns the reserve amount of the specified asset.","params":{"asset":"The address of the asset."},"returns":{"_0":"The reserve amount of the asset."}},"getAssets()":{"details":"Retrieves the list of assets in the pool.","returns":{"_0":"An array of addresses representing the assets."}},"getDeviation()":{"details":"Returns the deviation between the current weights and target weights of the assets in the pool.","returns":{"directions":"An array of boolean values indicating whether the current weight is higher (true) or lower (false) than the target weight."}},"getReserves()":{"details":"Returns an array of reserves for each asset in the pool.","returns":{"_0":"An array of reserves."}},"getSlippage(address)":{"details":"Restituisce lo slippage attuale per un dato token.","params":{"token":"The address of the token."},"returns":{"_0":"Lo slippage attuale per il token."}},"getWeights()":{"details":"Retrieves the list of weights associated with the assets in the pool.","returns":{"_0":"An array of uint256 values representing the weights."}},"isRebalanceNeeded()":{"details":"Checks if rebalancing is needed for the pool.","returns":{"_0":"A boolean value indicating whether rebalancing is needed or not."}},"liquidity()":{"details":"Returns the total liquidity of the pool.","returns":{"_0":"The total liquidity of the pool."}},"mint(address,uint256[])":{"details":"Mints new tokens and adds them to the specified address.","params":{"to":"The address to which the new tokens will be minted."},"returns":{"_0":"The amount of tokens minted."}},"name()":{"details":"Returns the name of the token."},"performRebalanceIfNeeded()":{"details":"Performs rebalance"},"rebalanceWeights(address)":{"details":"Rebalances the weights of the pool by calculating the amounts to add for each token, transferring the calculated amounts from the user to the pool, minting the total added liquidity, updating the reserves, and emitting an event to indicate the rebalancing of weights.","params":{"receiver":"The address to receive the minted liquidity tokens."}},"swap(address,address,uint256,address)":{"details":"Swaps `amount` of `fromToken` to `toToken` and transfers the received amount to `receiver`. Requirements: - `fromToken` and `toToken` must be different tokens. - `amount` must be greater than zero. - Sufficient liquidity of `toToken` must be available in the contract. Emits a `Swap` event with the details of the swap. Updates the reserves after the swap.","params":{"amount":"The amount of `fromToken` to swap.","fromToken":"The address of the token to swap from.","receiver":"The address to receive the swapped tokens.","toToken":"The address of the token to swap to."},"returns":{"amountOut":"The amount of `toToken` received after the swap."}},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{"details":"See {IERC20-totalSupply}."},"transfer(address,uint256)":{"details":"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."},"transferFrom(address,address,uint256)":{"details":"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."},"unitPrice()":{"details":"Returns the unit price of the pool.","returns":{"_0":"The unit price of the pool."}}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_1188":{"entryPoint":null,"id":1188,"parameterSlots":2,"returnSlots":0},"@_2060":{"entryPoint":null,"id":2060,"parameterSlots":0,"returnSlots":0},"@_2425":{"entryPoint":null,"id":2425,"parameterSlots":4,"returnSlots":0},"@initializeAssets_2571":{"entryPoint":724,"id":2571,"parameterSlots":2,"returnSlots":1},"abi_decode_address_fromMemory":{"entryPoint":1929,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_array_uint256_dyn_fromMemory":{"entryPoint":1956,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":2600,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_uint256t_address_fromMemory":{"entryPoint":2064,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":2706,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":2683,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0ced64e7a7e72856969cefe00640aa7f13f8db705f9748f7d3003a20bc61daa4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_391a75680d8ec99739af126cde56833526e4b720a416f24f1d7ee98c294a45b1__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_5cbb8d647918028d0523fccac550113bbbb71d463bbb8b573c02c32bc5cf2b89__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_795f8eca8a22be2e70f1d9bdebdbf85a1dc43e172c3964e13eac586b45ff2b92__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b3262886d4e83856703b764357b6a852eb26ef34a7982063b49217460e097ddc__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_ebb567ad160cf2ebbf5e53ab40a3ffae6f6492169d006ee3f8bad6794e36f372__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_ff1ef73e4333da4da038aba1312a1df349427c8859c23d4b6d4a7df22bfc1a19__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_memory":{"entryPoint":1847,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_array_address_dyn":{"entryPoint":1895,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":2652,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":2333,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":2409,"id":null,"parameterSlots":2,"returnSlots":0},"extract_byte_array_length":{"entryPoint":2277,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x32":{"entryPoint":2632,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":1827,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:9459:22","nodeType":"YulBlock","src":"0:9459:22","statements":[{"nativeSrc":"6:3:22","nodeType":"YulBlock","src":"6:3:22","statements":[]},{"body":{"nativeSrc":"46:95:22","nodeType":"YulBlock","src":"46:95:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"63:1:22","nodeType":"YulLiteral","src":"63:1:22","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"70:3:22","nodeType":"YulLiteral","src":"70:3:22","type":"","value":"224"},{"kind":"number","nativeSrc":"75:10:22","nodeType":"YulLiteral","src":"75:10:22","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"66:3:22","nodeType":"YulIdentifier","src":"66:3:22"},"nativeSrc":"66:20:22","nodeType":"YulFunctionCall","src":"66:20:22"}],"functionName":{"name":"mstore","nativeSrc":"56:6:22","nodeType":"YulIdentifier","src":"56:6:22"},"nativeSrc":"56:31:22","nodeType":"YulFunctionCall","src":"56:31:22"},"nativeSrc":"56:31:22","nodeType":"YulExpressionStatement","src":"56:31:22"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"103:1:22","nodeType":"YulLiteral","src":"103:1:22","type":"","value":"4"},{"kind":"number","nativeSrc":"106:4:22","nodeType":"YulLiteral","src":"106:4:22","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"96:6:22","nodeType":"YulIdentifier","src":"96:6:22"},"nativeSrc":"96:15:22","nodeType":"YulFunctionCall","src":"96:15:22"},"nativeSrc":"96:15:22","nodeType":"YulExpressionStatement","src":"96:15:22"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"127:1:22","nodeType":"YulLiteral","src":"127:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"130:4:22","nodeType":"YulLiteral","src":"130:4:22","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"120:6:22","nodeType":"YulIdentifier","src":"120:6:22"},"nativeSrc":"120:15:22","nodeType":"YulFunctionCall","src":"120:15:22"},"nativeSrc":"120:15:22","nodeType":"YulExpressionStatement","src":"120:15:22"}]},"name":"panic_error_0x41","nativeSrc":"14:127:22","nodeType":"YulFunctionDefinition","src":"14:127:22"},{"body":{"nativeSrc":"191:230:22","nodeType":"YulBlock","src":"191:230:22","statements":[{"nativeSrc":"201:19:22","nodeType":"YulAssignment","src":"201:19:22","value":{"arguments":[{"kind":"number","nativeSrc":"217:2:22","nodeType":"YulLiteral","src":"217:2:22","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"211:5:22","nodeType":"YulIdentifier","src":"211:5:22"},"nativeSrc":"211:9:22","nodeType":"YulFunctionCall","src":"211:9:22"},"variableNames":[{"name":"memPtr","nativeSrc":"201:6:22","nodeType":"YulIdentifier","src":"201:6:22"}]},{"nativeSrc":"229:58:22","nodeType":"YulVariableDeclaration","src":"229:58:22","value":{"arguments":[{"name":"memPtr","nativeSrc":"251:6:22","nodeType":"YulIdentifier","src":"251:6:22"},{"arguments":[{"arguments":[{"name":"size","nativeSrc":"267:4:22","nodeType":"YulIdentifier","src":"267:4:22"},{"kind":"number","nativeSrc":"273:2:22","nodeType":"YulLiteral","src":"273:2:22","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"263:3:22","nodeType":"YulIdentifier","src":"263:3:22"},"nativeSrc":"263:13:22","nodeType":"YulFunctionCall","src":"263:13:22"},{"arguments":[{"kind":"number","nativeSrc":"282:2:22","nodeType":"YulLiteral","src":"282:2:22","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"278:3:22","nodeType":"YulIdentifier","src":"278:3:22"},"nativeSrc":"278:7:22","nodeType":"YulFunctionCall","src":"278:7:22"}],"functionName":{"name":"and","nativeSrc":"259:3:22","nodeType":"YulIdentifier","src":"259:3:22"},"nativeSrc":"259:27:22","nodeType":"YulFunctionCall","src":"259:27:22"}],"functionName":{"name":"add","nativeSrc":"247:3:22","nodeType":"YulIdentifier","src":"247:3:22"},"nativeSrc":"247:40:22","nodeType":"YulFunctionCall","src":"247:40:22"},"variables":[{"name":"newFreePtr","nativeSrc":"233:10:22","nodeType":"YulTypedName","src":"233:10:22","type":""}]},{"body":{"nativeSrc":"362:22:22","nodeType":"YulBlock","src":"362:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"364:16:22","nodeType":"YulIdentifier","src":"364:16:22"},"nativeSrc":"364:18:22","nodeType":"YulFunctionCall","src":"364:18:22"},"nativeSrc":"364:18:22","nodeType":"YulExpressionStatement","src":"364:18:22"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nativeSrc":"305:10:22","nodeType":"YulIdentifier","src":"305:10:22"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"325:2:22","nodeType":"YulLiteral","src":"325:2:22","type":"","value":"64"},{"kind":"number","nativeSrc":"329:1:22","nodeType":"YulLiteral","src":"329:1:22","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"321:3:22","nodeType":"YulIdentifier","src":"321:3:22"},"nativeSrc":"321:10:22","nodeType":"YulFunctionCall","src":"321:10:22"},{"kind":"number","nativeSrc":"333:1:22","nodeType":"YulLiteral","src":"333:1:22","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"317:3:22","nodeType":"YulIdentifier","src":"317:3:22"},"nativeSrc":"317:18:22","nodeType":"YulFunctionCall","src":"317:18:22"}],"functionName":{"name":"gt","nativeSrc":"302:2:22","nodeType":"YulIdentifier","src":"302:2:22"},"nativeSrc":"302:34:22","nodeType":"YulFunctionCall","src":"302:34:22"},{"arguments":[{"name":"newFreePtr","nativeSrc":"341:10:22","nodeType":"YulIdentifier","src":"341:10:22"},{"name":"memPtr","nativeSrc":"353:6:22","nodeType":"YulIdentifier","src":"353:6:22"}],"functionName":{"name":"lt","nativeSrc":"338:2:22","nodeType":"YulIdentifier","src":"338:2:22"},"nativeSrc":"338:22:22","nodeType":"YulFunctionCall","src":"338:22:22"}],"functionName":{"name":"or","nativeSrc":"299:2:22","nodeType":"YulIdentifier","src":"299:2:22"},"nativeSrc":"299:62:22","nodeType":"YulFunctionCall","src":"299:62:22"},"nativeSrc":"296:88:22","nodeType":"YulIf","src":"296:88:22"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"400:2:22","nodeType":"YulLiteral","src":"400:2:22","type":"","value":"64"},{"name":"newFreePtr","nativeSrc":"404:10:22","nodeType":"YulIdentifier","src":"404:10:22"}],"functionName":{"name":"mstore","nativeSrc":"393:6:22","nodeType":"YulIdentifier","src":"393:6:22"},"nativeSrc":"393:22:22","nodeType":"YulFunctionCall","src":"393:22:22"},"nativeSrc":"393:22:22","nodeType":"YulExpressionStatement","src":"393:22:22"}]},"name":"allocate_memory","nativeSrc":"146:275:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nativeSrc":"171:4:22","nodeType":"YulTypedName","src":"171:4:22","type":""}],"returnVariables":[{"name":"memPtr","nativeSrc":"180:6:22","nodeType":"YulTypedName","src":"180:6:22","type":""}],"src":"146:275:22"},{"body":{"nativeSrc":"495:114:22","nodeType":"YulBlock","src":"495:114:22","statements":[{"body":{"nativeSrc":"539:22:22","nodeType":"YulBlock","src":"539:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"541:16:22","nodeType":"YulIdentifier","src":"541:16:22"},"nativeSrc":"541:18:22","nodeType":"YulFunctionCall","src":"541:18:22"},"nativeSrc":"541:18:22","nodeType":"YulExpressionStatement","src":"541:18:22"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"511:6:22","nodeType":"YulIdentifier","src":"511:6:22"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"527:2:22","nodeType":"YulLiteral","src":"527:2:22","type":"","value":"64"},{"kind":"number","nativeSrc":"531:1:22","nodeType":"YulLiteral","src":"531:1:22","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"523:3:22","nodeType":"YulIdentifier","src":"523:3:22"},"nativeSrc":"523:10:22","nodeType":"YulFunctionCall","src":"523:10:22"},{"kind":"number","nativeSrc":"535:1:22","nodeType":"YulLiteral","src":"535:1:22","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"519:3:22","nodeType":"YulIdentifier","src":"519:3:22"},"nativeSrc":"519:18:22","nodeType":"YulFunctionCall","src":"519:18:22"}],"functionName":{"name":"gt","nativeSrc":"508:2:22","nodeType":"YulIdentifier","src":"508:2:22"},"nativeSrc":"508:30:22","nodeType":"YulFunctionCall","src":"508:30:22"},"nativeSrc":"505:56:22","nodeType":"YulIf","src":"505:56:22"},{"nativeSrc":"570:33:22","nodeType":"YulAssignment","src":"570:33:22","value":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"586:1:22","nodeType":"YulLiteral","src":"586:1:22","type":"","value":"5"},{"name":"length","nativeSrc":"589:6:22","nodeType":"YulIdentifier","src":"589:6:22"}],"functionName":{"name":"shl","nativeSrc":"582:3:22","nodeType":"YulIdentifier","src":"582:3:22"},"nativeSrc":"582:14:22","nodeType":"YulFunctionCall","src":"582:14:22"},{"kind":"number","nativeSrc":"598:4:22","nodeType":"YulLiteral","src":"598:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"578:3:22","nodeType":"YulIdentifier","src":"578:3:22"},"nativeSrc":"578:25:22","nodeType":"YulFunctionCall","src":"578:25:22"},"variableNames":[{"name":"size","nativeSrc":"570:4:22","nodeType":"YulIdentifier","src":"570:4:22"}]}]},"name":"array_allocation_size_array_address_dyn","nativeSrc":"426:183:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nativeSrc":"475:6:22","nodeType":"YulTypedName","src":"475:6:22","type":""}],"returnVariables":[{"name":"size","nativeSrc":"486:4:22","nodeType":"YulTypedName","src":"486:4:22","type":""}],"src":"426:183:22"},{"body":{"nativeSrc":"674:117:22","nodeType":"YulBlock","src":"674:117:22","statements":[{"nativeSrc":"684:22:22","nodeType":"YulAssignment","src":"684:22:22","value":{"arguments":[{"name":"offset","nativeSrc":"699:6:22","nodeType":"YulIdentifier","src":"699:6:22"}],"functionName":{"name":"mload","nativeSrc":"693:5:22","nodeType":"YulIdentifier","src":"693:5:22"},"nativeSrc":"693:13:22","nodeType":"YulFunctionCall","src":"693:13:22"},"variableNames":[{"name":"value","nativeSrc":"684:5:22","nodeType":"YulIdentifier","src":"684:5:22"}]},{"body":{"nativeSrc":"769:16:22","nodeType":"YulBlock","src":"769:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"778:1:22","nodeType":"YulLiteral","src":"778:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"781:1:22","nodeType":"YulLiteral","src":"781:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"771:6:22","nodeType":"YulIdentifier","src":"771:6:22"},"nativeSrc":"771:12:22","nodeType":"YulFunctionCall","src":"771:12:22"},"nativeSrc":"771:12:22","nodeType":"YulExpressionStatement","src":"771:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"728:5:22","nodeType":"YulIdentifier","src":"728:5:22"},{"arguments":[{"name":"value","nativeSrc":"739:5:22","nodeType":"YulIdentifier","src":"739:5:22"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"754:3:22","nodeType":"YulLiteral","src":"754:3:22","type":"","value":"160"},{"kind":"number","nativeSrc":"759:1:22","nodeType":"YulLiteral","src":"759:1:22","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"750:3:22","nodeType":"YulIdentifier","src":"750:3:22"},"nativeSrc":"750:11:22","nodeType":"YulFunctionCall","src":"750:11:22"},{"kind":"number","nativeSrc":"763:1:22","nodeType":"YulLiteral","src":"763:1:22","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"746:3:22","nodeType":"YulIdentifier","src":"746:3:22"},"nativeSrc":"746:19:22","nodeType":"YulFunctionCall","src":"746:19:22"}],"functionName":{"name":"and","nativeSrc":"735:3:22","nodeType":"YulIdentifier","src":"735:3:22"},"nativeSrc":"735:31:22","nodeType":"YulFunctionCall","src":"735:31:22"}],"functionName":{"name":"eq","nativeSrc":"725:2:22","nodeType":"YulIdentifier","src":"725:2:22"},"nativeSrc":"725:42:22","nodeType":"YulFunctionCall","src":"725:42:22"}],"functionName":{"name":"iszero","nativeSrc":"718:6:22","nodeType":"YulIdentifier","src":"718:6:22"},"nativeSrc":"718:50:22","nodeType":"YulFunctionCall","src":"718:50:22"},"nativeSrc":"715:70:22","nodeType":"YulIf","src":"715:70:22"}]},"name":"abi_decode_address_fromMemory","nativeSrc":"614:177:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"653:6:22","nodeType":"YulTypedName","src":"653:6:22","type":""}],"returnVariables":[{"name":"value","nativeSrc":"664:5:22","nodeType":"YulTypedName","src":"664:5:22","type":""}],"src":"614:177:22"},{"body":{"nativeSrc":"871:590:22","nodeType":"YulBlock","src":"871:590:22","statements":[{"body":{"nativeSrc":"920:16:22","nodeType":"YulBlock","src":"920:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"929:1:22","nodeType":"YulLiteral","src":"929:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"932:1:22","nodeType":"YulLiteral","src":"932:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"922:6:22","nodeType":"YulIdentifier","src":"922:6:22"},"nativeSrc":"922:12:22","nodeType":"YulFunctionCall","src":"922:12:22"},"nativeSrc":"922:12:22","nodeType":"YulExpressionStatement","src":"922:12:22"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"899:6:22","nodeType":"YulIdentifier","src":"899:6:22"},{"kind":"number","nativeSrc":"907:4:22","nodeType":"YulLiteral","src":"907:4:22","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"895:3:22","nodeType":"YulIdentifier","src":"895:3:22"},"nativeSrc":"895:17:22","nodeType":"YulFunctionCall","src":"895:17:22"},{"name":"end","nativeSrc":"914:3:22","nodeType":"YulIdentifier","src":"914:3:22"}],"functionName":{"name":"slt","nativeSrc":"891:3:22","nodeType":"YulIdentifier","src":"891:3:22"},"nativeSrc":"891:27:22","nodeType":"YulFunctionCall","src":"891:27:22"}],"functionName":{"name":"iszero","nativeSrc":"884:6:22","nodeType":"YulIdentifier","src":"884:6:22"},"nativeSrc":"884:35:22","nodeType":"YulFunctionCall","src":"884:35:22"},"nativeSrc":"881:55:22","nodeType":"YulIf","src":"881:55:22"},{"nativeSrc":"945:23:22","nodeType":"YulVariableDeclaration","src":"945:23:22","value":{"arguments":[{"name":"offset","nativeSrc":"961:6:22","nodeType":"YulIdentifier","src":"961:6:22"}],"functionName":{"name":"mload","nativeSrc":"955:5:22","nodeType":"YulIdentifier","src":"955:5:22"},"nativeSrc":"955:13:22","nodeType":"YulFunctionCall","src":"955:13:22"},"variables":[{"name":"_1","nativeSrc":"949:2:22","nodeType":"YulTypedName","src":"949:2:22","type":""}]},{"nativeSrc":"977:14:22","nodeType":"YulVariableDeclaration","src":"977:14:22","value":{"kind":"number","nativeSrc":"987:4:22","nodeType":"YulLiteral","src":"987:4:22","type":"","value":"0x20"},"variables":[{"name":"_2","nativeSrc":"981:2:22","nodeType":"YulTypedName","src":"981:2:22","type":""}]},{"nativeSrc":"1000:71:22","nodeType":"YulVariableDeclaration","src":"1000:71:22","value":{"arguments":[{"arguments":[{"name":"_1","nativeSrc":"1067:2:22","nodeType":"YulIdentifier","src":"1067:2:22"}],"functionName":{"name":"array_allocation_size_array_address_dyn","nativeSrc":"1027:39:22","nodeType":"YulIdentifier","src":"1027:39:22"},"nativeSrc":"1027:43:22","nodeType":"YulFunctionCall","src":"1027:43:22"}],"functionName":{"name":"allocate_memory","nativeSrc":"1011:15:22","nodeType":"YulIdentifier","src":"1011:15:22"},"nativeSrc":"1011:60:22","nodeType":"YulFunctionCall","src":"1011:60:22"},"variables":[{"name":"dst","nativeSrc":"1004:3:22","nodeType":"YulTypedName","src":"1004:3:22","type":""}]},{"nativeSrc":"1080:16:22","nodeType":"YulVariableDeclaration","src":"1080:16:22","value":{"name":"dst","nativeSrc":"1093:3:22","nodeType":"YulIdentifier","src":"1093:3:22"},"variables":[{"name":"dst_1","nativeSrc":"1084:5:22","nodeType":"YulTypedName","src":"1084:5:22","type":""}]},{"expression":{"arguments":[{"name":"dst","nativeSrc":"1112:3:22","nodeType":"YulIdentifier","src":"1112:3:22"},{"name":"_1","nativeSrc":"1117:2:22","nodeType":"YulIdentifier","src":"1117:2:22"}],"functionName":{"name":"mstore","nativeSrc":"1105:6:22","nodeType":"YulIdentifier","src":"1105:6:22"},"nativeSrc":"1105:15:22","nodeType":"YulFunctionCall","src":"1105:15:22"},"nativeSrc":"1105:15:22","nodeType":"YulExpressionStatement","src":"1105:15:22"},{"nativeSrc":"1129:21:22","nodeType":"YulAssignment","src":"1129:21:22","value":{"arguments":[{"name":"dst","nativeSrc":"1140:3:22","nodeType":"YulIdentifier","src":"1140:3:22"},{"kind":"number","nativeSrc":"1145:4:22","nodeType":"YulLiteral","src":"1145:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1136:3:22","nodeType":"YulIdentifier","src":"1136:3:22"},"nativeSrc":"1136:14:22","nodeType":"YulFunctionCall","src":"1136:14:22"},"variableNames":[{"name":"dst","nativeSrc":"1129:3:22","nodeType":"YulIdentifier","src":"1129:3:22"}]},{"nativeSrc":"1159:48:22","nodeType":"YulVariableDeclaration","src":"1159:48:22","value":{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"1181:6:22","nodeType":"YulIdentifier","src":"1181:6:22"},{"arguments":[{"kind":"number","nativeSrc":"1193:1:22","nodeType":"YulLiteral","src":"1193:1:22","type":"","value":"5"},{"name":"_1","nativeSrc":"1196:2:22","nodeType":"YulIdentifier","src":"1196:2:22"}],"functionName":{"name":"shl","nativeSrc":"1189:3:22","nodeType":"YulIdentifier","src":"1189:3:22"},"nativeSrc":"1189:10:22","nodeType":"YulFunctionCall","src":"1189:10:22"}],"functionName":{"name":"add","nativeSrc":"1177:3:22","nodeType":"YulIdentifier","src":"1177:3:22"},"nativeSrc":"1177:23:22","nodeType":"YulFunctionCall","src":"1177:23:22"},{"kind":"number","nativeSrc":"1202:4:22","nodeType":"YulLiteral","src":"1202:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1173:3:22","nodeType":"YulIdentifier","src":"1173:3:22"},"nativeSrc":"1173:34:22","nodeType":"YulFunctionCall","src":"1173:34:22"},"variables":[{"name":"srcEnd","nativeSrc":"1163:6:22","nodeType":"YulTypedName","src":"1163:6:22","type":""}]},{"body":{"nativeSrc":"1235:16:22","nodeType":"YulBlock","src":"1235:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1244:1:22","nodeType":"YulLiteral","src":"1244:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"1247:1:22","nodeType":"YulLiteral","src":"1247:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1237:6:22","nodeType":"YulIdentifier","src":"1237:6:22"},"nativeSrc":"1237:12:22","nodeType":"YulFunctionCall","src":"1237:12:22"},"nativeSrc":"1237:12:22","nodeType":"YulExpressionStatement","src":"1237:12:22"}]},"condition":{"arguments":[{"name":"srcEnd","nativeSrc":"1222:6:22","nodeType":"YulIdentifier","src":"1222:6:22"},{"name":"end","nativeSrc":"1230:3:22","nodeType":"YulIdentifier","src":"1230:3:22"}],"functionName":{"name":"gt","nativeSrc":"1219:2:22","nodeType":"YulIdentifier","src":"1219:2:22"},"nativeSrc":"1219:15:22","nodeType":"YulFunctionCall","src":"1219:15:22"},"nativeSrc":"1216:35:22","nodeType":"YulIf","src":"1216:35:22"},{"nativeSrc":"1260:28:22","nodeType":"YulVariableDeclaration","src":"1260:28:22","value":{"arguments":[{"name":"offset","nativeSrc":"1275:6:22","nodeType":"YulIdentifier","src":"1275:6:22"},{"kind":"number","nativeSrc":"1283:4:22","nodeType":"YulLiteral","src":"1283:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1271:3:22","nodeType":"YulIdentifier","src":"1271:3:22"},"nativeSrc":"1271:17:22","nodeType":"YulFunctionCall","src":"1271:17:22"},"variables":[{"name":"src","nativeSrc":"1264:3:22","nodeType":"YulTypedName","src":"1264:3:22","type":""}]},{"body":{"nativeSrc":"1353:79:22","nodeType":"YulBlock","src":"1353:79:22","statements":[{"expression":{"arguments":[{"name":"dst","nativeSrc":"1374:3:22","nodeType":"YulIdentifier","src":"1374:3:22"},{"arguments":[{"name":"src","nativeSrc":"1385:3:22","nodeType":"YulIdentifier","src":"1385:3:22"}],"functionName":{"name":"mload","nativeSrc":"1379:5:22","nodeType":"YulIdentifier","src":"1379:5:22"},"nativeSrc":"1379:10:22","nodeType":"YulFunctionCall","src":"1379:10:22"}],"functionName":{"name":"mstore","nativeSrc":"1367:6:22","nodeType":"YulIdentifier","src":"1367:6:22"},"nativeSrc":"1367:23:22","nodeType":"YulFunctionCall","src":"1367:23:22"},"nativeSrc":"1367:23:22","nodeType":"YulExpressionStatement","src":"1367:23:22"},{"nativeSrc":"1403:19:22","nodeType":"YulAssignment","src":"1403:19:22","value":{"arguments":[{"name":"dst","nativeSrc":"1414:3:22","nodeType":"YulIdentifier","src":"1414:3:22"},{"name":"_2","nativeSrc":"1419:2:22","nodeType":"YulIdentifier","src":"1419:2:22"}],"functionName":{"name":"add","nativeSrc":"1410:3:22","nodeType":"YulIdentifier","src":"1410:3:22"},"nativeSrc":"1410:12:22","nodeType":"YulFunctionCall","src":"1410:12:22"},"variableNames":[{"name":"dst","nativeSrc":"1403:3:22","nodeType":"YulIdentifier","src":"1403:3:22"}]}]},"condition":{"arguments":[{"name":"src","nativeSrc":"1308:3:22","nodeType":"YulIdentifier","src":"1308:3:22"},{"name":"srcEnd","nativeSrc":"1313:6:22","nodeType":"YulIdentifier","src":"1313:6:22"}],"functionName":{"name":"lt","nativeSrc":"1305:2:22","nodeType":"YulIdentifier","src":"1305:2:22"},"nativeSrc":"1305:15:22","nodeType":"YulFunctionCall","src":"1305:15:22"},"nativeSrc":"1297:135:22","nodeType":"YulForLoop","post":{"nativeSrc":"1321:23:22","nodeType":"YulBlock","src":"1321:23:22","statements":[{"nativeSrc":"1323:19:22","nodeType":"YulAssignment","src":"1323:19:22","value":{"arguments":[{"name":"src","nativeSrc":"1334:3:22","nodeType":"YulIdentifier","src":"1334:3:22"},{"name":"_2","nativeSrc":"1339:2:22","nodeType":"YulIdentifier","src":"1339:2:22"}],"functionName":{"name":"add","nativeSrc":"1330:3:22","nodeType":"YulIdentifier","src":"1330:3:22"},"nativeSrc":"1330:12:22","nodeType":"YulFunctionCall","src":"1330:12:22"},"variableNames":[{"name":"src","nativeSrc":"1323:3:22","nodeType":"YulIdentifier","src":"1323:3:22"}]}]},"pre":{"nativeSrc":"1301:3:22","nodeType":"YulBlock","src":"1301:3:22","statements":[]},"src":"1297:135:22"},{"nativeSrc":"1441:14:22","nodeType":"YulAssignment","src":"1441:14:22","value":{"name":"dst_1","nativeSrc":"1450:5:22","nodeType":"YulIdentifier","src":"1450:5:22"},"variableNames":[{"name":"array","nativeSrc":"1441:5:22","nodeType":"YulIdentifier","src":"1441:5:22"}]}]},"name":"abi_decode_array_uint256_dyn_fromMemory","nativeSrc":"796:665:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"845:6:22","nodeType":"YulTypedName","src":"845:6:22","type":""},{"name":"end","nativeSrc":"853:3:22","nodeType":"YulTypedName","src":"853:3:22","type":""}],"returnVariables":[{"name":"array","nativeSrc":"861:5:22","nodeType":"YulTypedName","src":"861:5:22","type":""}],"src":"796:665:22"},{"body":{"nativeSrc":"1648:1123:22","nodeType":"YulBlock","src":"1648:1123:22","statements":[{"body":{"nativeSrc":"1695:16:22","nodeType":"YulBlock","src":"1695:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1704:1:22","nodeType":"YulLiteral","src":"1704:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"1707:1:22","nodeType":"YulLiteral","src":"1707:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1697:6:22","nodeType":"YulIdentifier","src":"1697:6:22"},"nativeSrc":"1697:12:22","nodeType":"YulFunctionCall","src":"1697:12:22"},"nativeSrc":"1697:12:22","nodeType":"YulExpressionStatement","src":"1697:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"1669:7:22","nodeType":"YulIdentifier","src":"1669:7:22"},{"name":"headStart","nativeSrc":"1678:9:22","nodeType":"YulIdentifier","src":"1678:9:22"}],"functionName":{"name":"sub","nativeSrc":"1665:3:22","nodeType":"YulIdentifier","src":"1665:3:22"},"nativeSrc":"1665:23:22","nodeType":"YulFunctionCall","src":"1665:23:22"},{"kind":"number","nativeSrc":"1690:3:22","nodeType":"YulLiteral","src":"1690:3:22","type":"","value":"128"}],"functionName":{"name":"slt","nativeSrc":"1661:3:22","nodeType":"YulIdentifier","src":"1661:3:22"},"nativeSrc":"1661:33:22","nodeType":"YulFunctionCall","src":"1661:33:22"},"nativeSrc":"1658:53:22","nodeType":"YulIf","src":"1658:53:22"},{"nativeSrc":"1720:30:22","nodeType":"YulVariableDeclaration","src":"1720:30:22","value":{"arguments":[{"name":"headStart","nativeSrc":"1740:9:22","nodeType":"YulIdentifier","src":"1740:9:22"}],"functionName":{"name":"mload","nativeSrc":"1734:5:22","nodeType":"YulIdentifier","src":"1734:5:22"},"nativeSrc":"1734:16:22","nodeType":"YulFunctionCall","src":"1734:16:22"},"variables":[{"name":"offset","nativeSrc":"1724:6:22","nodeType":"YulTypedName","src":"1724:6:22","type":""}]},{"nativeSrc":"1759:28:22","nodeType":"YulVariableDeclaration","src":"1759:28:22","value":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"1777:2:22","nodeType":"YulLiteral","src":"1777:2:22","type":"","value":"64"},{"kind":"number","nativeSrc":"1781:1:22","nodeType":"YulLiteral","src":"1781:1:22","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"1773:3:22","nodeType":"YulIdentifier","src":"1773:3:22"},"nativeSrc":"1773:10:22","nodeType":"YulFunctionCall","src":"1773:10:22"},{"kind":"number","nativeSrc":"1785:1:22","nodeType":"YulLiteral","src":"1785:1:22","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"1769:3:22","nodeType":"YulIdentifier","src":"1769:3:22"},"nativeSrc":"1769:18:22","nodeType":"YulFunctionCall","src":"1769:18:22"},"variables":[{"name":"_1","nativeSrc":"1763:2:22","nodeType":"YulTypedName","src":"1763:2:22","type":""}]},{"body":{"nativeSrc":"1814:16:22","nodeType":"YulBlock","src":"1814:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1823:1:22","nodeType":"YulLiteral","src":"1823:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"1826:1:22","nodeType":"YulLiteral","src":"1826:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1816:6:22","nodeType":"YulIdentifier","src":"1816:6:22"},"nativeSrc":"1816:12:22","nodeType":"YulFunctionCall","src":"1816:12:22"},"nativeSrc":"1816:12:22","nodeType":"YulExpressionStatement","src":"1816:12:22"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"1802:6:22","nodeType":"YulIdentifier","src":"1802:6:22"},{"name":"_1","nativeSrc":"1810:2:22","nodeType":"YulIdentifier","src":"1810:2:22"}],"functionName":{"name":"gt","nativeSrc":"1799:2:22","nodeType":"YulIdentifier","src":"1799:2:22"},"nativeSrc":"1799:14:22","nodeType":"YulFunctionCall","src":"1799:14:22"},"nativeSrc":"1796:34:22","nodeType":"YulIf","src":"1796:34:22"},{"nativeSrc":"1839:32:22","nodeType":"YulVariableDeclaration","src":"1839:32:22","value":{"arguments":[{"name":"headStart","nativeSrc":"1853:9:22","nodeType":"YulIdentifier","src":"1853:9:22"},{"name":"offset","nativeSrc":"1864:6:22","nodeType":"YulIdentifier","src":"1864:6:22"}],"functionName":{"name":"add","nativeSrc":"1849:3:22","nodeType":"YulIdentifier","src":"1849:3:22"},"nativeSrc":"1849:22:22","nodeType":"YulFunctionCall","src":"1849:22:22"},"variables":[{"name":"_2","nativeSrc":"1843:2:22","nodeType":"YulTypedName","src":"1843:2:22","type":""}]},{"body":{"nativeSrc":"1919:16:22","nodeType":"YulBlock","src":"1919:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1928:1:22","nodeType":"YulLiteral","src":"1928:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"1931:1:22","nodeType":"YulLiteral","src":"1931:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1921:6:22","nodeType":"YulIdentifier","src":"1921:6:22"},"nativeSrc":"1921:12:22","nodeType":"YulFunctionCall","src":"1921:12:22"},"nativeSrc":"1921:12:22","nodeType":"YulExpressionStatement","src":"1921:12:22"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nativeSrc":"1898:2:22","nodeType":"YulIdentifier","src":"1898:2:22"},{"kind":"number","nativeSrc":"1902:4:22","nodeType":"YulLiteral","src":"1902:4:22","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"1894:3:22","nodeType":"YulIdentifier","src":"1894:3:22"},"nativeSrc":"1894:13:22","nodeType":"YulFunctionCall","src":"1894:13:22"},{"name":"dataEnd","nativeSrc":"1909:7:22","nodeType":"YulIdentifier","src":"1909:7:22"}],"functionName":{"name":"slt","nativeSrc":"1890:3:22","nodeType":"YulIdentifier","src":"1890:3:22"},"nativeSrc":"1890:27:22","nodeType":"YulFunctionCall","src":"1890:27:22"}],"functionName":{"name":"iszero","nativeSrc":"1883:6:22","nodeType":"YulIdentifier","src":"1883:6:22"},"nativeSrc":"1883:35:22","nodeType":"YulFunctionCall","src":"1883:35:22"},"nativeSrc":"1880:55:22","nodeType":"YulIf","src":"1880:55:22"},{"nativeSrc":"1944:19:22","nodeType":"YulVariableDeclaration","src":"1944:19:22","value":{"arguments":[{"name":"_2","nativeSrc":"1960:2:22","nodeType":"YulIdentifier","src":"1960:2:22"}],"functionName":{"name":"mload","nativeSrc":"1954:5:22","nodeType":"YulIdentifier","src":"1954:5:22"},"nativeSrc":"1954:9:22","nodeType":"YulFunctionCall","src":"1954:9:22"},"variables":[{"name":"_3","nativeSrc":"1948:2:22","nodeType":"YulTypedName","src":"1948:2:22","type":""}]},{"nativeSrc":"1972:14:22","nodeType":"YulVariableDeclaration","src":"1972:14:22","value":{"kind":"number","nativeSrc":"1982:4:22","nodeType":"YulLiteral","src":"1982:4:22","type":"","value":"0x20"},"variables":[{"name":"_4","nativeSrc":"1976:2:22","nodeType":"YulTypedName","src":"1976:2:22","type":""}]},{"nativeSrc":"1995:71:22","nodeType":"YulVariableDeclaration","src":"1995:71:22","value":{"arguments":[{"arguments":[{"name":"_3","nativeSrc":"2062:2:22","nodeType":"YulIdentifier","src":"2062:2:22"}],"functionName":{"name":"array_allocation_size_array_address_dyn","nativeSrc":"2022:39:22","nodeType":"YulIdentifier","src":"2022:39:22"},"nativeSrc":"2022:43:22","nodeType":"YulFunctionCall","src":"2022:43:22"}],"functionName":{"name":"allocate_memory","nativeSrc":"2006:15:22","nodeType":"YulIdentifier","src":"2006:15:22"},"nativeSrc":"2006:60:22","nodeType":"YulFunctionCall","src":"2006:60:22"},"variables":[{"name":"dst","nativeSrc":"1999:3:22","nodeType":"YulTypedName","src":"1999:3:22","type":""}]},{"nativeSrc":"2075:16:22","nodeType":"YulVariableDeclaration","src":"2075:16:22","value":{"name":"dst","nativeSrc":"2088:3:22","nodeType":"YulIdentifier","src":"2088:3:22"},"variables":[{"name":"dst_1","nativeSrc":"2079:5:22","nodeType":"YulTypedName","src":"2079:5:22","type":""}]},{"expression":{"arguments":[{"name":"dst","nativeSrc":"2107:3:22","nodeType":"YulIdentifier","src":"2107:3:22"},{"name":"_3","nativeSrc":"2112:2:22","nodeType":"YulIdentifier","src":"2112:2:22"}],"functionName":{"name":"mstore","nativeSrc":"2100:6:22","nodeType":"YulIdentifier","src":"2100:6:22"},"nativeSrc":"2100:15:22","nodeType":"YulFunctionCall","src":"2100:15:22"},"nativeSrc":"2100:15:22","nodeType":"YulExpressionStatement","src":"2100:15:22"},{"nativeSrc":"2124:19:22","nodeType":"YulAssignment","src":"2124:19:22","value":{"arguments":[{"name":"dst","nativeSrc":"2135:3:22","nodeType":"YulIdentifier","src":"2135:3:22"},{"name":"_4","nativeSrc":"2140:2:22","nodeType":"YulIdentifier","src":"2140:2:22"}],"functionName":{"name":"add","nativeSrc":"2131:3:22","nodeType":"YulIdentifier","src":"2131:3:22"},"nativeSrc":"2131:12:22","nodeType":"YulFunctionCall","src":"2131:12:22"},"variableNames":[{"name":"dst","nativeSrc":"2124:3:22","nodeType":"YulIdentifier","src":"2124:3:22"}]},{"nativeSrc":"2152:42:22","nodeType":"YulVariableDeclaration","src":"2152:42:22","value":{"arguments":[{"arguments":[{"name":"_2","nativeSrc":"2174:2:22","nodeType":"YulIdentifier","src":"2174:2:22"},{"arguments":[{"kind":"number","nativeSrc":"2182:1:22","nodeType":"YulLiteral","src":"2182:1:22","type":"","value":"5"},{"name":"_3","nativeSrc":"2185:2:22","nodeType":"YulIdentifier","src":"2185:2:22"}],"functionName":{"name":"shl","nativeSrc":"2178:3:22","nodeType":"YulIdentifier","src":"2178:3:22"},"nativeSrc":"2178:10:22","nodeType":"YulFunctionCall","src":"2178:10:22"}],"functionName":{"name":"add","nativeSrc":"2170:3:22","nodeType":"YulIdentifier","src":"2170:3:22"},"nativeSrc":"2170:19:22","nodeType":"YulFunctionCall","src":"2170:19:22"},{"name":"_4","nativeSrc":"2191:2:22","nodeType":"YulIdentifier","src":"2191:2:22"}],"functionName":{"name":"add","nativeSrc":"2166:3:22","nodeType":"YulIdentifier","src":"2166:3:22"},"nativeSrc":"2166:28:22","nodeType":"YulFunctionCall","src":"2166:28:22"},"variables":[{"name":"srcEnd","nativeSrc":"2156:6:22","nodeType":"YulTypedName","src":"2156:6:22","type":""}]},{"body":{"nativeSrc":"2226:16:22","nodeType":"YulBlock","src":"2226:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2235:1:22","nodeType":"YulLiteral","src":"2235:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"2238:1:22","nodeType":"YulLiteral","src":"2238:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2228:6:22","nodeType":"YulIdentifier","src":"2228:6:22"},"nativeSrc":"2228:12:22","nodeType":"YulFunctionCall","src":"2228:12:22"},"nativeSrc":"2228:12:22","nodeType":"YulExpressionStatement","src":"2228:12:22"}]},"condition":{"arguments":[{"name":"srcEnd","nativeSrc":"2209:6:22","nodeType":"YulIdentifier","src":"2209:6:22"},{"name":"dataEnd","nativeSrc":"2217:7:22","nodeType":"YulIdentifier","src":"2217:7:22"}],"functionName":{"name":"gt","nativeSrc":"2206:2:22","nodeType":"YulIdentifier","src":"2206:2:22"},"nativeSrc":"2206:19:22","nodeType":"YulFunctionCall","src":"2206:19:22"},"nativeSrc":"2203:39:22","nodeType":"YulIf","src":"2203:39:22"},{"nativeSrc":"2251:22:22","nodeType":"YulVariableDeclaration","src":"2251:22:22","value":{"arguments":[{"name":"_2","nativeSrc":"2266:2:22","nodeType":"YulIdentifier","src":"2266:2:22"},{"name":"_4","nativeSrc":"2270:2:22","nodeType":"YulIdentifier","src":"2270:2:22"}],"functionName":{"name":"add","nativeSrc":"2262:3:22","nodeType":"YulIdentifier","src":"2262:3:22"},"nativeSrc":"2262:11:22","nodeType":"YulFunctionCall","src":"2262:11:22"},"variables":[{"name":"src","nativeSrc":"2255:3:22","nodeType":"YulTypedName","src":"2255:3:22","type":""}]},{"body":{"nativeSrc":"2338:103:22","nodeType":"YulBlock","src":"2338:103:22","statements":[{"expression":{"arguments":[{"name":"dst","nativeSrc":"2359:3:22","nodeType":"YulIdentifier","src":"2359:3:22"},{"arguments":[{"name":"src","nativeSrc":"2394:3:22","nodeType":"YulIdentifier","src":"2394:3:22"}],"functionName":{"name":"abi_decode_address_fromMemory","nativeSrc":"2364:29:22","nodeType":"YulIdentifier","src":"2364:29:22"},"nativeSrc":"2364:34:22","nodeType":"YulFunctionCall","src":"2364:34:22"}],"functionName":{"name":"mstore","nativeSrc":"2352:6:22","nodeType":"YulIdentifier","src":"2352:6:22"},"nativeSrc":"2352:47:22","nodeType":"YulFunctionCall","src":"2352:47:22"},"nativeSrc":"2352:47:22","nodeType":"YulExpressionStatement","src":"2352:47:22"},{"nativeSrc":"2412:19:22","nodeType":"YulAssignment","src":"2412:19:22","value":{"arguments":[{"name":"dst","nativeSrc":"2423:3:22","nodeType":"YulIdentifier","src":"2423:3:22"},{"name":"_4","nativeSrc":"2428:2:22","nodeType":"YulIdentifier","src":"2428:2:22"}],"functionName":{"name":"add","nativeSrc":"2419:3:22","nodeType":"YulIdentifier","src":"2419:3:22"},"nativeSrc":"2419:12:22","nodeType":"YulFunctionCall","src":"2419:12:22"},"variableNames":[{"name":"dst","nativeSrc":"2412:3:22","nodeType":"YulIdentifier","src":"2412:3:22"}]}]},"condition":{"arguments":[{"name":"src","nativeSrc":"2293:3:22","nodeType":"YulIdentifier","src":"2293:3:22"},{"name":"srcEnd","nativeSrc":"2298:6:22","nodeType":"YulIdentifier","src":"2298:6:22"}],"functionName":{"name":"lt","nativeSrc":"2290:2:22","nodeType":"YulIdentifier","src":"2290:2:22"},"nativeSrc":"2290:15:22","nodeType":"YulFunctionCall","src":"2290:15:22"},"nativeSrc":"2282:159:22","nodeType":"YulForLoop","post":{"nativeSrc":"2306:23:22","nodeType":"YulBlock","src":"2306:23:22","statements":[{"nativeSrc":"2308:19:22","nodeType":"YulAssignment","src":"2308:19:22","value":{"arguments":[{"name":"src","nativeSrc":"2319:3:22","nodeType":"YulIdentifier","src":"2319:3:22"},{"name":"_4","nativeSrc":"2324:2:22","nodeType":"YulIdentifier","src":"2324:2:22"}],"functionName":{"name":"add","nativeSrc":"2315:3:22","nodeType":"YulIdentifier","src":"2315:3:22"},"nativeSrc":"2315:12:22","nodeType":"YulFunctionCall","src":"2315:12:22"},"variableNames":[{"name":"src","nativeSrc":"2308:3:22","nodeType":"YulIdentifier","src":"2308:3:22"}]}]},"pre":{"nativeSrc":"2286:3:22","nodeType":"YulBlock","src":"2286:3:22","statements":[]},"src":"2282:159:22"},{"nativeSrc":"2450:15:22","nodeType":"YulAssignment","src":"2450:15:22","value":{"name":"dst_1","nativeSrc":"2460:5:22","nodeType":"YulIdentifier","src":"2460:5:22"},"variableNames":[{"name":"value0","nativeSrc":"2450:6:22","nodeType":"YulIdentifier","src":"2450:6:22"}]},{"nativeSrc":"2474:41:22","nodeType":"YulVariableDeclaration","src":"2474:41:22","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2500:9:22","nodeType":"YulIdentifier","src":"2500:9:22"},{"name":"_4","nativeSrc":"2511:2:22","nodeType":"YulIdentifier","src":"2511:2:22"}],"functionName":{"name":"add","nativeSrc":"2496:3:22","nodeType":"YulIdentifier","src":"2496:3:22"},"nativeSrc":"2496:18:22","nodeType":"YulFunctionCall","src":"2496:18:22"}],"functionName":{"name":"mload","nativeSrc":"2490:5:22","nodeType":"YulIdentifier","src":"2490:5:22"},"nativeSrc":"2490:25:22","nodeType":"YulFunctionCall","src":"2490:25:22"},"variables":[{"name":"offset_1","nativeSrc":"2478:8:22","nodeType":"YulTypedName","src":"2478:8:22","type":""}]},{"body":{"nativeSrc":"2544:16:22","nodeType":"YulBlock","src":"2544:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2553:1:22","nodeType":"YulLiteral","src":"2553:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"2556:1:22","nodeType":"YulLiteral","src":"2556:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2546:6:22","nodeType":"YulIdentifier","src":"2546:6:22"},"nativeSrc":"2546:12:22","nodeType":"YulFunctionCall","src":"2546:12:22"},"nativeSrc":"2546:12:22","nodeType":"YulExpressionStatement","src":"2546:12:22"}]},"condition":{"arguments":[{"name":"offset_1","nativeSrc":"2530:8:22","nodeType":"YulIdentifier","src":"2530:8:22"},{"name":"_1","nativeSrc":"2540:2:22","nodeType":"YulIdentifier","src":"2540:2:22"}],"functionName":{"name":"gt","nativeSrc":"2527:2:22","nodeType":"YulIdentifier","src":"2527:2:22"},"nativeSrc":"2527:16:22","nodeType":"YulFunctionCall","src":"2527:16:22"},"nativeSrc":"2524:36:22","nodeType":"YulIf","src":"2524:36:22"},{"nativeSrc":"2569:84:22","nodeType":"YulAssignment","src":"2569:84:22","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2623:9:22","nodeType":"YulIdentifier","src":"2623:9:22"},{"name":"offset_1","nativeSrc":"2634:8:22","nodeType":"YulIdentifier","src":"2634:8:22"}],"functionName":{"name":"add","nativeSrc":"2619:3:22","nodeType":"YulIdentifier","src":"2619:3:22"},"nativeSrc":"2619:24:22","nodeType":"YulFunctionCall","src":"2619:24:22"},{"name":"dataEnd","nativeSrc":"2645:7:22","nodeType":"YulIdentifier","src":"2645:7:22"}],"functionName":{"name":"abi_decode_array_uint256_dyn_fromMemory","nativeSrc":"2579:39:22","nodeType":"YulIdentifier","src":"2579:39:22"},"nativeSrc":"2579:74:22","nodeType":"YulFunctionCall","src":"2579:74:22"},"variableNames":[{"name":"value1","nativeSrc":"2569:6:22","nodeType":"YulIdentifier","src":"2569:6:22"}]},{"nativeSrc":"2662:35:22","nodeType":"YulAssignment","src":"2662:35:22","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2682:9:22","nodeType":"YulIdentifier","src":"2682:9:22"},{"kind":"number","nativeSrc":"2693:2:22","nodeType":"YulLiteral","src":"2693:2:22","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"2678:3:22","nodeType":"YulIdentifier","src":"2678:3:22"},"nativeSrc":"2678:18:22","nodeType":"YulFunctionCall","src":"2678:18:22"}],"functionName":{"name":"mload","nativeSrc":"2672:5:22","nodeType":"YulIdentifier","src":"2672:5:22"},"nativeSrc":"2672:25:22","nodeType":"YulFunctionCall","src":"2672:25:22"},"variableNames":[{"name":"value2","nativeSrc":"2662:6:22","nodeType":"YulIdentifier","src":"2662:6:22"}]},{"nativeSrc":"2706:59:22","nodeType":"YulAssignment","src":"2706:59:22","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2750:9:22","nodeType":"YulIdentifier","src":"2750:9:22"},{"kind":"number","nativeSrc":"2761:2:22","nodeType":"YulLiteral","src":"2761:2:22","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"2746:3:22","nodeType":"YulIdentifier","src":"2746:3:22"},"nativeSrc":"2746:18:22","nodeType":"YulFunctionCall","src":"2746:18:22"}],"functionName":{"name":"abi_decode_address_fromMemory","nativeSrc":"2716:29:22","nodeType":"YulIdentifier","src":"2716:29:22"},"nativeSrc":"2716:49:22","nodeType":"YulFunctionCall","src":"2716:49:22"},"variableNames":[{"name":"value3","nativeSrc":"2706:6:22","nodeType":"YulIdentifier","src":"2706:6:22"}]}]},"name":"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_uint256t_address_fromMemory","nativeSrc":"1466:1305:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1590:9:22","nodeType":"YulTypedName","src":"1590:9:22","type":""},{"name":"dataEnd","nativeSrc":"1601:7:22","nodeType":"YulTypedName","src":"1601:7:22","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"1613:6:22","nodeType":"YulTypedName","src":"1613:6:22","type":""},{"name":"value1","nativeSrc":"1621:6:22","nodeType":"YulTypedName","src":"1621:6:22","type":""},{"name":"value2","nativeSrc":"1629:6:22","nodeType":"YulTypedName","src":"1629:6:22","type":""},{"name":"value3","nativeSrc":"1637:6:22","nodeType":"YulTypedName","src":"1637:6:22","type":""}],"src":"1466:1305:22"},{"body":{"nativeSrc":"2831:325:22","nodeType":"YulBlock","src":"2831:325:22","statements":[{"nativeSrc":"2841:22:22","nodeType":"YulAssignment","src":"2841:22:22","value":{"arguments":[{"kind":"number","nativeSrc":"2855:1:22","nodeType":"YulLiteral","src":"2855:1:22","type":"","value":"1"},{"name":"data","nativeSrc":"2858:4:22","nodeType":"YulIdentifier","src":"2858:4:22"}],"functionName":{"name":"shr","nativeSrc":"2851:3:22","nodeType":"YulIdentifier","src":"2851:3:22"},"nativeSrc":"2851:12:22","nodeType":"YulFunctionCall","src":"2851:12:22"},"variableNames":[{"name":"length","nativeSrc":"2841:6:22","nodeType":"YulIdentifier","src":"2841:6:22"}]},{"nativeSrc":"2872:38:22","nodeType":"YulVariableDeclaration","src":"2872:38:22","value":{"arguments":[{"name":"data","nativeSrc":"2902:4:22","nodeType":"YulIdentifier","src":"2902:4:22"},{"kind":"number","nativeSrc":"2908:1:22","nodeType":"YulLiteral","src":"2908:1:22","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"2898:3:22","nodeType":"YulIdentifier","src":"2898:3:22"},"nativeSrc":"2898:12:22","nodeType":"YulFunctionCall","src":"2898:12:22"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"2876:18:22","nodeType":"YulTypedName","src":"2876:18:22","type":""}]},{"body":{"nativeSrc":"2949:31:22","nodeType":"YulBlock","src":"2949:31:22","statements":[{"nativeSrc":"2951:27:22","nodeType":"YulAssignment","src":"2951:27:22","value":{"arguments":[{"name":"length","nativeSrc":"2965:6:22","nodeType":"YulIdentifier","src":"2965:6:22"},{"kind":"number","nativeSrc":"2973:4:22","nodeType":"YulLiteral","src":"2973:4:22","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"2961:3:22","nodeType":"YulIdentifier","src":"2961:3:22"},"nativeSrc":"2961:17:22","nodeType":"YulFunctionCall","src":"2961:17:22"},"variableNames":[{"name":"length","nativeSrc":"2951:6:22","nodeType":"YulIdentifier","src":"2951:6:22"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"2929:18:22","nodeType":"YulIdentifier","src":"2929:18:22"}],"functionName":{"name":"iszero","nativeSrc":"2922:6:22","nodeType":"YulIdentifier","src":"2922:6:22"},"nativeSrc":"2922:26:22","nodeType":"YulFunctionCall","src":"2922:26:22"},"nativeSrc":"2919:61:22","nodeType":"YulIf","src":"2919:61:22"},{"body":{"nativeSrc":"3039:111:22","nodeType":"YulBlock","src":"3039:111:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3060:1:22","nodeType":"YulLiteral","src":"3060:1:22","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"3067:3:22","nodeType":"YulLiteral","src":"3067:3:22","type":"","value":"224"},{"kind":"number","nativeSrc":"3072:10:22","nodeType":"YulLiteral","src":"3072:10:22","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"3063:3:22","nodeType":"YulIdentifier","src":"3063:3:22"},"nativeSrc":"3063:20:22","nodeType":"YulFunctionCall","src":"3063:20:22"}],"functionName":{"name":"mstore","nativeSrc":"3053:6:22","nodeType":"YulIdentifier","src":"3053:6:22"},"nativeSrc":"3053:31:22","nodeType":"YulFunctionCall","src":"3053:31:22"},"nativeSrc":"3053:31:22","nodeType":"YulExpressionStatement","src":"3053:31:22"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3104:1:22","nodeType":"YulLiteral","src":"3104:1:22","type":"","value":"4"},{"kind":"number","nativeSrc":"3107:4:22","nodeType":"YulLiteral","src":"3107:4:22","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"3097:6:22","nodeType":"YulIdentifier","src":"3097:6:22"},"nativeSrc":"3097:15:22","nodeType":"YulFunctionCall","src":"3097:15:22"},"nativeSrc":"3097:15:22","nodeType":"YulExpressionStatement","src":"3097:15:22"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3132:1:22","nodeType":"YulLiteral","src":"3132:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"3135:4:22","nodeType":"YulLiteral","src":"3135:4:22","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"3125:6:22","nodeType":"YulIdentifier","src":"3125:6:22"},"nativeSrc":"3125:15:22","nodeType":"YulFunctionCall","src":"3125:15:22"},"nativeSrc":"3125:15:22","nodeType":"YulExpressionStatement","src":"3125:15:22"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"2995:18:22","nodeType":"YulIdentifier","src":"2995:18:22"},{"arguments":[{"name":"length","nativeSrc":"3018:6:22","nodeType":"YulIdentifier","src":"3018:6:22"},{"kind":"number","nativeSrc":"3026:2:22","nodeType":"YulLiteral","src":"3026:2:22","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"3015:2:22","nodeType":"YulIdentifier","src":"3015:2:22"},"nativeSrc":"3015:14:22","nodeType":"YulFunctionCall","src":"3015:14:22"}],"functionName":{"name":"eq","nativeSrc":"2992:2:22","nodeType":"YulIdentifier","src":"2992:2:22"},"nativeSrc":"2992:38:22","nodeType":"YulFunctionCall","src":"2992:38:22"},"nativeSrc":"2989:161:22","nodeType":"YulIf","src":"2989:161:22"}]},"name":"extract_byte_array_length","nativeSrc":"2776:380:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"2811:4:22","nodeType":"YulTypedName","src":"2811:4:22","type":""}],"returnVariables":[{"name":"length","nativeSrc":"2820:6:22","nodeType":"YulTypedName","src":"2820:6:22","type":""}],"src":"2776:380:22"},{"body":{"nativeSrc":"3217:65:22","nodeType":"YulBlock","src":"3217:65:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3234:1:22","nodeType":"YulLiteral","src":"3234:1:22","type":"","value":"0"},{"name":"ptr","nativeSrc":"3237:3:22","nodeType":"YulIdentifier","src":"3237:3:22"}],"functionName":{"name":"mstore","nativeSrc":"3227:6:22","nodeType":"YulIdentifier","src":"3227:6:22"},"nativeSrc":"3227:14:22","nodeType":"YulFunctionCall","src":"3227:14:22"},"nativeSrc":"3227:14:22","nodeType":"YulExpressionStatement","src":"3227:14:22"},{"nativeSrc":"3250:26:22","nodeType":"YulAssignment","src":"3250:26:22","value":{"arguments":[{"kind":"number","nativeSrc":"3268:1:22","nodeType":"YulLiteral","src":"3268:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"3271:4:22","nodeType":"YulLiteral","src":"3271:4:22","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"3258:9:22","nodeType":"YulIdentifier","src":"3258:9:22"},"nativeSrc":"3258:18:22","nodeType":"YulFunctionCall","src":"3258:18:22"},"variableNames":[{"name":"data","nativeSrc":"3250:4:22","nodeType":"YulIdentifier","src":"3250:4:22"}]}]},"name":"array_dataslot_string_storage","nativeSrc":"3161:121:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"3200:3:22","nodeType":"YulTypedName","src":"3200:3:22","type":""}],"returnVariables":[{"name":"data","nativeSrc":"3208:4:22","nodeType":"YulTypedName","src":"3208:4:22","type":""}],"src":"3161:121:22"},{"body":{"nativeSrc":"3368:437:22","nodeType":"YulBlock","src":"3368:437:22","statements":[{"body":{"nativeSrc":"3401:398:22","nodeType":"YulBlock","src":"3401:398:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3422:1:22","nodeType":"YulLiteral","src":"3422:1:22","type":"","value":"0"},{"name":"array","nativeSrc":"3425:5:22","nodeType":"YulIdentifier","src":"3425:5:22"}],"functionName":{"name":"mstore","nativeSrc":"3415:6:22","nodeType":"YulIdentifier","src":"3415:6:22"},"nativeSrc":"3415:16:22","nodeType":"YulFunctionCall","src":"3415:16:22"},"nativeSrc":"3415:16:22","nodeType":"YulExpressionStatement","src":"3415:16:22"},{"nativeSrc":"3444:30:22","nodeType":"YulVariableDeclaration","src":"3444:30:22","value":{"arguments":[{"kind":"number","nativeSrc":"3466:1:22","nodeType":"YulLiteral","src":"3466:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"3469:4:22","nodeType":"YulLiteral","src":"3469:4:22","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"3456:9:22","nodeType":"YulIdentifier","src":"3456:9:22"},"nativeSrc":"3456:18:22","nodeType":"YulFunctionCall","src":"3456:18:22"},"variables":[{"name":"data","nativeSrc":"3448:4:22","nodeType":"YulTypedName","src":"3448:4:22","type":""}]},{"nativeSrc":"3487:57:22","nodeType":"YulVariableDeclaration","src":"3487:57:22","value":{"arguments":[{"name":"data","nativeSrc":"3510:4:22","nodeType":"YulIdentifier","src":"3510:4:22"},{"arguments":[{"kind":"number","nativeSrc":"3520:1:22","nodeType":"YulLiteral","src":"3520:1:22","type":"","value":"5"},{"arguments":[{"name":"startIndex","nativeSrc":"3527:10:22","nodeType":"YulIdentifier","src":"3527:10:22"},{"kind":"number","nativeSrc":"3539:2:22","nodeType":"YulLiteral","src":"3539:2:22","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"3523:3:22","nodeType":"YulIdentifier","src":"3523:3:22"},"nativeSrc":"3523:19:22","nodeType":"YulFunctionCall","src":"3523:19:22"}],"functionName":{"name":"shr","nativeSrc":"3516:3:22","nodeType":"YulIdentifier","src":"3516:3:22"},"nativeSrc":"3516:27:22","nodeType":"YulFunctionCall","src":"3516:27:22"}],"functionName":{"name":"add","nativeSrc":"3506:3:22","nodeType":"YulIdentifier","src":"3506:3:22"},"nativeSrc":"3506:38:22","nodeType":"YulFunctionCall","src":"3506:38:22"},"variables":[{"name":"deleteStart","nativeSrc":"3491:11:22","nodeType":"YulTypedName","src":"3491:11:22","type":""}]},{"body":{"nativeSrc":"3581:23:22","nodeType":"YulBlock","src":"3581:23:22","statements":[{"nativeSrc":"3583:19:22","nodeType":"YulAssignment","src":"3583:19:22","value":{"name":"data","nativeSrc":"3598:4:22","nodeType":"YulIdentifier","src":"3598:4:22"},"variableNames":[{"name":"deleteStart","nativeSrc":"3583:11:22","nodeType":"YulIdentifier","src":"3583:11:22"}]}]},"condition":{"arguments":[{"name":"startIndex","nativeSrc":"3563:10:22","nodeType":"YulIdentifier","src":"3563:10:22"},{"kind":"number","nativeSrc":"3575:4:22","nodeType":"YulLiteral","src":"3575:4:22","type":"","value":"0x20"}],"functionName":{"name":"lt","nativeSrc":"3560:2:22","nodeType":"YulIdentifier","src":"3560:2:22"},"nativeSrc":"3560:20:22","nodeType":"YulFunctionCall","src":"3560:20:22"},"nativeSrc":"3557:47:22","nodeType":"YulIf","src":"3557:47:22"},{"nativeSrc":"3617:41:22","nodeType":"YulVariableDeclaration","src":"3617:41:22","value":{"arguments":[{"name":"data","nativeSrc":"3631:4:22","nodeType":"YulIdentifier","src":"3631:4:22"},{"arguments":[{"kind":"number","nativeSrc":"3641:1:22","nodeType":"YulLiteral","src":"3641:1:22","type":"","value":"5"},{"arguments":[{"name":"len","nativeSrc":"3648:3:22","nodeType":"YulIdentifier","src":"3648:3:22"},{"kind":"number","nativeSrc":"3653:2:22","nodeType":"YulLiteral","src":"3653:2:22","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"3644:3:22","nodeType":"YulIdentifier","src":"3644:3:22"},"nativeSrc":"3644:12:22","nodeType":"YulFunctionCall","src":"3644:12:22"}],"functionName":{"name":"shr","nativeSrc":"3637:3:22","nodeType":"YulIdentifier","src":"3637:3:22"},"nativeSrc":"3637:20:22","nodeType":"YulFunctionCall","src":"3637:20:22"}],"functionName":{"name":"add","nativeSrc":"3627:3:22","nodeType":"YulIdentifier","src":"3627:3:22"},"nativeSrc":"3627:31:22","nodeType":"YulFunctionCall","src":"3627:31:22"},"variables":[{"name":"_1","nativeSrc":"3621:2:22","nodeType":"YulTypedName","src":"3621:2:22","type":""}]},{"nativeSrc":"3671:24:22","nodeType":"YulVariableDeclaration","src":"3671:24:22","value":{"name":"deleteStart","nativeSrc":"3684:11:22","nodeType":"YulIdentifier","src":"3684:11:22"},"variables":[{"name":"start","nativeSrc":"3675:5:22","nodeType":"YulTypedName","src":"3675:5:22","type":""}]},{"body":{"nativeSrc":"3769:20:22","nodeType":"YulBlock","src":"3769:20:22","statements":[{"expression":{"arguments":[{"name":"start","nativeSrc":"3778:5:22","nodeType":"YulIdentifier","src":"3778:5:22"},{"kind":"number","nativeSrc":"3785:1:22","nodeType":"YulLiteral","src":"3785:1:22","type":"","value":"0"}],"functionName":{"name":"sstore","nativeSrc":"3771:6:22","nodeType":"YulIdentifier","src":"3771:6:22"},"nativeSrc":"3771:16:22","nodeType":"YulFunctionCall","src":"3771:16:22"},"nativeSrc":"3771:16:22","nodeType":"YulExpressionStatement","src":"3771:16:22"}]},"condition":{"arguments":[{"name":"start","nativeSrc":"3719:5:22","nodeType":"YulIdentifier","src":"3719:5:22"},{"name":"_1","nativeSrc":"3726:2:22","nodeType":"YulIdentifier","src":"3726:2:22"}],"functionName":{"name":"lt","nativeSrc":"3716:2:22","nodeType":"YulIdentifier","src":"3716:2:22"},"nativeSrc":"3716:13:22","nodeType":"YulFunctionCall","src":"3716:13:22"},"nativeSrc":"3708:81:22","nodeType":"YulForLoop","post":{"nativeSrc":"3730:26:22","nodeType":"YulBlock","src":"3730:26:22","statements":[{"nativeSrc":"3732:22:22","nodeType":"YulAssignment","src":"3732:22:22","value":{"arguments":[{"name":"start","nativeSrc":"3745:5:22","nodeType":"YulIdentifier","src":"3745:5:22"},{"kind":"number","nativeSrc":"3752:1:22","nodeType":"YulLiteral","src":"3752:1:22","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"3741:3:22","nodeType":"YulIdentifier","src":"3741:3:22"},"nativeSrc":"3741:13:22","nodeType":"YulFunctionCall","src":"3741:13:22"},"variableNames":[{"name":"start","nativeSrc":"3732:5:22","nodeType":"YulIdentifier","src":"3732:5:22"}]}]},"pre":{"nativeSrc":"3712:3:22","nodeType":"YulBlock","src":"3712:3:22","statements":[]},"src":"3708:81:22"}]},"condition":{"arguments":[{"name":"len","nativeSrc":"3384:3:22","nodeType":"YulIdentifier","src":"3384:3:22"},{"kind":"number","nativeSrc":"3389:2:22","nodeType":"YulLiteral","src":"3389:2:22","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"3381:2:22","nodeType":"YulIdentifier","src":"3381:2:22"},"nativeSrc":"3381:11:22","nodeType":"YulFunctionCall","src":"3381:11:22"},"nativeSrc":"3378:421:22","nodeType":"YulIf","src":"3378:421:22"}]},"name":"clean_up_bytearray_end_slots_string_storage","nativeSrc":"3287:518:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nativeSrc":"3340:5:22","nodeType":"YulTypedName","src":"3340:5:22","type":""},{"name":"len","nativeSrc":"3347:3:22","nodeType":"YulTypedName","src":"3347:3:22","type":""},{"name":"startIndex","nativeSrc":"3352:10:22","nodeType":"YulTypedName","src":"3352:10:22","type":""}],"src":"3287:518:22"},{"body":{"nativeSrc":"3895:81:22","nodeType":"YulBlock","src":"3895:81:22","statements":[{"nativeSrc":"3905:65:22","nodeType":"YulAssignment","src":"3905:65:22","value":{"arguments":[{"arguments":[{"name":"data","nativeSrc":"3920:4:22","nodeType":"YulIdentifier","src":"3920:4:22"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"3938:1:22","nodeType":"YulLiteral","src":"3938:1:22","type":"","value":"3"},{"name":"len","nativeSrc":"3941:3:22","nodeType":"YulIdentifier","src":"3941:3:22"}],"functionName":{"name":"shl","nativeSrc":"3934:3:22","nodeType":"YulIdentifier","src":"3934:3:22"},"nativeSrc":"3934:11:22","nodeType":"YulFunctionCall","src":"3934:11:22"},{"arguments":[{"kind":"number","nativeSrc":"3951:1:22","nodeType":"YulLiteral","src":"3951:1:22","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"3947:3:22","nodeType":"YulIdentifier","src":"3947:3:22"},"nativeSrc":"3947:6:22","nodeType":"YulFunctionCall","src":"3947:6:22"}],"functionName":{"name":"shr","nativeSrc":"3930:3:22","nodeType":"YulIdentifier","src":"3930:3:22"},"nativeSrc":"3930:24:22","nodeType":"YulFunctionCall","src":"3930:24:22"}],"functionName":{"name":"not","nativeSrc":"3926:3:22","nodeType":"YulIdentifier","src":"3926:3:22"},"nativeSrc":"3926:29:22","nodeType":"YulFunctionCall","src":"3926:29:22"}],"functionName":{"name":"and","nativeSrc":"3916:3:22","nodeType":"YulIdentifier","src":"3916:3:22"},"nativeSrc":"3916:40:22","nodeType":"YulFunctionCall","src":"3916:40:22"},{"arguments":[{"kind":"number","nativeSrc":"3962:1:22","nodeType":"YulLiteral","src":"3962:1:22","type":"","value":"1"},{"name":"len","nativeSrc":"3965:3:22","nodeType":"YulIdentifier","src":"3965:3:22"}],"functionName":{"name":"shl","nativeSrc":"3958:3:22","nodeType":"YulIdentifier","src":"3958:3:22"},"nativeSrc":"3958:11:22","nodeType":"YulFunctionCall","src":"3958:11:22"}],"functionName":{"name":"or","nativeSrc":"3913:2:22","nodeType":"YulIdentifier","src":"3913:2:22"},"nativeSrc":"3913:57:22","nodeType":"YulFunctionCall","src":"3913:57:22"},"variableNames":[{"name":"used","nativeSrc":"3905:4:22","nodeType":"YulIdentifier","src":"3905:4:22"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"3810:166:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"3872:4:22","nodeType":"YulTypedName","src":"3872:4:22","type":""},{"name":"len","nativeSrc":"3878:3:22","nodeType":"YulTypedName","src":"3878:3:22","type":""}],"returnVariables":[{"name":"used","nativeSrc":"3886:4:22","nodeType":"YulTypedName","src":"3886:4:22","type":""}],"src":"3810:166:22"},{"body":{"nativeSrc":"4077:1249:22","nodeType":"YulBlock","src":"4077:1249:22","statements":[{"nativeSrc":"4087:24:22","nodeType":"YulVariableDeclaration","src":"4087:24:22","value":{"arguments":[{"name":"src","nativeSrc":"4107:3:22","nodeType":"YulIdentifier","src":"4107:3:22"}],"functionName":{"name":"mload","nativeSrc":"4101:5:22","nodeType":"YulIdentifier","src":"4101:5:22"},"nativeSrc":"4101:10:22","nodeType":"YulFunctionCall","src":"4101:10:22"},"variables":[{"name":"newLen","nativeSrc":"4091:6:22","nodeType":"YulTypedName","src":"4091:6:22","type":""}]},{"body":{"nativeSrc":"4154:22:22","nodeType":"YulBlock","src":"4154:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"4156:16:22","nodeType":"YulIdentifier","src":"4156:16:22"},"nativeSrc":"4156:18:22","nodeType":"YulFunctionCall","src":"4156:18:22"},"nativeSrc":"4156:18:22","nodeType":"YulExpressionStatement","src":"4156:18:22"}]},"condition":{"arguments":[{"name":"newLen","nativeSrc":"4126:6:22","nodeType":"YulIdentifier","src":"4126:6:22"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"4142:2:22","nodeType":"YulLiteral","src":"4142:2:22","type":"","value":"64"},{"kind":"number","nativeSrc":"4146:1:22","nodeType":"YulLiteral","src":"4146:1:22","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"4138:3:22","nodeType":"YulIdentifier","src":"4138:3:22"},"nativeSrc":"4138:10:22","nodeType":"YulFunctionCall","src":"4138:10:22"},{"kind":"number","nativeSrc":"4150:1:22","nodeType":"YulLiteral","src":"4150:1:22","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"4134:3:22","nodeType":"YulIdentifier","src":"4134:3:22"},"nativeSrc":"4134:18:22","nodeType":"YulFunctionCall","src":"4134:18:22"}],"functionName":{"name":"gt","nativeSrc":"4123:2:22","nodeType":"YulIdentifier","src":"4123:2:22"},"nativeSrc":"4123:30:22","nodeType":"YulFunctionCall","src":"4123:30:22"},"nativeSrc":"4120:56:22","nodeType":"YulIf","src":"4120:56:22"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"4229:4:22","nodeType":"YulIdentifier","src":"4229:4:22"},{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"4267:4:22","nodeType":"YulIdentifier","src":"4267:4:22"}],"functionName":{"name":"sload","nativeSrc":"4261:5:22","nodeType":"YulIdentifier","src":"4261:5:22"},"nativeSrc":"4261:11:22","nodeType":"YulFunctionCall","src":"4261:11:22"}],"functionName":{"name":"extract_byte_array_length","nativeSrc":"4235:25:22","nodeType":"YulIdentifier","src":"4235:25:22"},"nativeSrc":"4235:38:22","nodeType":"YulFunctionCall","src":"4235:38:22"},{"name":"newLen","nativeSrc":"4275:6:22","nodeType":"YulIdentifier","src":"4275:6:22"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nativeSrc":"4185:43:22","nodeType":"YulIdentifier","src":"4185:43:22"},"nativeSrc":"4185:97:22","nodeType":"YulFunctionCall","src":"4185:97:22"},"nativeSrc":"4185:97:22","nodeType":"YulExpressionStatement","src":"4185:97:22"},{"nativeSrc":"4291:18:22","nodeType":"YulVariableDeclaration","src":"4291:18:22","value":{"kind":"number","nativeSrc":"4308:1:22","nodeType":"YulLiteral","src":"4308:1:22","type":"","value":"0"},"variables":[{"name":"srcOffset","nativeSrc":"4295:9:22","nodeType":"YulTypedName","src":"4295:9:22","type":""}]},{"nativeSrc":"4318:23:22","nodeType":"YulVariableDeclaration","src":"4318:23:22","value":{"kind":"number","nativeSrc":"4337:4:22","nodeType":"YulLiteral","src":"4337:4:22","type":"","value":"0x20"},"variables":[{"name":"srcOffset_1","nativeSrc":"4322:11:22","nodeType":"YulTypedName","src":"4322:11:22","type":""}]},{"nativeSrc":"4350:17:22","nodeType":"YulAssignment","src":"4350:17:22","value":{"kind":"number","nativeSrc":"4363:4:22","nodeType":"YulLiteral","src":"4363:4:22","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nativeSrc":"4350:9:22","nodeType":"YulIdentifier","src":"4350:9:22"}]},{"cases":[{"body":{"nativeSrc":"4413:656:22","nodeType":"YulBlock","src":"4413:656:22","statements":[{"nativeSrc":"4427:35:22","nodeType":"YulVariableDeclaration","src":"4427:35:22","value":{"arguments":[{"name":"newLen","nativeSrc":"4446:6:22","nodeType":"YulIdentifier","src":"4446:6:22"},{"arguments":[{"kind":"number","nativeSrc":"4458:2:22","nodeType":"YulLiteral","src":"4458:2:22","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"4454:3:22","nodeType":"YulIdentifier","src":"4454:3:22"},"nativeSrc":"4454:7:22","nodeType":"YulFunctionCall","src":"4454:7:22"}],"functionName":{"name":"and","nativeSrc":"4442:3:22","nodeType":"YulIdentifier","src":"4442:3:22"},"nativeSrc":"4442:20:22","nodeType":"YulFunctionCall","src":"4442:20:22"},"variables":[{"name":"loopEnd","nativeSrc":"4431:7:22","nodeType":"YulTypedName","src":"4431:7:22","type":""}]},{"nativeSrc":"4475:49:22","nodeType":"YulVariableDeclaration","src":"4475:49:22","value":{"arguments":[{"name":"slot","nativeSrc":"4519:4:22","nodeType":"YulIdentifier","src":"4519:4:22"}],"functionName":{"name":"array_dataslot_string_storage","nativeSrc":"4489:29:22","nodeType":"YulIdentifier","src":"4489:29:22"},"nativeSrc":"4489:35:22","nodeType":"YulFunctionCall","src":"4489:35:22"},"variables":[{"name":"dstPtr","nativeSrc":"4479:6:22","nodeType":"YulTypedName","src":"4479:6:22","type":""}]},{"nativeSrc":"4537:10:22","nodeType":"YulVariableDeclaration","src":"4537:10:22","value":{"kind":"number","nativeSrc":"4546:1:22","nodeType":"YulLiteral","src":"4546:1:22","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"4541:1:22","nodeType":"YulTypedName","src":"4541:1:22","type":""}]},{"body":{"nativeSrc":"4624:172:22","nodeType":"YulBlock","src":"4624:172:22","statements":[{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"4649:6:22","nodeType":"YulIdentifier","src":"4649:6:22"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"4667:3:22","nodeType":"YulIdentifier","src":"4667:3:22"},{"name":"srcOffset","nativeSrc":"4672:9:22","nodeType":"YulIdentifier","src":"4672:9:22"}],"functionName":{"name":"add","nativeSrc":"4663:3:22","nodeType":"YulIdentifier","src":"4663:3:22"},"nativeSrc":"4663:19:22","nodeType":"YulFunctionCall","src":"4663:19:22"}],"functionName":{"name":"mload","nativeSrc":"4657:5:22","nodeType":"YulIdentifier","src":"4657:5:22"},"nativeSrc":"4657:26:22","nodeType":"YulFunctionCall","src":"4657:26:22"}],"functionName":{"name":"sstore","nativeSrc":"4642:6:22","nodeType":"YulIdentifier","src":"4642:6:22"},"nativeSrc":"4642:42:22","nodeType":"YulFunctionCall","src":"4642:42:22"},"nativeSrc":"4642:42:22","nodeType":"YulExpressionStatement","src":"4642:42:22"},{"nativeSrc":"4701:24:22","nodeType":"YulAssignment","src":"4701:24:22","value":{"arguments":[{"name":"dstPtr","nativeSrc":"4715:6:22","nodeType":"YulIdentifier","src":"4715:6:22"},{"kind":"number","nativeSrc":"4723:1:22","nodeType":"YulLiteral","src":"4723:1:22","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"4711:3:22","nodeType":"YulIdentifier","src":"4711:3:22"},"nativeSrc":"4711:14:22","nodeType":"YulFunctionCall","src":"4711:14:22"},"variableNames":[{"name":"dstPtr","nativeSrc":"4701:6:22","nodeType":"YulIdentifier","src":"4701:6:22"}]},{"nativeSrc":"4742:40:22","nodeType":"YulAssignment","src":"4742:40:22","value":{"arguments":[{"name":"srcOffset","nativeSrc":"4759:9:22","nodeType":"YulIdentifier","src":"4759:9:22"},{"name":"srcOffset_1","nativeSrc":"4770:11:22","nodeType":"YulIdentifier","src":"4770:11:22"}],"functionName":{"name":"add","nativeSrc":"4755:3:22","nodeType":"YulIdentifier","src":"4755:3:22"},"nativeSrc":"4755:27:22","nodeType":"YulFunctionCall","src":"4755:27:22"},"variableNames":[{"name":"srcOffset","nativeSrc":"4742:9:22","nodeType":"YulIdentifier","src":"4742:9:22"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"4571:1:22","nodeType":"YulIdentifier","src":"4571:1:22"},{"name":"loopEnd","nativeSrc":"4574:7:22","nodeType":"YulIdentifier","src":"4574:7:22"}],"functionName":{"name":"lt","nativeSrc":"4568:2:22","nodeType":"YulIdentifier","src":"4568:2:22"},"nativeSrc":"4568:14:22","nodeType":"YulFunctionCall","src":"4568:14:22"},"nativeSrc":"4560:236:22","nodeType":"YulForLoop","post":{"nativeSrc":"4583:28:22","nodeType":"YulBlock","src":"4583:28:22","statements":[{"nativeSrc":"4585:24:22","nodeType":"YulAssignment","src":"4585:24:22","value":{"arguments":[{"name":"i","nativeSrc":"4594:1:22","nodeType":"YulIdentifier","src":"4594:1:22"},{"name":"srcOffset_1","nativeSrc":"4597:11:22","nodeType":"YulIdentifier","src":"4597:11:22"}],"functionName":{"name":"add","nativeSrc":"4590:3:22","nodeType":"YulIdentifier","src":"4590:3:22"},"nativeSrc":"4590:19:22","nodeType":"YulFunctionCall","src":"4590:19:22"},"variableNames":[{"name":"i","nativeSrc":"4585:1:22","nodeType":"YulIdentifier","src":"4585:1:22"}]}]},"pre":{"nativeSrc":"4564:3:22","nodeType":"YulBlock","src":"4564:3:22","statements":[]},"src":"4560:236:22"},{"body":{"nativeSrc":"4844:166:22","nodeType":"YulBlock","src":"4844:166:22","statements":[{"nativeSrc":"4862:43:22","nodeType":"YulVariableDeclaration","src":"4862:43:22","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"4889:3:22","nodeType":"YulIdentifier","src":"4889:3:22"},{"name":"srcOffset","nativeSrc":"4894:9:22","nodeType":"YulIdentifier","src":"4894:9:22"}],"functionName":{"name":"add","nativeSrc":"4885:3:22","nodeType":"YulIdentifier","src":"4885:3:22"},"nativeSrc":"4885:19:22","nodeType":"YulFunctionCall","src":"4885:19:22"}],"functionName":{"name":"mload","nativeSrc":"4879:5:22","nodeType":"YulIdentifier","src":"4879:5:22"},"nativeSrc":"4879:26:22","nodeType":"YulFunctionCall","src":"4879:26:22"},"variables":[{"name":"lastValue","nativeSrc":"4866:9:22","nodeType":"YulTypedName","src":"4866:9:22","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"4929:6:22","nodeType":"YulIdentifier","src":"4929:6:22"},{"arguments":[{"name":"lastValue","nativeSrc":"4941:9:22","nodeType":"YulIdentifier","src":"4941:9:22"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"4968:1:22","nodeType":"YulLiteral","src":"4968:1:22","type":"","value":"3"},{"name":"newLen","nativeSrc":"4971:6:22","nodeType":"YulIdentifier","src":"4971:6:22"}],"functionName":{"name":"shl","nativeSrc":"4964:3:22","nodeType":"YulIdentifier","src":"4964:3:22"},"nativeSrc":"4964:14:22","nodeType":"YulFunctionCall","src":"4964:14:22"},{"kind":"number","nativeSrc":"4980:3:22","nodeType":"YulLiteral","src":"4980:3:22","type":"","value":"248"}],"functionName":{"name":"and","nativeSrc":"4960:3:22","nodeType":"YulIdentifier","src":"4960:3:22"},"nativeSrc":"4960:24:22","nodeType":"YulFunctionCall","src":"4960:24:22"},{"arguments":[{"kind":"number","nativeSrc":"4990:1:22","nodeType":"YulLiteral","src":"4990:1:22","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"4986:3:22","nodeType":"YulIdentifier","src":"4986:3:22"},"nativeSrc":"4986:6:22","nodeType":"YulFunctionCall","src":"4986:6:22"}],"functionName":{"name":"shr","nativeSrc":"4956:3:22","nodeType":"YulIdentifier","src":"4956:3:22"},"nativeSrc":"4956:37:22","nodeType":"YulFunctionCall","src":"4956:37:22"}],"functionName":{"name":"not","nativeSrc":"4952:3:22","nodeType":"YulIdentifier","src":"4952:3:22"},"nativeSrc":"4952:42:22","nodeType":"YulFunctionCall","src":"4952:42:22"}],"functionName":{"name":"and","nativeSrc":"4937:3:22","nodeType":"YulIdentifier","src":"4937:3:22"},"nativeSrc":"4937:58:22","nodeType":"YulFunctionCall","src":"4937:58:22"}],"functionName":{"name":"sstore","nativeSrc":"4922:6:22","nodeType":"YulIdentifier","src":"4922:6:22"},"nativeSrc":"4922:74:22","nodeType":"YulFunctionCall","src":"4922:74:22"},"nativeSrc":"4922:74:22","nodeType":"YulExpressionStatement","src":"4922:74:22"}]},"condition":{"arguments":[{"name":"loopEnd","nativeSrc":"4815:7:22","nodeType":"YulIdentifier","src":"4815:7:22"},{"name":"newLen","nativeSrc":"4824:6:22","nodeType":"YulIdentifier","src":"4824:6:22"}],"functionName":{"name":"lt","nativeSrc":"4812:2:22","nodeType":"YulIdentifier","src":"4812:2:22"},"nativeSrc":"4812:19:22","nodeType":"YulFunctionCall","src":"4812:19:22"},"nativeSrc":"4809:201:22","nodeType":"YulIf","src":"4809:201:22"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"5030:4:22","nodeType":"YulIdentifier","src":"5030:4:22"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"5044:1:22","nodeType":"YulLiteral","src":"5044:1:22","type":"","value":"1"},{"name":"newLen","nativeSrc":"5047:6:22","nodeType":"YulIdentifier","src":"5047:6:22"}],"functionName":{"name":"shl","nativeSrc":"5040:3:22","nodeType":"YulIdentifier","src":"5040:3:22"},"nativeSrc":"5040:14:22","nodeType":"YulFunctionCall","src":"5040:14:22"},{"kind":"number","nativeSrc":"5056:1:22","nodeType":"YulLiteral","src":"5056:1:22","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"5036:3:22","nodeType":"YulIdentifier","src":"5036:3:22"},"nativeSrc":"5036:22:22","nodeType":"YulFunctionCall","src":"5036:22:22"}],"functionName":{"name":"sstore","nativeSrc":"5023:6:22","nodeType":"YulIdentifier","src":"5023:6:22"},"nativeSrc":"5023:36:22","nodeType":"YulFunctionCall","src":"5023:36:22"},"nativeSrc":"5023:36:22","nodeType":"YulExpressionStatement","src":"5023:36:22"}]},"nativeSrc":"4406:663:22","nodeType":"YulCase","src":"4406:663:22","value":{"kind":"number","nativeSrc":"4411:1:22","nodeType":"YulLiteral","src":"4411:1:22","type":"","value":"1"}},{"body":{"nativeSrc":"5086:234:22","nodeType":"YulBlock","src":"5086:234:22","statements":[{"nativeSrc":"5100:14:22","nodeType":"YulVariableDeclaration","src":"5100:14:22","value":{"kind":"number","nativeSrc":"5113:1:22","nodeType":"YulLiteral","src":"5113:1:22","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"5104:5:22","nodeType":"YulTypedName","src":"5104:5:22","type":""}]},{"body":{"nativeSrc":"5149:67:22","nodeType":"YulBlock","src":"5149:67:22","statements":[{"nativeSrc":"5167:35:22","nodeType":"YulAssignment","src":"5167:35:22","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"5186:3:22","nodeType":"YulIdentifier","src":"5186:3:22"},{"name":"srcOffset","nativeSrc":"5191:9:22","nodeType":"YulIdentifier","src":"5191:9:22"}],"functionName":{"name":"add","nativeSrc":"5182:3:22","nodeType":"YulIdentifier","src":"5182:3:22"},"nativeSrc":"5182:19:22","nodeType":"YulFunctionCall","src":"5182:19:22"}],"functionName":{"name":"mload","nativeSrc":"5176:5:22","nodeType":"YulIdentifier","src":"5176:5:22"},"nativeSrc":"5176:26:22","nodeType":"YulFunctionCall","src":"5176:26:22"},"variableNames":[{"name":"value","nativeSrc":"5167:5:22","nodeType":"YulIdentifier","src":"5167:5:22"}]}]},"condition":{"name":"newLen","nativeSrc":"5130:6:22","nodeType":"YulIdentifier","src":"5130:6:22"},"nativeSrc":"5127:89:22","nodeType":"YulIf","src":"5127:89:22"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"5236:4:22","nodeType":"YulIdentifier","src":"5236:4:22"},{"arguments":[{"name":"value","nativeSrc":"5295:5:22","nodeType":"YulIdentifier","src":"5295:5:22"},{"name":"newLen","nativeSrc":"5302:6:22","nodeType":"YulIdentifier","src":"5302:6:22"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"5242:52:22","nodeType":"YulIdentifier","src":"5242:52:22"},"nativeSrc":"5242:67:22","nodeType":"YulFunctionCall","src":"5242:67:22"}],"functionName":{"name":"sstore","nativeSrc":"5229:6:22","nodeType":"YulIdentifier","src":"5229:6:22"},"nativeSrc":"5229:81:22","nodeType":"YulFunctionCall","src":"5229:81:22"},"nativeSrc":"5229:81:22","nodeType":"YulExpressionStatement","src":"5229:81:22"}]},"nativeSrc":"5078:242:22","nodeType":"YulCase","src":"5078:242:22","value":"default"}],"expression":{"arguments":[{"name":"newLen","nativeSrc":"4386:6:22","nodeType":"YulIdentifier","src":"4386:6:22"},{"kind":"number","nativeSrc":"4394:2:22","nodeType":"YulLiteral","src":"4394:2:22","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"4383:2:22","nodeType":"YulIdentifier","src":"4383:2:22"},"nativeSrc":"4383:14:22","nodeType":"YulFunctionCall","src":"4383:14:22"},"nativeSrc":"4376:944:22","nodeType":"YulSwitch","src":"4376:944:22"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nativeSrc":"3981:1345:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"4062:4:22","nodeType":"YulTypedName","src":"4062:4:22","type":""},{"name":"src","nativeSrc":"4068:3:22","nodeType":"YulTypedName","src":"4068:3:22","type":""}],"src":"3981:1345:22"},{"body":{"nativeSrc":"5505:171:22","nodeType":"YulBlock","src":"5505:171:22","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"5522:9:22","nodeType":"YulIdentifier","src":"5522:9:22"},{"kind":"number","nativeSrc":"5533:2:22","nodeType":"YulLiteral","src":"5533:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"5515:6:22","nodeType":"YulIdentifier","src":"5515:6:22"},"nativeSrc":"5515:21:22","nodeType":"YulFunctionCall","src":"5515:21:22"},"nativeSrc":"5515:21:22","nodeType":"YulExpressionStatement","src":"5515:21:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5556:9:22","nodeType":"YulIdentifier","src":"5556:9:22"},{"kind":"number","nativeSrc":"5567:2:22","nodeType":"YulLiteral","src":"5567:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5552:3:22","nodeType":"YulIdentifier","src":"5552:3:22"},"nativeSrc":"5552:18:22","nodeType":"YulFunctionCall","src":"5552:18:22"},{"kind":"number","nativeSrc":"5572:2:22","nodeType":"YulLiteral","src":"5572:2:22","type":"","value":"21"}],"functionName":{"name":"mstore","nativeSrc":"5545:6:22","nodeType":"YulIdentifier","src":"5545:6:22"},"nativeSrc":"5545:30:22","nodeType":"YulFunctionCall","src":"5545:30:22"},"nativeSrc":"5545:30:22","nodeType":"YulExpressionStatement","src":"5545:30:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5595:9:22","nodeType":"YulIdentifier","src":"5595:9:22"},{"kind":"number","nativeSrc":"5606:2:22","nodeType":"YulLiteral","src":"5606:2:22","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"5591:3:22","nodeType":"YulIdentifier","src":"5591:3:22"},"nativeSrc":"5591:18:22","nodeType":"YulFunctionCall","src":"5591:18:22"},{"hexValue":"496e697469616c697a6174696f6e206661696c6564","kind":"string","nativeSrc":"5611:23:22","nodeType":"YulLiteral","src":"5611:23:22","type":"","value":"Initialization failed"}],"functionName":{"name":"mstore","nativeSrc":"5584:6:22","nodeType":"YulIdentifier","src":"5584:6:22"},"nativeSrc":"5584:51:22","nodeType":"YulFunctionCall","src":"5584:51:22"},"nativeSrc":"5584:51:22","nodeType":"YulExpressionStatement","src":"5584:51:22"},{"nativeSrc":"5644:26:22","nodeType":"YulAssignment","src":"5644:26:22","value":{"arguments":[{"name":"headStart","nativeSrc":"5656:9:22","nodeType":"YulIdentifier","src":"5656:9:22"},{"kind":"number","nativeSrc":"5667:2:22","nodeType":"YulLiteral","src":"5667:2:22","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"5652:3:22","nodeType":"YulIdentifier","src":"5652:3:22"},"nativeSrc":"5652:18:22","nodeType":"YulFunctionCall","src":"5652:18:22"},"variableNames":[{"name":"tail","nativeSrc":"5644:4:22","nodeType":"YulIdentifier","src":"5644:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_0ced64e7a7e72856969cefe00640aa7f13f8db705f9748f7d3003a20bc61daa4__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"5331:345:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5482:9:22","nodeType":"YulTypedName","src":"5482:9:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"5496:4:22","nodeType":"YulTypedName","src":"5496:4:22","type":""}],"src":"5331:345:22"},{"body":{"nativeSrc":"5762:127:22","nodeType":"YulBlock","src":"5762:127:22","statements":[{"body":{"nativeSrc":"5808:16:22","nodeType":"YulBlock","src":"5808:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5817:1:22","nodeType":"YulLiteral","src":"5817:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"5820:1:22","nodeType":"YulLiteral","src":"5820:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"5810:6:22","nodeType":"YulIdentifier","src":"5810:6:22"},"nativeSrc":"5810:12:22","nodeType":"YulFunctionCall","src":"5810:12:22"},"nativeSrc":"5810:12:22","nodeType":"YulExpressionStatement","src":"5810:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"5783:7:22","nodeType":"YulIdentifier","src":"5783:7:22"},{"name":"headStart","nativeSrc":"5792:9:22","nodeType":"YulIdentifier","src":"5792:9:22"}],"functionName":{"name":"sub","nativeSrc":"5779:3:22","nodeType":"YulIdentifier","src":"5779:3:22"},"nativeSrc":"5779:23:22","nodeType":"YulFunctionCall","src":"5779:23:22"},{"kind":"number","nativeSrc":"5804:2:22","nodeType":"YulLiteral","src":"5804:2:22","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"5775:3:22","nodeType":"YulIdentifier","src":"5775:3:22"},"nativeSrc":"5775:32:22","nodeType":"YulFunctionCall","src":"5775:32:22"},"nativeSrc":"5772:52:22","nodeType":"YulIf","src":"5772:52:22"},{"nativeSrc":"5833:50:22","nodeType":"YulAssignment","src":"5833:50:22","value":{"arguments":[{"name":"headStart","nativeSrc":"5873:9:22","nodeType":"YulIdentifier","src":"5873:9:22"}],"functionName":{"name":"abi_decode_address_fromMemory","nativeSrc":"5843:29:22","nodeType":"YulIdentifier","src":"5843:29:22"},"nativeSrc":"5843:40:22","nodeType":"YulFunctionCall","src":"5843:40:22"},"variableNames":[{"name":"value0","nativeSrc":"5833:6:22","nodeType":"YulIdentifier","src":"5833:6:22"}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nativeSrc":"5681:208:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5728:9:22","nodeType":"YulTypedName","src":"5728:9:22","type":""},{"name":"dataEnd","nativeSrc":"5739:7:22","nodeType":"YulTypedName","src":"5739:7:22","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"5751:6:22","nodeType":"YulTypedName","src":"5751:6:22","type":""}],"src":"5681:208:22"},{"body":{"nativeSrc":"6068:176:22","nodeType":"YulBlock","src":"6068:176:22","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"6085:9:22","nodeType":"YulIdentifier","src":"6085:9:22"},{"kind":"number","nativeSrc":"6096:2:22","nodeType":"YulLiteral","src":"6096:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"6078:6:22","nodeType":"YulIdentifier","src":"6078:6:22"},"nativeSrc":"6078:21:22","nodeType":"YulFunctionCall","src":"6078:21:22"},"nativeSrc":"6078:21:22","nodeType":"YulExpressionStatement","src":"6078:21:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6119:9:22","nodeType":"YulIdentifier","src":"6119:9:22"},{"kind":"number","nativeSrc":"6130:2:22","nodeType":"YulLiteral","src":"6130:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6115:3:22","nodeType":"YulIdentifier","src":"6115:3:22"},"nativeSrc":"6115:18:22","nodeType":"YulFunctionCall","src":"6115:18:22"},{"kind":"number","nativeSrc":"6135:2:22","nodeType":"YulLiteral","src":"6135:2:22","type":"","value":"26"}],"functionName":{"name":"mstore","nativeSrc":"6108:6:22","nodeType":"YulIdentifier","src":"6108:6:22"},"nativeSrc":"6108:30:22","nodeType":"YulFunctionCall","src":"6108:30:22"},"nativeSrc":"6108:30:22","nodeType":"YulExpressionStatement","src":"6108:30:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6158:9:22","nodeType":"YulIdentifier","src":"6158:9:22"},{"kind":"number","nativeSrc":"6169:2:22","nodeType":"YulLiteral","src":"6169:2:22","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"6154:3:22","nodeType":"YulIdentifier","src":"6154:3:22"},"nativeSrc":"6154:18:22","nodeType":"YulFunctionCall","src":"6154:18:22"},{"hexValue":"496e76616c696420626173652061737365742061646472657373","kind":"string","nativeSrc":"6174:28:22","nodeType":"YulLiteral","src":"6174:28:22","type":"","value":"Invalid base asset address"}],"functionName":{"name":"mstore","nativeSrc":"6147:6:22","nodeType":"YulIdentifier","src":"6147:6:22"},"nativeSrc":"6147:56:22","nodeType":"YulFunctionCall","src":"6147:56:22"},"nativeSrc":"6147:56:22","nodeType":"YulExpressionStatement","src":"6147:56:22"},{"nativeSrc":"6212:26:22","nodeType":"YulAssignment","src":"6212:26:22","value":{"arguments":[{"name":"headStart","nativeSrc":"6224:9:22","nodeType":"YulIdentifier","src":"6224:9:22"},{"kind":"number","nativeSrc":"6235:2:22","nodeType":"YulLiteral","src":"6235:2:22","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"6220:3:22","nodeType":"YulIdentifier","src":"6220:3:22"},"nativeSrc":"6220:18:22","nodeType":"YulFunctionCall","src":"6220:18:22"},"variableNames":[{"name":"tail","nativeSrc":"6212:4:22","nodeType":"YulIdentifier","src":"6212:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_391a75680d8ec99739af126cde56833526e4b720a416f24f1d7ee98c294a45b1__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"5894:350:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6045:9:22","nodeType":"YulTypedName","src":"6045:9:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"6059:4:22","nodeType":"YulTypedName","src":"6059:4:22","type":""}],"src":"5894:350:22"},{"body":{"nativeSrc":"6281:95:22","nodeType":"YulBlock","src":"6281:95:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6298:1:22","nodeType":"YulLiteral","src":"6298:1:22","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"6305:3:22","nodeType":"YulLiteral","src":"6305:3:22","type":"","value":"224"},{"kind":"number","nativeSrc":"6310:10:22","nodeType":"YulLiteral","src":"6310:10:22","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"6301:3:22","nodeType":"YulIdentifier","src":"6301:3:22"},"nativeSrc":"6301:20:22","nodeType":"YulFunctionCall","src":"6301:20:22"}],"functionName":{"name":"mstore","nativeSrc":"6291:6:22","nodeType":"YulIdentifier","src":"6291:6:22"},"nativeSrc":"6291:31:22","nodeType":"YulFunctionCall","src":"6291:31:22"},"nativeSrc":"6291:31:22","nodeType":"YulExpressionStatement","src":"6291:31:22"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"6338:1:22","nodeType":"YulLiteral","src":"6338:1:22","type":"","value":"4"},{"kind":"number","nativeSrc":"6341:4:22","nodeType":"YulLiteral","src":"6341:4:22","type":"","value":"0x32"}],"functionName":{"name":"mstore","nativeSrc":"6331:6:22","nodeType":"YulIdentifier","src":"6331:6:22"},"nativeSrc":"6331:15:22","nodeType":"YulFunctionCall","src":"6331:15:22"},"nativeSrc":"6331:15:22","nodeType":"YulExpressionStatement","src":"6331:15:22"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"6362:1:22","nodeType":"YulLiteral","src":"6362:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"6365:4:22","nodeType":"YulLiteral","src":"6365:4:22","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"6355:6:22","nodeType":"YulIdentifier","src":"6355:6:22"},"nativeSrc":"6355:15:22","nodeType":"YulFunctionCall","src":"6355:15:22"},"nativeSrc":"6355:15:22","nodeType":"YulExpressionStatement","src":"6355:15:22"}]},"name":"panic_error_0x32","nativeSrc":"6249:127:22","nodeType":"YulFunctionDefinition","src":"6249:127:22"},{"body":{"nativeSrc":"6429:174:22","nodeType":"YulBlock","src":"6429:174:22","statements":[{"nativeSrc":"6439:16:22","nodeType":"YulAssignment","src":"6439:16:22","value":{"arguments":[{"name":"x","nativeSrc":"6450:1:22","nodeType":"YulIdentifier","src":"6450:1:22"},{"name":"y","nativeSrc":"6453:1:22","nodeType":"YulIdentifier","src":"6453:1:22"}],"functionName":{"name":"add","nativeSrc":"6446:3:22","nodeType":"YulIdentifier","src":"6446:3:22"},"nativeSrc":"6446:9:22","nodeType":"YulFunctionCall","src":"6446:9:22"},"variableNames":[{"name":"sum","nativeSrc":"6439:3:22","nodeType":"YulIdentifier","src":"6439:3:22"}]},{"body":{"nativeSrc":"6486:111:22","nodeType":"YulBlock","src":"6486:111:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6507:1:22","nodeType":"YulLiteral","src":"6507:1:22","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"6514:3:22","nodeType":"YulLiteral","src":"6514:3:22","type":"","value":"224"},{"kind":"number","nativeSrc":"6519:10:22","nodeType":"YulLiteral","src":"6519:10:22","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"6510:3:22","nodeType":"YulIdentifier","src":"6510:3:22"},"nativeSrc":"6510:20:22","nodeType":"YulFunctionCall","src":"6510:20:22"}],"functionName":{"name":"mstore","nativeSrc":"6500:6:22","nodeType":"YulIdentifier","src":"6500:6:22"},"nativeSrc":"6500:31:22","nodeType":"YulFunctionCall","src":"6500:31:22"},"nativeSrc":"6500:31:22","nodeType":"YulExpressionStatement","src":"6500:31:22"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"6551:1:22","nodeType":"YulLiteral","src":"6551:1:22","type":"","value":"4"},{"kind":"number","nativeSrc":"6554:4:22","nodeType":"YulLiteral","src":"6554:4:22","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"6544:6:22","nodeType":"YulIdentifier","src":"6544:6:22"},"nativeSrc":"6544:15:22","nodeType":"YulFunctionCall","src":"6544:15:22"},"nativeSrc":"6544:15:22","nodeType":"YulExpressionStatement","src":"6544:15:22"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"6579:1:22","nodeType":"YulLiteral","src":"6579:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"6582:4:22","nodeType":"YulLiteral","src":"6582:4:22","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"6572:6:22","nodeType":"YulIdentifier","src":"6572:6:22"},"nativeSrc":"6572:15:22","nodeType":"YulFunctionCall","src":"6572:15:22"},"nativeSrc":"6572:15:22","nodeType":"YulExpressionStatement","src":"6572:15:22"}]},"condition":{"arguments":[{"name":"x","nativeSrc":"6470:1:22","nodeType":"YulIdentifier","src":"6470:1:22"},{"name":"sum","nativeSrc":"6473:3:22","nodeType":"YulIdentifier","src":"6473:3:22"}],"functionName":{"name":"gt","nativeSrc":"6467:2:22","nodeType":"YulIdentifier","src":"6467:2:22"},"nativeSrc":"6467:10:22","nodeType":"YulFunctionCall","src":"6467:10:22"},"nativeSrc":"6464:133:22","nodeType":"YulIf","src":"6464:133:22"}]},"name":"checked_add_t_uint256","nativeSrc":"6381:222:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"6412:1:22","nodeType":"YulTypedName","src":"6412:1:22","type":""},{"name":"y","nativeSrc":"6415:1:22","nodeType":"YulTypedName","src":"6415:1:22","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"6421:3:22","nodeType":"YulTypedName","src":"6421:3:22","type":""}],"src":"6381:222:22"},{"body":{"nativeSrc":"6782:165:22","nodeType":"YulBlock","src":"6782:165:22","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"6799:9:22","nodeType":"YulIdentifier","src":"6799:9:22"},{"kind":"number","nativeSrc":"6810:2:22","nodeType":"YulLiteral","src":"6810:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"6792:6:22","nodeType":"YulIdentifier","src":"6792:6:22"},"nativeSrc":"6792:21:22","nodeType":"YulFunctionCall","src":"6792:21:22"},"nativeSrc":"6792:21:22","nodeType":"YulExpressionStatement","src":"6792:21:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6833:9:22","nodeType":"YulIdentifier","src":"6833:9:22"},{"kind":"number","nativeSrc":"6844:2:22","nodeType":"YulLiteral","src":"6844:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6829:3:22","nodeType":"YulIdentifier","src":"6829:3:22"},"nativeSrc":"6829:18:22","nodeType":"YulFunctionCall","src":"6829:18:22"},{"kind":"number","nativeSrc":"6849:2:22","nodeType":"YulLiteral","src":"6849:2:22","type":"","value":"15"}],"functionName":{"name":"mstore","nativeSrc":"6822:6:22","nodeType":"YulIdentifier","src":"6822:6:22"},"nativeSrc":"6822:30:22","nodeType":"YulFunctionCall","src":"6822:30:22"},"nativeSrc":"6822:30:22","nodeType":"YulExpressionStatement","src":"6822:30:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6872:9:22","nodeType":"YulIdentifier","src":"6872:9:22"},{"kind":"number","nativeSrc":"6883:2:22","nodeType":"YulLiteral","src":"6883:2:22","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"6868:3:22","nodeType":"YulIdentifier","src":"6868:3:22"},"nativeSrc":"6868:18:22","nodeType":"YulFunctionCall","src":"6868:18:22"},{"hexValue":"496e76616c69642077656967687473","kind":"string","nativeSrc":"6888:17:22","nodeType":"YulLiteral","src":"6888:17:22","type":"","value":"Invalid weights"}],"functionName":{"name":"mstore","nativeSrc":"6861:6:22","nodeType":"YulIdentifier","src":"6861:6:22"},"nativeSrc":"6861:45:22","nodeType":"YulFunctionCall","src":"6861:45:22"},"nativeSrc":"6861:45:22","nodeType":"YulExpressionStatement","src":"6861:45:22"},{"nativeSrc":"6915:26:22","nodeType":"YulAssignment","src":"6915:26:22","value":{"arguments":[{"name":"headStart","nativeSrc":"6927:9:22","nodeType":"YulIdentifier","src":"6927:9:22"},{"kind":"number","nativeSrc":"6938:2:22","nodeType":"YulLiteral","src":"6938:2:22","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"6923:3:22","nodeType":"YulIdentifier","src":"6923:3:22"},"nativeSrc":"6923:18:22","nodeType":"YulFunctionCall","src":"6923:18:22"},"variableNames":[{"name":"tail","nativeSrc":"6915:4:22","nodeType":"YulIdentifier","src":"6915:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_5cbb8d647918028d0523fccac550113bbbb71d463bbb8b573c02c32bc5cf2b89__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"6608:339:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6759:9:22","nodeType":"YulTypedName","src":"6759:9:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"6773:4:22","nodeType":"YulTypedName","src":"6773:4:22","type":""}],"src":"6608:339:22"},{"body":{"nativeSrc":"7126:176:22","nodeType":"YulBlock","src":"7126:176:22","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"7143:9:22","nodeType":"YulIdentifier","src":"7143:9:22"},{"kind":"number","nativeSrc":"7154:2:22","nodeType":"YulLiteral","src":"7154:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"7136:6:22","nodeType":"YulIdentifier","src":"7136:6:22"},"nativeSrc":"7136:21:22","nodeType":"YulFunctionCall","src":"7136:21:22"},"nativeSrc":"7136:21:22","nodeType":"YulExpressionStatement","src":"7136:21:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7177:9:22","nodeType":"YulIdentifier","src":"7177:9:22"},{"kind":"number","nativeSrc":"7188:2:22","nodeType":"YulLiteral","src":"7188:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7173:3:22","nodeType":"YulIdentifier","src":"7173:3:22"},"nativeSrc":"7173:18:22","nodeType":"YulFunctionCall","src":"7173:18:22"},{"kind":"number","nativeSrc":"7193:2:22","nodeType":"YulLiteral","src":"7193:2:22","type":"","value":"26"}],"functionName":{"name":"mstore","nativeSrc":"7166:6:22","nodeType":"YulIdentifier","src":"7166:6:22"},"nativeSrc":"7166:30:22","nodeType":"YulFunctionCall","src":"7166:30:22"},"nativeSrc":"7166:30:22","nodeType":"YulExpressionStatement","src":"7166:30:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7216:9:22","nodeType":"YulIdentifier","src":"7216:9:22"},{"kind":"number","nativeSrc":"7227:2:22","nodeType":"YulLiteral","src":"7227:2:22","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"7212:3:22","nodeType":"YulIdentifier","src":"7212:3:22"},"nativeSrc":"7212:18:22","nodeType":"YulFunctionCall","src":"7212:18:22"},{"hexValue":"496e76616c696420726562616c616e6365722061646472657373","kind":"string","nativeSrc":"7232:28:22","nodeType":"YulLiteral","src":"7232:28:22","type":"","value":"Invalid rebalancer address"}],"functionName":{"name":"mstore","nativeSrc":"7205:6:22","nodeType":"YulIdentifier","src":"7205:6:22"},"nativeSrc":"7205:56:22","nodeType":"YulFunctionCall","src":"7205:56:22"},"nativeSrc":"7205:56:22","nodeType":"YulExpressionStatement","src":"7205:56:22"},{"nativeSrc":"7270:26:22","nodeType":"YulAssignment","src":"7270:26:22","value":{"arguments":[{"name":"headStart","nativeSrc":"7282:9:22","nodeType":"YulIdentifier","src":"7282:9:22"},{"kind":"number","nativeSrc":"7293:2:22","nodeType":"YulLiteral","src":"7293:2:22","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"7278:3:22","nodeType":"YulIdentifier","src":"7278:3:22"},"nativeSrc":"7278:18:22","nodeType":"YulFunctionCall","src":"7278:18:22"},"variableNames":[{"name":"tail","nativeSrc":"7270:4:22","nodeType":"YulIdentifier","src":"7270:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_b3262886d4e83856703b764357b6a852eb26ef34a7982063b49217460e097ddc__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"6952:350:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7103:9:22","nodeType":"YulTypedName","src":"7103:9:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"7117:4:22","nodeType":"YulTypedName","src":"7117:4:22","type":""}],"src":"6952:350:22"},{"body":{"nativeSrc":"7481:224:22","nodeType":"YulBlock","src":"7481:224:22","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"7498:9:22","nodeType":"YulIdentifier","src":"7498:9:22"},{"kind":"number","nativeSrc":"7509:2:22","nodeType":"YulLiteral","src":"7509:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"7491:6:22","nodeType":"YulIdentifier","src":"7491:6:22"},"nativeSrc":"7491:21:22","nodeType":"YulFunctionCall","src":"7491:21:22"},"nativeSrc":"7491:21:22","nodeType":"YulExpressionStatement","src":"7491:21:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7532:9:22","nodeType":"YulIdentifier","src":"7532:9:22"},{"kind":"number","nativeSrc":"7543:2:22","nodeType":"YulLiteral","src":"7543:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7528:3:22","nodeType":"YulIdentifier","src":"7528:3:22"},"nativeSrc":"7528:18:22","nodeType":"YulFunctionCall","src":"7528:18:22"},{"kind":"number","nativeSrc":"7548:2:22","nodeType":"YulLiteral","src":"7548:2:22","type":"","value":"34"}],"functionName":{"name":"mstore","nativeSrc":"7521:6:22","nodeType":"YulIdentifier","src":"7521:6:22"},"nativeSrc":"7521:30:22","nodeType":"YulFunctionCall","src":"7521:30:22"},"nativeSrc":"7521:30:22","nodeType":"YulExpressionStatement","src":"7521:30:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7571:9:22","nodeType":"YulIdentifier","src":"7571:9:22"},{"kind":"number","nativeSrc":"7582:2:22","nodeType":"YulLiteral","src":"7582:2:22","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"7567:3:22","nodeType":"YulIdentifier","src":"7567:3:22"},"nativeSrc":"7567:18:22","nodeType":"YulFunctionCall","src":"7567:18:22"},{"hexValue":"41737365747320616e642077656967687473206c656e677468206d69736d6174","kind":"string","nativeSrc":"7587:34:22","nodeType":"YulLiteral","src":"7587:34:22","type":"","value":"Assets and weights length mismat"}],"functionName":{"name":"mstore","nativeSrc":"7560:6:22","nodeType":"YulIdentifier","src":"7560:6:22"},"nativeSrc":"7560:62:22","nodeType":"YulFunctionCall","src":"7560:62:22"},"nativeSrc":"7560:62:22","nodeType":"YulExpressionStatement","src":"7560:62:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7642:9:22","nodeType":"YulIdentifier","src":"7642:9:22"},{"kind":"number","nativeSrc":"7653:2:22","nodeType":"YulLiteral","src":"7653:2:22","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"7638:3:22","nodeType":"YulIdentifier","src":"7638:3:22"},"nativeSrc":"7638:18:22","nodeType":"YulFunctionCall","src":"7638:18:22"},{"hexValue":"6368","kind":"string","nativeSrc":"7658:4:22","nodeType":"YulLiteral","src":"7658:4:22","type":"","value":"ch"}],"functionName":{"name":"mstore","nativeSrc":"7631:6:22","nodeType":"YulIdentifier","src":"7631:6:22"},"nativeSrc":"7631:32:22","nodeType":"YulFunctionCall","src":"7631:32:22"},"nativeSrc":"7631:32:22","nodeType":"YulExpressionStatement","src":"7631:32:22"},{"nativeSrc":"7672:27:22","nodeType":"YulAssignment","src":"7672:27:22","value":{"arguments":[{"name":"headStart","nativeSrc":"7684:9:22","nodeType":"YulIdentifier","src":"7684:9:22"},{"kind":"number","nativeSrc":"7695:3:22","nodeType":"YulLiteral","src":"7695:3:22","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"7680:3:22","nodeType":"YulIdentifier","src":"7680:3:22"},"nativeSrc":"7680:19:22","nodeType":"YulFunctionCall","src":"7680:19:22"},"variableNames":[{"name":"tail","nativeSrc":"7672:4:22","nodeType":"YulIdentifier","src":"7672:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_ebb567ad160cf2ebbf5e53ab40a3ffae6f6492169d006ee3f8bad6794e36f372__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"7307:398:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7458:9:22","nodeType":"YulTypedName","src":"7458:9:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"7472:4:22","nodeType":"YulTypedName","src":"7472:4:22","type":""}],"src":"7307:398:22"},{"body":{"nativeSrc":"7884:171:22","nodeType":"YulBlock","src":"7884:171:22","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"7901:9:22","nodeType":"YulIdentifier","src":"7901:9:22"},{"kind":"number","nativeSrc":"7912:2:22","nodeType":"YulLiteral","src":"7912:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"7894:6:22","nodeType":"YulIdentifier","src":"7894:6:22"},"nativeSrc":"7894:21:22","nodeType":"YulFunctionCall","src":"7894:21:22"},"nativeSrc":"7894:21:22","nodeType":"YulExpressionStatement","src":"7894:21:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7935:9:22","nodeType":"YulIdentifier","src":"7935:9:22"},{"kind":"number","nativeSrc":"7946:2:22","nodeType":"YulLiteral","src":"7946:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7931:3:22","nodeType":"YulIdentifier","src":"7931:3:22"},"nativeSrc":"7931:18:22","nodeType":"YulFunctionCall","src":"7931:18:22"},{"kind":"number","nativeSrc":"7951:2:22","nodeType":"YulLiteral","src":"7951:2:22","type":"","value":"21"}],"functionName":{"name":"mstore","nativeSrc":"7924:6:22","nodeType":"YulIdentifier","src":"7924:6:22"},"nativeSrc":"7924:30:22","nodeType":"YulFunctionCall","src":"7924:30:22"},"nativeSrc":"7924:30:22","nodeType":"YulExpressionStatement","src":"7924:30:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7974:9:22","nodeType":"YulIdentifier","src":"7974:9:22"},{"kind":"number","nativeSrc":"7985:2:22","nodeType":"YulLiteral","src":"7985:2:22","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"7970:3:22","nodeType":"YulIdentifier","src":"7970:3:22"},"nativeSrc":"7970:18:22","nodeType":"YulFunctionCall","src":"7970:18:22"},{"hexValue":"496e76616c69642061737365742061646472657373","kind":"string","nativeSrc":"7990:23:22","nodeType":"YulLiteral","src":"7990:23:22","type":"","value":"Invalid asset address"}],"functionName":{"name":"mstore","nativeSrc":"7963:6:22","nodeType":"YulIdentifier","src":"7963:6:22"},"nativeSrc":"7963:51:22","nodeType":"YulFunctionCall","src":"7963:51:22"},"nativeSrc":"7963:51:22","nodeType":"YulExpressionStatement","src":"7963:51:22"},{"nativeSrc":"8023:26:22","nodeType":"YulAssignment","src":"8023:26:22","value":{"arguments":[{"name":"headStart","nativeSrc":"8035:9:22","nodeType":"YulIdentifier","src":"8035:9:22"},{"kind":"number","nativeSrc":"8046:2:22","nodeType":"YulLiteral","src":"8046:2:22","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"8031:3:22","nodeType":"YulIdentifier","src":"8031:3:22"},"nativeSrc":"8031:18:22","nodeType":"YulFunctionCall","src":"8031:18:22"},"variableNames":[{"name":"tail","nativeSrc":"8023:4:22","nodeType":"YulIdentifier","src":"8023:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_795f8eca8a22be2e70f1d9bdebdbf85a1dc43e172c3964e13eac586b45ff2b92__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"7710:345:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7861:9:22","nodeType":"YulTypedName","src":"7861:9:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"7875:4:22","nodeType":"YulTypedName","src":"7875:4:22","type":""}],"src":"7710:345:22"},{"body":{"nativeSrc":"8234:164:22","nodeType":"YulBlock","src":"8234:164:22","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"8251:9:22","nodeType":"YulIdentifier","src":"8251:9:22"},{"kind":"number","nativeSrc":"8262:2:22","nodeType":"YulLiteral","src":"8262:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"8244:6:22","nodeType":"YulIdentifier","src":"8244:6:22"},"nativeSrc":"8244:21:22","nodeType":"YulFunctionCall","src":"8244:21:22"},"nativeSrc":"8244:21:22","nodeType":"YulExpressionStatement","src":"8244:21:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8285:9:22","nodeType":"YulIdentifier","src":"8285:9:22"},{"kind":"number","nativeSrc":"8296:2:22","nodeType":"YulLiteral","src":"8296:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"8281:3:22","nodeType":"YulIdentifier","src":"8281:3:22"},"nativeSrc":"8281:18:22","nodeType":"YulFunctionCall","src":"8281:18:22"},{"kind":"number","nativeSrc":"8301:2:22","nodeType":"YulLiteral","src":"8301:2:22","type":"","value":"14"}],"functionName":{"name":"mstore","nativeSrc":"8274:6:22","nodeType":"YulIdentifier","src":"8274:6:22"},"nativeSrc":"8274:30:22","nodeType":"YulFunctionCall","src":"8274:30:22"},"nativeSrc":"8274:30:22","nodeType":"YulExpressionStatement","src":"8274:30:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8324:9:22","nodeType":"YulIdentifier","src":"8324:9:22"},{"kind":"number","nativeSrc":"8335:2:22","nodeType":"YulLiteral","src":"8335:2:22","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"8320:3:22","nodeType":"YulIdentifier","src":"8320:3:22"},"nativeSrc":"8320:18:22","nodeType":"YulFunctionCall","src":"8320:18:22"},{"hexValue":"496e76616c696420776569676874","kind":"string","nativeSrc":"8340:16:22","nodeType":"YulLiteral","src":"8340:16:22","type":"","value":"Invalid weight"}],"functionName":{"name":"mstore","nativeSrc":"8313:6:22","nodeType":"YulIdentifier","src":"8313:6:22"},"nativeSrc":"8313:44:22","nodeType":"YulFunctionCall","src":"8313:44:22"},"nativeSrc":"8313:44:22","nodeType":"YulExpressionStatement","src":"8313:44:22"},{"nativeSrc":"8366:26:22","nodeType":"YulAssignment","src":"8366:26:22","value":{"arguments":[{"name":"headStart","nativeSrc":"8378:9:22","nodeType":"YulIdentifier","src":"8378:9:22"},{"kind":"number","nativeSrc":"8389:2:22","nodeType":"YulLiteral","src":"8389:2:22","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"8374:3:22","nodeType":"YulIdentifier","src":"8374:3:22"},"nativeSrc":"8374:18:22","nodeType":"YulFunctionCall","src":"8374:18:22"},"variableNames":[{"name":"tail","nativeSrc":"8366:4:22","nodeType":"YulIdentifier","src":"8366:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_ff1ef73e4333da4da038aba1312a1df349427c8859c23d4b6d4a7df22bfc1a19__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"8060:338:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8211:9:22","nodeType":"YulTypedName","src":"8211:9:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"8225:4:22","nodeType":"YulTypedName","src":"8225:4:22","type":""}],"src":"8060:338:22"},{"body":{"nativeSrc":"8532:175:22","nodeType":"YulBlock","src":"8532:175:22","statements":[{"nativeSrc":"8542:26:22","nodeType":"YulAssignment","src":"8542:26:22","value":{"arguments":[{"name":"headStart","nativeSrc":"8554:9:22","nodeType":"YulIdentifier","src":"8554:9:22"},{"kind":"number","nativeSrc":"8565:2:22","nodeType":"YulLiteral","src":"8565:2:22","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"8550:3:22","nodeType":"YulIdentifier","src":"8550:3:22"},"nativeSrc":"8550:18:22","nodeType":"YulFunctionCall","src":"8550:18:22"},"variableNames":[{"name":"tail","nativeSrc":"8542:4:22","nodeType":"YulIdentifier","src":"8542:4:22"}]},{"nativeSrc":"8577:29:22","nodeType":"YulVariableDeclaration","src":"8577:29:22","value":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"8595:3:22","nodeType":"YulLiteral","src":"8595:3:22","type":"","value":"160"},{"kind":"number","nativeSrc":"8600:1:22","nodeType":"YulLiteral","src":"8600:1:22","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"8591:3:22","nodeType":"YulIdentifier","src":"8591:3:22"},"nativeSrc":"8591:11:22","nodeType":"YulFunctionCall","src":"8591:11:22"},{"kind":"number","nativeSrc":"8604:1:22","nodeType":"YulLiteral","src":"8604:1:22","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"8587:3:22","nodeType":"YulIdentifier","src":"8587:3:22"},"nativeSrc":"8587:19:22","nodeType":"YulFunctionCall","src":"8587:19:22"},"variables":[{"name":"_1","nativeSrc":"8581:2:22","nodeType":"YulTypedName","src":"8581:2:22","type":""}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"8622:9:22","nodeType":"YulIdentifier","src":"8622:9:22"},{"arguments":[{"name":"value0","nativeSrc":"8637:6:22","nodeType":"YulIdentifier","src":"8637:6:22"},{"name":"_1","nativeSrc":"8645:2:22","nodeType":"YulIdentifier","src":"8645:2:22"}],"functionName":{"name":"and","nativeSrc":"8633:3:22","nodeType":"YulIdentifier","src":"8633:3:22"},"nativeSrc":"8633:15:22","nodeType":"YulFunctionCall","src":"8633:15:22"}],"functionName":{"name":"mstore","nativeSrc":"8615:6:22","nodeType":"YulIdentifier","src":"8615:6:22"},"nativeSrc":"8615:34:22","nodeType":"YulFunctionCall","src":"8615:34:22"},"nativeSrc":"8615:34:22","nodeType":"YulExpressionStatement","src":"8615:34:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8669:9:22","nodeType":"YulIdentifier","src":"8669:9:22"},{"kind":"number","nativeSrc":"8680:2:22","nodeType":"YulLiteral","src":"8680:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"8665:3:22","nodeType":"YulIdentifier","src":"8665:3:22"},"nativeSrc":"8665:18:22","nodeType":"YulFunctionCall","src":"8665:18:22"},{"arguments":[{"name":"value1","nativeSrc":"8689:6:22","nodeType":"YulIdentifier","src":"8689:6:22"},{"name":"_1","nativeSrc":"8697:2:22","nodeType":"YulIdentifier","src":"8697:2:22"}],"functionName":{"name":"and","nativeSrc":"8685:3:22","nodeType":"YulIdentifier","src":"8685:3:22"},"nativeSrc":"8685:15:22","nodeType":"YulFunctionCall","src":"8685:15:22"}],"functionName":{"name":"mstore","nativeSrc":"8658:6:22","nodeType":"YulIdentifier","src":"8658:6:22"},"nativeSrc":"8658:43:22","nodeType":"YulFunctionCall","src":"8658:43:22"},"nativeSrc":"8658:43:22","nodeType":"YulExpressionStatement","src":"8658:43:22"}]},"name":"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed","nativeSrc":"8403:304:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8493:9:22","nodeType":"YulTypedName","src":"8493:9:22","type":""},{"name":"value1","nativeSrc":"8504:6:22","nodeType":"YulTypedName","src":"8504:6:22","type":""},{"name":"value0","nativeSrc":"8512:6:22","nodeType":"YulTypedName","src":"8512:6:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"8523:4:22","nodeType":"YulTypedName","src":"8523:4:22","type":""}],"src":"8403:304:22"},{"body":{"nativeSrc":"8793:103:22","nodeType":"YulBlock","src":"8793:103:22","statements":[{"body":{"nativeSrc":"8839:16:22","nodeType":"YulBlock","src":"8839:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"8848:1:22","nodeType":"YulLiteral","src":"8848:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"8851:1:22","nodeType":"YulLiteral","src":"8851:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"8841:6:22","nodeType":"YulIdentifier","src":"8841:6:22"},"nativeSrc":"8841:12:22","nodeType":"YulFunctionCall","src":"8841:12:22"},"nativeSrc":"8841:12:22","nodeType":"YulExpressionStatement","src":"8841:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"8814:7:22","nodeType":"YulIdentifier","src":"8814:7:22"},{"name":"headStart","nativeSrc":"8823:9:22","nodeType":"YulIdentifier","src":"8823:9:22"}],"functionName":{"name":"sub","nativeSrc":"8810:3:22","nodeType":"YulIdentifier","src":"8810:3:22"},"nativeSrc":"8810:23:22","nodeType":"YulFunctionCall","src":"8810:23:22"},{"kind":"number","nativeSrc":"8835:2:22","nodeType":"YulLiteral","src":"8835:2:22","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"8806:3:22","nodeType":"YulIdentifier","src":"8806:3:22"},"nativeSrc":"8806:32:22","nodeType":"YulFunctionCall","src":"8806:32:22"},"nativeSrc":"8803:52:22","nodeType":"YulIf","src":"8803:52:22"},{"nativeSrc":"8864:26:22","nodeType":"YulAssignment","src":"8864:26:22","value":{"arguments":[{"name":"headStart","nativeSrc":"8880:9:22","nodeType":"YulIdentifier","src":"8880:9:22"}],"functionName":{"name":"mload","nativeSrc":"8874:5:22","nodeType":"YulIdentifier","src":"8874:5:22"},"nativeSrc":"8874:16:22","nodeType":"YulFunctionCall","src":"8874:16:22"},"variableNames":[{"name":"value0","nativeSrc":"8864:6:22","nodeType":"YulIdentifier","src":"8864:6:22"}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nativeSrc":"8712:184:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8759:9:22","nodeType":"YulTypedName","src":"8759:9:22","type":""},{"name":"dataEnd","nativeSrc":"8770:7:22","nodeType":"YulTypedName","src":"8770:7:22","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"8782:6:22","nodeType":"YulTypedName","src":"8782:6:22","type":""}],"src":"8712:184:22"},{"body":{"nativeSrc":"9030:145:22","nodeType":"YulBlock","src":"9030:145:22","statements":[{"nativeSrc":"9040:26:22","nodeType":"YulAssignment","src":"9040:26:22","value":{"arguments":[{"name":"headStart","nativeSrc":"9052:9:22","nodeType":"YulIdentifier","src":"9052:9:22"},{"kind":"number","nativeSrc":"9063:2:22","nodeType":"YulLiteral","src":"9063:2:22","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"9048:3:22","nodeType":"YulIdentifier","src":"9048:3:22"},"nativeSrc":"9048:18:22","nodeType":"YulFunctionCall","src":"9048:18:22"},"variableNames":[{"name":"tail","nativeSrc":"9040:4:22","nodeType":"YulIdentifier","src":"9040:4:22"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"9082:9:22","nodeType":"YulIdentifier","src":"9082:9:22"},{"arguments":[{"name":"value0","nativeSrc":"9097:6:22","nodeType":"YulIdentifier","src":"9097:6:22"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"9113:3:22","nodeType":"YulLiteral","src":"9113:3:22","type":"","value":"160"},{"kind":"number","nativeSrc":"9118:1:22","nodeType":"YulLiteral","src":"9118:1:22","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"9109:3:22","nodeType":"YulIdentifier","src":"9109:3:22"},"nativeSrc":"9109:11:22","nodeType":"YulFunctionCall","src":"9109:11:22"},{"kind":"number","nativeSrc":"9122:1:22","nodeType":"YulLiteral","src":"9122:1:22","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"9105:3:22","nodeType":"YulIdentifier","src":"9105:3:22"},"nativeSrc":"9105:19:22","nodeType":"YulFunctionCall","src":"9105:19:22"}],"functionName":{"name":"and","nativeSrc":"9093:3:22","nodeType":"YulIdentifier","src":"9093:3:22"},"nativeSrc":"9093:32:22","nodeType":"YulFunctionCall","src":"9093:32:22"}],"functionName":{"name":"mstore","nativeSrc":"9075:6:22","nodeType":"YulIdentifier","src":"9075:6:22"},"nativeSrc":"9075:51:22","nodeType":"YulFunctionCall","src":"9075:51:22"},"nativeSrc":"9075:51:22","nodeType":"YulExpressionStatement","src":"9075:51:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9146:9:22","nodeType":"YulIdentifier","src":"9146:9:22"},{"kind":"number","nativeSrc":"9157:2:22","nodeType":"YulLiteral","src":"9157:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"9142:3:22","nodeType":"YulIdentifier","src":"9142:3:22"},"nativeSrc":"9142:18:22","nodeType":"YulFunctionCall","src":"9142:18:22"},{"name":"value1","nativeSrc":"9162:6:22","nodeType":"YulIdentifier","src":"9162:6:22"}],"functionName":{"name":"mstore","nativeSrc":"9135:6:22","nodeType":"YulIdentifier","src":"9135:6:22"},"nativeSrc":"9135:34:22","nodeType":"YulFunctionCall","src":"9135:34:22"},"nativeSrc":"9135:34:22","nodeType":"YulExpressionStatement","src":"9135:34:22"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nativeSrc":"8901:274:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8991:9:22","nodeType":"YulTypedName","src":"8991:9:22","type":""},{"name":"value1","nativeSrc":"9002:6:22","nodeType":"YulTypedName","src":"9002:6:22","type":""},{"name":"value0","nativeSrc":"9010:6:22","nodeType":"YulTypedName","src":"9010:6:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"9021:4:22","nodeType":"YulTypedName","src":"9021:4:22","type":""}],"src":"8901:274:22"},{"body":{"nativeSrc":"9258:199:22","nodeType":"YulBlock","src":"9258:199:22","statements":[{"body":{"nativeSrc":"9304:16:22","nodeType":"YulBlock","src":"9304:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"9313:1:22","nodeType":"YulLiteral","src":"9313:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"9316:1:22","nodeType":"YulLiteral","src":"9316:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"9306:6:22","nodeType":"YulIdentifier","src":"9306:6:22"},"nativeSrc":"9306:12:22","nodeType":"YulFunctionCall","src":"9306:12:22"},"nativeSrc":"9306:12:22","nodeType":"YulExpressionStatement","src":"9306:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"9279:7:22","nodeType":"YulIdentifier","src":"9279:7:22"},{"name":"headStart","nativeSrc":"9288:9:22","nodeType":"YulIdentifier","src":"9288:9:22"}],"functionName":{"name":"sub","nativeSrc":"9275:3:22","nodeType":"YulIdentifier","src":"9275:3:22"},"nativeSrc":"9275:23:22","nodeType":"YulFunctionCall","src":"9275:23:22"},{"kind":"number","nativeSrc":"9300:2:22","nodeType":"YulLiteral","src":"9300:2:22","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"9271:3:22","nodeType":"YulIdentifier","src":"9271:3:22"},"nativeSrc":"9271:32:22","nodeType":"YulFunctionCall","src":"9271:32:22"},"nativeSrc":"9268:52:22","nodeType":"YulIf","src":"9268:52:22"},{"nativeSrc":"9329:29:22","nodeType":"YulVariableDeclaration","src":"9329:29:22","value":{"arguments":[{"name":"headStart","nativeSrc":"9348:9:22","nodeType":"YulIdentifier","src":"9348:9:22"}],"functionName":{"name":"mload","nativeSrc":"9342:5:22","nodeType":"YulIdentifier","src":"9342:5:22"},"nativeSrc":"9342:16:22","nodeType":"YulFunctionCall","src":"9342:16:22"},"variables":[{"name":"value","nativeSrc":"9333:5:22","nodeType":"YulTypedName","src":"9333:5:22","type":""}]},{"body":{"nativeSrc":"9411:16:22","nodeType":"YulBlock","src":"9411:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"9420:1:22","nodeType":"YulLiteral","src":"9420:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"9423:1:22","nodeType":"YulLiteral","src":"9423:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"9413:6:22","nodeType":"YulIdentifier","src":"9413:6:22"},"nativeSrc":"9413:12:22","nodeType":"YulFunctionCall","src":"9413:12:22"},"nativeSrc":"9413:12:22","nodeType":"YulExpressionStatement","src":"9413:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"9380:5:22","nodeType":"YulIdentifier","src":"9380:5:22"},{"arguments":[{"arguments":[{"name":"value","nativeSrc":"9401:5:22","nodeType":"YulIdentifier","src":"9401:5:22"}],"functionName":{"name":"iszero","nativeSrc":"9394:6:22","nodeType":"YulIdentifier","src":"9394:6:22"},"nativeSrc":"9394:13:22","nodeType":"YulFunctionCall","src":"9394:13:22"}],"functionName":{"name":"iszero","nativeSrc":"9387:6:22","nodeType":"YulIdentifier","src":"9387:6:22"},"nativeSrc":"9387:21:22","nodeType":"YulFunctionCall","src":"9387:21:22"}],"functionName":{"name":"eq","nativeSrc":"9377:2:22","nodeType":"YulIdentifier","src":"9377:2:22"},"nativeSrc":"9377:32:22","nodeType":"YulFunctionCall","src":"9377:32:22"}],"functionName":{"name":"iszero","nativeSrc":"9370:6:22","nodeType":"YulIdentifier","src":"9370:6:22"},"nativeSrc":"9370:40:22","nodeType":"YulFunctionCall","src":"9370:40:22"},"nativeSrc":"9367:60:22","nodeType":"YulIf","src":"9367:60:22"},{"nativeSrc":"9436:15:22","nodeType":"YulAssignment","src":"9436:15:22","value":{"name":"value","nativeSrc":"9446:5:22","nodeType":"YulIdentifier","src":"9446:5:22"},"variableNames":[{"name":"value0","nativeSrc":"9436:6:22","nodeType":"YulIdentifier","src":"9436:6:22"}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nativeSrc":"9180:277:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9224:9:22","nodeType":"YulTypedName","src":"9224:9:22","type":""},{"name":"dataEnd","nativeSrc":"9235:7:22","nodeType":"YulTypedName","src":"9235:7:22","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"9247:6:22","nodeType":"YulTypedName","src":"9247:6:22","type":""}],"src":"9180:277:22"}]},"contents":"{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function allocate_memory(size) -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function array_allocation_size_array_address_dyn(length) -> size\n    {\n        if gt(length, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        size := add(shl(5, length), 0x20)\n    }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_array_uint256_dyn_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := 0x20\n        let dst := allocate_memory(array_allocation_size_array_address_dyn(_1))\n        let dst_1 := dst\n        mstore(dst, _1)\n        dst := add(dst, 0x20)\n        let srcEnd := add(add(offset, shl(5, _1)), 0x20)\n        if gt(srcEnd, end) { revert(0, 0) }\n        let src := add(offset, 0x20)\n        for { } lt(src, srcEnd) { src := add(src, _2) }\n        {\n            mstore(dst, mload(src))\n            dst := add(dst, _2)\n        }\n        array := dst_1\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_uint256t_address_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := mload(_2)\n        let _4 := 0x20\n        let dst := allocate_memory(array_allocation_size_array_address_dyn(_3))\n        let dst_1 := dst\n        mstore(dst, _3)\n        dst := add(dst, _4)\n        let srcEnd := add(add(_2, shl(5, _3)), _4)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_2, _4)\n        for { } lt(src, srcEnd) { src := add(src, _4) }\n        {\n            mstore(dst, abi_decode_address_fromMemory(src))\n            dst := add(dst, _4)\n        }\n        value0 := dst_1\n        let offset_1 := mload(add(headStart, _4))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_array_uint256_dyn_fromMemory(add(headStart, offset_1), dataEnd)\n        value2 := mload(add(headStart, 64))\n        value3 := abi_decode_address_fromMemory(add(headStart, 96))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_0ced64e7a7e72856969cefe00640aa7f13f8db705f9748f7d3003a20bc61daa4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Initialization failed\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_391a75680d8ec99739af126cde56833526e4b720a416f24f1d7ee98c294a45b1__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"Invalid base asset address\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_5cbb8d647918028d0523fccac550113bbbb71d463bbb8b573c02c32bc5cf2b89__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"Invalid weights\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_b3262886d4e83856703b764357b6a852eb26ef34a7982063b49217460e097ddc__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"Invalid rebalancer address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ebb567ad160cf2ebbf5e53ab40a3ffae6f6492169d006ee3f8bad6794e36f372__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"Assets and weights length mismat\")\n        mstore(add(headStart, 96), \"ch\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_795f8eca8a22be2e70f1d9bdebdbf85a1dc43e172c3964e13eac586b45ff2b92__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Invalid asset address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ff1ef73e4333da4da038aba1312a1df349427c8859c23d4b6d4a7df22bfc1a19__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"Invalid weight\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n}","id":22,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040526512309ce54000600c556007600d5567053b1daa2fd98364600e55670493b9f4e9de52f7600f5566016bcc41e90000601055670de0b6b3a764000060115566470de4df820000601255348015610058575f80fd5b5060405161440f38038061440f83398101604081905261007791610810565b60405180604001604052806009815260200168042616c756e69204c560bc1b81525060405180604001604052806009815260200168042414c554e492d4c560bc1b81525081600390816100ca9190610969565b5060046100d78282610969565b5050600160055550600b80546001600160a01b0319166001600160a01b038316179055670de0b6b3a76400006008555f61011185856102d4565b9050806101655760405162461bcd60e51b815260206004820152601560248201527f496e697469616c697a6174696f6e206661696c6564000000000000000000000060448201526064015b60405180910390fd5b6007839055600b5460408051631bf01e9b60e01b815290516001600160a01b0390921691631bf01e9b916004808201926020929091908290030181865afa1580156101b2573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906101d69190610a28565b600980546001600160a01b0319166001600160a01b0392909216918217905564e8d4a51000600a5561024a5760405162461bcd60e51b815260206004820152601a60248201527f496e76616c696420626173652061737365742061646472657373000000000000604482015260640161015c565b5f805b85518110156102855785818151811061026857610268610a48565b60200260200101518261027b9190610a5c565b915060010161024d565b5080612710146102c95760405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964207765696768747360881b604482015260640161015c565b505050505050610ab1565b5f80600b5f9054906101000a90046001600160a01b03166001600160a01b031663cff49d686040518163ffffffff1660e01b8152600401602060405180830381865afa158015610326573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061034a9190610a28565b90505f6001600160a01b0316600b5f9054906101000a90046001600160a01b03166001600160a01b031663cff49d686040518163ffffffff1660e01b8152600401602060405180830381865afa1580156103a6573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103ca9190610a28565b6001600160a01b0316036104205760405162461bcd60e51b815260206004820152601a60248201527f496e76616c696420726562616c616e6365722061646472657373000000000000604482015260640161015c565b825184511461047c5760405162461bcd60e51b815260206004820152602260248201527f41737365747320616e642077656967687473206c656e677468206d69736d61746044820152610c6d60f31b606482015260840161015c565b5f5b8451811015610716575f6001600160a01b03168582815181106104a3576104a3610a48565b60200260200101516001600160a01b0316036105015760405162461bcd60e51b815260206004820152601560248201527f496e76616c696420617373657420616464726573730000000000000000000000604482015260640161015c565b5f84828151811061051457610514610a48565b60200260200101511161055a5760405162461bcd60e51b815260206004820152600e60248201526d125b9d985b1a59081dd95a59da1d60921b604482015260640161015c565b6006604051806060016040528087848151811061057957610579610a48565b60200260200101516001600160a01b031681526020018684815181106105a1576105a1610a48565b60209081029190910181015182525f918101829052835460018082018655948352818320845160039092020180546001600160a01b0319166001600160a01b039092169190911781559083015193810193909355604090910151600290920191909155855186908390811061061857610618610a48565b6020908102919091010151604051636eb1769f60e11b81523060048201526001600160a01b0385811660248301529192509082169063dd62ed3e90604401602060405180830381865afa158015610671573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106959190610a7b565b5f0361070d5760405163095ea7b360e01b81526001600160a01b0384811660048301525f19602483015282169063095ea7b3906044016020604051808303815f875af11580156106e7573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061070b9190610a92565b505b5060010161047e565b5060019150505b92915050565b634e487b7160e01b5f52604160045260245ffd5b604051601f8201601f191681016001600160401b038111828210171561075f5761075f610723565b604052919050565b5f6001600160401b0382111561077f5761077f610723565b5060051b60200190565b80516001600160a01b038116811461079f575f80fd5b919050565b5f82601f8301126107b3575f80fd5b815160206107c86107c383610767565b610737565b8083825260208201915060208460051b8701019350868411156107e9575f80fd5b602086015b8481101561080557805183529183019183016107ee565b509695505050505050565b5f805f8060808587031215610823575f80fd5b84516001600160401b0380821115610839575f80fd5b818701915087601f83011261084c575f80fd5b8151602061085c6107c383610767565b82815260059290921b8401810191818101908b84111561087a575f80fd5b948201945b8386101561089f5761089086610789565b8252948201949082019061087f565b918a01519198509093505050808211156108b7575f80fd5b506108c4878288016107a4565b935050604085015191506108da60608601610789565b905092959194509250565b600181811c908216806108f957607f821691505b60208210810361091757634e487b7160e01b5f52602260045260245ffd5b50919050565b601f82111561096457805f5260205f20601f840160051c810160208510156109425750805b601f840160051c820191505b81811015610961575f815560010161094e565b50505b505050565b81516001600160401b0381111561098257610982610723565b6109968161099084546108e5565b8461091d565b602080601f8311600181146109c9575f84156109b25750858301515b5f19600386901b1c1916600185901b178555610a20565b5f85815260208120601f198616915b828110156109f7578886015182559484019460019091019084016109d8565b5085821015610a1457878501515f19600388901b60f8161c191681555b505060018460011b0185555b505050505050565b5f60208284031215610a38575f80fd5b610a4182610789565b9392505050565b634e487b7160e01b5f52603260045260245ffd5b8082018082111561071d57634e487b7160e01b5f52601160045260245ffd5b5f60208284031215610a8b575f80fd5b5051919050565b5f60208284031215610aa2575f80fd5b81518015158114610a41575f80fd5b61395180610abe5f395ff3fe608060405234801561000f575f80fd5b50600436106101fd575f3560e01c80637b10399911610114578063b2b55d70116100a9578063d14ef46d11610079578063d14ef46d1461042e578063dd62ed3e14610466578063de836ebd1461049e578063e73faa2d146104b1578063f47b45e8146104b9575f80fd5b8063b2b55d70146103ec578063c2ee3a08146103ff578063cdf456e114610408578063cf8fa7641461041b575f80fd5b80638a77c8dc116100e45780638a77c8dc146103b657806395d89b41146103be578063a1f241cc146103c6578063a9059cbb146103d9575f80fd5b80637b103999146103595780637fec8d381461038457806389ab35321461038d57806389afcb44146103a3575f80fd5b806322acb8671161019557806336bf6e391161016557806336bf6e39146102e05780634aa06652146102f657806367e4ac2c146103095780636e81221c1461031e57806370a0823114610331575f80fd5b806322acb867146102a357806323b872dd146102ab578063250aa683146102be578063313ce567146102d1575f80fd5b806312899068116101d0578063128990681461026a57806318160ddd1461028b57806318904ea4146102935780631a6865021461029b575f80fd5b806306fdde03146102015780630723c9991461021f5780630902f1ac1461023f578063095ea7b314610247575b5f80fd5b6102096104cf565b6040516102169190613238565b60405180910390f35b61023261022d366004613284565b61055f565b60405161021691906132d9565b6102326107ab565b61025a6102553660046132eb565b610893565b6040519015158152602001610216565b61027d610278366004613284565b6108ac565b604051908152602001610216565b60025461027d565b61023261092f565b61027d6109ce565b6102326109df565b61025a6102b9366004613315565b610a7e565b61027d6102cc366004613284565b610aa1565b60405160128152602001610216565b6102e8610b1c565b604051610216929190613353565b61027d610304366004613315565b610b30565b610311610cf9565b60405161021691906133a3565b61027d61032c3660046133b5565b610db3565b61027d61033f366004613284565b6001600160a01b03165f9081526020819052604090205490565b600b5461036c906001600160a01b031681565b6040516001600160a01b039091168152602001610216565b61027d60075481565b610395611040565b604051610216929190613405565b6102326103b1366004613284565b6111f9565b61025a611765565b6102096117df565b61027d6103d4366004613315565b6117ee565b61025a6103e73660046132eb565b611909565b61027d6103fa366004613284565b611916565b61027d60085481565b60095461036c906001600160a01b031681565b61027d610429366004613454565b611a05565b61044161043c366004613454565b611a7a565b604080516001600160a01b039094168452602084019290925290820152606001610216565b61027d61047436600461346b565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b61027d6104ac366004613508565b611ab5565b61027d611e4d565b6104c1611f35565b6040516102169291906135ad565b6060600380546104de906135d1565b80601f016020809104026020016040519081016040528092919081815260200182805461050a906135d1565b80156105555780601f1061052c57610100808354040283529160200191610555565b820191905f5260205f20905b81548152906001019060200180831161053857829003601f168201915b5050505050905090565b60605f600b5f9054906101000a90046001600160a01b03166001600160a01b0316631acb61416040518163ffffffff1660e01b8152600401602060405180830381865afa1580156105b2573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906105d69190613603565b9050336001600160a01b038216146106095760405162461bcd60e51b81526004016106009061361e565b60405180910390fd5b610611611765565b6106545760405162461bcd60e51b8152602060048201526014602482015273149958985b185b98d9481b9bdd081b995959195960621b6044820152606401610600565b5f8061065e612033565b915091505f61066d8383612162565b90505f61067982612263565b9050600a5481610689919061365a565b6006549091505f906001600160401b038111156106a8576106a86134a2565b6040519080825280602002602001820160405280156106d1578160200160208202803683370190505b5090505f5b835181101561074a575f8482815181106106f2576106f2613671565b60200260200101511115610742576107238185838151811061071657610716613671565b602002602001015161229f565b82828151811061073557610735613671565b6020026020010181815250505b6001016106d6565b50610755888361236f565b61075d6123a7565b336001600160a01b03167fa95ad530009c6f929555e70a66aadbeae7231e45756c5b028ca77fbaa376e73e8460405161079691906132d9565b60405180910390a29550505050505b50919050565b60605f600b5f9054906101000a90046001600160a01b03166001600160a01b0316631acb61416040518163ffffffff1660e01b8152600401602060405180830381865afa1580156107fe573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108229190613603565b604051630fa6707960e21b81523060048201529091506001600160a01b03821690633e99c1e4906024015f60405180830381865afa158015610866573d5f803e3d5ffd5b505050506040513d5f823e601f3d908101601f1916820160405261088d9190810190613685565b91505090565b5f336108a081858561260a565b60019150505b92915050565b5f805b60065481101561092757826001600160a01b0316600682815481106108d6576108d6613671565b5f9182526020909120600390910201546001600160a01b03160361091f576006818154811061090757610907613671565b905f5260205f20906003020160020154915050919050565b6001016108af565b505f92915050565b6006546060905f906001600160401b0381111561094e5761094e6134a2565b604051908082528060200260200182016040528015610977578160200160208202803683370190505b5090505f5b6006548110156107a5576006818154811061099957610999613671565b905f5260205f209060030201600201548282815181106109bb576109bb613671565b602090810291909101015260010161097c565b5f806109d8612033565b5092915050565b6006546060905f906001600160401b038111156109fe576109fe6134a2565b604051908082528060200260200182016040528015610a27578160200160208202803683370190505b5090505f5b6006548110156107a55760068181548110610a4957610a49613671565b905f5260205f20906003020160010154828281518110610a6b57610a6b613671565b6020908102919091010152600101610a2c565b5f33610a8b858285612617565b610a96858585612692565b506001949350505050565b5f805b60065481101561092757826001600160a01b031660068281548110610acb57610acb613671565b5f9182526020909120600390910201546001600160a01b031603610b145760068181548110610afc57610afc613671565b905f5260205f20906003020160010154915050919050565b600101610aa4565b5f6060610b27612033565b90939092509050565b5f80600b5f9054906101000a90046001600160a01b03166001600160a01b031663bb3ba04c6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b82573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610ba69190613603565b90505f6001600160a01b0316600b5f9054906101000a90046001600160a01b03166001600160a01b031663bb3ba04c6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610c02573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610c269190613603565b6001600160a01b031603610c755760405162461bcd60e51b8152602060048201526016602482015275496e76616c6964206f7261636c65206164647265737360501b6044820152606401610600565b60405163248391ff60e01b81526001600160a01b0386811660048301528581166024830152604482018590525f919083169063248391ff90606401602060405180830381865afa158015610ccb573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610cef9190613710565b9695505050505050565b6006546060905f906001600160401b03811115610d1857610d186134a2565b604051908082528060200260200182016040528015610d41578160200160208202803683370190505b5090505f5b6006548110156107a55760068181548110610d6357610d63613671565b5f91825260209091206003909102015482516001600160a01b0390911690839083908110610d9357610d93613671565b6001600160a01b0390921660209283029190910190910152600101610d46565b5f610dbc6126ef565b600b54604080516385462d6f60e01b815290515f926001600160a01b0316916385462d6f9160048083019260209291908290030181865afa158015610e03573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610e279190613710565b9050846001600160a01b0316866001600160a01b031603610e8a5760405162461bcd60e51b815260206004820152601a60248201527f43616e6e6f742073776170207468652073616d6520746f6b656e0000000000006044820152606401610600565b5f8411610ed95760405162461bcd60e51b815260206004820181905260248201527f416d6f756e74206d7573742062652067726561746572207468616e207a65726f6044820152606401610600565b610ee16123a7565b5f610eed8787876117ee565b905080610ef987611916565b1015610f405760405162461bcd60e51b8152602060048201526016602482015275496e73756666696369656e74204c697175696469747960501b6044820152606401610600565b5f612710610f4e848461365a565b610f58919061373b565b9050610f64818361374e565b93505f8411610fc35760405162461bcd60e51b815260206004820152602560248201527f416d6f756e7420746f2073656e64206d75737420626520677265617465722074604482015264068616e20360dc1b6064820152608401610600565b610fcb6123a7565b866001600160a01b0316886001600160a01b0316866001600160a01b03167fcd3829a3813dc3cdd188fd3d01dcf3268c16be2fdd2dd21d0665418816e460628988604051611023929190918252602082015260400190565b60405180910390a45050506110386001600555565b949350505050565b6060805f8061104d612033565b6006549193509150806001600160401b0381111561106d5761106d6134a2565b604051908082528060200260200182016040528015611096578160200160208202803683370190505b509450806001600160401b038111156110b1576110b16134a2565b6040519080825280602002602001820160405280156110da578160200160208202803683370190505b5093505f5b818110156111f1575f848483815181106110fb576110fb613671565b6020026020010151612710611110919061365a565b61111a919061373b565b90505f6006838154811061113057611130613671565b905f5260205f2090600302016001015490508082111561119b57611154818361374e565b87848151811061116657611166613671565b602002602001018181525050600188848151811061118657611186613671565b911515602092830291909101909101526111e7565b6111a5828261374e565b8784815181106111b7576111b7613671565b6020026020010181815250505f8884815181106111d6576111d6613671565b911515602092830291909101909101525b50506001016110df565b505050509091565b60605f600b5f9054906101000a90046001600160a01b03166001600160a01b0316631acb61416040518163ffffffff1660e01b8152600401602060405180830381865afa15801561124c573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906112709190613603565b9050336001600160a01b0382161461129a5760405162461bcd60e51b81526004016106009061361e565b600b54604080516385462d6f60e01b815290515f926001600160a01b0316916385462d6f9160048083019260209291908290030181865afa1580156112e1573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906113059190613710565b90505f600b5f9054906101000a90046001600160a01b03166001600160a01b0316631acb61416040518163ffffffff1660e01b8152600401602060405180830381865afa158015611358573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061137c9190613603565b305f90815260208190526040902054909150806113db5760405162461bcd60e51b815260206004820152601c60248201527f5368617265206d7573742062652067726561746572207468616e2030000000006044820152606401610600565b5f6113e560025490565b90505f81116114255760405162461bcd60e51b815260206004820152600c60248201526b4e6f206c697175696469747960a01b6044820152606401610600565b6006545f906001600160401b03811115611441576114416134a2565b60405190808252806020026020018201604052801561146a578160200160208202803683370190505b5090505f61271061147b878661365a565b611485919061373b565b90505f611492828661374e565b90505f5b60065481101561157e575f876001600160a01b031663a3e113fb30600685815481106114c4576114c4613671565b5f91825260209091206003909102015460405160e084901b6001600160e01b03191681526001600160a01b03928316600482015291166024820152604401602060405180830381865afa15801561151d573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906115419190613710565b90508561154e848361365a565b611558919061373b565b85838151811061156a5761156a613671565b602090810291909101015250600101611496565b50305f908152602081905260409020548111156115dd5760405162461bcd60e51b815260206004820152601d60248201527f496e73756666696369656e742042414c554e49206c69717569646974790000006044820152606401610600565b600b5460408051631d8cf42560e11b815290515f926001600160a01b031691633b19e84a9160048083019260209291908290030181865afa158015611624573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906116489190613603565b60405163a9059cbb60e01b81526001600160a01b0382166004820152602481018590529091505f90309063a9059cbb906044016020604051808303815f875af1158015611697573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906116bb9190613761565b9050806117005760405162461bcd60e51b8152602060048201526013602482015272119959481d1c985b9cd9995c8819985a5b1959606a1b6044820152606401610600565b61170a3084612719565b6117126123a7565b8b6001600160a01b03167fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca58460405161174d91815260200190565b60405180910390a250929a9950505050505050505050565b5f805f611770611040565b915091505f5b81518110156117d65782818151811061179157611791613671565b602002602001015180156117bf57506007548282815181106117b5576117b5613671565b6020026020010151115b156117ce576001935050505090565b600101611776565b505f9250505090565b6060600480546104de906135d1565b5f806117fb858585610b30565b905083855f606061180a612033565b90925090505f6127108361181d87610aa1565b611827919061365a565b611831919061373b565b90505f6127108461184188610aa1565b61184b919061365a565b611855919061373b565b90505f8990505f611874600c54600d54600e54600f548888885f61274d565b90505f612710876118848a610aa1565b61188e919061365a565b611898919061373b565b90505f612710886118a88b610aa1565b6118b2919061365a565b6118bc919061373b565b90505f6118d8600c54600d54600e54600f5487878b600161274d565b90505f6118e5828661280c565b90505f6118f2878361282a565b9e5050505050505050505050505050509392505050565b5f336108a0818585612692565b5f80600b5f9054906101000a90046001600160a01b03166001600160a01b0316631acb61416040518163ffffffff1660e01b8152600401602060405180830381865afa158015611968573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061198c9190613603565b60405163a3e113fb60e01b81523060048201526001600160a01b0385811660248301529192509082169063a3e113fb90604401602060405180830381865afa1580156119da573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906119fe9190613710565b9392505050565b5f80611a0f612033565b91505080518310611a585760405162461bcd60e51b8152602060048201526013602482015272092dcecc2d8d2c840c2e6e6cae840d2dcc8caf606b1b6044820152606401610600565b808381518110611a6a57611a6a613671565b6020026020010151915050919050565b60068181548110611a89575f80fd5b5f9182526020909120600390910201805460018201546002909201546001600160a01b03909116925083565b5f80600b5f9054906101000a90046001600160a01b03166001600160a01b0316631acb61416040518163ffffffff1660e01b8152600401602060405180830381865afa158015611b07573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611b2b9190613603565b9050336001600160a01b03821614611b555760405162461bcd60e51b81526004016106009061361e565b5f611b5f60025490565b90505f80611b6b6107ab565b805160065491925014611bc05760405162461bcd60e51b815260206004820152601760248201527f496e76616c6964207265736572766573206c656e6774680000000000000000006044820152606401610600565b600654611bfb5760405162461bcd60e51b81526020600482015260096024820152684e6f2061737365747360b81b6044820152606401610600565b5f5b600654811015611c99575f60068281548110611c1b57611c1b613671565b5f91825260208220600390910201546009546001600160a01b039182169350168203611c5d57888381518110611c5357611c53613671565b50611c9192505050565b611c80828a8581518110611c7357611c73613671565b602002602001015161285d565b9050611c8c8186613780565b945050505b600101611bfd565b505f8211611cf45760405162461bcd60e51b815260206004820152602260248201527f546f74616c2076616c7565206d7573742062652067726561746572207468616e604482015261020360f41b6064820152608401610600565b5f835f03611d1057600a54611d09908461365a565b9050611dae565b5f611d19612033565b5090505f8111611d7a5760405162461bcd60e51b815260206004820152602660248201527f546f74616c206c6971756964697479206d75737420626520677265617465722060448201526507468616e20360d41b6064820152608401610600565b600a54611d87908261365a565b85600a5486611d96919061365a565b611da0919061365a565b611daa919061373b565b9150505b805f03611ded5760405162461bcd60e51b815260206004820152600d60248201526c04d696e7420717479206973203609c1b6044820152606401610600565b611df7888261236f565b611dff6123a7565b876001600160a01b03167f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d412139688582604051611e3a91815260200190565b60405180910390a2979650505050505050565b5f8060095f9054906101000a90046001600160a01b03166001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015611e9f573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611ec39190613793565b60ff1690505f611ed482601261374e565b611edf90600a613893565b90505f611eea612033565b5090505f611ef760025490565b9050805f03611f0a575f94505050505090565b60085481611f18858561365a565b611f22919061373b565b611f2c919061365a565b94505050505090565b6060805f600b5f9054906101000a90046001600160a01b03166001600160a01b0316631acb61416040518163ffffffff1660e01b8152600401602060405180830381865afa158015611f89573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611fad9190613603565b9050336001600160a01b03821614611fd75760405162461bcd60e51b81526004016106009061361e565b611fdf611765565b6120225760405162461bcd60e51b8152602060048201526014602482015273149958985b185b98d9481b9bdd081b995959195960621b6044820152606401610600565b61202a612877565b92509250509091565b6006545f90606090806001600160401b03811115612053576120536134a2565b60405190808252806020026020018201604052801561207c578160200160208202803683370190505b5091505f5b8181101561215c575f6006828154811061209d5761209d613671565b5f91825260208220600390910201546001600160a01b031691506120c082611916565b6009549091506001600160a01b03908116908316036120fd57808584815181106120ec576120ec613671565b60200260200101818152505061212b565b5f612108838361285d565b90508086858151811061211d5761211d613671565b602002602001018181525050505b84838151811061213d5761213d613671565b6020026020010151866121509190613780565b95505050600101612081565b50509091565b6006546060906001600160401b0381111561217f5761217f6134a2565b6040519080825280602002602001820160405280156121a8578160200160208202803683370190505b5090505f5b6006548110156109d8575f612710600683815481106121ce576121ce613671565b905f5260205f20906003020160010154866121e9919061365a565b6121f3919061373b565b90508084838151811061220857612208613671565b6020026020010151101561225a5783828151811061222857612228613671565b60200260200101518161223b919061374e565b83838151811061224d5761224d613671565b6020026020010181815250505b506001016121ad565b5f805b6006548110156107a55782818151811061228257612282613671565b6020026020010151826122959190613780565b9150600101612266565b600954600680545f926001600160a01b03169190859081106122c3576122c3613671565b5f9182526020909120600390910201546001600160a01b0316036122e85750806108a6565b5f61231e600685815481106122ff576122ff613671565b5f9182526020909120600390910201546001600160a01b031684612f02565b90505f81116119fe5760405162461bcd60e51b815260206004820152601b60248201527f496e76616c696420746f6b656e20616d6f756e7420746f2061646400000000006044820152606401610600565b6001600160a01b0382166123985760405163ec442f0560e01b81525f6004820152602401610600565b6123a35f8383612f1b565b5050565b5f806123b1611040565b915091505f5b600654811015612605575f600682815481106123d5576123d5613671565b905f5260205f2090600302016002015490508382815181106123f9576123f9613671565b6020026020010151156124ce5782828151811061241857612418613671565b60200260200101516006838154811061243357612433613671565b905f5260205f2090600302016002015f8282546124509190613780565b92505081905550806006838154811061246b5761246b613671565b905f5260205f2090600302016002015410156124c95760405162461bcd60e51b815260206004820152601e60248201527f4f766572666c6f7720696e6372656d656e74696e6720736c69707061676500006044820152606401610600565b6125fc565b8282815181106124e0576124e0613671565b6020026020010151600683815481106124fb576124fb613671565b905f5260205f2090600302016002015411156125d45782828151811061252357612523613671565b60200260200101516006838154811061253e5761253e613671565b905f5260205f2090600302016002015f82825461255b919061374e565b92505081905550806006838154811061257657612576613671565b905f5260205f2090600302016002015411156124c95760405162461bcd60e51b815260206004820152601f60248201527f556e646572666c6f772064656372656d656e74696e6720736c697070616765006044820152606401610600565b5f600683815481106125e8576125e8613671565b905f5260205f209060030201600201819055505b506001016123b7565b505050565b6126058383836001613041565b6001600160a01b038381165f908152600160209081526040808320938616835292905220545f19811461268c578181101561267e57604051637dc7a0d960e11b81526001600160a01b03841660048201526024810182905260448101839052606401610600565b61268c84848484035f613041565b50505050565b6001600160a01b0383166126bb57604051634b637e8f60e11b81525f6004820152602401610600565b6001600160a01b0382166126e45760405163ec442f0560e01b81525f6004820152602401610600565b612605838383612f1b565b60026005540361271257604051633ee5aeb560e01b815260040160405180910390fd5b6002600555565b6001600160a01b03821661274257604051634b637e8f60e11b81525f6004820152602401610600565b6123a3825f83612f1b565b5f806127598686613113565b90505f831561277d5761277686612770878a613780565b90613113565b905061278e565b61278b86612770878a61374e565b90505b80820361279f575f92505050612800565b5f6127ad8c8c8c8c87613132565b90505f6127bd8d8d8d8d87613132565b9050828411156127e9576127de6127d4848661374e565b612770848461374e565b945050505050612800565b6127de6127f6858561374e565b612770838561374e565b98975050505050505050565b5f8161282084670de0b6b3a7640000613780565b6119fe919061374e565b5f670de0b6b3a764000061283f60028261373b565b612849848661365a565b6128539190613780565b6119fe919061373b565b6009545f906119fe9084906001600160a01b031684610b30565b6060805f600b5f9054906101000a90046001600160a01b03166001600160a01b0316631acb61416040518163ffffffff1660e01b8152600401602060405180830381865afa1580156128cb573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906128ef9190613603565b90505f600b5f9054906101000a90046001600160a01b03166001600160a01b031663cff49d686040518163ffffffff1660e01b8152600401602060405180830381865afa158015612942573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906129669190613603565b6006549091505f906001600160401b03811115612985576129856134a2565b6040519080825280602002602001820160405280156129ae578160200160208202803683370190505b506006549091505f906001600160401b038111156129ce576129ce6134a2565b6040519080825280602002602001820160405280156129f7578160200160208202803683370190505b506006549091505f906001600160401b03811115612a1757612a176134a2565b604051908082528060200260200182016040528015612a40578160200160208202803683370190505b506006549091505f906001600160401b03811115612a6057612a606134a2565b604051908082528060200260200182016040528015612a89578160200160208202803683370190505b506006549091505f906001600160401b03811115612aa957612aa96134a2565b604051908082528060200260200182016040528015612ad2578160200160208202803683370190505b506006549091505f906001600160401b03811115612af257612af26134a2565b604051908082528060200260200182016040528015612b1b578160200160208202803683370190505b5090505f5b600654811015612c795760068181548110612b3d57612b3d613671565b5f91825260209091206003909102015487516001600160a01b0390911690889083908110612b6d57612b6d613671565b60200260200101906001600160a01b031690816001600160a01b03168152505060068181548110612ba057612ba0613671565b905f5260205f20906003020160010154868281518110612bc257612bc2613671565b602002602001018181525050868181518110612be057612be0613671565b60209081029190910101516040516370a0823160e01b81526001600160a01b038b81166004830152909116906370a0823190602401602060405180830381865afa158015612c30573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190612c549190613710565b858281518110612c6657612c66613671565b6020908102919091010152600101612b20565b505f612c836107ab565b9050876001600160a01b031663f0bf77148289896007548e8f60095f9054906101000a90046001600160a01b03166040518863ffffffff1660e01b8152600401612cd3979695949392919061389e565b5f604051808303815f87803b158015612cea575f80fd5b505af1158015612cfc573d5f803e3d5ffd5b505050505f5b600654811015612eb057878181518110612d1e57612d1e613671565b60209081029190910101516040516370a0823160e01b81526001600160a01b038c81166004830152909116906370a0823190602401602060405180830381865afa158015612d6e573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190612d929190613710565b858281518110612da457612da4613671565b602002602001018181525050858181518110612dc257612dc2613671565b6020026020010151858281518110612ddc57612ddc613671565b60200260200101511115612e4b57858181518110612dfc57612dfc613671565b6020026020010151858281518110612e1657612e16613671565b6020026020010151612e28919061374e565b848281518110612e3a57612e3a613671565b602002602001018181525050612ea8565b848181518110612e5d57612e5d613671565b6020026020010151868281518110612e7757612e77613671565b6020026020010151612e89919061374e565b838281518110612e9b57612e9b613671565b6020026020010181815250505b600101612d02565b50336001600160a01b03167f279b343370f587af7fb675ae7c8578e9c8abcc373236ad02c501a4771fe7a7b888604051612eea91906133a3565b60405180910390a25090999098509650505050505050565b6009545f906119fe906001600160a01b03168484610b30565b6001600160a01b038316612f45578060025f828254612f3a9190613780565b90915550612fb59050565b6001600160a01b0383165f9081526020819052604090205481811015612f975760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401610600565b6001600160a01b0384165f9081526020819052604090209082900390555b6001600160a01b038216612fd157600280548290039055612fef565b6001600160a01b0382165f9081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161303491815260200190565b60405180910390a3505050565b6001600160a01b03841661306a5760405163e602df0560e01b81525f6004820152602401610600565b6001600160a01b03831661309357604051634a1406b160e11b81525f6004820152602401610600565b6001600160a01b038085165f908152600160209081526040808320938716835292905220829055801561268c57826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161310591815260200190565b60405180910390a350505050565b5f8161312060028261373b565b612849670de0b6b3a76400008661365a565b5f8282101561314c57613145828561374e565b905061319f565b6131456b033b2e3c9fd0803ce8000000670de0b6b3a76400006131848882613174858961365a565b61317e919061373b565b906131a8565b61318e919061365a565b613198919061373b565b8790613113565b95945050505050565b5f6131b4600283613908565b5f036131cc576b033b2e3c9fd0803ce80000006131ce565b825b90506131db60028361373b565b91505b81156108a6576131ee838461321f565b92506131fb600283613908565b1561320d5761320a818461321f565b90505b61321860028361373b565b91506131de565b5f6b033b2e3c9fd0803ce800000061283f60028261373b565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b6001600160a01b0381168114613281575f80fd5b50565b5f60208284031215613294575f80fd5b81356119fe8161326d565b5f815180845260208085019450602084015f5b838110156132ce578151875295820195908201906001016132b2565b509495945050505050565b602081525f6119fe602083018461329f565b5f80604083850312156132fc575f80fd5b82356133078161326d565b946020939093013593505050565b5f805f60608486031215613327575f80fd5b83356133328161326d565b925060208401356133428161326d565b929592945050506040919091013590565b828152604060208201525f611038604083018461329f565b5f815180845260208085019450602084015f5b838110156132ce5781516001600160a01b03168752958201959082019060010161337e565b602081525f6119fe602083018461336b565b5f805f80608085870312156133c8575f80fd5b84356133d38161326d565b935060208501356133e38161326d565b92506040850135915060608501356133fa8161326d565b939692955090935050565b604080825283519082018190525f906020906060840190828701845b8281101561343f578151151584529284019290840190600101613421565b5050508381036020850152610cef818661329f565b5f60208284031215613464575f80fd5b5035919050565b5f806040838503121561347c575f80fd5b82356134878161326d565b915060208301356134978161326d565b809150509250929050565b634e487b7160e01b5f52604160045260245ffd5b604051601f8201601f191681016001600160401b03811182821017156134de576134de6134a2565b604052919050565b5f6001600160401b038211156134fe576134fe6134a2565b5060051b60200190565b5f8060408385031215613519575f80fd5b82356135248161326d565b91506020838101356001600160401b0381111561353f575f80fd5b8401601f8101861361354f575f80fd5b803561356261355d826134e6565b6134b6565b81815260059190911b82018301908381019088831115613580575f80fd5b928401925b8284101561359e57833582529284019290840190613585565b80955050505050509250929050565b604081525f6135bf604083018561329f565b828103602084015261319f818561329f565b600181811c908216806135e557607f821691505b6020821081036107a557634e487b7160e01b5f52602260045260245ffd5b5f60208284031215613613575f80fd5b81516119fe8161326d565b6020808252600e908201526d4f6e6c792050657269706865727960901b604082015260600190565b634e487b7160e01b5f52601160045260245ffd5b80820281158282048414176108a6576108a6613646565b634e487b7160e01b5f52603260045260245ffd5b5f6020808385031215613696575f80fd5b82516001600160401b038111156136ab575f80fd5b8301601f810185136136bb575f80fd5b80516136c961355d826134e6565b81815260059190911b820183019083810190878311156136e7575f80fd5b928401925b82841015613705578351825292840192908401906136ec565b979650505050505050565b5f60208284031215613720575f80fd5b5051919050565b634e487b7160e01b5f52601260045260245ffd5b5f8261374957613749613727565b500490565b818103818111156108a6576108a6613646565b5f60208284031215613771575f80fd5b815180151581146119fe575f80fd5b808201808211156108a6576108a6613646565b5f602082840312156137a3575f80fd5b815160ff811681146119fe575f80fd5b600181815b808511156137ed57815f19048211156137d3576137d3613646565b808516156137e057918102915b93841c93908002906137b8565b509250929050565b5f82613803575060016108a6565b8161380f57505f6108a6565b8160018114613825576002811461382f5761384b565b60019150506108a6565b60ff84111561384057613840613646565b50506001821b6108a6565b5060208310610133831016604e8410600b841016171561386e575081810a6108a6565b61387883836137b3565b805f190482111561388b5761388b613646565b029392505050565b5f6119fe83836137f5565b60e081525f6138b060e083018a61329f565b82810360208401526138c2818a61336b565b905082810360408401526138d6818961329f565b606084019790975250506001600160a01b03938416608082015291831660a083015290911660c0909101529392505050565b5f8261391657613916613727565b50069056fea26469706673582212201ccd53b54c134b34e4ebd8d2ff63d2d5f0ce5f0a9f6fe046ebff11ffa5e6b42f64736f6c63430008190033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH6 0x12309CE54000 PUSH1 0xC SSTORE PUSH1 0x7 PUSH1 0xD SSTORE PUSH8 0x53B1DAA2FD98364 PUSH1 0xE SSTORE PUSH8 0x493B9F4E9DE52F7 PUSH1 0xF SSTORE PUSH7 0x16BCC41E90000 PUSH1 0x10 SSTORE PUSH8 0xDE0B6B3A7640000 PUSH1 0x11 SSTORE PUSH7 0x470DE4DF820000 PUSH1 0x12 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x58 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x440F CODESIZE SUB DUP1 PUSH2 0x440F DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x77 SWAP2 PUSH2 0x810 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD PUSH9 0x42616C756E69204C5 PUSH1 0xBC SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD PUSH9 0x42414C554E492D4C5 PUSH1 0xBC SHL DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0xCA SWAP2 SWAP1 PUSH2 0x969 JUMP JUMPDEST POP PUSH1 0x4 PUSH2 0xD7 DUP3 DUP3 PUSH2 0x969 JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0x5 SSTORE POP PUSH1 0xB DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND OR SWAP1 SSTORE PUSH8 0xDE0B6B3A7640000 PUSH1 0x8 SSTORE PUSH0 PUSH2 0x111 DUP6 DUP6 PUSH2 0x2D4 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x165 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A6174696F6E206661696C65640000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 DUP4 SWAP1 SSTORE PUSH1 0xB SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x1BF01E9B PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x1BF01E9B SWAP2 PUSH1 0x4 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1B2 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1D6 SWAP2 SWAP1 PUSH2 0xA28 JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 DUP3 OR SWAP1 SSTORE PUSH5 0xE8D4A51000 PUSH1 0xA SSTORE PUSH2 0x24A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420626173652061737365742061646472657373000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x15C JUMP JUMPDEST PUSH0 DUP1 JUMPDEST DUP6 MLOAD DUP2 LT ISZERO PUSH2 0x285 JUMPI DUP6 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x268 JUMPI PUSH2 0x268 PUSH2 0xA48 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP3 PUSH2 0x27B SWAP2 SWAP1 PUSH2 0xA5C JUMP JUMPDEST SWAP2 POP PUSH1 0x1 ADD PUSH2 0x24D JUMP JUMPDEST POP DUP1 PUSH2 0x2710 EQ PUSH2 0x2C9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x496E76616C69642077656967687473 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x15C JUMP JUMPDEST POP POP POP POP POP POP PUSH2 0xAB1 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xCFF49D68 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x326 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x34A SWAP2 SWAP1 PUSH2 0xA28 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xCFF49D68 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3A6 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3CA SWAP2 SWAP1 PUSH2 0xA28 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x420 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420726562616C616E6365722061646472657373000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x15C JUMP JUMPDEST DUP3 MLOAD DUP5 MLOAD EQ PUSH2 0x47C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41737365747320616E642077656967687473206C656E677468206D69736D6174 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0xC6D PUSH1 0xF3 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x15C JUMP JUMPDEST PUSH0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x716 JUMPI PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x4A3 JUMPI PUSH2 0x4A3 PUSH2 0xA48 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x501 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420617373657420616464726573730000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x15C JUMP JUMPDEST PUSH0 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x514 JUMPI PUSH2 0x514 PUSH2 0xA48 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD GT PUSH2 0x55A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x125B9D985B1A59081DD95A59DA1D PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x15C JUMP JUMPDEST PUSH1 0x6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP8 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x579 JUMPI PUSH2 0x579 PUSH2 0xA48 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x5A1 JUMPI PUSH2 0x5A1 PUSH2 0xA48 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD DUP3 MSTORE PUSH0 SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE DUP4 SLOAD PUSH1 0x1 DUP1 DUP3 ADD DUP7 SSTORE SWAP5 DUP4 MSTORE DUP2 DUP4 KECCAK256 DUP5 MLOAD PUSH1 0x3 SWAP1 SWAP3 MUL ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR DUP2 SSTORE SWAP1 DUP4 ADD MLOAD SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x40 SWAP1 SWAP2 ADD MLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 SSTORE DUP6 MLOAD DUP7 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x618 JUMPI PUSH2 0x618 PUSH2 0xA48 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE SWAP2 SWAP3 POP SWAP1 DUP3 AND SWAP1 PUSH4 0xDD62ED3E SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x671 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x695 SWAP2 SWAP1 PUSH2 0xA7B JUMP JUMPDEST PUSH0 SUB PUSH2 0x70D JUMPI PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH0 NOT PUSH1 0x24 DUP4 ADD MSTORE DUP3 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6E7 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x70B SWAP2 SWAP1 PUSH2 0xA92 JUMP JUMPDEST POP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x47E JUMP JUMPDEST POP PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x75F JUMPI PUSH2 0x75F PUSH2 0x723 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0x77F JUMPI PUSH2 0x77F PUSH2 0x723 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x79F JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x7B3 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x20 PUSH2 0x7C8 PUSH2 0x7C3 DUP4 PUSH2 0x767 JUMP JUMPDEST PUSH2 0x737 JUMP JUMPDEST DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP5 PUSH1 0x5 SHL DUP8 ADD ADD SWAP4 POP DUP7 DUP5 GT ISZERO PUSH2 0x7E9 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x805 JUMPI DUP1 MLOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x7EE JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x823 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP5 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x839 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x84C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x20 PUSH2 0x85C PUSH2 0x7C3 DUP4 PUSH2 0x767 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP12 DUP5 GT ISZERO PUSH2 0x87A JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP5 DUP3 ADD SWAP5 JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0x89F JUMPI PUSH2 0x890 DUP7 PUSH2 0x789 JUMP JUMPDEST DUP3 MSTORE SWAP5 DUP3 ADD SWAP5 SWAP1 DUP3 ADD SWAP1 PUSH2 0x87F JUMP JUMPDEST SWAP2 DUP11 ADD MLOAD SWAP2 SWAP9 POP SWAP1 SWAP4 POP POP POP DUP1 DUP3 GT ISZERO PUSH2 0x8B7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x8C4 DUP8 DUP3 DUP9 ADD PUSH2 0x7A4 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD MLOAD SWAP2 POP PUSH2 0x8DA PUSH1 0x60 DUP7 ADD PUSH2 0x789 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x8F9 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x917 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x964 JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x942 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x961 JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x94E JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x982 JUMPI PUSH2 0x982 PUSH2 0x723 JUMP JUMPDEST PUSH2 0x996 DUP2 PUSH2 0x990 DUP5 SLOAD PUSH2 0x8E5 JUMP JUMPDEST DUP5 PUSH2 0x91D JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x9C9 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x9B2 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0xA20 JUMP JUMPDEST PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x9F7 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x9D8 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0xA14 JUMPI DUP8 DUP6 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP PUSH1 0x1 DUP5 PUSH1 0x1 SHL ADD DUP6 SSTORE JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA38 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xA41 DUP3 PUSH2 0x789 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x71D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA8B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAA2 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xA41 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x3951 DUP1 PUSH2 0xABE PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1FD JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7B103999 GT PUSH2 0x114 JUMPI DUP1 PUSH4 0xB2B55D70 GT PUSH2 0xA9 JUMPI DUP1 PUSH4 0xD14EF46D GT PUSH2 0x79 JUMPI DUP1 PUSH4 0xD14EF46D EQ PUSH2 0x42E JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x466 JUMPI DUP1 PUSH4 0xDE836EBD EQ PUSH2 0x49E JUMPI DUP1 PUSH4 0xE73FAA2D EQ PUSH2 0x4B1 JUMPI DUP1 PUSH4 0xF47B45E8 EQ PUSH2 0x4B9 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xB2B55D70 EQ PUSH2 0x3EC JUMPI DUP1 PUSH4 0xC2EE3A08 EQ PUSH2 0x3FF JUMPI DUP1 PUSH4 0xCDF456E1 EQ PUSH2 0x408 JUMPI DUP1 PUSH4 0xCF8FA764 EQ PUSH2 0x41B JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8A77C8DC GT PUSH2 0xE4 JUMPI DUP1 PUSH4 0x8A77C8DC EQ PUSH2 0x3B6 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x3BE JUMPI DUP1 PUSH4 0xA1F241CC EQ PUSH2 0x3C6 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x3D9 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7B103999 EQ PUSH2 0x359 JUMPI DUP1 PUSH4 0x7FEC8D38 EQ PUSH2 0x384 JUMPI DUP1 PUSH4 0x89AB3532 EQ PUSH2 0x38D JUMPI DUP1 PUSH4 0x89AFCB44 EQ PUSH2 0x3A3 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x22ACB867 GT PUSH2 0x195 JUMPI DUP1 PUSH4 0x36BF6E39 GT PUSH2 0x165 JUMPI DUP1 PUSH4 0x36BF6E39 EQ PUSH2 0x2E0 JUMPI DUP1 PUSH4 0x4AA06652 EQ PUSH2 0x2F6 JUMPI DUP1 PUSH4 0x67E4AC2C EQ PUSH2 0x309 JUMPI DUP1 PUSH4 0x6E81221C EQ PUSH2 0x31E JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x331 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x22ACB867 EQ PUSH2 0x2A3 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2AB JUMPI DUP1 PUSH4 0x250AA683 EQ PUSH2 0x2BE JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2D1 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x12899068 GT PUSH2 0x1D0 JUMPI DUP1 PUSH4 0x12899068 EQ PUSH2 0x26A JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x28B JUMPI DUP1 PUSH4 0x18904EA4 EQ PUSH2 0x293 JUMPI DUP1 PUSH4 0x1A686502 EQ PUSH2 0x29B JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x201 JUMPI DUP1 PUSH4 0x723C999 EQ PUSH2 0x21F JUMPI DUP1 PUSH4 0x902F1AC EQ PUSH2 0x23F JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x247 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x209 PUSH2 0x4CF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x216 SWAP2 SWAP1 PUSH2 0x3238 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x232 PUSH2 0x22D CALLDATASIZE PUSH1 0x4 PUSH2 0x3284 JUMP JUMPDEST PUSH2 0x55F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x216 SWAP2 SWAP1 PUSH2 0x32D9 JUMP JUMPDEST PUSH2 0x232 PUSH2 0x7AB JUMP JUMPDEST PUSH2 0x25A PUSH2 0x255 CALLDATASIZE PUSH1 0x4 PUSH2 0x32EB JUMP JUMPDEST PUSH2 0x893 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x216 JUMP JUMPDEST PUSH2 0x27D PUSH2 0x278 CALLDATASIZE PUSH1 0x4 PUSH2 0x3284 JUMP JUMPDEST PUSH2 0x8AC JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x216 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x27D JUMP JUMPDEST PUSH2 0x232 PUSH2 0x92F JUMP JUMPDEST PUSH2 0x27D PUSH2 0x9CE JUMP JUMPDEST PUSH2 0x232 PUSH2 0x9DF JUMP JUMPDEST PUSH2 0x25A PUSH2 0x2B9 CALLDATASIZE PUSH1 0x4 PUSH2 0x3315 JUMP JUMPDEST PUSH2 0xA7E JUMP JUMPDEST PUSH2 0x27D PUSH2 0x2CC CALLDATASIZE PUSH1 0x4 PUSH2 0x3284 JUMP JUMPDEST PUSH2 0xAA1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x216 JUMP JUMPDEST PUSH2 0x2E8 PUSH2 0xB1C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x216 SWAP3 SWAP2 SWAP1 PUSH2 0x3353 JUMP JUMPDEST PUSH2 0x27D PUSH2 0x304 CALLDATASIZE PUSH1 0x4 PUSH2 0x3315 JUMP JUMPDEST PUSH2 0xB30 JUMP JUMPDEST PUSH2 0x311 PUSH2 0xCF9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x216 SWAP2 SWAP1 PUSH2 0x33A3 JUMP JUMPDEST PUSH2 0x27D PUSH2 0x32C CALLDATASIZE PUSH1 0x4 PUSH2 0x33B5 JUMP JUMPDEST PUSH2 0xDB3 JUMP JUMPDEST PUSH2 0x27D PUSH2 0x33F CALLDATASIZE PUSH1 0x4 PUSH2 0x3284 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH2 0x36C SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x216 JUMP JUMPDEST PUSH2 0x27D PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x395 PUSH2 0x1040 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x216 SWAP3 SWAP2 SWAP1 PUSH2 0x3405 JUMP JUMPDEST PUSH2 0x232 PUSH2 0x3B1 CALLDATASIZE PUSH1 0x4 PUSH2 0x3284 JUMP JUMPDEST PUSH2 0x11F9 JUMP JUMPDEST PUSH2 0x25A PUSH2 0x1765 JUMP JUMPDEST PUSH2 0x209 PUSH2 0x17DF JUMP JUMPDEST PUSH2 0x27D PUSH2 0x3D4 CALLDATASIZE PUSH1 0x4 PUSH2 0x3315 JUMP JUMPDEST PUSH2 0x17EE JUMP JUMPDEST PUSH2 0x25A PUSH2 0x3E7 CALLDATASIZE PUSH1 0x4 PUSH2 0x32EB JUMP JUMPDEST PUSH2 0x1909 JUMP JUMPDEST PUSH2 0x27D PUSH2 0x3FA CALLDATASIZE PUSH1 0x4 PUSH2 0x3284 JUMP JUMPDEST PUSH2 0x1916 JUMP JUMPDEST PUSH2 0x27D PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x36C SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x27D PUSH2 0x429 CALLDATASIZE PUSH1 0x4 PUSH2 0x3454 JUMP JUMPDEST PUSH2 0x1A05 JUMP JUMPDEST PUSH2 0x441 PUSH2 0x43C CALLDATASIZE PUSH1 0x4 PUSH2 0x3454 JUMP JUMPDEST PUSH2 0x1A7A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x216 JUMP JUMPDEST PUSH2 0x27D PUSH2 0x474 CALLDATASIZE PUSH1 0x4 PUSH2 0x346B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x27D PUSH2 0x4AC CALLDATASIZE PUSH1 0x4 PUSH2 0x3508 JUMP JUMPDEST PUSH2 0x1AB5 JUMP JUMPDEST PUSH2 0x27D PUSH2 0x1E4D JUMP JUMPDEST PUSH2 0x4C1 PUSH2 0x1F35 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x216 SWAP3 SWAP2 SWAP1 PUSH2 0x35AD JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x4DE SWAP1 PUSH2 0x35D1 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x50A SWAP1 PUSH2 0x35D1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x555 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x52C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x555 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x538 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1ACB6141 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5B2 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5D6 SWAP2 SWAP1 PUSH2 0x3603 JUMP JUMPDEST SWAP1 POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0x609 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x600 SWAP1 PUSH2 0x361E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x611 PUSH2 0x1765 JUMP JUMPDEST PUSH2 0x654 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x149958985B185B98D9481B9BDD081B9959591959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x600 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x65E PUSH2 0x2033 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH0 PUSH2 0x66D DUP4 DUP4 PUSH2 0x2162 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x679 DUP3 PUSH2 0x2263 JUMP JUMPDEST SWAP1 POP PUSH1 0xA SLOAD DUP2 PUSH2 0x689 SWAP2 SWAP1 PUSH2 0x365A JUMP JUMPDEST PUSH1 0x6 SLOAD SWAP1 SWAP2 POP PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x6A8 JUMPI PUSH2 0x6A8 PUSH2 0x34A2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x6D1 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x74A JUMPI PUSH0 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x6F2 JUMPI PUSH2 0x6F2 PUSH2 0x3671 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD GT ISZERO PUSH2 0x742 JUMPI PUSH2 0x723 DUP2 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x716 JUMPI PUSH2 0x716 PUSH2 0x3671 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x229F JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x735 JUMPI PUSH2 0x735 PUSH2 0x3671 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x6D6 JUMP JUMPDEST POP PUSH2 0x755 DUP9 DUP4 PUSH2 0x236F JUMP JUMPDEST PUSH2 0x75D PUSH2 0x23A7 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xA95AD530009C6F929555E70A66AADBEAE7231E45756C5B028CA77FBAA376E73E DUP5 PUSH1 0x40 MLOAD PUSH2 0x796 SWAP2 SWAP1 PUSH2 0x32D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 SWAP6 POP POP POP POP POP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1ACB6141 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7FE JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x822 SWAP2 SWAP1 PUSH2 0x3603 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xFA67079 PUSH1 0xE2 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0x3E99C1E4 SWAP1 PUSH1 0x24 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x866 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x88D SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x3685 JUMP JUMPDEST SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x8A0 DUP2 DUP6 DUP6 PUSH2 0x260A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x927 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x8D6 JUMPI PUSH2 0x8D6 PUSH2 0x3671 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x91F JUMPI PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x907 JUMPI PUSH2 0x907 PUSH2 0x3671 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x2 ADD SLOAD SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x8AF JUMP JUMPDEST POP PUSH0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x60 SWAP1 PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x94E JUMPI PUSH2 0x94E PUSH2 0x34A2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x977 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x7A5 JUMPI PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x999 JUMPI PUSH2 0x999 PUSH2 0x3671 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x2 ADD SLOAD DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x9BB JUMPI PUSH2 0x9BB PUSH2 0x3671 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x97C JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x9D8 PUSH2 0x2033 JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x60 SWAP1 PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x9FE JUMPI PUSH2 0x9FE PUSH2 0x34A2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xA27 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x7A5 JUMPI PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xA49 JUMPI PUSH2 0xA49 PUSH2 0x3671 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x1 ADD SLOAD DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xA6B JUMPI PUSH2 0xA6B PUSH2 0x3671 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0xA2C JUMP JUMPDEST PUSH0 CALLER PUSH2 0xA8B DUP6 DUP3 DUP6 PUSH2 0x2617 JUMP JUMPDEST PUSH2 0xA96 DUP6 DUP6 DUP6 PUSH2 0x2692 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x927 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xACB JUMPI PUSH2 0xACB PUSH2 0x3671 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xB14 JUMPI PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xAFC JUMPI PUSH2 0xAFC PUSH2 0x3671 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x1 ADD SLOAD SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0xAA4 JUMP JUMPDEST PUSH0 PUSH1 0x60 PUSH2 0xB27 PUSH2 0x2033 JUMP JUMPDEST SWAP1 SWAP4 SWAP1 SWAP3 POP SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xBB3BA04C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB82 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBA6 SWAP2 SWAP1 PUSH2 0x3603 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xBB3BA04C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC02 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC26 SWAP2 SWAP1 PUSH2 0x3603 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xC75 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x496E76616C6964206F7261636C652061646472657373 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x600 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x248391FF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP6 SWAP1 MSTORE PUSH0 SWAP2 SWAP1 DUP4 AND SWAP1 PUSH4 0x248391FF SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xCCB JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCEF SWAP2 SWAP1 PUSH2 0x3710 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x60 SWAP1 PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0xD18 JUMPI PUSH2 0xD18 PUSH2 0x34A2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xD41 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x7A5 JUMPI PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xD63 JUMPI PUSH2 0xD63 PUSH2 0x3671 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD SLOAD DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP4 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0xD93 JUMPI PUSH2 0xD93 PUSH2 0x3671 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE PUSH1 0x1 ADD PUSH2 0xD46 JUMP JUMPDEST PUSH0 PUSH2 0xDBC PUSH2 0x26EF JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x85462D6F PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x85462D6F SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE03 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE27 SWAP2 SWAP1 PUSH2 0x3710 JUMP JUMPDEST SWAP1 POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xE8A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F742073776170207468652073616D6520746F6B656E000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x600 JUMP JUMPDEST PUSH0 DUP5 GT PUSH2 0xED9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E207A65726F PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x600 JUMP JUMPDEST PUSH2 0xEE1 PUSH2 0x23A7 JUMP JUMPDEST PUSH0 PUSH2 0xEED DUP8 DUP8 DUP8 PUSH2 0x17EE JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0xEF9 DUP8 PUSH2 0x1916 JUMP JUMPDEST LT ISZERO PUSH2 0xF40 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x496E73756666696369656E74204C6971756964697479 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x600 JUMP JUMPDEST PUSH0 PUSH2 0x2710 PUSH2 0xF4E DUP5 DUP5 PUSH2 0x365A JUMP JUMPDEST PUSH2 0xF58 SWAP2 SWAP1 PUSH2 0x373B JUMP JUMPDEST SWAP1 POP PUSH2 0xF64 DUP2 DUP4 PUSH2 0x374E JUMP JUMPDEST SWAP4 POP PUSH0 DUP5 GT PUSH2 0xFC3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E7420746F2073656E64206D75737420626520677265617465722074 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x68616E203 PUSH1 0xDC SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x600 JUMP JUMPDEST PUSH2 0xFCB PUSH2 0x23A7 JUMP JUMPDEST DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xCD3829A3813DC3CDD188FD3D01DCF3268C16BE2FDD2DD21D0665418816E46062 DUP10 DUP9 PUSH1 0x40 MLOAD PUSH2 0x1023 SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP PUSH2 0x1038 PUSH1 0x1 PUSH1 0x5 SSTORE JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH0 DUP1 PUSH2 0x104D PUSH2 0x2033 JUMP JUMPDEST PUSH1 0x6 SLOAD SWAP2 SWAP4 POP SWAP2 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x106D JUMPI PUSH2 0x106D PUSH2 0x34A2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1096 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP5 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x10B1 JUMPI PUSH2 0x10B1 PUSH2 0x34A2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x10DA JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP4 POP PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x11F1 JUMPI PUSH0 DUP5 DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x10FB JUMPI PUSH2 0x10FB PUSH2 0x3671 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2710 PUSH2 0x1110 SWAP2 SWAP1 PUSH2 0x365A JUMP JUMPDEST PUSH2 0x111A SWAP2 SWAP1 PUSH2 0x373B JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x6 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x1130 JUMPI PUSH2 0x1130 PUSH2 0x3671 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x1 ADD SLOAD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x119B JUMPI PUSH2 0x1154 DUP2 DUP4 PUSH2 0x374E JUMP JUMPDEST DUP8 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x1166 JUMPI PUSH2 0x1166 PUSH2 0x3671 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x1 DUP9 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x1186 JUMPI PUSH2 0x1186 PUSH2 0x3671 JUMP JUMPDEST SWAP2 ISZERO ISZERO PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE PUSH2 0x11E7 JUMP JUMPDEST PUSH2 0x11A5 DUP3 DUP3 PUSH2 0x374E JUMP JUMPDEST DUP8 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x11B7 JUMPI PUSH2 0x11B7 PUSH2 0x3671 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH0 DUP9 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x11D6 JUMPI PUSH2 0x11D6 PUSH2 0x3671 JUMP JUMPDEST SWAP2 ISZERO ISZERO PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE JUMPDEST POP POP PUSH1 0x1 ADD PUSH2 0x10DF JUMP JUMPDEST POP POP POP POP SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1ACB6141 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x124C JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1270 SWAP2 SWAP1 PUSH2 0x3603 JUMP JUMPDEST SWAP1 POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0x129A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x600 SWAP1 PUSH2 0x361E JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x85462D6F PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x85462D6F SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x12E1 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1305 SWAP2 SWAP1 PUSH2 0x3710 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1ACB6141 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1358 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x137C SWAP2 SWAP1 PUSH2 0x3603 JUMP JUMPDEST ADDRESS PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP1 PUSH2 0x13DB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5368617265206D7573742062652067726561746572207468616E203000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x600 JUMP JUMPDEST PUSH0 PUSH2 0x13E5 PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT PUSH2 0x1425 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x4E6F206C6971756964697479 PUSH1 0xA0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x600 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1441 JUMPI PUSH2 0x1441 PUSH2 0x34A2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x146A JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 PUSH2 0x2710 PUSH2 0x147B DUP8 DUP7 PUSH2 0x365A JUMP JUMPDEST PUSH2 0x1485 SWAP2 SWAP1 PUSH2 0x373B JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x1492 DUP3 DUP7 PUSH2 0x374E JUMP JUMPDEST SWAP1 POP PUSH0 JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x157E JUMPI PUSH0 DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA3E113FB ADDRESS PUSH1 0x6 DUP6 DUP2 SLOAD DUP2 LT PUSH2 0x14C4 JUMPI PUSH2 0x14C4 PUSH2 0x3671 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD SLOAD PUSH1 0x40 MLOAD PUSH1 0xE0 DUP5 SWAP1 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP2 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x151D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1541 SWAP2 SWAP1 PUSH2 0x3710 JUMP JUMPDEST SWAP1 POP DUP6 PUSH2 0x154E DUP5 DUP4 PUSH2 0x365A JUMP JUMPDEST PUSH2 0x1558 SWAP2 SWAP1 PUSH2 0x373B JUMP JUMPDEST DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x156A JUMPI PUSH2 0x156A PUSH2 0x3671 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE POP PUSH1 0x1 ADD PUSH2 0x1496 JUMP JUMPDEST POP ADDRESS PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0x15DD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E742042414C554E49206C6971756964697479000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x600 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x1D8CF425 PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 MLOAD PUSH0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x3B19E84A SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1624 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1648 SWAP2 SWAP1 PUSH2 0x3603 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE SWAP1 SWAP2 POP PUSH0 SWAP1 ADDRESS SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1697 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x16BB SWAP2 SWAP1 PUSH2 0x3761 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x1700 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x119959481D1C985B9CD9995C8819985A5B1959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x600 JUMP JUMPDEST PUSH2 0x170A ADDRESS DUP5 PUSH2 0x2719 JUMP JUMPDEST PUSH2 0x1712 PUSH2 0x23A7 JUMP JUMPDEST DUP12 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xCC16F5DBB4873280815C1EE09DBD06736CFFCC184412CF7A71A0FDB75D397CA5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x174D SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP SWAP3 SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH2 0x1770 PUSH2 0x1040 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x17D6 JUMPI DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x1791 JUMPI PUSH2 0x1791 PUSH2 0x3671 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP1 ISZERO PUSH2 0x17BF JUMPI POP PUSH1 0x7 SLOAD DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x17B5 JUMPI PUSH2 0x17B5 PUSH2 0x3671 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD GT JUMPDEST ISZERO PUSH2 0x17CE JUMPI PUSH1 0x1 SWAP4 POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x1776 JUMP JUMPDEST POP PUSH0 SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x4DE SWAP1 PUSH2 0x35D1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x17FB DUP6 DUP6 DUP6 PUSH2 0xB30 JUMP JUMPDEST SWAP1 POP DUP4 DUP6 PUSH0 PUSH1 0x60 PUSH2 0x180A PUSH2 0x2033 JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP PUSH0 PUSH2 0x2710 DUP4 PUSH2 0x181D DUP8 PUSH2 0xAA1 JUMP JUMPDEST PUSH2 0x1827 SWAP2 SWAP1 PUSH2 0x365A JUMP JUMPDEST PUSH2 0x1831 SWAP2 SWAP1 PUSH2 0x373B JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x2710 DUP5 PUSH2 0x1841 DUP9 PUSH2 0xAA1 JUMP JUMPDEST PUSH2 0x184B SWAP2 SWAP1 PUSH2 0x365A JUMP JUMPDEST PUSH2 0x1855 SWAP2 SWAP1 PUSH2 0x373B JUMP JUMPDEST SWAP1 POP PUSH0 DUP10 SWAP1 POP PUSH0 PUSH2 0x1874 PUSH1 0xC SLOAD PUSH1 0xD SLOAD PUSH1 0xE SLOAD PUSH1 0xF SLOAD DUP9 DUP9 DUP9 PUSH0 PUSH2 0x274D JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x2710 DUP8 PUSH2 0x1884 DUP11 PUSH2 0xAA1 JUMP JUMPDEST PUSH2 0x188E SWAP2 SWAP1 PUSH2 0x365A JUMP JUMPDEST PUSH2 0x1898 SWAP2 SWAP1 PUSH2 0x373B JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x2710 DUP9 PUSH2 0x18A8 DUP12 PUSH2 0xAA1 JUMP JUMPDEST PUSH2 0x18B2 SWAP2 SWAP1 PUSH2 0x365A JUMP JUMPDEST PUSH2 0x18BC SWAP2 SWAP1 PUSH2 0x373B JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x18D8 PUSH1 0xC SLOAD PUSH1 0xD SLOAD PUSH1 0xE SLOAD PUSH1 0xF SLOAD DUP8 DUP8 DUP12 PUSH1 0x1 PUSH2 0x274D JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x18E5 DUP3 DUP7 PUSH2 0x280C JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x18F2 DUP8 DUP4 PUSH2 0x282A JUMP JUMPDEST SWAP15 POP POP POP POP POP POP POP POP POP POP POP POP POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x8A0 DUP2 DUP6 DUP6 PUSH2 0x2692 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1ACB6141 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1968 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x198C SWAP2 SWAP1 PUSH2 0x3603 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA3E113FB PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE SWAP2 SWAP3 POP SWAP1 DUP3 AND SWAP1 PUSH4 0xA3E113FB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x19DA JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x19FE SWAP2 SWAP1 PUSH2 0x3710 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x1A0F PUSH2 0x2033 JUMP JUMPDEST SWAP2 POP POP DUP1 MLOAD DUP4 LT PUSH2 0x1A58 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x92DCECC2D8D2C840C2E6E6CAE840D2DCC8CAF PUSH1 0x6B SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x600 JUMP JUMPDEST DUP1 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1A6A JUMPI PUSH2 0x1A6A PUSH2 0x3671 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1A89 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP3 POP DUP4 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1ACB6141 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1B07 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1B2B SWAP2 SWAP1 PUSH2 0x3603 JUMP JUMPDEST SWAP1 POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0x1B55 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x600 SWAP1 PUSH2 0x361E JUMP JUMPDEST PUSH0 PUSH2 0x1B5F PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH0 DUP1 PUSH2 0x1B6B PUSH2 0x7AB JUMP JUMPDEST DUP1 MLOAD PUSH1 0x6 SLOAD SWAP2 SWAP3 POP EQ PUSH2 0x1BC0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964207265736572766573206C656E677468000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x600 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x1BFB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x4E6F20617373657473 PUSH1 0xB8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x600 JUMP JUMPDEST PUSH0 JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x1C99 JUMPI PUSH0 PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1C1B JUMPI PUSH2 0x1C1B PUSH2 0x3671 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD SLOAD PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP4 POP AND DUP3 SUB PUSH2 0x1C5D JUMPI DUP9 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1C53 JUMPI PUSH2 0x1C53 PUSH2 0x3671 JUMP JUMPDEST POP PUSH2 0x1C91 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1C80 DUP3 DUP11 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x1C73 JUMPI PUSH2 0x1C73 PUSH2 0x3671 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x285D JUMP JUMPDEST SWAP1 POP PUSH2 0x1C8C DUP2 DUP7 PUSH2 0x3780 JUMP JUMPDEST SWAP5 POP POP POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x1BFD JUMP JUMPDEST POP PUSH0 DUP3 GT PUSH2 0x1CF4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F74616C2076616C7565206D7573742062652067726561746572207468616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x203 PUSH1 0xF4 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x600 JUMP JUMPDEST PUSH0 DUP4 PUSH0 SUB PUSH2 0x1D10 JUMPI PUSH1 0xA SLOAD PUSH2 0x1D09 SWAP1 DUP5 PUSH2 0x365A JUMP JUMPDEST SWAP1 POP PUSH2 0x1DAE JUMP JUMPDEST PUSH0 PUSH2 0x1D19 PUSH2 0x2033 JUMP JUMPDEST POP SWAP1 POP PUSH0 DUP2 GT PUSH2 0x1D7A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F74616C206C6971756964697479206D757374206265206772656174657220 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x7468616E203 PUSH1 0xD4 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x600 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH2 0x1D87 SWAP1 DUP3 PUSH2 0x365A JUMP JUMPDEST DUP6 PUSH1 0xA SLOAD DUP7 PUSH2 0x1D96 SWAP2 SWAP1 PUSH2 0x365A JUMP JUMPDEST PUSH2 0x1DA0 SWAP2 SWAP1 PUSH2 0x365A JUMP JUMPDEST PUSH2 0x1DAA SWAP2 SWAP1 PUSH2 0x373B JUMP JUMPDEST SWAP2 POP POP JUMPDEST DUP1 PUSH0 SUB PUSH2 0x1DED JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x4D696E7420717479206973203 PUSH1 0x9C SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x600 JUMP JUMPDEST PUSH2 0x1DF7 DUP9 DUP3 PUSH2 0x236F JUMP JUMPDEST PUSH2 0x1DFF PUSH2 0x23A7 JUMP JUMPDEST DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xF6798A560793A54C3BCFE86A93CDE1E73087D944C0EA20544137D4121396885 DUP3 PUSH1 0x40 MLOAD PUSH2 0x1E3A SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1E9F JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1EC3 SWAP2 SWAP1 PUSH2 0x3793 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 POP PUSH0 PUSH2 0x1ED4 DUP3 PUSH1 0x12 PUSH2 0x374E JUMP JUMPDEST PUSH2 0x1EDF SWAP1 PUSH1 0xA PUSH2 0x3893 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x1EEA PUSH2 0x2033 JUMP JUMPDEST POP SWAP1 POP PUSH0 PUSH2 0x1EF7 PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 SUB PUSH2 0x1F0A JUMPI PUSH0 SWAP5 POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 PUSH2 0x1F18 DUP6 DUP6 PUSH2 0x365A JUMP JUMPDEST PUSH2 0x1F22 SWAP2 SWAP1 PUSH2 0x373B JUMP JUMPDEST PUSH2 0x1F2C SWAP2 SWAP1 PUSH2 0x365A JUMP JUMPDEST SWAP5 POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH0 PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1ACB6141 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1F89 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1FAD SWAP2 SWAP1 PUSH2 0x3603 JUMP JUMPDEST SWAP1 POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0x1FD7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x600 SWAP1 PUSH2 0x361E JUMP JUMPDEST PUSH2 0x1FDF PUSH2 0x1765 JUMP JUMPDEST PUSH2 0x2022 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x149958985B185B98D9481B9BDD081B9959591959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x600 JUMP JUMPDEST PUSH2 0x202A PUSH2 0x2877 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH0 SWAP1 PUSH1 0x60 SWAP1 DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2053 JUMPI PUSH2 0x2053 PUSH2 0x34A2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x207C JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP2 POP PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x215C JUMPI PUSH0 PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x209D JUMPI PUSH2 0x209D PUSH2 0x3671 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 POP PUSH2 0x20C0 DUP3 PUSH2 0x1916 JUMP JUMPDEST PUSH1 0x9 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP4 AND SUB PUSH2 0x20FD JUMPI DUP1 DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x20EC JUMPI PUSH2 0x20EC PUSH2 0x3671 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x212B JUMP JUMPDEST PUSH0 PUSH2 0x2108 DUP4 DUP4 PUSH2 0x285D JUMP JUMPDEST SWAP1 POP DUP1 DUP7 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x211D JUMPI PUSH2 0x211D PUSH2 0x3671 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP POP JUMPDEST DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x213D JUMPI PUSH2 0x213D PUSH2 0x3671 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP7 PUSH2 0x2150 SWAP2 SWAP1 PUSH2 0x3780 JUMP JUMPDEST SWAP6 POP POP POP PUSH1 0x1 ADD PUSH2 0x2081 JUMP JUMPDEST POP POP SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x60 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x217F JUMPI PUSH2 0x217F PUSH2 0x34A2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x21A8 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x9D8 JUMPI PUSH0 PUSH2 0x2710 PUSH1 0x6 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x21CE JUMPI PUSH2 0x21CE PUSH2 0x3671 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x1 ADD SLOAD DUP7 PUSH2 0x21E9 SWAP2 SWAP1 PUSH2 0x365A JUMP JUMPDEST PUSH2 0x21F3 SWAP2 SWAP1 PUSH2 0x373B JUMP JUMPDEST SWAP1 POP DUP1 DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x2208 JUMPI PUSH2 0x2208 PUSH2 0x3671 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD LT ISZERO PUSH2 0x225A JUMPI DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2228 JUMPI PUSH2 0x2228 PUSH2 0x3671 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 PUSH2 0x223B SWAP2 SWAP1 PUSH2 0x374E JUMP JUMPDEST DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x224D JUMPI PUSH2 0x224D PUSH2 0x3671 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x21AD JUMP JUMPDEST PUSH0 DUP1 JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x7A5 JUMPI DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x2282 JUMPI PUSH2 0x2282 PUSH2 0x3671 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP3 PUSH2 0x2295 SWAP2 SWAP1 PUSH2 0x3780 JUMP JUMPDEST SWAP2 POP PUSH1 0x1 ADD PUSH2 0x2266 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x6 DUP1 SLOAD PUSH0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 SWAP1 DUP6 SWAP1 DUP2 LT PUSH2 0x22C3 JUMPI PUSH2 0x22C3 PUSH2 0x3671 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x22E8 JUMPI POP DUP1 PUSH2 0x8A6 JUMP JUMPDEST PUSH0 PUSH2 0x231E PUSH1 0x6 DUP6 DUP2 SLOAD DUP2 LT PUSH2 0x22FF JUMPI PUSH2 0x22FF PUSH2 0x3671 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH2 0x2F02 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT PUSH2 0x19FE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420746F6B656E20616D6F756E7420746F206164640000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x600 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x2398 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x600 JUMP JUMPDEST PUSH2 0x23A3 PUSH0 DUP4 DUP4 PUSH2 0x2F1B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x23B1 PUSH2 0x1040 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH0 JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x2605 JUMPI PUSH0 PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x23D5 JUMPI PUSH2 0x23D5 PUSH2 0x3671 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x23F9 JUMPI PUSH2 0x23F9 PUSH2 0x3671 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD ISZERO PUSH2 0x24CE JUMPI DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2418 JUMPI PUSH2 0x2418 PUSH2 0x3671 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x6 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x2433 JUMPI PUSH2 0x2433 PUSH2 0x3671 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x2 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x2450 SWAP2 SWAP1 PUSH2 0x3780 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x6 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x246B JUMPI PUSH2 0x246B PUSH2 0x3671 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x2 ADD SLOAD LT ISZERO PUSH2 0x24C9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F766572666C6F7720696E6372656D656E74696E6720736C6970706167650000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x600 JUMP JUMPDEST PUSH2 0x25FC JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x24E0 JUMPI PUSH2 0x24E0 PUSH2 0x3671 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x6 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x24FB JUMPI PUSH2 0x24FB PUSH2 0x3671 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x2 ADD SLOAD GT ISZERO PUSH2 0x25D4 JUMPI DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2523 JUMPI PUSH2 0x2523 PUSH2 0x3671 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x6 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x253E JUMPI PUSH2 0x253E PUSH2 0x3671 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x2 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x255B SWAP2 SWAP1 PUSH2 0x374E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x6 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x2576 JUMPI PUSH2 0x2576 PUSH2 0x3671 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x2 ADD SLOAD GT ISZERO PUSH2 0x24C9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E646572666C6F772064656372656D656E74696E6720736C69707061676500 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x600 JUMP JUMPDEST PUSH0 PUSH1 0x6 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x25E8 JUMPI PUSH2 0x25E8 PUSH2 0x3671 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x23B7 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x2605 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x3041 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH0 NOT DUP2 EQ PUSH2 0x268C JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x267E JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x600 JUMP JUMPDEST PUSH2 0x268C DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x3041 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x26BB JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x600 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x26E4 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x600 JUMP JUMPDEST PUSH2 0x2605 DUP4 DUP4 DUP4 PUSH2 0x2F1B JUMP JUMPDEST PUSH1 0x2 PUSH1 0x5 SLOAD SUB PUSH2 0x2712 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x5 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x2742 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x600 JUMP JUMPDEST PUSH2 0x23A3 DUP3 PUSH0 DUP4 PUSH2 0x2F1B JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x2759 DUP7 DUP7 PUSH2 0x3113 JUMP JUMPDEST SWAP1 POP PUSH0 DUP4 ISZERO PUSH2 0x277D JUMPI PUSH2 0x2776 DUP7 PUSH2 0x2770 DUP8 DUP11 PUSH2 0x3780 JUMP JUMPDEST SWAP1 PUSH2 0x3113 JUMP JUMPDEST SWAP1 POP PUSH2 0x278E JUMP JUMPDEST PUSH2 0x278B DUP7 PUSH2 0x2770 DUP8 DUP11 PUSH2 0x374E JUMP JUMPDEST SWAP1 POP JUMPDEST DUP1 DUP3 SUB PUSH2 0x279F JUMPI PUSH0 SWAP3 POP POP POP PUSH2 0x2800 JUMP JUMPDEST PUSH0 PUSH2 0x27AD DUP13 DUP13 DUP13 DUP13 DUP8 PUSH2 0x3132 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x27BD DUP14 DUP14 DUP14 DUP14 DUP8 PUSH2 0x3132 JUMP JUMPDEST SWAP1 POP DUP3 DUP5 GT ISZERO PUSH2 0x27E9 JUMPI PUSH2 0x27DE PUSH2 0x27D4 DUP5 DUP7 PUSH2 0x374E JUMP JUMPDEST PUSH2 0x2770 DUP5 DUP5 PUSH2 0x374E JUMP JUMPDEST SWAP5 POP POP POP POP POP PUSH2 0x2800 JUMP JUMPDEST PUSH2 0x27DE PUSH2 0x27F6 DUP6 DUP6 PUSH2 0x374E JUMP JUMPDEST PUSH2 0x2770 DUP4 DUP6 PUSH2 0x374E JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH2 0x2820 DUP5 PUSH8 0xDE0B6B3A7640000 PUSH2 0x3780 JUMP JUMPDEST PUSH2 0x19FE SWAP2 SWAP1 PUSH2 0x374E JUMP JUMPDEST PUSH0 PUSH8 0xDE0B6B3A7640000 PUSH2 0x283F PUSH1 0x2 DUP3 PUSH2 0x373B JUMP JUMPDEST PUSH2 0x2849 DUP5 DUP7 PUSH2 0x365A JUMP JUMPDEST PUSH2 0x2853 SWAP2 SWAP1 PUSH2 0x3780 JUMP JUMPDEST PUSH2 0x19FE SWAP2 SWAP1 PUSH2 0x373B JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH0 SWAP1 PUSH2 0x19FE SWAP1 DUP5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH2 0xB30 JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH0 PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1ACB6141 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x28CB JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x28EF SWAP2 SWAP1 PUSH2 0x3603 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xCFF49D68 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2942 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2966 SWAP2 SWAP1 PUSH2 0x3603 JUMP JUMPDEST PUSH1 0x6 SLOAD SWAP1 SWAP2 POP PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2985 JUMPI PUSH2 0x2985 PUSH2 0x34A2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x29AE JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP PUSH1 0x6 SLOAD SWAP1 SWAP2 POP PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x29CE JUMPI PUSH2 0x29CE PUSH2 0x34A2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x29F7 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP PUSH1 0x6 SLOAD SWAP1 SWAP2 POP PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2A17 JUMPI PUSH2 0x2A17 PUSH2 0x34A2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2A40 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP PUSH1 0x6 SLOAD SWAP1 SWAP2 POP PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2A60 JUMPI PUSH2 0x2A60 PUSH2 0x34A2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2A89 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP PUSH1 0x6 SLOAD SWAP1 SWAP2 POP PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2AA9 JUMPI PUSH2 0x2AA9 PUSH2 0x34A2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2AD2 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP PUSH1 0x6 SLOAD SWAP1 SWAP2 POP PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2AF2 JUMPI PUSH2 0x2AF2 PUSH2 0x34A2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2B1B JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x2C79 JUMPI PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x2B3D JUMPI PUSH2 0x2B3D PUSH2 0x3671 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD SLOAD DUP8 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP9 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x2B6D JUMPI PUSH2 0x2B6D PUSH2 0x3671 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x2BA0 JUMPI PUSH2 0x2BA0 PUSH2 0x3671 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x1 ADD SLOAD DUP7 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2BC2 JUMPI PUSH2 0x2BC2 PUSH2 0x3671 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP7 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x2BE0 JUMPI PUSH2 0x2BE0 PUSH2 0x3671 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2C30 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2C54 SWAP2 SWAP1 PUSH2 0x3710 JUMP JUMPDEST DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2C66 JUMPI PUSH2 0x2C66 PUSH2 0x3671 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x2B20 JUMP JUMPDEST POP PUSH0 PUSH2 0x2C83 PUSH2 0x7AB JUMP JUMPDEST SWAP1 POP DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF0BF7714 DUP3 DUP10 DUP10 PUSH1 0x7 SLOAD DUP15 DUP16 PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 MLOAD DUP9 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2CD3 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x389E JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2CEA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2CFC JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH0 JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x2EB0 JUMPI DUP8 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x2D1E JUMPI PUSH2 0x2D1E PUSH2 0x3671 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2D6E JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2D92 SWAP2 SWAP1 PUSH2 0x3710 JUMP JUMPDEST DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2DA4 JUMPI PUSH2 0x2DA4 PUSH2 0x3671 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP6 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x2DC2 JUMPI PUSH2 0x2DC2 PUSH2 0x3671 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2DDC JUMPI PUSH2 0x2DDC PUSH2 0x3671 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD GT ISZERO PUSH2 0x2E4B JUMPI DUP6 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x2DFC JUMPI PUSH2 0x2DFC PUSH2 0x3671 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2E16 JUMPI PUSH2 0x2E16 PUSH2 0x3671 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2E28 SWAP2 SWAP1 PUSH2 0x374E JUMP JUMPDEST DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2E3A JUMPI PUSH2 0x2E3A PUSH2 0x3671 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x2EA8 JUMP JUMPDEST DUP5 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x2E5D JUMPI PUSH2 0x2E5D PUSH2 0x3671 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP7 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2E77 JUMPI PUSH2 0x2E77 PUSH2 0x3671 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2E89 SWAP2 SWAP1 PUSH2 0x374E JUMP JUMPDEST DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2E9B JUMPI PUSH2 0x2E9B PUSH2 0x3671 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x2D02 JUMP JUMPDEST POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x279B343370F587AF7FB675AE7C8578E9C8ABCC373236AD02C501A4771FE7A7B8 DUP9 PUSH1 0x40 MLOAD PUSH2 0x2EEA SWAP2 SWAP1 PUSH2 0x33A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP SWAP1 SWAP10 SWAP1 SWAP9 POP SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH0 SWAP1 PUSH2 0x19FE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 DUP5 PUSH2 0xB30 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x2F45 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x2F3A SWAP2 SWAP1 PUSH2 0x3780 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x2FB5 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x2F97 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x600 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x2FD1 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x2FEF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x3034 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x306A JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x600 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3093 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x600 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x268C JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x3105 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH2 0x3120 PUSH1 0x2 DUP3 PUSH2 0x373B JUMP JUMPDEST PUSH2 0x2849 PUSH8 0xDE0B6B3A7640000 DUP7 PUSH2 0x365A JUMP JUMPDEST PUSH0 DUP3 DUP3 LT ISZERO PUSH2 0x314C JUMPI PUSH2 0x3145 DUP3 DUP6 PUSH2 0x374E JUMP JUMPDEST SWAP1 POP PUSH2 0x319F JUMP JUMPDEST PUSH2 0x3145 PUSH12 0x33B2E3C9FD0803CE8000000 PUSH8 0xDE0B6B3A7640000 PUSH2 0x3184 DUP9 DUP3 PUSH2 0x3174 DUP6 DUP10 PUSH2 0x365A JUMP JUMPDEST PUSH2 0x317E SWAP2 SWAP1 PUSH2 0x373B JUMP JUMPDEST SWAP1 PUSH2 0x31A8 JUMP JUMPDEST PUSH2 0x318E SWAP2 SWAP1 PUSH2 0x365A JUMP JUMPDEST PUSH2 0x3198 SWAP2 SWAP1 PUSH2 0x373B JUMP JUMPDEST DUP8 SWAP1 PUSH2 0x3113 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x31B4 PUSH1 0x2 DUP4 PUSH2 0x3908 JUMP JUMPDEST PUSH0 SUB PUSH2 0x31CC JUMPI PUSH12 0x33B2E3C9FD0803CE8000000 PUSH2 0x31CE JUMP JUMPDEST DUP3 JUMPDEST SWAP1 POP PUSH2 0x31DB PUSH1 0x2 DUP4 PUSH2 0x373B JUMP JUMPDEST SWAP2 POP JUMPDEST DUP2 ISZERO PUSH2 0x8A6 JUMPI PUSH2 0x31EE DUP4 DUP5 PUSH2 0x321F JUMP JUMPDEST SWAP3 POP PUSH2 0x31FB PUSH1 0x2 DUP4 PUSH2 0x3908 JUMP JUMPDEST ISZERO PUSH2 0x320D JUMPI PUSH2 0x320A DUP2 DUP5 PUSH2 0x321F JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH2 0x3218 PUSH1 0x2 DUP4 PUSH2 0x373B JUMP JUMPDEST SWAP2 POP PUSH2 0x31DE JUMP JUMPDEST PUSH0 PUSH12 0x33B2E3C9FD0803CE8000000 PUSH2 0x283F PUSH1 0x2 DUP3 PUSH2 0x373B JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x3281 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3294 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x19FE DUP2 PUSH2 0x326D JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP5 ADD PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x32CE JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x32B2 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0x19FE PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x329F JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x32FC JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x3307 DUP2 PUSH2 0x326D JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3327 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x3332 DUP2 PUSH2 0x326D JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x3342 DUP2 PUSH2 0x326D JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH0 PUSH2 0x1038 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x329F JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP5 ADD PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x32CE JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x337E JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0x19FE PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x336B JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x33C8 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x33D3 DUP2 PUSH2 0x326D JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH2 0x33E3 DUP2 PUSH2 0x326D JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH2 0x33FA DUP2 PUSH2 0x326D JUMP JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP1 SWAP4 POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 DUP3 MSTORE DUP4 MLOAD SWAP1 DUP3 ADD DUP2 SWAP1 MSTORE PUSH0 SWAP1 PUSH1 0x20 SWAP1 PUSH1 0x60 DUP5 ADD SWAP1 DUP3 DUP8 ADD DUP5 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x343F JUMPI DUP2 MLOAD ISZERO ISZERO DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x3421 JUMP JUMPDEST POP POP POP DUP4 DUP2 SUB PUSH1 0x20 DUP6 ADD MSTORE PUSH2 0xCEF DUP2 DUP7 PUSH2 0x329F JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3464 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x347C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x3487 DUP2 PUSH2 0x326D JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x3497 DUP2 PUSH2 0x326D JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x34DE JUMPI PUSH2 0x34DE PUSH2 0x34A2 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0x34FE JUMPI PUSH2 0x34FE PUSH2 0x34A2 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3519 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x3524 DUP2 PUSH2 0x326D JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 DUP2 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x353F JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP5 ADD PUSH1 0x1F DUP2 ADD DUP7 SGT PUSH2 0x354F JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0x3562 PUSH2 0x355D DUP3 PUSH2 0x34E6 JUMP JUMPDEST PUSH2 0x34B6 JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH1 0x5 SWAP2 SWAP1 SWAP2 SHL DUP3 ADD DUP4 ADD SWAP1 DUP4 DUP2 ADD SWAP1 DUP9 DUP4 GT ISZERO PUSH2 0x3580 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP3 DUP5 ADD SWAP3 JUMPDEST DUP3 DUP5 LT ISZERO PUSH2 0x359E JUMPI DUP4 CALLDATALOAD DUP3 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH2 0x3585 JUMP JUMPDEST DUP1 SWAP6 POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH0 PUSH2 0x35BF PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x329F JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x319F DUP2 DUP6 PUSH2 0x329F JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x35E5 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x7A5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3613 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x19FE DUP2 PUSH2 0x326D JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xE SWAP1 DUP3 ADD MSTORE PUSH14 0x4F6E6C7920506572697068657279 PUSH1 0x90 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x8A6 JUMPI PUSH2 0x8A6 PUSH2 0x3646 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3696 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x36AB JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x36BB JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH2 0x36C9 PUSH2 0x355D DUP3 PUSH2 0x34E6 JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH1 0x5 SWAP2 SWAP1 SWAP2 SHL DUP3 ADD DUP4 ADD SWAP1 DUP4 DUP2 ADD SWAP1 DUP8 DUP4 GT ISZERO PUSH2 0x36E7 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP3 DUP5 ADD SWAP3 JUMPDEST DUP3 DUP5 LT ISZERO PUSH2 0x3705 JUMPI DUP4 MLOAD DUP3 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH2 0x36EC JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3720 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 PUSH2 0x3749 JUMPI PUSH2 0x3749 PUSH2 0x3727 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x8A6 JUMPI PUSH2 0x8A6 PUSH2 0x3646 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3771 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x19FE JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x8A6 JUMPI PUSH2 0x8A6 PUSH2 0x3646 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x37A3 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x19FE JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x37ED JUMPI DUP2 PUSH0 NOT DIV DUP3 GT ISZERO PUSH2 0x37D3 JUMPI PUSH2 0x37D3 PUSH2 0x3646 JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0x37E0 JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x37B8 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x3803 JUMPI POP PUSH1 0x1 PUSH2 0x8A6 JUMP JUMPDEST DUP2 PUSH2 0x380F JUMPI POP PUSH0 PUSH2 0x8A6 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x3825 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x382F JUMPI PUSH2 0x384B JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x8A6 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x3840 JUMPI PUSH2 0x3840 PUSH2 0x3646 JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x8A6 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x386E JUMPI POP DUP2 DUP2 EXP PUSH2 0x8A6 JUMP JUMPDEST PUSH2 0x3878 DUP4 DUP4 PUSH2 0x37B3 JUMP JUMPDEST DUP1 PUSH0 NOT DIV DUP3 GT ISZERO PUSH2 0x388B JUMPI PUSH2 0x388B PUSH2 0x3646 JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x19FE DUP4 DUP4 PUSH2 0x37F5 JUMP JUMPDEST PUSH1 0xE0 DUP2 MSTORE PUSH0 PUSH2 0x38B0 PUSH1 0xE0 DUP4 ADD DUP11 PUSH2 0x329F JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x38C2 DUP2 DUP11 PUSH2 0x336B JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x38D6 DUP2 DUP10 PUSH2 0x329F JUMP JUMPDEST PUSH1 0x60 DUP5 ADD SWAP8 SWAP1 SWAP8 MSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x80 DUP3 ADD MSTORE SWAP2 DUP4 AND PUSH1 0xA0 DUP4 ADD MSTORE SWAP1 SWAP2 AND PUSH1 0xC0 SWAP1 SWAP2 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x3916 JUMPI PUSH2 0x3916 PUSH2 0x3727 JUMP JUMPDEST POP MOD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHR 0xCD MSTORE8 0xB5 0x4C SGT 0x4B CALLVALUE 0xE4 0xEB 0xD8 0xD2 SELFDESTRUCT PUSH4 0xD2D5F0CE PUSH0 EXP SWAP16 PUSH16 0xE046EBFF11FFA5E6B42F64736F6C6343 STOP ADDMOD NOT STOP CALLER ","sourceMap":"1808:29167:15:-:0;;;2328:10;2302:36;;2402:1;2376:27;;2429:18;2415:32;;2534:18;2512:40;;2602:9;2579:32;;2710:4;2684:30;;2755:7;2726:36;;3402:771;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1896:113:8;;;;;;;;;;;;;-1:-1:-1;;;1896:113:8;;;;;;;;;;;;;;;;-1:-1:-1;;;1896:113:8;;;1970:5;1962;:13;;;;;;:::i;:::-;-1:-1:-1;1985:7:8;:17;1995:7;1985;:17;:::i;:::-;-1:-1:-1;;1713:1:13;1917:7;:21;-1:-1:-1;3590:8:15::1;:39:::0;;-1:-1:-1;;;;;;3590:39:15::1;-1:-1:-1::0;;;;;3590:39:15;::::1;;::::0;;3648:4:::1;3642:3;:10:::0;-1:-1:-1;3679:35:15::1;3696:7:::0;3705:8;3679:16:::1;:35::i;:::-;3665:49;;3733:6;3725:40;;;::::0;-1:-1:-1;;;3725:40:15;;5533:2:22;3725:40:15::1;::::0;::::1;5515:21:22::0;5572:2;5552:18;;;5545:30;5611:23;5591:18;;;5584:51;5652:18;;3725:40:15::1;;;;;;;;;3778:7;:18:::0;;;3821:8:::1;::::0;:18:::1;::::0;;-1:-1:-1;;;3821:18:15;;;;-1:-1:-1;;;;;3821:8:15;;::::1;::::0;:16:::1;::::0;:18:::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;;:8;:18:::1;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3809:9;:30:::0;;-1:-1:-1;;;;;;3809:30:15::1;-1:-1:-1::0;;;;;3809:30:15;;;::::1;::::0;;::::1;::::0;;3868:14:::1;3852:13;:30:::0;3895:62:::1;;;::::0;-1:-1:-1;;;3895:62:15;;6096:2:22;3895:62:15::1;::::0;::::1;6078:21:22::0;6135:2;6115:18;;;6108:30;6174:28;6154:18;;;6147:56;6220:18;;3895:62:15::1;5894:350:22::0;3895:62:15::1;3970:19;4011:9:::0;4006:99:::1;4030:8;:15;4026:1;:19;4006:99;;;4082:8;4091:1;4082:11;;;;;;;;:::i;:::-;;;;;;;4067:26;;;;;:::i;:::-;::::0;-1:-1:-1;4047:3:15::1;;4006:99;;;;4125:11;4140:5;4125:20;4117:48;;;::::0;-1:-1:-1;;;4117:48:15;;6810:2:22;4117:48:15::1;::::0;::::1;6792:21:22::0;6849:2;6829:18;;;6822:30;-1:-1:-1;;;6868:18:22;;;6861:45;6923:18;;4117:48:15::1;6608:339:22::0;4117:48:15::1;3579:594;;3402:771:::0;;;;1808:29167;;4572:1041;4669:4;4686:18;4707:8;;;;;;;;;-1:-1:-1;;;;;4707:8:15;-1:-1:-1;;;;;4707:28:15;;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4686:51;;4800:1;-1:-1:-1;;;;;4758:44:15;:8;;;;;;;;;-1:-1:-1;;;;;4758:8:15;-1:-1:-1;;;;;4758:28:15;;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;4758:44:15;;4750:83;;;;-1:-1:-1;;;4750:83:15;;7154:2:22;4750:83:15;;;7136:21:22;7193:2;7173:18;;;7166:30;7232:28;7212:18;;;7205:56;7278:18;;4750:83:15;6952:350:22;4750:83:15;4870:8;:15;4852:7;:14;:33;4844:80;;;;-1:-1:-1;;;4844:80:15;;7509:2:22;4844:80:15;;;7491:21:22;7548:2;7528:18;;;7521:30;7587:34;7567:18;;;7560:62;-1:-1:-1;;;7638:18:22;;;7631:32;7680:19;;4844:80:15;7307:398:22;4844:80:15;4942:9;4937:647;4961:7;:14;4957:1;:18;4937:647;;;5027:1;-1:-1:-1;;;;;5005:24:15;:7;5013:1;5005:10;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;5005:24:15;;4997:58;;;;-1:-1:-1;;;4997:58:15;;7912:2:22;4997:58:15;;;7894:21:22;7951:2;7931:18;;;7924:30;7990:23;7970:18;;;7963:51;8031:18;;4997:58:15;7710:345:22;4997:58:15;5092:1;5078:8;5087:1;5078:11;;;;;;;;:::i;:::-;;;;;;;:15;5070:42;;;;-1:-1:-1;;;5070:42:15;;8262:2:22;5070:42:15;;;8244:21:22;8301:2;8281:18;;;8274:30;-1:-1:-1;;;8320:18:22;;;8313:44;8374:18;;5070:42:15;8060:338:22;5070:42:15;5129:10;5163:180;;;;;;;;5203:7;5211:1;5203:10;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;5163:180:15;;;;;5244:8;5253:1;5244:11;;;;;;;;:::i;:::-;;;;;;;;;;;;5163:180;;5288:1;5163:180;;;;;;5129:229;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;5129:229:15;-1:-1:-1;;;;;5129:229:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5397:10;;;;5405:1;;5397:10;;;;;;:::i;:::-;;;;;;;;;;;5427:51;;-1:-1:-1;;;5427:51:15;;5451:4;5427:51;;;8615:34:22;-1:-1:-1;;;;;8685:15:22;;;8665:18;;;8658:43;5397:10:15;;-1:-1:-1;5427:15:15;;;;;;8550:18:22;;5427:51:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5482:1;5427:56;5423:150;;5504:53;;-1:-1:-1;;;5504:53:15;;-1:-1:-1;;;;;9093:32:22;;;5504:53:15;;;9075:51:22;-1:-1:-1;;9142:18:22;;;9135:34;5504:13:15;;;;;9048:18:22;;5504:53:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5423:150;-1:-1:-1;4977:3:15;;4937:647;;;;5601:4;5594:11;;;4572:1041;;;;;:::o;14:127:22:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:275;217:2;211:9;282:2;263:13;;-1:-1:-1;;259:27:22;247:40;;-1:-1:-1;;;;;302:34:22;;338:22;;;299:62;296:88;;;364:18;;:::i;:::-;400:2;393:22;146:275;;-1:-1:-1;146:275:22:o;426:183::-;486:4;-1:-1:-1;;;;;508:30:22;;505:56;;;541:18;;:::i;:::-;-1:-1:-1;586:1:22;582:14;598:4;578:25;;426:183::o;614:177::-;693:13;;-1:-1:-1;;;;;735:31:22;;725:42;;715:70;;781:1;778;771:12;715:70;614:177;;;:::o;796:665::-;861:5;914:3;907:4;899:6;895:17;891:27;881:55;;932:1;929;922:12;881:55;961:6;955:13;987:4;1011:60;1027:43;1067:2;1027:43;:::i;:::-;1011:60;:::i;:::-;1093:3;1117:2;1112:3;1105:15;1145:4;1140:3;1136:14;1129:21;;1202:4;1196:2;1193:1;1189:10;1181:6;1177:23;1173:34;1159:48;;1230:3;1222:6;1219:15;1216:35;;;1247:1;1244;1237:12;1216:35;1283:4;1275:6;1271:17;1297:135;1313:6;1308:3;1305:15;1297:135;;;1379:10;;1367:23;;1410:12;;;;1330;;1297:135;;;-1:-1:-1;1450:5:22;796:665;-1:-1:-1;;;;;;796:665:22:o;1466:1305::-;1613:6;1621;1629;1637;1690:3;1678:9;1669:7;1665:23;1661:33;1658:53;;;1707:1;1704;1697:12;1658:53;1734:16;;-1:-1:-1;;;;;1799:14:22;;;1796:34;;;1826:1;1823;1816:12;1796:34;1864:6;1853:9;1849:22;1839:32;;1909:7;1902:4;1898:2;1894:13;1890:27;1880:55;;1931:1;1928;1921:12;1880:55;1960:2;1954:9;1982:4;2006:60;2022:43;2062:2;2022:43;:::i;2006:60::-;2100:15;;;2182:1;2178:10;;;;2170:19;;2166:28;;;2131:12;;;;2206:19;;;2203:39;;;2238:1;2235;2228:12;2203:39;2262:11;;;;2282:159;2298:6;2293:3;2290:15;2282:159;;;2364:34;2394:3;2364:34;:::i;:::-;2352:47;;2315:12;;;;2419;;;;2282:159;;;2496:18;;;2490:25;2460:5;;-1:-1:-1;2490:25:22;;-1:-1:-1;;;2527:16:22;;;2524:36;;;2556:1;2553;2546:12;2524:36;;2579:74;2645:7;2634:8;2623:9;2619:24;2579:74;:::i;:::-;2569:84;;;2693:2;2682:9;2678:18;2672:25;2662:35;;2716:49;2761:2;2750:9;2746:18;2716:49;:::i;:::-;2706:59;;1466:1305;;;;;;;:::o;2776:380::-;2855:1;2851:12;;;;2898;;;2919:61;;2973:4;2965:6;2961:17;2951:27;;2919:61;3026:2;3018:6;3015:14;2995:18;2992:38;2989:161;;3072:10;3067:3;3063:20;3060:1;3053:31;3107:4;3104:1;3097:15;3135:4;3132:1;3125:15;2989:161;;2776:380;;;:::o;3287:518::-;3389:2;3384:3;3381:11;3378:421;;;3425:5;3422:1;3415:16;3469:4;3466:1;3456:18;3539:2;3527:10;3523:19;3520:1;3516:27;3510:4;3506:38;3575:4;3563:10;3560:20;3557:47;;;-1:-1:-1;3598:4:22;3557:47;3653:2;3648:3;3644:12;3641:1;3637:20;3631:4;3627:31;3617:41;;3708:81;3726:2;3719:5;3716:13;3708:81;;;3785:1;3771:16;;3752:1;3741:13;3708:81;;;3712:3;;3378:421;3287:518;;;:::o;3981:1345::-;4101:10;;-1:-1:-1;;;;;4123:30:22;;4120:56;;;4156:18;;:::i;:::-;4185:97;4275:6;4235:38;4267:4;4261:11;4235:38;:::i;:::-;4229:4;4185:97;:::i;:::-;4337:4;;4394:2;4383:14;;4411:1;4406:663;;;;5113:1;5130:6;5127:89;;;-1:-1:-1;5182:19:22;;;5176:26;5127:89;-1:-1:-1;;3938:1:22;3934:11;;;3930:24;3926:29;3916:40;3962:1;3958:11;;;3913:57;5229:81;;4376:944;;4406:663;3234:1;3227:14;;;3271:4;3258:18;;-1:-1:-1;;4442:20:22;;;4560:236;4574:7;4571:1;4568:14;4560:236;;;4663:19;;;4657:26;4642:42;;4755:27;;;;4723:1;4711:14;;;;4590:19;;4560:236;;;4564:3;4824:6;4815:7;4812:19;4809:201;;;4885:19;;;4879:26;-1:-1:-1;;4968:1:22;4964:14;;;4980:3;4960:24;4956:37;4952:42;4937:58;4922:74;;4809:201;;;5056:1;5047:6;5044:1;5040:14;5036:22;5030:4;5023:36;4376:944;;;;;3981:1345;;:::o;5681:208::-;5751:6;5804:2;5792:9;5783:7;5779:23;5775:32;5772:52;;;5820:1;5817;5810:12;5772:52;5843:40;5873:9;5843:40;:::i;:::-;5833:50;5681:208;-1:-1:-1;;;5681:208:22:o;6249:127::-;6310:10;6305:3;6301:20;6298:1;6291:31;6341:4;6338:1;6331:15;6365:4;6362:1;6355:15;6381:222;6446:9;;;6467:10;;;6464:133;;;6519:10;6514:3;6510:20;6507:1;6500:31;6554:4;6551:1;6544:15;6582:4;6579:1;6572:15;8712:184;8782:6;8835:2;8823:9;8814:7;8810:23;8806:32;8803:52;;;8851:1;8848;8841:12;8803:52;-1:-1:-1;8874:16:22;;8712:184;-1:-1:-1;8712:184:22:o;9180:277::-;9247:6;9300:2;9288:9;9279:7;9275:23;9271:32;9268:52;;;9316:1;9313;9306:12;9268:52;9348:9;9342:16;9401:5;9394:13;9387:21;9380:5;9377:32;9367:60;;9423:1;9420;9413:12;9180:277;1808:29167:15;;;;;;"},"deployedBytecode":{"functionDebugData":{"@ONE_2241":{"entryPoint":null,"id":2241,"parameterSlots":0,"returnSlots":0},"@_approve_1542":{"entryPoint":9738,"id":1542,"parameterSlots":3,"returnSlots":0},"@_approve_1602":{"entryPoint":12353,"id":1602,"parameterSlots":4,"returnSlots":0},"@_burn_1524":{"entryPoint":10009,"id":1524,"parameterSlots":2,"returnSlots":0},"@_calculateAmountsToAdd_4476":{"entryPoint":8546,"id":4476,"parameterSlots":2,"returnSlots":1},"@_calculateLiquidity_4515":{"entryPoint":8863,"id":4515,"parameterSlots":2,"returnSlots":1},"@_calculateTotalAddedLiquidity_4410":{"entryPoint":8803,"id":4410,"parameterSlots":1,"returnSlots":1},"@_computeTotalValuation_4149":{"entryPoint":8243,"id":4149,"parameterSlots":0,"returnSlots":2},"@_convertBaseToToken_4532":{"entryPoint":12034,"id":4532,"parameterSlots":2,"returnSlots":1},"@_convertTokenToBase_4549":{"entryPoint":10333,"id":4549,"parameterSlots":2,"returnSlots":1},"@_mint_1491":{"entryPoint":9071,"id":1491,"parameterSlots":2,"returnSlots":0},"@_msgSender_2020":{"entryPoint":null,"id":2020,"parameterSlots":0,"returnSlots":1},"@_nonReentrantAfter_2095":{"entryPoint":null,"id":2095,"parameterSlots":0,"returnSlots":0},"@_nonReentrantBefore_2087":{"entryPoint":9967,"id":2087,"parameterSlots":0,"returnSlots":0},"@_performRebalanceIfNeeded_4379":{"entryPoint":10359,"id":4379,"parameterSlots":0,"returnSlots":2},"@_slippageFunc_3093":{"entryPoint":12594,"id":3093,"parameterSlots":5,"returnSlots":1},"@_slippage_3048":{"entryPoint":10061,"id":3048,"parameterSlots":8,"returnSlots":1},"@_spendAllowance_1650":{"entryPoint":9751,"id":1650,"parameterSlots":3,"returnSlots":0},"@_swappingSlippage_3109":{"entryPoint":10252,"id":3109,"parameterSlots":2,"returnSlots":1},"@_transfer_1381":{"entryPoint":9874,"id":1381,"parameterSlots":3,"returnSlots":0},"@_update_1458":{"entryPoint":12059,"id":1458,"parameterSlots":3,"returnSlots":0},"@allowance_1278":{"entryPoint":null,"id":1278,"parameterSlots":2,"returnSlots":1},"@approve_1302":{"entryPoint":2195,"id":1302,"parameterSlots":2,"returnSlots":1},"@assetInfos_2234":{"entryPoint":6778,"id":2234,"parameterSlots":0,"returnSlots":0},"@assetLiquidity_3831":{"entryPoint":6661,"id":3831,"parameterSlots":1,"returnSlots":1},"@balanceOf_1237":{"entryPoint":null,"id":1237,"parameterSlots":1,"returnSlots":1},"@baseAsset_2243":{"entryPoint":null,"id":2243,"parameterSlots":0,"returnSlots":0},"@burn_3627":{"entryPoint":4601,"id":3627,"parameterSlots":1,"returnSlots":1},"@computeTotalValuation_3852":{"entryPoint":2844,"id":3852,"parameterSlots":0,"returnSlots":2},"@decimals_1215":{"entryPoint":null,"id":1215,"parameterSlots":0,"returnSlots":1},"@getAmountOutWithSlippage_2903":{"entryPoint":6126,"id":2903,"parameterSlots":3,"returnSlots":1},"@getAmountOut_3672":{"entryPoint":2864,"id":3672,"parameterSlots":3,"returnSlots":1},"@getAssetReserve_3968":{"entryPoint":6422,"id":3968,"parameterSlots":1,"returnSlots":1},"@getAssets_4012":{"entryPoint":3321,"id":4012,"parameterSlots":0,"returnSlots":1},"@getDeviation_3802":{"entryPoint":4160,"id":3802,"parameterSlots":0,"returnSlots":2},"@getReserves_3942":{"entryPoint":1963,"id":3942,"parameterSlots":0,"returnSlots":1},"@getSlippage_3146":{"entryPoint":2220,"id":3146,"parameterSlots":1,"returnSlots":1},"@getSlippages_3287":{"entryPoint":2351,"id":3287,"parameterSlots":0,"returnSlots":1},"@getTokenWeight_2939":{"entryPoint":2721,"id":2939,"parameterSlots":1,"returnSlots":1},"@getWeights_4056":{"entryPoint":2527,"id":4056,"parameterSlots":0,"returnSlots":1},"@isRebalanceNeeded_4595":{"entryPoint":5989,"id":4595,"parameterSlots":0,"returnSlots":1},"@liquidity_3866":{"entryPoint":2510,"id":3866,"parameterSlots":0,"returnSlots":1},"@mint_3454":{"entryPoint":6837,"id":3454,"parameterSlots":2,"returnSlots":1},"@name_1197":{"entryPoint":1231,"id":1197,"parameterSlots":0,"returnSlots":1},"@performRebalanceIfNeeded_3694":{"entryPoint":7989,"id":3694,"parameterSlots":0,"returnSlots":2},"@rebalanceWeights_2676":{"entryPoint":1375,"id":2676,"parameterSlots":1,"returnSlots":1},"@registry_2248":{"entryPoint":null,"id":2248,"parameterSlots":0,"returnSlots":0},"@rmul_5623":{"entryPoint":12831,"id":5623,"parameterSlots":2,"returnSlots":1},"@rpow_5598":{"entryPoint":12712,"id":5598,"parameterSlots":2,"returnSlots":1},"@swap_2768":{"entryPoint":3507,"id":2768,"parameterSlots":4,"returnSlots":1},"@symbol_1206":{"entryPoint":6111,"id":1206,"parameterSlots":0,"returnSlots":1},"@totalSupply_1224":{"entryPoint":null,"id":1224,"parameterSlots":0,"returnSlots":1},"@transferFrom_1334":{"entryPoint":2686,"id":1334,"parameterSlots":3,"returnSlots":1},"@transfer_1261":{"entryPoint":6409,"id":1261,"parameterSlots":2,"returnSlots":1},"@trigger_2239":{"entryPoint":null,"id":2239,"parameterSlots":0,"returnSlots":0},"@unitPrice_3918":{"entryPoint":7757,"id":3918,"parameterSlots":0,"returnSlots":1},"@updateSlippage_3244":{"entryPoint":9127,"id":3244,"parameterSlots":0,"returnSlots":0},"@wdiv_5530":{"entryPoint":12563,"id":5530,"parameterSlots":2,"returnSlots":1},"@wmul_5507":{"entryPoint":10282,"id":5507,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":12932,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":13827,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":13419,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":13077,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_address":{"entryPoint":13237,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_addresst_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":13576,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":13035,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr_fromMemory":{"entryPoint":13957,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":14177,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":13396,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":14096,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint8_fromMemory":{"entryPoint":14227,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_array_address_dyn":{"entryPoint":13163,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_array_uint256_dyn":{"entryPoint":12959,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":13219,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_array$_t_bool_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_bool_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":13317,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":13017,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_uint256_t_address_t_address_t_address__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_uint256_t_address_t_address_t_address__fromStack_reversed":{"entryPoint":14494,"id":null,"parameterSlots":8,"returnSlots":1},"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":13741,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_IBaluniV1Registry_$5472__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":12856,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_195739df032cb3c07c5ed70a4cae73c5d077df4296263c6db3d1f3b4671efbd0__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_231381c7ce9cab5a06140be844586c7572b2dd117d8de83c9f9bda39108cd19d__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_293eab1376cea4527a492c75c5b4d240032b8920c86961428e65758e4fd3daec__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_379a432f00aa43993bfbf4e01492a8eab5138dcd2e395864ede728644390fc31__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_37b2136db8906a0fa9dcfb36fa22f3e5724d70ae1dfd30e29853723b16bc684b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_50327403b25acc6e0d15796c676b8320f8d9ffcece005326d31f4226e4f741bb__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_5ce83e457e48ac9624285a3c527b5c2f9ccbef788eaf8b73a2271dc0a760bc56__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_6f3b6914a8f4e42f0dc4d6fcf60d1470463793693c123b4b0782b9cd43668c23__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_788ce755d61da147edad70af92467c8a383af859573990e9defde5b6e0bdf24d__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_7fe042c7e90969a67f580740cd6d07f084ba832097aca9eaaa282ad95462461f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_85d32796faf4bbe37cfdb7e983d4048fee52ebcfc8d2f22a939ce47e85d98ae8__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9500bef01f061c69a5831abd395429bc0d4bf975a9340af0622098e5d0422cc6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_a245c00c976af272c663e732300fe860097516364a0d92887494f54e860fa54c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b5c25d5c4ca6addfa23ca815554bb7bee3a9885ce01501a275168a62aa7cded3__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_e4fcae9c0286e861087281117e0a3185ced905823104b290e1fe3ba826d8d280__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_e84ca658204d8225a6124393bf429fae79ddb71fa88578d833d3a2b9b5da52d2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13854,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_e8ec4a06d76118e3b24afbc30b183e086aa6aaa6e137c81160fc8d59e1a33e3f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f8b105b0b4a7ff5c11f41135d6d4600fd47da6168663f6cb1810745b08d83918__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_fc2f8692ca59eb8838d740ab96a08e7dab54c967cc56eb0a9b640ce78eb1103e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_array$_t_uint256_$dyn_memory_ptr__to_t_uint256_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":13139,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":13494,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_array_uint256_dyn":{"entryPoint":13542,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":14208,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":14139,"id":null,"parameterSlots":2,"returnSlots":1},"checked_exp_helper":{"entryPoint":14259,"id":null,"parameterSlots":2,"returnSlots":2},"checked_exp_t_uint256_t_uint256":{"entryPoint":14483,"id":null,"parameterSlots":2,"returnSlots":1},"checked_exp_unsigned":{"entryPoint":14325,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":13914,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":14158,"id":null,"parameterSlots":2,"returnSlots":1},"extract_byte_array_length":{"entryPoint":13777,"id":null,"parameterSlots":1,"returnSlots":1},"mod_t_uint256":{"entryPoint":14600,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":13894,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":14119,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":13937,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":13474,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_address":{"entryPoint":12909,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:22999:22","nodeType":"YulBlock","src":"0:22999:22","statements":[{"nativeSrc":"6:3:22","nodeType":"YulBlock","src":"6:3:22","statements":[]},{"body":{"nativeSrc":"135:297:22","nodeType":"YulBlock","src":"135:297:22","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"152:9:22","nodeType":"YulIdentifier","src":"152:9:22"},{"kind":"number","nativeSrc":"163:2:22","nodeType":"YulLiteral","src":"163:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"145:6:22","nodeType":"YulIdentifier","src":"145:6:22"},"nativeSrc":"145:21:22","nodeType":"YulFunctionCall","src":"145:21:22"},"nativeSrc":"145:21:22","nodeType":"YulExpressionStatement","src":"145:21:22"},{"nativeSrc":"175:27:22","nodeType":"YulVariableDeclaration","src":"175:27:22","value":{"arguments":[{"name":"value0","nativeSrc":"195:6:22","nodeType":"YulIdentifier","src":"195:6:22"}],"functionName":{"name":"mload","nativeSrc":"189:5:22","nodeType":"YulIdentifier","src":"189:5:22"},"nativeSrc":"189:13:22","nodeType":"YulFunctionCall","src":"189:13:22"},"variables":[{"name":"length","nativeSrc":"179:6:22","nodeType":"YulTypedName","src":"179:6:22","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"222:9:22","nodeType":"YulIdentifier","src":"222:9:22"},{"kind":"number","nativeSrc":"233:2:22","nodeType":"YulLiteral","src":"233:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"218:3:22","nodeType":"YulIdentifier","src":"218:3:22"},"nativeSrc":"218:18:22","nodeType":"YulFunctionCall","src":"218:18:22"},{"name":"length","nativeSrc":"238:6:22","nodeType":"YulIdentifier","src":"238:6:22"}],"functionName":{"name":"mstore","nativeSrc":"211:6:22","nodeType":"YulIdentifier","src":"211:6:22"},"nativeSrc":"211:34:22","nodeType":"YulFunctionCall","src":"211:34:22"},"nativeSrc":"211:34:22","nodeType":"YulExpressionStatement","src":"211:34:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"264:9:22","nodeType":"YulIdentifier","src":"264:9:22"},{"kind":"number","nativeSrc":"275:2:22","nodeType":"YulLiteral","src":"275:2:22","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"260:3:22","nodeType":"YulIdentifier","src":"260:3:22"},"nativeSrc":"260:18:22","nodeType":"YulFunctionCall","src":"260:18:22"},{"arguments":[{"name":"value0","nativeSrc":"284:6:22","nodeType":"YulIdentifier","src":"284:6:22"},{"kind":"number","nativeSrc":"292:2:22","nodeType":"YulLiteral","src":"292:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"280:3:22","nodeType":"YulIdentifier","src":"280:3:22"},"nativeSrc":"280:15:22","nodeType":"YulFunctionCall","src":"280:15:22"},{"name":"length","nativeSrc":"297:6:22","nodeType":"YulIdentifier","src":"297:6:22"}],"functionName":{"name":"mcopy","nativeSrc":"254:5:22","nodeType":"YulIdentifier","src":"254:5:22"},"nativeSrc":"254:50:22","nodeType":"YulFunctionCall","src":"254:50:22"},"nativeSrc":"254:50:22","nodeType":"YulExpressionStatement","src":"254:50:22"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"328:9:22","nodeType":"YulIdentifier","src":"328:9:22"},{"name":"length","nativeSrc":"339:6:22","nodeType":"YulIdentifier","src":"339:6:22"}],"functionName":{"name":"add","nativeSrc":"324:3:22","nodeType":"YulIdentifier","src":"324:3:22"},"nativeSrc":"324:22:22","nodeType":"YulFunctionCall","src":"324:22:22"},{"kind":"number","nativeSrc":"348:2:22","nodeType":"YulLiteral","src":"348:2:22","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"320:3:22","nodeType":"YulIdentifier","src":"320:3:22"},"nativeSrc":"320:31:22","nodeType":"YulFunctionCall","src":"320:31:22"},{"kind":"number","nativeSrc":"353:1:22","nodeType":"YulLiteral","src":"353:1:22","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"313:6:22","nodeType":"YulIdentifier","src":"313:6:22"},"nativeSrc":"313:42:22","nodeType":"YulFunctionCall","src":"313:42:22"},"nativeSrc":"313:42:22","nodeType":"YulExpressionStatement","src":"313:42:22"},{"nativeSrc":"364:62:22","nodeType":"YulAssignment","src":"364:62:22","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"380:9:22","nodeType":"YulIdentifier","src":"380:9:22"},{"arguments":[{"arguments":[{"name":"length","nativeSrc":"399:6:22","nodeType":"YulIdentifier","src":"399:6:22"},{"kind":"number","nativeSrc":"407:2:22","nodeType":"YulLiteral","src":"407:2:22","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"395:3:22","nodeType":"YulIdentifier","src":"395:3:22"},"nativeSrc":"395:15:22","nodeType":"YulFunctionCall","src":"395:15:22"},{"arguments":[{"kind":"number","nativeSrc":"416:2:22","nodeType":"YulLiteral","src":"416:2:22","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"412:3:22","nodeType":"YulIdentifier","src":"412:3:22"},"nativeSrc":"412:7:22","nodeType":"YulFunctionCall","src":"412:7:22"}],"functionName":{"name":"and","nativeSrc":"391:3:22","nodeType":"YulIdentifier","src":"391:3:22"},"nativeSrc":"391:29:22","nodeType":"YulFunctionCall","src":"391:29:22"}],"functionName":{"name":"add","nativeSrc":"376:3:22","nodeType":"YulIdentifier","src":"376:3:22"},"nativeSrc":"376:45:22","nodeType":"YulFunctionCall","src":"376:45:22"},{"kind":"number","nativeSrc":"423:2:22","nodeType":"YulLiteral","src":"423:2:22","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"372:3:22","nodeType":"YulIdentifier","src":"372:3:22"},"nativeSrc":"372:54:22","nodeType":"YulFunctionCall","src":"372:54:22"},"variableNames":[{"name":"tail","nativeSrc":"364:4:22","nodeType":"YulIdentifier","src":"364:4:22"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"14:418:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"104:9:22","nodeType":"YulTypedName","src":"104:9:22","type":""},{"name":"value0","nativeSrc":"115:6:22","nodeType":"YulTypedName","src":"115:6:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"126:4:22","nodeType":"YulTypedName","src":"126:4:22","type":""}],"src":"14:418:22"},{"body":{"nativeSrc":"482:86:22","nodeType":"YulBlock","src":"482:86:22","statements":[{"body":{"nativeSrc":"546:16:22","nodeType":"YulBlock","src":"546:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"555:1:22","nodeType":"YulLiteral","src":"555:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"558:1:22","nodeType":"YulLiteral","src":"558:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"548:6:22","nodeType":"YulIdentifier","src":"548:6:22"},"nativeSrc":"548:12:22","nodeType":"YulFunctionCall","src":"548:12:22"},"nativeSrc":"548:12:22","nodeType":"YulExpressionStatement","src":"548:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"505:5:22","nodeType":"YulIdentifier","src":"505:5:22"},{"arguments":[{"name":"value","nativeSrc":"516:5:22","nodeType":"YulIdentifier","src":"516:5:22"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"531:3:22","nodeType":"YulLiteral","src":"531:3:22","type":"","value":"160"},{"kind":"number","nativeSrc":"536:1:22","nodeType":"YulLiteral","src":"536:1:22","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"527:3:22","nodeType":"YulIdentifier","src":"527:3:22"},"nativeSrc":"527:11:22","nodeType":"YulFunctionCall","src":"527:11:22"},{"kind":"number","nativeSrc":"540:1:22","nodeType":"YulLiteral","src":"540:1:22","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"523:3:22","nodeType":"YulIdentifier","src":"523:3:22"},"nativeSrc":"523:19:22","nodeType":"YulFunctionCall","src":"523:19:22"}],"functionName":{"name":"and","nativeSrc":"512:3:22","nodeType":"YulIdentifier","src":"512:3:22"},"nativeSrc":"512:31:22","nodeType":"YulFunctionCall","src":"512:31:22"}],"functionName":{"name":"eq","nativeSrc":"502:2:22","nodeType":"YulIdentifier","src":"502:2:22"},"nativeSrc":"502:42:22","nodeType":"YulFunctionCall","src":"502:42:22"}],"functionName":{"name":"iszero","nativeSrc":"495:6:22","nodeType":"YulIdentifier","src":"495:6:22"},"nativeSrc":"495:50:22","nodeType":"YulFunctionCall","src":"495:50:22"},"nativeSrc":"492:70:22","nodeType":"YulIf","src":"492:70:22"}]},"name":"validator_revert_address","nativeSrc":"437:131:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"471:5:22","nodeType":"YulTypedName","src":"471:5:22","type":""}],"src":"437:131:22"},{"body":{"nativeSrc":"643:177:22","nodeType":"YulBlock","src":"643:177:22","statements":[{"body":{"nativeSrc":"689:16:22","nodeType":"YulBlock","src":"689:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"698:1:22","nodeType":"YulLiteral","src":"698:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"701:1:22","nodeType":"YulLiteral","src":"701:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"691:6:22","nodeType":"YulIdentifier","src":"691:6:22"},"nativeSrc":"691:12:22","nodeType":"YulFunctionCall","src":"691:12:22"},"nativeSrc":"691:12:22","nodeType":"YulExpressionStatement","src":"691:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"664:7:22","nodeType":"YulIdentifier","src":"664:7:22"},{"name":"headStart","nativeSrc":"673:9:22","nodeType":"YulIdentifier","src":"673:9:22"}],"functionName":{"name":"sub","nativeSrc":"660:3:22","nodeType":"YulIdentifier","src":"660:3:22"},"nativeSrc":"660:23:22","nodeType":"YulFunctionCall","src":"660:23:22"},{"kind":"number","nativeSrc":"685:2:22","nodeType":"YulLiteral","src":"685:2:22","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"656:3:22","nodeType":"YulIdentifier","src":"656:3:22"},"nativeSrc":"656:32:22","nodeType":"YulFunctionCall","src":"656:32:22"},"nativeSrc":"653:52:22","nodeType":"YulIf","src":"653:52:22"},{"nativeSrc":"714:36:22","nodeType":"YulVariableDeclaration","src":"714:36:22","value":{"arguments":[{"name":"headStart","nativeSrc":"740:9:22","nodeType":"YulIdentifier","src":"740:9:22"}],"functionName":{"name":"calldataload","nativeSrc":"727:12:22","nodeType":"YulIdentifier","src":"727:12:22"},"nativeSrc":"727:23:22","nodeType":"YulFunctionCall","src":"727:23:22"},"variables":[{"name":"value","nativeSrc":"718:5:22","nodeType":"YulTypedName","src":"718:5:22","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"784:5:22","nodeType":"YulIdentifier","src":"784:5:22"}],"functionName":{"name":"validator_revert_address","nativeSrc":"759:24:22","nodeType":"YulIdentifier","src":"759:24:22"},"nativeSrc":"759:31:22","nodeType":"YulFunctionCall","src":"759:31:22"},"nativeSrc":"759:31:22","nodeType":"YulExpressionStatement","src":"759:31:22"},{"nativeSrc":"799:15:22","nodeType":"YulAssignment","src":"799:15:22","value":{"name":"value","nativeSrc":"809:5:22","nodeType":"YulIdentifier","src":"809:5:22"},"variableNames":[{"name":"value0","nativeSrc":"799:6:22","nodeType":"YulIdentifier","src":"799:6:22"}]}]},"name":"abi_decode_tuple_t_address","nativeSrc":"573:247:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"609:9:22","nodeType":"YulTypedName","src":"609:9:22","type":""},{"name":"dataEnd","nativeSrc":"620:7:22","nodeType":"YulTypedName","src":"620:7:22","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"632:6:22","nodeType":"YulTypedName","src":"632:6:22","type":""}],"src":"573:247:22"},{"body":{"nativeSrc":"886:378:22","nodeType":"YulBlock","src":"886:378:22","statements":[{"nativeSrc":"896:26:22","nodeType":"YulVariableDeclaration","src":"896:26:22","value":{"arguments":[{"name":"value","nativeSrc":"916:5:22","nodeType":"YulIdentifier","src":"916:5:22"}],"functionName":{"name":"mload","nativeSrc":"910:5:22","nodeType":"YulIdentifier","src":"910:5:22"},"nativeSrc":"910:12:22","nodeType":"YulFunctionCall","src":"910:12:22"},"variables":[{"name":"length","nativeSrc":"900:6:22","nodeType":"YulTypedName","src":"900:6:22","type":""}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"938:3:22","nodeType":"YulIdentifier","src":"938:3:22"},{"name":"length","nativeSrc":"943:6:22","nodeType":"YulIdentifier","src":"943:6:22"}],"functionName":{"name":"mstore","nativeSrc":"931:6:22","nodeType":"YulIdentifier","src":"931:6:22"},"nativeSrc":"931:19:22","nodeType":"YulFunctionCall","src":"931:19:22"},"nativeSrc":"931:19:22","nodeType":"YulExpressionStatement","src":"931:19:22"},{"nativeSrc":"959:14:22","nodeType":"YulVariableDeclaration","src":"959:14:22","value":{"kind":"number","nativeSrc":"969:4:22","nodeType":"YulLiteral","src":"969:4:22","type":"","value":"0x20"},"variables":[{"name":"_1","nativeSrc":"963:2:22","nodeType":"YulTypedName","src":"963:2:22","type":""}]},{"nativeSrc":"982:21:22","nodeType":"YulAssignment","src":"982:21:22","value":{"arguments":[{"name":"pos","nativeSrc":"993:3:22","nodeType":"YulIdentifier","src":"993:3:22"},{"kind":"number","nativeSrc":"998:4:22","nodeType":"YulLiteral","src":"998:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"989:3:22","nodeType":"YulIdentifier","src":"989:3:22"},"nativeSrc":"989:14:22","nodeType":"YulFunctionCall","src":"989:14:22"},"variableNames":[{"name":"pos","nativeSrc":"982:3:22","nodeType":"YulIdentifier","src":"982:3:22"}]},{"nativeSrc":"1012:30:22","nodeType":"YulVariableDeclaration","src":"1012:30:22","value":{"arguments":[{"name":"value","nativeSrc":"1030:5:22","nodeType":"YulIdentifier","src":"1030:5:22"},{"kind":"number","nativeSrc":"1037:4:22","nodeType":"YulLiteral","src":"1037:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1026:3:22","nodeType":"YulIdentifier","src":"1026:3:22"},"nativeSrc":"1026:16:22","nodeType":"YulFunctionCall","src":"1026:16:22"},"variables":[{"name":"srcPtr","nativeSrc":"1016:6:22","nodeType":"YulTypedName","src":"1016:6:22","type":""}]},{"nativeSrc":"1051:10:22","nodeType":"YulVariableDeclaration","src":"1051:10:22","value":{"kind":"number","nativeSrc":"1060:1:22","nodeType":"YulLiteral","src":"1060:1:22","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"1055:1:22","nodeType":"YulTypedName","src":"1055:1:22","type":""}]},{"body":{"nativeSrc":"1119:120:22","nodeType":"YulBlock","src":"1119:120:22","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"1140:3:22","nodeType":"YulIdentifier","src":"1140:3:22"},{"arguments":[{"name":"srcPtr","nativeSrc":"1151:6:22","nodeType":"YulIdentifier","src":"1151:6:22"}],"functionName":{"name":"mload","nativeSrc":"1145:5:22","nodeType":"YulIdentifier","src":"1145:5:22"},"nativeSrc":"1145:13:22","nodeType":"YulFunctionCall","src":"1145:13:22"}],"functionName":{"name":"mstore","nativeSrc":"1133:6:22","nodeType":"YulIdentifier","src":"1133:6:22"},"nativeSrc":"1133:26:22","nodeType":"YulFunctionCall","src":"1133:26:22"},"nativeSrc":"1133:26:22","nodeType":"YulExpressionStatement","src":"1133:26:22"},{"nativeSrc":"1172:19:22","nodeType":"YulAssignment","src":"1172:19:22","value":{"arguments":[{"name":"pos","nativeSrc":"1183:3:22","nodeType":"YulIdentifier","src":"1183:3:22"},{"name":"_1","nativeSrc":"1188:2:22","nodeType":"YulIdentifier","src":"1188:2:22"}],"functionName":{"name":"add","nativeSrc":"1179:3:22","nodeType":"YulIdentifier","src":"1179:3:22"},"nativeSrc":"1179:12:22","nodeType":"YulFunctionCall","src":"1179:12:22"},"variableNames":[{"name":"pos","nativeSrc":"1172:3:22","nodeType":"YulIdentifier","src":"1172:3:22"}]},{"nativeSrc":"1204:25:22","nodeType":"YulAssignment","src":"1204:25:22","value":{"arguments":[{"name":"srcPtr","nativeSrc":"1218:6:22","nodeType":"YulIdentifier","src":"1218:6:22"},{"name":"_1","nativeSrc":"1226:2:22","nodeType":"YulIdentifier","src":"1226:2:22"}],"functionName":{"name":"add","nativeSrc":"1214:3:22","nodeType":"YulIdentifier","src":"1214:3:22"},"nativeSrc":"1214:15:22","nodeType":"YulFunctionCall","src":"1214:15:22"},"variableNames":[{"name":"srcPtr","nativeSrc":"1204:6:22","nodeType":"YulIdentifier","src":"1204:6:22"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"1081:1:22","nodeType":"YulIdentifier","src":"1081:1:22"},{"name":"length","nativeSrc":"1084:6:22","nodeType":"YulIdentifier","src":"1084:6:22"}],"functionName":{"name":"lt","nativeSrc":"1078:2:22","nodeType":"YulIdentifier","src":"1078:2:22"},"nativeSrc":"1078:13:22","nodeType":"YulFunctionCall","src":"1078:13:22"},"nativeSrc":"1070:169:22","nodeType":"YulForLoop","post":{"nativeSrc":"1092:18:22","nodeType":"YulBlock","src":"1092:18:22","statements":[{"nativeSrc":"1094:14:22","nodeType":"YulAssignment","src":"1094:14:22","value":{"arguments":[{"name":"i","nativeSrc":"1103:1:22","nodeType":"YulIdentifier","src":"1103:1:22"},{"kind":"number","nativeSrc":"1106:1:22","nodeType":"YulLiteral","src":"1106:1:22","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"1099:3:22","nodeType":"YulIdentifier","src":"1099:3:22"},"nativeSrc":"1099:9:22","nodeType":"YulFunctionCall","src":"1099:9:22"},"variableNames":[{"name":"i","nativeSrc":"1094:1:22","nodeType":"YulIdentifier","src":"1094:1:22"}]}]},"pre":{"nativeSrc":"1074:3:22","nodeType":"YulBlock","src":"1074:3:22","statements":[]},"src":"1070:169:22"},{"nativeSrc":"1248:10:22","nodeType":"YulAssignment","src":"1248:10:22","value":{"name":"pos","nativeSrc":"1255:3:22","nodeType":"YulIdentifier","src":"1255:3:22"},"variableNames":[{"name":"end","nativeSrc":"1248:3:22","nodeType":"YulIdentifier","src":"1248:3:22"}]}]},"name":"abi_encode_array_uint256_dyn","nativeSrc":"825:439:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"863:5:22","nodeType":"YulTypedName","src":"863:5:22","type":""},{"name":"pos","nativeSrc":"870:3:22","nodeType":"YulTypedName","src":"870:3:22","type":""}],"returnVariables":[{"name":"end","nativeSrc":"878:3:22","nodeType":"YulTypedName","src":"878:3:22","type":""}],"src":"825:439:22"},{"body":{"nativeSrc":"1420:110:22","nodeType":"YulBlock","src":"1420:110:22","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"1437:9:22","nodeType":"YulIdentifier","src":"1437:9:22"},{"kind":"number","nativeSrc":"1448:2:22","nodeType":"YulLiteral","src":"1448:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"1430:6:22","nodeType":"YulIdentifier","src":"1430:6:22"},"nativeSrc":"1430:21:22","nodeType":"YulFunctionCall","src":"1430:21:22"},"nativeSrc":"1430:21:22","nodeType":"YulExpressionStatement","src":"1430:21:22"},{"nativeSrc":"1460:64:22","nodeType":"YulAssignment","src":"1460:64:22","value":{"arguments":[{"name":"value0","nativeSrc":"1497:6:22","nodeType":"YulIdentifier","src":"1497:6:22"},{"arguments":[{"name":"headStart","nativeSrc":"1509:9:22","nodeType":"YulIdentifier","src":"1509:9:22"},{"kind":"number","nativeSrc":"1520:2:22","nodeType":"YulLiteral","src":"1520:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1505:3:22","nodeType":"YulIdentifier","src":"1505:3:22"},"nativeSrc":"1505:18:22","nodeType":"YulFunctionCall","src":"1505:18:22"}],"functionName":{"name":"abi_encode_array_uint256_dyn","nativeSrc":"1468:28:22","nodeType":"YulIdentifier","src":"1468:28:22"},"nativeSrc":"1468:56:22","nodeType":"YulFunctionCall","src":"1468:56:22"},"variableNames":[{"name":"tail","nativeSrc":"1460:4:22","nodeType":"YulIdentifier","src":"1460:4:22"}]}]},"name":"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nativeSrc":"1269:261:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1389:9:22","nodeType":"YulTypedName","src":"1389:9:22","type":""},{"name":"value0","nativeSrc":"1400:6:22","nodeType":"YulTypedName","src":"1400:6:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1411:4:22","nodeType":"YulTypedName","src":"1411:4:22","type":""}],"src":"1269:261:22"},{"body":{"nativeSrc":"1622:228:22","nodeType":"YulBlock","src":"1622:228:22","statements":[{"body":{"nativeSrc":"1668:16:22","nodeType":"YulBlock","src":"1668:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1677:1:22","nodeType":"YulLiteral","src":"1677:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"1680:1:22","nodeType":"YulLiteral","src":"1680:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1670:6:22","nodeType":"YulIdentifier","src":"1670:6:22"},"nativeSrc":"1670:12:22","nodeType":"YulFunctionCall","src":"1670:12:22"},"nativeSrc":"1670:12:22","nodeType":"YulExpressionStatement","src":"1670:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"1643:7:22","nodeType":"YulIdentifier","src":"1643:7:22"},{"name":"headStart","nativeSrc":"1652:9:22","nodeType":"YulIdentifier","src":"1652:9:22"}],"functionName":{"name":"sub","nativeSrc":"1639:3:22","nodeType":"YulIdentifier","src":"1639:3:22"},"nativeSrc":"1639:23:22","nodeType":"YulFunctionCall","src":"1639:23:22"},{"kind":"number","nativeSrc":"1664:2:22","nodeType":"YulLiteral","src":"1664:2:22","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"1635:3:22","nodeType":"YulIdentifier","src":"1635:3:22"},"nativeSrc":"1635:32:22","nodeType":"YulFunctionCall","src":"1635:32:22"},"nativeSrc":"1632:52:22","nodeType":"YulIf","src":"1632:52:22"},{"nativeSrc":"1693:36:22","nodeType":"YulVariableDeclaration","src":"1693:36:22","value":{"arguments":[{"name":"headStart","nativeSrc":"1719:9:22","nodeType":"YulIdentifier","src":"1719:9:22"}],"functionName":{"name":"calldataload","nativeSrc":"1706:12:22","nodeType":"YulIdentifier","src":"1706:12:22"},"nativeSrc":"1706:23:22","nodeType":"YulFunctionCall","src":"1706:23:22"},"variables":[{"name":"value","nativeSrc":"1697:5:22","nodeType":"YulTypedName","src":"1697:5:22","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"1763:5:22","nodeType":"YulIdentifier","src":"1763:5:22"}],"functionName":{"name":"validator_revert_address","nativeSrc":"1738:24:22","nodeType":"YulIdentifier","src":"1738:24:22"},"nativeSrc":"1738:31:22","nodeType":"YulFunctionCall","src":"1738:31:22"},"nativeSrc":"1738:31:22","nodeType":"YulExpressionStatement","src":"1738:31:22"},{"nativeSrc":"1778:15:22","nodeType":"YulAssignment","src":"1778:15:22","value":{"name":"value","nativeSrc":"1788:5:22","nodeType":"YulIdentifier","src":"1788:5:22"},"variableNames":[{"name":"value0","nativeSrc":"1778:6:22","nodeType":"YulIdentifier","src":"1778:6:22"}]},{"nativeSrc":"1802:42:22","nodeType":"YulAssignment","src":"1802:42:22","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1829:9:22","nodeType":"YulIdentifier","src":"1829:9:22"},{"kind":"number","nativeSrc":"1840:2:22","nodeType":"YulLiteral","src":"1840:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1825:3:22","nodeType":"YulIdentifier","src":"1825:3:22"},"nativeSrc":"1825:18:22","nodeType":"YulFunctionCall","src":"1825:18:22"}],"functionName":{"name":"calldataload","nativeSrc":"1812:12:22","nodeType":"YulIdentifier","src":"1812:12:22"},"nativeSrc":"1812:32:22","nodeType":"YulFunctionCall","src":"1812:32:22"},"variableNames":[{"name":"value1","nativeSrc":"1802:6:22","nodeType":"YulIdentifier","src":"1802:6:22"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nativeSrc":"1535:315:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1580:9:22","nodeType":"YulTypedName","src":"1580:9:22","type":""},{"name":"dataEnd","nativeSrc":"1591:7:22","nodeType":"YulTypedName","src":"1591:7:22","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"1603:6:22","nodeType":"YulTypedName","src":"1603:6:22","type":""},{"name":"value1","nativeSrc":"1611:6:22","nodeType":"YulTypedName","src":"1611:6:22","type":""}],"src":"1535:315:22"},{"body":{"nativeSrc":"1950:92:22","nodeType":"YulBlock","src":"1950:92:22","statements":[{"nativeSrc":"1960:26:22","nodeType":"YulAssignment","src":"1960:26:22","value":{"arguments":[{"name":"headStart","nativeSrc":"1972:9:22","nodeType":"YulIdentifier","src":"1972:9:22"},{"kind":"number","nativeSrc":"1983:2:22","nodeType":"YulLiteral","src":"1983:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1968:3:22","nodeType":"YulIdentifier","src":"1968:3:22"},"nativeSrc":"1968:18:22","nodeType":"YulFunctionCall","src":"1968:18:22"},"variableNames":[{"name":"tail","nativeSrc":"1960:4:22","nodeType":"YulIdentifier","src":"1960:4:22"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"2002:9:22","nodeType":"YulIdentifier","src":"2002:9:22"},{"arguments":[{"arguments":[{"name":"value0","nativeSrc":"2027:6:22","nodeType":"YulIdentifier","src":"2027:6:22"}],"functionName":{"name":"iszero","nativeSrc":"2020:6:22","nodeType":"YulIdentifier","src":"2020:6:22"},"nativeSrc":"2020:14:22","nodeType":"YulFunctionCall","src":"2020:14:22"}],"functionName":{"name":"iszero","nativeSrc":"2013:6:22","nodeType":"YulIdentifier","src":"2013:6:22"},"nativeSrc":"2013:22:22","nodeType":"YulFunctionCall","src":"2013:22:22"}],"functionName":{"name":"mstore","nativeSrc":"1995:6:22","nodeType":"YulIdentifier","src":"1995:6:22"},"nativeSrc":"1995:41:22","nodeType":"YulFunctionCall","src":"1995:41:22"},"nativeSrc":"1995:41:22","nodeType":"YulExpressionStatement","src":"1995:41:22"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nativeSrc":"1855:187:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1919:9:22","nodeType":"YulTypedName","src":"1919:9:22","type":""},{"name":"value0","nativeSrc":"1930:6:22","nodeType":"YulTypedName","src":"1930:6:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1941:4:22","nodeType":"YulTypedName","src":"1941:4:22","type":""}],"src":"1855:187:22"},{"body":{"nativeSrc":"2148:76:22","nodeType":"YulBlock","src":"2148:76:22","statements":[{"nativeSrc":"2158:26:22","nodeType":"YulAssignment","src":"2158:26:22","value":{"arguments":[{"name":"headStart","nativeSrc":"2170:9:22","nodeType":"YulIdentifier","src":"2170:9:22"},{"kind":"number","nativeSrc":"2181:2:22","nodeType":"YulLiteral","src":"2181:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2166:3:22","nodeType":"YulIdentifier","src":"2166:3:22"},"nativeSrc":"2166:18:22","nodeType":"YulFunctionCall","src":"2166:18:22"},"variableNames":[{"name":"tail","nativeSrc":"2158:4:22","nodeType":"YulIdentifier","src":"2158:4:22"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"2200:9:22","nodeType":"YulIdentifier","src":"2200:9:22"},{"name":"value0","nativeSrc":"2211:6:22","nodeType":"YulIdentifier","src":"2211:6:22"}],"functionName":{"name":"mstore","nativeSrc":"2193:6:22","nodeType":"YulIdentifier","src":"2193:6:22"},"nativeSrc":"2193:25:22","nodeType":"YulFunctionCall","src":"2193:25:22"},"nativeSrc":"2193:25:22","nodeType":"YulExpressionStatement","src":"2193:25:22"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"2047:177:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2117:9:22","nodeType":"YulTypedName","src":"2117:9:22","type":""},{"name":"value0","nativeSrc":"2128:6:22","nodeType":"YulTypedName","src":"2128:6:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2139:4:22","nodeType":"YulTypedName","src":"2139:4:22","type":""}],"src":"2047:177:22"},{"body":{"nativeSrc":"2333:352:22","nodeType":"YulBlock","src":"2333:352:22","statements":[{"body":{"nativeSrc":"2379:16:22","nodeType":"YulBlock","src":"2379:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2388:1:22","nodeType":"YulLiteral","src":"2388:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"2391:1:22","nodeType":"YulLiteral","src":"2391:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2381:6:22","nodeType":"YulIdentifier","src":"2381:6:22"},"nativeSrc":"2381:12:22","nodeType":"YulFunctionCall","src":"2381:12:22"},"nativeSrc":"2381:12:22","nodeType":"YulExpressionStatement","src":"2381:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2354:7:22","nodeType":"YulIdentifier","src":"2354:7:22"},{"name":"headStart","nativeSrc":"2363:9:22","nodeType":"YulIdentifier","src":"2363:9:22"}],"functionName":{"name":"sub","nativeSrc":"2350:3:22","nodeType":"YulIdentifier","src":"2350:3:22"},"nativeSrc":"2350:23:22","nodeType":"YulFunctionCall","src":"2350:23:22"},{"kind":"number","nativeSrc":"2375:2:22","nodeType":"YulLiteral","src":"2375:2:22","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"2346:3:22","nodeType":"YulIdentifier","src":"2346:3:22"},"nativeSrc":"2346:32:22","nodeType":"YulFunctionCall","src":"2346:32:22"},"nativeSrc":"2343:52:22","nodeType":"YulIf","src":"2343:52:22"},{"nativeSrc":"2404:36:22","nodeType":"YulVariableDeclaration","src":"2404:36:22","value":{"arguments":[{"name":"headStart","nativeSrc":"2430:9:22","nodeType":"YulIdentifier","src":"2430:9:22"}],"functionName":{"name":"calldataload","nativeSrc":"2417:12:22","nodeType":"YulIdentifier","src":"2417:12:22"},"nativeSrc":"2417:23:22","nodeType":"YulFunctionCall","src":"2417:23:22"},"variables":[{"name":"value","nativeSrc":"2408:5:22","nodeType":"YulTypedName","src":"2408:5:22","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"2474:5:22","nodeType":"YulIdentifier","src":"2474:5:22"}],"functionName":{"name":"validator_revert_address","nativeSrc":"2449:24:22","nodeType":"YulIdentifier","src":"2449:24:22"},"nativeSrc":"2449:31:22","nodeType":"YulFunctionCall","src":"2449:31:22"},"nativeSrc":"2449:31:22","nodeType":"YulExpressionStatement","src":"2449:31:22"},{"nativeSrc":"2489:15:22","nodeType":"YulAssignment","src":"2489:15:22","value":{"name":"value","nativeSrc":"2499:5:22","nodeType":"YulIdentifier","src":"2499:5:22"},"variableNames":[{"name":"value0","nativeSrc":"2489:6:22","nodeType":"YulIdentifier","src":"2489:6:22"}]},{"nativeSrc":"2513:47:22","nodeType":"YulVariableDeclaration","src":"2513:47:22","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2545:9:22","nodeType":"YulIdentifier","src":"2545:9:22"},{"kind":"number","nativeSrc":"2556:2:22","nodeType":"YulLiteral","src":"2556:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2541:3:22","nodeType":"YulIdentifier","src":"2541:3:22"},"nativeSrc":"2541:18:22","nodeType":"YulFunctionCall","src":"2541:18:22"}],"functionName":{"name":"calldataload","nativeSrc":"2528:12:22","nodeType":"YulIdentifier","src":"2528:12:22"},"nativeSrc":"2528:32:22","nodeType":"YulFunctionCall","src":"2528:32:22"},"variables":[{"name":"value_1","nativeSrc":"2517:7:22","nodeType":"YulTypedName","src":"2517:7:22","type":""}]},{"expression":{"arguments":[{"name":"value_1","nativeSrc":"2594:7:22","nodeType":"YulIdentifier","src":"2594:7:22"}],"functionName":{"name":"validator_revert_address","nativeSrc":"2569:24:22","nodeType":"YulIdentifier","src":"2569:24:22"},"nativeSrc":"2569:33:22","nodeType":"YulFunctionCall","src":"2569:33:22"},"nativeSrc":"2569:33:22","nodeType":"YulExpressionStatement","src":"2569:33:22"},{"nativeSrc":"2611:17:22","nodeType":"YulAssignment","src":"2611:17:22","value":{"name":"value_1","nativeSrc":"2621:7:22","nodeType":"YulIdentifier","src":"2621:7:22"},"variableNames":[{"name":"value1","nativeSrc":"2611:6:22","nodeType":"YulIdentifier","src":"2611:6:22"}]},{"nativeSrc":"2637:42:22","nodeType":"YulAssignment","src":"2637:42:22","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2664:9:22","nodeType":"YulIdentifier","src":"2664:9:22"},{"kind":"number","nativeSrc":"2675:2:22","nodeType":"YulLiteral","src":"2675:2:22","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"2660:3:22","nodeType":"YulIdentifier","src":"2660:3:22"},"nativeSrc":"2660:18:22","nodeType":"YulFunctionCall","src":"2660:18:22"}],"functionName":{"name":"calldataload","nativeSrc":"2647:12:22","nodeType":"YulIdentifier","src":"2647:12:22"},"nativeSrc":"2647:32:22","nodeType":"YulFunctionCall","src":"2647:32:22"},"variableNames":[{"name":"value2","nativeSrc":"2637:6:22","nodeType":"YulIdentifier","src":"2637:6:22"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nativeSrc":"2229:456:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2283:9:22","nodeType":"YulTypedName","src":"2283:9:22","type":""},{"name":"dataEnd","nativeSrc":"2294:7:22","nodeType":"YulTypedName","src":"2294:7:22","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2306:6:22","nodeType":"YulTypedName","src":"2306:6:22","type":""},{"name":"value1","nativeSrc":"2314:6:22","nodeType":"YulTypedName","src":"2314:6:22","type":""},{"name":"value2","nativeSrc":"2322:6:22","nodeType":"YulTypedName","src":"2322:6:22","type":""}],"src":"2229:456:22"},{"body":{"nativeSrc":"2787:87:22","nodeType":"YulBlock","src":"2787:87:22","statements":[{"nativeSrc":"2797:26:22","nodeType":"YulAssignment","src":"2797:26:22","value":{"arguments":[{"name":"headStart","nativeSrc":"2809:9:22","nodeType":"YulIdentifier","src":"2809:9:22"},{"kind":"number","nativeSrc":"2820:2:22","nodeType":"YulLiteral","src":"2820:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2805:3:22","nodeType":"YulIdentifier","src":"2805:3:22"},"nativeSrc":"2805:18:22","nodeType":"YulFunctionCall","src":"2805:18:22"},"variableNames":[{"name":"tail","nativeSrc":"2797:4:22","nodeType":"YulIdentifier","src":"2797:4:22"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"2839:9:22","nodeType":"YulIdentifier","src":"2839:9:22"},{"arguments":[{"name":"value0","nativeSrc":"2854:6:22","nodeType":"YulIdentifier","src":"2854:6:22"},{"kind":"number","nativeSrc":"2862:4:22","nodeType":"YulLiteral","src":"2862:4:22","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"2850:3:22","nodeType":"YulIdentifier","src":"2850:3:22"},"nativeSrc":"2850:17:22","nodeType":"YulFunctionCall","src":"2850:17:22"}],"functionName":{"name":"mstore","nativeSrc":"2832:6:22","nodeType":"YulIdentifier","src":"2832:6:22"},"nativeSrc":"2832:36:22","nodeType":"YulFunctionCall","src":"2832:36:22"},"nativeSrc":"2832:36:22","nodeType":"YulExpressionStatement","src":"2832:36:22"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nativeSrc":"2690:184:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2756:9:22","nodeType":"YulTypedName","src":"2756:9:22","type":""},{"name":"value0","nativeSrc":"2767:6:22","nodeType":"YulTypedName","src":"2767:6:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2778:4:22","nodeType":"YulTypedName","src":"2778:4:22","type":""}],"src":"2690:184:22"},{"body":{"nativeSrc":"3058:153:22","nodeType":"YulBlock","src":"3058:153:22","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"3075:9:22","nodeType":"YulIdentifier","src":"3075:9:22"},{"name":"value0","nativeSrc":"3086:6:22","nodeType":"YulIdentifier","src":"3086:6:22"}],"functionName":{"name":"mstore","nativeSrc":"3068:6:22","nodeType":"YulIdentifier","src":"3068:6:22"},"nativeSrc":"3068:25:22","nodeType":"YulFunctionCall","src":"3068:25:22"},"nativeSrc":"3068:25:22","nodeType":"YulExpressionStatement","src":"3068:25:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3113:9:22","nodeType":"YulIdentifier","src":"3113:9:22"},{"kind":"number","nativeSrc":"3124:2:22","nodeType":"YulLiteral","src":"3124:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3109:3:22","nodeType":"YulIdentifier","src":"3109:3:22"},"nativeSrc":"3109:18:22","nodeType":"YulFunctionCall","src":"3109:18:22"},{"kind":"number","nativeSrc":"3129:2:22","nodeType":"YulLiteral","src":"3129:2:22","type":"","value":"64"}],"functionName":{"name":"mstore","nativeSrc":"3102:6:22","nodeType":"YulIdentifier","src":"3102:6:22"},"nativeSrc":"3102:30:22","nodeType":"YulFunctionCall","src":"3102:30:22"},"nativeSrc":"3102:30:22","nodeType":"YulExpressionStatement","src":"3102:30:22"},{"nativeSrc":"3141:64:22","nodeType":"YulAssignment","src":"3141:64:22","value":{"arguments":[{"name":"value1","nativeSrc":"3178:6:22","nodeType":"YulIdentifier","src":"3178:6:22"},{"arguments":[{"name":"headStart","nativeSrc":"3190:9:22","nodeType":"YulIdentifier","src":"3190:9:22"},{"kind":"number","nativeSrc":"3201:2:22","nodeType":"YulLiteral","src":"3201:2:22","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"3186:3:22","nodeType":"YulIdentifier","src":"3186:3:22"},"nativeSrc":"3186:18:22","nodeType":"YulFunctionCall","src":"3186:18:22"}],"functionName":{"name":"abi_encode_array_uint256_dyn","nativeSrc":"3149:28:22","nodeType":"YulIdentifier","src":"3149:28:22"},"nativeSrc":"3149:56:22","nodeType":"YulFunctionCall","src":"3149:56:22"},"variableNames":[{"name":"tail","nativeSrc":"3141:4:22","nodeType":"YulIdentifier","src":"3141:4:22"}]}]},"name":"abi_encode_tuple_t_uint256_t_array$_t_uint256_$dyn_memory_ptr__to_t_uint256_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nativeSrc":"2879:332:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3019:9:22","nodeType":"YulTypedName","src":"3019:9:22","type":""},{"name":"value1","nativeSrc":"3030:6:22","nodeType":"YulTypedName","src":"3030:6:22","type":""},{"name":"value0","nativeSrc":"3038:6:22","nodeType":"YulTypedName","src":"3038:6:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3049:4:22","nodeType":"YulTypedName","src":"3049:4:22","type":""}],"src":"2879:332:22"},{"body":{"nativeSrc":"3277:404:22","nodeType":"YulBlock","src":"3277:404:22","statements":[{"nativeSrc":"3287:26:22","nodeType":"YulVariableDeclaration","src":"3287:26:22","value":{"arguments":[{"name":"value","nativeSrc":"3307:5:22","nodeType":"YulIdentifier","src":"3307:5:22"}],"functionName":{"name":"mload","nativeSrc":"3301:5:22","nodeType":"YulIdentifier","src":"3301:5:22"},"nativeSrc":"3301:12:22","nodeType":"YulFunctionCall","src":"3301:12:22"},"variables":[{"name":"length","nativeSrc":"3291:6:22","nodeType":"YulTypedName","src":"3291:6:22","type":""}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"3329:3:22","nodeType":"YulIdentifier","src":"3329:3:22"},{"name":"length","nativeSrc":"3334:6:22","nodeType":"YulIdentifier","src":"3334:6:22"}],"functionName":{"name":"mstore","nativeSrc":"3322:6:22","nodeType":"YulIdentifier","src":"3322:6:22"},"nativeSrc":"3322:19:22","nodeType":"YulFunctionCall","src":"3322:19:22"},"nativeSrc":"3322:19:22","nodeType":"YulExpressionStatement","src":"3322:19:22"},{"nativeSrc":"3350:14:22","nodeType":"YulVariableDeclaration","src":"3350:14:22","value":{"kind":"number","nativeSrc":"3360:4:22","nodeType":"YulLiteral","src":"3360:4:22","type":"","value":"0x20"},"variables":[{"name":"_1","nativeSrc":"3354:2:22","nodeType":"YulTypedName","src":"3354:2:22","type":""}]},{"nativeSrc":"3373:21:22","nodeType":"YulAssignment","src":"3373:21:22","value":{"arguments":[{"name":"pos","nativeSrc":"3384:3:22","nodeType":"YulIdentifier","src":"3384:3:22"},{"kind":"number","nativeSrc":"3389:4:22","nodeType":"YulLiteral","src":"3389:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"3380:3:22","nodeType":"YulIdentifier","src":"3380:3:22"},"nativeSrc":"3380:14:22","nodeType":"YulFunctionCall","src":"3380:14:22"},"variableNames":[{"name":"pos","nativeSrc":"3373:3:22","nodeType":"YulIdentifier","src":"3373:3:22"}]},{"nativeSrc":"3403:30:22","nodeType":"YulVariableDeclaration","src":"3403:30:22","value":{"arguments":[{"name":"value","nativeSrc":"3421:5:22","nodeType":"YulIdentifier","src":"3421:5:22"},{"kind":"number","nativeSrc":"3428:4:22","nodeType":"YulLiteral","src":"3428:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"3417:3:22","nodeType":"YulIdentifier","src":"3417:3:22"},"nativeSrc":"3417:16:22","nodeType":"YulFunctionCall","src":"3417:16:22"},"variables":[{"name":"srcPtr","nativeSrc":"3407:6:22","nodeType":"YulTypedName","src":"3407:6:22","type":""}]},{"nativeSrc":"3442:10:22","nodeType":"YulVariableDeclaration","src":"3442:10:22","value":{"kind":"number","nativeSrc":"3451:1:22","nodeType":"YulLiteral","src":"3451:1:22","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"3446:1:22","nodeType":"YulTypedName","src":"3446:1:22","type":""}]},{"body":{"nativeSrc":"3510:146:22","nodeType":"YulBlock","src":"3510:146:22","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"3531:3:22","nodeType":"YulIdentifier","src":"3531:3:22"},{"arguments":[{"arguments":[{"name":"srcPtr","nativeSrc":"3546:6:22","nodeType":"YulIdentifier","src":"3546:6:22"}],"functionName":{"name":"mload","nativeSrc":"3540:5:22","nodeType":"YulIdentifier","src":"3540:5:22"},"nativeSrc":"3540:13:22","nodeType":"YulFunctionCall","src":"3540:13:22"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"3563:3:22","nodeType":"YulLiteral","src":"3563:3:22","type":"","value":"160"},{"kind":"number","nativeSrc":"3568:1:22","nodeType":"YulLiteral","src":"3568:1:22","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"3559:3:22","nodeType":"YulIdentifier","src":"3559:3:22"},"nativeSrc":"3559:11:22","nodeType":"YulFunctionCall","src":"3559:11:22"},{"kind":"number","nativeSrc":"3572:1:22","nodeType":"YulLiteral","src":"3572:1:22","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"3555:3:22","nodeType":"YulIdentifier","src":"3555:3:22"},"nativeSrc":"3555:19:22","nodeType":"YulFunctionCall","src":"3555:19:22"}],"functionName":{"name":"and","nativeSrc":"3536:3:22","nodeType":"YulIdentifier","src":"3536:3:22"},"nativeSrc":"3536:39:22","nodeType":"YulFunctionCall","src":"3536:39:22"}],"functionName":{"name":"mstore","nativeSrc":"3524:6:22","nodeType":"YulIdentifier","src":"3524:6:22"},"nativeSrc":"3524:52:22","nodeType":"YulFunctionCall","src":"3524:52:22"},"nativeSrc":"3524:52:22","nodeType":"YulExpressionStatement","src":"3524:52:22"},{"nativeSrc":"3589:19:22","nodeType":"YulAssignment","src":"3589:19:22","value":{"arguments":[{"name":"pos","nativeSrc":"3600:3:22","nodeType":"YulIdentifier","src":"3600:3:22"},{"name":"_1","nativeSrc":"3605:2:22","nodeType":"YulIdentifier","src":"3605:2:22"}],"functionName":{"name":"add","nativeSrc":"3596:3:22","nodeType":"YulIdentifier","src":"3596:3:22"},"nativeSrc":"3596:12:22","nodeType":"YulFunctionCall","src":"3596:12:22"},"variableNames":[{"name":"pos","nativeSrc":"3589:3:22","nodeType":"YulIdentifier","src":"3589:3:22"}]},{"nativeSrc":"3621:25:22","nodeType":"YulAssignment","src":"3621:25:22","value":{"arguments":[{"name":"srcPtr","nativeSrc":"3635:6:22","nodeType":"YulIdentifier","src":"3635:6:22"},{"name":"_1","nativeSrc":"3643:2:22","nodeType":"YulIdentifier","src":"3643:2:22"}],"functionName":{"name":"add","nativeSrc":"3631:3:22","nodeType":"YulIdentifier","src":"3631:3:22"},"nativeSrc":"3631:15:22","nodeType":"YulFunctionCall","src":"3631:15:22"},"variableNames":[{"name":"srcPtr","nativeSrc":"3621:6:22","nodeType":"YulIdentifier","src":"3621:6:22"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"3472:1:22","nodeType":"YulIdentifier","src":"3472:1:22"},{"name":"length","nativeSrc":"3475:6:22","nodeType":"YulIdentifier","src":"3475:6:22"}],"functionName":{"name":"lt","nativeSrc":"3469:2:22","nodeType":"YulIdentifier","src":"3469:2:22"},"nativeSrc":"3469:13:22","nodeType":"YulFunctionCall","src":"3469:13:22"},"nativeSrc":"3461:195:22","nodeType":"YulForLoop","post":{"nativeSrc":"3483:18:22","nodeType":"YulBlock","src":"3483:18:22","statements":[{"nativeSrc":"3485:14:22","nodeType":"YulAssignment","src":"3485:14:22","value":{"arguments":[{"name":"i","nativeSrc":"3494:1:22","nodeType":"YulIdentifier","src":"3494:1:22"},{"kind":"number","nativeSrc":"3497:1:22","nodeType":"YulLiteral","src":"3497:1:22","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"3490:3:22","nodeType":"YulIdentifier","src":"3490:3:22"},"nativeSrc":"3490:9:22","nodeType":"YulFunctionCall","src":"3490:9:22"},"variableNames":[{"name":"i","nativeSrc":"3485:1:22","nodeType":"YulIdentifier","src":"3485:1:22"}]}]},"pre":{"nativeSrc":"3465:3:22","nodeType":"YulBlock","src":"3465:3:22","statements":[]},"src":"3461:195:22"},{"nativeSrc":"3665:10:22","nodeType":"YulAssignment","src":"3665:10:22","value":{"name":"pos","nativeSrc":"3672:3:22","nodeType":"YulIdentifier","src":"3672:3:22"},"variableNames":[{"name":"end","nativeSrc":"3665:3:22","nodeType":"YulIdentifier","src":"3665:3:22"}]}]},"name":"abi_encode_array_address_dyn","nativeSrc":"3216:465:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3254:5:22","nodeType":"YulTypedName","src":"3254:5:22","type":""},{"name":"pos","nativeSrc":"3261:3:22","nodeType":"YulTypedName","src":"3261:3:22","type":""}],"returnVariables":[{"name":"end","nativeSrc":"3269:3:22","nodeType":"YulTypedName","src":"3269:3:22","type":""}],"src":"3216:465:22"},{"body":{"nativeSrc":"3837:110:22","nodeType":"YulBlock","src":"3837:110:22","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"3854:9:22","nodeType":"YulIdentifier","src":"3854:9:22"},{"kind":"number","nativeSrc":"3865:2:22","nodeType":"YulLiteral","src":"3865:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"3847:6:22","nodeType":"YulIdentifier","src":"3847:6:22"},"nativeSrc":"3847:21:22","nodeType":"YulFunctionCall","src":"3847:21:22"},"nativeSrc":"3847:21:22","nodeType":"YulExpressionStatement","src":"3847:21:22"},{"nativeSrc":"3877:64:22","nodeType":"YulAssignment","src":"3877:64:22","value":{"arguments":[{"name":"value0","nativeSrc":"3914:6:22","nodeType":"YulIdentifier","src":"3914:6:22"},{"arguments":[{"name":"headStart","nativeSrc":"3926:9:22","nodeType":"YulIdentifier","src":"3926:9:22"},{"kind":"number","nativeSrc":"3937:2:22","nodeType":"YulLiteral","src":"3937:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3922:3:22","nodeType":"YulIdentifier","src":"3922:3:22"},"nativeSrc":"3922:18:22","nodeType":"YulFunctionCall","src":"3922:18:22"}],"functionName":{"name":"abi_encode_array_address_dyn","nativeSrc":"3885:28:22","nodeType":"YulIdentifier","src":"3885:28:22"},"nativeSrc":"3885:56:22","nodeType":"YulFunctionCall","src":"3885:56:22"},"variableNames":[{"name":"tail","nativeSrc":"3877:4:22","nodeType":"YulIdentifier","src":"3877:4:22"}]}]},"name":"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed","nativeSrc":"3686:261:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3806:9:22","nodeType":"YulTypedName","src":"3806:9:22","type":""},{"name":"value0","nativeSrc":"3817:6:22","nodeType":"YulTypedName","src":"3817:6:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3828:4:22","nodeType":"YulTypedName","src":"3828:4:22","type":""}],"src":"3686:261:22"},{"body":{"nativeSrc":"4073:477:22","nodeType":"YulBlock","src":"4073:477:22","statements":[{"body":{"nativeSrc":"4120:16:22","nodeType":"YulBlock","src":"4120:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4129:1:22","nodeType":"YulLiteral","src":"4129:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"4132:1:22","nodeType":"YulLiteral","src":"4132:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"4122:6:22","nodeType":"YulIdentifier","src":"4122:6:22"},"nativeSrc":"4122:12:22","nodeType":"YulFunctionCall","src":"4122:12:22"},"nativeSrc":"4122:12:22","nodeType":"YulExpressionStatement","src":"4122:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"4094:7:22","nodeType":"YulIdentifier","src":"4094:7:22"},{"name":"headStart","nativeSrc":"4103:9:22","nodeType":"YulIdentifier","src":"4103:9:22"}],"functionName":{"name":"sub","nativeSrc":"4090:3:22","nodeType":"YulIdentifier","src":"4090:3:22"},"nativeSrc":"4090:23:22","nodeType":"YulFunctionCall","src":"4090:23:22"},{"kind":"number","nativeSrc":"4115:3:22","nodeType":"YulLiteral","src":"4115:3:22","type":"","value":"128"}],"functionName":{"name":"slt","nativeSrc":"4086:3:22","nodeType":"YulIdentifier","src":"4086:3:22"},"nativeSrc":"4086:33:22","nodeType":"YulFunctionCall","src":"4086:33:22"},"nativeSrc":"4083:53:22","nodeType":"YulIf","src":"4083:53:22"},{"nativeSrc":"4145:36:22","nodeType":"YulVariableDeclaration","src":"4145:36:22","value":{"arguments":[{"name":"headStart","nativeSrc":"4171:9:22","nodeType":"YulIdentifier","src":"4171:9:22"}],"functionName":{"name":"calldataload","nativeSrc":"4158:12:22","nodeType":"YulIdentifier","src":"4158:12:22"},"nativeSrc":"4158:23:22","nodeType":"YulFunctionCall","src":"4158:23:22"},"variables":[{"name":"value","nativeSrc":"4149:5:22","nodeType":"YulTypedName","src":"4149:5:22","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"4215:5:22","nodeType":"YulIdentifier","src":"4215:5:22"}],"functionName":{"name":"validator_revert_address","nativeSrc":"4190:24:22","nodeType":"YulIdentifier","src":"4190:24:22"},"nativeSrc":"4190:31:22","nodeType":"YulFunctionCall","src":"4190:31:22"},"nativeSrc":"4190:31:22","nodeType":"YulExpressionStatement","src":"4190:31:22"},{"nativeSrc":"4230:15:22","nodeType":"YulAssignment","src":"4230:15:22","value":{"name":"value","nativeSrc":"4240:5:22","nodeType":"YulIdentifier","src":"4240:5:22"},"variableNames":[{"name":"value0","nativeSrc":"4230:6:22","nodeType":"YulIdentifier","src":"4230:6:22"}]},{"nativeSrc":"4254:47:22","nodeType":"YulVariableDeclaration","src":"4254:47:22","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4286:9:22","nodeType":"YulIdentifier","src":"4286:9:22"},{"kind":"number","nativeSrc":"4297:2:22","nodeType":"YulLiteral","src":"4297:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4282:3:22","nodeType":"YulIdentifier","src":"4282:3:22"},"nativeSrc":"4282:18:22","nodeType":"YulFunctionCall","src":"4282:18:22"}],"functionName":{"name":"calldataload","nativeSrc":"4269:12:22","nodeType":"YulIdentifier","src":"4269:12:22"},"nativeSrc":"4269:32:22","nodeType":"YulFunctionCall","src":"4269:32:22"},"variables":[{"name":"value_1","nativeSrc":"4258:7:22","nodeType":"YulTypedName","src":"4258:7:22","type":""}]},{"expression":{"arguments":[{"name":"value_1","nativeSrc":"4335:7:22","nodeType":"YulIdentifier","src":"4335:7:22"}],"functionName":{"name":"validator_revert_address","nativeSrc":"4310:24:22","nodeType":"YulIdentifier","src":"4310:24:22"},"nativeSrc":"4310:33:22","nodeType":"YulFunctionCall","src":"4310:33:22"},"nativeSrc":"4310:33:22","nodeType":"YulExpressionStatement","src":"4310:33:22"},{"nativeSrc":"4352:17:22","nodeType":"YulAssignment","src":"4352:17:22","value":{"name":"value_1","nativeSrc":"4362:7:22","nodeType":"YulIdentifier","src":"4362:7:22"},"variableNames":[{"name":"value1","nativeSrc":"4352:6:22","nodeType":"YulIdentifier","src":"4352:6:22"}]},{"nativeSrc":"4378:42:22","nodeType":"YulAssignment","src":"4378:42:22","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4405:9:22","nodeType":"YulIdentifier","src":"4405:9:22"},{"kind":"number","nativeSrc":"4416:2:22","nodeType":"YulLiteral","src":"4416:2:22","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"4401:3:22","nodeType":"YulIdentifier","src":"4401:3:22"},"nativeSrc":"4401:18:22","nodeType":"YulFunctionCall","src":"4401:18:22"}],"functionName":{"name":"calldataload","nativeSrc":"4388:12:22","nodeType":"YulIdentifier","src":"4388:12:22"},"nativeSrc":"4388:32:22","nodeType":"YulFunctionCall","src":"4388:32:22"},"variableNames":[{"name":"value2","nativeSrc":"4378:6:22","nodeType":"YulIdentifier","src":"4378:6:22"}]},{"nativeSrc":"4429:47:22","nodeType":"YulVariableDeclaration","src":"4429:47:22","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4461:9:22","nodeType":"YulIdentifier","src":"4461:9:22"},{"kind":"number","nativeSrc":"4472:2:22","nodeType":"YulLiteral","src":"4472:2:22","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"4457:3:22","nodeType":"YulIdentifier","src":"4457:3:22"},"nativeSrc":"4457:18:22","nodeType":"YulFunctionCall","src":"4457:18:22"}],"functionName":{"name":"calldataload","nativeSrc":"4444:12:22","nodeType":"YulIdentifier","src":"4444:12:22"},"nativeSrc":"4444:32:22","nodeType":"YulFunctionCall","src":"4444:32:22"},"variables":[{"name":"value_2","nativeSrc":"4433:7:22","nodeType":"YulTypedName","src":"4433:7:22","type":""}]},{"expression":{"arguments":[{"name":"value_2","nativeSrc":"4510:7:22","nodeType":"YulIdentifier","src":"4510:7:22"}],"functionName":{"name":"validator_revert_address","nativeSrc":"4485:24:22","nodeType":"YulIdentifier","src":"4485:24:22"},"nativeSrc":"4485:33:22","nodeType":"YulFunctionCall","src":"4485:33:22"},"nativeSrc":"4485:33:22","nodeType":"YulExpressionStatement","src":"4485:33:22"},{"nativeSrc":"4527:17:22","nodeType":"YulAssignment","src":"4527:17:22","value":{"name":"value_2","nativeSrc":"4537:7:22","nodeType":"YulIdentifier","src":"4537:7:22"},"variableNames":[{"name":"value3","nativeSrc":"4527:6:22","nodeType":"YulIdentifier","src":"4527:6:22"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_address","nativeSrc":"3952:598:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4015:9:22","nodeType":"YulTypedName","src":"4015:9:22","type":""},{"name":"dataEnd","nativeSrc":"4026:7:22","nodeType":"YulTypedName","src":"4026:7:22","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"4038:6:22","nodeType":"YulTypedName","src":"4038:6:22","type":""},{"name":"value1","nativeSrc":"4046:6:22","nodeType":"YulTypedName","src":"4046:6:22","type":""},{"name":"value2","nativeSrc":"4054:6:22","nodeType":"YulTypedName","src":"4054:6:22","type":""},{"name":"value3","nativeSrc":"4062:6:22","nodeType":"YulTypedName","src":"4062:6:22","type":""}],"src":"3952:598:22"},{"body":{"nativeSrc":"4682:102:22","nodeType":"YulBlock","src":"4682:102:22","statements":[{"nativeSrc":"4692:26:22","nodeType":"YulAssignment","src":"4692:26:22","value":{"arguments":[{"name":"headStart","nativeSrc":"4704:9:22","nodeType":"YulIdentifier","src":"4704:9:22"},{"kind":"number","nativeSrc":"4715:2:22","nodeType":"YulLiteral","src":"4715:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4700:3:22","nodeType":"YulIdentifier","src":"4700:3:22"},"nativeSrc":"4700:18:22","nodeType":"YulFunctionCall","src":"4700:18:22"},"variableNames":[{"name":"tail","nativeSrc":"4692:4:22","nodeType":"YulIdentifier","src":"4692:4:22"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"4734:9:22","nodeType":"YulIdentifier","src":"4734:9:22"},{"arguments":[{"name":"value0","nativeSrc":"4749:6:22","nodeType":"YulIdentifier","src":"4749:6:22"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"4765:3:22","nodeType":"YulLiteral","src":"4765:3:22","type":"","value":"160"},{"kind":"number","nativeSrc":"4770:1:22","nodeType":"YulLiteral","src":"4770:1:22","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"4761:3:22","nodeType":"YulIdentifier","src":"4761:3:22"},"nativeSrc":"4761:11:22","nodeType":"YulFunctionCall","src":"4761:11:22"},{"kind":"number","nativeSrc":"4774:1:22","nodeType":"YulLiteral","src":"4774:1:22","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"4757:3:22","nodeType":"YulIdentifier","src":"4757:3:22"},"nativeSrc":"4757:19:22","nodeType":"YulFunctionCall","src":"4757:19:22"}],"functionName":{"name":"and","nativeSrc":"4745:3:22","nodeType":"YulIdentifier","src":"4745:3:22"},"nativeSrc":"4745:32:22","nodeType":"YulFunctionCall","src":"4745:32:22"}],"functionName":{"name":"mstore","nativeSrc":"4727:6:22","nodeType":"YulIdentifier","src":"4727:6:22"},"nativeSrc":"4727:51:22","nodeType":"YulFunctionCall","src":"4727:51:22"},"nativeSrc":"4727:51:22","nodeType":"YulExpressionStatement","src":"4727:51:22"}]},"name":"abi_encode_tuple_t_contract$_IBaluniV1Registry_$5472__to_t_address__fromStack_reversed","nativeSrc":"4555:229:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4651:9:22","nodeType":"YulTypedName","src":"4651:9:22","type":""},{"name":"value0","nativeSrc":"4662:6:22","nodeType":"YulTypedName","src":"4662:6:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4673:4:22","nodeType":"YulTypedName","src":"4673:4:22","type":""}],"src":"4555:229:22"},{"body":{"nativeSrc":"5012:597:22","nodeType":"YulBlock","src":"5012:597:22","statements":[{"nativeSrc":"5022:32:22","nodeType":"YulVariableDeclaration","src":"5022:32:22","value":{"arguments":[{"name":"headStart","nativeSrc":"5040:9:22","nodeType":"YulIdentifier","src":"5040:9:22"},{"kind":"number","nativeSrc":"5051:2:22","nodeType":"YulLiteral","src":"5051:2:22","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"5036:3:22","nodeType":"YulIdentifier","src":"5036:3:22"},"nativeSrc":"5036:18:22","nodeType":"YulFunctionCall","src":"5036:18:22"},"variables":[{"name":"tail_1","nativeSrc":"5026:6:22","nodeType":"YulTypedName","src":"5026:6:22","type":""}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"5070:9:22","nodeType":"YulIdentifier","src":"5070:9:22"},{"kind":"number","nativeSrc":"5081:2:22","nodeType":"YulLiteral","src":"5081:2:22","type":"","value":"64"}],"functionName":{"name":"mstore","nativeSrc":"5063:6:22","nodeType":"YulIdentifier","src":"5063:6:22"},"nativeSrc":"5063:21:22","nodeType":"YulFunctionCall","src":"5063:21:22"},"nativeSrc":"5063:21:22","nodeType":"YulExpressionStatement","src":"5063:21:22"},{"nativeSrc":"5093:17:22","nodeType":"YulVariableDeclaration","src":"5093:17:22","value":{"name":"tail_1","nativeSrc":"5104:6:22","nodeType":"YulIdentifier","src":"5104:6:22"},"variables":[{"name":"pos","nativeSrc":"5097:3:22","nodeType":"YulTypedName","src":"5097:3:22","type":""}]},{"nativeSrc":"5119:27:22","nodeType":"YulVariableDeclaration","src":"5119:27:22","value":{"arguments":[{"name":"value0","nativeSrc":"5139:6:22","nodeType":"YulIdentifier","src":"5139:6:22"}],"functionName":{"name":"mload","nativeSrc":"5133:5:22","nodeType":"YulIdentifier","src":"5133:5:22"},"nativeSrc":"5133:13:22","nodeType":"YulFunctionCall","src":"5133:13:22"},"variables":[{"name":"length","nativeSrc":"5123:6:22","nodeType":"YulTypedName","src":"5123:6:22","type":""}]},{"expression":{"arguments":[{"name":"tail_1","nativeSrc":"5162:6:22","nodeType":"YulIdentifier","src":"5162:6:22"},{"name":"length","nativeSrc":"5170:6:22","nodeType":"YulIdentifier","src":"5170:6:22"}],"functionName":{"name":"mstore","nativeSrc":"5155:6:22","nodeType":"YulIdentifier","src":"5155:6:22"},"nativeSrc":"5155:22:22","nodeType":"YulFunctionCall","src":"5155:22:22"},"nativeSrc":"5155:22:22","nodeType":"YulExpressionStatement","src":"5155:22:22"},{"nativeSrc":"5186:25:22","nodeType":"YulAssignment","src":"5186:25:22","value":{"arguments":[{"name":"headStart","nativeSrc":"5197:9:22","nodeType":"YulIdentifier","src":"5197:9:22"},{"kind":"number","nativeSrc":"5208:2:22","nodeType":"YulLiteral","src":"5208:2:22","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"5193:3:22","nodeType":"YulIdentifier","src":"5193:3:22"},"nativeSrc":"5193:18:22","nodeType":"YulFunctionCall","src":"5193:18:22"},"variableNames":[{"name":"pos","nativeSrc":"5186:3:22","nodeType":"YulIdentifier","src":"5186:3:22"}]},{"nativeSrc":"5220:14:22","nodeType":"YulVariableDeclaration","src":"5220:14:22","value":{"kind":"number","nativeSrc":"5230:4:22","nodeType":"YulLiteral","src":"5230:4:22","type":"","value":"0x20"},"variables":[{"name":"_1","nativeSrc":"5224:2:22","nodeType":"YulTypedName","src":"5224:2:22","type":""}]},{"nativeSrc":"5243:31:22","nodeType":"YulVariableDeclaration","src":"5243:31:22","value":{"arguments":[{"name":"value0","nativeSrc":"5261:6:22","nodeType":"YulIdentifier","src":"5261:6:22"},{"kind":"number","nativeSrc":"5269:4:22","nodeType":"YulLiteral","src":"5269:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"5257:3:22","nodeType":"YulIdentifier","src":"5257:3:22"},"nativeSrc":"5257:17:22","nodeType":"YulFunctionCall","src":"5257:17:22"},"variables":[{"name":"srcPtr","nativeSrc":"5247:6:22","nodeType":"YulTypedName","src":"5247:6:22","type":""}]},{"nativeSrc":"5283:10:22","nodeType":"YulVariableDeclaration","src":"5283:10:22","value":{"kind":"number","nativeSrc":"5292:1:22","nodeType":"YulLiteral","src":"5292:1:22","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"5287:1:22","nodeType":"YulTypedName","src":"5287:1:22","type":""}]},{"body":{"nativeSrc":"5351:136:22","nodeType":"YulBlock","src":"5351:136:22","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"5372:3:22","nodeType":"YulIdentifier","src":"5372:3:22"},{"arguments":[{"arguments":[{"arguments":[{"name":"srcPtr","nativeSrc":"5397:6:22","nodeType":"YulIdentifier","src":"5397:6:22"}],"functionName":{"name":"mload","nativeSrc":"5391:5:22","nodeType":"YulIdentifier","src":"5391:5:22"},"nativeSrc":"5391:13:22","nodeType":"YulFunctionCall","src":"5391:13:22"}],"functionName":{"name":"iszero","nativeSrc":"5384:6:22","nodeType":"YulIdentifier","src":"5384:6:22"},"nativeSrc":"5384:21:22","nodeType":"YulFunctionCall","src":"5384:21:22"}],"functionName":{"name":"iszero","nativeSrc":"5377:6:22","nodeType":"YulIdentifier","src":"5377:6:22"},"nativeSrc":"5377:29:22","nodeType":"YulFunctionCall","src":"5377:29:22"}],"functionName":{"name":"mstore","nativeSrc":"5365:6:22","nodeType":"YulIdentifier","src":"5365:6:22"},"nativeSrc":"5365:42:22","nodeType":"YulFunctionCall","src":"5365:42:22"},"nativeSrc":"5365:42:22","nodeType":"YulExpressionStatement","src":"5365:42:22"},{"nativeSrc":"5420:19:22","nodeType":"YulAssignment","src":"5420:19:22","value":{"arguments":[{"name":"pos","nativeSrc":"5431:3:22","nodeType":"YulIdentifier","src":"5431:3:22"},{"name":"_1","nativeSrc":"5436:2:22","nodeType":"YulIdentifier","src":"5436:2:22"}],"functionName":{"name":"add","nativeSrc":"5427:3:22","nodeType":"YulIdentifier","src":"5427:3:22"},"nativeSrc":"5427:12:22","nodeType":"YulFunctionCall","src":"5427:12:22"},"variableNames":[{"name":"pos","nativeSrc":"5420:3:22","nodeType":"YulIdentifier","src":"5420:3:22"}]},{"nativeSrc":"5452:25:22","nodeType":"YulAssignment","src":"5452:25:22","value":{"arguments":[{"name":"srcPtr","nativeSrc":"5466:6:22","nodeType":"YulIdentifier","src":"5466:6:22"},{"name":"_1","nativeSrc":"5474:2:22","nodeType":"YulIdentifier","src":"5474:2:22"}],"functionName":{"name":"add","nativeSrc":"5462:3:22","nodeType":"YulIdentifier","src":"5462:3:22"},"nativeSrc":"5462:15:22","nodeType":"YulFunctionCall","src":"5462:15:22"},"variableNames":[{"name":"srcPtr","nativeSrc":"5452:6:22","nodeType":"YulIdentifier","src":"5452:6:22"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"5313:1:22","nodeType":"YulIdentifier","src":"5313:1:22"},{"name":"length","nativeSrc":"5316:6:22","nodeType":"YulIdentifier","src":"5316:6:22"}],"functionName":{"name":"lt","nativeSrc":"5310:2:22","nodeType":"YulIdentifier","src":"5310:2:22"},"nativeSrc":"5310:13:22","nodeType":"YulFunctionCall","src":"5310:13:22"},"nativeSrc":"5302:185:22","nodeType":"YulForLoop","post":{"nativeSrc":"5324:18:22","nodeType":"YulBlock","src":"5324:18:22","statements":[{"nativeSrc":"5326:14:22","nodeType":"YulAssignment","src":"5326:14:22","value":{"arguments":[{"name":"i","nativeSrc":"5335:1:22","nodeType":"YulIdentifier","src":"5335:1:22"},{"kind":"number","nativeSrc":"5338:1:22","nodeType":"YulLiteral","src":"5338:1:22","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"5331:3:22","nodeType":"YulIdentifier","src":"5331:3:22"},"nativeSrc":"5331:9:22","nodeType":"YulFunctionCall","src":"5331:9:22"},"variableNames":[{"name":"i","nativeSrc":"5326:1:22","nodeType":"YulIdentifier","src":"5326:1:22"}]}]},"pre":{"nativeSrc":"5306:3:22","nodeType":"YulBlock","src":"5306:3:22","statements":[]},"src":"5302:185:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5507:9:22","nodeType":"YulIdentifier","src":"5507:9:22"},{"kind":"number","nativeSrc":"5518:4:22","nodeType":"YulLiteral","src":"5518:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"5503:3:22","nodeType":"YulIdentifier","src":"5503:3:22"},"nativeSrc":"5503:20:22","nodeType":"YulFunctionCall","src":"5503:20:22"},{"arguments":[{"name":"pos","nativeSrc":"5529:3:22","nodeType":"YulIdentifier","src":"5529:3:22"},{"name":"headStart","nativeSrc":"5534:9:22","nodeType":"YulIdentifier","src":"5534:9:22"}],"functionName":{"name":"sub","nativeSrc":"5525:3:22","nodeType":"YulIdentifier","src":"5525:3:22"},"nativeSrc":"5525:19:22","nodeType":"YulFunctionCall","src":"5525:19:22"}],"functionName":{"name":"mstore","nativeSrc":"5496:6:22","nodeType":"YulIdentifier","src":"5496:6:22"},"nativeSrc":"5496:49:22","nodeType":"YulFunctionCall","src":"5496:49:22"},"nativeSrc":"5496:49:22","nodeType":"YulExpressionStatement","src":"5496:49:22"},{"nativeSrc":"5554:49:22","nodeType":"YulAssignment","src":"5554:49:22","value":{"arguments":[{"name":"value1","nativeSrc":"5591:6:22","nodeType":"YulIdentifier","src":"5591:6:22"},{"name":"pos","nativeSrc":"5599:3:22","nodeType":"YulIdentifier","src":"5599:3:22"}],"functionName":{"name":"abi_encode_array_uint256_dyn","nativeSrc":"5562:28:22","nodeType":"YulIdentifier","src":"5562:28:22"},"nativeSrc":"5562:41:22","nodeType":"YulFunctionCall","src":"5562:41:22"},"variableNames":[{"name":"tail","nativeSrc":"5554:4:22","nodeType":"YulIdentifier","src":"5554:4:22"}]}]},"name":"abi_encode_tuple_t_array$_t_bool_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_bool_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nativeSrc":"4789:820:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4973:9:22","nodeType":"YulTypedName","src":"4973:9:22","type":""},{"name":"value1","nativeSrc":"4984:6:22","nodeType":"YulTypedName","src":"4984:6:22","type":""},{"name":"value0","nativeSrc":"4992:6:22","nodeType":"YulTypedName","src":"4992:6:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"5003:4:22","nodeType":"YulTypedName","src":"5003:4:22","type":""}],"src":"4789:820:22"},{"body":{"nativeSrc":"5715:102:22","nodeType":"YulBlock","src":"5715:102:22","statements":[{"nativeSrc":"5725:26:22","nodeType":"YulAssignment","src":"5725:26:22","value":{"arguments":[{"name":"headStart","nativeSrc":"5737:9:22","nodeType":"YulIdentifier","src":"5737:9:22"},{"kind":"number","nativeSrc":"5748:2:22","nodeType":"YulLiteral","src":"5748:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5733:3:22","nodeType":"YulIdentifier","src":"5733:3:22"},"nativeSrc":"5733:18:22","nodeType":"YulFunctionCall","src":"5733:18:22"},"variableNames":[{"name":"tail","nativeSrc":"5725:4:22","nodeType":"YulIdentifier","src":"5725:4:22"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"5767:9:22","nodeType":"YulIdentifier","src":"5767:9:22"},{"arguments":[{"name":"value0","nativeSrc":"5782:6:22","nodeType":"YulIdentifier","src":"5782:6:22"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"5798:3:22","nodeType":"YulLiteral","src":"5798:3:22","type":"","value":"160"},{"kind":"number","nativeSrc":"5803:1:22","nodeType":"YulLiteral","src":"5803:1:22","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"5794:3:22","nodeType":"YulIdentifier","src":"5794:3:22"},"nativeSrc":"5794:11:22","nodeType":"YulFunctionCall","src":"5794:11:22"},{"kind":"number","nativeSrc":"5807:1:22","nodeType":"YulLiteral","src":"5807:1:22","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"5790:3:22","nodeType":"YulIdentifier","src":"5790:3:22"},"nativeSrc":"5790:19:22","nodeType":"YulFunctionCall","src":"5790:19:22"}],"functionName":{"name":"and","nativeSrc":"5778:3:22","nodeType":"YulIdentifier","src":"5778:3:22"},"nativeSrc":"5778:32:22","nodeType":"YulFunctionCall","src":"5778:32:22"}],"functionName":{"name":"mstore","nativeSrc":"5760:6:22","nodeType":"YulIdentifier","src":"5760:6:22"},"nativeSrc":"5760:51:22","nodeType":"YulFunctionCall","src":"5760:51:22"},"nativeSrc":"5760:51:22","nodeType":"YulExpressionStatement","src":"5760:51:22"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"5614:203:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5684:9:22","nodeType":"YulTypedName","src":"5684:9:22","type":""},{"name":"value0","nativeSrc":"5695:6:22","nodeType":"YulTypedName","src":"5695:6:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"5706:4:22","nodeType":"YulTypedName","src":"5706:4:22","type":""}],"src":"5614:203:22"},{"body":{"nativeSrc":"5892:110:22","nodeType":"YulBlock","src":"5892:110:22","statements":[{"body":{"nativeSrc":"5938:16:22","nodeType":"YulBlock","src":"5938:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5947:1:22","nodeType":"YulLiteral","src":"5947:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"5950:1:22","nodeType":"YulLiteral","src":"5950:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"5940:6:22","nodeType":"YulIdentifier","src":"5940:6:22"},"nativeSrc":"5940:12:22","nodeType":"YulFunctionCall","src":"5940:12:22"},"nativeSrc":"5940:12:22","nodeType":"YulExpressionStatement","src":"5940:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"5913:7:22","nodeType":"YulIdentifier","src":"5913:7:22"},{"name":"headStart","nativeSrc":"5922:9:22","nodeType":"YulIdentifier","src":"5922:9:22"}],"functionName":{"name":"sub","nativeSrc":"5909:3:22","nodeType":"YulIdentifier","src":"5909:3:22"},"nativeSrc":"5909:23:22","nodeType":"YulFunctionCall","src":"5909:23:22"},{"kind":"number","nativeSrc":"5934:2:22","nodeType":"YulLiteral","src":"5934:2:22","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"5905:3:22","nodeType":"YulIdentifier","src":"5905:3:22"},"nativeSrc":"5905:32:22","nodeType":"YulFunctionCall","src":"5905:32:22"},"nativeSrc":"5902:52:22","nodeType":"YulIf","src":"5902:52:22"},{"nativeSrc":"5963:33:22","nodeType":"YulAssignment","src":"5963:33:22","value":{"arguments":[{"name":"headStart","nativeSrc":"5986:9:22","nodeType":"YulIdentifier","src":"5986:9:22"}],"functionName":{"name":"calldataload","nativeSrc":"5973:12:22","nodeType":"YulIdentifier","src":"5973:12:22"},"nativeSrc":"5973:23:22","nodeType":"YulFunctionCall","src":"5973:23:22"},"variableNames":[{"name":"value0","nativeSrc":"5963:6:22","nodeType":"YulIdentifier","src":"5963:6:22"}]}]},"name":"abi_decode_tuple_t_uint256","nativeSrc":"5822:180:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5858:9:22","nodeType":"YulTypedName","src":"5858:9:22","type":""},{"name":"dataEnd","nativeSrc":"5869:7:22","nodeType":"YulTypedName","src":"5869:7:22","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"5881:6:22","nodeType":"YulTypedName","src":"5881:6:22","type":""}],"src":"5822:180:22"},{"body":{"nativeSrc":"6164:188:22","nodeType":"YulBlock","src":"6164:188:22","statements":[{"nativeSrc":"6174:26:22","nodeType":"YulAssignment","src":"6174:26:22","value":{"arguments":[{"name":"headStart","nativeSrc":"6186:9:22","nodeType":"YulIdentifier","src":"6186:9:22"},{"kind":"number","nativeSrc":"6197:2:22","nodeType":"YulLiteral","src":"6197:2:22","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"6182:3:22","nodeType":"YulIdentifier","src":"6182:3:22"},"nativeSrc":"6182:18:22","nodeType":"YulFunctionCall","src":"6182:18:22"},"variableNames":[{"name":"tail","nativeSrc":"6174:4:22","nodeType":"YulIdentifier","src":"6174:4:22"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"6216:9:22","nodeType":"YulIdentifier","src":"6216:9:22"},{"arguments":[{"name":"value0","nativeSrc":"6231:6:22","nodeType":"YulIdentifier","src":"6231:6:22"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"6247:3:22","nodeType":"YulLiteral","src":"6247:3:22","type":"","value":"160"},{"kind":"number","nativeSrc":"6252:1:22","nodeType":"YulLiteral","src":"6252:1:22","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"6243:3:22","nodeType":"YulIdentifier","src":"6243:3:22"},"nativeSrc":"6243:11:22","nodeType":"YulFunctionCall","src":"6243:11:22"},{"kind":"number","nativeSrc":"6256:1:22","nodeType":"YulLiteral","src":"6256:1:22","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"6239:3:22","nodeType":"YulIdentifier","src":"6239:3:22"},"nativeSrc":"6239:19:22","nodeType":"YulFunctionCall","src":"6239:19:22"}],"functionName":{"name":"and","nativeSrc":"6227:3:22","nodeType":"YulIdentifier","src":"6227:3:22"},"nativeSrc":"6227:32:22","nodeType":"YulFunctionCall","src":"6227:32:22"}],"functionName":{"name":"mstore","nativeSrc":"6209:6:22","nodeType":"YulIdentifier","src":"6209:6:22"},"nativeSrc":"6209:51:22","nodeType":"YulFunctionCall","src":"6209:51:22"},"nativeSrc":"6209:51:22","nodeType":"YulExpressionStatement","src":"6209:51:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6280:9:22","nodeType":"YulIdentifier","src":"6280:9:22"},{"kind":"number","nativeSrc":"6291:2:22","nodeType":"YulLiteral","src":"6291:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6276:3:22","nodeType":"YulIdentifier","src":"6276:3:22"},"nativeSrc":"6276:18:22","nodeType":"YulFunctionCall","src":"6276:18:22"},{"name":"value1","nativeSrc":"6296:6:22","nodeType":"YulIdentifier","src":"6296:6:22"}],"functionName":{"name":"mstore","nativeSrc":"6269:6:22","nodeType":"YulIdentifier","src":"6269:6:22"},"nativeSrc":"6269:34:22","nodeType":"YulFunctionCall","src":"6269:34:22"},"nativeSrc":"6269:34:22","nodeType":"YulExpressionStatement","src":"6269:34:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6323:9:22","nodeType":"YulIdentifier","src":"6323:9:22"},{"kind":"number","nativeSrc":"6334:2:22","nodeType":"YulLiteral","src":"6334:2:22","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"6319:3:22","nodeType":"YulIdentifier","src":"6319:3:22"},"nativeSrc":"6319:18:22","nodeType":"YulFunctionCall","src":"6319:18:22"},{"name":"value2","nativeSrc":"6339:6:22","nodeType":"YulIdentifier","src":"6339:6:22"}],"functionName":{"name":"mstore","nativeSrc":"6312:6:22","nodeType":"YulIdentifier","src":"6312:6:22"},"nativeSrc":"6312:34:22","nodeType":"YulFunctionCall","src":"6312:34:22"},"nativeSrc":"6312:34:22","nodeType":"YulExpressionStatement","src":"6312:34:22"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"6007:345:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6117:9:22","nodeType":"YulTypedName","src":"6117:9:22","type":""},{"name":"value2","nativeSrc":"6128:6:22","nodeType":"YulTypedName","src":"6128:6:22","type":""},{"name":"value1","nativeSrc":"6136:6:22","nodeType":"YulTypedName","src":"6136:6:22","type":""},{"name":"value0","nativeSrc":"6144:6:22","nodeType":"YulTypedName","src":"6144:6:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"6155:4:22","nodeType":"YulTypedName","src":"6155:4:22","type":""}],"src":"6007:345:22"},{"body":{"nativeSrc":"6444:301:22","nodeType":"YulBlock","src":"6444:301:22","statements":[{"body":{"nativeSrc":"6490:16:22","nodeType":"YulBlock","src":"6490:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6499:1:22","nodeType":"YulLiteral","src":"6499:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"6502:1:22","nodeType":"YulLiteral","src":"6502:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"6492:6:22","nodeType":"YulIdentifier","src":"6492:6:22"},"nativeSrc":"6492:12:22","nodeType":"YulFunctionCall","src":"6492:12:22"},"nativeSrc":"6492:12:22","nodeType":"YulExpressionStatement","src":"6492:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"6465:7:22","nodeType":"YulIdentifier","src":"6465:7:22"},{"name":"headStart","nativeSrc":"6474:9:22","nodeType":"YulIdentifier","src":"6474:9:22"}],"functionName":{"name":"sub","nativeSrc":"6461:3:22","nodeType":"YulIdentifier","src":"6461:3:22"},"nativeSrc":"6461:23:22","nodeType":"YulFunctionCall","src":"6461:23:22"},{"kind":"number","nativeSrc":"6486:2:22","nodeType":"YulLiteral","src":"6486:2:22","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"6457:3:22","nodeType":"YulIdentifier","src":"6457:3:22"},"nativeSrc":"6457:32:22","nodeType":"YulFunctionCall","src":"6457:32:22"},"nativeSrc":"6454:52:22","nodeType":"YulIf","src":"6454:52:22"},{"nativeSrc":"6515:36:22","nodeType":"YulVariableDeclaration","src":"6515:36:22","value":{"arguments":[{"name":"headStart","nativeSrc":"6541:9:22","nodeType":"YulIdentifier","src":"6541:9:22"}],"functionName":{"name":"calldataload","nativeSrc":"6528:12:22","nodeType":"YulIdentifier","src":"6528:12:22"},"nativeSrc":"6528:23:22","nodeType":"YulFunctionCall","src":"6528:23:22"},"variables":[{"name":"value","nativeSrc":"6519:5:22","nodeType":"YulTypedName","src":"6519:5:22","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"6585:5:22","nodeType":"YulIdentifier","src":"6585:5:22"}],"functionName":{"name":"validator_revert_address","nativeSrc":"6560:24:22","nodeType":"YulIdentifier","src":"6560:24:22"},"nativeSrc":"6560:31:22","nodeType":"YulFunctionCall","src":"6560:31:22"},"nativeSrc":"6560:31:22","nodeType":"YulExpressionStatement","src":"6560:31:22"},{"nativeSrc":"6600:15:22","nodeType":"YulAssignment","src":"6600:15:22","value":{"name":"value","nativeSrc":"6610:5:22","nodeType":"YulIdentifier","src":"6610:5:22"},"variableNames":[{"name":"value0","nativeSrc":"6600:6:22","nodeType":"YulIdentifier","src":"6600:6:22"}]},{"nativeSrc":"6624:47:22","nodeType":"YulVariableDeclaration","src":"6624:47:22","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6656:9:22","nodeType":"YulIdentifier","src":"6656:9:22"},{"kind":"number","nativeSrc":"6667:2:22","nodeType":"YulLiteral","src":"6667:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6652:3:22","nodeType":"YulIdentifier","src":"6652:3:22"},"nativeSrc":"6652:18:22","nodeType":"YulFunctionCall","src":"6652:18:22"}],"functionName":{"name":"calldataload","nativeSrc":"6639:12:22","nodeType":"YulIdentifier","src":"6639:12:22"},"nativeSrc":"6639:32:22","nodeType":"YulFunctionCall","src":"6639:32:22"},"variables":[{"name":"value_1","nativeSrc":"6628:7:22","nodeType":"YulTypedName","src":"6628:7:22","type":""}]},{"expression":{"arguments":[{"name":"value_1","nativeSrc":"6705:7:22","nodeType":"YulIdentifier","src":"6705:7:22"}],"functionName":{"name":"validator_revert_address","nativeSrc":"6680:24:22","nodeType":"YulIdentifier","src":"6680:24:22"},"nativeSrc":"6680:33:22","nodeType":"YulFunctionCall","src":"6680:33:22"},"nativeSrc":"6680:33:22","nodeType":"YulExpressionStatement","src":"6680:33:22"},{"nativeSrc":"6722:17:22","nodeType":"YulAssignment","src":"6722:17:22","value":{"name":"value_1","nativeSrc":"6732:7:22","nodeType":"YulIdentifier","src":"6732:7:22"},"variableNames":[{"name":"value1","nativeSrc":"6722:6:22","nodeType":"YulIdentifier","src":"6722:6:22"}]}]},"name":"abi_decode_tuple_t_addresst_address","nativeSrc":"6357:388:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6402:9:22","nodeType":"YulTypedName","src":"6402:9:22","type":""},{"name":"dataEnd","nativeSrc":"6413:7:22","nodeType":"YulTypedName","src":"6413:7:22","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"6425:6:22","nodeType":"YulTypedName","src":"6425:6:22","type":""},{"name":"value1","nativeSrc":"6433:6:22","nodeType":"YulTypedName","src":"6433:6:22","type":""}],"src":"6357:388:22"},{"body":{"nativeSrc":"6782:95:22","nodeType":"YulBlock","src":"6782:95:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6799:1:22","nodeType":"YulLiteral","src":"6799:1:22","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"6806:3:22","nodeType":"YulLiteral","src":"6806:3:22","type":"","value":"224"},{"kind":"number","nativeSrc":"6811:10:22","nodeType":"YulLiteral","src":"6811:10:22","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"6802:3:22","nodeType":"YulIdentifier","src":"6802:3:22"},"nativeSrc":"6802:20:22","nodeType":"YulFunctionCall","src":"6802:20:22"}],"functionName":{"name":"mstore","nativeSrc":"6792:6:22","nodeType":"YulIdentifier","src":"6792:6:22"},"nativeSrc":"6792:31:22","nodeType":"YulFunctionCall","src":"6792:31:22"},"nativeSrc":"6792:31:22","nodeType":"YulExpressionStatement","src":"6792:31:22"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"6839:1:22","nodeType":"YulLiteral","src":"6839:1:22","type":"","value":"4"},{"kind":"number","nativeSrc":"6842:4:22","nodeType":"YulLiteral","src":"6842:4:22","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"6832:6:22","nodeType":"YulIdentifier","src":"6832:6:22"},"nativeSrc":"6832:15:22","nodeType":"YulFunctionCall","src":"6832:15:22"},"nativeSrc":"6832:15:22","nodeType":"YulExpressionStatement","src":"6832:15:22"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"6863:1:22","nodeType":"YulLiteral","src":"6863:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"6866:4:22","nodeType":"YulLiteral","src":"6866:4:22","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"6856:6:22","nodeType":"YulIdentifier","src":"6856:6:22"},"nativeSrc":"6856:15:22","nodeType":"YulFunctionCall","src":"6856:15:22"},"nativeSrc":"6856:15:22","nodeType":"YulExpressionStatement","src":"6856:15:22"}]},"name":"panic_error_0x41","nativeSrc":"6750:127:22","nodeType":"YulFunctionDefinition","src":"6750:127:22"},{"body":{"nativeSrc":"6927:230:22","nodeType":"YulBlock","src":"6927:230:22","statements":[{"nativeSrc":"6937:19:22","nodeType":"YulAssignment","src":"6937:19:22","value":{"arguments":[{"kind":"number","nativeSrc":"6953:2:22","nodeType":"YulLiteral","src":"6953:2:22","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"6947:5:22","nodeType":"YulIdentifier","src":"6947:5:22"},"nativeSrc":"6947:9:22","nodeType":"YulFunctionCall","src":"6947:9:22"},"variableNames":[{"name":"memPtr","nativeSrc":"6937:6:22","nodeType":"YulIdentifier","src":"6937:6:22"}]},{"nativeSrc":"6965:58:22","nodeType":"YulVariableDeclaration","src":"6965:58:22","value":{"arguments":[{"name":"memPtr","nativeSrc":"6987:6:22","nodeType":"YulIdentifier","src":"6987:6:22"},{"arguments":[{"arguments":[{"name":"size","nativeSrc":"7003:4:22","nodeType":"YulIdentifier","src":"7003:4:22"},{"kind":"number","nativeSrc":"7009:2:22","nodeType":"YulLiteral","src":"7009:2:22","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"6999:3:22","nodeType":"YulIdentifier","src":"6999:3:22"},"nativeSrc":"6999:13:22","nodeType":"YulFunctionCall","src":"6999:13:22"},{"arguments":[{"kind":"number","nativeSrc":"7018:2:22","nodeType":"YulLiteral","src":"7018:2:22","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"7014:3:22","nodeType":"YulIdentifier","src":"7014:3:22"},"nativeSrc":"7014:7:22","nodeType":"YulFunctionCall","src":"7014:7:22"}],"functionName":{"name":"and","nativeSrc":"6995:3:22","nodeType":"YulIdentifier","src":"6995:3:22"},"nativeSrc":"6995:27:22","nodeType":"YulFunctionCall","src":"6995:27:22"}],"functionName":{"name":"add","nativeSrc":"6983:3:22","nodeType":"YulIdentifier","src":"6983:3:22"},"nativeSrc":"6983:40:22","nodeType":"YulFunctionCall","src":"6983:40:22"},"variables":[{"name":"newFreePtr","nativeSrc":"6969:10:22","nodeType":"YulTypedName","src":"6969:10:22","type":""}]},{"body":{"nativeSrc":"7098:22:22","nodeType":"YulBlock","src":"7098:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"7100:16:22","nodeType":"YulIdentifier","src":"7100:16:22"},"nativeSrc":"7100:18:22","nodeType":"YulFunctionCall","src":"7100:18:22"},"nativeSrc":"7100:18:22","nodeType":"YulExpressionStatement","src":"7100:18:22"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nativeSrc":"7041:10:22","nodeType":"YulIdentifier","src":"7041:10:22"},{"kind":"number","nativeSrc":"7053:18:22","nodeType":"YulLiteral","src":"7053:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"7038:2:22","nodeType":"YulIdentifier","src":"7038:2:22"},"nativeSrc":"7038:34:22","nodeType":"YulFunctionCall","src":"7038:34:22"},{"arguments":[{"name":"newFreePtr","nativeSrc":"7077:10:22","nodeType":"YulIdentifier","src":"7077:10:22"},{"name":"memPtr","nativeSrc":"7089:6:22","nodeType":"YulIdentifier","src":"7089:6:22"}],"functionName":{"name":"lt","nativeSrc":"7074:2:22","nodeType":"YulIdentifier","src":"7074:2:22"},"nativeSrc":"7074:22:22","nodeType":"YulFunctionCall","src":"7074:22:22"}],"functionName":{"name":"or","nativeSrc":"7035:2:22","nodeType":"YulIdentifier","src":"7035:2:22"},"nativeSrc":"7035:62:22","nodeType":"YulFunctionCall","src":"7035:62:22"},"nativeSrc":"7032:88:22","nodeType":"YulIf","src":"7032:88:22"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"7136:2:22","nodeType":"YulLiteral","src":"7136:2:22","type":"","value":"64"},{"name":"newFreePtr","nativeSrc":"7140:10:22","nodeType":"YulIdentifier","src":"7140:10:22"}],"functionName":{"name":"mstore","nativeSrc":"7129:6:22","nodeType":"YulIdentifier","src":"7129:6:22"},"nativeSrc":"7129:22:22","nodeType":"YulFunctionCall","src":"7129:22:22"},"nativeSrc":"7129:22:22","nodeType":"YulExpressionStatement","src":"7129:22:22"}]},"name":"allocate_memory","nativeSrc":"6882:275:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nativeSrc":"6907:4:22","nodeType":"YulTypedName","src":"6907:4:22","type":""}],"returnVariables":[{"name":"memPtr","nativeSrc":"6916:6:22","nodeType":"YulTypedName","src":"6916:6:22","type":""}],"src":"6882:275:22"},{"body":{"nativeSrc":"7231:114:22","nodeType":"YulBlock","src":"7231:114:22","statements":[{"body":{"nativeSrc":"7275:22:22","nodeType":"YulBlock","src":"7275:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"7277:16:22","nodeType":"YulIdentifier","src":"7277:16:22"},"nativeSrc":"7277:18:22","nodeType":"YulFunctionCall","src":"7277:18:22"},"nativeSrc":"7277:18:22","nodeType":"YulExpressionStatement","src":"7277:18:22"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"7247:6:22","nodeType":"YulIdentifier","src":"7247:6:22"},{"kind":"number","nativeSrc":"7255:18:22","nodeType":"YulLiteral","src":"7255:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"7244:2:22","nodeType":"YulIdentifier","src":"7244:2:22"},"nativeSrc":"7244:30:22","nodeType":"YulFunctionCall","src":"7244:30:22"},"nativeSrc":"7241:56:22","nodeType":"YulIf","src":"7241:56:22"},{"nativeSrc":"7306:33:22","nodeType":"YulAssignment","src":"7306:33:22","value":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"7322:1:22","nodeType":"YulLiteral","src":"7322:1:22","type":"","value":"5"},{"name":"length","nativeSrc":"7325:6:22","nodeType":"YulIdentifier","src":"7325:6:22"}],"functionName":{"name":"shl","nativeSrc":"7318:3:22","nodeType":"YulIdentifier","src":"7318:3:22"},"nativeSrc":"7318:14:22","nodeType":"YulFunctionCall","src":"7318:14:22"},{"kind":"number","nativeSrc":"7334:4:22","nodeType":"YulLiteral","src":"7334:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"7314:3:22","nodeType":"YulIdentifier","src":"7314:3:22"},"nativeSrc":"7314:25:22","nodeType":"YulFunctionCall","src":"7314:25:22"},"variableNames":[{"name":"size","nativeSrc":"7306:4:22","nodeType":"YulIdentifier","src":"7306:4:22"}]}]},"name":"array_allocation_size_array_uint256_dyn","nativeSrc":"7162:183:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nativeSrc":"7211:6:22","nodeType":"YulTypedName","src":"7211:6:22","type":""}],"returnVariables":[{"name":"size","nativeSrc":"7222:4:22","nodeType":"YulTypedName","src":"7222:4:22","type":""}],"src":"7162:183:22"},{"body":{"nativeSrc":"7462:914:22","nodeType":"YulBlock","src":"7462:914:22","statements":[{"body":{"nativeSrc":"7508:16:22","nodeType":"YulBlock","src":"7508:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"7517:1:22","nodeType":"YulLiteral","src":"7517:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"7520:1:22","nodeType":"YulLiteral","src":"7520:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"7510:6:22","nodeType":"YulIdentifier","src":"7510:6:22"},"nativeSrc":"7510:12:22","nodeType":"YulFunctionCall","src":"7510:12:22"},"nativeSrc":"7510:12:22","nodeType":"YulExpressionStatement","src":"7510:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"7483:7:22","nodeType":"YulIdentifier","src":"7483:7:22"},{"name":"headStart","nativeSrc":"7492:9:22","nodeType":"YulIdentifier","src":"7492:9:22"}],"functionName":{"name":"sub","nativeSrc":"7479:3:22","nodeType":"YulIdentifier","src":"7479:3:22"},"nativeSrc":"7479:23:22","nodeType":"YulFunctionCall","src":"7479:23:22"},{"kind":"number","nativeSrc":"7504:2:22","nodeType":"YulLiteral","src":"7504:2:22","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"7475:3:22","nodeType":"YulIdentifier","src":"7475:3:22"},"nativeSrc":"7475:32:22","nodeType":"YulFunctionCall","src":"7475:32:22"},"nativeSrc":"7472:52:22","nodeType":"YulIf","src":"7472:52:22"},{"nativeSrc":"7533:36:22","nodeType":"YulVariableDeclaration","src":"7533:36:22","value":{"arguments":[{"name":"headStart","nativeSrc":"7559:9:22","nodeType":"YulIdentifier","src":"7559:9:22"}],"functionName":{"name":"calldataload","nativeSrc":"7546:12:22","nodeType":"YulIdentifier","src":"7546:12:22"},"nativeSrc":"7546:23:22","nodeType":"YulFunctionCall","src":"7546:23:22"},"variables":[{"name":"value","nativeSrc":"7537:5:22","nodeType":"YulTypedName","src":"7537:5:22","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"7603:5:22","nodeType":"YulIdentifier","src":"7603:5:22"}],"functionName":{"name":"validator_revert_address","nativeSrc":"7578:24:22","nodeType":"YulIdentifier","src":"7578:24:22"},"nativeSrc":"7578:31:22","nodeType":"YulFunctionCall","src":"7578:31:22"},"nativeSrc":"7578:31:22","nodeType":"YulExpressionStatement","src":"7578:31:22"},{"nativeSrc":"7618:15:22","nodeType":"YulAssignment","src":"7618:15:22","value":{"name":"value","nativeSrc":"7628:5:22","nodeType":"YulIdentifier","src":"7628:5:22"},"variableNames":[{"name":"value0","nativeSrc":"7618:6:22","nodeType":"YulIdentifier","src":"7618:6:22"}]},{"nativeSrc":"7642:12:22","nodeType":"YulVariableDeclaration","src":"7642:12:22","value":{"kind":"number","nativeSrc":"7652:2:22","nodeType":"YulLiteral","src":"7652:2:22","type":"","value":"32"},"variables":[{"name":"_1","nativeSrc":"7646:2:22","nodeType":"YulTypedName","src":"7646:2:22","type":""}]},{"nativeSrc":"7663:46:22","nodeType":"YulVariableDeclaration","src":"7663:46:22","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7694:9:22","nodeType":"YulIdentifier","src":"7694:9:22"},{"name":"_1","nativeSrc":"7705:2:22","nodeType":"YulIdentifier","src":"7705:2:22"}],"functionName":{"name":"add","nativeSrc":"7690:3:22","nodeType":"YulIdentifier","src":"7690:3:22"},"nativeSrc":"7690:18:22","nodeType":"YulFunctionCall","src":"7690:18:22"}],"functionName":{"name":"calldataload","nativeSrc":"7677:12:22","nodeType":"YulIdentifier","src":"7677:12:22"},"nativeSrc":"7677:32:22","nodeType":"YulFunctionCall","src":"7677:32:22"},"variables":[{"name":"offset","nativeSrc":"7667:6:22","nodeType":"YulTypedName","src":"7667:6:22","type":""}]},{"body":{"nativeSrc":"7752:16:22","nodeType":"YulBlock","src":"7752:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"7761:1:22","nodeType":"YulLiteral","src":"7761:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"7764:1:22","nodeType":"YulLiteral","src":"7764:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"7754:6:22","nodeType":"YulIdentifier","src":"7754:6:22"},"nativeSrc":"7754:12:22","nodeType":"YulFunctionCall","src":"7754:12:22"},"nativeSrc":"7754:12:22","nodeType":"YulExpressionStatement","src":"7754:12:22"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"7724:6:22","nodeType":"YulIdentifier","src":"7724:6:22"},{"kind":"number","nativeSrc":"7732:18:22","nodeType":"YulLiteral","src":"7732:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"7721:2:22","nodeType":"YulIdentifier","src":"7721:2:22"},"nativeSrc":"7721:30:22","nodeType":"YulFunctionCall","src":"7721:30:22"},"nativeSrc":"7718:50:22","nodeType":"YulIf","src":"7718:50:22"},{"nativeSrc":"7777:32:22","nodeType":"YulVariableDeclaration","src":"7777:32:22","value":{"arguments":[{"name":"headStart","nativeSrc":"7791:9:22","nodeType":"YulIdentifier","src":"7791:9:22"},{"name":"offset","nativeSrc":"7802:6:22","nodeType":"YulIdentifier","src":"7802:6:22"}],"functionName":{"name":"add","nativeSrc":"7787:3:22","nodeType":"YulIdentifier","src":"7787:3:22"},"nativeSrc":"7787:22:22","nodeType":"YulFunctionCall","src":"7787:22:22"},"variables":[{"name":"_2","nativeSrc":"7781:2:22","nodeType":"YulTypedName","src":"7781:2:22","type":""}]},{"body":{"nativeSrc":"7857:16:22","nodeType":"YulBlock","src":"7857:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"7866:1:22","nodeType":"YulLiteral","src":"7866:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"7869:1:22","nodeType":"YulLiteral","src":"7869:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"7859:6:22","nodeType":"YulIdentifier","src":"7859:6:22"},"nativeSrc":"7859:12:22","nodeType":"YulFunctionCall","src":"7859:12:22"},"nativeSrc":"7859:12:22","nodeType":"YulExpressionStatement","src":"7859:12:22"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nativeSrc":"7836:2:22","nodeType":"YulIdentifier","src":"7836:2:22"},{"kind":"number","nativeSrc":"7840:4:22","nodeType":"YulLiteral","src":"7840:4:22","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"7832:3:22","nodeType":"YulIdentifier","src":"7832:3:22"},"nativeSrc":"7832:13:22","nodeType":"YulFunctionCall","src":"7832:13:22"},{"name":"dataEnd","nativeSrc":"7847:7:22","nodeType":"YulIdentifier","src":"7847:7:22"}],"functionName":{"name":"slt","nativeSrc":"7828:3:22","nodeType":"YulIdentifier","src":"7828:3:22"},"nativeSrc":"7828:27:22","nodeType":"YulFunctionCall","src":"7828:27:22"}],"functionName":{"name":"iszero","nativeSrc":"7821:6:22","nodeType":"YulIdentifier","src":"7821:6:22"},"nativeSrc":"7821:35:22","nodeType":"YulFunctionCall","src":"7821:35:22"},"nativeSrc":"7818:55:22","nodeType":"YulIf","src":"7818:55:22"},{"nativeSrc":"7882:26:22","nodeType":"YulVariableDeclaration","src":"7882:26:22","value":{"arguments":[{"name":"_2","nativeSrc":"7905:2:22","nodeType":"YulIdentifier","src":"7905:2:22"}],"functionName":{"name":"calldataload","nativeSrc":"7892:12:22","nodeType":"YulIdentifier","src":"7892:12:22"},"nativeSrc":"7892:16:22","nodeType":"YulFunctionCall","src":"7892:16:22"},"variables":[{"name":"_3","nativeSrc":"7886:2:22","nodeType":"YulTypedName","src":"7886:2:22","type":""}]},{"nativeSrc":"7917:71:22","nodeType":"YulVariableDeclaration","src":"7917:71:22","value":{"arguments":[{"arguments":[{"name":"_3","nativeSrc":"7984:2:22","nodeType":"YulIdentifier","src":"7984:2:22"}],"functionName":{"name":"array_allocation_size_array_uint256_dyn","nativeSrc":"7944:39:22","nodeType":"YulIdentifier","src":"7944:39:22"},"nativeSrc":"7944:43:22","nodeType":"YulFunctionCall","src":"7944:43:22"}],"functionName":{"name":"allocate_memory","nativeSrc":"7928:15:22","nodeType":"YulIdentifier","src":"7928:15:22"},"nativeSrc":"7928:60:22","nodeType":"YulFunctionCall","src":"7928:60:22"},"variables":[{"name":"dst","nativeSrc":"7921:3:22","nodeType":"YulTypedName","src":"7921:3:22","type":""}]},{"nativeSrc":"7997:16:22","nodeType":"YulVariableDeclaration","src":"7997:16:22","value":{"name":"dst","nativeSrc":"8010:3:22","nodeType":"YulIdentifier","src":"8010:3:22"},"variables":[{"name":"dst_1","nativeSrc":"8001:5:22","nodeType":"YulTypedName","src":"8001:5:22","type":""}]},{"expression":{"arguments":[{"name":"dst","nativeSrc":"8029:3:22","nodeType":"YulIdentifier","src":"8029:3:22"},{"name":"_3","nativeSrc":"8034:2:22","nodeType":"YulIdentifier","src":"8034:2:22"}],"functionName":{"name":"mstore","nativeSrc":"8022:6:22","nodeType":"YulIdentifier","src":"8022:6:22"},"nativeSrc":"8022:15:22","nodeType":"YulFunctionCall","src":"8022:15:22"},"nativeSrc":"8022:15:22","nodeType":"YulExpressionStatement","src":"8022:15:22"},{"nativeSrc":"8046:19:22","nodeType":"YulAssignment","src":"8046:19:22","value":{"arguments":[{"name":"dst","nativeSrc":"8057:3:22","nodeType":"YulIdentifier","src":"8057:3:22"},{"name":"_1","nativeSrc":"8062:2:22","nodeType":"YulIdentifier","src":"8062:2:22"}],"functionName":{"name":"add","nativeSrc":"8053:3:22","nodeType":"YulIdentifier","src":"8053:3:22"},"nativeSrc":"8053:12:22","nodeType":"YulFunctionCall","src":"8053:12:22"},"variableNames":[{"name":"dst","nativeSrc":"8046:3:22","nodeType":"YulIdentifier","src":"8046:3:22"}]},{"nativeSrc":"8074:42:22","nodeType":"YulVariableDeclaration","src":"8074:42:22","value":{"arguments":[{"arguments":[{"name":"_2","nativeSrc":"8096:2:22","nodeType":"YulIdentifier","src":"8096:2:22"},{"arguments":[{"kind":"number","nativeSrc":"8104:1:22","nodeType":"YulLiteral","src":"8104:1:22","type":"","value":"5"},{"name":"_3","nativeSrc":"8107:2:22","nodeType":"YulIdentifier","src":"8107:2:22"}],"functionName":{"name":"shl","nativeSrc":"8100:3:22","nodeType":"YulIdentifier","src":"8100:3:22"},"nativeSrc":"8100:10:22","nodeType":"YulFunctionCall","src":"8100:10:22"}],"functionName":{"name":"add","nativeSrc":"8092:3:22","nodeType":"YulIdentifier","src":"8092:3:22"},"nativeSrc":"8092:19:22","nodeType":"YulFunctionCall","src":"8092:19:22"},{"name":"_1","nativeSrc":"8113:2:22","nodeType":"YulIdentifier","src":"8113:2:22"}],"functionName":{"name":"add","nativeSrc":"8088:3:22","nodeType":"YulIdentifier","src":"8088:3:22"},"nativeSrc":"8088:28:22","nodeType":"YulFunctionCall","src":"8088:28:22"},"variables":[{"name":"srcEnd","nativeSrc":"8078:6:22","nodeType":"YulTypedName","src":"8078:6:22","type":""}]},{"body":{"nativeSrc":"8148:16:22","nodeType":"YulBlock","src":"8148:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"8157:1:22","nodeType":"YulLiteral","src":"8157:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"8160:1:22","nodeType":"YulLiteral","src":"8160:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"8150:6:22","nodeType":"YulIdentifier","src":"8150:6:22"},"nativeSrc":"8150:12:22","nodeType":"YulFunctionCall","src":"8150:12:22"},"nativeSrc":"8150:12:22","nodeType":"YulExpressionStatement","src":"8150:12:22"}]},"condition":{"arguments":[{"name":"srcEnd","nativeSrc":"8131:6:22","nodeType":"YulIdentifier","src":"8131:6:22"},{"name":"dataEnd","nativeSrc":"8139:7:22","nodeType":"YulIdentifier","src":"8139:7:22"}],"functionName":{"name":"gt","nativeSrc":"8128:2:22","nodeType":"YulIdentifier","src":"8128:2:22"},"nativeSrc":"8128:19:22","nodeType":"YulFunctionCall","src":"8128:19:22"},"nativeSrc":"8125:39:22","nodeType":"YulIf","src":"8125:39:22"},{"nativeSrc":"8173:22:22","nodeType":"YulVariableDeclaration","src":"8173:22:22","value":{"arguments":[{"name":"_2","nativeSrc":"8188:2:22","nodeType":"YulIdentifier","src":"8188:2:22"},{"name":"_1","nativeSrc":"8192:2:22","nodeType":"YulIdentifier","src":"8192:2:22"}],"functionName":{"name":"add","nativeSrc":"8184:3:22","nodeType":"YulIdentifier","src":"8184:3:22"},"nativeSrc":"8184:11:22","nodeType":"YulFunctionCall","src":"8184:11:22"},"variables":[{"name":"src","nativeSrc":"8177:3:22","nodeType":"YulTypedName","src":"8177:3:22","type":""}]},{"body":{"nativeSrc":"8260:86:22","nodeType":"YulBlock","src":"8260:86:22","statements":[{"expression":{"arguments":[{"name":"dst","nativeSrc":"8281:3:22","nodeType":"YulIdentifier","src":"8281:3:22"},{"arguments":[{"name":"src","nativeSrc":"8299:3:22","nodeType":"YulIdentifier","src":"8299:3:22"}],"functionName":{"name":"calldataload","nativeSrc":"8286:12:22","nodeType":"YulIdentifier","src":"8286:12:22"},"nativeSrc":"8286:17:22","nodeType":"YulFunctionCall","src":"8286:17:22"}],"functionName":{"name":"mstore","nativeSrc":"8274:6:22","nodeType":"YulIdentifier","src":"8274:6:22"},"nativeSrc":"8274:30:22","nodeType":"YulFunctionCall","src":"8274:30:22"},"nativeSrc":"8274:30:22","nodeType":"YulExpressionStatement","src":"8274:30:22"},{"nativeSrc":"8317:19:22","nodeType":"YulAssignment","src":"8317:19:22","value":{"arguments":[{"name":"dst","nativeSrc":"8328:3:22","nodeType":"YulIdentifier","src":"8328:3:22"},{"name":"_1","nativeSrc":"8333:2:22","nodeType":"YulIdentifier","src":"8333:2:22"}],"functionName":{"name":"add","nativeSrc":"8324:3:22","nodeType":"YulIdentifier","src":"8324:3:22"},"nativeSrc":"8324:12:22","nodeType":"YulFunctionCall","src":"8324:12:22"},"variableNames":[{"name":"dst","nativeSrc":"8317:3:22","nodeType":"YulIdentifier","src":"8317:3:22"}]}]},"condition":{"arguments":[{"name":"src","nativeSrc":"8215:3:22","nodeType":"YulIdentifier","src":"8215:3:22"},{"name":"srcEnd","nativeSrc":"8220:6:22","nodeType":"YulIdentifier","src":"8220:6:22"}],"functionName":{"name":"lt","nativeSrc":"8212:2:22","nodeType":"YulIdentifier","src":"8212:2:22"},"nativeSrc":"8212:15:22","nodeType":"YulFunctionCall","src":"8212:15:22"},"nativeSrc":"8204:142:22","nodeType":"YulForLoop","post":{"nativeSrc":"8228:23:22","nodeType":"YulBlock","src":"8228:23:22","statements":[{"nativeSrc":"8230:19:22","nodeType":"YulAssignment","src":"8230:19:22","value":{"arguments":[{"name":"src","nativeSrc":"8241:3:22","nodeType":"YulIdentifier","src":"8241:3:22"},{"name":"_1","nativeSrc":"8246:2:22","nodeType":"YulIdentifier","src":"8246:2:22"}],"functionName":{"name":"add","nativeSrc":"8237:3:22","nodeType":"YulIdentifier","src":"8237:3:22"},"nativeSrc":"8237:12:22","nodeType":"YulFunctionCall","src":"8237:12:22"},"variableNames":[{"name":"src","nativeSrc":"8230:3:22","nodeType":"YulIdentifier","src":"8230:3:22"}]}]},"pre":{"nativeSrc":"8208:3:22","nodeType":"YulBlock","src":"8208:3:22","statements":[]},"src":"8204:142:22"},{"nativeSrc":"8355:15:22","nodeType":"YulAssignment","src":"8355:15:22","value":{"name":"dst_1","nativeSrc":"8365:5:22","nodeType":"YulIdentifier","src":"8365:5:22"},"variableNames":[{"name":"value1","nativeSrc":"8355:6:22","nodeType":"YulIdentifier","src":"8355:6:22"}]}]},"name":"abi_decode_tuple_t_addresst_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"7350:1026:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7420:9:22","nodeType":"YulTypedName","src":"7420:9:22","type":""},{"name":"dataEnd","nativeSrc":"7431:7:22","nodeType":"YulTypedName","src":"7431:7:22","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"7443:6:22","nodeType":"YulTypedName","src":"7443:6:22","type":""},{"name":"value1","nativeSrc":"7451:6:22","nodeType":"YulTypedName","src":"7451:6:22","type":""}],"src":"7350:1026:22"},{"body":{"nativeSrc":"8610:236:22","nodeType":"YulBlock","src":"8610:236:22","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"8627:9:22","nodeType":"YulIdentifier","src":"8627:9:22"},{"kind":"number","nativeSrc":"8638:2:22","nodeType":"YulLiteral","src":"8638:2:22","type":"","value":"64"}],"functionName":{"name":"mstore","nativeSrc":"8620:6:22","nodeType":"YulIdentifier","src":"8620:6:22"},"nativeSrc":"8620:21:22","nodeType":"YulFunctionCall","src":"8620:21:22"},"nativeSrc":"8620:21:22","nodeType":"YulExpressionStatement","src":"8620:21:22"},{"nativeSrc":"8650:70:22","nodeType":"YulVariableDeclaration","src":"8650:70:22","value":{"arguments":[{"name":"value0","nativeSrc":"8693:6:22","nodeType":"YulIdentifier","src":"8693:6:22"},{"arguments":[{"name":"headStart","nativeSrc":"8705:9:22","nodeType":"YulIdentifier","src":"8705:9:22"},{"kind":"number","nativeSrc":"8716:2:22","nodeType":"YulLiteral","src":"8716:2:22","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"8701:3:22","nodeType":"YulIdentifier","src":"8701:3:22"},"nativeSrc":"8701:18:22","nodeType":"YulFunctionCall","src":"8701:18:22"}],"functionName":{"name":"abi_encode_array_uint256_dyn","nativeSrc":"8664:28:22","nodeType":"YulIdentifier","src":"8664:28:22"},"nativeSrc":"8664:56:22","nodeType":"YulFunctionCall","src":"8664:56:22"},"variables":[{"name":"tail_1","nativeSrc":"8654:6:22","nodeType":"YulTypedName","src":"8654:6:22","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8740:9:22","nodeType":"YulIdentifier","src":"8740:9:22"},{"kind":"number","nativeSrc":"8751:2:22","nodeType":"YulLiteral","src":"8751:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"8736:3:22","nodeType":"YulIdentifier","src":"8736:3:22"},"nativeSrc":"8736:18:22","nodeType":"YulFunctionCall","src":"8736:18:22"},{"arguments":[{"name":"tail_1","nativeSrc":"8760:6:22","nodeType":"YulIdentifier","src":"8760:6:22"},{"name":"headStart","nativeSrc":"8768:9:22","nodeType":"YulIdentifier","src":"8768:9:22"}],"functionName":{"name":"sub","nativeSrc":"8756:3:22","nodeType":"YulIdentifier","src":"8756:3:22"},"nativeSrc":"8756:22:22","nodeType":"YulFunctionCall","src":"8756:22:22"}],"functionName":{"name":"mstore","nativeSrc":"8729:6:22","nodeType":"YulIdentifier","src":"8729:6:22"},"nativeSrc":"8729:50:22","nodeType":"YulFunctionCall","src":"8729:50:22"},"nativeSrc":"8729:50:22","nodeType":"YulExpressionStatement","src":"8729:50:22"},{"nativeSrc":"8788:52:22","nodeType":"YulAssignment","src":"8788:52:22","value":{"arguments":[{"name":"value1","nativeSrc":"8825:6:22","nodeType":"YulIdentifier","src":"8825:6:22"},{"name":"tail_1","nativeSrc":"8833:6:22","nodeType":"YulIdentifier","src":"8833:6:22"}],"functionName":{"name":"abi_encode_array_uint256_dyn","nativeSrc":"8796:28:22","nodeType":"YulIdentifier","src":"8796:28:22"},"nativeSrc":"8796:44:22","nodeType":"YulFunctionCall","src":"8796:44:22"},"variableNames":[{"name":"tail","nativeSrc":"8788:4:22","nodeType":"YulIdentifier","src":"8788:4:22"}]}]},"name":"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nativeSrc":"8381:465:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8571:9:22","nodeType":"YulTypedName","src":"8571:9:22","type":""},{"name":"value1","nativeSrc":"8582:6:22","nodeType":"YulTypedName","src":"8582:6:22","type":""},{"name":"value0","nativeSrc":"8590:6:22","nodeType":"YulTypedName","src":"8590:6:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"8601:4:22","nodeType":"YulTypedName","src":"8601:4:22","type":""}],"src":"8381:465:22"},{"body":{"nativeSrc":"8906:325:22","nodeType":"YulBlock","src":"8906:325:22","statements":[{"nativeSrc":"8916:22:22","nodeType":"YulAssignment","src":"8916:22:22","value":{"arguments":[{"kind":"number","nativeSrc":"8930:1:22","nodeType":"YulLiteral","src":"8930:1:22","type":"","value":"1"},{"name":"data","nativeSrc":"8933:4:22","nodeType":"YulIdentifier","src":"8933:4:22"}],"functionName":{"name":"shr","nativeSrc":"8926:3:22","nodeType":"YulIdentifier","src":"8926:3:22"},"nativeSrc":"8926:12:22","nodeType":"YulFunctionCall","src":"8926:12:22"},"variableNames":[{"name":"length","nativeSrc":"8916:6:22","nodeType":"YulIdentifier","src":"8916:6:22"}]},{"nativeSrc":"8947:38:22","nodeType":"YulVariableDeclaration","src":"8947:38:22","value":{"arguments":[{"name":"data","nativeSrc":"8977:4:22","nodeType":"YulIdentifier","src":"8977:4:22"},{"kind":"number","nativeSrc":"8983:1:22","nodeType":"YulLiteral","src":"8983:1:22","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"8973:3:22","nodeType":"YulIdentifier","src":"8973:3:22"},"nativeSrc":"8973:12:22","nodeType":"YulFunctionCall","src":"8973:12:22"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"8951:18:22","nodeType":"YulTypedName","src":"8951:18:22","type":""}]},{"body":{"nativeSrc":"9024:31:22","nodeType":"YulBlock","src":"9024:31:22","statements":[{"nativeSrc":"9026:27:22","nodeType":"YulAssignment","src":"9026:27:22","value":{"arguments":[{"name":"length","nativeSrc":"9040:6:22","nodeType":"YulIdentifier","src":"9040:6:22"},{"kind":"number","nativeSrc":"9048:4:22","nodeType":"YulLiteral","src":"9048:4:22","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"9036:3:22","nodeType":"YulIdentifier","src":"9036:3:22"},"nativeSrc":"9036:17:22","nodeType":"YulFunctionCall","src":"9036:17:22"},"variableNames":[{"name":"length","nativeSrc":"9026:6:22","nodeType":"YulIdentifier","src":"9026:6:22"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"9004:18:22","nodeType":"YulIdentifier","src":"9004:18:22"}],"functionName":{"name":"iszero","nativeSrc":"8997:6:22","nodeType":"YulIdentifier","src":"8997:6:22"},"nativeSrc":"8997:26:22","nodeType":"YulFunctionCall","src":"8997:26:22"},"nativeSrc":"8994:61:22","nodeType":"YulIf","src":"8994:61:22"},{"body":{"nativeSrc":"9114:111:22","nodeType":"YulBlock","src":"9114:111:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"9135:1:22","nodeType":"YulLiteral","src":"9135:1:22","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"9142:3:22","nodeType":"YulLiteral","src":"9142:3:22","type":"","value":"224"},{"kind":"number","nativeSrc":"9147:10:22","nodeType":"YulLiteral","src":"9147:10:22","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"9138:3:22","nodeType":"YulIdentifier","src":"9138:3:22"},"nativeSrc":"9138:20:22","nodeType":"YulFunctionCall","src":"9138:20:22"}],"functionName":{"name":"mstore","nativeSrc":"9128:6:22","nodeType":"YulIdentifier","src":"9128:6:22"},"nativeSrc":"9128:31:22","nodeType":"YulFunctionCall","src":"9128:31:22"},"nativeSrc":"9128:31:22","nodeType":"YulExpressionStatement","src":"9128:31:22"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"9179:1:22","nodeType":"YulLiteral","src":"9179:1:22","type":"","value":"4"},{"kind":"number","nativeSrc":"9182:4:22","nodeType":"YulLiteral","src":"9182:4:22","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"9172:6:22","nodeType":"YulIdentifier","src":"9172:6:22"},"nativeSrc":"9172:15:22","nodeType":"YulFunctionCall","src":"9172:15:22"},"nativeSrc":"9172:15:22","nodeType":"YulExpressionStatement","src":"9172:15:22"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"9207:1:22","nodeType":"YulLiteral","src":"9207:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"9210:4:22","nodeType":"YulLiteral","src":"9210:4:22","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"9200:6:22","nodeType":"YulIdentifier","src":"9200:6:22"},"nativeSrc":"9200:15:22","nodeType":"YulFunctionCall","src":"9200:15:22"},"nativeSrc":"9200:15:22","nodeType":"YulExpressionStatement","src":"9200:15:22"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"9070:18:22","nodeType":"YulIdentifier","src":"9070:18:22"},{"arguments":[{"name":"length","nativeSrc":"9093:6:22","nodeType":"YulIdentifier","src":"9093:6:22"},{"kind":"number","nativeSrc":"9101:2:22","nodeType":"YulLiteral","src":"9101:2:22","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"9090:2:22","nodeType":"YulIdentifier","src":"9090:2:22"},"nativeSrc":"9090:14:22","nodeType":"YulFunctionCall","src":"9090:14:22"}],"functionName":{"name":"eq","nativeSrc":"9067:2:22","nodeType":"YulIdentifier","src":"9067:2:22"},"nativeSrc":"9067:38:22","nodeType":"YulFunctionCall","src":"9067:38:22"},"nativeSrc":"9064:161:22","nodeType":"YulIf","src":"9064:161:22"}]},"name":"extract_byte_array_length","nativeSrc":"8851:380:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"8886:4:22","nodeType":"YulTypedName","src":"8886:4:22","type":""}],"returnVariables":[{"name":"length","nativeSrc":"8895:6:22","nodeType":"YulTypedName","src":"8895:6:22","type":""}],"src":"8851:380:22"},{"body":{"nativeSrc":"9317:170:22","nodeType":"YulBlock","src":"9317:170:22","statements":[{"body":{"nativeSrc":"9363:16:22","nodeType":"YulBlock","src":"9363:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"9372:1:22","nodeType":"YulLiteral","src":"9372:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"9375:1:22","nodeType":"YulLiteral","src":"9375:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"9365:6:22","nodeType":"YulIdentifier","src":"9365:6:22"},"nativeSrc":"9365:12:22","nodeType":"YulFunctionCall","src":"9365:12:22"},"nativeSrc":"9365:12:22","nodeType":"YulExpressionStatement","src":"9365:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"9338:7:22","nodeType":"YulIdentifier","src":"9338:7:22"},{"name":"headStart","nativeSrc":"9347:9:22","nodeType":"YulIdentifier","src":"9347:9:22"}],"functionName":{"name":"sub","nativeSrc":"9334:3:22","nodeType":"YulIdentifier","src":"9334:3:22"},"nativeSrc":"9334:23:22","nodeType":"YulFunctionCall","src":"9334:23:22"},{"kind":"number","nativeSrc":"9359:2:22","nodeType":"YulLiteral","src":"9359:2:22","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"9330:3:22","nodeType":"YulIdentifier","src":"9330:3:22"},"nativeSrc":"9330:32:22","nodeType":"YulFunctionCall","src":"9330:32:22"},"nativeSrc":"9327:52:22","nodeType":"YulIf","src":"9327:52:22"},{"nativeSrc":"9388:29:22","nodeType":"YulVariableDeclaration","src":"9388:29:22","value":{"arguments":[{"name":"headStart","nativeSrc":"9407:9:22","nodeType":"YulIdentifier","src":"9407:9:22"}],"functionName":{"name":"mload","nativeSrc":"9401:5:22","nodeType":"YulIdentifier","src":"9401:5:22"},"nativeSrc":"9401:16:22","nodeType":"YulFunctionCall","src":"9401:16:22"},"variables":[{"name":"value","nativeSrc":"9392:5:22","nodeType":"YulTypedName","src":"9392:5:22","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"9451:5:22","nodeType":"YulIdentifier","src":"9451:5:22"}],"functionName":{"name":"validator_revert_address","nativeSrc":"9426:24:22","nodeType":"YulIdentifier","src":"9426:24:22"},"nativeSrc":"9426:31:22","nodeType":"YulFunctionCall","src":"9426:31:22"},"nativeSrc":"9426:31:22","nodeType":"YulExpressionStatement","src":"9426:31:22"},{"nativeSrc":"9466:15:22","nodeType":"YulAssignment","src":"9466:15:22","value":{"name":"value","nativeSrc":"9476:5:22","nodeType":"YulIdentifier","src":"9476:5:22"},"variableNames":[{"name":"value0","nativeSrc":"9466:6:22","nodeType":"YulIdentifier","src":"9466:6:22"}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nativeSrc":"9236:251:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9283:9:22","nodeType":"YulTypedName","src":"9283:9:22","type":""},{"name":"dataEnd","nativeSrc":"9294:7:22","nodeType":"YulTypedName","src":"9294:7:22","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"9306:6:22","nodeType":"YulTypedName","src":"9306:6:22","type":""}],"src":"9236:251:22"},{"body":{"nativeSrc":"9666:164:22","nodeType":"YulBlock","src":"9666:164:22","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"9683:9:22","nodeType":"YulIdentifier","src":"9683:9:22"},{"kind":"number","nativeSrc":"9694:2:22","nodeType":"YulLiteral","src":"9694:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"9676:6:22","nodeType":"YulIdentifier","src":"9676:6:22"},"nativeSrc":"9676:21:22","nodeType":"YulFunctionCall","src":"9676:21:22"},"nativeSrc":"9676:21:22","nodeType":"YulExpressionStatement","src":"9676:21:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9717:9:22","nodeType":"YulIdentifier","src":"9717:9:22"},{"kind":"number","nativeSrc":"9728:2:22","nodeType":"YulLiteral","src":"9728:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"9713:3:22","nodeType":"YulIdentifier","src":"9713:3:22"},"nativeSrc":"9713:18:22","nodeType":"YulFunctionCall","src":"9713:18:22"},{"kind":"number","nativeSrc":"9733:2:22","nodeType":"YulLiteral","src":"9733:2:22","type":"","value":"14"}],"functionName":{"name":"mstore","nativeSrc":"9706:6:22","nodeType":"YulIdentifier","src":"9706:6:22"},"nativeSrc":"9706:30:22","nodeType":"YulFunctionCall","src":"9706:30:22"},"nativeSrc":"9706:30:22","nodeType":"YulExpressionStatement","src":"9706:30:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9756:9:22","nodeType":"YulIdentifier","src":"9756:9:22"},{"kind":"number","nativeSrc":"9767:2:22","nodeType":"YulLiteral","src":"9767:2:22","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"9752:3:22","nodeType":"YulIdentifier","src":"9752:3:22"},"nativeSrc":"9752:18:22","nodeType":"YulFunctionCall","src":"9752:18:22"},{"hexValue":"4f6e6c7920506572697068657279","kind":"string","nativeSrc":"9772:16:22","nodeType":"YulLiteral","src":"9772:16:22","type":"","value":"Only Periphery"}],"functionName":{"name":"mstore","nativeSrc":"9745:6:22","nodeType":"YulIdentifier","src":"9745:6:22"},"nativeSrc":"9745:44:22","nodeType":"YulFunctionCall","src":"9745:44:22"},"nativeSrc":"9745:44:22","nodeType":"YulExpressionStatement","src":"9745:44:22"},{"nativeSrc":"9798:26:22","nodeType":"YulAssignment","src":"9798:26:22","value":{"arguments":[{"name":"headStart","nativeSrc":"9810:9:22","nodeType":"YulIdentifier","src":"9810:9:22"},{"kind":"number","nativeSrc":"9821:2:22","nodeType":"YulLiteral","src":"9821:2:22","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"9806:3:22","nodeType":"YulIdentifier","src":"9806:3:22"},"nativeSrc":"9806:18:22","nodeType":"YulFunctionCall","src":"9806:18:22"},"variableNames":[{"name":"tail","nativeSrc":"9798:4:22","nodeType":"YulIdentifier","src":"9798:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_e84ca658204d8225a6124393bf429fae79ddb71fa88578d833d3a2b9b5da52d2__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"9492:338:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9643:9:22","nodeType":"YulTypedName","src":"9643:9:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"9657:4:22","nodeType":"YulTypedName","src":"9657:4:22","type":""}],"src":"9492:338:22"},{"body":{"nativeSrc":"10009:170:22","nodeType":"YulBlock","src":"10009:170:22","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"10026:9:22","nodeType":"YulIdentifier","src":"10026:9:22"},{"kind":"number","nativeSrc":"10037:2:22","nodeType":"YulLiteral","src":"10037:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"10019:6:22","nodeType":"YulIdentifier","src":"10019:6:22"},"nativeSrc":"10019:21:22","nodeType":"YulFunctionCall","src":"10019:21:22"},"nativeSrc":"10019:21:22","nodeType":"YulExpressionStatement","src":"10019:21:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10060:9:22","nodeType":"YulIdentifier","src":"10060:9:22"},{"kind":"number","nativeSrc":"10071:2:22","nodeType":"YulLiteral","src":"10071:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"10056:3:22","nodeType":"YulIdentifier","src":"10056:3:22"},"nativeSrc":"10056:18:22","nodeType":"YulFunctionCall","src":"10056:18:22"},{"kind":"number","nativeSrc":"10076:2:22","nodeType":"YulLiteral","src":"10076:2:22","type":"","value":"20"}],"functionName":{"name":"mstore","nativeSrc":"10049:6:22","nodeType":"YulIdentifier","src":"10049:6:22"},"nativeSrc":"10049:30:22","nodeType":"YulFunctionCall","src":"10049:30:22"},"nativeSrc":"10049:30:22","nodeType":"YulExpressionStatement","src":"10049:30:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10099:9:22","nodeType":"YulIdentifier","src":"10099:9:22"},{"kind":"number","nativeSrc":"10110:2:22","nodeType":"YulLiteral","src":"10110:2:22","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"10095:3:22","nodeType":"YulIdentifier","src":"10095:3:22"},"nativeSrc":"10095:18:22","nodeType":"YulFunctionCall","src":"10095:18:22"},{"hexValue":"526562616c616e6365206e6f74206e6565646564","kind":"string","nativeSrc":"10115:22:22","nodeType":"YulLiteral","src":"10115:22:22","type":"","value":"Rebalance not needed"}],"functionName":{"name":"mstore","nativeSrc":"10088:6:22","nodeType":"YulIdentifier","src":"10088:6:22"},"nativeSrc":"10088:50:22","nodeType":"YulFunctionCall","src":"10088:50:22"},"nativeSrc":"10088:50:22","nodeType":"YulExpressionStatement","src":"10088:50:22"},{"nativeSrc":"10147:26:22","nodeType":"YulAssignment","src":"10147:26:22","value":{"arguments":[{"name":"headStart","nativeSrc":"10159:9:22","nodeType":"YulIdentifier","src":"10159:9:22"},{"kind":"number","nativeSrc":"10170:2:22","nodeType":"YulLiteral","src":"10170:2:22","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"10155:3:22","nodeType":"YulIdentifier","src":"10155:3:22"},"nativeSrc":"10155:18:22","nodeType":"YulFunctionCall","src":"10155:18:22"},"variableNames":[{"name":"tail","nativeSrc":"10147:4:22","nodeType":"YulIdentifier","src":"10147:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_e4fcae9c0286e861087281117e0a3185ced905823104b290e1fe3ba826d8d280__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"9835:344:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9986:9:22","nodeType":"YulTypedName","src":"9986:9:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"10000:4:22","nodeType":"YulTypedName","src":"10000:4:22","type":""}],"src":"9835:344:22"},{"body":{"nativeSrc":"10216:95:22","nodeType":"YulBlock","src":"10216:95:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"10233:1:22","nodeType":"YulLiteral","src":"10233:1:22","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"10240:3:22","nodeType":"YulLiteral","src":"10240:3:22","type":"","value":"224"},{"kind":"number","nativeSrc":"10245:10:22","nodeType":"YulLiteral","src":"10245:10:22","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"10236:3:22","nodeType":"YulIdentifier","src":"10236:3:22"},"nativeSrc":"10236:20:22","nodeType":"YulFunctionCall","src":"10236:20:22"}],"functionName":{"name":"mstore","nativeSrc":"10226:6:22","nodeType":"YulIdentifier","src":"10226:6:22"},"nativeSrc":"10226:31:22","nodeType":"YulFunctionCall","src":"10226:31:22"},"nativeSrc":"10226:31:22","nodeType":"YulExpressionStatement","src":"10226:31:22"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"10273:1:22","nodeType":"YulLiteral","src":"10273:1:22","type":"","value":"4"},{"kind":"number","nativeSrc":"10276:4:22","nodeType":"YulLiteral","src":"10276:4:22","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"10266:6:22","nodeType":"YulIdentifier","src":"10266:6:22"},"nativeSrc":"10266:15:22","nodeType":"YulFunctionCall","src":"10266:15:22"},"nativeSrc":"10266:15:22","nodeType":"YulExpressionStatement","src":"10266:15:22"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"10297:1:22","nodeType":"YulLiteral","src":"10297:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"10300:4:22","nodeType":"YulLiteral","src":"10300:4:22","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"10290:6:22","nodeType":"YulIdentifier","src":"10290:6:22"},"nativeSrc":"10290:15:22","nodeType":"YulFunctionCall","src":"10290:15:22"},"nativeSrc":"10290:15:22","nodeType":"YulExpressionStatement","src":"10290:15:22"}]},"name":"panic_error_0x11","nativeSrc":"10184:127:22","nodeType":"YulFunctionDefinition","src":"10184:127:22"},{"body":{"nativeSrc":"10368:116:22","nodeType":"YulBlock","src":"10368:116:22","statements":[{"nativeSrc":"10378:20:22","nodeType":"YulAssignment","src":"10378:20:22","value":{"arguments":[{"name":"x","nativeSrc":"10393:1:22","nodeType":"YulIdentifier","src":"10393:1:22"},{"name":"y","nativeSrc":"10396:1:22","nodeType":"YulIdentifier","src":"10396:1:22"}],"functionName":{"name":"mul","nativeSrc":"10389:3:22","nodeType":"YulIdentifier","src":"10389:3:22"},"nativeSrc":"10389:9:22","nodeType":"YulFunctionCall","src":"10389:9:22"},"variableNames":[{"name":"product","nativeSrc":"10378:7:22","nodeType":"YulIdentifier","src":"10378:7:22"}]},{"body":{"nativeSrc":"10456:22:22","nodeType":"YulBlock","src":"10456:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"10458:16:22","nodeType":"YulIdentifier","src":"10458:16:22"},"nativeSrc":"10458:18:22","nodeType":"YulFunctionCall","src":"10458:18:22"},"nativeSrc":"10458:18:22","nodeType":"YulExpressionStatement","src":"10458:18:22"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nativeSrc":"10427:1:22","nodeType":"YulIdentifier","src":"10427:1:22"}],"functionName":{"name":"iszero","nativeSrc":"10420:6:22","nodeType":"YulIdentifier","src":"10420:6:22"},"nativeSrc":"10420:9:22","nodeType":"YulFunctionCall","src":"10420:9:22"},{"arguments":[{"name":"y","nativeSrc":"10434:1:22","nodeType":"YulIdentifier","src":"10434:1:22"},{"arguments":[{"name":"product","nativeSrc":"10441:7:22","nodeType":"YulIdentifier","src":"10441:7:22"},{"name":"x","nativeSrc":"10450:1:22","nodeType":"YulIdentifier","src":"10450:1:22"}],"functionName":{"name":"div","nativeSrc":"10437:3:22","nodeType":"YulIdentifier","src":"10437:3:22"},"nativeSrc":"10437:15:22","nodeType":"YulFunctionCall","src":"10437:15:22"}],"functionName":{"name":"eq","nativeSrc":"10431:2:22","nodeType":"YulIdentifier","src":"10431:2:22"},"nativeSrc":"10431:22:22","nodeType":"YulFunctionCall","src":"10431:22:22"}],"functionName":{"name":"or","nativeSrc":"10417:2:22","nodeType":"YulIdentifier","src":"10417:2:22"},"nativeSrc":"10417:37:22","nodeType":"YulFunctionCall","src":"10417:37:22"}],"functionName":{"name":"iszero","nativeSrc":"10410:6:22","nodeType":"YulIdentifier","src":"10410:6:22"},"nativeSrc":"10410:45:22","nodeType":"YulFunctionCall","src":"10410:45:22"},"nativeSrc":"10407:71:22","nodeType":"YulIf","src":"10407:71:22"}]},"name":"checked_mul_t_uint256","nativeSrc":"10316:168:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"10347:1:22","nodeType":"YulTypedName","src":"10347:1:22","type":""},{"name":"y","nativeSrc":"10350:1:22","nodeType":"YulTypedName","src":"10350:1:22","type":""}],"returnVariables":[{"name":"product","nativeSrc":"10356:7:22","nodeType":"YulTypedName","src":"10356:7:22","type":""}],"src":"10316:168:22"},{"body":{"nativeSrc":"10521:95:22","nodeType":"YulBlock","src":"10521:95:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"10538:1:22","nodeType":"YulLiteral","src":"10538:1:22","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"10545:3:22","nodeType":"YulLiteral","src":"10545:3:22","type":"","value":"224"},{"kind":"number","nativeSrc":"10550:10:22","nodeType":"YulLiteral","src":"10550:10:22","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"10541:3:22","nodeType":"YulIdentifier","src":"10541:3:22"},"nativeSrc":"10541:20:22","nodeType":"YulFunctionCall","src":"10541:20:22"}],"functionName":{"name":"mstore","nativeSrc":"10531:6:22","nodeType":"YulIdentifier","src":"10531:6:22"},"nativeSrc":"10531:31:22","nodeType":"YulFunctionCall","src":"10531:31:22"},"nativeSrc":"10531:31:22","nodeType":"YulExpressionStatement","src":"10531:31:22"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"10578:1:22","nodeType":"YulLiteral","src":"10578:1:22","type":"","value":"4"},{"kind":"number","nativeSrc":"10581:4:22","nodeType":"YulLiteral","src":"10581:4:22","type":"","value":"0x32"}],"functionName":{"name":"mstore","nativeSrc":"10571:6:22","nodeType":"YulIdentifier","src":"10571:6:22"},"nativeSrc":"10571:15:22","nodeType":"YulFunctionCall","src":"10571:15:22"},"nativeSrc":"10571:15:22","nodeType":"YulExpressionStatement","src":"10571:15:22"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"10602:1:22","nodeType":"YulLiteral","src":"10602:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"10605:4:22","nodeType":"YulLiteral","src":"10605:4:22","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"10595:6:22","nodeType":"YulIdentifier","src":"10595:6:22"},"nativeSrc":"10595:15:22","nodeType":"YulFunctionCall","src":"10595:15:22"},"nativeSrc":"10595:15:22","nodeType":"YulExpressionStatement","src":"10595:15:22"}]},"name":"panic_error_0x32","nativeSrc":"10489:127:22","nodeType":"YulFunctionDefinition","src":"10489:127:22"},{"body":{"nativeSrc":"10727:775:22","nodeType":"YulBlock","src":"10727:775:22","statements":[{"nativeSrc":"10737:12:22","nodeType":"YulVariableDeclaration","src":"10737:12:22","value":{"kind":"number","nativeSrc":"10747:2:22","nodeType":"YulLiteral","src":"10747:2:22","type":"","value":"32"},"variables":[{"name":"_1","nativeSrc":"10741:2:22","nodeType":"YulTypedName","src":"10741:2:22","type":""}]},{"body":{"nativeSrc":"10794:16:22","nodeType":"YulBlock","src":"10794:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"10803:1:22","nodeType":"YulLiteral","src":"10803:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"10806:1:22","nodeType":"YulLiteral","src":"10806:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"10796:6:22","nodeType":"YulIdentifier","src":"10796:6:22"},"nativeSrc":"10796:12:22","nodeType":"YulFunctionCall","src":"10796:12:22"},"nativeSrc":"10796:12:22","nodeType":"YulExpressionStatement","src":"10796:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"10769:7:22","nodeType":"YulIdentifier","src":"10769:7:22"},{"name":"headStart","nativeSrc":"10778:9:22","nodeType":"YulIdentifier","src":"10778:9:22"}],"functionName":{"name":"sub","nativeSrc":"10765:3:22","nodeType":"YulIdentifier","src":"10765:3:22"},"nativeSrc":"10765:23:22","nodeType":"YulFunctionCall","src":"10765:23:22"},{"name":"_1","nativeSrc":"10790:2:22","nodeType":"YulIdentifier","src":"10790:2:22"}],"functionName":{"name":"slt","nativeSrc":"10761:3:22","nodeType":"YulIdentifier","src":"10761:3:22"},"nativeSrc":"10761:32:22","nodeType":"YulFunctionCall","src":"10761:32:22"},"nativeSrc":"10758:52:22","nodeType":"YulIf","src":"10758:52:22"},{"nativeSrc":"10819:30:22","nodeType":"YulVariableDeclaration","src":"10819:30:22","value":{"arguments":[{"name":"headStart","nativeSrc":"10839:9:22","nodeType":"YulIdentifier","src":"10839:9:22"}],"functionName":{"name":"mload","nativeSrc":"10833:5:22","nodeType":"YulIdentifier","src":"10833:5:22"},"nativeSrc":"10833:16:22","nodeType":"YulFunctionCall","src":"10833:16:22"},"variables":[{"name":"offset","nativeSrc":"10823:6:22","nodeType":"YulTypedName","src":"10823:6:22","type":""}]},{"body":{"nativeSrc":"10892:16:22","nodeType":"YulBlock","src":"10892:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"10901:1:22","nodeType":"YulLiteral","src":"10901:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"10904:1:22","nodeType":"YulLiteral","src":"10904:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"10894:6:22","nodeType":"YulIdentifier","src":"10894:6:22"},"nativeSrc":"10894:12:22","nodeType":"YulFunctionCall","src":"10894:12:22"},"nativeSrc":"10894:12:22","nodeType":"YulExpressionStatement","src":"10894:12:22"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"10864:6:22","nodeType":"YulIdentifier","src":"10864:6:22"},{"kind":"number","nativeSrc":"10872:18:22","nodeType":"YulLiteral","src":"10872:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"10861:2:22","nodeType":"YulIdentifier","src":"10861:2:22"},"nativeSrc":"10861:30:22","nodeType":"YulFunctionCall","src":"10861:30:22"},"nativeSrc":"10858:50:22","nodeType":"YulIf","src":"10858:50:22"},{"nativeSrc":"10917:32:22","nodeType":"YulVariableDeclaration","src":"10917:32:22","value":{"arguments":[{"name":"headStart","nativeSrc":"10931:9:22","nodeType":"YulIdentifier","src":"10931:9:22"},{"name":"offset","nativeSrc":"10942:6:22","nodeType":"YulIdentifier","src":"10942:6:22"}],"functionName":{"name":"add","nativeSrc":"10927:3:22","nodeType":"YulIdentifier","src":"10927:3:22"},"nativeSrc":"10927:22:22","nodeType":"YulFunctionCall","src":"10927:22:22"},"variables":[{"name":"_2","nativeSrc":"10921:2:22","nodeType":"YulTypedName","src":"10921:2:22","type":""}]},{"body":{"nativeSrc":"10997:16:22","nodeType":"YulBlock","src":"10997:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"11006:1:22","nodeType":"YulLiteral","src":"11006:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"11009:1:22","nodeType":"YulLiteral","src":"11009:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"10999:6:22","nodeType":"YulIdentifier","src":"10999:6:22"},"nativeSrc":"10999:12:22","nodeType":"YulFunctionCall","src":"10999:12:22"},"nativeSrc":"10999:12:22","nodeType":"YulExpressionStatement","src":"10999:12:22"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nativeSrc":"10976:2:22","nodeType":"YulIdentifier","src":"10976:2:22"},{"kind":"number","nativeSrc":"10980:4:22","nodeType":"YulLiteral","src":"10980:4:22","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"10972:3:22","nodeType":"YulIdentifier","src":"10972:3:22"},"nativeSrc":"10972:13:22","nodeType":"YulFunctionCall","src":"10972:13:22"},{"name":"dataEnd","nativeSrc":"10987:7:22","nodeType":"YulIdentifier","src":"10987:7:22"}],"functionName":{"name":"slt","nativeSrc":"10968:3:22","nodeType":"YulIdentifier","src":"10968:3:22"},"nativeSrc":"10968:27:22","nodeType":"YulFunctionCall","src":"10968:27:22"}],"functionName":{"name":"iszero","nativeSrc":"10961:6:22","nodeType":"YulIdentifier","src":"10961:6:22"},"nativeSrc":"10961:35:22","nodeType":"YulFunctionCall","src":"10961:35:22"},"nativeSrc":"10958:55:22","nodeType":"YulIf","src":"10958:55:22"},{"nativeSrc":"11022:19:22","nodeType":"YulVariableDeclaration","src":"11022:19:22","value":{"arguments":[{"name":"_2","nativeSrc":"11038:2:22","nodeType":"YulIdentifier","src":"11038:2:22"}],"functionName":{"name":"mload","nativeSrc":"11032:5:22","nodeType":"YulIdentifier","src":"11032:5:22"},"nativeSrc":"11032:9:22","nodeType":"YulFunctionCall","src":"11032:9:22"},"variables":[{"name":"_3","nativeSrc":"11026:2:22","nodeType":"YulTypedName","src":"11026:2:22","type":""}]},{"nativeSrc":"11050:71:22","nodeType":"YulVariableDeclaration","src":"11050:71:22","value":{"arguments":[{"arguments":[{"name":"_3","nativeSrc":"11117:2:22","nodeType":"YulIdentifier","src":"11117:2:22"}],"functionName":{"name":"array_allocation_size_array_uint256_dyn","nativeSrc":"11077:39:22","nodeType":"YulIdentifier","src":"11077:39:22"},"nativeSrc":"11077:43:22","nodeType":"YulFunctionCall","src":"11077:43:22"}],"functionName":{"name":"allocate_memory","nativeSrc":"11061:15:22","nodeType":"YulIdentifier","src":"11061:15:22"},"nativeSrc":"11061:60:22","nodeType":"YulFunctionCall","src":"11061:60:22"},"variables":[{"name":"dst","nativeSrc":"11054:3:22","nodeType":"YulTypedName","src":"11054:3:22","type":""}]},{"nativeSrc":"11130:16:22","nodeType":"YulVariableDeclaration","src":"11130:16:22","value":{"name":"dst","nativeSrc":"11143:3:22","nodeType":"YulIdentifier","src":"11143:3:22"},"variables":[{"name":"dst_1","nativeSrc":"11134:5:22","nodeType":"YulTypedName","src":"11134:5:22","type":""}]},{"expression":{"arguments":[{"name":"dst","nativeSrc":"11162:3:22","nodeType":"YulIdentifier","src":"11162:3:22"},{"name":"_3","nativeSrc":"11167:2:22","nodeType":"YulIdentifier","src":"11167:2:22"}],"functionName":{"name":"mstore","nativeSrc":"11155:6:22","nodeType":"YulIdentifier","src":"11155:6:22"},"nativeSrc":"11155:15:22","nodeType":"YulFunctionCall","src":"11155:15:22"},"nativeSrc":"11155:15:22","nodeType":"YulExpressionStatement","src":"11155:15:22"},{"nativeSrc":"11179:19:22","nodeType":"YulAssignment","src":"11179:19:22","value":{"arguments":[{"name":"dst","nativeSrc":"11190:3:22","nodeType":"YulIdentifier","src":"11190:3:22"},{"name":"_1","nativeSrc":"11195:2:22","nodeType":"YulIdentifier","src":"11195:2:22"}],"functionName":{"name":"add","nativeSrc":"11186:3:22","nodeType":"YulIdentifier","src":"11186:3:22"},"nativeSrc":"11186:12:22","nodeType":"YulFunctionCall","src":"11186:12:22"},"variableNames":[{"name":"dst","nativeSrc":"11179:3:22","nodeType":"YulIdentifier","src":"11179:3:22"}]},{"nativeSrc":"11207:42:22","nodeType":"YulVariableDeclaration","src":"11207:42:22","value":{"arguments":[{"arguments":[{"name":"_2","nativeSrc":"11229:2:22","nodeType":"YulIdentifier","src":"11229:2:22"},{"arguments":[{"kind":"number","nativeSrc":"11237:1:22","nodeType":"YulLiteral","src":"11237:1:22","type":"","value":"5"},{"name":"_3","nativeSrc":"11240:2:22","nodeType":"YulIdentifier","src":"11240:2:22"}],"functionName":{"name":"shl","nativeSrc":"11233:3:22","nodeType":"YulIdentifier","src":"11233:3:22"},"nativeSrc":"11233:10:22","nodeType":"YulFunctionCall","src":"11233:10:22"}],"functionName":{"name":"add","nativeSrc":"11225:3:22","nodeType":"YulIdentifier","src":"11225:3:22"},"nativeSrc":"11225:19:22","nodeType":"YulFunctionCall","src":"11225:19:22"},{"name":"_1","nativeSrc":"11246:2:22","nodeType":"YulIdentifier","src":"11246:2:22"}],"functionName":{"name":"add","nativeSrc":"11221:3:22","nodeType":"YulIdentifier","src":"11221:3:22"},"nativeSrc":"11221:28:22","nodeType":"YulFunctionCall","src":"11221:28:22"},"variables":[{"name":"srcEnd","nativeSrc":"11211:6:22","nodeType":"YulTypedName","src":"11211:6:22","type":""}]},{"body":{"nativeSrc":"11281:16:22","nodeType":"YulBlock","src":"11281:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"11290:1:22","nodeType":"YulLiteral","src":"11290:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"11293:1:22","nodeType":"YulLiteral","src":"11293:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"11283:6:22","nodeType":"YulIdentifier","src":"11283:6:22"},"nativeSrc":"11283:12:22","nodeType":"YulFunctionCall","src":"11283:12:22"},"nativeSrc":"11283:12:22","nodeType":"YulExpressionStatement","src":"11283:12:22"}]},"condition":{"arguments":[{"name":"srcEnd","nativeSrc":"11264:6:22","nodeType":"YulIdentifier","src":"11264:6:22"},{"name":"dataEnd","nativeSrc":"11272:7:22","nodeType":"YulIdentifier","src":"11272:7:22"}],"functionName":{"name":"gt","nativeSrc":"11261:2:22","nodeType":"YulIdentifier","src":"11261:2:22"},"nativeSrc":"11261:19:22","nodeType":"YulFunctionCall","src":"11261:19:22"},"nativeSrc":"11258:39:22","nodeType":"YulIf","src":"11258:39:22"},{"nativeSrc":"11306:22:22","nodeType":"YulVariableDeclaration","src":"11306:22:22","value":{"arguments":[{"name":"_2","nativeSrc":"11321:2:22","nodeType":"YulIdentifier","src":"11321:2:22"},{"name":"_1","nativeSrc":"11325:2:22","nodeType":"YulIdentifier","src":"11325:2:22"}],"functionName":{"name":"add","nativeSrc":"11317:3:22","nodeType":"YulIdentifier","src":"11317:3:22"},"nativeSrc":"11317:11:22","nodeType":"YulFunctionCall","src":"11317:11:22"},"variables":[{"name":"src","nativeSrc":"11310:3:22","nodeType":"YulTypedName","src":"11310:3:22","type":""}]},{"body":{"nativeSrc":"11393:79:22","nodeType":"YulBlock","src":"11393:79:22","statements":[{"expression":{"arguments":[{"name":"dst","nativeSrc":"11414:3:22","nodeType":"YulIdentifier","src":"11414:3:22"},{"arguments":[{"name":"src","nativeSrc":"11425:3:22","nodeType":"YulIdentifier","src":"11425:3:22"}],"functionName":{"name":"mload","nativeSrc":"11419:5:22","nodeType":"YulIdentifier","src":"11419:5:22"},"nativeSrc":"11419:10:22","nodeType":"YulFunctionCall","src":"11419:10:22"}],"functionName":{"name":"mstore","nativeSrc":"11407:6:22","nodeType":"YulIdentifier","src":"11407:6:22"},"nativeSrc":"11407:23:22","nodeType":"YulFunctionCall","src":"11407:23:22"},"nativeSrc":"11407:23:22","nodeType":"YulExpressionStatement","src":"11407:23:22"},{"nativeSrc":"11443:19:22","nodeType":"YulAssignment","src":"11443:19:22","value":{"arguments":[{"name":"dst","nativeSrc":"11454:3:22","nodeType":"YulIdentifier","src":"11454:3:22"},{"name":"_1","nativeSrc":"11459:2:22","nodeType":"YulIdentifier","src":"11459:2:22"}],"functionName":{"name":"add","nativeSrc":"11450:3:22","nodeType":"YulIdentifier","src":"11450:3:22"},"nativeSrc":"11450:12:22","nodeType":"YulFunctionCall","src":"11450:12:22"},"variableNames":[{"name":"dst","nativeSrc":"11443:3:22","nodeType":"YulIdentifier","src":"11443:3:22"}]}]},"condition":{"arguments":[{"name":"src","nativeSrc":"11348:3:22","nodeType":"YulIdentifier","src":"11348:3:22"},{"name":"srcEnd","nativeSrc":"11353:6:22","nodeType":"YulIdentifier","src":"11353:6:22"}],"functionName":{"name":"lt","nativeSrc":"11345:2:22","nodeType":"YulIdentifier","src":"11345:2:22"},"nativeSrc":"11345:15:22","nodeType":"YulFunctionCall","src":"11345:15:22"},"nativeSrc":"11337:135:22","nodeType":"YulForLoop","post":{"nativeSrc":"11361:23:22","nodeType":"YulBlock","src":"11361:23:22","statements":[{"nativeSrc":"11363:19:22","nodeType":"YulAssignment","src":"11363:19:22","value":{"arguments":[{"name":"src","nativeSrc":"11374:3:22","nodeType":"YulIdentifier","src":"11374:3:22"},{"name":"_1","nativeSrc":"11379:2:22","nodeType":"YulIdentifier","src":"11379:2:22"}],"functionName":{"name":"add","nativeSrc":"11370:3:22","nodeType":"YulIdentifier","src":"11370:3:22"},"nativeSrc":"11370:12:22","nodeType":"YulFunctionCall","src":"11370:12:22"},"variableNames":[{"name":"src","nativeSrc":"11363:3:22","nodeType":"YulIdentifier","src":"11363:3:22"}]}]},"pre":{"nativeSrc":"11341:3:22","nodeType":"YulBlock","src":"11341:3:22","statements":[]},"src":"11337:135:22"},{"nativeSrc":"11481:15:22","nodeType":"YulAssignment","src":"11481:15:22","value":{"name":"dst_1","nativeSrc":"11491:5:22","nodeType":"YulIdentifier","src":"11491:5:22"},"variableNames":[{"name":"value0","nativeSrc":"11481:6:22","nodeType":"YulIdentifier","src":"11481:6:22"}]}]},"name":"abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr_fromMemory","nativeSrc":"10621:881:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"10693:9:22","nodeType":"YulTypedName","src":"10693:9:22","type":""},{"name":"dataEnd","nativeSrc":"10704:7:22","nodeType":"YulTypedName","src":"10704:7:22","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"10716:6:22","nodeType":"YulTypedName","src":"10716:6:22","type":""}],"src":"10621:881:22"},{"body":{"nativeSrc":"11681:172:22","nodeType":"YulBlock","src":"11681:172:22","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"11698:9:22","nodeType":"YulIdentifier","src":"11698:9:22"},{"kind":"number","nativeSrc":"11709:2:22","nodeType":"YulLiteral","src":"11709:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"11691:6:22","nodeType":"YulIdentifier","src":"11691:6:22"},"nativeSrc":"11691:21:22","nodeType":"YulFunctionCall","src":"11691:21:22"},"nativeSrc":"11691:21:22","nodeType":"YulExpressionStatement","src":"11691:21:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11732:9:22","nodeType":"YulIdentifier","src":"11732:9:22"},{"kind":"number","nativeSrc":"11743:2:22","nodeType":"YulLiteral","src":"11743:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"11728:3:22","nodeType":"YulIdentifier","src":"11728:3:22"},"nativeSrc":"11728:18:22","nodeType":"YulFunctionCall","src":"11728:18:22"},{"kind":"number","nativeSrc":"11748:2:22","nodeType":"YulLiteral","src":"11748:2:22","type":"","value":"22"}],"functionName":{"name":"mstore","nativeSrc":"11721:6:22","nodeType":"YulIdentifier","src":"11721:6:22"},"nativeSrc":"11721:30:22","nodeType":"YulFunctionCall","src":"11721:30:22"},"nativeSrc":"11721:30:22","nodeType":"YulExpressionStatement","src":"11721:30:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11771:9:22","nodeType":"YulIdentifier","src":"11771:9:22"},{"kind":"number","nativeSrc":"11782:2:22","nodeType":"YulLiteral","src":"11782:2:22","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"11767:3:22","nodeType":"YulIdentifier","src":"11767:3:22"},"nativeSrc":"11767:18:22","nodeType":"YulFunctionCall","src":"11767:18:22"},{"hexValue":"496e76616c6964206f7261636c652061646472657373","kind":"string","nativeSrc":"11787:24:22","nodeType":"YulLiteral","src":"11787:24:22","type":"","value":"Invalid oracle address"}],"functionName":{"name":"mstore","nativeSrc":"11760:6:22","nodeType":"YulIdentifier","src":"11760:6:22"},"nativeSrc":"11760:52:22","nodeType":"YulFunctionCall","src":"11760:52:22"},"nativeSrc":"11760:52:22","nodeType":"YulExpressionStatement","src":"11760:52:22"},{"nativeSrc":"11821:26:22","nodeType":"YulAssignment","src":"11821:26:22","value":{"arguments":[{"name":"headStart","nativeSrc":"11833:9:22","nodeType":"YulIdentifier","src":"11833:9:22"},{"kind":"number","nativeSrc":"11844:2:22","nodeType":"YulLiteral","src":"11844:2:22","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"11829:3:22","nodeType":"YulIdentifier","src":"11829:3:22"},"nativeSrc":"11829:18:22","nodeType":"YulFunctionCall","src":"11829:18:22"},"variableNames":[{"name":"tail","nativeSrc":"11821:4:22","nodeType":"YulIdentifier","src":"11821:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_b5c25d5c4ca6addfa23ca815554bb7bee3a9885ce01501a275168a62aa7cded3__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"11507:346:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"11658:9:22","nodeType":"YulTypedName","src":"11658:9:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"11672:4:22","nodeType":"YulTypedName","src":"11672:4:22","type":""}],"src":"11507:346:22"},{"body":{"nativeSrc":"12015:218:22","nodeType":"YulBlock","src":"12015:218:22","statements":[{"nativeSrc":"12025:26:22","nodeType":"YulAssignment","src":"12025:26:22","value":{"arguments":[{"name":"headStart","nativeSrc":"12037:9:22","nodeType":"YulIdentifier","src":"12037:9:22"},{"kind":"number","nativeSrc":"12048:2:22","nodeType":"YulLiteral","src":"12048:2:22","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"12033:3:22","nodeType":"YulIdentifier","src":"12033:3:22"},"nativeSrc":"12033:18:22","nodeType":"YulFunctionCall","src":"12033:18:22"},"variableNames":[{"name":"tail","nativeSrc":"12025:4:22","nodeType":"YulIdentifier","src":"12025:4:22"}]},{"nativeSrc":"12060:29:22","nodeType":"YulVariableDeclaration","src":"12060:29:22","value":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"12078:3:22","nodeType":"YulLiteral","src":"12078:3:22","type":"","value":"160"},{"kind":"number","nativeSrc":"12083:1:22","nodeType":"YulLiteral","src":"12083:1:22","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"12074:3:22","nodeType":"YulIdentifier","src":"12074:3:22"},"nativeSrc":"12074:11:22","nodeType":"YulFunctionCall","src":"12074:11:22"},{"kind":"number","nativeSrc":"12087:1:22","nodeType":"YulLiteral","src":"12087:1:22","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"12070:3:22","nodeType":"YulIdentifier","src":"12070:3:22"},"nativeSrc":"12070:19:22","nodeType":"YulFunctionCall","src":"12070:19:22"},"variables":[{"name":"_1","nativeSrc":"12064:2:22","nodeType":"YulTypedName","src":"12064:2:22","type":""}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"12105:9:22","nodeType":"YulIdentifier","src":"12105:9:22"},{"arguments":[{"name":"value0","nativeSrc":"12120:6:22","nodeType":"YulIdentifier","src":"12120:6:22"},{"name":"_1","nativeSrc":"12128:2:22","nodeType":"YulIdentifier","src":"12128:2:22"}],"functionName":{"name":"and","nativeSrc":"12116:3:22","nodeType":"YulIdentifier","src":"12116:3:22"},"nativeSrc":"12116:15:22","nodeType":"YulFunctionCall","src":"12116:15:22"}],"functionName":{"name":"mstore","nativeSrc":"12098:6:22","nodeType":"YulIdentifier","src":"12098:6:22"},"nativeSrc":"12098:34:22","nodeType":"YulFunctionCall","src":"12098:34:22"},"nativeSrc":"12098:34:22","nodeType":"YulExpressionStatement","src":"12098:34:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12152:9:22","nodeType":"YulIdentifier","src":"12152:9:22"},{"kind":"number","nativeSrc":"12163:2:22","nodeType":"YulLiteral","src":"12163:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"12148:3:22","nodeType":"YulIdentifier","src":"12148:3:22"},"nativeSrc":"12148:18:22","nodeType":"YulFunctionCall","src":"12148:18:22"},{"arguments":[{"name":"value1","nativeSrc":"12172:6:22","nodeType":"YulIdentifier","src":"12172:6:22"},{"name":"_1","nativeSrc":"12180:2:22","nodeType":"YulIdentifier","src":"12180:2:22"}],"functionName":{"name":"and","nativeSrc":"12168:3:22","nodeType":"YulIdentifier","src":"12168:3:22"},"nativeSrc":"12168:15:22","nodeType":"YulFunctionCall","src":"12168:15:22"}],"functionName":{"name":"mstore","nativeSrc":"12141:6:22","nodeType":"YulIdentifier","src":"12141:6:22"},"nativeSrc":"12141:43:22","nodeType":"YulFunctionCall","src":"12141:43:22"},"nativeSrc":"12141:43:22","nodeType":"YulExpressionStatement","src":"12141:43:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12204:9:22","nodeType":"YulIdentifier","src":"12204:9:22"},{"kind":"number","nativeSrc":"12215:2:22","nodeType":"YulLiteral","src":"12215:2:22","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"12200:3:22","nodeType":"YulIdentifier","src":"12200:3:22"},"nativeSrc":"12200:18:22","nodeType":"YulFunctionCall","src":"12200:18:22"},{"name":"value2","nativeSrc":"12220:6:22","nodeType":"YulIdentifier","src":"12220:6:22"}],"functionName":{"name":"mstore","nativeSrc":"12193:6:22","nodeType":"YulIdentifier","src":"12193:6:22"},"nativeSrc":"12193:34:22","nodeType":"YulFunctionCall","src":"12193:34:22"},"nativeSrc":"12193:34:22","nodeType":"YulExpressionStatement","src":"12193:34:22"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed","nativeSrc":"11858:375:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"11968:9:22","nodeType":"YulTypedName","src":"11968:9:22","type":""},{"name":"value2","nativeSrc":"11979:6:22","nodeType":"YulTypedName","src":"11979:6:22","type":""},{"name":"value1","nativeSrc":"11987:6:22","nodeType":"YulTypedName","src":"11987:6:22","type":""},{"name":"value0","nativeSrc":"11995:6:22","nodeType":"YulTypedName","src":"11995:6:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"12006:4:22","nodeType":"YulTypedName","src":"12006:4:22","type":""}],"src":"11858:375:22"},{"body":{"nativeSrc":"12319:103:22","nodeType":"YulBlock","src":"12319:103:22","statements":[{"body":{"nativeSrc":"12365:16:22","nodeType":"YulBlock","src":"12365:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"12374:1:22","nodeType":"YulLiteral","src":"12374:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"12377:1:22","nodeType":"YulLiteral","src":"12377:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"12367:6:22","nodeType":"YulIdentifier","src":"12367:6:22"},"nativeSrc":"12367:12:22","nodeType":"YulFunctionCall","src":"12367:12:22"},"nativeSrc":"12367:12:22","nodeType":"YulExpressionStatement","src":"12367:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"12340:7:22","nodeType":"YulIdentifier","src":"12340:7:22"},{"name":"headStart","nativeSrc":"12349:9:22","nodeType":"YulIdentifier","src":"12349:9:22"}],"functionName":{"name":"sub","nativeSrc":"12336:3:22","nodeType":"YulIdentifier","src":"12336:3:22"},"nativeSrc":"12336:23:22","nodeType":"YulFunctionCall","src":"12336:23:22"},{"kind":"number","nativeSrc":"12361:2:22","nodeType":"YulLiteral","src":"12361:2:22","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"12332:3:22","nodeType":"YulIdentifier","src":"12332:3:22"},"nativeSrc":"12332:32:22","nodeType":"YulFunctionCall","src":"12332:32:22"},"nativeSrc":"12329:52:22","nodeType":"YulIf","src":"12329:52:22"},{"nativeSrc":"12390:26:22","nodeType":"YulAssignment","src":"12390:26:22","value":{"arguments":[{"name":"headStart","nativeSrc":"12406:9:22","nodeType":"YulIdentifier","src":"12406:9:22"}],"functionName":{"name":"mload","nativeSrc":"12400:5:22","nodeType":"YulIdentifier","src":"12400:5:22"},"nativeSrc":"12400:16:22","nodeType":"YulFunctionCall","src":"12400:16:22"},"variableNames":[{"name":"value0","nativeSrc":"12390:6:22","nodeType":"YulIdentifier","src":"12390:6:22"}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nativeSrc":"12238:184:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"12285:9:22","nodeType":"YulTypedName","src":"12285:9:22","type":""},{"name":"dataEnd","nativeSrc":"12296:7:22","nodeType":"YulTypedName","src":"12296:7:22","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"12308:6:22","nodeType":"YulTypedName","src":"12308:6:22","type":""}],"src":"12238:184:22"},{"body":{"nativeSrc":"12601:176:22","nodeType":"YulBlock","src":"12601:176:22","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"12618:9:22","nodeType":"YulIdentifier","src":"12618:9:22"},{"kind":"number","nativeSrc":"12629:2:22","nodeType":"YulLiteral","src":"12629:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"12611:6:22","nodeType":"YulIdentifier","src":"12611:6:22"},"nativeSrc":"12611:21:22","nodeType":"YulFunctionCall","src":"12611:21:22"},"nativeSrc":"12611:21:22","nodeType":"YulExpressionStatement","src":"12611:21:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12652:9:22","nodeType":"YulIdentifier","src":"12652:9:22"},{"kind":"number","nativeSrc":"12663:2:22","nodeType":"YulLiteral","src":"12663:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"12648:3:22","nodeType":"YulIdentifier","src":"12648:3:22"},"nativeSrc":"12648:18:22","nodeType":"YulFunctionCall","src":"12648:18:22"},{"kind":"number","nativeSrc":"12668:2:22","nodeType":"YulLiteral","src":"12668:2:22","type":"","value":"26"}],"functionName":{"name":"mstore","nativeSrc":"12641:6:22","nodeType":"YulIdentifier","src":"12641:6:22"},"nativeSrc":"12641:30:22","nodeType":"YulFunctionCall","src":"12641:30:22"},"nativeSrc":"12641:30:22","nodeType":"YulExpressionStatement","src":"12641:30:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12691:9:22","nodeType":"YulIdentifier","src":"12691:9:22"},{"kind":"number","nativeSrc":"12702:2:22","nodeType":"YulLiteral","src":"12702:2:22","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"12687:3:22","nodeType":"YulIdentifier","src":"12687:3:22"},"nativeSrc":"12687:18:22","nodeType":"YulFunctionCall","src":"12687:18:22"},{"hexValue":"43616e6e6f742073776170207468652073616d6520746f6b656e","kind":"string","nativeSrc":"12707:28:22","nodeType":"YulLiteral","src":"12707:28:22","type":"","value":"Cannot swap the same token"}],"functionName":{"name":"mstore","nativeSrc":"12680:6:22","nodeType":"YulIdentifier","src":"12680:6:22"},"nativeSrc":"12680:56:22","nodeType":"YulFunctionCall","src":"12680:56:22"},"nativeSrc":"12680:56:22","nodeType":"YulExpressionStatement","src":"12680:56:22"},{"nativeSrc":"12745:26:22","nodeType":"YulAssignment","src":"12745:26:22","value":{"arguments":[{"name":"headStart","nativeSrc":"12757:9:22","nodeType":"YulIdentifier","src":"12757:9:22"},{"kind":"number","nativeSrc":"12768:2:22","nodeType":"YulLiteral","src":"12768:2:22","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"12753:3:22","nodeType":"YulIdentifier","src":"12753:3:22"},"nativeSrc":"12753:18:22","nodeType":"YulFunctionCall","src":"12753:18:22"},"variableNames":[{"name":"tail","nativeSrc":"12745:4:22","nodeType":"YulIdentifier","src":"12745:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_6f3b6914a8f4e42f0dc4d6fcf60d1470463793693c123b4b0782b9cd43668c23__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"12427:350:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"12578:9:22","nodeType":"YulTypedName","src":"12578:9:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"12592:4:22","nodeType":"YulTypedName","src":"12592:4:22","type":""}],"src":"12427:350:22"},{"body":{"nativeSrc":"12956:182:22","nodeType":"YulBlock","src":"12956:182:22","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"12973:9:22","nodeType":"YulIdentifier","src":"12973:9:22"},{"kind":"number","nativeSrc":"12984:2:22","nodeType":"YulLiteral","src":"12984:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"12966:6:22","nodeType":"YulIdentifier","src":"12966:6:22"},"nativeSrc":"12966:21:22","nodeType":"YulFunctionCall","src":"12966:21:22"},"nativeSrc":"12966:21:22","nodeType":"YulExpressionStatement","src":"12966:21:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"13007:9:22","nodeType":"YulIdentifier","src":"13007:9:22"},{"kind":"number","nativeSrc":"13018:2:22","nodeType":"YulLiteral","src":"13018:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"13003:3:22","nodeType":"YulIdentifier","src":"13003:3:22"},"nativeSrc":"13003:18:22","nodeType":"YulFunctionCall","src":"13003:18:22"},{"kind":"number","nativeSrc":"13023:2:22","nodeType":"YulLiteral","src":"13023:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"12996:6:22","nodeType":"YulIdentifier","src":"12996:6:22"},"nativeSrc":"12996:30:22","nodeType":"YulFunctionCall","src":"12996:30:22"},"nativeSrc":"12996:30:22","nodeType":"YulExpressionStatement","src":"12996:30:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"13046:9:22","nodeType":"YulIdentifier","src":"13046:9:22"},{"kind":"number","nativeSrc":"13057:2:22","nodeType":"YulLiteral","src":"13057:2:22","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"13042:3:22","nodeType":"YulIdentifier","src":"13042:3:22"},"nativeSrc":"13042:18:22","nodeType":"YulFunctionCall","src":"13042:18:22"},{"hexValue":"416d6f756e74206d7573742062652067726561746572207468616e207a65726f","kind":"string","nativeSrc":"13062:34:22","nodeType":"YulLiteral","src":"13062:34:22","type":"","value":"Amount must be greater than zero"}],"functionName":{"name":"mstore","nativeSrc":"13035:6:22","nodeType":"YulIdentifier","src":"13035:6:22"},"nativeSrc":"13035:62:22","nodeType":"YulFunctionCall","src":"13035:62:22"},"nativeSrc":"13035:62:22","nodeType":"YulExpressionStatement","src":"13035:62:22"},{"nativeSrc":"13106:26:22","nodeType":"YulAssignment","src":"13106:26:22","value":{"arguments":[{"name":"headStart","nativeSrc":"13118:9:22","nodeType":"YulIdentifier","src":"13118:9:22"},{"kind":"number","nativeSrc":"13129:2:22","nodeType":"YulLiteral","src":"13129:2:22","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"13114:3:22","nodeType":"YulIdentifier","src":"13114:3:22"},"nativeSrc":"13114:18:22","nodeType":"YulFunctionCall","src":"13114:18:22"},"variableNames":[{"name":"tail","nativeSrc":"13106:4:22","nodeType":"YulIdentifier","src":"13106:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"12782:356:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"12933:9:22","nodeType":"YulTypedName","src":"12933:9:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"12947:4:22","nodeType":"YulTypedName","src":"12947:4:22","type":""}],"src":"12782:356:22"},{"body":{"nativeSrc":"13317:172:22","nodeType":"YulBlock","src":"13317:172:22","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"13334:9:22","nodeType":"YulIdentifier","src":"13334:9:22"},{"kind":"number","nativeSrc":"13345:2:22","nodeType":"YulLiteral","src":"13345:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"13327:6:22","nodeType":"YulIdentifier","src":"13327:6:22"},"nativeSrc":"13327:21:22","nodeType":"YulFunctionCall","src":"13327:21:22"},"nativeSrc":"13327:21:22","nodeType":"YulExpressionStatement","src":"13327:21:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"13368:9:22","nodeType":"YulIdentifier","src":"13368:9:22"},{"kind":"number","nativeSrc":"13379:2:22","nodeType":"YulLiteral","src":"13379:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"13364:3:22","nodeType":"YulIdentifier","src":"13364:3:22"},"nativeSrc":"13364:18:22","nodeType":"YulFunctionCall","src":"13364:18:22"},{"kind":"number","nativeSrc":"13384:2:22","nodeType":"YulLiteral","src":"13384:2:22","type":"","value":"22"}],"functionName":{"name":"mstore","nativeSrc":"13357:6:22","nodeType":"YulIdentifier","src":"13357:6:22"},"nativeSrc":"13357:30:22","nodeType":"YulFunctionCall","src":"13357:30:22"},"nativeSrc":"13357:30:22","nodeType":"YulExpressionStatement","src":"13357:30:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"13407:9:22","nodeType":"YulIdentifier","src":"13407:9:22"},{"kind":"number","nativeSrc":"13418:2:22","nodeType":"YulLiteral","src":"13418:2:22","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"13403:3:22","nodeType":"YulIdentifier","src":"13403:3:22"},"nativeSrc":"13403:18:22","nodeType":"YulFunctionCall","src":"13403:18:22"},{"hexValue":"496e73756666696369656e74204c6971756964697479","kind":"string","nativeSrc":"13423:24:22","nodeType":"YulLiteral","src":"13423:24:22","type":"","value":"Insufficient Liquidity"}],"functionName":{"name":"mstore","nativeSrc":"13396:6:22","nodeType":"YulIdentifier","src":"13396:6:22"},"nativeSrc":"13396:52:22","nodeType":"YulFunctionCall","src":"13396:52:22"},"nativeSrc":"13396:52:22","nodeType":"YulExpressionStatement","src":"13396:52:22"},{"nativeSrc":"13457:26:22","nodeType":"YulAssignment","src":"13457:26:22","value":{"arguments":[{"name":"headStart","nativeSrc":"13469:9:22","nodeType":"YulIdentifier","src":"13469:9:22"},{"kind":"number","nativeSrc":"13480:2:22","nodeType":"YulLiteral","src":"13480:2:22","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"13465:3:22","nodeType":"YulIdentifier","src":"13465:3:22"},"nativeSrc":"13465:18:22","nodeType":"YulFunctionCall","src":"13465:18:22"},"variableNames":[{"name":"tail","nativeSrc":"13457:4:22","nodeType":"YulIdentifier","src":"13457:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_85d32796faf4bbe37cfdb7e983d4048fee52ebcfc8d2f22a939ce47e85d98ae8__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"13143:346:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"13294:9:22","nodeType":"YulTypedName","src":"13294:9:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"13308:4:22","nodeType":"YulTypedName","src":"13308:4:22","type":""}],"src":"13143:346:22"},{"body":{"nativeSrc":"13526:95:22","nodeType":"YulBlock","src":"13526:95:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"13543:1:22","nodeType":"YulLiteral","src":"13543:1:22","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"13550:3:22","nodeType":"YulLiteral","src":"13550:3:22","type":"","value":"224"},{"kind":"number","nativeSrc":"13555:10:22","nodeType":"YulLiteral","src":"13555:10:22","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"13546:3:22","nodeType":"YulIdentifier","src":"13546:3:22"},"nativeSrc":"13546:20:22","nodeType":"YulFunctionCall","src":"13546:20:22"}],"functionName":{"name":"mstore","nativeSrc":"13536:6:22","nodeType":"YulIdentifier","src":"13536:6:22"},"nativeSrc":"13536:31:22","nodeType":"YulFunctionCall","src":"13536:31:22"},"nativeSrc":"13536:31:22","nodeType":"YulExpressionStatement","src":"13536:31:22"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"13583:1:22","nodeType":"YulLiteral","src":"13583:1:22","type":"","value":"4"},{"kind":"number","nativeSrc":"13586:4:22","nodeType":"YulLiteral","src":"13586:4:22","type":"","value":"0x12"}],"functionName":{"name":"mstore","nativeSrc":"13576:6:22","nodeType":"YulIdentifier","src":"13576:6:22"},"nativeSrc":"13576:15:22","nodeType":"YulFunctionCall","src":"13576:15:22"},"nativeSrc":"13576:15:22","nodeType":"YulExpressionStatement","src":"13576:15:22"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"13607:1:22","nodeType":"YulLiteral","src":"13607:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"13610:4:22","nodeType":"YulLiteral","src":"13610:4:22","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"13600:6:22","nodeType":"YulIdentifier","src":"13600:6:22"},"nativeSrc":"13600:15:22","nodeType":"YulFunctionCall","src":"13600:15:22"},"nativeSrc":"13600:15:22","nodeType":"YulExpressionStatement","src":"13600:15:22"}]},"name":"panic_error_0x12","nativeSrc":"13494:127:22","nodeType":"YulFunctionDefinition","src":"13494:127:22"},{"body":{"nativeSrc":"13672:74:22","nodeType":"YulBlock","src":"13672:74:22","statements":[{"body":{"nativeSrc":"13695:22:22","nodeType":"YulBlock","src":"13695:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nativeSrc":"13697:16:22","nodeType":"YulIdentifier","src":"13697:16:22"},"nativeSrc":"13697:18:22","nodeType":"YulFunctionCall","src":"13697:18:22"},"nativeSrc":"13697:18:22","nodeType":"YulExpressionStatement","src":"13697:18:22"}]},"condition":{"arguments":[{"name":"y","nativeSrc":"13692:1:22","nodeType":"YulIdentifier","src":"13692:1:22"}],"functionName":{"name":"iszero","nativeSrc":"13685:6:22","nodeType":"YulIdentifier","src":"13685:6:22"},"nativeSrc":"13685:9:22","nodeType":"YulFunctionCall","src":"13685:9:22"},"nativeSrc":"13682:35:22","nodeType":"YulIf","src":"13682:35:22"},{"nativeSrc":"13726:14:22","nodeType":"YulAssignment","src":"13726:14:22","value":{"arguments":[{"name":"x","nativeSrc":"13735:1:22","nodeType":"YulIdentifier","src":"13735:1:22"},{"name":"y","nativeSrc":"13738:1:22","nodeType":"YulIdentifier","src":"13738:1:22"}],"functionName":{"name":"div","nativeSrc":"13731:3:22","nodeType":"YulIdentifier","src":"13731:3:22"},"nativeSrc":"13731:9:22","nodeType":"YulFunctionCall","src":"13731:9:22"},"variableNames":[{"name":"r","nativeSrc":"13726:1:22","nodeType":"YulIdentifier","src":"13726:1:22"}]}]},"name":"checked_div_t_uint256","nativeSrc":"13626:120:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"13657:1:22","nodeType":"YulTypedName","src":"13657:1:22","type":""},{"name":"y","nativeSrc":"13660:1:22","nodeType":"YulTypedName","src":"13660:1:22","type":""}],"returnVariables":[{"name":"r","nativeSrc":"13666:1:22","nodeType":"YulTypedName","src":"13666:1:22","type":""}],"src":"13626:120:22"},{"body":{"nativeSrc":"13800:79:22","nodeType":"YulBlock","src":"13800:79:22","statements":[{"nativeSrc":"13810:17:22","nodeType":"YulAssignment","src":"13810:17:22","value":{"arguments":[{"name":"x","nativeSrc":"13822:1:22","nodeType":"YulIdentifier","src":"13822:1:22"},{"name":"y","nativeSrc":"13825:1:22","nodeType":"YulIdentifier","src":"13825:1:22"}],"functionName":{"name":"sub","nativeSrc":"13818:3:22","nodeType":"YulIdentifier","src":"13818:3:22"},"nativeSrc":"13818:9:22","nodeType":"YulFunctionCall","src":"13818:9:22"},"variableNames":[{"name":"diff","nativeSrc":"13810:4:22","nodeType":"YulIdentifier","src":"13810:4:22"}]},{"body":{"nativeSrc":"13851:22:22","nodeType":"YulBlock","src":"13851:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"13853:16:22","nodeType":"YulIdentifier","src":"13853:16:22"},"nativeSrc":"13853:18:22","nodeType":"YulFunctionCall","src":"13853:18:22"},"nativeSrc":"13853:18:22","nodeType":"YulExpressionStatement","src":"13853:18:22"}]},"condition":{"arguments":[{"name":"diff","nativeSrc":"13842:4:22","nodeType":"YulIdentifier","src":"13842:4:22"},{"name":"x","nativeSrc":"13848:1:22","nodeType":"YulIdentifier","src":"13848:1:22"}],"functionName":{"name":"gt","nativeSrc":"13839:2:22","nodeType":"YulIdentifier","src":"13839:2:22"},"nativeSrc":"13839:11:22","nodeType":"YulFunctionCall","src":"13839:11:22"},"nativeSrc":"13836:37:22","nodeType":"YulIf","src":"13836:37:22"}]},"name":"checked_sub_t_uint256","nativeSrc":"13751:128:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"13782:1:22","nodeType":"YulTypedName","src":"13782:1:22","type":""},{"name":"y","nativeSrc":"13785:1:22","nodeType":"YulTypedName","src":"13785:1:22","type":""}],"returnVariables":[{"name":"diff","nativeSrc":"13791:4:22","nodeType":"YulTypedName","src":"13791:4:22","type":""}],"src":"13751:128:22"},{"body":{"nativeSrc":"14058:227:22","nodeType":"YulBlock","src":"14058:227:22","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"14075:9:22","nodeType":"YulIdentifier","src":"14075:9:22"},{"kind":"number","nativeSrc":"14086:2:22","nodeType":"YulLiteral","src":"14086:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"14068:6:22","nodeType":"YulIdentifier","src":"14068:6:22"},"nativeSrc":"14068:21:22","nodeType":"YulFunctionCall","src":"14068:21:22"},"nativeSrc":"14068:21:22","nodeType":"YulExpressionStatement","src":"14068:21:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"14109:9:22","nodeType":"YulIdentifier","src":"14109:9:22"},{"kind":"number","nativeSrc":"14120:2:22","nodeType":"YulLiteral","src":"14120:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"14105:3:22","nodeType":"YulIdentifier","src":"14105:3:22"},"nativeSrc":"14105:18:22","nodeType":"YulFunctionCall","src":"14105:18:22"},{"kind":"number","nativeSrc":"14125:2:22","nodeType":"YulLiteral","src":"14125:2:22","type":"","value":"37"}],"functionName":{"name":"mstore","nativeSrc":"14098:6:22","nodeType":"YulIdentifier","src":"14098:6:22"},"nativeSrc":"14098:30:22","nodeType":"YulFunctionCall","src":"14098:30:22"},"nativeSrc":"14098:30:22","nodeType":"YulExpressionStatement","src":"14098:30:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"14148:9:22","nodeType":"YulIdentifier","src":"14148:9:22"},{"kind":"number","nativeSrc":"14159:2:22","nodeType":"YulLiteral","src":"14159:2:22","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"14144:3:22","nodeType":"YulIdentifier","src":"14144:3:22"},"nativeSrc":"14144:18:22","nodeType":"YulFunctionCall","src":"14144:18:22"},{"hexValue":"416d6f756e7420746f2073656e64206d75737420626520677265617465722074","kind":"string","nativeSrc":"14164:34:22","nodeType":"YulLiteral","src":"14164:34:22","type":"","value":"Amount to send must be greater t"}],"functionName":{"name":"mstore","nativeSrc":"14137:6:22","nodeType":"YulIdentifier","src":"14137:6:22"},"nativeSrc":"14137:62:22","nodeType":"YulFunctionCall","src":"14137:62:22"},"nativeSrc":"14137:62:22","nodeType":"YulExpressionStatement","src":"14137:62:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"14219:9:22","nodeType":"YulIdentifier","src":"14219:9:22"},{"kind":"number","nativeSrc":"14230:2:22","nodeType":"YulLiteral","src":"14230:2:22","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"14215:3:22","nodeType":"YulIdentifier","src":"14215:3:22"},"nativeSrc":"14215:18:22","nodeType":"YulFunctionCall","src":"14215:18:22"},{"hexValue":"68616e2030","kind":"string","nativeSrc":"14235:7:22","nodeType":"YulLiteral","src":"14235:7:22","type":"","value":"han 0"}],"functionName":{"name":"mstore","nativeSrc":"14208:6:22","nodeType":"YulIdentifier","src":"14208:6:22"},"nativeSrc":"14208:35:22","nodeType":"YulFunctionCall","src":"14208:35:22"},"nativeSrc":"14208:35:22","nodeType":"YulExpressionStatement","src":"14208:35:22"},{"nativeSrc":"14252:27:22","nodeType":"YulAssignment","src":"14252:27:22","value":{"arguments":[{"name":"headStart","nativeSrc":"14264:9:22","nodeType":"YulIdentifier","src":"14264:9:22"},{"kind":"number","nativeSrc":"14275:3:22","nodeType":"YulLiteral","src":"14275:3:22","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"14260:3:22","nodeType":"YulIdentifier","src":"14260:3:22"},"nativeSrc":"14260:19:22","nodeType":"YulFunctionCall","src":"14260:19:22"},"variableNames":[{"name":"tail","nativeSrc":"14252:4:22","nodeType":"YulIdentifier","src":"14252:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_293eab1376cea4527a492c75c5b4d240032b8920c86961428e65758e4fd3daec__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"13884:401:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"14035:9:22","nodeType":"YulTypedName","src":"14035:9:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"14049:4:22","nodeType":"YulTypedName","src":"14049:4:22","type":""}],"src":"13884:401:22"},{"body":{"nativeSrc":"14419:119:22","nodeType":"YulBlock","src":"14419:119:22","statements":[{"nativeSrc":"14429:26:22","nodeType":"YulAssignment","src":"14429:26:22","value":{"arguments":[{"name":"headStart","nativeSrc":"14441:9:22","nodeType":"YulIdentifier","src":"14441:9:22"},{"kind":"number","nativeSrc":"14452:2:22","nodeType":"YulLiteral","src":"14452:2:22","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"14437:3:22","nodeType":"YulIdentifier","src":"14437:3:22"},"nativeSrc":"14437:18:22","nodeType":"YulFunctionCall","src":"14437:18:22"},"variableNames":[{"name":"tail","nativeSrc":"14429:4:22","nodeType":"YulIdentifier","src":"14429:4:22"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"14471:9:22","nodeType":"YulIdentifier","src":"14471:9:22"},{"name":"value0","nativeSrc":"14482:6:22","nodeType":"YulIdentifier","src":"14482:6:22"}],"functionName":{"name":"mstore","nativeSrc":"14464:6:22","nodeType":"YulIdentifier","src":"14464:6:22"},"nativeSrc":"14464:25:22","nodeType":"YulFunctionCall","src":"14464:25:22"},"nativeSrc":"14464:25:22","nodeType":"YulExpressionStatement","src":"14464:25:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"14509:9:22","nodeType":"YulIdentifier","src":"14509:9:22"},{"kind":"number","nativeSrc":"14520:2:22","nodeType":"YulLiteral","src":"14520:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"14505:3:22","nodeType":"YulIdentifier","src":"14505:3:22"},"nativeSrc":"14505:18:22","nodeType":"YulFunctionCall","src":"14505:18:22"},{"name":"value1","nativeSrc":"14525:6:22","nodeType":"YulIdentifier","src":"14525:6:22"}],"functionName":{"name":"mstore","nativeSrc":"14498:6:22","nodeType":"YulIdentifier","src":"14498:6:22"},"nativeSrc":"14498:34:22","nodeType":"YulFunctionCall","src":"14498:34:22"},"nativeSrc":"14498:34:22","nodeType":"YulExpressionStatement","src":"14498:34:22"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"14290:248:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"14380:9:22","nodeType":"YulTypedName","src":"14380:9:22","type":""},{"name":"value1","nativeSrc":"14391:6:22","nodeType":"YulTypedName","src":"14391:6:22","type":""},{"name":"value0","nativeSrc":"14399:6:22","nodeType":"YulTypedName","src":"14399:6:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"14410:4:22","nodeType":"YulTypedName","src":"14410:4:22","type":""}],"src":"14290:248:22"},{"body":{"nativeSrc":"14717:178:22","nodeType":"YulBlock","src":"14717:178:22","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"14734:9:22","nodeType":"YulIdentifier","src":"14734:9:22"},{"kind":"number","nativeSrc":"14745:2:22","nodeType":"YulLiteral","src":"14745:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"14727:6:22","nodeType":"YulIdentifier","src":"14727:6:22"},"nativeSrc":"14727:21:22","nodeType":"YulFunctionCall","src":"14727:21:22"},"nativeSrc":"14727:21:22","nodeType":"YulExpressionStatement","src":"14727:21:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"14768:9:22","nodeType":"YulIdentifier","src":"14768:9:22"},{"kind":"number","nativeSrc":"14779:2:22","nodeType":"YulLiteral","src":"14779:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"14764:3:22","nodeType":"YulIdentifier","src":"14764:3:22"},"nativeSrc":"14764:18:22","nodeType":"YulFunctionCall","src":"14764:18:22"},{"kind":"number","nativeSrc":"14784:2:22","nodeType":"YulLiteral","src":"14784:2:22","type":"","value":"28"}],"functionName":{"name":"mstore","nativeSrc":"14757:6:22","nodeType":"YulIdentifier","src":"14757:6:22"},"nativeSrc":"14757:30:22","nodeType":"YulFunctionCall","src":"14757:30:22"},"nativeSrc":"14757:30:22","nodeType":"YulExpressionStatement","src":"14757:30:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"14807:9:22","nodeType":"YulIdentifier","src":"14807:9:22"},{"kind":"number","nativeSrc":"14818:2:22","nodeType":"YulLiteral","src":"14818:2:22","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"14803:3:22","nodeType":"YulIdentifier","src":"14803:3:22"},"nativeSrc":"14803:18:22","nodeType":"YulFunctionCall","src":"14803:18:22"},{"hexValue":"5368617265206d7573742062652067726561746572207468616e2030","kind":"string","nativeSrc":"14823:30:22","nodeType":"YulLiteral","src":"14823:30:22","type":"","value":"Share must be greater than 0"}],"functionName":{"name":"mstore","nativeSrc":"14796:6:22","nodeType":"YulIdentifier","src":"14796:6:22"},"nativeSrc":"14796:58:22","nodeType":"YulFunctionCall","src":"14796:58:22"},"nativeSrc":"14796:58:22","nodeType":"YulExpressionStatement","src":"14796:58:22"},{"nativeSrc":"14863:26:22","nodeType":"YulAssignment","src":"14863:26:22","value":{"arguments":[{"name":"headStart","nativeSrc":"14875:9:22","nodeType":"YulIdentifier","src":"14875:9:22"},{"kind":"number","nativeSrc":"14886:2:22","nodeType":"YulLiteral","src":"14886:2:22","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"14871:3:22","nodeType":"YulIdentifier","src":"14871:3:22"},"nativeSrc":"14871:18:22","nodeType":"YulFunctionCall","src":"14871:18:22"},"variableNames":[{"name":"tail","nativeSrc":"14863:4:22","nodeType":"YulIdentifier","src":"14863:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_37b2136db8906a0fa9dcfb36fa22f3e5724d70ae1dfd30e29853723b16bc684b__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"14543:352:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"14694:9:22","nodeType":"YulTypedName","src":"14694:9:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"14708:4:22","nodeType":"YulTypedName","src":"14708:4:22","type":""}],"src":"14543:352:22"},{"body":{"nativeSrc":"15074:162:22","nodeType":"YulBlock","src":"15074:162:22","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"15091:9:22","nodeType":"YulIdentifier","src":"15091:9:22"},{"kind":"number","nativeSrc":"15102:2:22","nodeType":"YulLiteral","src":"15102:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"15084:6:22","nodeType":"YulIdentifier","src":"15084:6:22"},"nativeSrc":"15084:21:22","nodeType":"YulFunctionCall","src":"15084:21:22"},"nativeSrc":"15084:21:22","nodeType":"YulExpressionStatement","src":"15084:21:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"15125:9:22","nodeType":"YulIdentifier","src":"15125:9:22"},{"kind":"number","nativeSrc":"15136:2:22","nodeType":"YulLiteral","src":"15136:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"15121:3:22","nodeType":"YulIdentifier","src":"15121:3:22"},"nativeSrc":"15121:18:22","nodeType":"YulFunctionCall","src":"15121:18:22"},{"kind":"number","nativeSrc":"15141:2:22","nodeType":"YulLiteral","src":"15141:2:22","type":"","value":"12"}],"functionName":{"name":"mstore","nativeSrc":"15114:6:22","nodeType":"YulIdentifier","src":"15114:6:22"},"nativeSrc":"15114:30:22","nodeType":"YulFunctionCall","src":"15114:30:22"},"nativeSrc":"15114:30:22","nodeType":"YulExpressionStatement","src":"15114:30:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"15164:9:22","nodeType":"YulIdentifier","src":"15164:9:22"},{"kind":"number","nativeSrc":"15175:2:22","nodeType":"YulLiteral","src":"15175:2:22","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"15160:3:22","nodeType":"YulIdentifier","src":"15160:3:22"},"nativeSrc":"15160:18:22","nodeType":"YulFunctionCall","src":"15160:18:22"},{"hexValue":"4e6f206c6971756964697479","kind":"string","nativeSrc":"15180:14:22","nodeType":"YulLiteral","src":"15180:14:22","type":"","value":"No liquidity"}],"functionName":{"name":"mstore","nativeSrc":"15153:6:22","nodeType":"YulIdentifier","src":"15153:6:22"},"nativeSrc":"15153:42:22","nodeType":"YulFunctionCall","src":"15153:42:22"},"nativeSrc":"15153:42:22","nodeType":"YulExpressionStatement","src":"15153:42:22"},{"nativeSrc":"15204:26:22","nodeType":"YulAssignment","src":"15204:26:22","value":{"arguments":[{"name":"headStart","nativeSrc":"15216:9:22","nodeType":"YulIdentifier","src":"15216:9:22"},{"kind":"number","nativeSrc":"15227:2:22","nodeType":"YulLiteral","src":"15227:2:22","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"15212:3:22","nodeType":"YulIdentifier","src":"15212:3:22"},"nativeSrc":"15212:18:22","nodeType":"YulFunctionCall","src":"15212:18:22"},"variableNames":[{"name":"tail","nativeSrc":"15204:4:22","nodeType":"YulIdentifier","src":"15204:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_379a432f00aa43993bfbf4e01492a8eab5138dcd2e395864ede728644390fc31__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"14900:336:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"15051:9:22","nodeType":"YulTypedName","src":"15051:9:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"15065:4:22","nodeType":"YulTypedName","src":"15065:4:22","type":""}],"src":"14900:336:22"},{"body":{"nativeSrc":"15370:175:22","nodeType":"YulBlock","src":"15370:175:22","statements":[{"nativeSrc":"15380:26:22","nodeType":"YulAssignment","src":"15380:26:22","value":{"arguments":[{"name":"headStart","nativeSrc":"15392:9:22","nodeType":"YulIdentifier","src":"15392:9:22"},{"kind":"number","nativeSrc":"15403:2:22","nodeType":"YulLiteral","src":"15403:2:22","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"15388:3:22","nodeType":"YulIdentifier","src":"15388:3:22"},"nativeSrc":"15388:18:22","nodeType":"YulFunctionCall","src":"15388:18:22"},"variableNames":[{"name":"tail","nativeSrc":"15380:4:22","nodeType":"YulIdentifier","src":"15380:4:22"}]},{"nativeSrc":"15415:29:22","nodeType":"YulVariableDeclaration","src":"15415:29:22","value":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"15433:3:22","nodeType":"YulLiteral","src":"15433:3:22","type":"","value":"160"},{"kind":"number","nativeSrc":"15438:1:22","nodeType":"YulLiteral","src":"15438:1:22","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"15429:3:22","nodeType":"YulIdentifier","src":"15429:3:22"},"nativeSrc":"15429:11:22","nodeType":"YulFunctionCall","src":"15429:11:22"},{"kind":"number","nativeSrc":"15442:1:22","nodeType":"YulLiteral","src":"15442:1:22","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"15425:3:22","nodeType":"YulIdentifier","src":"15425:3:22"},"nativeSrc":"15425:19:22","nodeType":"YulFunctionCall","src":"15425:19:22"},"variables":[{"name":"_1","nativeSrc":"15419:2:22","nodeType":"YulTypedName","src":"15419:2:22","type":""}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"15460:9:22","nodeType":"YulIdentifier","src":"15460:9:22"},{"arguments":[{"name":"value0","nativeSrc":"15475:6:22","nodeType":"YulIdentifier","src":"15475:6:22"},{"name":"_1","nativeSrc":"15483:2:22","nodeType":"YulIdentifier","src":"15483:2:22"}],"functionName":{"name":"and","nativeSrc":"15471:3:22","nodeType":"YulIdentifier","src":"15471:3:22"},"nativeSrc":"15471:15:22","nodeType":"YulFunctionCall","src":"15471:15:22"}],"functionName":{"name":"mstore","nativeSrc":"15453:6:22","nodeType":"YulIdentifier","src":"15453:6:22"},"nativeSrc":"15453:34:22","nodeType":"YulFunctionCall","src":"15453:34:22"},"nativeSrc":"15453:34:22","nodeType":"YulExpressionStatement","src":"15453:34:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"15507:9:22","nodeType":"YulIdentifier","src":"15507:9:22"},{"kind":"number","nativeSrc":"15518:2:22","nodeType":"YulLiteral","src":"15518:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"15503:3:22","nodeType":"YulIdentifier","src":"15503:3:22"},"nativeSrc":"15503:18:22","nodeType":"YulFunctionCall","src":"15503:18:22"},{"arguments":[{"name":"value1","nativeSrc":"15527:6:22","nodeType":"YulIdentifier","src":"15527:6:22"},{"name":"_1","nativeSrc":"15535:2:22","nodeType":"YulIdentifier","src":"15535:2:22"}],"functionName":{"name":"and","nativeSrc":"15523:3:22","nodeType":"YulIdentifier","src":"15523:3:22"},"nativeSrc":"15523:15:22","nodeType":"YulFunctionCall","src":"15523:15:22"}],"functionName":{"name":"mstore","nativeSrc":"15496:6:22","nodeType":"YulIdentifier","src":"15496:6:22"},"nativeSrc":"15496:43:22","nodeType":"YulFunctionCall","src":"15496:43:22"},"nativeSrc":"15496:43:22","nodeType":"YulExpressionStatement","src":"15496:43:22"}]},"name":"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed","nativeSrc":"15241:304:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"15331:9:22","nodeType":"YulTypedName","src":"15331:9:22","type":""},{"name":"value1","nativeSrc":"15342:6:22","nodeType":"YulTypedName","src":"15342:6:22","type":""},{"name":"value0","nativeSrc":"15350:6:22","nodeType":"YulTypedName","src":"15350:6:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"15361:4:22","nodeType":"YulTypedName","src":"15361:4:22","type":""}],"src":"15241:304:22"},{"body":{"nativeSrc":"15724:179:22","nodeType":"YulBlock","src":"15724:179:22","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"15741:9:22","nodeType":"YulIdentifier","src":"15741:9:22"},{"kind":"number","nativeSrc":"15752:2:22","nodeType":"YulLiteral","src":"15752:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"15734:6:22","nodeType":"YulIdentifier","src":"15734:6:22"},"nativeSrc":"15734:21:22","nodeType":"YulFunctionCall","src":"15734:21:22"},"nativeSrc":"15734:21:22","nodeType":"YulExpressionStatement","src":"15734:21:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"15775:9:22","nodeType":"YulIdentifier","src":"15775:9:22"},{"kind":"number","nativeSrc":"15786:2:22","nodeType":"YulLiteral","src":"15786:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"15771:3:22","nodeType":"YulIdentifier","src":"15771:3:22"},"nativeSrc":"15771:18:22","nodeType":"YulFunctionCall","src":"15771:18:22"},{"kind":"number","nativeSrc":"15791:2:22","nodeType":"YulLiteral","src":"15791:2:22","type":"","value":"29"}],"functionName":{"name":"mstore","nativeSrc":"15764:6:22","nodeType":"YulIdentifier","src":"15764:6:22"},"nativeSrc":"15764:30:22","nodeType":"YulFunctionCall","src":"15764:30:22"},"nativeSrc":"15764:30:22","nodeType":"YulExpressionStatement","src":"15764:30:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"15814:9:22","nodeType":"YulIdentifier","src":"15814:9:22"},{"kind":"number","nativeSrc":"15825:2:22","nodeType":"YulLiteral","src":"15825:2:22","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"15810:3:22","nodeType":"YulIdentifier","src":"15810:3:22"},"nativeSrc":"15810:18:22","nodeType":"YulFunctionCall","src":"15810:18:22"},{"hexValue":"496e73756666696369656e742042414c554e49206c6971756964697479","kind":"string","nativeSrc":"15830:31:22","nodeType":"YulLiteral","src":"15830:31:22","type":"","value":"Insufficient BALUNI liquidity"}],"functionName":{"name":"mstore","nativeSrc":"15803:6:22","nodeType":"YulIdentifier","src":"15803:6:22"},"nativeSrc":"15803:59:22","nodeType":"YulFunctionCall","src":"15803:59:22"},"nativeSrc":"15803:59:22","nodeType":"YulExpressionStatement","src":"15803:59:22"},{"nativeSrc":"15871:26:22","nodeType":"YulAssignment","src":"15871:26:22","value":{"arguments":[{"name":"headStart","nativeSrc":"15883:9:22","nodeType":"YulIdentifier","src":"15883:9:22"},{"kind":"number","nativeSrc":"15894:2:22","nodeType":"YulLiteral","src":"15894:2:22","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"15879:3:22","nodeType":"YulIdentifier","src":"15879:3:22"},"nativeSrc":"15879:18:22","nodeType":"YulFunctionCall","src":"15879:18:22"},"variableNames":[{"name":"tail","nativeSrc":"15871:4:22","nodeType":"YulIdentifier","src":"15871:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_fc2f8692ca59eb8838d740ab96a08e7dab54c967cc56eb0a9b640ce78eb1103e__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"15550:353:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"15701:9:22","nodeType":"YulTypedName","src":"15701:9:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"15715:4:22","nodeType":"YulTypedName","src":"15715:4:22","type":""}],"src":"15550:353:22"},{"body":{"nativeSrc":"16037:145:22","nodeType":"YulBlock","src":"16037:145:22","statements":[{"nativeSrc":"16047:26:22","nodeType":"YulAssignment","src":"16047:26:22","value":{"arguments":[{"name":"headStart","nativeSrc":"16059:9:22","nodeType":"YulIdentifier","src":"16059:9:22"},{"kind":"number","nativeSrc":"16070:2:22","nodeType":"YulLiteral","src":"16070:2:22","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"16055:3:22","nodeType":"YulIdentifier","src":"16055:3:22"},"nativeSrc":"16055:18:22","nodeType":"YulFunctionCall","src":"16055:18:22"},"variableNames":[{"name":"tail","nativeSrc":"16047:4:22","nodeType":"YulIdentifier","src":"16047:4:22"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"16089:9:22","nodeType":"YulIdentifier","src":"16089:9:22"},{"arguments":[{"name":"value0","nativeSrc":"16104:6:22","nodeType":"YulIdentifier","src":"16104:6:22"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"16120:3:22","nodeType":"YulLiteral","src":"16120:3:22","type":"","value":"160"},{"kind":"number","nativeSrc":"16125:1:22","nodeType":"YulLiteral","src":"16125:1:22","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"16116:3:22","nodeType":"YulIdentifier","src":"16116:3:22"},"nativeSrc":"16116:11:22","nodeType":"YulFunctionCall","src":"16116:11:22"},{"kind":"number","nativeSrc":"16129:1:22","nodeType":"YulLiteral","src":"16129:1:22","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"16112:3:22","nodeType":"YulIdentifier","src":"16112:3:22"},"nativeSrc":"16112:19:22","nodeType":"YulFunctionCall","src":"16112:19:22"}],"functionName":{"name":"and","nativeSrc":"16100:3:22","nodeType":"YulIdentifier","src":"16100:3:22"},"nativeSrc":"16100:32:22","nodeType":"YulFunctionCall","src":"16100:32:22"}],"functionName":{"name":"mstore","nativeSrc":"16082:6:22","nodeType":"YulIdentifier","src":"16082:6:22"},"nativeSrc":"16082:51:22","nodeType":"YulFunctionCall","src":"16082:51:22"},"nativeSrc":"16082:51:22","nodeType":"YulExpressionStatement","src":"16082:51:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"16153:9:22","nodeType":"YulIdentifier","src":"16153:9:22"},{"kind":"number","nativeSrc":"16164:2:22","nodeType":"YulLiteral","src":"16164:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"16149:3:22","nodeType":"YulIdentifier","src":"16149:3:22"},"nativeSrc":"16149:18:22","nodeType":"YulFunctionCall","src":"16149:18:22"},{"name":"value1","nativeSrc":"16169:6:22","nodeType":"YulIdentifier","src":"16169:6:22"}],"functionName":{"name":"mstore","nativeSrc":"16142:6:22","nodeType":"YulIdentifier","src":"16142:6:22"},"nativeSrc":"16142:34:22","nodeType":"YulFunctionCall","src":"16142:34:22"},"nativeSrc":"16142:34:22","nodeType":"YulExpressionStatement","src":"16142:34:22"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nativeSrc":"15908:274:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"15998:9:22","nodeType":"YulTypedName","src":"15998:9:22","type":""},{"name":"value1","nativeSrc":"16009:6:22","nodeType":"YulTypedName","src":"16009:6:22","type":""},{"name":"value0","nativeSrc":"16017:6:22","nodeType":"YulTypedName","src":"16017:6:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"16028:4:22","nodeType":"YulTypedName","src":"16028:4:22","type":""}],"src":"15908:274:22"},{"body":{"nativeSrc":"16265:199:22","nodeType":"YulBlock","src":"16265:199:22","statements":[{"body":{"nativeSrc":"16311:16:22","nodeType":"YulBlock","src":"16311:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"16320:1:22","nodeType":"YulLiteral","src":"16320:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"16323:1:22","nodeType":"YulLiteral","src":"16323:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"16313:6:22","nodeType":"YulIdentifier","src":"16313:6:22"},"nativeSrc":"16313:12:22","nodeType":"YulFunctionCall","src":"16313:12:22"},"nativeSrc":"16313:12:22","nodeType":"YulExpressionStatement","src":"16313:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"16286:7:22","nodeType":"YulIdentifier","src":"16286:7:22"},{"name":"headStart","nativeSrc":"16295:9:22","nodeType":"YulIdentifier","src":"16295:9:22"}],"functionName":{"name":"sub","nativeSrc":"16282:3:22","nodeType":"YulIdentifier","src":"16282:3:22"},"nativeSrc":"16282:23:22","nodeType":"YulFunctionCall","src":"16282:23:22"},{"kind":"number","nativeSrc":"16307:2:22","nodeType":"YulLiteral","src":"16307:2:22","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"16278:3:22","nodeType":"YulIdentifier","src":"16278:3:22"},"nativeSrc":"16278:32:22","nodeType":"YulFunctionCall","src":"16278:32:22"},"nativeSrc":"16275:52:22","nodeType":"YulIf","src":"16275:52:22"},{"nativeSrc":"16336:29:22","nodeType":"YulVariableDeclaration","src":"16336:29:22","value":{"arguments":[{"name":"headStart","nativeSrc":"16355:9:22","nodeType":"YulIdentifier","src":"16355:9:22"}],"functionName":{"name":"mload","nativeSrc":"16349:5:22","nodeType":"YulIdentifier","src":"16349:5:22"},"nativeSrc":"16349:16:22","nodeType":"YulFunctionCall","src":"16349:16:22"},"variables":[{"name":"value","nativeSrc":"16340:5:22","nodeType":"YulTypedName","src":"16340:5:22","type":""}]},{"body":{"nativeSrc":"16418:16:22","nodeType":"YulBlock","src":"16418:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"16427:1:22","nodeType":"YulLiteral","src":"16427:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"16430:1:22","nodeType":"YulLiteral","src":"16430:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"16420:6:22","nodeType":"YulIdentifier","src":"16420:6:22"},"nativeSrc":"16420:12:22","nodeType":"YulFunctionCall","src":"16420:12:22"},"nativeSrc":"16420:12:22","nodeType":"YulExpressionStatement","src":"16420:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"16387:5:22","nodeType":"YulIdentifier","src":"16387:5:22"},{"arguments":[{"arguments":[{"name":"value","nativeSrc":"16408:5:22","nodeType":"YulIdentifier","src":"16408:5:22"}],"functionName":{"name":"iszero","nativeSrc":"16401:6:22","nodeType":"YulIdentifier","src":"16401:6:22"},"nativeSrc":"16401:13:22","nodeType":"YulFunctionCall","src":"16401:13:22"}],"functionName":{"name":"iszero","nativeSrc":"16394:6:22","nodeType":"YulIdentifier","src":"16394:6:22"},"nativeSrc":"16394:21:22","nodeType":"YulFunctionCall","src":"16394:21:22"}],"functionName":{"name":"eq","nativeSrc":"16384:2:22","nodeType":"YulIdentifier","src":"16384:2:22"},"nativeSrc":"16384:32:22","nodeType":"YulFunctionCall","src":"16384:32:22"}],"functionName":{"name":"iszero","nativeSrc":"16377:6:22","nodeType":"YulIdentifier","src":"16377:6:22"},"nativeSrc":"16377:40:22","nodeType":"YulFunctionCall","src":"16377:40:22"},"nativeSrc":"16374:60:22","nodeType":"YulIf","src":"16374:60:22"},{"nativeSrc":"16443:15:22","nodeType":"YulAssignment","src":"16443:15:22","value":{"name":"value","nativeSrc":"16453:5:22","nodeType":"YulIdentifier","src":"16453:5:22"},"variableNames":[{"name":"value0","nativeSrc":"16443:6:22","nodeType":"YulIdentifier","src":"16443:6:22"}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nativeSrc":"16187:277:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"16231:9:22","nodeType":"YulTypedName","src":"16231:9:22","type":""},{"name":"dataEnd","nativeSrc":"16242:7:22","nodeType":"YulTypedName","src":"16242:7:22","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"16254:6:22","nodeType":"YulTypedName","src":"16254:6:22","type":""}],"src":"16187:277:22"},{"body":{"nativeSrc":"16643:169:22","nodeType":"YulBlock","src":"16643:169:22","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"16660:9:22","nodeType":"YulIdentifier","src":"16660:9:22"},{"kind":"number","nativeSrc":"16671:2:22","nodeType":"YulLiteral","src":"16671:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"16653:6:22","nodeType":"YulIdentifier","src":"16653:6:22"},"nativeSrc":"16653:21:22","nodeType":"YulFunctionCall","src":"16653:21:22"},"nativeSrc":"16653:21:22","nodeType":"YulExpressionStatement","src":"16653:21:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"16694:9:22","nodeType":"YulIdentifier","src":"16694:9:22"},{"kind":"number","nativeSrc":"16705:2:22","nodeType":"YulLiteral","src":"16705:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"16690:3:22","nodeType":"YulIdentifier","src":"16690:3:22"},"nativeSrc":"16690:18:22","nodeType":"YulFunctionCall","src":"16690:18:22"},{"kind":"number","nativeSrc":"16710:2:22","nodeType":"YulLiteral","src":"16710:2:22","type":"","value":"19"}],"functionName":{"name":"mstore","nativeSrc":"16683:6:22","nodeType":"YulIdentifier","src":"16683:6:22"},"nativeSrc":"16683:30:22","nodeType":"YulFunctionCall","src":"16683:30:22"},"nativeSrc":"16683:30:22","nodeType":"YulExpressionStatement","src":"16683:30:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"16733:9:22","nodeType":"YulIdentifier","src":"16733:9:22"},{"kind":"number","nativeSrc":"16744:2:22","nodeType":"YulLiteral","src":"16744:2:22","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"16729:3:22","nodeType":"YulIdentifier","src":"16729:3:22"},"nativeSrc":"16729:18:22","nodeType":"YulFunctionCall","src":"16729:18:22"},{"hexValue":"466565207472616e73666572206661696c6564","kind":"string","nativeSrc":"16749:21:22","nodeType":"YulLiteral","src":"16749:21:22","type":"","value":"Fee transfer failed"}],"functionName":{"name":"mstore","nativeSrc":"16722:6:22","nodeType":"YulIdentifier","src":"16722:6:22"},"nativeSrc":"16722:49:22","nodeType":"YulFunctionCall","src":"16722:49:22"},"nativeSrc":"16722:49:22","nodeType":"YulExpressionStatement","src":"16722:49:22"},{"nativeSrc":"16780:26:22","nodeType":"YulAssignment","src":"16780:26:22","value":{"arguments":[{"name":"headStart","nativeSrc":"16792:9:22","nodeType":"YulIdentifier","src":"16792:9:22"},{"kind":"number","nativeSrc":"16803:2:22","nodeType":"YulLiteral","src":"16803:2:22","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"16788:3:22","nodeType":"YulIdentifier","src":"16788:3:22"},"nativeSrc":"16788:18:22","nodeType":"YulFunctionCall","src":"16788:18:22"},"variableNames":[{"name":"tail","nativeSrc":"16780:4:22","nodeType":"YulIdentifier","src":"16780:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_5ce83e457e48ac9624285a3c527b5c2f9ccbef788eaf8b73a2271dc0a760bc56__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"16469:343:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"16620:9:22","nodeType":"YulTypedName","src":"16620:9:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"16634:4:22","nodeType":"YulTypedName","src":"16634:4:22","type":""}],"src":"16469:343:22"},{"body":{"nativeSrc":"16991:169:22","nodeType":"YulBlock","src":"16991:169:22","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"17008:9:22","nodeType":"YulIdentifier","src":"17008:9:22"},{"kind":"number","nativeSrc":"17019:2:22","nodeType":"YulLiteral","src":"17019:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"17001:6:22","nodeType":"YulIdentifier","src":"17001:6:22"},"nativeSrc":"17001:21:22","nodeType":"YulFunctionCall","src":"17001:21:22"},"nativeSrc":"17001:21:22","nodeType":"YulExpressionStatement","src":"17001:21:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"17042:9:22","nodeType":"YulIdentifier","src":"17042:9:22"},{"kind":"number","nativeSrc":"17053:2:22","nodeType":"YulLiteral","src":"17053:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"17038:3:22","nodeType":"YulIdentifier","src":"17038:3:22"},"nativeSrc":"17038:18:22","nodeType":"YulFunctionCall","src":"17038:18:22"},{"kind":"number","nativeSrc":"17058:2:22","nodeType":"YulLiteral","src":"17058:2:22","type":"","value":"19"}],"functionName":{"name":"mstore","nativeSrc":"17031:6:22","nodeType":"YulIdentifier","src":"17031:6:22"},"nativeSrc":"17031:30:22","nodeType":"YulFunctionCall","src":"17031:30:22"},"nativeSrc":"17031:30:22","nodeType":"YulExpressionStatement","src":"17031:30:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"17081:9:22","nodeType":"YulIdentifier","src":"17081:9:22"},{"kind":"number","nativeSrc":"17092:2:22","nodeType":"YulLiteral","src":"17092:2:22","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"17077:3:22","nodeType":"YulIdentifier","src":"17077:3:22"},"nativeSrc":"17077:18:22","nodeType":"YulFunctionCall","src":"17077:18:22"},{"hexValue":"496e76616c696420617373657420696e646578","kind":"string","nativeSrc":"17097:21:22","nodeType":"YulLiteral","src":"17097:21:22","type":"","value":"Invalid asset index"}],"functionName":{"name":"mstore","nativeSrc":"17070:6:22","nodeType":"YulIdentifier","src":"17070:6:22"},"nativeSrc":"17070:49:22","nodeType":"YulFunctionCall","src":"17070:49:22"},"nativeSrc":"17070:49:22","nodeType":"YulExpressionStatement","src":"17070:49:22"},{"nativeSrc":"17128:26:22","nodeType":"YulAssignment","src":"17128:26:22","value":{"arguments":[{"name":"headStart","nativeSrc":"17140:9:22","nodeType":"YulIdentifier","src":"17140:9:22"},{"kind":"number","nativeSrc":"17151:2:22","nodeType":"YulLiteral","src":"17151:2:22","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"17136:3:22","nodeType":"YulIdentifier","src":"17136:3:22"},"nativeSrc":"17136:18:22","nodeType":"YulFunctionCall","src":"17136:18:22"},"variableNames":[{"name":"tail","nativeSrc":"17128:4:22","nodeType":"YulIdentifier","src":"17128:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_f8b105b0b4a7ff5c11f41135d6d4600fd47da6168663f6cb1810745b08d83918__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"16817:343:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"16968:9:22","nodeType":"YulTypedName","src":"16968:9:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"16982:4:22","nodeType":"YulTypedName","src":"16982:4:22","type":""}],"src":"16817:343:22"},{"body":{"nativeSrc":"17339:173:22","nodeType":"YulBlock","src":"17339:173:22","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"17356:9:22","nodeType":"YulIdentifier","src":"17356:9:22"},{"kind":"number","nativeSrc":"17367:2:22","nodeType":"YulLiteral","src":"17367:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"17349:6:22","nodeType":"YulIdentifier","src":"17349:6:22"},"nativeSrc":"17349:21:22","nodeType":"YulFunctionCall","src":"17349:21:22"},"nativeSrc":"17349:21:22","nodeType":"YulExpressionStatement","src":"17349:21:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"17390:9:22","nodeType":"YulIdentifier","src":"17390:9:22"},{"kind":"number","nativeSrc":"17401:2:22","nodeType":"YulLiteral","src":"17401:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"17386:3:22","nodeType":"YulIdentifier","src":"17386:3:22"},"nativeSrc":"17386:18:22","nodeType":"YulFunctionCall","src":"17386:18:22"},{"kind":"number","nativeSrc":"17406:2:22","nodeType":"YulLiteral","src":"17406:2:22","type":"","value":"23"}],"functionName":{"name":"mstore","nativeSrc":"17379:6:22","nodeType":"YulIdentifier","src":"17379:6:22"},"nativeSrc":"17379:30:22","nodeType":"YulFunctionCall","src":"17379:30:22"},"nativeSrc":"17379:30:22","nodeType":"YulExpressionStatement","src":"17379:30:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"17429:9:22","nodeType":"YulIdentifier","src":"17429:9:22"},{"kind":"number","nativeSrc":"17440:2:22","nodeType":"YulLiteral","src":"17440:2:22","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"17425:3:22","nodeType":"YulIdentifier","src":"17425:3:22"},"nativeSrc":"17425:18:22","nodeType":"YulFunctionCall","src":"17425:18:22"},{"hexValue":"496e76616c6964207265736572766573206c656e677468","kind":"string","nativeSrc":"17445:25:22","nodeType":"YulLiteral","src":"17445:25:22","type":"","value":"Invalid reserves length"}],"functionName":{"name":"mstore","nativeSrc":"17418:6:22","nodeType":"YulIdentifier","src":"17418:6:22"},"nativeSrc":"17418:53:22","nodeType":"YulFunctionCall","src":"17418:53:22"},"nativeSrc":"17418:53:22","nodeType":"YulExpressionStatement","src":"17418:53:22"},{"nativeSrc":"17480:26:22","nodeType":"YulAssignment","src":"17480:26:22","value":{"arguments":[{"name":"headStart","nativeSrc":"17492:9:22","nodeType":"YulIdentifier","src":"17492:9:22"},{"kind":"number","nativeSrc":"17503:2:22","nodeType":"YulLiteral","src":"17503:2:22","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"17488:3:22","nodeType":"YulIdentifier","src":"17488:3:22"},"nativeSrc":"17488:18:22","nodeType":"YulFunctionCall","src":"17488:18:22"},"variableNames":[{"name":"tail","nativeSrc":"17480:4:22","nodeType":"YulIdentifier","src":"17480:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_788ce755d61da147edad70af92467c8a383af859573990e9defde5b6e0bdf24d__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"17165:347:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"17316:9:22","nodeType":"YulTypedName","src":"17316:9:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"17330:4:22","nodeType":"YulTypedName","src":"17330:4:22","type":""}],"src":"17165:347:22"},{"body":{"nativeSrc":"17691:158:22","nodeType":"YulBlock","src":"17691:158:22","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"17708:9:22","nodeType":"YulIdentifier","src":"17708:9:22"},{"kind":"number","nativeSrc":"17719:2:22","nodeType":"YulLiteral","src":"17719:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"17701:6:22","nodeType":"YulIdentifier","src":"17701:6:22"},"nativeSrc":"17701:21:22","nodeType":"YulFunctionCall","src":"17701:21:22"},"nativeSrc":"17701:21:22","nodeType":"YulExpressionStatement","src":"17701:21:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"17742:9:22","nodeType":"YulIdentifier","src":"17742:9:22"},{"kind":"number","nativeSrc":"17753:2:22","nodeType":"YulLiteral","src":"17753:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"17738:3:22","nodeType":"YulIdentifier","src":"17738:3:22"},"nativeSrc":"17738:18:22","nodeType":"YulFunctionCall","src":"17738:18:22"},{"kind":"number","nativeSrc":"17758:1:22","nodeType":"YulLiteral","src":"17758:1:22","type":"","value":"9"}],"functionName":{"name":"mstore","nativeSrc":"17731:6:22","nodeType":"YulIdentifier","src":"17731:6:22"},"nativeSrc":"17731:29:22","nodeType":"YulFunctionCall","src":"17731:29:22"},"nativeSrc":"17731:29:22","nodeType":"YulExpressionStatement","src":"17731:29:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"17780:9:22","nodeType":"YulIdentifier","src":"17780:9:22"},{"kind":"number","nativeSrc":"17791:2:22","nodeType":"YulLiteral","src":"17791:2:22","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"17776:3:22","nodeType":"YulIdentifier","src":"17776:3:22"},"nativeSrc":"17776:18:22","nodeType":"YulFunctionCall","src":"17776:18:22"},{"hexValue":"4e6f20617373657473","kind":"string","nativeSrc":"17796:11:22","nodeType":"YulLiteral","src":"17796:11:22","type":"","value":"No assets"}],"functionName":{"name":"mstore","nativeSrc":"17769:6:22","nodeType":"YulIdentifier","src":"17769:6:22"},"nativeSrc":"17769:39:22","nodeType":"YulFunctionCall","src":"17769:39:22"},"nativeSrc":"17769:39:22","nodeType":"YulExpressionStatement","src":"17769:39:22"},{"nativeSrc":"17817:26:22","nodeType":"YulAssignment","src":"17817:26:22","value":{"arguments":[{"name":"headStart","nativeSrc":"17829:9:22","nodeType":"YulIdentifier","src":"17829:9:22"},{"kind":"number","nativeSrc":"17840:2:22","nodeType":"YulLiteral","src":"17840:2:22","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"17825:3:22","nodeType":"YulIdentifier","src":"17825:3:22"},"nativeSrc":"17825:18:22","nodeType":"YulFunctionCall","src":"17825:18:22"},"variableNames":[{"name":"tail","nativeSrc":"17817:4:22","nodeType":"YulIdentifier","src":"17817:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_195739df032cb3c07c5ed70a4cae73c5d077df4296263c6db3d1f3b4671efbd0__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"17517:332:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"17668:9:22","nodeType":"YulTypedName","src":"17668:9:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"17682:4:22","nodeType":"YulTypedName","src":"17682:4:22","type":""}],"src":"17517:332:22"},{"body":{"nativeSrc":"17902:77:22","nodeType":"YulBlock","src":"17902:77:22","statements":[{"nativeSrc":"17912:16:22","nodeType":"YulAssignment","src":"17912:16:22","value":{"arguments":[{"name":"x","nativeSrc":"17923:1:22","nodeType":"YulIdentifier","src":"17923:1:22"},{"name":"y","nativeSrc":"17926:1:22","nodeType":"YulIdentifier","src":"17926:1:22"}],"functionName":{"name":"add","nativeSrc":"17919:3:22","nodeType":"YulIdentifier","src":"17919:3:22"},"nativeSrc":"17919:9:22","nodeType":"YulFunctionCall","src":"17919:9:22"},"variableNames":[{"name":"sum","nativeSrc":"17912:3:22","nodeType":"YulIdentifier","src":"17912:3:22"}]},{"body":{"nativeSrc":"17951:22:22","nodeType":"YulBlock","src":"17951:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"17953:16:22","nodeType":"YulIdentifier","src":"17953:16:22"},"nativeSrc":"17953:18:22","nodeType":"YulFunctionCall","src":"17953:18:22"},"nativeSrc":"17953:18:22","nodeType":"YulExpressionStatement","src":"17953:18:22"}]},"condition":{"arguments":[{"name":"x","nativeSrc":"17943:1:22","nodeType":"YulIdentifier","src":"17943:1:22"},{"name":"sum","nativeSrc":"17946:3:22","nodeType":"YulIdentifier","src":"17946:3:22"}],"functionName":{"name":"gt","nativeSrc":"17940:2:22","nodeType":"YulIdentifier","src":"17940:2:22"},"nativeSrc":"17940:10:22","nodeType":"YulFunctionCall","src":"17940:10:22"},"nativeSrc":"17937:36:22","nodeType":"YulIf","src":"17937:36:22"}]},"name":"checked_add_t_uint256","nativeSrc":"17854:125:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"17885:1:22","nodeType":"YulTypedName","src":"17885:1:22","type":""},{"name":"y","nativeSrc":"17888:1:22","nodeType":"YulTypedName","src":"17888:1:22","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"17894:3:22","nodeType":"YulTypedName","src":"17894:3:22","type":""}],"src":"17854:125:22"},{"body":{"nativeSrc":"18158:224:22","nodeType":"YulBlock","src":"18158:224:22","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"18175:9:22","nodeType":"YulIdentifier","src":"18175:9:22"},{"kind":"number","nativeSrc":"18186:2:22","nodeType":"YulLiteral","src":"18186:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"18168:6:22","nodeType":"YulIdentifier","src":"18168:6:22"},"nativeSrc":"18168:21:22","nodeType":"YulFunctionCall","src":"18168:21:22"},"nativeSrc":"18168:21:22","nodeType":"YulExpressionStatement","src":"18168:21:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"18209:9:22","nodeType":"YulIdentifier","src":"18209:9:22"},{"kind":"number","nativeSrc":"18220:2:22","nodeType":"YulLiteral","src":"18220:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"18205:3:22","nodeType":"YulIdentifier","src":"18205:3:22"},"nativeSrc":"18205:18:22","nodeType":"YulFunctionCall","src":"18205:18:22"},{"kind":"number","nativeSrc":"18225:2:22","nodeType":"YulLiteral","src":"18225:2:22","type":"","value":"34"}],"functionName":{"name":"mstore","nativeSrc":"18198:6:22","nodeType":"YulIdentifier","src":"18198:6:22"},"nativeSrc":"18198:30:22","nodeType":"YulFunctionCall","src":"18198:30:22"},"nativeSrc":"18198:30:22","nodeType":"YulExpressionStatement","src":"18198:30:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"18248:9:22","nodeType":"YulIdentifier","src":"18248:9:22"},{"kind":"number","nativeSrc":"18259:2:22","nodeType":"YulLiteral","src":"18259:2:22","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"18244:3:22","nodeType":"YulIdentifier","src":"18244:3:22"},"nativeSrc":"18244:18:22","nodeType":"YulFunctionCall","src":"18244:18:22"},{"hexValue":"546f74616c2076616c7565206d7573742062652067726561746572207468616e","kind":"string","nativeSrc":"18264:34:22","nodeType":"YulLiteral","src":"18264:34:22","type":"","value":"Total value must be greater than"}],"functionName":{"name":"mstore","nativeSrc":"18237:6:22","nodeType":"YulIdentifier","src":"18237:6:22"},"nativeSrc":"18237:62:22","nodeType":"YulFunctionCall","src":"18237:62:22"},"nativeSrc":"18237:62:22","nodeType":"YulExpressionStatement","src":"18237:62:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"18319:9:22","nodeType":"YulIdentifier","src":"18319:9:22"},{"kind":"number","nativeSrc":"18330:2:22","nodeType":"YulLiteral","src":"18330:2:22","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"18315:3:22","nodeType":"YulIdentifier","src":"18315:3:22"},"nativeSrc":"18315:18:22","nodeType":"YulFunctionCall","src":"18315:18:22"},{"hexValue":"2030","kind":"string","nativeSrc":"18335:4:22","nodeType":"YulLiteral","src":"18335:4:22","type":"","value":" 0"}],"functionName":{"name":"mstore","nativeSrc":"18308:6:22","nodeType":"YulIdentifier","src":"18308:6:22"},"nativeSrc":"18308:32:22","nodeType":"YulFunctionCall","src":"18308:32:22"},"nativeSrc":"18308:32:22","nodeType":"YulExpressionStatement","src":"18308:32:22"},{"nativeSrc":"18349:27:22","nodeType":"YulAssignment","src":"18349:27:22","value":{"arguments":[{"name":"headStart","nativeSrc":"18361:9:22","nodeType":"YulIdentifier","src":"18361:9:22"},{"kind":"number","nativeSrc":"18372:3:22","nodeType":"YulLiteral","src":"18372:3:22","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"18357:3:22","nodeType":"YulIdentifier","src":"18357:3:22"},"nativeSrc":"18357:19:22","nodeType":"YulFunctionCall","src":"18357:19:22"},"variableNames":[{"name":"tail","nativeSrc":"18349:4:22","nodeType":"YulIdentifier","src":"18349:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_e8ec4a06d76118e3b24afbc30b183e086aa6aaa6e137c81160fc8d59e1a33e3f__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"17984:398:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"18135:9:22","nodeType":"YulTypedName","src":"18135:9:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"18149:4:22","nodeType":"YulTypedName","src":"18149:4:22","type":""}],"src":"17984:398:22"},{"body":{"nativeSrc":"18561:228:22","nodeType":"YulBlock","src":"18561:228:22","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"18578:9:22","nodeType":"YulIdentifier","src":"18578:9:22"},{"kind":"number","nativeSrc":"18589:2:22","nodeType":"YulLiteral","src":"18589:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"18571:6:22","nodeType":"YulIdentifier","src":"18571:6:22"},"nativeSrc":"18571:21:22","nodeType":"YulFunctionCall","src":"18571:21:22"},"nativeSrc":"18571:21:22","nodeType":"YulExpressionStatement","src":"18571:21:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"18612:9:22","nodeType":"YulIdentifier","src":"18612:9:22"},{"kind":"number","nativeSrc":"18623:2:22","nodeType":"YulLiteral","src":"18623:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"18608:3:22","nodeType":"YulIdentifier","src":"18608:3:22"},"nativeSrc":"18608:18:22","nodeType":"YulFunctionCall","src":"18608:18:22"},{"kind":"number","nativeSrc":"18628:2:22","nodeType":"YulLiteral","src":"18628:2:22","type":"","value":"38"}],"functionName":{"name":"mstore","nativeSrc":"18601:6:22","nodeType":"YulIdentifier","src":"18601:6:22"},"nativeSrc":"18601:30:22","nodeType":"YulFunctionCall","src":"18601:30:22"},"nativeSrc":"18601:30:22","nodeType":"YulExpressionStatement","src":"18601:30:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"18651:9:22","nodeType":"YulIdentifier","src":"18651:9:22"},{"kind":"number","nativeSrc":"18662:2:22","nodeType":"YulLiteral","src":"18662:2:22","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"18647:3:22","nodeType":"YulIdentifier","src":"18647:3:22"},"nativeSrc":"18647:18:22","nodeType":"YulFunctionCall","src":"18647:18:22"},{"hexValue":"546f74616c206c6971756964697479206d757374206265206772656174657220","kind":"string","nativeSrc":"18667:34:22","nodeType":"YulLiteral","src":"18667:34:22","type":"","value":"Total liquidity must be greater "}],"functionName":{"name":"mstore","nativeSrc":"18640:6:22","nodeType":"YulIdentifier","src":"18640:6:22"},"nativeSrc":"18640:62:22","nodeType":"YulFunctionCall","src":"18640:62:22"},"nativeSrc":"18640:62:22","nodeType":"YulExpressionStatement","src":"18640:62:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"18722:9:22","nodeType":"YulIdentifier","src":"18722:9:22"},{"kind":"number","nativeSrc":"18733:2:22","nodeType":"YulLiteral","src":"18733:2:22","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"18718:3:22","nodeType":"YulIdentifier","src":"18718:3:22"},"nativeSrc":"18718:18:22","nodeType":"YulFunctionCall","src":"18718:18:22"},{"hexValue":"7468616e2030","kind":"string","nativeSrc":"18738:8:22","nodeType":"YulLiteral","src":"18738:8:22","type":"","value":"than 0"}],"functionName":{"name":"mstore","nativeSrc":"18711:6:22","nodeType":"YulIdentifier","src":"18711:6:22"},"nativeSrc":"18711:36:22","nodeType":"YulFunctionCall","src":"18711:36:22"},"nativeSrc":"18711:36:22","nodeType":"YulExpressionStatement","src":"18711:36:22"},{"nativeSrc":"18756:27:22","nodeType":"YulAssignment","src":"18756:27:22","value":{"arguments":[{"name":"headStart","nativeSrc":"18768:9:22","nodeType":"YulIdentifier","src":"18768:9:22"},{"kind":"number","nativeSrc":"18779:3:22","nodeType":"YulLiteral","src":"18779:3:22","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"18764:3:22","nodeType":"YulIdentifier","src":"18764:3:22"},"nativeSrc":"18764:19:22","nodeType":"YulFunctionCall","src":"18764:19:22"},"variableNames":[{"name":"tail","nativeSrc":"18756:4:22","nodeType":"YulIdentifier","src":"18756:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_a245c00c976af272c663e732300fe860097516364a0d92887494f54e860fa54c__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"18387:402:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"18538:9:22","nodeType":"YulTypedName","src":"18538:9:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"18552:4:22","nodeType":"YulTypedName","src":"18552:4:22","type":""}],"src":"18387:402:22"},{"body":{"nativeSrc":"18968:163:22","nodeType":"YulBlock","src":"18968:163:22","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"18985:9:22","nodeType":"YulIdentifier","src":"18985:9:22"},{"kind":"number","nativeSrc":"18996:2:22","nodeType":"YulLiteral","src":"18996:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"18978:6:22","nodeType":"YulIdentifier","src":"18978:6:22"},"nativeSrc":"18978:21:22","nodeType":"YulFunctionCall","src":"18978:21:22"},"nativeSrc":"18978:21:22","nodeType":"YulExpressionStatement","src":"18978:21:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"19019:9:22","nodeType":"YulIdentifier","src":"19019:9:22"},{"kind":"number","nativeSrc":"19030:2:22","nodeType":"YulLiteral","src":"19030:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"19015:3:22","nodeType":"YulIdentifier","src":"19015:3:22"},"nativeSrc":"19015:18:22","nodeType":"YulFunctionCall","src":"19015:18:22"},{"kind":"number","nativeSrc":"19035:2:22","nodeType":"YulLiteral","src":"19035:2:22","type":"","value":"13"}],"functionName":{"name":"mstore","nativeSrc":"19008:6:22","nodeType":"YulIdentifier","src":"19008:6:22"},"nativeSrc":"19008:30:22","nodeType":"YulFunctionCall","src":"19008:30:22"},"nativeSrc":"19008:30:22","nodeType":"YulExpressionStatement","src":"19008:30:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"19058:9:22","nodeType":"YulIdentifier","src":"19058:9:22"},{"kind":"number","nativeSrc":"19069:2:22","nodeType":"YulLiteral","src":"19069:2:22","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"19054:3:22","nodeType":"YulIdentifier","src":"19054:3:22"},"nativeSrc":"19054:18:22","nodeType":"YulFunctionCall","src":"19054:18:22"},{"hexValue":"4d696e74207174792069732030","kind":"string","nativeSrc":"19074:15:22","nodeType":"YulLiteral","src":"19074:15:22","type":"","value":"Mint qty is 0"}],"functionName":{"name":"mstore","nativeSrc":"19047:6:22","nodeType":"YulIdentifier","src":"19047:6:22"},"nativeSrc":"19047:43:22","nodeType":"YulFunctionCall","src":"19047:43:22"},"nativeSrc":"19047:43:22","nodeType":"YulExpressionStatement","src":"19047:43:22"},{"nativeSrc":"19099:26:22","nodeType":"YulAssignment","src":"19099:26:22","value":{"arguments":[{"name":"headStart","nativeSrc":"19111:9:22","nodeType":"YulIdentifier","src":"19111:9:22"},{"kind":"number","nativeSrc":"19122:2:22","nodeType":"YulLiteral","src":"19122:2:22","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"19107:3:22","nodeType":"YulIdentifier","src":"19107:3:22"},"nativeSrc":"19107:18:22","nodeType":"YulFunctionCall","src":"19107:18:22"},"variableNames":[{"name":"tail","nativeSrc":"19099:4:22","nodeType":"YulIdentifier","src":"19099:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_50327403b25acc6e0d15796c676b8320f8d9ffcece005326d31f4226e4f741bb__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"18794:337:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"18945:9:22","nodeType":"YulTypedName","src":"18945:9:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"18959:4:22","nodeType":"YulTypedName","src":"18959:4:22","type":""}],"src":"18794:337:22"},{"body":{"nativeSrc":"19215:194:22","nodeType":"YulBlock","src":"19215:194:22","statements":[{"body":{"nativeSrc":"19261:16:22","nodeType":"YulBlock","src":"19261:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"19270:1:22","nodeType":"YulLiteral","src":"19270:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"19273:1:22","nodeType":"YulLiteral","src":"19273:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"19263:6:22","nodeType":"YulIdentifier","src":"19263:6:22"},"nativeSrc":"19263:12:22","nodeType":"YulFunctionCall","src":"19263:12:22"},"nativeSrc":"19263:12:22","nodeType":"YulExpressionStatement","src":"19263:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"19236:7:22","nodeType":"YulIdentifier","src":"19236:7:22"},{"name":"headStart","nativeSrc":"19245:9:22","nodeType":"YulIdentifier","src":"19245:9:22"}],"functionName":{"name":"sub","nativeSrc":"19232:3:22","nodeType":"YulIdentifier","src":"19232:3:22"},"nativeSrc":"19232:23:22","nodeType":"YulFunctionCall","src":"19232:23:22"},{"kind":"number","nativeSrc":"19257:2:22","nodeType":"YulLiteral","src":"19257:2:22","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"19228:3:22","nodeType":"YulIdentifier","src":"19228:3:22"},"nativeSrc":"19228:32:22","nodeType":"YulFunctionCall","src":"19228:32:22"},"nativeSrc":"19225:52:22","nodeType":"YulIf","src":"19225:52:22"},{"nativeSrc":"19286:29:22","nodeType":"YulVariableDeclaration","src":"19286:29:22","value":{"arguments":[{"name":"headStart","nativeSrc":"19305:9:22","nodeType":"YulIdentifier","src":"19305:9:22"}],"functionName":{"name":"mload","nativeSrc":"19299:5:22","nodeType":"YulIdentifier","src":"19299:5:22"},"nativeSrc":"19299:16:22","nodeType":"YulFunctionCall","src":"19299:16:22"},"variables":[{"name":"value","nativeSrc":"19290:5:22","nodeType":"YulTypedName","src":"19290:5:22","type":""}]},{"body":{"nativeSrc":"19363:16:22","nodeType":"YulBlock","src":"19363:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"19372:1:22","nodeType":"YulLiteral","src":"19372:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"19375:1:22","nodeType":"YulLiteral","src":"19375:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"19365:6:22","nodeType":"YulIdentifier","src":"19365:6:22"},"nativeSrc":"19365:12:22","nodeType":"YulFunctionCall","src":"19365:12:22"},"nativeSrc":"19365:12:22","nodeType":"YulExpressionStatement","src":"19365:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"19337:5:22","nodeType":"YulIdentifier","src":"19337:5:22"},{"arguments":[{"name":"value","nativeSrc":"19348:5:22","nodeType":"YulIdentifier","src":"19348:5:22"},{"kind":"number","nativeSrc":"19355:4:22","nodeType":"YulLiteral","src":"19355:4:22","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"19344:3:22","nodeType":"YulIdentifier","src":"19344:3:22"},"nativeSrc":"19344:16:22","nodeType":"YulFunctionCall","src":"19344:16:22"}],"functionName":{"name":"eq","nativeSrc":"19334:2:22","nodeType":"YulIdentifier","src":"19334:2:22"},"nativeSrc":"19334:27:22","nodeType":"YulFunctionCall","src":"19334:27:22"}],"functionName":{"name":"iszero","nativeSrc":"19327:6:22","nodeType":"YulIdentifier","src":"19327:6:22"},"nativeSrc":"19327:35:22","nodeType":"YulFunctionCall","src":"19327:35:22"},"nativeSrc":"19324:55:22","nodeType":"YulIf","src":"19324:55:22"},{"nativeSrc":"19388:15:22","nodeType":"YulAssignment","src":"19388:15:22","value":{"name":"value","nativeSrc":"19398:5:22","nodeType":"YulIdentifier","src":"19398:5:22"},"variableNames":[{"name":"value0","nativeSrc":"19388:6:22","nodeType":"YulIdentifier","src":"19388:6:22"}]}]},"name":"abi_decode_tuple_t_uint8_fromMemory","nativeSrc":"19136:273:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"19181:9:22","nodeType":"YulTypedName","src":"19181:9:22","type":""},{"name":"dataEnd","nativeSrc":"19192:7:22","nodeType":"YulTypedName","src":"19192:7:22","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"19204:6:22","nodeType":"YulTypedName","src":"19204:6:22","type":""}],"src":"19136:273:22"},{"body":{"nativeSrc":"19478:352:22","nodeType":"YulBlock","src":"19478:352:22","statements":[{"nativeSrc":"19488:16:22","nodeType":"YulVariableDeclaration","src":"19488:16:22","value":{"kind":"number","nativeSrc":"19503:1:22","nodeType":"YulLiteral","src":"19503:1:22","type":"","value":"1"},"variables":[{"name":"power_1","nativeSrc":"19492:7:22","nodeType":"YulTypedName","src":"19492:7:22","type":""}]},{"nativeSrc":"19513:10:22","nodeType":"YulAssignment","src":"19513:10:22","value":{"kind":"number","nativeSrc":"19522:1:22","nodeType":"YulLiteral","src":"19522:1:22","type":"","value":"1"},"variableNames":[{"name":"power","nativeSrc":"19513:5:22","nodeType":"YulIdentifier","src":"19513:5:22"}]},{"nativeSrc":"19532:13:22","nodeType":"YulAssignment","src":"19532:13:22","value":{"name":"_base","nativeSrc":"19540:5:22","nodeType":"YulIdentifier","src":"19540:5:22"},"variableNames":[{"name":"base","nativeSrc":"19532:4:22","nodeType":"YulIdentifier","src":"19532:4:22"}]},{"body":{"nativeSrc":"19596:228:22","nodeType":"YulBlock","src":"19596:228:22","statements":[{"body":{"nativeSrc":"19641:22:22","nodeType":"YulBlock","src":"19641:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"19643:16:22","nodeType":"YulIdentifier","src":"19643:16:22"},"nativeSrc":"19643:18:22","nodeType":"YulFunctionCall","src":"19643:18:22"},"nativeSrc":"19643:18:22","nodeType":"YulExpressionStatement","src":"19643:18:22"}]},"condition":{"arguments":[{"name":"base","nativeSrc":"19616:4:22","nodeType":"YulIdentifier","src":"19616:4:22"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"19630:1:22","nodeType":"YulLiteral","src":"19630:1:22","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"19626:3:22","nodeType":"YulIdentifier","src":"19626:3:22"},"nativeSrc":"19626:6:22","nodeType":"YulFunctionCall","src":"19626:6:22"},{"name":"base","nativeSrc":"19634:4:22","nodeType":"YulIdentifier","src":"19634:4:22"}],"functionName":{"name":"div","nativeSrc":"19622:3:22","nodeType":"YulIdentifier","src":"19622:3:22"},"nativeSrc":"19622:17:22","nodeType":"YulFunctionCall","src":"19622:17:22"}],"functionName":{"name":"gt","nativeSrc":"19613:2:22","nodeType":"YulIdentifier","src":"19613:2:22"},"nativeSrc":"19613:27:22","nodeType":"YulFunctionCall","src":"19613:27:22"},"nativeSrc":"19610:53:22","nodeType":"YulIf","src":"19610:53:22"},{"body":{"nativeSrc":"19702:29:22","nodeType":"YulBlock","src":"19702:29:22","statements":[{"nativeSrc":"19704:25:22","nodeType":"YulAssignment","src":"19704:25:22","value":{"arguments":[{"name":"power","nativeSrc":"19717:5:22","nodeType":"YulIdentifier","src":"19717:5:22"},{"name":"base","nativeSrc":"19724:4:22","nodeType":"YulIdentifier","src":"19724:4:22"}],"functionName":{"name":"mul","nativeSrc":"19713:3:22","nodeType":"YulIdentifier","src":"19713:3:22"},"nativeSrc":"19713:16:22","nodeType":"YulFunctionCall","src":"19713:16:22"},"variableNames":[{"name":"power","nativeSrc":"19704:5:22","nodeType":"YulIdentifier","src":"19704:5:22"}]}]},"condition":{"arguments":[{"name":"exponent","nativeSrc":"19683:8:22","nodeType":"YulIdentifier","src":"19683:8:22"},{"name":"power_1","nativeSrc":"19693:7:22","nodeType":"YulIdentifier","src":"19693:7:22"}],"functionName":{"name":"and","nativeSrc":"19679:3:22","nodeType":"YulIdentifier","src":"19679:3:22"},"nativeSrc":"19679:22:22","nodeType":"YulFunctionCall","src":"19679:22:22"},"nativeSrc":"19676:55:22","nodeType":"YulIf","src":"19676:55:22"},{"nativeSrc":"19744:23:22","nodeType":"YulAssignment","src":"19744:23:22","value":{"arguments":[{"name":"base","nativeSrc":"19756:4:22","nodeType":"YulIdentifier","src":"19756:4:22"},{"name":"base","nativeSrc":"19762:4:22","nodeType":"YulIdentifier","src":"19762:4:22"}],"functionName":{"name":"mul","nativeSrc":"19752:3:22","nodeType":"YulIdentifier","src":"19752:3:22"},"nativeSrc":"19752:15:22","nodeType":"YulFunctionCall","src":"19752:15:22"},"variableNames":[{"name":"base","nativeSrc":"19744:4:22","nodeType":"YulIdentifier","src":"19744:4:22"}]},{"nativeSrc":"19780:34:22","nodeType":"YulAssignment","src":"19780:34:22","value":{"arguments":[{"name":"power_1","nativeSrc":"19796:7:22","nodeType":"YulIdentifier","src":"19796:7:22"},{"name":"exponent","nativeSrc":"19805:8:22","nodeType":"YulIdentifier","src":"19805:8:22"}],"functionName":{"name":"shr","nativeSrc":"19792:3:22","nodeType":"YulIdentifier","src":"19792:3:22"},"nativeSrc":"19792:22:22","nodeType":"YulFunctionCall","src":"19792:22:22"},"variableNames":[{"name":"exponent","nativeSrc":"19780:8:22","nodeType":"YulIdentifier","src":"19780:8:22"}]}]},"condition":{"arguments":[{"name":"exponent","nativeSrc":"19565:8:22","nodeType":"YulIdentifier","src":"19565:8:22"},{"name":"power_1","nativeSrc":"19575:7:22","nodeType":"YulIdentifier","src":"19575:7:22"}],"functionName":{"name":"gt","nativeSrc":"19562:2:22","nodeType":"YulIdentifier","src":"19562:2:22"},"nativeSrc":"19562:21:22","nodeType":"YulFunctionCall","src":"19562:21:22"},"nativeSrc":"19554:270:22","nodeType":"YulForLoop","post":{"nativeSrc":"19584:3:22","nodeType":"YulBlock","src":"19584:3:22","statements":[]},"pre":{"nativeSrc":"19558:3:22","nodeType":"YulBlock","src":"19558:3:22","statements":[]},"src":"19554:270:22"}]},"name":"checked_exp_helper","nativeSrc":"19414:416:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"_base","nativeSrc":"19442:5:22","nodeType":"YulTypedName","src":"19442:5:22","type":""},{"name":"exponent","nativeSrc":"19449:8:22","nodeType":"YulTypedName","src":"19449:8:22","type":""}],"returnVariables":[{"name":"power","nativeSrc":"19462:5:22","nodeType":"YulTypedName","src":"19462:5:22","type":""},{"name":"base","nativeSrc":"19469:4:22","nodeType":"YulTypedName","src":"19469:4:22","type":""}],"src":"19414:416:22"},{"body":{"nativeSrc":"19894:747:22","nodeType":"YulBlock","src":"19894:747:22","statements":[{"body":{"nativeSrc":"19932:52:22","nodeType":"YulBlock","src":"19932:52:22","statements":[{"nativeSrc":"19946:10:22","nodeType":"YulAssignment","src":"19946:10:22","value":{"kind":"number","nativeSrc":"19955:1:22","nodeType":"YulLiteral","src":"19955:1:22","type":"","value":"1"},"variableNames":[{"name":"power","nativeSrc":"19946:5:22","nodeType":"YulIdentifier","src":"19946:5:22"}]},{"nativeSrc":"19969:5:22","nodeType":"YulLeave","src":"19969:5:22"}]},"condition":{"arguments":[{"name":"exponent","nativeSrc":"19914:8:22","nodeType":"YulIdentifier","src":"19914:8:22"}],"functionName":{"name":"iszero","nativeSrc":"19907:6:22","nodeType":"YulIdentifier","src":"19907:6:22"},"nativeSrc":"19907:16:22","nodeType":"YulFunctionCall","src":"19907:16:22"},"nativeSrc":"19904:80:22","nodeType":"YulIf","src":"19904:80:22"},{"body":{"nativeSrc":"20017:52:22","nodeType":"YulBlock","src":"20017:52:22","statements":[{"nativeSrc":"20031:10:22","nodeType":"YulAssignment","src":"20031:10:22","value":{"kind":"number","nativeSrc":"20040:1:22","nodeType":"YulLiteral","src":"20040:1:22","type":"","value":"0"},"variableNames":[{"name":"power","nativeSrc":"20031:5:22","nodeType":"YulIdentifier","src":"20031:5:22"}]},{"nativeSrc":"20054:5:22","nodeType":"YulLeave","src":"20054:5:22"}]},"condition":{"arguments":[{"name":"base","nativeSrc":"20003:4:22","nodeType":"YulIdentifier","src":"20003:4:22"}],"functionName":{"name":"iszero","nativeSrc":"19996:6:22","nodeType":"YulIdentifier","src":"19996:6:22"},"nativeSrc":"19996:12:22","nodeType":"YulFunctionCall","src":"19996:12:22"},"nativeSrc":"19993:76:22","nodeType":"YulIf","src":"19993:76:22"},{"cases":[{"body":{"nativeSrc":"20105:52:22","nodeType":"YulBlock","src":"20105:52:22","statements":[{"nativeSrc":"20119:10:22","nodeType":"YulAssignment","src":"20119:10:22","value":{"kind":"number","nativeSrc":"20128:1:22","nodeType":"YulLiteral","src":"20128:1:22","type":"","value":"1"},"variableNames":[{"name":"power","nativeSrc":"20119:5:22","nodeType":"YulIdentifier","src":"20119:5:22"}]},{"nativeSrc":"20142:5:22","nodeType":"YulLeave","src":"20142:5:22"}]},"nativeSrc":"20098:59:22","nodeType":"YulCase","src":"20098:59:22","value":{"kind":"number","nativeSrc":"20103:1:22","nodeType":"YulLiteral","src":"20103:1:22","type":"","value":"1"}},{"body":{"nativeSrc":"20173:123:22","nodeType":"YulBlock","src":"20173:123:22","statements":[{"body":{"nativeSrc":"20208:22:22","nodeType":"YulBlock","src":"20208:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"20210:16:22","nodeType":"YulIdentifier","src":"20210:16:22"},"nativeSrc":"20210:18:22","nodeType":"YulFunctionCall","src":"20210:18:22"},"nativeSrc":"20210:18:22","nodeType":"YulExpressionStatement","src":"20210:18:22"}]},"condition":{"arguments":[{"name":"exponent","nativeSrc":"20193:8:22","nodeType":"YulIdentifier","src":"20193:8:22"},{"kind":"number","nativeSrc":"20203:3:22","nodeType":"YulLiteral","src":"20203:3:22","type":"","value":"255"}],"functionName":{"name":"gt","nativeSrc":"20190:2:22","nodeType":"YulIdentifier","src":"20190:2:22"},"nativeSrc":"20190:17:22","nodeType":"YulFunctionCall","src":"20190:17:22"},"nativeSrc":"20187:43:22","nodeType":"YulIf","src":"20187:43:22"},{"nativeSrc":"20243:25:22","nodeType":"YulAssignment","src":"20243:25:22","value":{"arguments":[{"name":"exponent","nativeSrc":"20256:8:22","nodeType":"YulIdentifier","src":"20256:8:22"},{"kind":"number","nativeSrc":"20266:1:22","nodeType":"YulLiteral","src":"20266:1:22","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"20252:3:22","nodeType":"YulIdentifier","src":"20252:3:22"},"nativeSrc":"20252:16:22","nodeType":"YulFunctionCall","src":"20252:16:22"},"variableNames":[{"name":"power","nativeSrc":"20243:5:22","nodeType":"YulIdentifier","src":"20243:5:22"}]},{"nativeSrc":"20281:5:22","nodeType":"YulLeave","src":"20281:5:22"}]},"nativeSrc":"20166:130:22","nodeType":"YulCase","src":"20166:130:22","value":{"kind":"number","nativeSrc":"20171:1:22","nodeType":"YulLiteral","src":"20171:1:22","type":"","value":"2"}}],"expression":{"name":"base","nativeSrc":"20085:4:22","nodeType":"YulIdentifier","src":"20085:4:22"},"nativeSrc":"20078:218:22","nodeType":"YulSwitch","src":"20078:218:22"},{"body":{"nativeSrc":"20394:70:22","nodeType":"YulBlock","src":"20394:70:22","statements":[{"nativeSrc":"20408:28:22","nodeType":"YulAssignment","src":"20408:28:22","value":{"arguments":[{"name":"base","nativeSrc":"20421:4:22","nodeType":"YulIdentifier","src":"20421:4:22"},{"name":"exponent","nativeSrc":"20427:8:22","nodeType":"YulIdentifier","src":"20427:8:22"}],"functionName":{"name":"exp","nativeSrc":"20417:3:22","nodeType":"YulIdentifier","src":"20417:3:22"},"nativeSrc":"20417:19:22","nodeType":"YulFunctionCall","src":"20417:19:22"},"variableNames":[{"name":"power","nativeSrc":"20408:5:22","nodeType":"YulIdentifier","src":"20408:5:22"}]},{"nativeSrc":"20449:5:22","nodeType":"YulLeave","src":"20449:5:22"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"base","nativeSrc":"20318:4:22","nodeType":"YulIdentifier","src":"20318:4:22"},{"kind":"number","nativeSrc":"20324:2:22","nodeType":"YulLiteral","src":"20324:2:22","type":"","value":"11"}],"functionName":{"name":"lt","nativeSrc":"20315:2:22","nodeType":"YulIdentifier","src":"20315:2:22"},"nativeSrc":"20315:12:22","nodeType":"YulFunctionCall","src":"20315:12:22"},{"arguments":[{"name":"exponent","nativeSrc":"20332:8:22","nodeType":"YulIdentifier","src":"20332:8:22"},{"kind":"number","nativeSrc":"20342:2:22","nodeType":"YulLiteral","src":"20342:2:22","type":"","value":"78"}],"functionName":{"name":"lt","nativeSrc":"20329:2:22","nodeType":"YulIdentifier","src":"20329:2:22"},"nativeSrc":"20329:16:22","nodeType":"YulFunctionCall","src":"20329:16:22"}],"functionName":{"name":"and","nativeSrc":"20311:3:22","nodeType":"YulIdentifier","src":"20311:3:22"},"nativeSrc":"20311:35:22","nodeType":"YulFunctionCall","src":"20311:35:22"},{"arguments":[{"arguments":[{"name":"base","nativeSrc":"20355:4:22","nodeType":"YulIdentifier","src":"20355:4:22"},{"kind":"number","nativeSrc":"20361:3:22","nodeType":"YulLiteral","src":"20361:3:22","type":"","value":"307"}],"functionName":{"name":"lt","nativeSrc":"20352:2:22","nodeType":"YulIdentifier","src":"20352:2:22"},"nativeSrc":"20352:13:22","nodeType":"YulFunctionCall","src":"20352:13:22"},{"arguments":[{"name":"exponent","nativeSrc":"20370:8:22","nodeType":"YulIdentifier","src":"20370:8:22"},{"kind":"number","nativeSrc":"20380:2:22","nodeType":"YulLiteral","src":"20380:2:22","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"20367:2:22","nodeType":"YulIdentifier","src":"20367:2:22"},"nativeSrc":"20367:16:22","nodeType":"YulFunctionCall","src":"20367:16:22"}],"functionName":{"name":"and","nativeSrc":"20348:3:22","nodeType":"YulIdentifier","src":"20348:3:22"},"nativeSrc":"20348:36:22","nodeType":"YulFunctionCall","src":"20348:36:22"}],"functionName":{"name":"or","nativeSrc":"20308:2:22","nodeType":"YulIdentifier","src":"20308:2:22"},"nativeSrc":"20308:77:22","nodeType":"YulFunctionCall","src":"20308:77:22"},"nativeSrc":"20305:159:22","nodeType":"YulIf","src":"20305:159:22"},{"nativeSrc":"20473:57:22","nodeType":"YulVariableDeclaration","src":"20473:57:22","value":{"arguments":[{"name":"base","nativeSrc":"20515:4:22","nodeType":"YulIdentifier","src":"20515:4:22"},{"name":"exponent","nativeSrc":"20521:8:22","nodeType":"YulIdentifier","src":"20521:8:22"}],"functionName":{"name":"checked_exp_helper","nativeSrc":"20496:18:22","nodeType":"YulIdentifier","src":"20496:18:22"},"nativeSrc":"20496:34:22","nodeType":"YulFunctionCall","src":"20496:34:22"},"variables":[{"name":"power_1","nativeSrc":"20477:7:22","nodeType":"YulTypedName","src":"20477:7:22","type":""},{"name":"base_1","nativeSrc":"20486:6:22","nodeType":"YulTypedName","src":"20486:6:22","type":""}]},{"body":{"nativeSrc":"20575:22:22","nodeType":"YulBlock","src":"20575:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"20577:16:22","nodeType":"YulIdentifier","src":"20577:16:22"},"nativeSrc":"20577:18:22","nodeType":"YulFunctionCall","src":"20577:18:22"},"nativeSrc":"20577:18:22","nodeType":"YulExpressionStatement","src":"20577:18:22"}]},"condition":{"arguments":[{"name":"power_1","nativeSrc":"20545:7:22","nodeType":"YulIdentifier","src":"20545:7:22"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"20562:1:22","nodeType":"YulLiteral","src":"20562:1:22","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"20558:3:22","nodeType":"YulIdentifier","src":"20558:3:22"},"nativeSrc":"20558:6:22","nodeType":"YulFunctionCall","src":"20558:6:22"},{"name":"base_1","nativeSrc":"20566:6:22","nodeType":"YulIdentifier","src":"20566:6:22"}],"functionName":{"name":"div","nativeSrc":"20554:3:22","nodeType":"YulIdentifier","src":"20554:3:22"},"nativeSrc":"20554:19:22","nodeType":"YulFunctionCall","src":"20554:19:22"}],"functionName":{"name":"gt","nativeSrc":"20542:2:22","nodeType":"YulIdentifier","src":"20542:2:22"},"nativeSrc":"20542:32:22","nodeType":"YulFunctionCall","src":"20542:32:22"},"nativeSrc":"20539:58:22","nodeType":"YulIf","src":"20539:58:22"},{"nativeSrc":"20606:29:22","nodeType":"YulAssignment","src":"20606:29:22","value":{"arguments":[{"name":"power_1","nativeSrc":"20619:7:22","nodeType":"YulIdentifier","src":"20619:7:22"},{"name":"base_1","nativeSrc":"20628:6:22","nodeType":"YulIdentifier","src":"20628:6:22"}],"functionName":{"name":"mul","nativeSrc":"20615:3:22","nodeType":"YulIdentifier","src":"20615:3:22"},"nativeSrc":"20615:20:22","nodeType":"YulFunctionCall","src":"20615:20:22"},"variableNames":[{"name":"power","nativeSrc":"20606:5:22","nodeType":"YulIdentifier","src":"20606:5:22"}]}]},"name":"checked_exp_unsigned","nativeSrc":"19835:806:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"base","nativeSrc":"19865:4:22","nodeType":"YulTypedName","src":"19865:4:22","type":""},{"name":"exponent","nativeSrc":"19871:8:22","nodeType":"YulTypedName","src":"19871:8:22","type":""}],"returnVariables":[{"name":"power","nativeSrc":"19884:5:22","nodeType":"YulTypedName","src":"19884:5:22","type":""}],"src":"19835:806:22"},{"body":{"nativeSrc":"20716:61:22","nodeType":"YulBlock","src":"20716:61:22","statements":[{"nativeSrc":"20726:45:22","nodeType":"YulAssignment","src":"20726:45:22","value":{"arguments":[{"name":"base","nativeSrc":"20756:4:22","nodeType":"YulIdentifier","src":"20756:4:22"},{"name":"exponent","nativeSrc":"20762:8:22","nodeType":"YulIdentifier","src":"20762:8:22"}],"functionName":{"name":"checked_exp_unsigned","nativeSrc":"20735:20:22","nodeType":"YulIdentifier","src":"20735:20:22"},"nativeSrc":"20735:36:22","nodeType":"YulFunctionCall","src":"20735:36:22"},"variableNames":[{"name":"power","nativeSrc":"20726:5:22","nodeType":"YulIdentifier","src":"20726:5:22"}]}]},"name":"checked_exp_t_uint256_t_uint256","nativeSrc":"20646:131:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"base","nativeSrc":"20687:4:22","nodeType":"YulTypedName","src":"20687:4:22","type":""},{"name":"exponent","nativeSrc":"20693:8:22","nodeType":"YulTypedName","src":"20693:8:22","type":""}],"returnVariables":[{"name":"power","nativeSrc":"20706:5:22","nodeType":"YulTypedName","src":"20706:5:22","type":""}],"src":"20646:131:22"},{"body":{"nativeSrc":"20956:177:22","nodeType":"YulBlock","src":"20956:177:22","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"20973:9:22","nodeType":"YulIdentifier","src":"20973:9:22"},{"kind":"number","nativeSrc":"20984:2:22","nodeType":"YulLiteral","src":"20984:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"20966:6:22","nodeType":"YulIdentifier","src":"20966:6:22"},"nativeSrc":"20966:21:22","nodeType":"YulFunctionCall","src":"20966:21:22"},"nativeSrc":"20966:21:22","nodeType":"YulExpressionStatement","src":"20966:21:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"21007:9:22","nodeType":"YulIdentifier","src":"21007:9:22"},{"kind":"number","nativeSrc":"21018:2:22","nodeType":"YulLiteral","src":"21018:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"21003:3:22","nodeType":"YulIdentifier","src":"21003:3:22"},"nativeSrc":"21003:18:22","nodeType":"YulFunctionCall","src":"21003:18:22"},{"kind":"number","nativeSrc":"21023:2:22","nodeType":"YulLiteral","src":"21023:2:22","type":"","value":"27"}],"functionName":{"name":"mstore","nativeSrc":"20996:6:22","nodeType":"YulIdentifier","src":"20996:6:22"},"nativeSrc":"20996:30:22","nodeType":"YulFunctionCall","src":"20996:30:22"},"nativeSrc":"20996:30:22","nodeType":"YulExpressionStatement","src":"20996:30:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"21046:9:22","nodeType":"YulIdentifier","src":"21046:9:22"},{"kind":"number","nativeSrc":"21057:2:22","nodeType":"YulLiteral","src":"21057:2:22","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"21042:3:22","nodeType":"YulIdentifier","src":"21042:3:22"},"nativeSrc":"21042:18:22","nodeType":"YulFunctionCall","src":"21042:18:22"},{"hexValue":"496e76616c696420746f6b656e20616d6f756e7420746f20616464","kind":"string","nativeSrc":"21062:29:22","nodeType":"YulLiteral","src":"21062:29:22","type":"","value":"Invalid token amount to add"}],"functionName":{"name":"mstore","nativeSrc":"21035:6:22","nodeType":"YulIdentifier","src":"21035:6:22"},"nativeSrc":"21035:57:22","nodeType":"YulFunctionCall","src":"21035:57:22"},"nativeSrc":"21035:57:22","nodeType":"YulExpressionStatement","src":"21035:57:22"},{"nativeSrc":"21101:26:22","nodeType":"YulAssignment","src":"21101:26:22","value":{"arguments":[{"name":"headStart","nativeSrc":"21113:9:22","nodeType":"YulIdentifier","src":"21113:9:22"},{"kind":"number","nativeSrc":"21124:2:22","nodeType":"YulLiteral","src":"21124:2:22","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"21109:3:22","nodeType":"YulIdentifier","src":"21109:3:22"},"nativeSrc":"21109:18:22","nodeType":"YulFunctionCall","src":"21109:18:22"},"variableNames":[{"name":"tail","nativeSrc":"21101:4:22","nodeType":"YulIdentifier","src":"21101:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_231381c7ce9cab5a06140be844586c7572b2dd117d8de83c9f9bda39108cd19d__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"20782:351:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"20933:9:22","nodeType":"YulTypedName","src":"20933:9:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"20947:4:22","nodeType":"YulTypedName","src":"20947:4:22","type":""}],"src":"20782:351:22"},{"body":{"nativeSrc":"21312:180:22","nodeType":"YulBlock","src":"21312:180:22","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"21329:9:22","nodeType":"YulIdentifier","src":"21329:9:22"},{"kind":"number","nativeSrc":"21340:2:22","nodeType":"YulLiteral","src":"21340:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"21322:6:22","nodeType":"YulIdentifier","src":"21322:6:22"},"nativeSrc":"21322:21:22","nodeType":"YulFunctionCall","src":"21322:21:22"},"nativeSrc":"21322:21:22","nodeType":"YulExpressionStatement","src":"21322:21:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"21363:9:22","nodeType":"YulIdentifier","src":"21363:9:22"},{"kind":"number","nativeSrc":"21374:2:22","nodeType":"YulLiteral","src":"21374:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"21359:3:22","nodeType":"YulIdentifier","src":"21359:3:22"},"nativeSrc":"21359:18:22","nodeType":"YulFunctionCall","src":"21359:18:22"},{"kind":"number","nativeSrc":"21379:2:22","nodeType":"YulLiteral","src":"21379:2:22","type":"","value":"30"}],"functionName":{"name":"mstore","nativeSrc":"21352:6:22","nodeType":"YulIdentifier","src":"21352:6:22"},"nativeSrc":"21352:30:22","nodeType":"YulFunctionCall","src":"21352:30:22"},"nativeSrc":"21352:30:22","nodeType":"YulExpressionStatement","src":"21352:30:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"21402:9:22","nodeType":"YulIdentifier","src":"21402:9:22"},{"kind":"number","nativeSrc":"21413:2:22","nodeType":"YulLiteral","src":"21413:2:22","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"21398:3:22","nodeType":"YulIdentifier","src":"21398:3:22"},"nativeSrc":"21398:18:22","nodeType":"YulFunctionCall","src":"21398:18:22"},{"hexValue":"4f766572666c6f7720696e6372656d656e74696e6720736c697070616765","kind":"string","nativeSrc":"21418:32:22","nodeType":"YulLiteral","src":"21418:32:22","type":"","value":"Overflow incrementing slippage"}],"functionName":{"name":"mstore","nativeSrc":"21391:6:22","nodeType":"YulIdentifier","src":"21391:6:22"},"nativeSrc":"21391:60:22","nodeType":"YulFunctionCall","src":"21391:60:22"},"nativeSrc":"21391:60:22","nodeType":"YulExpressionStatement","src":"21391:60:22"},{"nativeSrc":"21460:26:22","nodeType":"YulAssignment","src":"21460:26:22","value":{"arguments":[{"name":"headStart","nativeSrc":"21472:9:22","nodeType":"YulIdentifier","src":"21472:9:22"},{"kind":"number","nativeSrc":"21483:2:22","nodeType":"YulLiteral","src":"21483:2:22","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"21468:3:22","nodeType":"YulIdentifier","src":"21468:3:22"},"nativeSrc":"21468:18:22","nodeType":"YulFunctionCall","src":"21468:18:22"},"variableNames":[{"name":"tail","nativeSrc":"21460:4:22","nodeType":"YulIdentifier","src":"21460:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_9500bef01f061c69a5831abd395429bc0d4bf975a9340af0622098e5d0422cc6__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"21138:354:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"21289:9:22","nodeType":"YulTypedName","src":"21289:9:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"21303:4:22","nodeType":"YulTypedName","src":"21303:4:22","type":""}],"src":"21138:354:22"},{"body":{"nativeSrc":"21671:181:22","nodeType":"YulBlock","src":"21671:181:22","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"21688:9:22","nodeType":"YulIdentifier","src":"21688:9:22"},{"kind":"number","nativeSrc":"21699:2:22","nodeType":"YulLiteral","src":"21699:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"21681:6:22","nodeType":"YulIdentifier","src":"21681:6:22"},"nativeSrc":"21681:21:22","nodeType":"YulFunctionCall","src":"21681:21:22"},"nativeSrc":"21681:21:22","nodeType":"YulExpressionStatement","src":"21681:21:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"21722:9:22","nodeType":"YulIdentifier","src":"21722:9:22"},{"kind":"number","nativeSrc":"21733:2:22","nodeType":"YulLiteral","src":"21733:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"21718:3:22","nodeType":"YulIdentifier","src":"21718:3:22"},"nativeSrc":"21718:18:22","nodeType":"YulFunctionCall","src":"21718:18:22"},{"kind":"number","nativeSrc":"21738:2:22","nodeType":"YulLiteral","src":"21738:2:22","type":"","value":"31"}],"functionName":{"name":"mstore","nativeSrc":"21711:6:22","nodeType":"YulIdentifier","src":"21711:6:22"},"nativeSrc":"21711:30:22","nodeType":"YulFunctionCall","src":"21711:30:22"},"nativeSrc":"21711:30:22","nodeType":"YulExpressionStatement","src":"21711:30:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"21761:9:22","nodeType":"YulIdentifier","src":"21761:9:22"},{"kind":"number","nativeSrc":"21772:2:22","nodeType":"YulLiteral","src":"21772:2:22","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"21757:3:22","nodeType":"YulIdentifier","src":"21757:3:22"},"nativeSrc":"21757:18:22","nodeType":"YulFunctionCall","src":"21757:18:22"},{"hexValue":"556e646572666c6f772064656372656d656e74696e6720736c697070616765","kind":"string","nativeSrc":"21777:33:22","nodeType":"YulLiteral","src":"21777:33:22","type":"","value":"Underflow decrementing slippage"}],"functionName":{"name":"mstore","nativeSrc":"21750:6:22","nodeType":"YulIdentifier","src":"21750:6:22"},"nativeSrc":"21750:61:22","nodeType":"YulFunctionCall","src":"21750:61:22"},"nativeSrc":"21750:61:22","nodeType":"YulExpressionStatement","src":"21750:61:22"},{"nativeSrc":"21820:26:22","nodeType":"YulAssignment","src":"21820:26:22","value":{"arguments":[{"name":"headStart","nativeSrc":"21832:9:22","nodeType":"YulIdentifier","src":"21832:9:22"},{"kind":"number","nativeSrc":"21843:2:22","nodeType":"YulLiteral","src":"21843:2:22","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"21828:3:22","nodeType":"YulIdentifier","src":"21828:3:22"},"nativeSrc":"21828:18:22","nodeType":"YulFunctionCall","src":"21828:18:22"},"variableNames":[{"name":"tail","nativeSrc":"21820:4:22","nodeType":"YulIdentifier","src":"21820:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_7fe042c7e90969a67f580740cd6d07f084ba832097aca9eaaa282ad95462461f__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"21497:355:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"21648:9:22","nodeType":"YulTypedName","src":"21648:9:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"21662:4:22","nodeType":"YulTypedName","src":"21662:4:22","type":""}],"src":"21497:355:22"},{"body":{"nativeSrc":"22276:604:22","nodeType":"YulBlock","src":"22276:604:22","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"22293:9:22","nodeType":"YulIdentifier","src":"22293:9:22"},{"kind":"number","nativeSrc":"22304:3:22","nodeType":"YulLiteral","src":"22304:3:22","type":"","value":"224"}],"functionName":{"name":"mstore","nativeSrc":"22286:6:22","nodeType":"YulIdentifier","src":"22286:6:22"},"nativeSrc":"22286:22:22","nodeType":"YulFunctionCall","src":"22286:22:22"},"nativeSrc":"22286:22:22","nodeType":"YulExpressionStatement","src":"22286:22:22"},{"nativeSrc":"22317:71:22","nodeType":"YulVariableDeclaration","src":"22317:71:22","value":{"arguments":[{"name":"value0","nativeSrc":"22360:6:22","nodeType":"YulIdentifier","src":"22360:6:22"},{"arguments":[{"name":"headStart","nativeSrc":"22372:9:22","nodeType":"YulIdentifier","src":"22372:9:22"},{"kind":"number","nativeSrc":"22383:3:22","nodeType":"YulLiteral","src":"22383:3:22","type":"","value":"224"}],"functionName":{"name":"add","nativeSrc":"22368:3:22","nodeType":"YulIdentifier","src":"22368:3:22"},"nativeSrc":"22368:19:22","nodeType":"YulFunctionCall","src":"22368:19:22"}],"functionName":{"name":"abi_encode_array_uint256_dyn","nativeSrc":"22331:28:22","nodeType":"YulIdentifier","src":"22331:28:22"},"nativeSrc":"22331:57:22","nodeType":"YulFunctionCall","src":"22331:57:22"},"variables":[{"name":"tail_1","nativeSrc":"22321:6:22","nodeType":"YulTypedName","src":"22321:6:22","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"22408:9:22","nodeType":"YulIdentifier","src":"22408:9:22"},{"kind":"number","nativeSrc":"22419:2:22","nodeType":"YulLiteral","src":"22419:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"22404:3:22","nodeType":"YulIdentifier","src":"22404:3:22"},"nativeSrc":"22404:18:22","nodeType":"YulFunctionCall","src":"22404:18:22"},{"arguments":[{"name":"tail_1","nativeSrc":"22428:6:22","nodeType":"YulIdentifier","src":"22428:6:22"},{"name":"headStart","nativeSrc":"22436:9:22","nodeType":"YulIdentifier","src":"22436:9:22"}],"functionName":{"name":"sub","nativeSrc":"22424:3:22","nodeType":"YulIdentifier","src":"22424:3:22"},"nativeSrc":"22424:22:22","nodeType":"YulFunctionCall","src":"22424:22:22"}],"functionName":{"name":"mstore","nativeSrc":"22397:6:22","nodeType":"YulIdentifier","src":"22397:6:22"},"nativeSrc":"22397:50:22","nodeType":"YulFunctionCall","src":"22397:50:22"},"nativeSrc":"22397:50:22","nodeType":"YulExpressionStatement","src":"22397:50:22"},{"nativeSrc":"22456:58:22","nodeType":"YulVariableDeclaration","src":"22456:58:22","value":{"arguments":[{"name":"value1","nativeSrc":"22499:6:22","nodeType":"YulIdentifier","src":"22499:6:22"},{"name":"tail_1","nativeSrc":"22507:6:22","nodeType":"YulIdentifier","src":"22507:6:22"}],"functionName":{"name":"abi_encode_array_address_dyn","nativeSrc":"22470:28:22","nodeType":"YulIdentifier","src":"22470:28:22"},"nativeSrc":"22470:44:22","nodeType":"YulFunctionCall","src":"22470:44:22"},"variables":[{"name":"tail_2","nativeSrc":"22460:6:22","nodeType":"YulTypedName","src":"22460:6:22","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"22534:9:22","nodeType":"YulIdentifier","src":"22534:9:22"},{"kind":"number","nativeSrc":"22545:2:22","nodeType":"YulLiteral","src":"22545:2:22","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"22530:3:22","nodeType":"YulIdentifier","src":"22530:3:22"},"nativeSrc":"22530:18:22","nodeType":"YulFunctionCall","src":"22530:18:22"},{"arguments":[{"name":"tail_2","nativeSrc":"22554:6:22","nodeType":"YulIdentifier","src":"22554:6:22"},{"name":"headStart","nativeSrc":"22562:9:22","nodeType":"YulIdentifier","src":"22562:9:22"}],"functionName":{"name":"sub","nativeSrc":"22550:3:22","nodeType":"YulIdentifier","src":"22550:3:22"},"nativeSrc":"22550:22:22","nodeType":"YulFunctionCall","src":"22550:22:22"}],"functionName":{"name":"mstore","nativeSrc":"22523:6:22","nodeType":"YulIdentifier","src":"22523:6:22"},"nativeSrc":"22523:50:22","nodeType":"YulFunctionCall","src":"22523:50:22"},"nativeSrc":"22523:50:22","nodeType":"YulExpressionStatement","src":"22523:50:22"},{"nativeSrc":"22582:52:22","nodeType":"YulAssignment","src":"22582:52:22","value":{"arguments":[{"name":"value2","nativeSrc":"22619:6:22","nodeType":"YulIdentifier","src":"22619:6:22"},{"name":"tail_2","nativeSrc":"22627:6:22","nodeType":"YulIdentifier","src":"22627:6:22"}],"functionName":{"name":"abi_encode_array_uint256_dyn","nativeSrc":"22590:28:22","nodeType":"YulIdentifier","src":"22590:28:22"},"nativeSrc":"22590:44:22","nodeType":"YulFunctionCall","src":"22590:44:22"},"variableNames":[{"name":"tail","nativeSrc":"22582:4:22","nodeType":"YulIdentifier","src":"22582:4:22"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"22654:9:22","nodeType":"YulIdentifier","src":"22654:9:22"},{"kind":"number","nativeSrc":"22665:2:22","nodeType":"YulLiteral","src":"22665:2:22","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"22650:3:22","nodeType":"YulIdentifier","src":"22650:3:22"},"nativeSrc":"22650:18:22","nodeType":"YulFunctionCall","src":"22650:18:22"},{"name":"value3","nativeSrc":"22670:6:22","nodeType":"YulIdentifier","src":"22670:6:22"}],"functionName":{"name":"mstore","nativeSrc":"22643:6:22","nodeType":"YulIdentifier","src":"22643:6:22"},"nativeSrc":"22643:34:22","nodeType":"YulFunctionCall","src":"22643:34:22"},"nativeSrc":"22643:34:22","nodeType":"YulExpressionStatement","src":"22643:34:22"},{"nativeSrc":"22686:29:22","nodeType":"YulVariableDeclaration","src":"22686:29:22","value":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"22704:3:22","nodeType":"YulLiteral","src":"22704:3:22","type":"","value":"160"},{"kind":"number","nativeSrc":"22709:1:22","nodeType":"YulLiteral","src":"22709:1:22","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"22700:3:22","nodeType":"YulIdentifier","src":"22700:3:22"},"nativeSrc":"22700:11:22","nodeType":"YulFunctionCall","src":"22700:11:22"},{"kind":"number","nativeSrc":"22713:1:22","nodeType":"YulLiteral","src":"22713:1:22","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"22696:3:22","nodeType":"YulIdentifier","src":"22696:3:22"},"nativeSrc":"22696:19:22","nodeType":"YulFunctionCall","src":"22696:19:22"},"variables":[{"name":"_1","nativeSrc":"22690:2:22","nodeType":"YulTypedName","src":"22690:2:22","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"22735:9:22","nodeType":"YulIdentifier","src":"22735:9:22"},{"kind":"number","nativeSrc":"22746:3:22","nodeType":"YulLiteral","src":"22746:3:22","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"22731:3:22","nodeType":"YulIdentifier","src":"22731:3:22"},"nativeSrc":"22731:19:22","nodeType":"YulFunctionCall","src":"22731:19:22"},{"arguments":[{"name":"value4","nativeSrc":"22756:6:22","nodeType":"YulIdentifier","src":"22756:6:22"},{"name":"_1","nativeSrc":"22764:2:22","nodeType":"YulIdentifier","src":"22764:2:22"}],"functionName":{"name":"and","nativeSrc":"22752:3:22","nodeType":"YulIdentifier","src":"22752:3:22"},"nativeSrc":"22752:15:22","nodeType":"YulFunctionCall","src":"22752:15:22"}],"functionName":{"name":"mstore","nativeSrc":"22724:6:22","nodeType":"YulIdentifier","src":"22724:6:22"},"nativeSrc":"22724:44:22","nodeType":"YulFunctionCall","src":"22724:44:22"},"nativeSrc":"22724:44:22","nodeType":"YulExpressionStatement","src":"22724:44:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"22788:9:22","nodeType":"YulIdentifier","src":"22788:9:22"},{"kind":"number","nativeSrc":"22799:3:22","nodeType":"YulLiteral","src":"22799:3:22","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"22784:3:22","nodeType":"YulIdentifier","src":"22784:3:22"},"nativeSrc":"22784:19:22","nodeType":"YulFunctionCall","src":"22784:19:22"},{"arguments":[{"name":"value5","nativeSrc":"22809:6:22","nodeType":"YulIdentifier","src":"22809:6:22"},{"name":"_1","nativeSrc":"22817:2:22","nodeType":"YulIdentifier","src":"22817:2:22"}],"functionName":{"name":"and","nativeSrc":"22805:3:22","nodeType":"YulIdentifier","src":"22805:3:22"},"nativeSrc":"22805:15:22","nodeType":"YulFunctionCall","src":"22805:15:22"}],"functionName":{"name":"mstore","nativeSrc":"22777:6:22","nodeType":"YulIdentifier","src":"22777:6:22"},"nativeSrc":"22777:44:22","nodeType":"YulFunctionCall","src":"22777:44:22"},"nativeSrc":"22777:44:22","nodeType":"YulExpressionStatement","src":"22777:44:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"22841:9:22","nodeType":"YulIdentifier","src":"22841:9:22"},{"kind":"number","nativeSrc":"22852:3:22","nodeType":"YulLiteral","src":"22852:3:22","type":"","value":"192"}],"functionName":{"name":"add","nativeSrc":"22837:3:22","nodeType":"YulIdentifier","src":"22837:3:22"},"nativeSrc":"22837:19:22","nodeType":"YulFunctionCall","src":"22837:19:22"},{"arguments":[{"name":"value6","nativeSrc":"22862:6:22","nodeType":"YulIdentifier","src":"22862:6:22"},{"name":"_1","nativeSrc":"22870:2:22","nodeType":"YulIdentifier","src":"22870:2:22"}],"functionName":{"name":"and","nativeSrc":"22858:3:22","nodeType":"YulIdentifier","src":"22858:3:22"},"nativeSrc":"22858:15:22","nodeType":"YulFunctionCall","src":"22858:15:22"}],"functionName":{"name":"mstore","nativeSrc":"22830:6:22","nodeType":"YulIdentifier","src":"22830:6:22"},"nativeSrc":"22830:44:22","nodeType":"YulFunctionCall","src":"22830:44:22"},"nativeSrc":"22830:44:22","nodeType":"YulExpressionStatement","src":"22830:44:22"}]},"name":"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_uint256_t_address_t_address_t_address__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_uint256_t_address_t_address_t_address__fromStack_reversed","nativeSrc":"21857:1023:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"22197:9:22","nodeType":"YulTypedName","src":"22197:9:22","type":""},{"name":"value6","nativeSrc":"22208:6:22","nodeType":"YulTypedName","src":"22208:6:22","type":""},{"name":"value5","nativeSrc":"22216:6:22","nodeType":"YulTypedName","src":"22216:6:22","type":""},{"name":"value4","nativeSrc":"22224:6:22","nodeType":"YulTypedName","src":"22224:6:22","type":""},{"name":"value3","nativeSrc":"22232:6:22","nodeType":"YulTypedName","src":"22232:6:22","type":""},{"name":"value2","nativeSrc":"22240:6:22","nodeType":"YulTypedName","src":"22240:6:22","type":""},{"name":"value1","nativeSrc":"22248:6:22","nodeType":"YulTypedName","src":"22248:6:22","type":""},{"name":"value0","nativeSrc":"22256:6:22","nodeType":"YulTypedName","src":"22256:6:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"22267:4:22","nodeType":"YulTypedName","src":"22267:4:22","type":""}],"src":"21857:1023:22"},{"body":{"nativeSrc":"22923:74:22","nodeType":"YulBlock","src":"22923:74:22","statements":[{"body":{"nativeSrc":"22946:22:22","nodeType":"YulBlock","src":"22946:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nativeSrc":"22948:16:22","nodeType":"YulIdentifier","src":"22948:16:22"},"nativeSrc":"22948:18:22","nodeType":"YulFunctionCall","src":"22948:18:22"},"nativeSrc":"22948:18:22","nodeType":"YulExpressionStatement","src":"22948:18:22"}]},"condition":{"arguments":[{"name":"y","nativeSrc":"22943:1:22","nodeType":"YulIdentifier","src":"22943:1:22"}],"functionName":{"name":"iszero","nativeSrc":"22936:6:22","nodeType":"YulIdentifier","src":"22936:6:22"},"nativeSrc":"22936:9:22","nodeType":"YulFunctionCall","src":"22936:9:22"},"nativeSrc":"22933:35:22","nodeType":"YulIf","src":"22933:35:22"},{"nativeSrc":"22977:14:22","nodeType":"YulAssignment","src":"22977:14:22","value":{"arguments":[{"name":"x","nativeSrc":"22986:1:22","nodeType":"YulIdentifier","src":"22986:1:22"},{"name":"y","nativeSrc":"22989:1:22","nodeType":"YulIdentifier","src":"22989:1:22"}],"functionName":{"name":"mod","nativeSrc":"22982:3:22","nodeType":"YulIdentifier","src":"22982:3:22"},"nativeSrc":"22982:9:22","nodeType":"YulFunctionCall","src":"22982:9:22"},"variableNames":[{"name":"r","nativeSrc":"22977:1:22","nodeType":"YulIdentifier","src":"22977:1:22"}]}]},"name":"mod_t_uint256","nativeSrc":"22885:112:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"22908:1:22","nodeType":"YulTypedName","src":"22908:1:22","type":""},{"name":"y","nativeSrc":"22911:1:22","nodeType":"YulTypedName","src":"22911:1:22","type":""}],"returnVariables":[{"name":"r","nativeSrc":"22917:1:22","nodeType":"YulTypedName","src":"22917:1:22","type":""}],"src":"22885:112:22"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        mcopy(add(headStart, 64), add(value0, 32), length)\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_array_uint256_dyn(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let _1 := 0x20\n        pos := add(pos, 0x20)\n        let srcPtr := add(value, 0x20)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        end := pos\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_array_uint256_dyn(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_encode_tuple_t_uint256_t_array$_t_uint256_$dyn_memory_ptr__to_t_uint256_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), 64)\n        tail := abi_encode_array_uint256_dyn(value1, add(headStart, 64))\n    }\n    function abi_encode_array_address_dyn(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let _1 := 0x20\n        pos := add(pos, 0x20)\n        let srcPtr := add(value, 0x20)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), sub(shl(160, 1), 1)))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        end := pos\n    }\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_array_address_dyn(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_address(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        value2 := calldataload(add(headStart, 64))\n        let value_2 := calldataload(add(headStart, 96))\n        validator_revert_address(value_2)\n        value3 := value_2\n    }\n    function abi_encode_tuple_t_contract$_IBaluniV1Registry_$5472__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_array$_t_bool_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_bool_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        let tail_1 := add(headStart, 64)\n        mstore(headStart, 64)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 96)\n        let _1 := 0x20\n        let srcPtr := add(value0, 0x20)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, iszero(iszero(mload(srcPtr))))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        mstore(add(headStart, 0x20), sub(pos, headStart))\n        tail := abi_encode_array_uint256_dyn(value1, pos)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function allocate_memory(size) -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function array_allocation_size_array_uint256_dyn(length) -> size\n    {\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        size := add(shl(5, length), 0x20)\n    }\n    function abi_decode_tuple_t_addresst_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let _1 := 32\n        let offset := calldataload(add(headStart, _1))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        let dst := allocate_memory(array_allocation_size_array_uint256_dyn(_3))\n        let dst_1 := dst\n        mstore(dst, _3)\n        dst := add(dst, _1)\n        let srcEnd := add(add(_2, shl(5, _3)), _1)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_2, _1)\n        for { } lt(src, srcEnd) { src := add(src, _1) }\n        {\n            mstore(dst, calldataload(src))\n            dst := add(dst, _1)\n        }\n        value1 := dst_1\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 64)\n        let tail_1 := abi_encode_array_uint256_dyn(value0, add(headStart, 64))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        tail := abi_encode_array_uint256_dyn(value1, tail_1)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_e84ca658204d8225a6124393bf429fae79ddb71fa88578d833d3a2b9b5da52d2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"Only Periphery\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_e4fcae9c0286e861087281117e0a3185ced905823104b290e1fe3ba826d8d280__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Rebalance not needed\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        let _1 := 32\n        if slt(sub(dataEnd, headStart), _1) { revert(0, 0) }\n        let offset := mload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := mload(_2)\n        let dst := allocate_memory(array_allocation_size_array_uint256_dyn(_3))\n        let dst_1 := dst\n        mstore(dst, _3)\n        dst := add(dst, _1)\n        let srcEnd := add(add(_2, shl(5, _3)), _1)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_2, _1)\n        for { } lt(src, srcEnd) { src := add(src, _1) }\n        {\n            mstore(dst, mload(src))\n            dst := add(dst, _1)\n        }\n        value0 := dst_1\n    }\n    function abi_encode_tuple_t_stringliteral_b5c25d5c4ca6addfa23ca815554bb7bee3a9885ce01501a275168a62aa7cded3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Invalid oracle address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_6f3b6914a8f4e42f0dc4d6fcf60d1470463793693c123b4b0782b9cd43668c23__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"Cannot swap the same token\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Amount must be greater than zero\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_85d32796faf4bbe37cfdb7e983d4048fee52ebcfc8d2f22a939ce47e85d98ae8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Insufficient Liquidity\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        r := div(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_293eab1376cea4527a492c75c5b4d240032b8920c86961428e65758e4fd3daec__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"Amount to send must be greater t\")\n        mstore(add(headStart, 96), \"han 0\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_37b2136db8906a0fa9dcfb36fa22f3e5724d70ae1dfd30e29853723b16bc684b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"Share must be greater than 0\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_379a432f00aa43993bfbf4e01492a8eab5138dcd2e395864ede728644390fc31__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 12)\n        mstore(add(headStart, 64), \"No liquidity\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_stringliteral_fc2f8692ca59eb8838d740ab96a08e7dab54c967cc56eb0a9b640ce78eb1103e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Insufficient BALUNI liquidity\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_5ce83e457e48ac9624285a3c527b5c2f9ccbef788eaf8b73a2271dc0a760bc56__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Fee transfer failed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_f8b105b0b4a7ff5c11f41135d6d4600fd47da6168663f6cb1810745b08d83918__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Invalid asset index\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_788ce755d61da147edad70af92467c8a383af859573990e9defde5b6e0bdf24d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Invalid reserves length\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_195739df032cb3c07c5ed70a4cae73c5d077df4296263c6db3d1f3b4671efbd0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 9)\n        mstore(add(headStart, 64), \"No assets\")\n        tail := add(headStart, 96)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_e8ec4a06d76118e3b24afbc30b183e086aa6aaa6e137c81160fc8d59e1a33e3f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"Total value must be greater than\")\n        mstore(add(headStart, 96), \" 0\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_a245c00c976af272c663e732300fe860097516364a0d92887494f54e860fa54c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Total liquidity must be greater \")\n        mstore(add(headStart, 96), \"than 0\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_50327403b25acc6e0d15796c676b8320f8d9ffcece005326d31f4226e4f741bb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 13)\n        mstore(add(headStart, 64), \"Mint qty is 0\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_uint8_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n        value0 := value\n    }\n    function checked_exp_helper(_base, exponent) -> power, base\n    {\n        let power_1 := 1\n        power := 1\n        base := _base\n        for { } gt(exponent, power_1) { }\n        {\n            if gt(base, div(not(0), base)) { panic_error_0x11() }\n            if and(exponent, power_1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(power_1, exponent)\n        }\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent)\n        if gt(power_1, div(not(0), base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_exp_t_uint256_t_uint256(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, exponent)\n    }\n    function abi_encode_tuple_t_stringliteral_231381c7ce9cab5a06140be844586c7572b2dd117d8de83c9f9bda39108cd19d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"Invalid token amount to add\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9500bef01f061c69a5831abd395429bc0d4bf975a9340af0622098e5d0422cc6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"Overflow incrementing slippage\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_7fe042c7e90969a67f580740cd6d07f084ba832097aca9eaaa282ad95462461f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"Underflow decrementing slippage\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_uint256_t_address_t_address_t_address__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_uint256_t_address_t_address_t_address__fromStack_reversed(headStart, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, 224)\n        let tail_1 := abi_encode_array_uint256_dyn(value0, add(headStart, 224))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        let tail_2 := abi_encode_array_address_dyn(value1, tail_1)\n        mstore(add(headStart, 64), sub(tail_2, headStart))\n        tail := abi_encode_array_uint256_dyn(value2, tail_2)\n        mstore(add(headStart, 96), value3)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(add(headStart, 128), and(value4, _1))\n        mstore(add(headStart, 160), and(value5, _1))\n        mstore(add(headStart, 192), and(value6, _1))\n    }\n    function mod_t_uint256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n}","id":22,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561000f575f80fd5b50600436106101fd575f3560e01c80637b10399911610114578063b2b55d70116100a9578063d14ef46d11610079578063d14ef46d1461042e578063dd62ed3e14610466578063de836ebd1461049e578063e73faa2d146104b1578063f47b45e8146104b9575f80fd5b8063b2b55d70146103ec578063c2ee3a08146103ff578063cdf456e114610408578063cf8fa7641461041b575f80fd5b80638a77c8dc116100e45780638a77c8dc146103b657806395d89b41146103be578063a1f241cc146103c6578063a9059cbb146103d9575f80fd5b80637b103999146103595780637fec8d381461038457806389ab35321461038d57806389afcb44146103a3575f80fd5b806322acb8671161019557806336bf6e391161016557806336bf6e39146102e05780634aa06652146102f657806367e4ac2c146103095780636e81221c1461031e57806370a0823114610331575f80fd5b806322acb867146102a357806323b872dd146102ab578063250aa683146102be578063313ce567146102d1575f80fd5b806312899068116101d0578063128990681461026a57806318160ddd1461028b57806318904ea4146102935780631a6865021461029b575f80fd5b806306fdde03146102015780630723c9991461021f5780630902f1ac1461023f578063095ea7b314610247575b5f80fd5b6102096104cf565b6040516102169190613238565b60405180910390f35b61023261022d366004613284565b61055f565b60405161021691906132d9565b6102326107ab565b61025a6102553660046132eb565b610893565b6040519015158152602001610216565b61027d610278366004613284565b6108ac565b604051908152602001610216565b60025461027d565b61023261092f565b61027d6109ce565b6102326109df565b61025a6102b9366004613315565b610a7e565b61027d6102cc366004613284565b610aa1565b60405160128152602001610216565b6102e8610b1c565b604051610216929190613353565b61027d610304366004613315565b610b30565b610311610cf9565b60405161021691906133a3565b61027d61032c3660046133b5565b610db3565b61027d61033f366004613284565b6001600160a01b03165f9081526020819052604090205490565b600b5461036c906001600160a01b031681565b6040516001600160a01b039091168152602001610216565b61027d60075481565b610395611040565b604051610216929190613405565b6102326103b1366004613284565b6111f9565b61025a611765565b6102096117df565b61027d6103d4366004613315565b6117ee565b61025a6103e73660046132eb565b611909565b61027d6103fa366004613284565b611916565b61027d60085481565b60095461036c906001600160a01b031681565b61027d610429366004613454565b611a05565b61044161043c366004613454565b611a7a565b604080516001600160a01b039094168452602084019290925290820152606001610216565b61027d61047436600461346b565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b61027d6104ac366004613508565b611ab5565b61027d611e4d565b6104c1611f35565b6040516102169291906135ad565b6060600380546104de906135d1565b80601f016020809104026020016040519081016040528092919081815260200182805461050a906135d1565b80156105555780601f1061052c57610100808354040283529160200191610555565b820191905f5260205f20905b81548152906001019060200180831161053857829003601f168201915b5050505050905090565b60605f600b5f9054906101000a90046001600160a01b03166001600160a01b0316631acb61416040518163ffffffff1660e01b8152600401602060405180830381865afa1580156105b2573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906105d69190613603565b9050336001600160a01b038216146106095760405162461bcd60e51b81526004016106009061361e565b60405180910390fd5b610611611765565b6106545760405162461bcd60e51b8152602060048201526014602482015273149958985b185b98d9481b9bdd081b995959195960621b6044820152606401610600565b5f8061065e612033565b915091505f61066d8383612162565b90505f61067982612263565b9050600a5481610689919061365a565b6006549091505f906001600160401b038111156106a8576106a86134a2565b6040519080825280602002602001820160405280156106d1578160200160208202803683370190505b5090505f5b835181101561074a575f8482815181106106f2576106f2613671565b60200260200101511115610742576107238185838151811061071657610716613671565b602002602001015161229f565b82828151811061073557610735613671565b6020026020010181815250505b6001016106d6565b50610755888361236f565b61075d6123a7565b336001600160a01b03167fa95ad530009c6f929555e70a66aadbeae7231e45756c5b028ca77fbaa376e73e8460405161079691906132d9565b60405180910390a29550505050505b50919050565b60605f600b5f9054906101000a90046001600160a01b03166001600160a01b0316631acb61416040518163ffffffff1660e01b8152600401602060405180830381865afa1580156107fe573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108229190613603565b604051630fa6707960e21b81523060048201529091506001600160a01b03821690633e99c1e4906024015f60405180830381865afa158015610866573d5f803e3d5ffd5b505050506040513d5f823e601f3d908101601f1916820160405261088d9190810190613685565b91505090565b5f336108a081858561260a565b60019150505b92915050565b5f805b60065481101561092757826001600160a01b0316600682815481106108d6576108d6613671565b5f9182526020909120600390910201546001600160a01b03160361091f576006818154811061090757610907613671565b905f5260205f20906003020160020154915050919050565b6001016108af565b505f92915050565b6006546060905f906001600160401b0381111561094e5761094e6134a2565b604051908082528060200260200182016040528015610977578160200160208202803683370190505b5090505f5b6006548110156107a5576006818154811061099957610999613671565b905f5260205f209060030201600201548282815181106109bb576109bb613671565b602090810291909101015260010161097c565b5f806109d8612033565b5092915050565b6006546060905f906001600160401b038111156109fe576109fe6134a2565b604051908082528060200260200182016040528015610a27578160200160208202803683370190505b5090505f5b6006548110156107a55760068181548110610a4957610a49613671565b905f5260205f20906003020160010154828281518110610a6b57610a6b613671565b6020908102919091010152600101610a2c565b5f33610a8b858285612617565b610a96858585612692565b506001949350505050565b5f805b60065481101561092757826001600160a01b031660068281548110610acb57610acb613671565b5f9182526020909120600390910201546001600160a01b031603610b145760068181548110610afc57610afc613671565b905f5260205f20906003020160010154915050919050565b600101610aa4565b5f6060610b27612033565b90939092509050565b5f80600b5f9054906101000a90046001600160a01b03166001600160a01b031663bb3ba04c6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b82573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610ba69190613603565b90505f6001600160a01b0316600b5f9054906101000a90046001600160a01b03166001600160a01b031663bb3ba04c6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610c02573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610c269190613603565b6001600160a01b031603610c755760405162461bcd60e51b8152602060048201526016602482015275496e76616c6964206f7261636c65206164647265737360501b6044820152606401610600565b60405163248391ff60e01b81526001600160a01b0386811660048301528581166024830152604482018590525f919083169063248391ff90606401602060405180830381865afa158015610ccb573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610cef9190613710565b9695505050505050565b6006546060905f906001600160401b03811115610d1857610d186134a2565b604051908082528060200260200182016040528015610d41578160200160208202803683370190505b5090505f5b6006548110156107a55760068181548110610d6357610d63613671565b5f91825260209091206003909102015482516001600160a01b0390911690839083908110610d9357610d93613671565b6001600160a01b0390921660209283029190910190910152600101610d46565b5f610dbc6126ef565b600b54604080516385462d6f60e01b815290515f926001600160a01b0316916385462d6f9160048083019260209291908290030181865afa158015610e03573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610e279190613710565b9050846001600160a01b0316866001600160a01b031603610e8a5760405162461bcd60e51b815260206004820152601a60248201527f43616e6e6f742073776170207468652073616d6520746f6b656e0000000000006044820152606401610600565b5f8411610ed95760405162461bcd60e51b815260206004820181905260248201527f416d6f756e74206d7573742062652067726561746572207468616e207a65726f6044820152606401610600565b610ee16123a7565b5f610eed8787876117ee565b905080610ef987611916565b1015610f405760405162461bcd60e51b8152602060048201526016602482015275496e73756666696369656e74204c697175696469747960501b6044820152606401610600565b5f612710610f4e848461365a565b610f58919061373b565b9050610f64818361374e565b93505f8411610fc35760405162461bcd60e51b815260206004820152602560248201527f416d6f756e7420746f2073656e64206d75737420626520677265617465722074604482015264068616e20360dc1b6064820152608401610600565b610fcb6123a7565b866001600160a01b0316886001600160a01b0316866001600160a01b03167fcd3829a3813dc3cdd188fd3d01dcf3268c16be2fdd2dd21d0665418816e460628988604051611023929190918252602082015260400190565b60405180910390a45050506110386001600555565b949350505050565b6060805f8061104d612033565b6006549193509150806001600160401b0381111561106d5761106d6134a2565b604051908082528060200260200182016040528015611096578160200160208202803683370190505b509450806001600160401b038111156110b1576110b16134a2565b6040519080825280602002602001820160405280156110da578160200160208202803683370190505b5093505f5b818110156111f1575f848483815181106110fb576110fb613671565b6020026020010151612710611110919061365a565b61111a919061373b565b90505f6006838154811061113057611130613671565b905f5260205f2090600302016001015490508082111561119b57611154818361374e565b87848151811061116657611166613671565b602002602001018181525050600188848151811061118657611186613671565b911515602092830291909101909101526111e7565b6111a5828261374e565b8784815181106111b7576111b7613671565b6020026020010181815250505f8884815181106111d6576111d6613671565b911515602092830291909101909101525b50506001016110df565b505050509091565b60605f600b5f9054906101000a90046001600160a01b03166001600160a01b0316631acb61416040518163ffffffff1660e01b8152600401602060405180830381865afa15801561124c573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906112709190613603565b9050336001600160a01b0382161461129a5760405162461bcd60e51b81526004016106009061361e565b600b54604080516385462d6f60e01b815290515f926001600160a01b0316916385462d6f9160048083019260209291908290030181865afa1580156112e1573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906113059190613710565b90505f600b5f9054906101000a90046001600160a01b03166001600160a01b0316631acb61416040518163ffffffff1660e01b8152600401602060405180830381865afa158015611358573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061137c9190613603565b305f90815260208190526040902054909150806113db5760405162461bcd60e51b815260206004820152601c60248201527f5368617265206d7573742062652067726561746572207468616e2030000000006044820152606401610600565b5f6113e560025490565b90505f81116114255760405162461bcd60e51b815260206004820152600c60248201526b4e6f206c697175696469747960a01b6044820152606401610600565b6006545f906001600160401b03811115611441576114416134a2565b60405190808252806020026020018201604052801561146a578160200160208202803683370190505b5090505f61271061147b878661365a565b611485919061373b565b90505f611492828661374e565b90505f5b60065481101561157e575f876001600160a01b031663a3e113fb30600685815481106114c4576114c4613671565b5f91825260209091206003909102015460405160e084901b6001600160e01b03191681526001600160a01b03928316600482015291166024820152604401602060405180830381865afa15801561151d573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906115419190613710565b90508561154e848361365a565b611558919061373b565b85838151811061156a5761156a613671565b602090810291909101015250600101611496565b50305f908152602081905260409020548111156115dd5760405162461bcd60e51b815260206004820152601d60248201527f496e73756666696369656e742042414c554e49206c69717569646974790000006044820152606401610600565b600b5460408051631d8cf42560e11b815290515f926001600160a01b031691633b19e84a9160048083019260209291908290030181865afa158015611624573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906116489190613603565b60405163a9059cbb60e01b81526001600160a01b0382166004820152602481018590529091505f90309063a9059cbb906044016020604051808303815f875af1158015611697573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906116bb9190613761565b9050806117005760405162461bcd60e51b8152602060048201526013602482015272119959481d1c985b9cd9995c8819985a5b1959606a1b6044820152606401610600565b61170a3084612719565b6117126123a7565b8b6001600160a01b03167fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca58460405161174d91815260200190565b60405180910390a250929a9950505050505050505050565b5f805f611770611040565b915091505f5b81518110156117d65782818151811061179157611791613671565b602002602001015180156117bf57506007548282815181106117b5576117b5613671565b6020026020010151115b156117ce576001935050505090565b600101611776565b505f9250505090565b6060600480546104de906135d1565b5f806117fb858585610b30565b905083855f606061180a612033565b90925090505f6127108361181d87610aa1565b611827919061365a565b611831919061373b565b90505f6127108461184188610aa1565b61184b919061365a565b611855919061373b565b90505f8990505f611874600c54600d54600e54600f548888885f61274d565b90505f612710876118848a610aa1565b61188e919061365a565b611898919061373b565b90505f612710886118a88b610aa1565b6118b2919061365a565b6118bc919061373b565b90505f6118d8600c54600d54600e54600f5487878b600161274d565b90505f6118e5828661280c565b90505f6118f2878361282a565b9e5050505050505050505050505050509392505050565b5f336108a0818585612692565b5f80600b5f9054906101000a90046001600160a01b03166001600160a01b0316631acb61416040518163ffffffff1660e01b8152600401602060405180830381865afa158015611968573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061198c9190613603565b60405163a3e113fb60e01b81523060048201526001600160a01b0385811660248301529192509082169063a3e113fb90604401602060405180830381865afa1580156119da573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906119fe9190613710565b9392505050565b5f80611a0f612033565b91505080518310611a585760405162461bcd60e51b8152602060048201526013602482015272092dcecc2d8d2c840c2e6e6cae840d2dcc8caf606b1b6044820152606401610600565b808381518110611a6a57611a6a613671565b6020026020010151915050919050565b60068181548110611a89575f80fd5b5f9182526020909120600390910201805460018201546002909201546001600160a01b03909116925083565b5f80600b5f9054906101000a90046001600160a01b03166001600160a01b0316631acb61416040518163ffffffff1660e01b8152600401602060405180830381865afa158015611b07573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611b2b9190613603565b9050336001600160a01b03821614611b555760405162461bcd60e51b81526004016106009061361e565b5f611b5f60025490565b90505f80611b6b6107ab565b805160065491925014611bc05760405162461bcd60e51b815260206004820152601760248201527f496e76616c6964207265736572766573206c656e6774680000000000000000006044820152606401610600565b600654611bfb5760405162461bcd60e51b81526020600482015260096024820152684e6f2061737365747360b81b6044820152606401610600565b5f5b600654811015611c99575f60068281548110611c1b57611c1b613671565b5f91825260208220600390910201546009546001600160a01b039182169350168203611c5d57888381518110611c5357611c53613671565b50611c9192505050565b611c80828a8581518110611c7357611c73613671565b602002602001015161285d565b9050611c8c8186613780565b945050505b600101611bfd565b505f8211611cf45760405162461bcd60e51b815260206004820152602260248201527f546f74616c2076616c7565206d7573742062652067726561746572207468616e604482015261020360f41b6064820152608401610600565b5f835f03611d1057600a54611d09908461365a565b9050611dae565b5f611d19612033565b5090505f8111611d7a5760405162461bcd60e51b815260206004820152602660248201527f546f74616c206c6971756964697479206d75737420626520677265617465722060448201526507468616e20360d41b6064820152608401610600565b600a54611d87908261365a565b85600a5486611d96919061365a565b611da0919061365a565b611daa919061373b565b9150505b805f03611ded5760405162461bcd60e51b815260206004820152600d60248201526c04d696e7420717479206973203609c1b6044820152606401610600565b611df7888261236f565b611dff6123a7565b876001600160a01b03167f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d412139688582604051611e3a91815260200190565b60405180910390a2979650505050505050565b5f8060095f9054906101000a90046001600160a01b03166001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015611e9f573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611ec39190613793565b60ff1690505f611ed482601261374e565b611edf90600a613893565b90505f611eea612033565b5090505f611ef760025490565b9050805f03611f0a575f94505050505090565b60085481611f18858561365a565b611f22919061373b565b611f2c919061365a565b94505050505090565b6060805f600b5f9054906101000a90046001600160a01b03166001600160a01b0316631acb61416040518163ffffffff1660e01b8152600401602060405180830381865afa158015611f89573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611fad9190613603565b9050336001600160a01b03821614611fd75760405162461bcd60e51b81526004016106009061361e565b611fdf611765565b6120225760405162461bcd60e51b8152602060048201526014602482015273149958985b185b98d9481b9bdd081b995959195960621b6044820152606401610600565b61202a612877565b92509250509091565b6006545f90606090806001600160401b03811115612053576120536134a2565b60405190808252806020026020018201604052801561207c578160200160208202803683370190505b5091505f5b8181101561215c575f6006828154811061209d5761209d613671565b5f91825260208220600390910201546001600160a01b031691506120c082611916565b6009549091506001600160a01b03908116908316036120fd57808584815181106120ec576120ec613671565b60200260200101818152505061212b565b5f612108838361285d565b90508086858151811061211d5761211d613671565b602002602001018181525050505b84838151811061213d5761213d613671565b6020026020010151866121509190613780565b95505050600101612081565b50509091565b6006546060906001600160401b0381111561217f5761217f6134a2565b6040519080825280602002602001820160405280156121a8578160200160208202803683370190505b5090505f5b6006548110156109d8575f612710600683815481106121ce576121ce613671565b905f5260205f20906003020160010154866121e9919061365a565b6121f3919061373b565b90508084838151811061220857612208613671565b6020026020010151101561225a5783828151811061222857612228613671565b60200260200101518161223b919061374e565b83838151811061224d5761224d613671565b6020026020010181815250505b506001016121ad565b5f805b6006548110156107a55782818151811061228257612282613671565b6020026020010151826122959190613780565b9150600101612266565b600954600680545f926001600160a01b03169190859081106122c3576122c3613671565b5f9182526020909120600390910201546001600160a01b0316036122e85750806108a6565b5f61231e600685815481106122ff576122ff613671565b5f9182526020909120600390910201546001600160a01b031684612f02565b90505f81116119fe5760405162461bcd60e51b815260206004820152601b60248201527f496e76616c696420746f6b656e20616d6f756e7420746f2061646400000000006044820152606401610600565b6001600160a01b0382166123985760405163ec442f0560e01b81525f6004820152602401610600565b6123a35f8383612f1b565b5050565b5f806123b1611040565b915091505f5b600654811015612605575f600682815481106123d5576123d5613671565b905f5260205f2090600302016002015490508382815181106123f9576123f9613671565b6020026020010151156124ce5782828151811061241857612418613671565b60200260200101516006838154811061243357612433613671565b905f5260205f2090600302016002015f8282546124509190613780565b92505081905550806006838154811061246b5761246b613671565b905f5260205f2090600302016002015410156124c95760405162461bcd60e51b815260206004820152601e60248201527f4f766572666c6f7720696e6372656d656e74696e6720736c69707061676500006044820152606401610600565b6125fc565b8282815181106124e0576124e0613671565b6020026020010151600683815481106124fb576124fb613671565b905f5260205f2090600302016002015411156125d45782828151811061252357612523613671565b60200260200101516006838154811061253e5761253e613671565b905f5260205f2090600302016002015f82825461255b919061374e565b92505081905550806006838154811061257657612576613671565b905f5260205f2090600302016002015411156124c95760405162461bcd60e51b815260206004820152601f60248201527f556e646572666c6f772064656372656d656e74696e6720736c697070616765006044820152606401610600565b5f600683815481106125e8576125e8613671565b905f5260205f209060030201600201819055505b506001016123b7565b505050565b6126058383836001613041565b6001600160a01b038381165f908152600160209081526040808320938616835292905220545f19811461268c578181101561267e57604051637dc7a0d960e11b81526001600160a01b03841660048201526024810182905260448101839052606401610600565b61268c84848484035f613041565b50505050565b6001600160a01b0383166126bb57604051634b637e8f60e11b81525f6004820152602401610600565b6001600160a01b0382166126e45760405163ec442f0560e01b81525f6004820152602401610600565b612605838383612f1b565b60026005540361271257604051633ee5aeb560e01b815260040160405180910390fd5b6002600555565b6001600160a01b03821661274257604051634b637e8f60e11b81525f6004820152602401610600565b6123a3825f83612f1b565b5f806127598686613113565b90505f831561277d5761277686612770878a613780565b90613113565b905061278e565b61278b86612770878a61374e565b90505b80820361279f575f92505050612800565b5f6127ad8c8c8c8c87613132565b90505f6127bd8d8d8d8d87613132565b9050828411156127e9576127de6127d4848661374e565b612770848461374e565b945050505050612800565b6127de6127f6858561374e565b612770838561374e565b98975050505050505050565b5f8161282084670de0b6b3a7640000613780565b6119fe919061374e565b5f670de0b6b3a764000061283f60028261373b565b612849848661365a565b6128539190613780565b6119fe919061373b565b6009545f906119fe9084906001600160a01b031684610b30565b6060805f600b5f9054906101000a90046001600160a01b03166001600160a01b0316631acb61416040518163ffffffff1660e01b8152600401602060405180830381865afa1580156128cb573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906128ef9190613603565b90505f600b5f9054906101000a90046001600160a01b03166001600160a01b031663cff49d686040518163ffffffff1660e01b8152600401602060405180830381865afa158015612942573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906129669190613603565b6006549091505f906001600160401b03811115612985576129856134a2565b6040519080825280602002602001820160405280156129ae578160200160208202803683370190505b506006549091505f906001600160401b038111156129ce576129ce6134a2565b6040519080825280602002602001820160405280156129f7578160200160208202803683370190505b506006549091505f906001600160401b03811115612a1757612a176134a2565b604051908082528060200260200182016040528015612a40578160200160208202803683370190505b506006549091505f906001600160401b03811115612a6057612a606134a2565b604051908082528060200260200182016040528015612a89578160200160208202803683370190505b506006549091505f906001600160401b03811115612aa957612aa96134a2565b604051908082528060200260200182016040528015612ad2578160200160208202803683370190505b506006549091505f906001600160401b03811115612af257612af26134a2565b604051908082528060200260200182016040528015612b1b578160200160208202803683370190505b5090505f5b600654811015612c795760068181548110612b3d57612b3d613671565b5f91825260209091206003909102015487516001600160a01b0390911690889083908110612b6d57612b6d613671565b60200260200101906001600160a01b031690816001600160a01b03168152505060068181548110612ba057612ba0613671565b905f5260205f20906003020160010154868281518110612bc257612bc2613671565b602002602001018181525050868181518110612be057612be0613671565b60209081029190910101516040516370a0823160e01b81526001600160a01b038b81166004830152909116906370a0823190602401602060405180830381865afa158015612c30573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190612c549190613710565b858281518110612c6657612c66613671565b6020908102919091010152600101612b20565b505f612c836107ab565b9050876001600160a01b031663f0bf77148289896007548e8f60095f9054906101000a90046001600160a01b03166040518863ffffffff1660e01b8152600401612cd3979695949392919061389e565b5f604051808303815f87803b158015612cea575f80fd5b505af1158015612cfc573d5f803e3d5ffd5b505050505f5b600654811015612eb057878181518110612d1e57612d1e613671565b60209081029190910101516040516370a0823160e01b81526001600160a01b038c81166004830152909116906370a0823190602401602060405180830381865afa158015612d6e573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190612d929190613710565b858281518110612da457612da4613671565b602002602001018181525050858181518110612dc257612dc2613671565b6020026020010151858281518110612ddc57612ddc613671565b60200260200101511115612e4b57858181518110612dfc57612dfc613671565b6020026020010151858281518110612e1657612e16613671565b6020026020010151612e28919061374e565b848281518110612e3a57612e3a613671565b602002602001018181525050612ea8565b848181518110612e5d57612e5d613671565b6020026020010151868281518110612e7757612e77613671565b6020026020010151612e89919061374e565b838281518110612e9b57612e9b613671565b6020026020010181815250505b600101612d02565b50336001600160a01b03167f279b343370f587af7fb675ae7c8578e9c8abcc373236ad02c501a4771fe7a7b888604051612eea91906133a3565b60405180910390a25090999098509650505050505050565b6009545f906119fe906001600160a01b03168484610b30565b6001600160a01b038316612f45578060025f828254612f3a9190613780565b90915550612fb59050565b6001600160a01b0383165f9081526020819052604090205481811015612f975760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401610600565b6001600160a01b0384165f9081526020819052604090209082900390555b6001600160a01b038216612fd157600280548290039055612fef565b6001600160a01b0382165f9081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161303491815260200190565b60405180910390a3505050565b6001600160a01b03841661306a5760405163e602df0560e01b81525f6004820152602401610600565b6001600160a01b03831661309357604051634a1406b160e11b81525f6004820152602401610600565b6001600160a01b038085165f908152600160209081526040808320938716835292905220829055801561268c57826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161310591815260200190565b60405180910390a350505050565b5f8161312060028261373b565b612849670de0b6b3a76400008661365a565b5f8282101561314c57613145828561374e565b905061319f565b6131456b033b2e3c9fd0803ce8000000670de0b6b3a76400006131848882613174858961365a565b61317e919061373b565b906131a8565b61318e919061365a565b613198919061373b565b8790613113565b95945050505050565b5f6131b4600283613908565b5f036131cc576b033b2e3c9fd0803ce80000006131ce565b825b90506131db60028361373b565b91505b81156108a6576131ee838461321f565b92506131fb600283613908565b1561320d5761320a818461321f565b90505b61321860028361373b565b91506131de565b5f6b033b2e3c9fd0803ce800000061283f60028261373b565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b6001600160a01b0381168114613281575f80fd5b50565b5f60208284031215613294575f80fd5b81356119fe8161326d565b5f815180845260208085019450602084015f5b838110156132ce578151875295820195908201906001016132b2565b509495945050505050565b602081525f6119fe602083018461329f565b5f80604083850312156132fc575f80fd5b82356133078161326d565b946020939093013593505050565b5f805f60608486031215613327575f80fd5b83356133328161326d565b925060208401356133428161326d565b929592945050506040919091013590565b828152604060208201525f611038604083018461329f565b5f815180845260208085019450602084015f5b838110156132ce5781516001600160a01b03168752958201959082019060010161337e565b602081525f6119fe602083018461336b565b5f805f80608085870312156133c8575f80fd5b84356133d38161326d565b935060208501356133e38161326d565b92506040850135915060608501356133fa8161326d565b939692955090935050565b604080825283519082018190525f906020906060840190828701845b8281101561343f578151151584529284019290840190600101613421565b5050508381036020850152610cef818661329f565b5f60208284031215613464575f80fd5b5035919050565b5f806040838503121561347c575f80fd5b82356134878161326d565b915060208301356134978161326d565b809150509250929050565b634e487b7160e01b5f52604160045260245ffd5b604051601f8201601f191681016001600160401b03811182821017156134de576134de6134a2565b604052919050565b5f6001600160401b038211156134fe576134fe6134a2565b5060051b60200190565b5f8060408385031215613519575f80fd5b82356135248161326d565b91506020838101356001600160401b0381111561353f575f80fd5b8401601f8101861361354f575f80fd5b803561356261355d826134e6565b6134b6565b81815260059190911b82018301908381019088831115613580575f80fd5b928401925b8284101561359e57833582529284019290840190613585565b80955050505050509250929050565b604081525f6135bf604083018561329f565b828103602084015261319f818561329f565b600181811c908216806135e557607f821691505b6020821081036107a557634e487b7160e01b5f52602260045260245ffd5b5f60208284031215613613575f80fd5b81516119fe8161326d565b6020808252600e908201526d4f6e6c792050657269706865727960901b604082015260600190565b634e487b7160e01b5f52601160045260245ffd5b80820281158282048414176108a6576108a6613646565b634e487b7160e01b5f52603260045260245ffd5b5f6020808385031215613696575f80fd5b82516001600160401b038111156136ab575f80fd5b8301601f810185136136bb575f80fd5b80516136c961355d826134e6565b81815260059190911b820183019083810190878311156136e7575f80fd5b928401925b82841015613705578351825292840192908401906136ec565b979650505050505050565b5f60208284031215613720575f80fd5b5051919050565b634e487b7160e01b5f52601260045260245ffd5b5f8261374957613749613727565b500490565b818103818111156108a6576108a6613646565b5f60208284031215613771575f80fd5b815180151581146119fe575f80fd5b808201808211156108a6576108a6613646565b5f602082840312156137a3575f80fd5b815160ff811681146119fe575f80fd5b600181815b808511156137ed57815f19048211156137d3576137d3613646565b808516156137e057918102915b93841c93908002906137b8565b509250929050565b5f82613803575060016108a6565b8161380f57505f6108a6565b8160018114613825576002811461382f5761384b565b60019150506108a6565b60ff84111561384057613840613646565b50506001821b6108a6565b5060208310610133831016604e8410600b841016171561386e575081810a6108a6565b61387883836137b3565b805f190482111561388b5761388b613646565b029392505050565b5f6119fe83836137f5565b60e081525f6138b060e083018a61329f565b82810360208401526138c2818a61336b565b905082810360408401526138d6818961329f565b606084019790975250506001600160a01b03938416608082015291831660a083015290911660c0909101529392505050565b5f8261391657613916613727565b50069056fea26469706673582212201ccd53b54c134b34e4ebd8d2ff63d2d5f0ce5f0a9f6fe046ebff11ffa5e6b42f64736f6c63430008190033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1FD JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7B103999 GT PUSH2 0x114 JUMPI DUP1 PUSH4 0xB2B55D70 GT PUSH2 0xA9 JUMPI DUP1 PUSH4 0xD14EF46D GT PUSH2 0x79 JUMPI DUP1 PUSH4 0xD14EF46D EQ PUSH2 0x42E JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x466 JUMPI DUP1 PUSH4 0xDE836EBD EQ PUSH2 0x49E JUMPI DUP1 PUSH4 0xE73FAA2D EQ PUSH2 0x4B1 JUMPI DUP1 PUSH4 0xF47B45E8 EQ PUSH2 0x4B9 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xB2B55D70 EQ PUSH2 0x3EC JUMPI DUP1 PUSH4 0xC2EE3A08 EQ PUSH2 0x3FF JUMPI DUP1 PUSH4 0xCDF456E1 EQ PUSH2 0x408 JUMPI DUP1 PUSH4 0xCF8FA764 EQ PUSH2 0x41B JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8A77C8DC GT PUSH2 0xE4 JUMPI DUP1 PUSH4 0x8A77C8DC EQ PUSH2 0x3B6 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x3BE JUMPI DUP1 PUSH4 0xA1F241CC EQ PUSH2 0x3C6 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x3D9 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7B103999 EQ PUSH2 0x359 JUMPI DUP1 PUSH4 0x7FEC8D38 EQ PUSH2 0x384 JUMPI DUP1 PUSH4 0x89AB3532 EQ PUSH2 0x38D JUMPI DUP1 PUSH4 0x89AFCB44 EQ PUSH2 0x3A3 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x22ACB867 GT PUSH2 0x195 JUMPI DUP1 PUSH4 0x36BF6E39 GT PUSH2 0x165 JUMPI DUP1 PUSH4 0x36BF6E39 EQ PUSH2 0x2E0 JUMPI DUP1 PUSH4 0x4AA06652 EQ PUSH2 0x2F6 JUMPI DUP1 PUSH4 0x67E4AC2C EQ PUSH2 0x309 JUMPI DUP1 PUSH4 0x6E81221C EQ PUSH2 0x31E JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x331 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x22ACB867 EQ PUSH2 0x2A3 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2AB JUMPI DUP1 PUSH4 0x250AA683 EQ PUSH2 0x2BE JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2D1 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x12899068 GT PUSH2 0x1D0 JUMPI DUP1 PUSH4 0x12899068 EQ PUSH2 0x26A JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x28B JUMPI DUP1 PUSH4 0x18904EA4 EQ PUSH2 0x293 JUMPI DUP1 PUSH4 0x1A686502 EQ PUSH2 0x29B JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x201 JUMPI DUP1 PUSH4 0x723C999 EQ PUSH2 0x21F JUMPI DUP1 PUSH4 0x902F1AC EQ PUSH2 0x23F JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x247 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x209 PUSH2 0x4CF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x216 SWAP2 SWAP1 PUSH2 0x3238 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x232 PUSH2 0x22D CALLDATASIZE PUSH1 0x4 PUSH2 0x3284 JUMP JUMPDEST PUSH2 0x55F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x216 SWAP2 SWAP1 PUSH2 0x32D9 JUMP JUMPDEST PUSH2 0x232 PUSH2 0x7AB JUMP JUMPDEST PUSH2 0x25A PUSH2 0x255 CALLDATASIZE PUSH1 0x4 PUSH2 0x32EB JUMP JUMPDEST PUSH2 0x893 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x216 JUMP JUMPDEST PUSH2 0x27D PUSH2 0x278 CALLDATASIZE PUSH1 0x4 PUSH2 0x3284 JUMP JUMPDEST PUSH2 0x8AC JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x216 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x27D JUMP JUMPDEST PUSH2 0x232 PUSH2 0x92F JUMP JUMPDEST PUSH2 0x27D PUSH2 0x9CE JUMP JUMPDEST PUSH2 0x232 PUSH2 0x9DF JUMP JUMPDEST PUSH2 0x25A PUSH2 0x2B9 CALLDATASIZE PUSH1 0x4 PUSH2 0x3315 JUMP JUMPDEST PUSH2 0xA7E JUMP JUMPDEST PUSH2 0x27D PUSH2 0x2CC CALLDATASIZE PUSH1 0x4 PUSH2 0x3284 JUMP JUMPDEST PUSH2 0xAA1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x216 JUMP JUMPDEST PUSH2 0x2E8 PUSH2 0xB1C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x216 SWAP3 SWAP2 SWAP1 PUSH2 0x3353 JUMP JUMPDEST PUSH2 0x27D PUSH2 0x304 CALLDATASIZE PUSH1 0x4 PUSH2 0x3315 JUMP JUMPDEST PUSH2 0xB30 JUMP JUMPDEST PUSH2 0x311 PUSH2 0xCF9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x216 SWAP2 SWAP1 PUSH2 0x33A3 JUMP JUMPDEST PUSH2 0x27D PUSH2 0x32C CALLDATASIZE PUSH1 0x4 PUSH2 0x33B5 JUMP JUMPDEST PUSH2 0xDB3 JUMP JUMPDEST PUSH2 0x27D PUSH2 0x33F CALLDATASIZE PUSH1 0x4 PUSH2 0x3284 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH2 0x36C SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x216 JUMP JUMPDEST PUSH2 0x27D PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x395 PUSH2 0x1040 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x216 SWAP3 SWAP2 SWAP1 PUSH2 0x3405 JUMP JUMPDEST PUSH2 0x232 PUSH2 0x3B1 CALLDATASIZE PUSH1 0x4 PUSH2 0x3284 JUMP JUMPDEST PUSH2 0x11F9 JUMP JUMPDEST PUSH2 0x25A PUSH2 0x1765 JUMP JUMPDEST PUSH2 0x209 PUSH2 0x17DF JUMP JUMPDEST PUSH2 0x27D PUSH2 0x3D4 CALLDATASIZE PUSH1 0x4 PUSH2 0x3315 JUMP JUMPDEST PUSH2 0x17EE JUMP JUMPDEST PUSH2 0x25A PUSH2 0x3E7 CALLDATASIZE PUSH1 0x4 PUSH2 0x32EB JUMP JUMPDEST PUSH2 0x1909 JUMP JUMPDEST PUSH2 0x27D PUSH2 0x3FA CALLDATASIZE PUSH1 0x4 PUSH2 0x3284 JUMP JUMPDEST PUSH2 0x1916 JUMP JUMPDEST PUSH2 0x27D PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x36C SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x27D PUSH2 0x429 CALLDATASIZE PUSH1 0x4 PUSH2 0x3454 JUMP JUMPDEST PUSH2 0x1A05 JUMP JUMPDEST PUSH2 0x441 PUSH2 0x43C CALLDATASIZE PUSH1 0x4 PUSH2 0x3454 JUMP JUMPDEST PUSH2 0x1A7A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x216 JUMP JUMPDEST PUSH2 0x27D PUSH2 0x474 CALLDATASIZE PUSH1 0x4 PUSH2 0x346B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x27D PUSH2 0x4AC CALLDATASIZE PUSH1 0x4 PUSH2 0x3508 JUMP JUMPDEST PUSH2 0x1AB5 JUMP JUMPDEST PUSH2 0x27D PUSH2 0x1E4D JUMP JUMPDEST PUSH2 0x4C1 PUSH2 0x1F35 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x216 SWAP3 SWAP2 SWAP1 PUSH2 0x35AD JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x4DE SWAP1 PUSH2 0x35D1 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x50A SWAP1 PUSH2 0x35D1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x555 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x52C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x555 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x538 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1ACB6141 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5B2 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5D6 SWAP2 SWAP1 PUSH2 0x3603 JUMP JUMPDEST SWAP1 POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0x609 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x600 SWAP1 PUSH2 0x361E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x611 PUSH2 0x1765 JUMP JUMPDEST PUSH2 0x654 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x149958985B185B98D9481B9BDD081B9959591959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x600 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x65E PUSH2 0x2033 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH0 PUSH2 0x66D DUP4 DUP4 PUSH2 0x2162 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x679 DUP3 PUSH2 0x2263 JUMP JUMPDEST SWAP1 POP PUSH1 0xA SLOAD DUP2 PUSH2 0x689 SWAP2 SWAP1 PUSH2 0x365A JUMP JUMPDEST PUSH1 0x6 SLOAD SWAP1 SWAP2 POP PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x6A8 JUMPI PUSH2 0x6A8 PUSH2 0x34A2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x6D1 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x74A JUMPI PUSH0 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x6F2 JUMPI PUSH2 0x6F2 PUSH2 0x3671 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD GT ISZERO PUSH2 0x742 JUMPI PUSH2 0x723 DUP2 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x716 JUMPI PUSH2 0x716 PUSH2 0x3671 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x229F JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x735 JUMPI PUSH2 0x735 PUSH2 0x3671 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x6D6 JUMP JUMPDEST POP PUSH2 0x755 DUP9 DUP4 PUSH2 0x236F JUMP JUMPDEST PUSH2 0x75D PUSH2 0x23A7 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xA95AD530009C6F929555E70A66AADBEAE7231E45756C5B028CA77FBAA376E73E DUP5 PUSH1 0x40 MLOAD PUSH2 0x796 SWAP2 SWAP1 PUSH2 0x32D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 SWAP6 POP POP POP POP POP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1ACB6141 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7FE JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x822 SWAP2 SWAP1 PUSH2 0x3603 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xFA67079 PUSH1 0xE2 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0x3E99C1E4 SWAP1 PUSH1 0x24 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x866 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x88D SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x3685 JUMP JUMPDEST SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x8A0 DUP2 DUP6 DUP6 PUSH2 0x260A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x927 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x8D6 JUMPI PUSH2 0x8D6 PUSH2 0x3671 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x91F JUMPI PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x907 JUMPI PUSH2 0x907 PUSH2 0x3671 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x2 ADD SLOAD SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x8AF JUMP JUMPDEST POP PUSH0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x60 SWAP1 PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x94E JUMPI PUSH2 0x94E PUSH2 0x34A2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x977 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x7A5 JUMPI PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x999 JUMPI PUSH2 0x999 PUSH2 0x3671 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x2 ADD SLOAD DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x9BB JUMPI PUSH2 0x9BB PUSH2 0x3671 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x97C JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x9D8 PUSH2 0x2033 JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x60 SWAP1 PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x9FE JUMPI PUSH2 0x9FE PUSH2 0x34A2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xA27 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x7A5 JUMPI PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xA49 JUMPI PUSH2 0xA49 PUSH2 0x3671 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x1 ADD SLOAD DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xA6B JUMPI PUSH2 0xA6B PUSH2 0x3671 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0xA2C JUMP JUMPDEST PUSH0 CALLER PUSH2 0xA8B DUP6 DUP3 DUP6 PUSH2 0x2617 JUMP JUMPDEST PUSH2 0xA96 DUP6 DUP6 DUP6 PUSH2 0x2692 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x927 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xACB JUMPI PUSH2 0xACB PUSH2 0x3671 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xB14 JUMPI PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xAFC JUMPI PUSH2 0xAFC PUSH2 0x3671 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x1 ADD SLOAD SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0xAA4 JUMP JUMPDEST PUSH0 PUSH1 0x60 PUSH2 0xB27 PUSH2 0x2033 JUMP JUMPDEST SWAP1 SWAP4 SWAP1 SWAP3 POP SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xBB3BA04C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB82 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBA6 SWAP2 SWAP1 PUSH2 0x3603 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xBB3BA04C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC02 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC26 SWAP2 SWAP1 PUSH2 0x3603 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xC75 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x496E76616C6964206F7261636C652061646472657373 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x600 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x248391FF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP6 SWAP1 MSTORE PUSH0 SWAP2 SWAP1 DUP4 AND SWAP1 PUSH4 0x248391FF SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xCCB JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCEF SWAP2 SWAP1 PUSH2 0x3710 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x60 SWAP1 PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0xD18 JUMPI PUSH2 0xD18 PUSH2 0x34A2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xD41 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x7A5 JUMPI PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xD63 JUMPI PUSH2 0xD63 PUSH2 0x3671 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD SLOAD DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP4 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0xD93 JUMPI PUSH2 0xD93 PUSH2 0x3671 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE PUSH1 0x1 ADD PUSH2 0xD46 JUMP JUMPDEST PUSH0 PUSH2 0xDBC PUSH2 0x26EF JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x85462D6F PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x85462D6F SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE03 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE27 SWAP2 SWAP1 PUSH2 0x3710 JUMP JUMPDEST SWAP1 POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xE8A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F742073776170207468652073616D6520746F6B656E000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x600 JUMP JUMPDEST PUSH0 DUP5 GT PUSH2 0xED9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E207A65726F PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x600 JUMP JUMPDEST PUSH2 0xEE1 PUSH2 0x23A7 JUMP JUMPDEST PUSH0 PUSH2 0xEED DUP8 DUP8 DUP8 PUSH2 0x17EE JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0xEF9 DUP8 PUSH2 0x1916 JUMP JUMPDEST LT ISZERO PUSH2 0xF40 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x496E73756666696369656E74204C6971756964697479 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x600 JUMP JUMPDEST PUSH0 PUSH2 0x2710 PUSH2 0xF4E DUP5 DUP5 PUSH2 0x365A JUMP JUMPDEST PUSH2 0xF58 SWAP2 SWAP1 PUSH2 0x373B JUMP JUMPDEST SWAP1 POP PUSH2 0xF64 DUP2 DUP4 PUSH2 0x374E JUMP JUMPDEST SWAP4 POP PUSH0 DUP5 GT PUSH2 0xFC3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E7420746F2073656E64206D75737420626520677265617465722074 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x68616E203 PUSH1 0xDC SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x600 JUMP JUMPDEST PUSH2 0xFCB PUSH2 0x23A7 JUMP JUMPDEST DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xCD3829A3813DC3CDD188FD3D01DCF3268C16BE2FDD2DD21D0665418816E46062 DUP10 DUP9 PUSH1 0x40 MLOAD PUSH2 0x1023 SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP PUSH2 0x1038 PUSH1 0x1 PUSH1 0x5 SSTORE JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH0 DUP1 PUSH2 0x104D PUSH2 0x2033 JUMP JUMPDEST PUSH1 0x6 SLOAD SWAP2 SWAP4 POP SWAP2 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x106D JUMPI PUSH2 0x106D PUSH2 0x34A2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1096 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP5 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x10B1 JUMPI PUSH2 0x10B1 PUSH2 0x34A2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x10DA JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP4 POP PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x11F1 JUMPI PUSH0 DUP5 DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x10FB JUMPI PUSH2 0x10FB PUSH2 0x3671 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2710 PUSH2 0x1110 SWAP2 SWAP1 PUSH2 0x365A JUMP JUMPDEST PUSH2 0x111A SWAP2 SWAP1 PUSH2 0x373B JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x6 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x1130 JUMPI PUSH2 0x1130 PUSH2 0x3671 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x1 ADD SLOAD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x119B JUMPI PUSH2 0x1154 DUP2 DUP4 PUSH2 0x374E JUMP JUMPDEST DUP8 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x1166 JUMPI PUSH2 0x1166 PUSH2 0x3671 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x1 DUP9 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x1186 JUMPI PUSH2 0x1186 PUSH2 0x3671 JUMP JUMPDEST SWAP2 ISZERO ISZERO PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE PUSH2 0x11E7 JUMP JUMPDEST PUSH2 0x11A5 DUP3 DUP3 PUSH2 0x374E JUMP JUMPDEST DUP8 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x11B7 JUMPI PUSH2 0x11B7 PUSH2 0x3671 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH0 DUP9 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x11D6 JUMPI PUSH2 0x11D6 PUSH2 0x3671 JUMP JUMPDEST SWAP2 ISZERO ISZERO PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE JUMPDEST POP POP PUSH1 0x1 ADD PUSH2 0x10DF JUMP JUMPDEST POP POP POP POP SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1ACB6141 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x124C JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1270 SWAP2 SWAP1 PUSH2 0x3603 JUMP JUMPDEST SWAP1 POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0x129A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x600 SWAP1 PUSH2 0x361E JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x85462D6F PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x85462D6F SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x12E1 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1305 SWAP2 SWAP1 PUSH2 0x3710 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1ACB6141 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1358 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x137C SWAP2 SWAP1 PUSH2 0x3603 JUMP JUMPDEST ADDRESS PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP1 PUSH2 0x13DB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5368617265206D7573742062652067726561746572207468616E203000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x600 JUMP JUMPDEST PUSH0 PUSH2 0x13E5 PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT PUSH2 0x1425 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x4E6F206C6971756964697479 PUSH1 0xA0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x600 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1441 JUMPI PUSH2 0x1441 PUSH2 0x34A2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x146A JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 PUSH2 0x2710 PUSH2 0x147B DUP8 DUP7 PUSH2 0x365A JUMP JUMPDEST PUSH2 0x1485 SWAP2 SWAP1 PUSH2 0x373B JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x1492 DUP3 DUP7 PUSH2 0x374E JUMP JUMPDEST SWAP1 POP PUSH0 JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x157E JUMPI PUSH0 DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA3E113FB ADDRESS PUSH1 0x6 DUP6 DUP2 SLOAD DUP2 LT PUSH2 0x14C4 JUMPI PUSH2 0x14C4 PUSH2 0x3671 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD SLOAD PUSH1 0x40 MLOAD PUSH1 0xE0 DUP5 SWAP1 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP2 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x151D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1541 SWAP2 SWAP1 PUSH2 0x3710 JUMP JUMPDEST SWAP1 POP DUP6 PUSH2 0x154E DUP5 DUP4 PUSH2 0x365A JUMP JUMPDEST PUSH2 0x1558 SWAP2 SWAP1 PUSH2 0x373B JUMP JUMPDEST DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x156A JUMPI PUSH2 0x156A PUSH2 0x3671 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE POP PUSH1 0x1 ADD PUSH2 0x1496 JUMP JUMPDEST POP ADDRESS PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0x15DD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E742042414C554E49206C6971756964697479000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x600 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x1D8CF425 PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 MLOAD PUSH0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x3B19E84A SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1624 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1648 SWAP2 SWAP1 PUSH2 0x3603 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE SWAP1 SWAP2 POP PUSH0 SWAP1 ADDRESS SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1697 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x16BB SWAP2 SWAP1 PUSH2 0x3761 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x1700 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x119959481D1C985B9CD9995C8819985A5B1959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x600 JUMP JUMPDEST PUSH2 0x170A ADDRESS DUP5 PUSH2 0x2719 JUMP JUMPDEST PUSH2 0x1712 PUSH2 0x23A7 JUMP JUMPDEST DUP12 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xCC16F5DBB4873280815C1EE09DBD06736CFFCC184412CF7A71A0FDB75D397CA5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x174D SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP SWAP3 SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH2 0x1770 PUSH2 0x1040 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x17D6 JUMPI DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x1791 JUMPI PUSH2 0x1791 PUSH2 0x3671 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP1 ISZERO PUSH2 0x17BF JUMPI POP PUSH1 0x7 SLOAD DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x17B5 JUMPI PUSH2 0x17B5 PUSH2 0x3671 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD GT JUMPDEST ISZERO PUSH2 0x17CE JUMPI PUSH1 0x1 SWAP4 POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x1776 JUMP JUMPDEST POP PUSH0 SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x4DE SWAP1 PUSH2 0x35D1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x17FB DUP6 DUP6 DUP6 PUSH2 0xB30 JUMP JUMPDEST SWAP1 POP DUP4 DUP6 PUSH0 PUSH1 0x60 PUSH2 0x180A PUSH2 0x2033 JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP PUSH0 PUSH2 0x2710 DUP4 PUSH2 0x181D DUP8 PUSH2 0xAA1 JUMP JUMPDEST PUSH2 0x1827 SWAP2 SWAP1 PUSH2 0x365A JUMP JUMPDEST PUSH2 0x1831 SWAP2 SWAP1 PUSH2 0x373B JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x2710 DUP5 PUSH2 0x1841 DUP9 PUSH2 0xAA1 JUMP JUMPDEST PUSH2 0x184B SWAP2 SWAP1 PUSH2 0x365A JUMP JUMPDEST PUSH2 0x1855 SWAP2 SWAP1 PUSH2 0x373B JUMP JUMPDEST SWAP1 POP PUSH0 DUP10 SWAP1 POP PUSH0 PUSH2 0x1874 PUSH1 0xC SLOAD PUSH1 0xD SLOAD PUSH1 0xE SLOAD PUSH1 0xF SLOAD DUP9 DUP9 DUP9 PUSH0 PUSH2 0x274D JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x2710 DUP8 PUSH2 0x1884 DUP11 PUSH2 0xAA1 JUMP JUMPDEST PUSH2 0x188E SWAP2 SWAP1 PUSH2 0x365A JUMP JUMPDEST PUSH2 0x1898 SWAP2 SWAP1 PUSH2 0x373B JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x2710 DUP9 PUSH2 0x18A8 DUP12 PUSH2 0xAA1 JUMP JUMPDEST PUSH2 0x18B2 SWAP2 SWAP1 PUSH2 0x365A JUMP JUMPDEST PUSH2 0x18BC SWAP2 SWAP1 PUSH2 0x373B JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x18D8 PUSH1 0xC SLOAD PUSH1 0xD SLOAD PUSH1 0xE SLOAD PUSH1 0xF SLOAD DUP8 DUP8 DUP12 PUSH1 0x1 PUSH2 0x274D JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x18E5 DUP3 DUP7 PUSH2 0x280C JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x18F2 DUP8 DUP4 PUSH2 0x282A JUMP JUMPDEST SWAP15 POP POP POP POP POP POP POP POP POP POP POP POP POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x8A0 DUP2 DUP6 DUP6 PUSH2 0x2692 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1ACB6141 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1968 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x198C SWAP2 SWAP1 PUSH2 0x3603 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA3E113FB PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE SWAP2 SWAP3 POP SWAP1 DUP3 AND SWAP1 PUSH4 0xA3E113FB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x19DA JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x19FE SWAP2 SWAP1 PUSH2 0x3710 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x1A0F PUSH2 0x2033 JUMP JUMPDEST SWAP2 POP POP DUP1 MLOAD DUP4 LT PUSH2 0x1A58 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x92DCECC2D8D2C840C2E6E6CAE840D2DCC8CAF PUSH1 0x6B SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x600 JUMP JUMPDEST DUP1 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1A6A JUMPI PUSH2 0x1A6A PUSH2 0x3671 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1A89 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP3 POP DUP4 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1ACB6141 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1B07 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1B2B SWAP2 SWAP1 PUSH2 0x3603 JUMP JUMPDEST SWAP1 POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0x1B55 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x600 SWAP1 PUSH2 0x361E JUMP JUMPDEST PUSH0 PUSH2 0x1B5F PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH0 DUP1 PUSH2 0x1B6B PUSH2 0x7AB JUMP JUMPDEST DUP1 MLOAD PUSH1 0x6 SLOAD SWAP2 SWAP3 POP EQ PUSH2 0x1BC0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964207265736572766573206C656E677468000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x600 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x1BFB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x4E6F20617373657473 PUSH1 0xB8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x600 JUMP JUMPDEST PUSH0 JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x1C99 JUMPI PUSH0 PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1C1B JUMPI PUSH2 0x1C1B PUSH2 0x3671 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD SLOAD PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP4 POP AND DUP3 SUB PUSH2 0x1C5D JUMPI DUP9 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1C53 JUMPI PUSH2 0x1C53 PUSH2 0x3671 JUMP JUMPDEST POP PUSH2 0x1C91 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1C80 DUP3 DUP11 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x1C73 JUMPI PUSH2 0x1C73 PUSH2 0x3671 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x285D JUMP JUMPDEST SWAP1 POP PUSH2 0x1C8C DUP2 DUP7 PUSH2 0x3780 JUMP JUMPDEST SWAP5 POP POP POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x1BFD JUMP JUMPDEST POP PUSH0 DUP3 GT PUSH2 0x1CF4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F74616C2076616C7565206D7573742062652067726561746572207468616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x203 PUSH1 0xF4 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x600 JUMP JUMPDEST PUSH0 DUP4 PUSH0 SUB PUSH2 0x1D10 JUMPI PUSH1 0xA SLOAD PUSH2 0x1D09 SWAP1 DUP5 PUSH2 0x365A JUMP JUMPDEST SWAP1 POP PUSH2 0x1DAE JUMP JUMPDEST PUSH0 PUSH2 0x1D19 PUSH2 0x2033 JUMP JUMPDEST POP SWAP1 POP PUSH0 DUP2 GT PUSH2 0x1D7A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F74616C206C6971756964697479206D757374206265206772656174657220 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x7468616E203 PUSH1 0xD4 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x600 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH2 0x1D87 SWAP1 DUP3 PUSH2 0x365A JUMP JUMPDEST DUP6 PUSH1 0xA SLOAD DUP7 PUSH2 0x1D96 SWAP2 SWAP1 PUSH2 0x365A JUMP JUMPDEST PUSH2 0x1DA0 SWAP2 SWAP1 PUSH2 0x365A JUMP JUMPDEST PUSH2 0x1DAA SWAP2 SWAP1 PUSH2 0x373B JUMP JUMPDEST SWAP2 POP POP JUMPDEST DUP1 PUSH0 SUB PUSH2 0x1DED JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x4D696E7420717479206973203 PUSH1 0x9C SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x600 JUMP JUMPDEST PUSH2 0x1DF7 DUP9 DUP3 PUSH2 0x236F JUMP JUMPDEST PUSH2 0x1DFF PUSH2 0x23A7 JUMP JUMPDEST DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xF6798A560793A54C3BCFE86A93CDE1E73087D944C0EA20544137D4121396885 DUP3 PUSH1 0x40 MLOAD PUSH2 0x1E3A SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1E9F JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1EC3 SWAP2 SWAP1 PUSH2 0x3793 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 POP PUSH0 PUSH2 0x1ED4 DUP3 PUSH1 0x12 PUSH2 0x374E JUMP JUMPDEST PUSH2 0x1EDF SWAP1 PUSH1 0xA PUSH2 0x3893 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x1EEA PUSH2 0x2033 JUMP JUMPDEST POP SWAP1 POP PUSH0 PUSH2 0x1EF7 PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 SUB PUSH2 0x1F0A JUMPI PUSH0 SWAP5 POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 PUSH2 0x1F18 DUP6 DUP6 PUSH2 0x365A JUMP JUMPDEST PUSH2 0x1F22 SWAP2 SWAP1 PUSH2 0x373B JUMP JUMPDEST PUSH2 0x1F2C SWAP2 SWAP1 PUSH2 0x365A JUMP JUMPDEST SWAP5 POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH0 PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1ACB6141 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1F89 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1FAD SWAP2 SWAP1 PUSH2 0x3603 JUMP JUMPDEST SWAP1 POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0x1FD7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x600 SWAP1 PUSH2 0x361E JUMP JUMPDEST PUSH2 0x1FDF PUSH2 0x1765 JUMP JUMPDEST PUSH2 0x2022 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x149958985B185B98D9481B9BDD081B9959591959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x600 JUMP JUMPDEST PUSH2 0x202A PUSH2 0x2877 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH0 SWAP1 PUSH1 0x60 SWAP1 DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2053 JUMPI PUSH2 0x2053 PUSH2 0x34A2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x207C JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP2 POP PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x215C JUMPI PUSH0 PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x209D JUMPI PUSH2 0x209D PUSH2 0x3671 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 POP PUSH2 0x20C0 DUP3 PUSH2 0x1916 JUMP JUMPDEST PUSH1 0x9 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP4 AND SUB PUSH2 0x20FD JUMPI DUP1 DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x20EC JUMPI PUSH2 0x20EC PUSH2 0x3671 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x212B JUMP JUMPDEST PUSH0 PUSH2 0x2108 DUP4 DUP4 PUSH2 0x285D JUMP JUMPDEST SWAP1 POP DUP1 DUP7 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x211D JUMPI PUSH2 0x211D PUSH2 0x3671 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP POP JUMPDEST DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x213D JUMPI PUSH2 0x213D PUSH2 0x3671 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP7 PUSH2 0x2150 SWAP2 SWAP1 PUSH2 0x3780 JUMP JUMPDEST SWAP6 POP POP POP PUSH1 0x1 ADD PUSH2 0x2081 JUMP JUMPDEST POP POP SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x60 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x217F JUMPI PUSH2 0x217F PUSH2 0x34A2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x21A8 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x9D8 JUMPI PUSH0 PUSH2 0x2710 PUSH1 0x6 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x21CE JUMPI PUSH2 0x21CE PUSH2 0x3671 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x1 ADD SLOAD DUP7 PUSH2 0x21E9 SWAP2 SWAP1 PUSH2 0x365A JUMP JUMPDEST PUSH2 0x21F3 SWAP2 SWAP1 PUSH2 0x373B JUMP JUMPDEST SWAP1 POP DUP1 DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x2208 JUMPI PUSH2 0x2208 PUSH2 0x3671 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD LT ISZERO PUSH2 0x225A JUMPI DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2228 JUMPI PUSH2 0x2228 PUSH2 0x3671 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 PUSH2 0x223B SWAP2 SWAP1 PUSH2 0x374E JUMP JUMPDEST DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x224D JUMPI PUSH2 0x224D PUSH2 0x3671 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x21AD JUMP JUMPDEST PUSH0 DUP1 JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x7A5 JUMPI DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x2282 JUMPI PUSH2 0x2282 PUSH2 0x3671 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP3 PUSH2 0x2295 SWAP2 SWAP1 PUSH2 0x3780 JUMP JUMPDEST SWAP2 POP PUSH1 0x1 ADD PUSH2 0x2266 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x6 DUP1 SLOAD PUSH0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 SWAP1 DUP6 SWAP1 DUP2 LT PUSH2 0x22C3 JUMPI PUSH2 0x22C3 PUSH2 0x3671 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x22E8 JUMPI POP DUP1 PUSH2 0x8A6 JUMP JUMPDEST PUSH0 PUSH2 0x231E PUSH1 0x6 DUP6 DUP2 SLOAD DUP2 LT PUSH2 0x22FF JUMPI PUSH2 0x22FF PUSH2 0x3671 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH2 0x2F02 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT PUSH2 0x19FE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420746F6B656E20616D6F756E7420746F206164640000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x600 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x2398 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x600 JUMP JUMPDEST PUSH2 0x23A3 PUSH0 DUP4 DUP4 PUSH2 0x2F1B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x23B1 PUSH2 0x1040 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH0 JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x2605 JUMPI PUSH0 PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x23D5 JUMPI PUSH2 0x23D5 PUSH2 0x3671 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x23F9 JUMPI PUSH2 0x23F9 PUSH2 0x3671 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD ISZERO PUSH2 0x24CE JUMPI DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2418 JUMPI PUSH2 0x2418 PUSH2 0x3671 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x6 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x2433 JUMPI PUSH2 0x2433 PUSH2 0x3671 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x2 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x2450 SWAP2 SWAP1 PUSH2 0x3780 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x6 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x246B JUMPI PUSH2 0x246B PUSH2 0x3671 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x2 ADD SLOAD LT ISZERO PUSH2 0x24C9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F766572666C6F7720696E6372656D656E74696E6720736C6970706167650000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x600 JUMP JUMPDEST PUSH2 0x25FC JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x24E0 JUMPI PUSH2 0x24E0 PUSH2 0x3671 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x6 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x24FB JUMPI PUSH2 0x24FB PUSH2 0x3671 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x2 ADD SLOAD GT ISZERO PUSH2 0x25D4 JUMPI DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2523 JUMPI PUSH2 0x2523 PUSH2 0x3671 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x6 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x253E JUMPI PUSH2 0x253E PUSH2 0x3671 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x2 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x255B SWAP2 SWAP1 PUSH2 0x374E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x6 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x2576 JUMPI PUSH2 0x2576 PUSH2 0x3671 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x2 ADD SLOAD GT ISZERO PUSH2 0x24C9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E646572666C6F772064656372656D656E74696E6720736C69707061676500 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x600 JUMP JUMPDEST PUSH0 PUSH1 0x6 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x25E8 JUMPI PUSH2 0x25E8 PUSH2 0x3671 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x23B7 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x2605 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x3041 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH0 NOT DUP2 EQ PUSH2 0x268C JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x267E JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x600 JUMP JUMPDEST PUSH2 0x268C DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x3041 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x26BB JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x600 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x26E4 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x600 JUMP JUMPDEST PUSH2 0x2605 DUP4 DUP4 DUP4 PUSH2 0x2F1B JUMP JUMPDEST PUSH1 0x2 PUSH1 0x5 SLOAD SUB PUSH2 0x2712 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x5 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x2742 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x600 JUMP JUMPDEST PUSH2 0x23A3 DUP3 PUSH0 DUP4 PUSH2 0x2F1B JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x2759 DUP7 DUP7 PUSH2 0x3113 JUMP JUMPDEST SWAP1 POP PUSH0 DUP4 ISZERO PUSH2 0x277D JUMPI PUSH2 0x2776 DUP7 PUSH2 0x2770 DUP8 DUP11 PUSH2 0x3780 JUMP JUMPDEST SWAP1 PUSH2 0x3113 JUMP JUMPDEST SWAP1 POP PUSH2 0x278E JUMP JUMPDEST PUSH2 0x278B DUP7 PUSH2 0x2770 DUP8 DUP11 PUSH2 0x374E JUMP JUMPDEST SWAP1 POP JUMPDEST DUP1 DUP3 SUB PUSH2 0x279F JUMPI PUSH0 SWAP3 POP POP POP PUSH2 0x2800 JUMP JUMPDEST PUSH0 PUSH2 0x27AD DUP13 DUP13 DUP13 DUP13 DUP8 PUSH2 0x3132 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x27BD DUP14 DUP14 DUP14 DUP14 DUP8 PUSH2 0x3132 JUMP JUMPDEST SWAP1 POP DUP3 DUP5 GT ISZERO PUSH2 0x27E9 JUMPI PUSH2 0x27DE PUSH2 0x27D4 DUP5 DUP7 PUSH2 0x374E JUMP JUMPDEST PUSH2 0x2770 DUP5 DUP5 PUSH2 0x374E JUMP JUMPDEST SWAP5 POP POP POP POP POP PUSH2 0x2800 JUMP JUMPDEST PUSH2 0x27DE PUSH2 0x27F6 DUP6 DUP6 PUSH2 0x374E JUMP JUMPDEST PUSH2 0x2770 DUP4 DUP6 PUSH2 0x374E JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH2 0x2820 DUP5 PUSH8 0xDE0B6B3A7640000 PUSH2 0x3780 JUMP JUMPDEST PUSH2 0x19FE SWAP2 SWAP1 PUSH2 0x374E JUMP JUMPDEST PUSH0 PUSH8 0xDE0B6B3A7640000 PUSH2 0x283F PUSH1 0x2 DUP3 PUSH2 0x373B JUMP JUMPDEST PUSH2 0x2849 DUP5 DUP7 PUSH2 0x365A JUMP JUMPDEST PUSH2 0x2853 SWAP2 SWAP1 PUSH2 0x3780 JUMP JUMPDEST PUSH2 0x19FE SWAP2 SWAP1 PUSH2 0x373B JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH0 SWAP1 PUSH2 0x19FE SWAP1 DUP5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH2 0xB30 JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH0 PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1ACB6141 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x28CB JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x28EF SWAP2 SWAP1 PUSH2 0x3603 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xCFF49D68 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2942 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2966 SWAP2 SWAP1 PUSH2 0x3603 JUMP JUMPDEST PUSH1 0x6 SLOAD SWAP1 SWAP2 POP PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2985 JUMPI PUSH2 0x2985 PUSH2 0x34A2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x29AE JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP PUSH1 0x6 SLOAD SWAP1 SWAP2 POP PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x29CE JUMPI PUSH2 0x29CE PUSH2 0x34A2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x29F7 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP PUSH1 0x6 SLOAD SWAP1 SWAP2 POP PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2A17 JUMPI PUSH2 0x2A17 PUSH2 0x34A2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2A40 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP PUSH1 0x6 SLOAD SWAP1 SWAP2 POP PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2A60 JUMPI PUSH2 0x2A60 PUSH2 0x34A2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2A89 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP PUSH1 0x6 SLOAD SWAP1 SWAP2 POP PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2AA9 JUMPI PUSH2 0x2AA9 PUSH2 0x34A2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2AD2 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP PUSH1 0x6 SLOAD SWAP1 SWAP2 POP PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2AF2 JUMPI PUSH2 0x2AF2 PUSH2 0x34A2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2B1B JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x2C79 JUMPI PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x2B3D JUMPI PUSH2 0x2B3D PUSH2 0x3671 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD SLOAD DUP8 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP9 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x2B6D JUMPI PUSH2 0x2B6D PUSH2 0x3671 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x2BA0 JUMPI PUSH2 0x2BA0 PUSH2 0x3671 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x1 ADD SLOAD DUP7 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2BC2 JUMPI PUSH2 0x2BC2 PUSH2 0x3671 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP7 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x2BE0 JUMPI PUSH2 0x2BE0 PUSH2 0x3671 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2C30 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2C54 SWAP2 SWAP1 PUSH2 0x3710 JUMP JUMPDEST DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2C66 JUMPI PUSH2 0x2C66 PUSH2 0x3671 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x2B20 JUMP JUMPDEST POP PUSH0 PUSH2 0x2C83 PUSH2 0x7AB JUMP JUMPDEST SWAP1 POP DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF0BF7714 DUP3 DUP10 DUP10 PUSH1 0x7 SLOAD DUP15 DUP16 PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 MLOAD DUP9 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2CD3 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x389E JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2CEA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2CFC JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH0 JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x2EB0 JUMPI DUP8 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x2D1E JUMPI PUSH2 0x2D1E PUSH2 0x3671 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2D6E JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2D92 SWAP2 SWAP1 PUSH2 0x3710 JUMP JUMPDEST DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2DA4 JUMPI PUSH2 0x2DA4 PUSH2 0x3671 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP6 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x2DC2 JUMPI PUSH2 0x2DC2 PUSH2 0x3671 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2DDC JUMPI PUSH2 0x2DDC PUSH2 0x3671 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD GT ISZERO PUSH2 0x2E4B JUMPI DUP6 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x2DFC JUMPI PUSH2 0x2DFC PUSH2 0x3671 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2E16 JUMPI PUSH2 0x2E16 PUSH2 0x3671 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2E28 SWAP2 SWAP1 PUSH2 0x374E JUMP JUMPDEST DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2E3A JUMPI PUSH2 0x2E3A PUSH2 0x3671 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x2EA8 JUMP JUMPDEST DUP5 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x2E5D JUMPI PUSH2 0x2E5D PUSH2 0x3671 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP7 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2E77 JUMPI PUSH2 0x2E77 PUSH2 0x3671 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2E89 SWAP2 SWAP1 PUSH2 0x374E JUMP JUMPDEST DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2E9B JUMPI PUSH2 0x2E9B PUSH2 0x3671 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x2D02 JUMP JUMPDEST POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x279B343370F587AF7FB675AE7C8578E9C8ABCC373236AD02C501A4771FE7A7B8 DUP9 PUSH1 0x40 MLOAD PUSH2 0x2EEA SWAP2 SWAP1 PUSH2 0x33A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP SWAP1 SWAP10 SWAP1 SWAP9 POP SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH0 SWAP1 PUSH2 0x19FE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 DUP5 PUSH2 0xB30 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x2F45 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x2F3A SWAP2 SWAP1 PUSH2 0x3780 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x2FB5 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x2F97 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x600 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x2FD1 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x2FEF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x3034 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x306A JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x600 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3093 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x600 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x268C JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x3105 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH2 0x3120 PUSH1 0x2 DUP3 PUSH2 0x373B JUMP JUMPDEST PUSH2 0x2849 PUSH8 0xDE0B6B3A7640000 DUP7 PUSH2 0x365A JUMP JUMPDEST PUSH0 DUP3 DUP3 LT ISZERO PUSH2 0x314C JUMPI PUSH2 0x3145 DUP3 DUP6 PUSH2 0x374E JUMP JUMPDEST SWAP1 POP PUSH2 0x319F JUMP JUMPDEST PUSH2 0x3145 PUSH12 0x33B2E3C9FD0803CE8000000 PUSH8 0xDE0B6B3A7640000 PUSH2 0x3184 DUP9 DUP3 PUSH2 0x3174 DUP6 DUP10 PUSH2 0x365A JUMP JUMPDEST PUSH2 0x317E SWAP2 SWAP1 PUSH2 0x373B JUMP JUMPDEST SWAP1 PUSH2 0x31A8 JUMP JUMPDEST PUSH2 0x318E SWAP2 SWAP1 PUSH2 0x365A JUMP JUMPDEST PUSH2 0x3198 SWAP2 SWAP1 PUSH2 0x373B JUMP JUMPDEST DUP8 SWAP1 PUSH2 0x3113 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x31B4 PUSH1 0x2 DUP4 PUSH2 0x3908 JUMP JUMPDEST PUSH0 SUB PUSH2 0x31CC JUMPI PUSH12 0x33B2E3C9FD0803CE8000000 PUSH2 0x31CE JUMP JUMPDEST DUP3 JUMPDEST SWAP1 POP PUSH2 0x31DB PUSH1 0x2 DUP4 PUSH2 0x373B JUMP JUMPDEST SWAP2 POP JUMPDEST DUP2 ISZERO PUSH2 0x8A6 JUMPI PUSH2 0x31EE DUP4 DUP5 PUSH2 0x321F JUMP JUMPDEST SWAP3 POP PUSH2 0x31FB PUSH1 0x2 DUP4 PUSH2 0x3908 JUMP JUMPDEST ISZERO PUSH2 0x320D JUMPI PUSH2 0x320A DUP2 DUP5 PUSH2 0x321F JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH2 0x3218 PUSH1 0x2 DUP4 PUSH2 0x373B JUMP JUMPDEST SWAP2 POP PUSH2 0x31DE JUMP JUMPDEST PUSH0 PUSH12 0x33B2E3C9FD0803CE8000000 PUSH2 0x283F PUSH1 0x2 DUP3 PUSH2 0x373B JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x3281 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3294 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x19FE DUP2 PUSH2 0x326D JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP5 ADD PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x32CE JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x32B2 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0x19FE PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x329F JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x32FC JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x3307 DUP2 PUSH2 0x326D JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3327 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x3332 DUP2 PUSH2 0x326D JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x3342 DUP2 PUSH2 0x326D JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH0 PUSH2 0x1038 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x329F JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP5 ADD PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x32CE JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x337E JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0x19FE PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x336B JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x33C8 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x33D3 DUP2 PUSH2 0x326D JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH2 0x33E3 DUP2 PUSH2 0x326D JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH2 0x33FA DUP2 PUSH2 0x326D JUMP JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP1 SWAP4 POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 DUP3 MSTORE DUP4 MLOAD SWAP1 DUP3 ADD DUP2 SWAP1 MSTORE PUSH0 SWAP1 PUSH1 0x20 SWAP1 PUSH1 0x60 DUP5 ADD SWAP1 DUP3 DUP8 ADD DUP5 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x343F JUMPI DUP2 MLOAD ISZERO ISZERO DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x3421 JUMP JUMPDEST POP POP POP DUP4 DUP2 SUB PUSH1 0x20 DUP6 ADD MSTORE PUSH2 0xCEF DUP2 DUP7 PUSH2 0x329F JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3464 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x347C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x3487 DUP2 PUSH2 0x326D JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x3497 DUP2 PUSH2 0x326D JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x34DE JUMPI PUSH2 0x34DE PUSH2 0x34A2 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0x34FE JUMPI PUSH2 0x34FE PUSH2 0x34A2 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3519 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x3524 DUP2 PUSH2 0x326D JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 DUP2 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x353F JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP5 ADD PUSH1 0x1F DUP2 ADD DUP7 SGT PUSH2 0x354F JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0x3562 PUSH2 0x355D DUP3 PUSH2 0x34E6 JUMP JUMPDEST PUSH2 0x34B6 JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH1 0x5 SWAP2 SWAP1 SWAP2 SHL DUP3 ADD DUP4 ADD SWAP1 DUP4 DUP2 ADD SWAP1 DUP9 DUP4 GT ISZERO PUSH2 0x3580 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP3 DUP5 ADD SWAP3 JUMPDEST DUP3 DUP5 LT ISZERO PUSH2 0x359E JUMPI DUP4 CALLDATALOAD DUP3 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH2 0x3585 JUMP JUMPDEST DUP1 SWAP6 POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH0 PUSH2 0x35BF PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x329F JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x319F DUP2 DUP6 PUSH2 0x329F JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x35E5 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x7A5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3613 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x19FE DUP2 PUSH2 0x326D JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xE SWAP1 DUP3 ADD MSTORE PUSH14 0x4F6E6C7920506572697068657279 PUSH1 0x90 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x8A6 JUMPI PUSH2 0x8A6 PUSH2 0x3646 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3696 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x36AB JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x36BB JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH2 0x36C9 PUSH2 0x355D DUP3 PUSH2 0x34E6 JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH1 0x5 SWAP2 SWAP1 SWAP2 SHL DUP3 ADD DUP4 ADD SWAP1 DUP4 DUP2 ADD SWAP1 DUP8 DUP4 GT ISZERO PUSH2 0x36E7 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP3 DUP5 ADD SWAP3 JUMPDEST DUP3 DUP5 LT ISZERO PUSH2 0x3705 JUMPI DUP4 MLOAD DUP3 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH2 0x36EC JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3720 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 PUSH2 0x3749 JUMPI PUSH2 0x3749 PUSH2 0x3727 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x8A6 JUMPI PUSH2 0x8A6 PUSH2 0x3646 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3771 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x19FE JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x8A6 JUMPI PUSH2 0x8A6 PUSH2 0x3646 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x37A3 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x19FE JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x37ED JUMPI DUP2 PUSH0 NOT DIV DUP3 GT ISZERO PUSH2 0x37D3 JUMPI PUSH2 0x37D3 PUSH2 0x3646 JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0x37E0 JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x37B8 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x3803 JUMPI POP PUSH1 0x1 PUSH2 0x8A6 JUMP JUMPDEST DUP2 PUSH2 0x380F JUMPI POP PUSH0 PUSH2 0x8A6 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x3825 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x382F JUMPI PUSH2 0x384B JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x8A6 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x3840 JUMPI PUSH2 0x3840 PUSH2 0x3646 JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x8A6 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x386E JUMPI POP DUP2 DUP2 EXP PUSH2 0x8A6 JUMP JUMPDEST PUSH2 0x3878 DUP4 DUP4 PUSH2 0x37B3 JUMP JUMPDEST DUP1 PUSH0 NOT DIV DUP3 GT ISZERO PUSH2 0x388B JUMPI PUSH2 0x388B PUSH2 0x3646 JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x19FE DUP4 DUP4 PUSH2 0x37F5 JUMP JUMPDEST PUSH1 0xE0 DUP2 MSTORE PUSH0 PUSH2 0x38B0 PUSH1 0xE0 DUP4 ADD DUP11 PUSH2 0x329F JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x38C2 DUP2 DUP11 PUSH2 0x336B JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x38D6 DUP2 DUP10 PUSH2 0x329F JUMP JUMPDEST PUSH1 0x60 DUP5 ADD SWAP8 SWAP1 SWAP8 MSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x80 DUP3 ADD MSTORE SWAP2 DUP4 AND PUSH1 0xA0 DUP4 ADD MSTORE SWAP1 SWAP2 AND PUSH1 0xC0 SWAP1 SWAP2 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x3916 JUMPI PUSH2 0x3916 PUSH2 0x3727 JUMP JUMPDEST POP MOD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHR 0xCD MSTORE8 0xB5 0x4C SGT 0x4B CALLVALUE 0xE4 0xEB 0xD8 0xD2 SELFDESTRUCT PUSH4 0xD2D5F0CE PUSH0 EXP SWAP16 PUSH16 0xE046EBFF11FFA5E6B42F64736F6C6343 STOP ADDMOD NOT STOP CALLER ","sourceMap":"1808:29167:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89:8;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6012:993:15;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;22813:212::-;;;:::i;4293:186:8:-;;;;;;:::i;:::-;;:::i;:::-;;;2020:14:22;;2013:22;1995:41;;1983:2;1968:18;4293:186:8;1855:187:22;12862:310:15;;;;;;:::i;:::-;;:::i;:::-;;;2193:25:22;;;2181:2;2166:18;12862:310:15;2047:177:22;3144:97:8;3222:12;;3144:97;;14403:294:15;;;:::i;22001:145::-;;;:::i;24043:284::-;;;:::i;5039:244:8:-;;;;;;:::i;:::-;;:::i;10839:309:15:-;;;;;;:::i;:::-;;:::i;3002:82:8:-;;;3075:2;2832:36:22;;2820:2;2805:18;3002:82:8;2690:184:22;21661:211:15;;;:::i;:::-;;;;;;;;:::i;19050:389::-;;;;;;:::i;:::-;;:::i;23586:279::-;;;:::i;:::-;;;;;;;:::i;7804:967::-;;;;;;:::i;:::-;;:::i;3299:116:8:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3390:18:8;3364:7;3390:18;;;;;;;;;;;;3299:116;2055:33:15;;;;;-1:-1:-1;;;;;2055:33:15;;;;;;-1:-1:-1;;;;;4745:32:22;;;4727:51;;4715:2;4700:18;2055:33:15;4555:229:22;1932:22:15;;;;;;20063:864;;;:::i;:::-;;;;;;;;:::i;17316:1335::-;;;;;;:::i;:::-;;:::i;30626:346::-;;;:::i;2276:93:8:-;;;:::i;9161:1670:15:-;;;;;;:::i;:::-;;:::i;3610:178:8:-;;;;;;:::i;:::-;;:::i;23211:231:15:-;;;;;;:::i;:::-;;:::i;1961:18::-;;;;;;1986:24;;;;;-1:-1:-1;;;;;1986:24:15;;;21115:275;;;;;;:::i;:::-;;:::i;1863:29::-;;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;6227:32:22;;;6209:51;;6291:2;6276:18;;6269:34;;;;6319:18;;;6312:34;6197:2;6182:18;1863:29:15;6007:345:22;3846:140:8;;;;;;:::i;:::-;-1:-1:-1;;;;;3952:18:8;;;3926:7;3952:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3846:140;14908:1387:15;;;;;;:::i;:::-;;:::i;22265:414::-;;;:::i;19497:281::-;;;:::i;:::-;;;;;;;;:::i;2074:89:8:-;2119:13;2151:5;2144:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89;:::o;6012:993:15:-;6088:16;4217:17;4237:8;;;;;;;;;-1:-1:-1;;;;;4237:8:15;-1:-1:-1;;;;;4237:31:15;;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4217:53;-1:-1:-1;4289:10:15;-1:-1:-1;;;;;4289:23:15;;;4281:50;;;;-1:-1:-1;;;4281:50:15;;;;;;;:::i;:::-;;;;;;;;;6125:19:::1;:17;:19::i;:::-;6117:52;;;::::0;-1:-1:-1;;;6117:52:15;;10037:2:22;6117:52:15::1;::::0;::::1;10019:21:22::0;10076:2;10056:18;;;10049:30;-1:-1:-1;;;10095:18:22;;;10088:50;10155:18;;6117:52:15::1;9835:344:22::0;6117:52:15::1;6181:22;6205:27:::0;6236:24:::1;:22;:24::i;:::-;6180:80;;;;6281:29;6313:50;6336:14;6352:10;6313:22;:50::i;:::-;6281:82;;6382:27;6412:43;6442:12;6412:29;:43::i;:::-;6382:73;;6491:13;;6468:36;;;;;:::i;:::-;6558:10;:17:::0;6468:36;;-1:-1:-1;6517:24:15::1;::::0;-1:-1:-1;;;;;6544:32:15;::::1;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;-1:-1:-1;6544:32:15::1;;6517:59;;6594:9;6589:188;6613:12;:19;6609:1;:23;6589:188;;;6676:1;6658:12;6671:1;6658:15;;;;;;;;:::i;:::-;;;;;;;:19;6654:112;;;6711:39;6731:1;6734:12;6747:1;6734:15;;;;;;;;:::i;:::-;;;;;;;6711:19;:39::i;:::-;6698:7;6706:1;6698:10;;;;;;;;:::i;:::-;;;;;;:52;;;::::0;::::1;6654:112;6634:3;;6589:188;;;;6789:36;6795:8;6805:19;6789:5;:36::i;:::-;6893:16;:14;:16::i;:::-;6945:10;-1:-1:-1::0;;;;;6927:43:15::1;;6957:12;6927:43;;;;;;:::i;:::-;;;;;;;;6990:7:::0;-1:-1:-1;;;;;4342:1:15::1;4206:145:::0;6012:993;;;:::o;22813:212::-;22857:16;22886:17;22906:8;;;;;;;;;-1:-1:-1;;;;;22906:8:15;-1:-1:-1;;;;;22906:31:15;;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;22957:60;;-1:-1:-1;;;22957:60:15;;23011:4;22957:60;;;4727:51:22;22886:53:15;;-1:-1:-1;;;;;;22957:45:15;;;;;4700:18:22;;22957:60:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;22957:60:15;;;;;;;;;;;;:::i;:::-;22950:67;;;22813:212;:::o;4293:186:8:-;4366:4;735:10:12;4420:31:8;735:10:12;4436:7:8;4445:5;4420:8;:31::i;:::-;4468:4;4461:11;;;4293:186;;;;;:::o;12862:310:15:-;12919:7;;12939:172;12963:10;:17;12959:21;;12939:172;;;13029:5;-1:-1:-1;;;;;13006:28:15;:10;13017:1;13006:13;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:19;-1:-1:-1;;;;;13006:19:15;:28;13002:98;;13062:10;13073:1;13062:13;;;;;;;;:::i;:::-;;;;;;;;;;;:22;;;13055:29;;;12862:310;;;:::o;13002:98::-;12982:3;;12939:172;;;-1:-1:-1;13128:1:15;;12862:310;-1:-1:-1;;12862:310:15:o;14403:294::-;14522:10;:17;14450:16;;14479:26;;-1:-1:-1;;;;;14508:32:15;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;14508:32:15;;14479:61;;14556:9;14551:112;14575:10;:17;14571:21;;14551:112;;;14629:10;14640:1;14629:13;;;;;;;;:::i;:::-;;;;;;;;;;;:22;;;14614:9;14624:1;14614:12;;;;;;;;:::i;:::-;;;;;;;;;;:37;14594:3;;14551:112;;22001:145;22045:7;22066:16;22088:24;:22;:24::i;:::-;-1:-1:-1;22065:47:15;22001:145;-1:-1:-1;;22001:145:15:o;24043:284::-;24158:10;:17;24088:16;;24117:24;;-1:-1:-1;;;;;24144:32:15;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;24144:32:15;;24117:59;;24192:9;24187:108;24211:10;:17;24207:21;;24187:108;;;24263:10;24274:1;24263:13;;;;;;;;:::i;:::-;;;;;;;;;;;:20;;;24250:7;24258:1;24250:10;;;;;;;;:::i;:::-;;;;;;;;;;:33;24230:3;;24187:108;;5039:244:8;5126:4;735:10:12;5182:37:8;5198:4;735:10:12;5213:5:8;5182:15;:37::i;:::-;5229:26;5239:4;5245:2;5249:5;5229:9;:26::i;:::-;-1:-1:-1;5272:4:8;;5039:244;-1:-1:-1;;;;5039:244:8:o;10839:309:15:-;10899:7;;10919:170;10943:10;:17;10939:21;;10919:170;;;11009:5;-1:-1:-1;;;;;10986:28:15;:10;10997:1;10986:13;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:19;-1:-1:-1;;;;;10986:19:15;:28;10982:96;;11042:10;11053:1;11042:13;;;;;;;;:::i;:::-;;;;;;;;;;;:20;;;11035:27;;;10839:309;;;:::o;10982:96::-;10962:3;;10919:170;;21661:211;21717:16;21735:27;21800:24;:22;:24::i;:::-;21775:49;;;;-1:-1:-1;21661:211:15;-1:-1:-1;21661:211:15:o;19050:389::-;19145:7;19165:28;19212:8;;;;;;;;;-1:-1:-1;;;;;19212:8:15;-1:-1:-1;;;;;19212:24:15;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;19165:74;;19296:1;-1:-1:-1;;;;;19258:40:15;:8;;;;;;;;;-1:-1:-1;;;;;19258:8:15;-1:-1:-1;;;;;19258:24:15;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;19258:40:15;;19250:75;;;;-1:-1:-1;;;19250:75:15;;11709:2:22;19250:75:15;;;11691:21:22;11748:2;11728:18;;;11721:30;-1:-1:-1;;;11767:18:22;;;11760:52;11829:18;;19250:75:15;11507:346:22;19250:75:15;19356:48;;-1:-1:-1;;;19356:48:15;;-1:-1:-1;;;;;12116:15:22;;;19356:48:15;;;12098:34:22;12168:15;;;12148:18;;;12141:43;12200:18;;;12193:34;;;19336:17:15;;19356:20;;;;;;12033:18:22;;19356:48:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;19336:68;19050:389;-1:-1:-1;;;;;;19050:389:15:o;23586:279::-;23699:10;:17;23630:16;;23659:23;;-1:-1:-1;;;;;23685:32:15;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;23685:32:15;;23659:58;;23733:9;23728:106;23752:10;:17;23748:21;;23728:106;;;23803:10;23814:1;23803:13;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:19;23791:9;;-1:-1:-1;;;;;23803:19:15;;;;23791:6;;23798:1;;23791:9;;;;;;:::i;:::-;-1:-1:-1;;;;;23791:31:15;;;:9;;;;;;;;;;;:31;23771:3;;23728:106;;7804:967;7962:17;2356:21:13;:19;:21::i;:::-;8011:8:15::1;::::0;:21:::1;::::0;;-1:-1:-1;;;8011:21:15;;;;7992:16:::1;::::0;-1:-1:-1;;;;;8011:8:15::1;::::0;:19:::1;::::0;:21:::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;:8;:21:::1;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7992:40;;8064:7;-1:-1:-1::0;;;;;8051:20:15::1;:9;-1:-1:-1::0;;;;;8051:20:15::1;::::0;8043:59:::1;;;::::0;-1:-1:-1;;;8043:59:15;;12629:2:22;8043:59:15::1;::::0;::::1;12611:21:22::0;12668:2;12648:18;;;12641:30;12707:28;12687:18;;;12680:56;12753:18;;8043:59:15::1;12427:350:22::0;8043:59:15::1;8130:1;8121:6;:10;8113:55;;;::::0;-1:-1:-1;;;8113:55:15;;12984:2:22;8113:55:15::1;::::0;::::1;12966:21:22::0;;;13003:18;;;12996:30;13062:34;13042:18;;;13035:62;13114:18;;8113:55:15::1;12782:356:22::0;8113:55:15::1;8179:16;:14;:16::i;:::-;8206:22;8231:52;8256:9;8267:7;8276:6;8231:24;:52::i;:::-;8206:77;;8330:14;8302:24;8318:7;8302:15;:24::i;:::-;:42;;8294:77;;;::::0;-1:-1:-1;;;8294:77:15;;13345:2:22;8294:77:15::1;::::0;::::1;13327:21:22::0;13384:2;13364:18;;;13357:30;-1:-1:-1;;;13403:18:22;;;13396:52;13465:18;;8294:77:15::1;13143:346:22::0;8294:77:15::1;8384:11;8428:5;8399:25;8416:8:::0;8399:14;:25:::1;:::i;:::-;8398:35;;;;:::i;:::-;8384:49:::0;-1:-1:-1;8456:20:15::1;8384:49:::0;8456:14;:20:::1;:::i;:::-;8444:32;;8509:1;8497:9;:13;8489:63;;;::::0;-1:-1:-1;;;8489:63:15;;14086:2:22;8489:63:15::1;::::0;::::1;14068:21:22::0;14125:2;14105:18;;;14098:30;14164:34;14144:18;;;14137:62;-1:-1:-1;;;14215:18:22;;;14208:35;14260:19;;8489:63:15::1;13884:401:22::0;8489:63:15::1;8647:16;:14;:16::i;:::-;8707:7;-1:-1:-1::0;;;;;8681:53:15::1;8696:9;-1:-1:-1::0;;;;;8681:53:15::1;8686:8;-1:-1:-1::0;;;;;8681:53:15::1;;8716:6;8724:9;8681:53;;;;;;14464:25:22::0;;;14520:2;14505:18;;14498:34;14452:2;14437:18;;14290:248;8681:53:15::1;;;;;;;;8747:16;;;2398:20:13::0;1713:1;2924:7;:21;2744:208;2398:20;7804:967:15;;;;;;:::o;20063:864::-;20108:24;20134:27;20175:14;20191:27;20222:24;:22;:24::i;:::-;20277:10;:17;20174:72;;-1:-1:-1;20174:72:15;-1:-1:-1;20277:17:15;-1:-1:-1;;;;;20320:21:15;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;20320:21:15;;20307:34;;20379:9;-1:-1:-1;;;;;20365:24:15;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;20365:24:15;;20352:37;;20407:9;20402:474;20426:9;20422:1;:13;20402:474;;;20457:21;20507:6;20482:10;20493:1;20482:13;;;;;;;;:::i;:::-;;;;;;;20498:5;20482:21;;;;:::i;:::-;20481:32;;;;:::i;:::-;20457:56;;20528:20;20551:10;20562:1;20551:13;;;;;;;;:::i;:::-;;;;;;;;;;;:20;;;20528:43;;20608:12;20592:13;:28;20588:277;;;20657:28;20673:12;20657:13;:28;:::i;:::-;20641:10;20652:1;20641:13;;;;;;;;:::i;:::-;;;;;;:44;;;;;20720:4;20704:10;20715:1;20704:13;;;;;;;;:::i;:::-;:20;;;:13;;;;;;;;;;;:20;20588:277;;;20781:28;20796:13;20781:12;:28;:::i;:::-;20765:10;20776:1;20765:13;;;;;;;;:::i;:::-;;;;;;:44;;;;;20844:5;20828:10;20839:1;20828:13;;;;;;;;:::i;:::-;:21;;;:13;;;;;;;;;;;:21;20588:277;-1:-1:-1;;20437:3:15;;20402:474;;;;20888:31;;;20063:864;;:::o;17316:1335::-;17374:16;4217:17;4237:8;;;;;;;;;-1:-1:-1;;;;;4237:8:15;-1:-1:-1;;;;;4237:31:15;;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4217:53;-1:-1:-1;4289:10:15;-1:-1:-1;;;;;4289:23:15;;;4281:50;;;;-1:-1:-1;;;4281:50:15;;;;;;;:::i;:::-;17422:8:::1;::::0;:21:::1;::::0;;-1:-1:-1;;;17422:21:15;;;;17403:16:::1;::::0;-1:-1:-1;;;;;17422:8:15::1;::::0;:19:::1;::::0;:21:::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;:8;:21:::1;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;17403:40;;17454:17;17474:8;;;;;;;;;-1:-1:-1::0;;;;;17474:8:15::1;-1:-1:-1::0;;;;;17474:31:15::1;;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;17554:4;17520:13;3390:18:8::0;;;;;;;;;;;17454:53:15;;-1:-1:-1;17579:9:15;17571:50:::1;;;::::0;-1:-1:-1;;;17571:50:15;;14745:2:22;17571:50:15::1;::::0;::::1;14727:21:22::0;14784:2;14764:18;;;14757:30;14823;14803:18;;;14796:58;14871:18;;17571:50:15::1;14543:352:22::0;17571:50:15::1;17634:19;17656:13;3222:12:8::0;;;3144:97;17656:13:15::1;17634:35;;17702:1;17688:11;:15;17680:40;;;::::0;-1:-1:-1;;;17680:40:15;;15102:2:22;17680:40:15::1;::::0;::::1;15084:21:22::0;15141:2;15121:18;;;15114:30;-1:-1:-1;;;15160:18:22;;;15153:42;15212:18;;17680:40:15::1;14900:336:22::0;17680:40:15::1;17774:10;:17:::0;17733:24:::1;::::0;-1:-1:-1;;;;;17760:32:15;::::1;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;-1:-1:-1;17760:32:15::1;-1:-1:-1::0;17733:59:15;-1:-1:-1;17803:11:15::1;17838:5;17818:16;17826:8:::0;17818:5;:16:::1;:::i;:::-;17817:26;;;;:::i;:::-;17803:40:::0;-1:-1:-1;17854:21:15::1;17878:11;17803:40:::0;17878:5;:11:::1;:::i;:::-;17854:35;;17907:9;17902:304;17926:10;:17:::0;17922:21;::::1;17902:304;;;17965:20;18011:9;-1:-1:-1::0;;;;;17988:49:15::1;;18064:4;18088:10;18099:1;18088:13;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;;::::1;;:19:::0;17988:134:::1;::::0;::::1;::::0;;;-1:-1:-1;;;;;;17988:134:15;;;-1:-1:-1;;;;;15471:15:22;;;17988:134:15::1;::::0;::::1;15453:34:22::0;18088:19:15;::::1;15503:18:22::0;;;15496:43;15388:18;;17988:134:15::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;17965:157:::0;-1:-1:-1;18183:11:15;18151:28:::1;18166:13:::0;17965:157;18151:28:::1;:::i;:::-;18150:44;;;;:::i;:::-;18137:7;18145:1;18137:10;;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;:57;-1:-1:-1;17945:3:15::1;;17902:304;;;-1:-1:-1::0;18244:4:15::1;3364:7:8::0;3390:18;;;;;;;;;;;18254:13:15;-1:-1:-1;18226:41:15::1;18218:83;;;::::0;-1:-1:-1;;;18218:83:15;;15752:2:22;18218:83:15::1;::::0;::::1;15734:21:22::0;15791:2;15771:18;;;15764:30;15830:31;15810:18;;;15803:59;15879:18;;18218:83:15::1;15550:353:22::0;18218:83:15::1;18333:8;::::0;:22:::1;::::0;;-1:-1:-1;;;18333:22:15;;;;18314:16:::1;::::0;-1:-1:-1;;;;;18333:8:15::1;::::0;:20:::1;::::0;:22:::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;:8;:22:::1;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;18392:45;::::0;-1:-1:-1;;;18392:45:15;;-1:-1:-1;;;;;16100:32:22;;18392:45:15::1;::::0;::::1;16082:51:22::0;16149:18;;;16142:34;;;18314:41:15;;-1:-1:-1;18366:23:15::1;::::0;18407:4:::1;::::0;18392:30:::1;::::0;16055:18:22;;18392:45:15::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;18366:71;;18456:18;18448:50;;;::::0;-1:-1:-1;;;18448:50:15;;16671:2:22;18448:50:15::1;::::0;::::1;16653:21:22::0;16710:2;16690:18;;;16683:30;-1:-1:-1;;;16729:18:22;;;16722:49;16788:18;;18448:50:15::1;16469:343:22::0;18448:50:15::1;18511:35;18525:4;18532:13;18511:5;:35::i;:::-;18559:16;:14;:16::i;:::-;18598:2;-1:-1:-1::0;;;;;18593:23:15::1;;18602:13;18593:23;;;;2193:25:22::0;;2181:2;2166:18;;2047:177;18593:23:15::1;;;;;;;;-1:-1:-1::0;18636:7:15;;17316:1335;-1:-1:-1;;;;;;;;;;17316:1335:15:o;30626:346::-;30676:4;30694:24;30720:27;30751:14;:12;:14::i;:::-;30693:72;;;;30781:9;30776:166;30800:10;:17;30796:1;:21;30776:166;;;30843:10;30854:1;30843:13;;;;;;;;:::i;:::-;;;;;;;:40;;;;;30876:7;;30860:10;30871:1;30860:13;;;;;;;;:::i;:::-;;;;;;;:23;30843:40;30839:92;;;30911:4;30904:11;;;;;30626:346;:::o;30839:92::-;30819:3;;30776:166;;;;30959:5;30952:12;;;;30626:346;:::o;2276:93:8:-;2323:13;2355:7;2348:14;;;;;:::i;9161:1670:15:-;9302:7;9322:17;9342:40;9355:9;9366:7;9375:6;9342:12;:40::i;:::-;9322:60;-1:-1:-1;9522:7:15;9555:9;9509:10;9610:27;9679:24;:22;:24::i;:::-;9648:55;;-1:-1:-1;9648:55:15;-1:-1:-1;9714:30:15;9787:5;9648:55;9748:18;9763:2;9748:14;:18::i;:::-;:35;;;;:::i;:::-;9747:45;;;;:::i;:::-;9714:78;;9803:36;9882:5;9864:14;9843:18;9858:2;9843:14;:18::i;:::-;:35;;;;:::i;:::-;9842:45;;;;:::i;:::-;9803:84;;9900:6;9909;9900:15;;9926:18;9947:240;9971:15;;10001;;10031:3;;10049:11;;10075:22;10112:28;10155:1;10171:5;9947:9;:240::i;:::-;9926:261;;10198:32;10275:5;10257:14;10234:20;10249:4;10234:14;:20::i;:::-;:37;;;;:::i;:::-;10233:47;;;;:::i;:::-;10198:82;;10291:38;10374:5;10356:14;10333:20;10348:4;10333:14;:20::i;:::-;:37;;;;:::i;:::-;10332:47;;;;:::i;:::-;10291:88;;10392:20;10415:243;10439:15;;10469;;10499:3;;10517:11;;10543:24;10582:30;10627:1;10643:4;10415:9;:243::i;:::-;10392:266;;10671:24;10698:43;10716:12;10730:10;10698:17;:43::i;:::-;10671:70;-1:-1:-1;10752:16:15;10771:24;:1;10671:70;10771:6;:24::i;:::-;10752:43;-1:-1:-1;;;;;;;;;;;;;;;9161:1670:15;;;;;:::o;3610:178:8:-;3679:4;735:10:12;3733:27:8;735:10:12;3750:2:8;3754:5;3733:9;:27::i;23211:231:15:-;23272:7;23292:17;23312:8;;;;;;;;;-1:-1:-1;;;;;23312:8:15;-1:-1:-1;;;;;23312:31:15;;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;23363:71;;-1:-1:-1;;;23363:71:15;;23421:4;23363:71;;;15453:34:22;-1:-1:-1;;;;;15523:15:22;;;15503:18;;;15496:43;23292:53:15;;-1:-1:-1;23363:49:15;;;;;;15388:18:22;;23363:71:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;23356:78;23211:231;-1:-1:-1;;;23211:231:15:o;21115:275::-;21182:7;21205:30;21239:24;:22;:24::i;:::-;21202:61;;;21295:13;:20;21282:10;:33;21274:65;;;;-1:-1:-1;;;21274:65:15;;17019:2:22;21274:65:15;;;17001:21:22;17058:2;17038:18;;;17031:30;-1:-1:-1;;;17077:18:22;;;17070:49;17136:18;;21274:65:15;16817:343:22;21274:65:15;21357:13;21371:10;21357:25;;;;;;;;:::i;:::-;;;;;;;21350:32;;;21115:275;;;:::o;1863:29::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1863:29:15;;;;-1:-1:-1;1863:29:15;:::o;14908:1387::-;14992:7;4217:17;4237:8;;;;;;;;;-1:-1:-1;;;;;4237:8:15;-1:-1:-1;;;;;4237:31:15;;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4217:53;-1:-1:-1;4289:10:15;-1:-1:-1;;;;;4289:23:15;;;4281:50;;;;-1:-1:-1;;;4281:50:15;;;;;;;:::i;:::-;15012:19:::1;15034:13;3222:12:8::0;;;3144:97;15034:13:15::1;15012:35;;15058:18;15091:26:::0;15120:13:::1;:11;:13::i;:::-;15173:16:::0;;15152:10:::1;:17:::0;15091:42;;-1:-1:-1;15152:37:15::1;15144:73;;;::::0;-1:-1:-1;;;15144:73:15;;17367:2:22;15144:73:15::1;::::0;::::1;17349:21:22::0;17406:2;17386:18;;;17379:30;17445:25;17425:18;;;17418:53;17488:18;;15144:73:15::1;17165:347:22::0;15144:73:15::1;15236:10;:17:::0;15228:43:::1;;;::::0;-1:-1:-1;;;15228:43:15;;17719:2:22;15228:43:15::1;::::0;::::1;17701:21:22::0;17758:1;17738:18;;;17731:29;-1:-1:-1;;;17776:18:22;;;17769:39;17825:18;;15228:43:15::1;17517:332:22::0;15228:43:15::1;15289:9;15284:367;15308:10;:17:::0;15304:21;::::1;15284:367;;;15347:13;15363:10;15374:1;15363:13;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;::::1;::::0;;::::1;;:19:::0;15442:9:::1;::::0;-1:-1:-1;;;;;15363:19:15;;::::1;::::0;-1:-1:-1;15442:9:15::1;15433:18:::0;;15429:108:::1;;15484:7;15492:1;15484:10;;;;;;;;:::i;:::-;-1:-1:-1::0;15513:8:15::1;::::0;-1:-1:-1;;;15513:8:15::1;15429:108;15563:38;15583:5;15590:7;15598:1;15590:10;;;;;;;;:::i;:::-;;;;;;;15563:19;:38::i;:::-;15551:50:::0;-1:-1:-1;15616:23:15::1;15551:50:::0;15616:23;::::1;:::i;:::-;;;15332:319;;15284:367;15327:3;;15284:367;;;;15684:1;15671:10;:14;15663:61;;;::::0;-1:-1:-1;;;15663:61:15;;18186:2:22;15663:61:15::1;::::0;::::1;18168:21:22::0;18225:2;18205:18;;;18198:30;18264:34;18244:18;;;18237:62;-1:-1:-1;;;18315:18:22;;;18308:32;18357:19;;15663:61:15::1;17984:398:22::0;15663:61:15::1;15737:14;15768:11;15783:1;15768:16:::0;15764:357:::1;;15823:13;::::0;15810:26:::1;::::0;:10;:26:::1;:::i;:::-;15801:35;;15764:357;;;15870:22;15898:24;:22;:24::i;:::-;15869:53;;;15962:1;15945:14;:18;15937:69;;;::::0;-1:-1:-1;;;15937:69:15;;18589:2:22;15937:69:15::1;::::0;::::1;18571:21:22::0;18628:2;18608:18;;;18601:30;18667:34;18647:18;;;18640:62;-1:-1:-1;;;18718:18:22;;;18711:36;18764:19;;15937:69:15::1;18387:402:22::0;15937:69:15::1;16095:13;::::0;16078:30:::1;::::0;:14;:30:::1;:::i;:::-;16062:11;16045:13;;16032:10;:26;;;;:::i;:::-;16031:42;;;;:::i;:::-;16030:79;;;;:::i;:::-;16021:88;;15854:267;15764:357;16139:6;16149:1;16139:11:::0;16131:37:::1;;;::::0;-1:-1:-1;;;16131:37:15;;18996:2:22;16131:37:15::1;::::0;::::1;18978:21:22::0;19035:2;19015:18;;;19008:30;-1:-1:-1;;;19054:18:22;;;19047:43;19107:18;;16131:37:15::1;18794:337:22::0;16131:37:15::1;16181:17;16187:2;16191:6;16181:5;:17::i;:::-;16211:16;:14;:16::i;:::-;16250:2;-1:-1:-1::0;;;;;16245:16:15::1;;16254:6;16245:16;;;;2193:25:22::0;;2181:2;2166:18;;2047:177;16245:16:15::1;;;;;;;;16281:6:::0;14908:1387;-1:-1:-1;;;;;;;14908:1387:15:o;22265:414::-;22309:7;22329:19;22366:9;;;;;;;;;-1:-1:-1;;;;;22366:9:15;-1:-1:-1;;;;;22351:34:15;;:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;22329:58;;;-1:-1:-1;22398:14:15;22422:16;22329:58;22422:2;:16;:::i;:::-;22415:24;;:2;:24;:::i;:::-;22398:41;;22451:16;22473:24;:22;:24::i;:::-;22450:47;;;22508:19;22530:13;3222:12:8;;;3144:97;22530:13:15;22508:35;;22558:11;22573:1;22558:16;22554:57;;22598:1;22591:8;;;;;;22265:414;:::o;22554:57::-;22667:3;;22652:11;22631:17;22642:6;22631:8;:17;:::i;:::-;22630:33;;;;:::i;:::-;22629:41;;;;:::i;:::-;22621:50;;;;;;22265:414;:::o;19497:281::-;19592:29;19623:32;4217:17;4237:8;;;;;;;;;-1:-1:-1;;;;;4237:8:15;-1:-1:-1;;;;;4237:31:15;;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4217:53;-1:-1:-1;4289:10:15;-1:-1:-1;;;;;4289:23:15;;;4281:50;;;;-1:-1:-1;;;4281:50:15;;;;;;;:::i;:::-;19681:19:::1;:17;:19::i;:::-;19673:52;;;::::0;-1:-1:-1;;;19673:52:15;;10037:2:22;19673:52:15::1;::::0;::::1;10019:21:22::0;10076:2;10056:18;;;10049:30;-1:-1:-1;;;10095:18:22;;;10088:50;10155:18;;19673:52:15::1;9835:344:22::0;19673:52:15::1;19743:27;:25;:27::i;:::-;19736:34;;;;4206:145:::0;19497:281;;:::o;24566:755::-;24707:10;:17;24623:22;;24647:27;;24707:17;-1:-1:-1;;;;;24748:24:15;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;24748:24:15;;24735:37;;24788:9;24783:485;24807:9;24803:1;:13;24783:485;;;24838:13;24854:10;24865:1;24854:13;;;;;;;;:::i;:::-;;;;;;;;;;;;;:19;-1:-1:-1;;;;;24854:19:15;;-1:-1:-1;24911:31:15;24854:19;24911:15;:31::i;:::-;24982:9;;24888:54;;-1:-1:-1;;;;;;24982:9:15;;;24964:27;;;;24959:252;;25029:12;25013:10;25024:1;25013:13;;;;;;;;:::i;:::-;;;;;;:28;;;;;24959:252;;;25082:17;25102:49;25130:5;25138:12;25102:19;:49::i;:::-;25082:69;;25186:9;25170:10;25181:1;25170:13;;;;;;;;:::i;:::-;;;;;;:25;;;;;25063:148;24959:252;25243:10;25254:1;25243:13;;;;;;;;:::i;:::-;;;;;;;25225:31;;;;;:::i;:::-;;-1:-1:-1;;;24818:3:15;;24783:485;;;;25278:35;24566:755;;:::o;28259:555::-;28463:10;:17;28392:29;;-1:-1:-1;;;;;28449:32:15;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;28449:32:15;;28434:47;;28497:9;28492:283;28516:10;:17;28512:21;;28492:283;;;28555:23;28623:5;28599:10;28610:1;28599:13;;;;;;;;:::i;:::-;;;;;;;;;;;:20;;;28582:14;:37;;;;:::i;:::-;28581:47;;;;:::i;:::-;28555:73;;28663:15;28647:10;28658:1;28647:13;;;;;;;;:::i;:::-;;;;;;;:31;28643:121;;;28735:10;28746:1;28735:13;;;;;;;;:::i;:::-;;;;;;;28717:15;:31;;;;:::i;:::-;28699:12;28712:1;28699:15;;;;;;;;:::i;:::-;;;;;;:49;;;;;28643:121;-1:-1:-1;28535:3:15;;28492:283;;27610:306;27719:27;;27759:113;27783:10;:17;27779:21;;27759:113;;;27845:12;27858:1;27845:15;;;;;;;;:::i;:::-;;;;;;;27822:38;;;;;:::i;:::-;;-1:-1:-1;27802:3:15;;27759:113;;29096:361;29235:9;;29208:10;:17;;29184:7;;-1:-1:-1;;;;;29235:9:15;;29208:10;29219:5;;29208:17;;;;;;:::i;:::-;;;;;;;;;;;;;;:23;-1:-1:-1;;;;;29208:23:15;:36;29204:60;;-1:-1:-1;29253:11:15;29246:18;;29204:60;29275:19;29297:57;29317:10;29328:5;29317:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:23;-1:-1:-1;;;;;29317:23:15;29342:11;29297:19;:57::i;:::-;29275:79;;29387:1;29373:11;:15;29365:55;;;;-1:-1:-1;;;29365:55:15;;20984:2:22;29365:55:15;;;20966:21:22;21023:2;21003:18;;;20996:30;21062:29;21042:18;;;21035:57;21109:18;;29365:55:15;20782:351:22;7721:208:8;-1:-1:-1;;;;;7791:21:8;;7787:91;;7835:32;;-1:-1:-1;;;7835:32:8;;7864:1;7835:32;;;4727:51:22;4700:18;;7835:32:8;4555:229:22;7787:91:8;7887:35;7903:1;7907:7;7916:5;7887:7;:35::i;:::-;7721:208;;:::o;13276:1119:15:-;13323:24;13349:27;13380:14;:12;:14::i;:::-;13322:72;;;;13412:9;13407:981;13431:10;:17;13427:21;;13407:981;;;13470:24;13497:10;13508:1;13497:13;;;;;;;;:::i;:::-;;;;;;;;;;;:22;;;13470:49;;13540:10;13551:1;13540:13;;;;;;;;:::i;:::-;;;;;;;13536:841;;;13675:10;13686:1;13675:13;;;;;;;;:::i;:::-;;;;;;;13649:10;13660:1;13649:13;;;;;;;;:::i;:::-;;;;;;;;;;;:22;;;:39;;;;;;;:::i;:::-;;;;;;;;13794:16;13768:10;13779:1;13768:13;;;;;;;;:::i;:::-;;;;;;;;;;;:22;;;:42;;13760:85;;;;-1:-1:-1;;;13760:85:15;;21340:2:22;13760:85:15;;;21322:21:22;21379:2;21359:18;;;21352:30;21418:32;21398:18;;;21391:60;21468:18;;13760:85:15;21138:354:22;13760:85:15;13536:841;;;13993:10;14004:1;13993:13;;;;;;;;:::i;:::-;;;;;;;13968:10;13979:1;13968:13;;;;;;;;:::i;:::-;;;;;;;;;;;:22;;;:38;13964:398;;;14057:10;14068:1;14057:13;;;;;;;;:::i;:::-;;;;;;;14031:10;14042:1;14031:13;;;;;;;;:::i;:::-;;;;;;;;;;;:22;;;:39;;;;;;;:::i;:::-;;;;;;;;14185:16;14159:10;14170:1;14159:13;;;;;;;;:::i;:::-;;;;;;;;;;;:22;;;:42;;14151:86;;;;-1:-1:-1;;;14151:86:15;;21699:2:22;14151:86:15;;;21681:21:22;21738:2;21718:18;;;21711:30;21777:33;21757:18;;;21750:61;21828:18;;14151:86:15;21497:355:22;13964:398:15;14311:1;14286:10;14297:1;14286:13;;;;;;;;:::i;:::-;;;;;;;;;;;:22;;:26;;;;13964:398;-1:-1:-1;13450:3:15;;13407:981;;;;13311:1084;;13276:1119::o;8989:128:8:-;9073:37;9082:5;9089:7;9098:5;9105:4;9073:8;:37::i;10663:477::-;-1:-1:-1;;;;;3952:18:8;;;10762:24;3952:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;10828:37:8;;10824:310;;10904:5;10885:16;:24;10881:130;;;10936:60;;-1:-1:-1;;;10936:60:8;;-1:-1:-1;;;;;6227:32:22;;10936:60:8;;;6209:51:22;6276:18;;;6269:34;;;6319:18;;;6312:34;;;6182:18;;10936:60:8;6007:345:22;10881:130:8;11052:57;11061:5;11068:7;11096:5;11077:16;:24;11103:5;11052:8;:57::i;:::-;10752:388;10663:477;;;:::o;5656:300::-;-1:-1:-1;;;;;5739:18:8;;5735:86;;5780:30;;-1:-1:-1;;;5780:30:8;;5807:1;5780:30;;;4727:51:22;4700:18;;5780:30:8;4555:229:22;5735:86:8;-1:-1:-1;;;;;5834:16:8;;5830:86;;5873:32;;-1:-1:-1;;;5873:32:8;;5902:1;5873:32;;;4727:51:22;4700:18;;5873:32:8;4555:229:22;5830:86:8;5925:24;5933:4;5939:2;5943:5;5925:7;:24::i;2431:307:13:-;1755:1;2558:7;;:18;2554:86;;2599:30;;-1:-1:-1;;;2599:30:13;;;;;;;;;;;2554:86;1755:1;2714:7;:17;2431:307::o;8247:206:8:-;-1:-1:-1;;;;;8317:21:8;;8313:89;;8361:30;;-1:-1:-1;;;8361:30:8;;8388:1;8361:30;;;4727:51:22;4700:18;;8361:30:8;4555:229:22;8313:89:8;8411:35;8419:7;8436:1;8440:5;8411:7;:35::i;11156:1030:15:-;11398:7;;11438:20;:4;11448:9;11438;:20::i;:::-;11418:40;;11469:16;11500:7;11496:165;;;11535:35;11560:9;11536:17;11543:10;11536:4;:17;:::i;:::-;11535:24;;:35::i;:::-;11524:46;;11496:165;;;11614:35;11639:9;11615:17;11622:10;11615:4;:17;:::i;11614:35::-;11603:46;;11496:165;11740:8;11727:9;:21;11723:62;;11772:1;11765:8;;;;;;11723:62;11797:22;11822:46;11836:1;11839;11842:2;11846:10;11858:9;11822:13;:46::i;:::-;11797:71;;11879:21;11903:45;11917:1;11920;11923:2;11927:10;11939:8;11903:13;:45::i;:::-;11879:69;;11977:8;11965:9;:20;11961:218;;;12009:59;12047:20;12059:8;12047:9;:20;:::i;:::-;12010:30;12026:14;12010:13;:30;:::i;12009:59::-;12002:66;;;;;;;;11961:218;12108:59;12146:20;12157:9;12146:8;:20;:::i;:::-;12109:30;12126:13;12109:14;:30;:::i;11156:1030::-;;;;;;;;;;;:::o;12555:122::-;12629:7;12667:2;12656:8;12662:2;2185:8;12656;:::i;:::-;:13;;;;:::i;926:121:21:-;985:7;825:8;1024:7;1030:1;825:8;1024:7;:::i;:::-;1014:5;1018:1;1014;:5;:::i;:::-;1013:19;;;;:::i;:::-;1012:27;;;;:::i;30219:176:15:-;30369:9;;30306:19;;30345:42;;30358:9;;-1:-1:-1;;;;;30369:9:15;30380:6;30345:12;:42::i;25717:1654::-;25772:16;25790;25819:17;25839:8;;;;;;;;;-1:-1:-1;;;;;25839:8:15;-1:-1:-1;;;;;25839:31:15;;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;25819:53;;25883:18;25904:8;;;;;;;;;-1:-1:-1;;;;;25904:8:15;-1:-1:-1;;;;;25904:28:15;;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;25987:10;:17;25883:51;;-1:-1:-1;25947:23:15;;-1:-1:-1;;;;;25973:32:15;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;25973:32:15;-1:-1:-1;26057:10:15;:17;25947:58;;-1:-1:-1;26016:24:15;;-1:-1:-1;;;;;26043:32:15;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;26043:32:15;-1:-1:-1;26139:10:15;:17;26016:59;;-1:-1:-1;26086:36:15;;-1:-1:-1;;;;;26125:32:15;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;26125:32:15;-1:-1:-1;26224:10:15;:17;26086:71;;-1:-1:-1;26168:39:15;;-1:-1:-1;;;;;26210:32:15;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;26210:32:15;-1:-1:-1;26299:10:15;:17;26168:74;;-1:-1:-1;26253:29:15;;-1:-1:-1;;;;;26285:32:15;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;26285:32:15;-1:-1:-1;26377:10:15;:17;26253:64;;-1:-1:-1;26328:32:15;;-1:-1:-1;;;;;26363:32:15;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;26363:32:15;;26328:67;;26413:9;26408:232;26432:10;:17;26428:21;;26408:232;;;26483:10;26494:1;26483:13;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:19;26471:9;;-1:-1:-1;;;;;26483:19:15;;;;26471:6;;26478:1;;26471:9;;;;;;:::i;:::-;;;;;;:31;-1:-1:-1;;;;;26471:31:15;;;-1:-1:-1;;;;;26471:31:15;;;;;26530:10;26541:1;26530:13;;;;;;;;:::i;:::-;;;;;;;;;;;:20;;;26517:7;26525:1;26517:10;;;;;;;;:::i;:::-;;;;;;:33;;;;;26597:6;26604:1;26597:9;;;;;;;;:::i;:::-;;;;;;;;;;;26590:38;;-1:-1:-1;;;26590:38:15;;-1:-1:-1;;;;;4745:32:22;;;26590:38:15;;;4727:51:22;26590:27:15;;;;;;4700:18:22;;26590:38:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;26565:19;26585:1;26565:22;;;;;;;;:::i;:::-;;;;;;;;;;:63;26451:3;;26408:232;;;;26652:25;26680:13;:11;:13::i;:::-;26652:41;;26726:10;-1:-1:-1;;;;;26706:41:15;;26748:8;26758:6;26766:7;26775;;26784:9;26795;26806;;;;;;;;;-1:-1:-1;;;;;26806:9:15;26706:110;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26834:9;26829:428;26853:10;:17;26849:21;;26829:428;;;26927:6;26934:1;26927:9;;;;;;;;:::i;:::-;;;;;;;;;;;26920:38;;-1:-1:-1;;;26920:38:15;;-1:-1:-1;;;;;4745:32:22;;;26920:38:15;;;4727:51:22;26920:27:15;;;;;;4700:18:22;;26920:38:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;26892:22;26915:1;26892:25;;;;;;;;:::i;:::-;;;;;;:66;;;;;27007:19;27027:1;27007:22;;;;;;;;:::i;:::-;;;;;;;26979;27002:1;26979:25;;;;;;;;:::i;:::-;;;;;;;:50;26975:271;;;27096:19;27116:1;27096:22;;;;;;;;:::i;:::-;;;;;;;27068;27091:1;27068:25;;;;;;;;:::i;:::-;;;;;;;:50;;;;:::i;:::-;27050:12;27063:1;27050:15;;;;;;;;:::i;:::-;;;;;;:68;;;;;26975:271;;;27205:22;27228:1;27205:25;;;;;;;;:::i;:::-;;;;;;;27180:19;27200:1;27180:22;;;;;;;;:::i;:::-;;;;;;;:50;;;;:::i;:::-;27159:15;27175:1;27159:18;;;;;;;;:::i;:::-;;;;;;:71;;;;;26975:271;26872:3;;26829:428;;;;27293:10;-1:-1:-1;;;;;27274:38:15;;27305:6;27274:38;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;27333:12:15;;27347:15;;-1:-1:-1;25717:1654:15;-1:-1:-1;;;;;;;25717:1654:15:o;29758:160::-;29883:9;;29843:7;;29870:40;;-1:-1:-1;;;;;29883:9:15;29894:7;29903:6;29870:12;:40::i;6271:1107:8:-;-1:-1:-1;;;;;6360:18:8;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6356:540:8;;-1:-1:-1;6356:540:8;;-1:-1:-1;;;;;6570:15:8;;6548:19;6570:15;;;;;;;;;;;6603:19;;;6599:115;;;6649:50;;-1:-1:-1;;;6649:50:8;;-1:-1:-1;;;;;6227:32:22;;6649:50:8;;;6209:51:22;6276:18;;;6269:34;;;6319:18;;;6312:34;;;6182:18;;6649:50:8;6007:345:22;6599:115:8;-1:-1:-1;;;;;6834:15:8;;:9;:15;;;;;;;;;;6852:19;;;;6834:37;;6356:540;-1:-1:-1;;;;;6910:16:8;;6906:425;;7073:12;:21;;;;;;;6906:425;;;-1:-1:-1;;;;;7284:13:8;;:9;:13;;;;;;;;;;:22;;;;;;6906:425;7361:2;-1:-1:-1;;;;;7346:25:8;7355:4;-1:-1:-1;;;;;7346:25:8;;7365:5;7346:25;;;;2193::22;;2181:2;2166:18;;2047:177;7346:25:8;;;;;;;;6271:1107;;;:::o;9949:432::-;-1:-1:-1;;;;;10061:19:8;;10057:89;;10103:32;;-1:-1:-1;;;10103:32:8;;10132:1;10103:32;;;4727:51:22;4700:18;;10103:32:8;4555:229:22;10057:89:8;-1:-1:-1;;;;;10159:21:8;;10155:90;;10203:31;;-1:-1:-1;;;10203:31:8;;10231:1;10203:31;;;4727:51:22;4700:18;;10203:31:8;4555:229:22;10155:90:8;-1:-1:-1;;;;;10254:18:8;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;:35;;;10299:76;;;;10349:7;-1:-1:-1;;;;;10333:31:8;10342:5;-1:-1:-1;;;;;10333:31:8;;10358:5;10333:31;;;;2193:25:22;;2181:2;2166:18;;2047:177;10333:31:8;;;;;;;;9949:432;;;;:::o;1094:119:21:-;1153:7;1204:1;1194:5;1198:1;1204;1194:5;:::i;:::-;1182:7;825:8;1182:1;:7;:::i;12194:353:15:-;12357:7;12385:10;12381:1;:14;12377:163;;;12419:6;12424:1;12419:2;:6;:::i;:::-;12412:13;;;;12377:163;12465:47;2285:8;2185;12473:25;12496:1;2185:8;12475:7;2285:8;12475:1;:7;:::i;:::-;12474:15;;;;:::i;:::-;12473:22;;:25::i;:::-;:31;;;;:::i;:::-;12472:39;;;;:::i;:::-;12465:1;;:6;:47::i;12377:163::-;12194:353;;;;;;;:::o;1902:276:21:-;1961:9;1987:5;1991:1;1987;:5;:::i;:::-;1996:1;1987:10;:20;;870:8;1987:20;;;2000:1;1987:20;1983:24;-1:-1:-1;2025:6:21;2030:1;2025:6;;:::i;:::-;;;2020:151;2033:6;;2020:151;;2068:10;2073:1;2076;2068:4;:10::i;:::-;2064:14;-1:-1:-1;2099:5:21;2103:1;2099;:5;:::i;:::-;:10;2095:65;;2134:10;2139:1;2142;2134:4;:10::i;:::-;2130:14;;2095:65;2041:6;2046:1;2041:6;;:::i;:::-;;;2020:151;;2225:120;2284:9;870:8;2322:7;2328:1;870:8;2322:7;:::i;14:418:22:-;163:2;152:9;145:21;126:4;195:6;189:13;238:6;233:2;222:9;218:18;211:34;297:6;292:2;284:6;280:15;275:2;264:9;260:18;254:50;353:1;348:2;339:6;328:9;324:22;320:31;313:42;423:2;416;412:7;407:2;399:6;395:15;391:29;380:9;376:45;372:54;364:62;;;14:418;;;;:::o;437:131::-;-1:-1:-1;;;;;512:31:22;;502:42;;492:70;;558:1;555;548:12;492:70;437:131;:::o;573:247::-;632:6;685:2;673:9;664:7;660:23;656:32;653:52;;;701:1;698;691:12;653:52;740:9;727:23;759:31;784:5;759:31;:::i;825:439::-;878:3;916:5;910:12;943:6;938:3;931:19;969:4;998;993:3;989:14;982:21;;1037:4;1030:5;1026:16;1060:1;1070:169;1084:6;1081:1;1078:13;1070:169;;;1145:13;;1133:26;;1179:12;;;;1214:15;;;;1106:1;1099:9;1070:169;;;-1:-1:-1;1255:3:22;;825:439;-1:-1:-1;;;;;825:439:22:o;1269:261::-;1448:2;1437:9;1430:21;1411:4;1468:56;1520:2;1509:9;1505:18;1497:6;1468:56;:::i;1535:315::-;1603:6;1611;1664:2;1652:9;1643:7;1639:23;1635:32;1632:52;;;1680:1;1677;1670:12;1632:52;1719:9;1706:23;1738:31;1763:5;1738:31;:::i;:::-;1788:5;1840:2;1825:18;;;;1812:32;;-1:-1:-1;;;1535:315:22:o;2229:456::-;2306:6;2314;2322;2375:2;2363:9;2354:7;2350:23;2346:32;2343:52;;;2391:1;2388;2381:12;2343:52;2430:9;2417:23;2449:31;2474:5;2449:31;:::i;:::-;2499:5;-1:-1:-1;2556:2:22;2541:18;;2528:32;2569:33;2528:32;2569:33;:::i;:::-;2229:456;;2621:7;;-1:-1:-1;;;2675:2:22;2660:18;;;;2647:32;;2229:456::o;2879:332::-;3086:6;3075:9;3068:25;3129:2;3124;3113:9;3109:18;3102:30;3049:4;3149:56;3201:2;3190:9;3186:18;3178:6;3149:56;:::i;3216:465::-;3269:3;3307:5;3301:12;3334:6;3329:3;3322:19;3360:4;3389;3384:3;3380:14;3373:21;;3428:4;3421:5;3417:16;3451:1;3461:195;3475:6;3472:1;3469:13;3461:195;;;3540:13;;-1:-1:-1;;;;;3536:39:22;3524:52;;3596:12;;;;3631:15;;;;3572:1;3490:9;3461:195;;3686:261;3865:2;3854:9;3847:21;3828:4;3885:56;3937:2;3926:9;3922:18;3914:6;3885:56;:::i;3952:598::-;4038:6;4046;4054;4062;4115:3;4103:9;4094:7;4090:23;4086:33;4083:53;;;4132:1;4129;4122:12;4083:53;4171:9;4158:23;4190:31;4215:5;4190:31;:::i;:::-;4240:5;-1:-1:-1;4297:2:22;4282:18;;4269:32;4310:33;4269:32;4310:33;:::i;:::-;4362:7;-1:-1:-1;4416:2:22;4401:18;;4388:32;;-1:-1:-1;4472:2:22;4457:18;;4444:32;4485:33;4444:32;4485:33;:::i;:::-;3952:598;;;;-1:-1:-1;3952:598:22;;-1:-1:-1;;3952:598:22:o;4789:820::-;5051:2;5063:21;;;5133:13;;5036:18;;;5155:22;;;5003:4;;5230;;5208:2;5193:18;;;5257:17;;;5003:4;5302:185;5316:6;5313:1;5310:13;5302:185;;;5391:13;;5384:21;5377:29;5365:42;;5427:12;;;;5462:15;;;;5338:1;5331:9;5302:185;;;5306:3;;;5534:9;5529:3;5525:19;5518:4;5507:9;5503:20;5496:49;5562:41;5599:3;5591:6;5562:41;:::i;5822:180::-;5881:6;5934:2;5922:9;5913:7;5909:23;5905:32;5902:52;;;5950:1;5947;5940:12;5902:52;-1:-1:-1;5973:23:22;;5822:180;-1:-1:-1;5822:180:22:o;6357:388::-;6425:6;6433;6486:2;6474:9;6465:7;6461:23;6457:32;6454:52;;;6502:1;6499;6492:12;6454:52;6541:9;6528:23;6560:31;6585:5;6560:31;:::i;:::-;6610:5;-1:-1:-1;6667:2:22;6652:18;;6639:32;6680:33;6639:32;6680:33;:::i;:::-;6732:7;6722:17;;;6357:388;;;;;:::o;6750:127::-;6811:10;6806:3;6802:20;6799:1;6792:31;6842:4;6839:1;6832:15;6866:4;6863:1;6856:15;6882:275;6953:2;6947:9;7018:2;6999:13;;-1:-1:-1;;6995:27:22;6983:40;;-1:-1:-1;;;;;7038:34:22;;7074:22;;;7035:62;7032:88;;;7100:18;;:::i;:::-;7136:2;7129:22;6882:275;;-1:-1:-1;6882:275:22:o;7162:183::-;7222:4;-1:-1:-1;;;;;7247:6:22;7244:30;7241:56;;;7277:18;;:::i;:::-;-1:-1:-1;7322:1:22;7318:14;7334:4;7314:25;;7162:183::o;7350:1026::-;7443:6;7451;7504:2;7492:9;7483:7;7479:23;7475:32;7472:52;;;7520:1;7517;7510:12;7472:52;7559:9;7546:23;7578:31;7603:5;7578:31;:::i;:::-;7628:5;-1:-1:-1;7652:2:22;7690:18;;;7677:32;-1:-1:-1;;;;;7721:30:22;;7718:50;;;7764:1;7761;7754:12;7718:50;7787:22;;7840:4;7832:13;;7828:27;-1:-1:-1;7818:55:22;;7869:1;7866;7859:12;7818:55;7905:2;7892:16;7928:60;7944:43;7984:2;7944:43;:::i;:::-;7928:60;:::i;:::-;8022:15;;;8104:1;8100:10;;;;8092:19;;8088:28;;;8053:12;;;;8128:19;;;8125:39;;;8160:1;8157;8150:12;8125:39;8184:11;;;;8204:142;8220:6;8215:3;8212:15;8204:142;;;8286:17;;8274:30;;8237:12;;;;8324;;;;8204:142;;;8365:5;8355:15;;;;;;;7350:1026;;;;;:::o;8381:465::-;8638:2;8627:9;8620:21;8601:4;8664:56;8716:2;8705:9;8701:18;8693:6;8664:56;:::i;:::-;8768:9;8760:6;8756:22;8751:2;8740:9;8736:18;8729:50;8796:44;8833:6;8825;8796:44;:::i;8851:380::-;8930:1;8926:12;;;;8973;;;8994:61;;9048:4;9040:6;9036:17;9026:27;;8994:61;9101:2;9093:6;9090:14;9070:18;9067:38;9064:161;;9147:10;9142:3;9138:20;9135:1;9128:31;9182:4;9179:1;9172:15;9210:4;9207:1;9200:15;9236:251;9306:6;9359:2;9347:9;9338:7;9334:23;9330:32;9327:52;;;9375:1;9372;9365:12;9327:52;9407:9;9401:16;9426:31;9451:5;9426:31;:::i;9492:338::-;9694:2;9676:21;;;9733:2;9713:18;;;9706:30;-1:-1:-1;;;9767:2:22;9752:18;;9745:44;9821:2;9806:18;;9492:338::o;10184:127::-;10245:10;10240:3;10236:20;10233:1;10226:31;10276:4;10273:1;10266:15;10300:4;10297:1;10290:15;10316:168;10389:9;;;10420;;10437:15;;;10431:22;;10417:37;10407:71;;10458:18;;:::i;10489:127::-;10550:10;10545:3;10541:20;10538:1;10531:31;10581:4;10578:1;10571:15;10605:4;10602:1;10595:15;10621:881;10716:6;10747:2;10790;10778:9;10769:7;10765:23;10761:32;10758:52;;;10806:1;10803;10796:12;10758:52;10839:9;10833:16;-1:-1:-1;;;;;10864:6:22;10861:30;10858:50;;;10904:1;10901;10894:12;10858:50;10927:22;;10980:4;10972:13;;10968:27;-1:-1:-1;10958:55:22;;11009:1;11006;10999:12;10958:55;11038:2;11032:9;11061:60;11077:43;11117:2;11077:43;:::i;11061:60::-;11155:15;;;11237:1;11233:10;;;;11225:19;;11221:28;;;11186:12;;;;11261:19;;;11258:39;;;11293:1;11290;11283:12;11258:39;11317:11;;;;11337:135;11353:6;11348:3;11345:15;11337:135;;;11419:10;;11407:23;;11370:12;;;;11450;;;;11337:135;;;11491:5;10621:881;-1:-1:-1;;;;;;;10621:881:22:o;12238:184::-;12308:6;12361:2;12349:9;12340:7;12336:23;12332:32;12329:52;;;12377:1;12374;12367:12;12329:52;-1:-1:-1;12400:16:22;;12238:184;-1:-1:-1;12238:184:22:o;13494:127::-;13555:10;13550:3;13546:20;13543:1;13536:31;13586:4;13583:1;13576:15;13610:4;13607:1;13600:15;13626:120;13666:1;13692;13682:35;;13697:18;;:::i;:::-;-1:-1:-1;13731:9:22;;13626:120::o;13751:128::-;13818:9;;;13839:11;;;13836:37;;;13853:18;;:::i;16187:277::-;16254:6;16307:2;16295:9;16286:7;16282:23;16278:32;16275:52;;;16323:1;16320;16313:12;16275:52;16355:9;16349:16;16408:5;16401:13;16394:21;16387:5;16384:32;16374:60;;16430:1;16427;16420:12;17854:125;17919:9;;;17940:10;;;17937:36;;;17953:18;;:::i;19136:273::-;19204:6;19257:2;19245:9;19236:7;19232:23;19228:32;19225:52;;;19273:1;19270;19263:12;19225:52;19305:9;19299:16;19355:4;19348:5;19344:16;19337:5;19334:27;19324:55;;19375:1;19372;19365:12;19414:416;19503:1;19540:5;19503:1;19554:270;19575:7;19565:8;19562:21;19554:270;;;19634:4;19630:1;19626:6;19622:17;19616:4;19613:27;19610:53;;;19643:18;;:::i;:::-;19693:7;19683:8;19679:22;19676:55;;;19713:16;;;;19676:55;19792:22;;;;19752:15;;;;19554:270;;;19558:3;19414:416;;;;;:::o;19835:806::-;19884:5;19914:8;19904:80;;-1:-1:-1;19955:1:22;19969:5;;19904:80;20003:4;19993:76;;-1:-1:-1;20040:1:22;20054:5;;19993:76;20085:4;20103:1;20098:59;;;;20171:1;20166:130;;;;20078:218;;20098:59;20128:1;20119:10;;20142:5;;;20166:130;20203:3;20193:8;20190:17;20187:43;;;20210:18;;:::i;:::-;-1:-1:-1;;20266:1:22;20252:16;;20281:5;;20078:218;;20380:2;20370:8;20367:16;20361:3;20355:4;20352:13;20348:36;20342:2;20332:8;20329:16;20324:2;20318:4;20315:12;20311:35;20308:77;20305:159;;;-1:-1:-1;20417:19:22;;;20449:5;;20305:159;20496:34;20521:8;20515:4;20496:34;:::i;:::-;20566:6;20562:1;20558:6;20554:19;20545:7;20542:32;20539:58;;;20577:18;;:::i;:::-;20615:20;;19835:806;-1:-1:-1;;;19835:806:22:o;20646:131::-;20706:5;20735:36;20762:8;20756:4;20735:36;:::i;21857:1023::-;22304:3;22293:9;22286:22;22267:4;22331:57;22383:3;22372:9;22368:19;22360:6;22331:57;:::i;:::-;22436:9;22428:6;22424:22;22419:2;22408:9;22404:18;22397:50;22470:44;22507:6;22499;22470:44;:::i;:::-;22456:58;;22562:9;22554:6;22550:22;22545:2;22534:9;22530:18;22523:50;22590:44;22627:6;22619;22590:44;:::i;:::-;22665:2;22650:18;;22643:34;;;;-1:-1:-1;;;;;;;22752:15:22;;;22746:3;22731:19;;22724:44;22805:15;;;22704:3;22784:19;;22777:44;22858:15;;;22852:3;22837:19;;;22830:44;22582:52;21857:1023;-1:-1:-1;;;21857:1023:22:o;22885:112::-;22917:1;22943;22933:35;;22948:18;;:::i;:::-;-1:-1:-1;22982:9:22;;22885:112::o"},"gasEstimates":{"creation":{"codeDepositCost":"2934600","executionCost":"infinite","totalCost":"infinite"},"external":{"ONE()":"2361","allowance(address,address)":"infinite","approve(address,uint256)":"24819","assetInfos(uint256)":"8941","assetLiquidity(uint256)":"infinite","balanceOf(address)":"2664","baseAsset()":"2425","burn(address)":"infinite","computeTotalValuation()":"infinite","decimals()":"288","getAmountOut(address,address,uint256)":"infinite","getAmountOutWithSlippage(address,address,uint256)":"infinite","getAssetReserve(address)":"infinite","getAssets()":"infinite","getDeviation()":"infinite","getReserves()":"infinite","getSlippage(address)":"infinite","getSlippages()":"infinite","getTokenWeight(address)":"infinite","getWeights()":"infinite","isRebalanceNeeded()":"infinite","liquidity()":"infinite","mint(address,uint256[])":"infinite","name()":"infinite","performRebalanceIfNeeded()":"infinite","rebalanceWeights(address)":"infinite","registry()":"2382","swap(address,address,uint256,address)":"infinite","symbol()":"infinite","totalSupply()":"2359","transfer(address,uint256)":"51321","transferFrom(address,address,uint256)":"infinite","trigger()":"2362","unitPrice()":"infinite"},"internal":{"_calculateAmountsToAdd(uint256,uint256[] memory)":"infinite","_calculateLiquidity(uint256,uint256)":"infinite","_calculateTotalAddedLiquidity(uint256[] memory)":"infinite","_computeTotalValuation()":"infinite","_convertBaseToToken(address,uint256)":"infinite","_convertTokenToBase(address,uint256)":"infinite","_performRebalanceIfNeeded()":"infinite","_slippage(uint256,uint256,uint256,uint256,uint256,uint256,uint256,bool)":"infinite","_slippageFunc(uint256,uint256,uint256,uint256,uint256)":"infinite","_swappingSlippage(uint256,uint256)":"infinite","initializeAssets(address[] memory,uint256[] memory)":"infinite","updateSlippage()":"infinite"}},"methodIdentifiers":{"ONE()":"c2ee3a08","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","assetInfos(uint256)":"d14ef46d","assetLiquidity(uint256)":"cf8fa764","balanceOf(address)":"70a08231","baseAsset()":"cdf456e1","burn(address)":"89afcb44","computeTotalValuation()":"36bf6e39","decimals()":"313ce567","getAmountOut(address,address,uint256)":"4aa06652","getAmountOutWithSlippage(address,address,uint256)":"a1f241cc","getAssetReserve(address)":"b2b55d70","getAssets()":"67e4ac2c","getDeviation()":"89ab3532","getReserves()":"0902f1ac","getSlippage(address)":"12899068","getSlippages()":"18904ea4","getTokenWeight(address)":"250aa683","getWeights()":"22acb867","isRebalanceNeeded()":"8a77c8dc","liquidity()":"1a686502","mint(address,uint256[])":"de836ebd","name()":"06fdde03","performRebalanceIfNeeded()":"f47b45e8","rebalanceWeights(address)":"0723c999","registry()":"7b103999","swap(address,address,uint256,address)":"6e81221c","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","trigger()":"7fec8d38","unitPrice()":"e73faa2d"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_assets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_weights\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"_trigger\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_registry\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"sharesBurned\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"sharesMinted\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"by\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"}],\"name\":\"RebalancePerformed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromToken\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"amountsAdded\",\"type\":\"uint256[]\"}],\"name\":\"WeightsRebalanced\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ONE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"assetInfos\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"slippage\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assetIndex\",\"type\":\"uint256\"}],\"name\":\"assetLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseAsset\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"computeTotalValuation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalVal\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"valuations\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"toToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"getAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"toToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"getAmountOutWithSlippage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getAssetReserve\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAssets\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDeviation\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"directions\",\"type\":\"bool[]\"},{\"internalType\":\"uint256[]\",\"name\":\"deviations\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReserves\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getSlippage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSlippages\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getTokenWeight\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getWeights\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isRebalanceNeeded\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"performRebalanceIfNeeded\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amountsToAdd\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amountsToRemove\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"rebalanceWeights\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"registry\",\"outputs\":[{\"internalType\":\"contract IBaluniV1Registry\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"toToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"trigger\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unitPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"assetLiquidity(uint256)\":{\"details\":\"Returns the liquidity of a specific asset in the pool.\",\"params\":{\"assetIndex\":\"The index of the asset.\"},\"returns\":{\"_0\":\"The liquidity of the asset.\"}},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(address)\":{\"details\":\"Burns the pool tokens and transfers the underlying assets to the specified address.\",\"params\":{\"to\":\"The address to transfer the underlying assets to.\"}},\"computeTotalValuation()\":{\"details\":\"Computes the total valuation of the pool and returns the total valuation and an array of individual valuations.\",\"returns\":{\"totalVal\":\"The total valuation of the pool.\",\"valuations\":\"An array of individual valuations.\"}},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"getAmountOut(address,address,uint256)\":{\"details\":\"Calculates the amount of `toToken` that will be received when swapping `fromToken` for `toToken`.\",\"params\":{\"amount\":\"The amount of `fromToken` being swapped.\",\"fromToken\":\"The address of the token being swapped from.\",\"toToken\":\"The address of the token being swapped to.\"},\"returns\":{\"_0\":\"The amount of `toToken` that will be received.\"}},\"getAmountOutWithSlippage(address,address,uint256)\":{\"details\":\"Calcola l'importo effettivo di `toToken` ricevuto tenendo conto dello slippage.\",\"params\":{\"amount\":\"The amount of `fromToken` being swapped.\",\"fromToken\":\"The address of the token being swapped from.\",\"toToken\":\"The address of the token being swapped to.\"},\"returns\":{\"_0\":\"The amount of `toToken` received after applying slippage.\"}},\"getAssetReserve(address)\":{\"details\":\"Returns the reserve amount of the specified asset.\",\"params\":{\"asset\":\"The address of the asset.\"},\"returns\":{\"_0\":\"The reserve amount of the asset.\"}},\"getAssets()\":{\"details\":\"Retrieves the list of assets in the pool.\",\"returns\":{\"_0\":\"An array of addresses representing the assets.\"}},\"getDeviation()\":{\"details\":\"Returns the deviation between the current weights and target weights of the assets in the pool.\",\"returns\":{\"directions\":\"An array of boolean values indicating whether the current weight is higher (true) or lower (false) than the target weight.\"}},\"getReserves()\":{\"details\":\"Returns an array of reserves for each asset in the pool.\",\"returns\":{\"_0\":\"An array of reserves.\"}},\"getSlippage(address)\":{\"details\":\"Restituisce lo slippage attuale per un dato token.\",\"params\":{\"token\":\"The address of the token.\"},\"returns\":{\"_0\":\"Lo slippage attuale per il token.\"}},\"getWeights()\":{\"details\":\"Retrieves the list of weights associated with the assets in the pool.\",\"returns\":{\"_0\":\"An array of uint256 values representing the weights.\"}},\"isRebalanceNeeded()\":{\"details\":\"Checks if rebalancing is needed for the pool.\",\"returns\":{\"_0\":\"A boolean value indicating whether rebalancing is needed or not.\"}},\"liquidity()\":{\"details\":\"Returns the total liquidity of the pool.\",\"returns\":{\"_0\":\"The total liquidity of the pool.\"}},\"mint(address,uint256[])\":{\"details\":\"Mints new tokens and adds them to the specified address.\",\"params\":{\"to\":\"The address to which the new tokens will be minted.\"},\"returns\":{\"_0\":\"The amount of tokens minted.\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"performRebalanceIfNeeded()\":{\"details\":\"Performs rebalance\"},\"rebalanceWeights(address)\":{\"details\":\"Rebalances the weights of the pool by calculating the amounts to add for each token, transferring the calculated amounts from the user to the pool, minting the total added liquidity, updating the reserves, and emitting an event to indicate the rebalancing of weights.\",\"params\":{\"receiver\":\"The address to receive the minted liquidity tokens.\"}},\"swap(address,address,uint256,address)\":{\"details\":\"Swaps `amount` of `fromToken` to `toToken` and transfers the received amount to `receiver`. Requirements: - `fromToken` and `toToken` must be different tokens. - `amount` must be greater than zero. - Sufficient liquidity of `toToken` must be available in the contract. Emits a `Swap` event with the details of the swap. Updates the reserves after the swap.\",\"params\":{\"amount\":\"The amount of `fromToken` to swap.\",\"fromToken\":\"The address of the token to swap from.\",\"receiver\":\"The address to receive the swapped tokens.\",\"toToken\":\"The address of the token to swap to.\"},\"returns\":{\"amountOut\":\"The amount of `toToken` received after the swap.\"}},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"unitPrice()\":{\"details\":\"Returns the unit price of the pool.\",\"returns\":{\"_0\":\"The unit price of the pool.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"burn(address)\":{\"notice\":\"This function can only be called by the periphery contract.The pool tokens must have a balance greater than 0.The total supply of pool tokens must be greater than 0.The function calculates the amounts of each underlying asset to transfer based on the share of pool tokens being burned.A fee is deducted from the share of pool tokens being burned and transferred to the treasury address.The function checks if the pool has sufficient liquidity before performing any transfers.If any transfer fails, the function reverts the entire operation.After the transfers, the function updates the reserves of the pool.Emits a `Burn` event with the address and share of pool tokens burned.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BaluniV1Pool.sol\":\"BaluniV1Pool\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"./IERC20.sol\\\";\\nimport {IERC20Metadata} from \\\"./extensions/IERC20Metadata.sol\\\";\\nimport {Context} from \\\"../../utils/Context.sol\\\";\\nimport {IERC20Errors} from \\\"../../interfaces/draft-IERC6093.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n */\\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\\n    mapping(address account => uint256) private _balances;\\n\\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `value`.\\n     */\\n    function transfer(address to, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `value`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `value`.\\n     */\\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, value);\\n        _transfer(from, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _transfer(address from, address to, uint256 value) internal {\\n        if (from == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        if (to == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\\n     * this function.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _update(address from, address to, uint256 value) internal virtual {\\n        if (from == address(0)) {\\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\\n            _totalSupply += value;\\n        } else {\\n            uint256 fromBalance = _balances[from];\\n            if (fromBalance < value) {\\n                revert ERC20InsufficientBalance(from, fromBalance, value);\\n            }\\n            unchecked {\\n                // Overflow not possible: value <= fromBalance <= totalSupply.\\n                _balances[from] = fromBalance - value;\\n            }\\n        }\\n\\n        if (to == address(0)) {\\n            unchecked {\\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\\n                _totalSupply -= value;\\n            }\\n        } else {\\n            unchecked {\\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\\n                _balances[to] += value;\\n            }\\n        }\\n\\n        emit Transfer(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\\n     * Relies on the `_update` mechanism\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _mint(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(address(0), account, value);\\n    }\\n\\n    /**\\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\\n     * Relies on the `_update` mechanism.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead\\n     */\\n    function _burn(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        _update(account, address(0), value);\\n    }\\n\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     *\\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\\n     */\\n    function _approve(address owner, address spender, uint256 value) internal {\\n        _approve(owner, spender, value, true);\\n    }\\n\\n    /**\\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\\n     *\\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\\n     * `Approval` event during `transferFrom` operations.\\n     *\\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\\n     * true using the following override:\\n     * ```\\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\\n     *     super._approve(owner, spender, value, true);\\n     * }\\n     * ```\\n     *\\n     * Requirements are the same as {_approve}.\\n     */\\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\\n        if (owner == address(0)) {\\n            revert ERC20InvalidApprover(address(0));\\n        }\\n        if (spender == address(0)) {\\n            revert ERC20InvalidSpender(address(0));\\n        }\\n        _allowances[owner][spender] = value;\\n        if (emitEvent) {\\n            emit Approval(owner, spender, value);\\n        }\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\\n     *\\n     * Does not update the allowance value in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Does not emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            if (currentAllowance < value) {\\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\\n            }\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - value, false);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant NOT_ENTERED = 1;\\n    uint256 private constant ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    /**\\n     * @dev Unauthorized reentrant call.\\n     */\\n    error ReentrancyGuardReentrantCall();\\n\\n    constructor() {\\n        _status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\\n        if (_status == ENTERED) {\\n            revert ReentrancyGuardReentrantCall();\\n        }\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Returns true if the reentrancy guard is currently set to \\\"entered\\\", which indicates there is a\\n     * `nonReentrant` function in the call stack.\\n     */\\n    function _reentrancyGuardEntered() internal view returns (bool) {\\n        return _status == ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236\",\"license\":\"MIT\"},\"contracts/BaluniV1Pool.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n/**\\r\\n *  __                  __                      __\\r\\n * /  |                /  |                    /  |\\r\\n * $$ |____    ______  $$ | __    __  _______  $$/\\r\\n * $$      \\\\  /      \\\\ $$ |/  |  /  |/       \\\\ /  |\\r\\n * $$$$$$$  | $$$$$$  |$$ |$$ |  $$ |$$$$$$$  |$$ |\\r\\n * $$ |  $$ | /    $$ |$$ |$$ |  $$ |$$ |  $$ |$$ |\\r\\n * $$ |__$$ |/$$$$$$$ |$$ |$$ \\\\__$$ |$$ |  $$ |$$ |\\r\\n * $$    $$/ $$    $$ |$$ |$$    $$/ $$ |  $$ |$$ |\\r\\n * $$$$$$$/   $$$$$$$/ $$/  $$$$$$/  $$/   $$/ $$/\\r\\n *\\r\\n *\\r\\n *                  ,-\\\"\\\"\\\"\\\"-.\\r\\n *                ,'      _ `.\\r\\n *               /       )_)  \\\\\\r\\n *              :              :\\r\\n *              \\\\              /\\r\\n *               \\\\            /\\r\\n *                `.        ,'\\r\\n *                  `.    ,'\\r\\n *                    `.,'\\r\\n *                     /\\\\`.   ,-._\\r\\n *                         `-'    \\\\__\\r\\n *                              .\\r\\n *               s                \\\\\\r\\n *                                \\\\\\\\\\r\\n *                                 \\\\\\\\\\r\\n *                                  >\\\\/7\\r\\n *                              _.-(6'  \\\\\\r\\n *                             (=___._/` \\\\\\r\\n *                                  )  \\\\ |\\r\\n *                                 /   / |\\r\\n *                                /    > /\\r\\n *                               j    < _\\\\\\r\\n *                           _.-' :      ``.\\r\\n *                           \\\\ r=._\\\\        `.\\r\\n */\\r\\n\\r\\nimport '@openzeppelin/contracts/token/ERC20/ERC20.sol';\\r\\nimport '@openzeppelin/contracts/utils/ReentrancyGuard.sol';\\r\\n\\r\\nimport './interfaces/IBaluniV1PoolPeriphery.sol';\\r\\nimport './interfaces/IBaluniV1Registry.sol';\\r\\nimport './interfaces/IBaluniV1Rebalancer.sol';\\r\\nimport './interfaces/IBaluniV1Oracle.sol';\\r\\nimport './libs/DSMath.sol';\\r\\n\\r\\ncontract BaluniV1Pool is ERC20, ReentrancyGuard {\\r\\n    AssetInfo[] public assetInfos;\\r\\n    using DSMath for uint256;\\r\\n\\r\\n    uint256 public trigger;\\r\\n    uint256 public ONE;\\r\\n    address public baseAsset;\\r\\n    uint256 private scalingFactor;\\r\\n\\r\\n    IBaluniV1Registry public registry;\\r\\n\\r\\n    /// @notice WAD unit. Used to handle most numbers.\\r\\n    uint256 internal constant WAD = 10 ** 18;\\r\\n\\r\\n    /// @notice RAY unit. Used for rpow function.\\r\\n    uint256 internal constant RAY = 10 ** 27;\\r\\n\\r\\n    uint256 _slippageParamK = 0.00002e18; //2 * 10**13 == 0.00002 * WETH\\r\\n    uint256 _slippageParamN = 7; // 7\\r\\n    uint256 _c1 = 376927610599998308; // ((k**(1/(n+1))) / (n**((n)/(n+1)))) + (k*n)**(1/(n+1))\\r\\n    uint256 _xThreshold = 329811659274998519; // (k*n)**(1/(n+1))\\r\\n    uint256 _haircutRate = 0.0004e18; // 4 * 10**14 == 0.0004 == 0.04% for intra-aggregate account swap\\r\\n    uint256 _retentionRatio = 1e18; // 1\\r\\n    uint256 _maxPriceDeviation = 0.02e18; // 2 * 10**16 == 2% = 0.02 in ETH_UNIT.\\r\\n\\r\\n    struct AssetInfo {\\r\\n        address asset;\\r\\n        uint256 weight;\\r\\n        uint256 slippage; // Nuovo parametro per lo slippage\\r\\n    }\\r\\n\\r\\n    event RebalancePerformed(address indexed by, address[] assets);\\r\\n    event WeightsRebalanced(address indexed user, uint256[] amountsAdded);\\r\\n    event Burn(address indexed user, uint256 sharesBurned);\\r\\n    event Mint(address indexed to, uint256 sharesMinted);\\r\\n    event Swap(\\r\\n        address indexed user,\\r\\n        address indexed fromToken,\\r\\n        address indexed toToken,\\r\\n        uint256 amountIn,\\r\\n        uint256 amountOut\\r\\n    );\\r\\n\\r\\n    constructor(\\r\\n        address[] memory _assets,\\r\\n        uint256[] memory _weights,\\r\\n        uint256 _trigger,\\r\\n        address _registry\\r\\n    ) ERC20('Baluni LP', 'BALUNI-LP') {\\r\\n        registry = IBaluniV1Registry(_registry);\\r\\n\\r\\n        ONE = 1e18;\\r\\n\\r\\n        bool result = initializeAssets(_assets, _weights);\\r\\n        require(result, 'Initialization failed');\\r\\n\\r\\n        trigger = _trigger;\\r\\n\\r\\n        baseAsset = registry.getUSDC();\\r\\n\\r\\n        scalingFactor = 10 ** (18 - 6);\\r\\n\\r\\n        require(baseAsset != address(0), 'Invalid base asset address');\\r\\n\\r\\n        uint256 totalWeight = 0;\\r\\n\\r\\n        for (uint256 i = 0; i < _weights.length; i++) {\\r\\n            totalWeight += _weights[i];\\r\\n        }\\r\\n\\r\\n        require(totalWeight == 10000, 'Invalid weights');\\r\\n    }\\r\\n\\r\\n    modifier onlyPeriphery() {\\r\\n        address periphery = registry.getBaluniPoolPeriphery();\\r\\n        require(msg.sender == periphery, 'Only Periphery');\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Initializes the assets and their weights for the pool.\\r\\n     * @param _assets The array of asset addresses.\\r\\n     * @param _weights The array of weights corresponding to each asset.\\r\\n     */\\r\\n    function initializeAssets(address[] memory _assets, uint256[] memory _weights) internal returns (bool) {\\r\\n        address rebalancer = registry.getBaluniRebalancer();\\r\\n\\r\\n        require(registry.getBaluniRebalancer() != address(0), 'Invalid rebalancer address');\\r\\n        require(_assets.length == _weights.length, 'Assets and weights length mismatch');\\r\\n\\r\\n        for (uint256 i = 0; i < _assets.length; i++) {\\r\\n            require(_assets[i] != address(0), 'Invalid asset address');\\r\\n            require(_weights[i] > 0, 'Invalid weight');\\r\\n\\r\\n            assetInfos.push(\\r\\n                AssetInfo({\\r\\n                    asset: _assets[i],\\r\\n                    weight: _weights[i],\\r\\n                    slippage: 0 // Imposta slippage iniziale a 1%\\r\\n                })\\r\\n            );\\r\\n\\r\\n            IERC20 asset = IERC20(_assets[i]);\\r\\n            if (asset.allowance(address(this), address(rebalancer)) == 0) {\\r\\n                asset.approve(address(rebalancer), type(uint256).max);\\r\\n            }\\r\\n        }\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Rebalances the weights of the pool by calculating the amounts to add for each token,\\r\\n     * transferring the calculated amounts from the user to the pool, minting the total added liquidity,\\r\\n     * updating the reserves, and emitting an event to indicate the rebalancing of weights.\\r\\n     * @param receiver The address to receive the minted liquidity tokens.\\r\\n     */\\r\\n    function rebalanceWeights(address receiver) external onlyPeriphery returns (uint256[] memory) {\\r\\n        require(isRebalanceNeeded(), 'Rebalance not needed');\\r\\n        (uint256 totalValuation, uint256[] memory valuations) = _computeTotalValuation(); // 6dec\\r\\n\\r\\n        uint256[] memory amountsToAdd = _calculateAmountsToAdd(totalValuation, valuations); // 6dec\\r\\n        uint256 totalAddedLiquidity = _calculateTotalAddedLiquidity(amountsToAdd);\\r\\n\\r\\n        totalAddedLiquidity *= scalingFactor;\\r\\n\\r\\n        uint256[] memory amounts = new uint256[](assetInfos.length);\\r\\n\\r\\n        for (uint256 i = 0; i < amountsToAdd.length; i++) {\\r\\n            if (amountsToAdd[i] > 0) {\\r\\n                amounts[i] = _calculateLiquidity(i, amountsToAdd[i]);\\r\\n            }\\r\\n        }\\r\\n\\r\\n        _mint(receiver, totalAddedLiquidity);\\r\\n\\r\\n        // Aggiorna lo slippage in base ai nuovi pesi\\r\\n        updateSlippage();\\r\\n\\r\\n        emit WeightsRebalanced(msg.sender, amountsToAdd);\\r\\n\\r\\n        return amounts;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Swaps `amount` of `fromToken` to `toToken` and transfers the received amount to `receiver`.\\r\\n     *\\r\\n     * Requirements:\\r\\n     * - `fromToken` and `toToken` must be different tokens.\\r\\n     * - `amount` must be greater than zero.\\r\\n     * - Sufficient liquidity of `toToken` must be available in the contract.\\r\\n     *\\r\\n     * Emits a `Swap` event with the details of the swap.\\r\\n     *\\r\\n     * Updates the reserves after the swap.\\r\\n     *\\r\\n     * @param fromToken The address of the token to swap from.\\r\\n     * @param toToken The address of the token to swap to.\\r\\n     * @param amount The amount of `fromToken` to swap.\\r\\n     * @param receiver The address to receive the swapped tokens.\\r\\n     * @return amountOut The amount of `toToken` received after the swap.\\r\\n     */\\r\\n    function swap(\\r\\n        address fromToken,\\r\\n        address toToken,\\r\\n        uint256 amount,\\r\\n        address receiver\\r\\n    ) external nonReentrant returns (uint256 amountOut) {\\r\\n        uint256 _BPS_FEE = registry.getBPS_FEE();\\r\\n        require(fromToken != toToken, 'Cannot swap the same token');\\r\\n        require(amount > 0, 'Amount must be greater than zero');\\r\\n        updateSlippage();\\r\\n        uint256 receivedAmount = getAmountOutWithSlippage(fromToken, toToken, amount);\\r\\n        require(getAssetReserve(toToken) >= receivedAmount, 'Insufficient Liquidity');\\r\\n\\r\\n        uint256 fee = (receivedAmount * _BPS_FEE) / 10000;\\r\\n        amountOut = receivedAmount - fee;\\r\\n\\r\\n        require(amountOut > 0, 'Amount to send must be greater than 0');\\r\\n\\r\\n        // Aggiorna lo slippage in base ai pesi degli asset coinvolti nello swap\\r\\n        updateSlippage();\\r\\n\\r\\n        emit Swap(receiver, fromToken, toToken, amount, amountOut);\\r\\n\\r\\n        return amountOut;\\r\\n    }\\r\\n    /**\\r\\n     * @dev Calcola l'importo effettivo di `toToken` ricevuto tenendo conto dello slippage.\\r\\n     * @param fromToken The address of the token being swapped from.\\r\\n     * @param toToken The address of the token being swapped to.\\r\\n     * @param amount The amount of `fromToken` being swapped.\\r\\n     * @return The amount of `toToken` received after applying slippage.\\r\\n     */\\r\\n    function getAmountOutWithSlippage(\\r\\n        address fromToken,\\r\\n        address toToken,\\r\\n        uint256 amount\\r\\n    ) public view returns (uint256) {\\r\\n        uint256 amountOut = getAmountOut(fromToken, toToken, amount);\\r\\n\\r\\n        //uint256 slippageFrom = getSlippage(fromToken);\\r\\n        //uint256 slippageTo = getSlippage(toToken);\\r\\n\\r\\n        address to = toToken;\\r\\n        address from = fromToken;\\r\\n\\r\\n        uint256 totalValuation;\\r\\n        uint256[] memory valuations;\\r\\n        (totalValuation, valuations) = _computeTotalValuation();\\r\\n        uint256 toTokenWeightVaulation = (getTokenWeight(to) * totalValuation) / 10000;\\r\\n        uint256 toTokenWeightActualVaulation = (getTokenWeight(to) * totalValuation) / 10000;\\r\\n\\r\\n        uint a = amount;\\r\\n        uint256 slippageTo = _slippage(\\r\\n            _slippageParamK,\\r\\n            _slippageParamN,\\r\\n            _c1,\\r\\n            _xThreshold,\\r\\n            toTokenWeightVaulation,\\r\\n            toTokenWeightActualVaulation,\\r\\n            a,\\r\\n            false\\r\\n        );\\r\\n        uint256 fromTokenWeightVaulation = (getTokenWeight(from) * totalValuation) / 10000;\\r\\n        uint256 fromTokenWeightActualVaulation = (getTokenWeight(from) * totalValuation) / 10000;\\r\\n\\r\\n        uint256 slippageFrom = _slippage(\\r\\n            _slippageParamK,\\r\\n            _slippageParamN,\\r\\n            _c1,\\r\\n            _xThreshold,\\r\\n            fromTokenWeightVaulation,\\r\\n            fromTokenWeightActualVaulation,\\r\\n            a,\\r\\n            true\\r\\n        );\\r\\n\\r\\n        uint256 swappingSlippage = _swappingSlippage(slippageFrom, slippageTo);\\r\\n        uint256 toAmount = a.wmul(swappingSlippage);\\r\\n\\r\\n        return toAmount;\\r\\n    }\\r\\n\\r\\n    function getTokenWeight(address token) public view returns (uint256) {\\r\\n        for (uint256 i = 0; i < assetInfos.length; i++) {\\r\\n            if (assetInfos[i].asset == token) {\\r\\n                return assetInfos[i].weight;\\r\\n            }\\r\\n        }\\r\\n        return 0; // Default weight se non trovato\\r\\n    }\\r\\n\\r\\n    function _slippage(\\r\\n        uint256 k,\\r\\n        uint256 n,\\r\\n        uint256 c1,\\r\\n        uint256 xThreshold,\\r\\n        uint256 cash,\\r\\n        uint256 liability,\\r\\n        uint256 cashChange,\\r\\n        bool addCash\\r\\n    ) internal pure returns (uint256) {\\r\\n        uint256 covBefore = cash.wdiv(liability);\\r\\n        uint256 covAfter;\\r\\n        if (addCash) {\\r\\n            covAfter = (cash + cashChange).wdiv(liability);\\r\\n        } else {\\r\\n            covAfter = (cash - cashChange).wdiv(liability);\\r\\n        }\\r\\n\\r\\n        // if cov stays unchanged, slippage is 0\\r\\n        if (covBefore == covAfter) {\\r\\n            return 0;\\r\\n        }\\r\\n\\r\\n        uint256 slippageBefore = _slippageFunc(k, n, c1, xThreshold, covBefore);\\r\\n        uint256 slippageAfter = _slippageFunc(k, n, c1, xThreshold, covAfter);\\r\\n\\r\\n        if (covBefore > covAfter) {\\r\\n            return (slippageAfter - slippageBefore).wdiv(covBefore - covAfter);\\r\\n        } else {\\r\\n            return (slippageBefore - slippageAfter).wdiv(covAfter - covBefore);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function _slippageFunc(\\r\\n        uint256 k,\\r\\n        uint256 n,\\r\\n        uint256 c1,\\r\\n        uint256 xThreshold,\\r\\n        uint256 x\\r\\n    ) internal pure returns (uint256) {\\r\\n        if (x < xThreshold) {\\r\\n            return c1 - x;\\r\\n        } else {\\r\\n            return k.wdiv((((x * RAY) / WAD).rpow(n) * WAD) / RAY); // k / (x ** n)\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function _swappingSlippage(uint256 si, uint256 sj) internal pure returns (uint256) {\\r\\n        return WAD + si - sj;\\r\\n    }\\r\\n    /**\\r\\n     * @dev Restituisce lo slippage attuale per un dato token.\\r\\n     * @param token The address of the token.\\r\\n     * @return Lo slippage attuale per il token.\\r\\n     */\\r\\n    function getSlippage(address token) public view returns (uint256) {\\r\\n        for (uint256 i = 0; i < assetInfos.length; i++) {\\r\\n            if (assetInfos[i].asset == token) {\\r\\n                return assetInfos[i].slippage;\\r\\n            }\\r\\n        }\\r\\n        return 0; // Default slippage se non trovato\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Funzione per aggiornare lo slippage in base ai pesi degli asset.\\r\\n     */\\r\\n    function updateSlippage() internal {\\r\\n        (bool[] memory directions, uint256[] memory deviations) = getDeviation();\\r\\n\\r\\n        for (uint256 i = 0; i < assetInfos.length; i++) {\\r\\n            uint256 previousSlippage = assetInfos[i].slippage;\\r\\n\\r\\n            if (directions[i]) {\\r\\n                // Aumenta lo slippage se il peso dell'asset \\u00e8 aumentato\\r\\n                assetInfos[i].slippage += deviations[i];\\r\\n                // Verifica che non ci sia overflow\\r\\n                require(assetInfos[i].slippage >= previousSlippage, 'Overflow incrementing slippage');\\r\\n            } else {\\r\\n                // Diminuisce lo slippage se il peso dell'asset \\u00e8 diminuito\\r\\n                if (assetInfos[i].slippage > deviations[i]) {\\r\\n                    assetInfos[i].slippage -= deviations[i];\\r\\n                    // Verifica che non ci sia underflow\\r\\n                    require(assetInfos[i].slippage <= previousSlippage, 'Underflow decrementing slippage');\\r\\n                } else {\\r\\n                    assetInfos[i].slippage = 0; // Evita lo slippage negativo\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function getSlippages() external view returns (uint256[] memory) {\\r\\n        uint256[] memory slippages = new uint256[](assetInfos.length);\\r\\n        for (uint256 i = 0; i < assetInfos.length; i++) {\\r\\n            slippages[i] = assetInfos[i].slippage;\\r\\n        }\\r\\n        return slippages;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Mints new tokens and adds them to the specified address.\\r\\n     * @param to The address to which the new tokens will be minted.\\r\\n     * @return The amount of tokens minted.\\r\\n     */\\r\\n    function mint(address to, uint256[] memory amounts) external onlyPeriphery returns (uint256) {\\r\\n        uint256 totalSupply = totalSupply();\\r\\n        uint256 totalValue = 0;\\r\\n        uint256[] memory _reserves = getReserves();\\r\\n        require(assetInfos.length == _reserves.length, 'Invalid reserves length');\\r\\n        require(assetInfos.length > 0, 'No assets');\\r\\n\\r\\n        for (uint256 i = 0; i < assetInfos.length; i++) {\\r\\n            address asset = assetInfos[i].asset;\\r\\n            uint256 valuation;\\r\\n            if (asset == baseAsset) {\\r\\n                valuation = amounts[i];\\r\\n                continue;\\r\\n            }\\r\\n            valuation = _convertTokenToBase(asset, amounts[i]);\\r\\n            totalValue += valuation;\\r\\n        }\\r\\n\\r\\n        require(totalValue > 0, 'Total value must be greater than 0');\\r\\n\\r\\n        uint256 toMint;\\r\\n\\r\\n        if (totalSupply == 0) {\\r\\n            toMint = totalValue * scalingFactor;\\r\\n        } else {\\r\\n            (uint256 totalLiquidity, ) = _computeTotalValuation();\\r\\n            require(totalLiquidity > 0, 'Total liquidity must be greater than 0');\\r\\n            toMint = ((totalValue * scalingFactor) * totalSupply) / (totalLiquidity * scalingFactor);\\r\\n        }\\r\\n        require(toMint != 0, 'Mint qty is 0');\\r\\n\\r\\n        _mint(to, toMint);\\r\\n\\r\\n        updateSlippage();\\r\\n\\r\\n        emit Mint(to, toMint);\\r\\n\\r\\n        return toMint;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Burns the pool tokens and transfers the underlying assets to the specified address.\\r\\n     * @param to The address to transfer the underlying assets to.\\r\\n     * @notice This function can only be called by the periphery contract.\\r\\n     * @notice The pool tokens must have a balance greater than 0.\\r\\n     * @notice The total supply of pool tokens must be greater than 0.\\r\\n     * @notice The function calculates the amounts of each underlying asset to transfer based on the share of pool tokens being burned.\\r\\n     * @notice A fee is deducted from the share of pool tokens being burned and transferred to the treasury address.\\r\\n     * @notice The function checks if the pool has sufficient liquidity before performing any transfers.\\r\\n     * @notice If any transfer fails, the function reverts the entire operation.\\r\\n     * @notice After the transfers, the function updates the reserves of the pool.\\r\\n     * @notice Emits a `Burn` event with the address and share of pool tokens burned.\\r\\n     */\\r\\n    function burn(address to) external onlyPeriphery returns (uint256[] memory) {\\r\\n        uint256 _BPS_FEE = registry.getBPS_FEE();\\r\\n        address periphery = registry.getBaluniPoolPeriphery();\\r\\n\\r\\n        uint256 share = balanceOf(address(this));\\r\\n        require(share > 0, 'Share must be greater than 0');\\r\\n\\r\\n        uint256 totalSupply = totalSupply();\\r\\n        require(totalSupply > 0, 'No liquidity');\\r\\n\\r\\n        uint256[] memory amounts = new uint256[](assetInfos.length);\\r\\n        uint256 fee = (share * _BPS_FEE) / 10000;\\r\\n        uint256 shareAfterFee = share - fee;\\r\\n\\r\\n        for (uint256 i = 0; i < assetInfos.length; i++) {\\r\\n            uint256 assetBalance = IBaluniV1PoolPeriphery(periphery).getAssetReserve(\\r\\n                address(this),\\r\\n                assetInfos[i].asset\\r\\n            );\\r\\n            amounts[i] = (assetBalance * shareAfterFee) / totalSupply;\\r\\n        }\\r\\n\\r\\n        require(balanceOf(address(this)) >= shareAfterFee, 'Insufficient BALUNI liquidity');\\r\\n\\r\\n        address treasury = registry.getTreasury();\\r\\n        bool feeTransferSuccess = IERC20(address(this)).transfer(treasury, fee);\\r\\n        require(feeTransferSuccess, 'Fee transfer failed');\\r\\n\\r\\n        _burn(address(this), shareAfterFee);\\r\\n\\r\\n        updateSlippage();\\r\\n\\r\\n        emit Burn(to, shareAfterFee);\\r\\n\\r\\n        return amounts;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Calculates the amount of `toToken` that will be received when swapping `fromToken` for `toToken`.\\r\\n     * @param fromToken The address of the token being swapped from.\\r\\n     * @param toToken The address of the token being swapped to.\\r\\n     * @param amount The amount of `fromToken` being swapped.\\r\\n     * @return The amount of `toToken` that will be received.\\r\\n     */\\r\\n    function getAmountOut(address fromToken, address toToken, uint256 amount) public view returns (uint256) {\\r\\n        IBaluniV1Oracle baluniOracle = IBaluniV1Oracle(registry.getBaluniOracle());\\r\\n        require(registry.getBaluniOracle() != address(0), 'Invalid oracle address');\\r\\n        uint256 amountOut = baluniOracle.convert(fromToken, toToken, amount);\\r\\n        return amountOut;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Performs rebalance\\r\\n     */\\r\\n    function performRebalanceIfNeeded()\\r\\n        external\\r\\n        onlyPeriphery\\r\\n        returns (uint256[] memory amountsToAdd, uint256[] memory amountsToRemove)\\r\\n    {\\r\\n        require(isRebalanceNeeded(), 'Rebalance not needed');\\r\\n        return _performRebalanceIfNeeded();\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the deviation between the current weights and target weights of the assets in the pool.\\r\\n     * @return directions An array of boolean values indicating whether the current weight is higher (true) or lower (false) than the target weight.\\r\\n     */\\r\\n    function getDeviation() public view returns (bool[] memory directions, uint256[] memory deviations) {\\r\\n        (uint256 totVal, uint256[] memory valuations) = _computeTotalValuation();\\r\\n        uint256 numAssets = assetInfos.length;\\r\\n\\r\\n        directions = new bool[](numAssets);\\r\\n        deviations = new uint256[](numAssets);\\r\\n\\r\\n        for (uint256 i = 0; i < numAssets; i++) {\\r\\n            uint256 currentWeight = (valuations[i] * 10000) / totVal;\\r\\n            uint256 targetWeight = assetInfos[i].weight;\\r\\n\\r\\n            if (currentWeight > targetWeight) {\\r\\n                deviations[i] = currentWeight - targetWeight;\\r\\n                directions[i] = true;\\r\\n            } else {\\r\\n                deviations[i] = targetWeight - currentWeight;\\r\\n                directions[i] = false;\\r\\n            }\\r\\n        }\\r\\n\\r\\n        return (directions, deviations);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the liquidity of a specific asset in the pool.\\r\\n     * @param assetIndex The index of the asset.\\r\\n     * @return The liquidity of the asset.\\r\\n     */\\r\\n    function assetLiquidity(uint256 assetIndex) external view returns (uint256) {\\r\\n        (, uint256[] memory usdValuations) = _computeTotalValuation();\\r\\n        require(assetIndex < usdValuations.length, 'Invalid asset index');\\r\\n        return usdValuations[assetIndex];\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Computes the total valuation of the pool and returns the total valuation and an array of individual valuations.\\r\\n     * @return totalVal The total valuation of the pool.\\r\\n     * @return valuations An array of individual valuations.\\r\\n     */\\r\\n    function computeTotalValuation() external view returns (uint256 totalVal, uint256[] memory valuations) {\\r\\n        (totalVal, valuations) = _computeTotalValuation();\\r\\n        return (totalVal, valuations);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the total liquidity of the pool.\\r\\n     * @return The total liquidity of the pool.\\r\\n     */\\r\\n    function liquidity() external view returns (uint256) {\\r\\n        (uint256 totalVal, ) = _computeTotalValuation();\\r\\n        return totalVal;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the unit price of the pool.\\r\\n     * @return The unit price of the pool.\\r\\n     */\\r\\n    function unitPrice() external view returns (uint256) {\\r\\n        uint256 baseDecimal = IERC20Metadata(baseAsset).decimals();\\r\\n        uint256 factor = 10 ** (18 - baseDecimal);\\r\\n        (uint256 totalVal, ) = _computeTotalValuation();\\r\\n        uint256 totalSupply = totalSupply();\\r\\n        if (totalSupply == 0) {\\r\\n            return 0;\\r\\n        }\\r\\n        return (((totalVal * factor) / totalSupply) * ONE);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns an array of reserves for each asset in the pool.\\r\\n     * @return An array of reserves.\\r\\n     */\\r\\n    function getReserves() public view returns (uint256[] memory) {\\r\\n        address periphery = registry.getBaluniPoolPeriphery();\\r\\n        return IBaluniV1PoolPeriphery(periphery).getReserves(address(this));\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the reserve amount of the specified asset.\\r\\n     * @param asset The address of the asset.\\r\\n     * @return The reserve amount of the asset.\\r\\n     */\\r\\n    function getAssetReserve(address asset) public view returns (uint256) {\\r\\n        address periphery = registry.getBaluniPoolPeriphery();\\r\\n        return IBaluniV1PoolPeriphery(periphery).getAssetReserve(address(this), asset);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Retrieves the list of assets in the pool.\\r\\n     * @return An array of addresses representing the assets.\\r\\n     */\\r\\n    function getAssets() external view returns (address[] memory) {\\r\\n        address[] memory assets = new address[](assetInfos.length);\\r\\n        for (uint256 i = 0; i < assetInfos.length; i++) {\\r\\n            assets[i] = assetInfos[i].asset;\\r\\n        }\\r\\n        return assets;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Retrieves the list of weights associated with the assets in the pool.\\r\\n     * @return An array of uint256 values representing the weights.\\r\\n     */\\r\\n    function getWeights() external view returns (uint256[] memory) {\\r\\n        uint256[] memory weights = new uint256[](assetInfos.length);\\r\\n        for (uint256 i = 0; i < assetInfos.length; i++) {\\r\\n            weights[i] = assetInfos[i].weight;\\r\\n        }\\r\\n        return weights;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Computes the total valuation of the assets in the pool.\\r\\n     * @return totalValuation The total valuation of the assets.\\r\\n     * @return valuations An array of valuations for each asset in the pool.\\r\\n     */\\r\\n    function _computeTotalValuation() internal view returns (uint256 totalValuation, uint256[] memory valuations) {\\r\\n        uint256 numAssets = assetInfos.length;\\r\\n        valuations = new uint256[](numAssets);\\r\\n        for (uint256 i = 0; i < numAssets; i++) {\\r\\n            address asset = assetInfos[i].asset;\\r\\n            uint256 assetReserve = getAssetReserve(address(asset));\\r\\n\\r\\n            if ((address(asset) == baseAsset)) {\\r\\n                valuations[i] = assetReserve;\\r\\n            } else {\\r\\n                uint256 valuation = _convertTokenToBase(address(asset), assetReserve);\\r\\n                valuations[i] = valuation;\\r\\n            }\\r\\n            totalValuation += valuations[i];\\r\\n        }\\r\\n        return (totalValuation, valuations);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Performs rebalance if needed.\\r\\n     * This function retrieves the assets and weights from the `assetInfos` array,\\r\\n     * and calls the `rebalance` function of the `rebalancer` contract with the retrieved values.\\r\\n     * It emits a `RebalancePerformed` event after the rebalance is performed.\\r\\n     * @notice This function should only be called internally.\\r\\n     */\\r\\n    function _performRebalanceIfNeeded() internal returns (uint256[] memory, uint256[] memory) {\\r\\n        address periphery = registry.getBaluniPoolPeriphery();\\r\\n        address rebalancer = registry.getBaluniRebalancer();\\r\\n\\r\\n        address[] memory assets = new address[](assetInfos.length);\\r\\n        uint256[] memory weights = new uint256[](assetInfos.length);\\r\\n        uint256[] memory peripheryBalancesB4 = new uint256[](assetInfos.length);\\r\\n        uint256[] memory peripheryBalancesAfter = new uint256[](assetInfos.length);\\r\\n        uint256[] memory amountsToAdd = new uint256[](assetInfos.length);\\r\\n        uint256[] memory amountsToRemove = new uint256[](assetInfos.length);\\r\\n\\r\\n        for (uint256 i = 0; i < assetInfos.length; i++) {\\r\\n            assets[i] = assetInfos[i].asset;\\r\\n            weights[i] = assetInfos[i].weight;\\r\\n            peripheryBalancesB4[i] = IERC20(assets[i]).balanceOf(periphery);\\r\\n        }\\r\\n\\r\\n        uint256[] memory balances = getReserves();\\r\\n\\r\\n        IBaluniV1Rebalancer(rebalancer).rebalance(balances, assets, weights, trigger, periphery, periphery, baseAsset);\\r\\n\\r\\n        for (uint256 i = 0; i < assetInfos.length; i++) {\\r\\n            peripheryBalancesAfter[i] = IERC20(assets[i]).balanceOf(periphery);\\r\\n\\r\\n            if (peripheryBalancesAfter[i] > peripheryBalancesB4[i]) {\\r\\n                amountsToAdd[i] = peripheryBalancesAfter[i] - peripheryBalancesB4[i];\\r\\n            } else {\\r\\n                amountsToRemove[i] = peripheryBalancesB4[i] - peripheryBalancesAfter[i];\\r\\n            }\\r\\n        }\\r\\n\\r\\n        emit RebalancePerformed(msg.sender, assets);\\r\\n\\r\\n        return (amountsToAdd, amountsToRemove);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Calculates the total added liquidity based on the amounts to add.\\r\\n     * @param amountsToAdd An array of amounts to add for each asset.\\r\\n     * @return totalAddedLiquidity The total added liquidity.\\r\\n     */\\r\\n    function _calculateTotalAddedLiquidity(\\r\\n        uint256[] memory amountsToAdd\\r\\n    ) internal view returns (uint256 totalAddedLiquidity) {\\r\\n        for (uint256 i = 0; i < assetInfos.length; i++) {\\r\\n            totalAddedLiquidity += amountsToAdd[i];\\r\\n        }\\r\\n        return totalAddedLiquidity;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Calculates the amounts to add to each asset based on the total valuation and current valuations.\\r\\n     * @param totalValuation The total valuation of the pool.\\r\\n     * @param valuations An array of current valuations for each asset.\\r\\n     * @return amountsToAdd An array of amounts to add to each asset.\\r\\n     */\\r\\n    function _calculateAmountsToAdd(\\r\\n        uint256 totalValuation,\\r\\n        uint256[] memory valuations\\r\\n    ) internal view returns (uint256[] memory amountsToAdd) {\\r\\n        amountsToAdd = new uint256[](assetInfos.length);\\r\\n        for (uint256 i = 0; i < assetInfos.length; i++) {\\r\\n            uint256 targetValuation = (totalValuation * assetInfos[i].weight) / 10000;\\r\\n            if (valuations[i] < targetValuation) {\\r\\n                amountsToAdd[i] = targetValuation - valuations[i];\\r\\n            }\\r\\n        }\\r\\n\\r\\n        return amountsToAdd;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Internal function to transfer tokens from the caller to the contract and calculate the liquidity.\\r\\n     * @param index The index of the asset in the assetInfos array.\\r\\n     * @param amountToAdd The amount of native tokens to add as liquidity.\\r\\n     */\\r\\n    function _calculateLiquidity(uint256 index, uint256 amountToAdd) internal view returns (uint256) {\\r\\n        if (assetInfos[index].asset == baseAsset) return amountToAdd;\\r\\n        uint256 tokenAmount = _convertBaseToToken(assetInfos[index].asset, amountToAdd);\\r\\n        require(tokenAmount > 0, 'Invalid token amount to add');\\r\\n        return tokenAmount;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Converts the specified amount of native token to the corresponding token amount.\\r\\n     * @param toToken The address of the native token to convert from.\\r\\n     * @param amount The amount of native token to convert.\\r\\n     * @return The corresponding token amount.\\r\\n     */\\r\\n    function _convertBaseToToken(address toToken, uint256 amount) internal view returns (uint256) {\\r\\n        return getAmountOut(baseAsset, toToken, amount);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Converts the specified token to the native token using the rebalancer contract.\\r\\n     * @param fromToken The address of the token to convert from.\\r\\n     * @param amount The amount of tokens to convert.\\r\\n     * @return tokenAmount The converted amount of tokens.\\r\\n     */\\r\\n    function _convertTokenToBase(address fromToken, uint256 amount) internal view returns (uint256 tokenAmount) {\\r\\n        return getAmountOut(fromToken, baseAsset, amount);\\r\\n    }\\r\\n\\r\\n    // return true if one of the deviation overcome the trigger\\r\\n    /**\\r\\n     * @dev Checks if rebalancing is needed for the pool.\\r\\n     * @return A boolean value indicating whether rebalancing is needed or not.\\r\\n     */\\r\\n    function isRebalanceNeeded() public view returns (bool) {\\r\\n        (bool[] memory directions, uint256[] memory deviations) = getDeviation();\\r\\n        for (uint256 i = 0; i < deviations.length; i++) {\\r\\n            if (directions[i] && deviations[i] > trigger) {\\r\\n                return true;\\r\\n            }\\r\\n        }\\r\\n        return false;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x5d3cad2f872c0cf5543f269758e54819cab5cfe5a5bd7f49b0fcf7df1679ad93\",\"license\":\"GNU AGPLv3\"},\"contracts/interfaces/IBaluniV1Oracle.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n\\r\\ninterface IBaluniV1Oracle {\\r\\n    function convert(address fromToken, address toToken, uint256 amount) external view returns (uint256 valuation);\\r\\n\\r\\n    function convertScaled(\\r\\n        address fromToken,\\r\\n        address toToken,\\r\\n        uint256 amount\\r\\n    ) external view returns (uint256 valuation);\\r\\n}\\r\\n\",\"keccak256\":\"0x2bc62f7640b15a1772de630216f6fe6aa7a719cb6cf0255befdde19ec8de785a\",\"license\":\"GNU AGPLv3\"},\"contracts/interfaces/IBaluniV1PoolPeriphery.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n\\r\\n/**\\r\\n * @title IBaluniV1PoolPeriphery\\r\\n * @dev Interface for the BaluniV1PoolPeriphery contract.\\r\\n */\\r\\ninterface IBaluniV1PoolPeriphery {\\r\\n    /**\\r\\n     * @dev Swaps tokens in a BaluniV1Pool.\\r\\n     * @param fromToken The address of the token to swap from.\\r\\n     * @param toToken The address of the token to swap to.\\r\\n     * @param amount The amount of tokens to swap.\\r\\n     * @param receiver The address of the receiver.\\r\\n     * @return The amount of tokens received after the swap.\\r\\n     */\\r\\n    function swap(address fromToken, address toToken, uint256 amount, address receiver) external returns (uint256);\\r\\n\\r\\n    /**\\r\\n     * @dev Performs batch swaps between multiple token pairs.\\r\\n     * @param fromTokens An array of addresses representing the tokens to swap from.\\r\\n     * @param toTokens An array of addresses representing the tokens to swap to.\\r\\n     * @param amounts An array of amounts representing the amounts to swap.\\r\\n     * @param receivers An array of addresses representing the receivers of the swapped tokens.\\r\\n     * @return An array of amounts representing the amounts of tokens received after the swaps.\\r\\n     */\\r\\n    function batchSwap(\\r\\n        address[] calldata fromTokens,\\r\\n        address[] calldata toTokens,\\r\\n        uint256[] calldata amounts,\\r\\n        address[] calldata receivers\\r\\n    ) external returns (uint256[] memory);\\r\\n\\r\\n    /**\\r\\n     * @dev Rebalances weights in a pool.\\r\\n     * @param poolAddress The address of the pool.\\r\\n     * @param receiver The address of the receiver.\\r\\n     */\\r\\n    function rebalanceWeights(address poolAddress, address receiver) external;\\r\\n\\r\\n    /**\\r\\n     * @dev Adds liquidity to a BaluniV1Pool.\\r\\n     * @param amounts An array of amounts for each asset to add as liquidity.\\r\\n     * @param poolAddress The address of the pool.\\r\\n     * @param receiver The address of the receiver.\\r\\n     */\\r\\n    function addLiquidity(uint256[] memory amounts, address poolAddress, address receiver) external returns (uint256);\\r\\n\\r\\n    /**\\r\\n     * @dev Removes liquidity from a BaluniV1Pool.\\r\\n     * @param share The amount of liquidity tokens to remove.\\r\\n     * @param poolAddress The address of the pool.\\r\\n     * @param receiver The address of the receiver.\\r\\n     */\\r\\n    function removeLiquidity(uint256 share, address poolAddress, address receiver) external;\\r\\n\\r\\n    /**\\r\\n     * @dev Gets the amount of tokens received after a swap in a BaluniV1Pool.\\r\\n     * @param fromToken The address of the token to swap from.\\r\\n     * @param toToken The address of the token to swap to.\\r\\n     * @param amount The amount of tokens to swap.\\r\\n     * @return The amount of tokens received after the swap.\\r\\n     */\\r\\n    function getAmountOut(address fromToken, address toToken, uint256 amount) external view returns (uint256);\\r\\n\\r\\n    /**\\r\\n     * @dev Performs rebalance if needed for the given tokens.\\r\\n     * @param poolAddress The address of the token pool to rebalance.\\r\\n     */\\r\\n    function performRebalanceIfNeeded(address poolAddress) external;\\r\\n\\r\\n    /**\\r\\n     * @dev Returns an array of pool addresses that contain the given token.\\r\\n     * @param token The address of the token to search for.\\r\\n     * @return An array of pool addresses.\\r\\n     */\\r\\n    function getPoolsContainingToken(address token) external view returns (address[] memory);\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the version of the contract.\\r\\n     * @return The version string.\\r\\n     */\\r\\n    function getVersion() external view returns (uint64);\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the reserves of the pool.\\r\\n     * @param pool The address of the pool.\\r\\n     * @return An array of reserves.\\r\\n     */\\r\\n    function getReserves(address pool) external view returns (uint256[] memory);\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the reserve of a specific asset in a pool.\\r\\n     * @param pool The address of the pool.\\r\\n     * @param asset The address of the asset.\\r\\n     * @return The reserve of the asset.\\r\\n     */\\r\\n    function getAssetReserve(address pool, address asset) external view returns (uint256);\\r\\n}\\r\\n\",\"keccak256\":\"0x0d208337a9258876165804a1e3158e005dcdab6f38ced9147d2b05d951a0f54c\",\"license\":\"GNU AGPLv3\"},\"contracts/interfaces/IBaluniV1Rebalancer.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n\\r\\ninterface IBaluniV1Rebalancer {\\r\\n    struct RebalanceVars {\\r\\n        uint256 length;\\r\\n        uint256 totalValue;\\r\\n        uint256 finalUsdBalance;\\r\\n        uint256 overweightVaultsLength;\\r\\n        uint256 underweightVaultsLength;\\r\\n        uint256 totalActiveWeight;\\r\\n        uint256 amountOut;\\r\\n        uint256[] overweightVaults;\\r\\n        uint256[] overweightAmounts;\\r\\n        uint256[] underweightVaults;\\r\\n        uint256[] underweightAmounts;\\r\\n        uint256[] balances;\\r\\n    }\\r\\n\\r\\n    // Functions\\r\\n    function rebalance(\\r\\n        uint256[] memory balances,\\r\\n        address[] calldata assets,\\r\\n        uint256[] calldata weights,\\r\\n        uint256 limit,\\r\\n        address sender,\\r\\n        address receiver,\\r\\n        address baseAsset\\r\\n    ) external;\\r\\n\\r\\n    function checkRebalance(\\r\\n        uint256[] memory balances,\\r\\n        address[] calldata assets,\\r\\n        uint256[] calldata weights,\\r\\n        uint256 limit,\\r\\n        address sender,\\r\\n        address baseAsset\\r\\n    ) external view returns (RebalanceVars memory);\\r\\n\\r\\n    function convert(address fromToken, address toToken, uint256 amount) external view returns (uint256);\\r\\n}\\r\\n\",\"keccak256\":\"0x61c44c9208ab5c5638160706c4737e8032440e73054a90378d0b65559653d57a\",\"license\":\"GNU AGPLv3\"},\"contracts/interfaces/IBaluniV1Registry.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n\\r\\n/**\\r\\n * @title IBaluniV1Registry\\r\\n * @dev Interface for the BaluniV1Registry contract.\\r\\n */\\r\\ninterface IBaluniV1Registry {\\r\\n    function setUniswapFactory(address _uniswapFactory) external;\\r\\n\\r\\n    function setUniswapRouter(address _uniswapRouter) external;\\r\\n\\r\\n    function setBaluniAgentFactory(address _baluniAgentFactory) external;\\r\\n\\r\\n    function setBaluniPoolPeriphery(address _baluniPoolPeriphery) external;\\r\\n\\r\\n    function setBaluniSwapper(address _baluniSwapper) external;\\r\\n\\r\\n    function setBaluniOracle(address _baluniOracle) external;\\r\\n\\r\\n    function setBaluniPoolFactory(address _baluniPoolFactory) external;\\r\\n\\r\\n    function setBaluniRebalancer(address _baluniRebalancer) external;\\r\\n\\r\\n    function setBaluniRouter(address _baluniRouter) external;\\r\\n\\r\\n    function setBaluniRegistry(address _baluniRegistry) external;\\r\\n\\r\\n    function setWNATIVE(address _WNATIVE) external;\\r\\n\\r\\n    function setUSDC(address _USDC) external;\\r\\n\\r\\n    function setTreasury(address _treasury) external;\\r\\n\\r\\n    function set1inchSpotAgg(address __1inchSpotAgg) external;\\r\\n\\r\\n    function setBPS_FEE(uint256 __BPS_FEE) external;\\r\\n\\r\\n    function getUniswapFactory() external view returns (address);\\r\\n\\r\\n    function getUniswapRouter() external view returns (address);\\r\\n\\r\\n    function getBaluniSwapper() external view returns (address);\\r\\n\\r\\n    function getBaluniOracle() external view returns (address);\\r\\n\\r\\n    function getBaluniAgentFactory() external view returns (address);\\r\\n\\r\\n    function getBaluniPoolPeriphery() external view returns (address);\\r\\n\\r\\n    function getBaluniPoolFactory() external view returns (address);\\r\\n\\r\\n    function getBaluniRebalancer() external view returns (address);\\r\\n\\r\\n    function getBaluniRouter() external view returns (address);\\r\\n\\r\\n    function getBaluniRegistry() external view returns (address);\\r\\n\\r\\n    function getWNATIVE() external view returns (address);\\r\\n\\r\\n    function getUSDC() external view returns (address);\\r\\n\\r\\n    function get1inchSpotAgg() external view returns (address);\\r\\n\\r\\n    function getBPS_FEE() external view returns (uint256);\\r\\n\\r\\n    function getMAX_BPS_FEE() external view returns (uint256);\\r\\n\\r\\n    function getBPS_BASE() external view returns (uint256);\\r\\n\\r\\n    function getTreasury() external view returns (address);\\r\\n\\r\\n    function setStaticOracle(address _staticOracle) external;\\r\\n\\r\\n    function getStaticOracle() external view returns (address);\\r\\n}\\r\\n\",\"keccak256\":\"0x846d9e23f2a9579307f6f9b453f9426e1083b2f550bb999315a4abc32a648570\",\"license\":\"GNU AGPLv3\"},\"contracts/libs/DSMath.sol\":{\"content\":\"/// math.sol -- mixin for inline numerical wizardry\\r\\n\\r\\n// This program is free software: you can redistribute it and/or modify\\r\\n// it under the terms of the GNU General Public License as published by\\r\\n// the Free Software Foundation, either version 3 of the License, or\\r\\n// (at your option) any later version.\\r\\n\\r\\n// This program is distributed in the hope that it will be useful,\\r\\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\\r\\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\r\\n// GNU General Public License for more details.\\r\\n\\r\\n// You should have received a copy of the GNU General Public License\\r\\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\\r\\n\\r\\n// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity 0.8.25;\\r\\n\\r\\nlibrary DSMath {\\r\\n    uint256 public constant WAD = 10 ** 18;\\r\\n    uint256 public constant RAY = 10 ** 27;\\r\\n\\r\\n    //rounds to zero if x*y < WAD / 2\\r\\n    function wmul(uint256 x, uint256 y) internal pure returns (uint256) {\\r\\n        return ((x * y) + (WAD / 2)) / WAD;\\r\\n    }\\r\\n\\r\\n    //rounds to zero if x*y < WAD / 2\\r\\n    function wdiv(uint256 x, uint256 y) internal pure returns (uint256) {\\r\\n        return ((x * WAD) + (y / 2)) / y;\\r\\n    }\\r\\n\\r\\n    function reciprocal(uint256 x) internal pure returns (uint256) {\\r\\n        return wdiv(WAD, x);\\r\\n    }\\r\\n\\r\\n    // This famous algorithm is called \\\"exponentiation by squaring\\\"\\r\\n    // and calculates x^n with x as fixed-point and n as regular unsigned.\\r\\n    //\\r\\n    // It's O(log n), instead of O(n) for naive repeated multiplication.\\r\\n    //\\r\\n    // These facts are why it works:\\r\\n    //\\r\\n    //  If n is even, then x^n = (x^2)^(n/2).\\r\\n    //  If n is odd,  then x^n = x * x^(n-1),\\r\\n    //   and applying the equation for even x gives\\r\\n    //    x^n = x * (x^2)^((n-1) / 2).\\r\\n    //\\r\\n    //  Also, EVM division is flooring and\\r\\n    //    floor[(n-1) / 2] = floor[n / 2].\\r\\n    //\\r\\n    function rpow(uint256 x, uint256 n) internal pure returns (uint256 z) {\\r\\n        z = n % 2 != 0 ? x : RAY;\\r\\n\\r\\n        for (n /= 2; n != 0; n /= 2) {\\r\\n            x = rmul(x, x);\\r\\n\\r\\n            if (n % 2 != 0) {\\r\\n                z = rmul(z, x);\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    //rounds to zero if x*y < WAD / 2\\r\\n    function rmul(uint256 x, uint256 y) internal pure returns (uint256 z) {\\r\\n        z = ((x * y) + (RAY / 2)) / RAY;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xcca02b43a015cb2ab00f363742d17518d3ff6267b3ed20bdaaf7798022fd6893\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1159,"contract":"contracts/BaluniV1Pool.sol:BaluniV1Pool","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":1165,"contract":"contracts/BaluniV1Pool.sol:BaluniV1Pool","label":"_allowances","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":1167,"contract":"contracts/BaluniV1Pool.sol:BaluniV1Pool","label":"_totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":1169,"contract":"contracts/BaluniV1Pool.sol:BaluniV1Pool","label":"_name","offset":0,"slot":"3","type":"t_string_storage"},{"astId":1171,"contract":"contracts/BaluniV1Pool.sol:BaluniV1Pool","label":"_symbol","offset":0,"slot":"4","type":"t_string_storage"},{"astId":2049,"contract":"contracts/BaluniV1Pool.sol:BaluniV1Pool","label":"_status","offset":0,"slot":"5","type":"t_uint256"},{"astId":2234,"contract":"contracts/BaluniV1Pool.sol:BaluniV1Pool","label":"assetInfos","offset":0,"slot":"6","type":"t_array(t_struct(AssetInfo)2288_storage)dyn_storage"},{"astId":2239,"contract":"contracts/BaluniV1Pool.sol:BaluniV1Pool","label":"trigger","offset":0,"slot":"7","type":"t_uint256"},{"astId":2241,"contract":"contracts/BaluniV1Pool.sol:BaluniV1Pool","label":"ONE","offset":0,"slot":"8","type":"t_uint256"},{"astId":2243,"contract":"contracts/BaluniV1Pool.sol:BaluniV1Pool","label":"baseAsset","offset":0,"slot":"9","type":"t_address"},{"astId":2245,"contract":"contracts/BaluniV1Pool.sol:BaluniV1Pool","label":"scalingFactor","offset":0,"slot":"10","type":"t_uint256"},{"astId":2248,"contract":"contracts/BaluniV1Pool.sol:BaluniV1Pool","label":"registry","offset":0,"slot":"11","type":"t_contract(IBaluniV1Registry)5472"},{"astId":2263,"contract":"contracts/BaluniV1Pool.sol:BaluniV1Pool","label":"_slippageParamK","offset":0,"slot":"12","type":"t_uint256"},{"astId":2266,"contract":"contracts/BaluniV1Pool.sol:BaluniV1Pool","label":"_slippageParamN","offset":0,"slot":"13","type":"t_uint256"},{"astId":2269,"contract":"contracts/BaluniV1Pool.sol:BaluniV1Pool","label":"_c1","offset":0,"slot":"14","type":"t_uint256"},{"astId":2272,"contract":"contracts/BaluniV1Pool.sol:BaluniV1Pool","label":"_xThreshold","offset":0,"slot":"15","type":"t_uint256"},{"astId":2275,"contract":"contracts/BaluniV1Pool.sol:BaluniV1Pool","label":"_haircutRate","offset":0,"slot":"16","type":"t_uint256"},{"astId":2278,"contract":"contracts/BaluniV1Pool.sol:BaluniV1Pool","label":"_retentionRatio","offset":0,"slot":"17","type":"t_uint256"},{"astId":2281,"contract":"contracts/BaluniV1Pool.sol:BaluniV1Pool","label":"_maxPriceDeviation","offset":0,"slot":"18","type":"t_uint256"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_struct(AssetInfo)2288_storage)dyn_storage":{"base":"t_struct(AssetInfo)2288_storage","encoding":"dynamic_array","label":"struct BaluniV1Pool.AssetInfo[]","numberOfBytes":"32"},"t_contract(IBaluniV1Registry)5472":{"encoding":"inplace","label":"contract IBaluniV1Registry","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_struct(AssetInfo)2288_storage":{"encoding":"inplace","label":"struct BaluniV1Pool.AssetInfo","members":[{"astId":2283,"contract":"contracts/BaluniV1Pool.sol:BaluniV1Pool","label":"asset","offset":0,"slot":"0","type":"t_address"},{"astId":2285,"contract":"contracts/BaluniV1Pool.sol:BaluniV1Pool","label":"weight","offset":0,"slot":"1","type":"t_uint256"},{"astId":2287,"contract":"contracts/BaluniV1Pool.sol:BaluniV1Pool","label":"slippage","offset":0,"slot":"2","type":"t_uint256"}],"numberOfBytes":"96"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{"burn(address)":{"notice":"This function can only be called by the periphery contract.The pool tokens must have a balance greater than 0.The total supply of pool tokens must be greater than 0.The function calculates the amounts of each underlying asset to transfer based on the share of pool tokens being burned.A fee is deducted from the share of pool tokens being burned and transferred to the treasury address.The function checks if the pool has sufficient liquidity before performing any transfers.If any transfer fails, the function reverts the entire operation.After the transfers, the function updates the reserves of the pool.Emits a `Burn` event with the address and share of pool tokens burned."}},"version":1}}},"contracts/BaluniV1PoolFactory.sol":{"BaluniV1PoolFactory":{"abi":[{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"},{"inputs":[{"internalType":"address","name":"implementation","type":"address"}],"name":"ERC1967InvalidImplementation","type":"error"},{"inputs":[],"name":"ERC1967NonPayable","type":"error"},{"inputs":[],"name":"FailedInnerCall","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[],"name":"UUPSUnauthorizedCallContext","type":"error"},{"inputs":[{"internalType":"bytes32","name":"slot","type":"bytes32"}],"name":"UUPSUnsupportedProxiableUUID","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"pool","type":"address"},{"indexed":false,"internalType":"address[]","name":"assets","type":"address[]"}],"name":"PoolCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"inputs":[],"name":"UPGRADE_INTERFACE_VERSION","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"allPools","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"assets","type":"address[]"},{"internalType":"uint256[]","name":"weights","type":"uint256[]"},{"internalType":"uint256","name":"trigger","type":"uint256"}],"name":"createPool","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getAllPools","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"}],"name":"getPool","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"poolAddress","type":"address"}],"name":"getPoolAssets","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"asset1","type":"address"},{"internalType":"address","name":"asset2","type":"address"}],"name":"getPoolByAssets","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"getPoolsByAsset","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getPoolsCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_register","type":"address"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_pool","type":"address"}],"name":"poolExist","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"registry","outputs":[{"internalType":"contract IBaluniV1Registry","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_register","type":"address"},{"internalType":"uint64","name":"_version","type":"uint64"}],"name":"reinitialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"upgradeToAndCall","outputs":[],"stateMutability":"payable","type":"function"}],"devdoc":{"errors":{"AddressEmptyCode(address)":[{"details":"There's no code at `target` (it is not a contract)."}],"ERC1967InvalidImplementation(address)":[{"details":"The `implementation` of the proxy is invalid."}],"ERC1967NonPayable()":[{"details":"An upgrade function sees `msg.value > 0` that may be lost."}],"FailedInnerCall()":[{"details":"A call to an address target failed. The target may have reverted."}],"InvalidInitialization()":[{"details":"The contract is already initialized."}],"NotInitializing()":[{"details":"The contract is not initializing."}],"OwnableInvalidOwner(address)":[{"details":"The owner is not a valid owner account. (eg. `address(0)`)"}],"OwnableUnauthorizedAccount(address)":[{"details":"The caller account is not authorized to perform an operation."}],"UUPSUnauthorizedCallContext()":[{"details":"The call is from an unauthorized context."}],"UUPSUnsupportedProxiableUUID(bytes32)":[{"details":"The storage `slot` is unsupported as a UUID."}]},"events":{"Initialized(uint64)":{"details":"Triggered when the contract has been initialized or reinitialized."},"Upgraded(address)":{"details":"Emitted when the implementation is upgraded."}},"kind":"dev","methods":{"createPool(address[],uint256[],uint256)":{"details":"Creates a new BaluniV1Pool contract and registers it in the factory.","params":{"assets":"The array of asset addresses to be included in the pool.","trigger":"The trigger value for rebalancing the pool.","weights":"The array of weights corresponding to each asset in the pool."},"returns":{"_0":"The address of the newly created pool."}},"getAllPools()":{"details":"Retrieves all the pools created by the factory.","returns":{"_0":"An array of pool addresses."}},"getPoolAssets(address)":{"details":"Retrieves the assets of a specific pool.","params":{"poolAddress":"The address of the pool."},"returns":{"_0":"An array of asset addresses."}},"getPoolByAssets(address,address)":{"details":"Retrieves the pool address based on the given assets.","params":{"asset1":"The address of the first asset.","asset2":"The address of the second asset."},"returns":{"_0":"The address of the pool."}},"getPoolsByAsset(address)":{"details":"Returns an array of pool addresses that contain the specified token.","params":{"token":"The address of the token to search for."},"returns":{"_0":"An array of pool addresses."}},"getPoolsCount()":{"details":"Retrieves the number of pools created by the factory.","returns":{"_0":"The count of pools."}},"owner()":{"details":"Returns the address of the current owner."},"proxiableUUID()":{"details":"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"upgradeToAndCall(address,bytes)":{"custom:oz-upgrades-unsafe-allow-reachable":"delegatecall","details":"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60a0604052306080523480156012575f80fd5b50608051615c0f6100395f395f8181610df401528181610e1d0152610f610152615c0f5ff3fe608060405260043610610105575f3560e01c806389345efb11610092578063b4340e6a11610062578063b4340e6a1461031f578063b4ac68601461033e578063c4d66de814610351578063d88ff1f414610370578063f2fde38b14610384575f80fd5b806389345efb146102585780638da5cb5b146102875780638f2248bc146102c3578063ad3cb1cc146102e2575f80fd5b80634f1ef286116100d85780634f1ef286146101af57806352d1902d146101c4578063531aa03e146101e6578063715018a6146102255780637b10399914610239575f80fd5b80632d5e94a7146101095780633069873b1461014557806341d1de97146101645780634276b97b14610183575b5f80fd5b348015610114575f80fd5b506101286101233660046112c3565b6103a3565b6040516001600160a01b0390911681526020015b60405180910390f35b348015610150575f80fd5b5061012861015f3660046113ce565b6103d1565b34801561016f575f80fd5b5061012861017e366004611492565b6107cd565b34801561018e575f80fd5b506101a261019d3660046114a9565b6107f4565b60405161013c9190611507565b6101c26101bd366004611519565b61085c565b005b3480156101cf575f80fd5b506101d861087b565b60405190815260200161013c565b3480156101f1575f80fd5b506101286102003660046112c3565b600260209081525f92835260408084209091529082529020546001600160a01b031681565b348015610230575f80fd5b506101c2610896565b348015610244575f80fd5b50600154610128906001600160a01b031681565b348015610263575f80fd5b506102776102723660046114a9565b6108a9565b604051901515815260200161013c565b348015610292575f80fd5b507f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b0316610128565b3480156102ce575f80fd5b506101c26102dd3660046115bb565b610903565b3480156102ed575f80fd5b50610312604051806040016040528060058152602001640352e302e360dc1b81525081565b60405161013c91906115f3565b34801561032a575f80fd5b506101a26103393660046114a9565b6109ee565b348015610349575f80fd5b505f546101d8565b34801561035c575f80fd5b506101c261036b3660046114a9565b610c1c565b34801561037b575f80fd5b506101a2610d4d565b34801561038f575f80fd5b506101c261039e3660046114a9565b610dac565b6001600160a01b038083165f9081526002602090815260408083208585168452909152902054165b92915050565b5f60018451116104285760405162461bcd60e51b815260206004820181905260248201527f4174206c656173742074776f206173736574732061726520726571756972656460448201526064015b60405180910390fd5b82518451146104845760405162461bcd60e51b815260206004820152602260248201527f41737365747320616e642077656967687473206c656e677468206d69736d61746044820152610c6d60f31b606482015260840161041f565b5f5b845181101561058f575f61049b82600161163c565b90505b8551811015610586575f6001600160a01b031660025f8885815181106104c6576104c661164f565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020015f205f8884815181106105005761050061164f565b6020908102919091018101516001600160a01b039081168352908201929092526040015f2054161461057e5760405162461bcd60e51b815260206004820152602160248201527f506f6f6c20616c72656164792065786973747320666f722074686973207061696044820152603960f91b606482015260840161041f565b60010161049e565b50600101610486565b505f84848460015f9054906101000a90046001600160a01b03166040516105b5906112a2565b6105c29493929190611663565b604051809103905ff0801580156105db573d5f803e3d5ffd5b505f80546001810182558180527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5630180546001600160a01b0319166001600160a01b03841617905590915081905b8651811015610780575f61063e82600161163c565b90505b8751811015610777578260025f8a85815181106106605761066061164f565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020015f205f8a848151811061069a5761069a61164f565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020015f205f6101000a8154816001600160a01b0302191690836001600160a01b031602179055508260025f8a84815181106106fa576106fa61164f565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020015f205f8a85815181106107345761073461164f565b6020908102919091018101516001600160a01b039081168352908201929092526040015f2080546001600160a01b03191692909116919091179055600101610641565b50600101610629565b50806001600160a01b03167f0a4af51f99a910b453b81f2f9f5673acd70bf8895729e0a6de8e5e0908d89f2b876040516107ba9190611507565b60405180910390a29150505b9392505050565b5f81815481106107db575f80fd5b5f918252602090912001546001600160a01b0316905081565b60605f829050806001600160a01b03166367e4ac2c6040518163ffffffff1660e01b81526004015f60405180830381865afa158015610835573d5f803e3d5ffd5b505050506040513d5f823e601f3d908101601f191682016040526107c691908101906116d0565b610864610de9565b61086d82610e8d565b6108778282610e95565b5050565b5f610884610f56565b505f80516020615bba83398151915290565b61089e610f9f565b6108a75f610ffa565b565b5f805b5f548110156108fb57826001600160a01b03165f82815481106108d1576108d161164f565b5f918252602090912001546001600160a01b0316036108f35750600192915050565b6001016108ac565b505f92915050565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054829190600160401b900460ff168061094c5750805467ffffffffffffffff808416911610155b1561096a5760405163f92ee8a960e01b815260040160405180910390fd5b8054600160401b67ffffffffffffffff841668ffffffffffffffffff199092168217178255600180546001600160a01b0319166001600160a01b038716179055815460ff60401b191682556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a150505050565b5f80546060919067ffffffffffffffff811115610a0d57610a0d6112fa565b604051908082528060200260200182016040528015610a36578160200160208202803683370190505b5090505f805b5f54811015610b76575f808281548110610a5857610a5861164f565b905f5260205f20015f9054906101000a90046001600160a01b031690505f816001600160a01b03166367e4ac2c6040518163ffffffff1660e01b81526004015f60405180830381865afa158015610ab1573d5f803e3d5ffd5b505050506040513d5f823e601f3d908101601f19168201604052610ad891908101906116d0565b90505f5b8151811015610b5c57876001600160a01b0316828281518110610b0157610b0161164f565b60200260200101516001600160a01b031603610b545782868681518110610b2a57610b2a61164f565b6001600160a01b039092166020928302919091019091015284610b4c81611765565b955050610b5c565b600101610adc565b5084518403610b6c575050610b76565b5050600101610a3c565b505f8167ffffffffffffffff811115610b9157610b916112fa565b604051908082528060200260200182016040528015610bba578160200160208202803683370190505b5090505f5b82811015610c1357838181518110610bd957610bd961164f565b6020026020010151828281518110610bf357610bf361164f565b6001600160a01b0390921660209283029190910190910152600101610bbf565b50949350505050565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054600160401b810460ff16159067ffffffffffffffff165f81158015610c615750825b90505f8267ffffffffffffffff166001148015610c7d5750303b155b905081158015610c8b575080155b15610ca95760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff191660011785558315610cd357845460ff60401b1916600160401b1785555b610cdb61106a565b610ce433611072565b600180546001600160a01b0319166001600160a01b0388161790558315610d4557845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b505050505050565b60605f805480602002602001604051908101604052809291908181526020018280548015610da257602002820191905f5260205f20905b81546001600160a01b03168152600190910190602001808311610d84575b5050505050905090565b610db4610f9f565b6001600160a01b038116610ddd57604051631e4fbdf760e01b81525f600482015260240161041f565b610de681610ffa565b50565b306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480610e6f57507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610e635f80516020615bba833981519152546001600160a01b031690565b6001600160a01b031614155b156108a75760405163703e46dd60e11b815260040160405180910390fd5b610de6610f9f565b816001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610eef575060408051601f3d908101601f19168201909252610eec9181019061177d565b60015b610f1757604051634c9c8ce360e01b81526001600160a01b038316600482015260240161041f565b5f80516020615bba8339815191528114610f4757604051632a87526960e21b81526004810182905260240161041f565b610f518383611083565b505050565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146108a75760405163703e46dd60e11b815260040160405180910390fd5b33610fd17f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b031690565b6001600160a01b0316146108a75760405163118cdaa760e01b815233600482015260240161041f565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930080546001600160a01b031981166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a3505050565b6108a76110d8565b61107a6110d8565b610de681611121565b61108c82611129565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b905f90a28051156110d057610f51828261118c565b6108776111fe565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0054600160401b900460ff166108a757604051631afcd79f60e31b815260040160405180910390fd5b610db46110d8565b806001600160a01b03163b5f0361115e57604051634c9c8ce360e01b81526001600160a01b038216600482015260240161041f565b5f80516020615bba83398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b60605f80846001600160a01b0316846040516111a89190611794565b5f60405180830381855af49150503d805f81146111e0576040519150601f19603f3d011682016040523d82523d5f602084013e6111e5565b606091505b50915091506111f585838361121d565b95945050505050565b34156108a75760405163b398979f60e01b815260040160405180910390fd5b6060826112325761122d82611279565b6107c6565b815115801561124957506001600160a01b0384163b155b1561127257604051639996b31560e01b81526001600160a01b038516600482015260240161041f565b50806107c6565b8051156112895780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b61440f806117ab83390190565b6001600160a01b0381168114610de6575f80fd5b5f80604083850312156112d4575f80fd5b82356112df816112af565b915060208301356112ef816112af565b809150509250929050565b634e487b7160e01b5f52604160045260245ffd5b604051601f8201601f1916810167ffffffffffffffff81118282101715611337576113376112fa565b604052919050565b5f67ffffffffffffffff821115611358576113586112fa565b5060051b60200190565b5f82601f830112611371575f80fd5b813560206113866113818361133f565b61130e565b8083825260208201915060208460051b8701019350868411156113a7575f80fd5b602086015b848110156113c357803583529183019183016113ac565b509695505050505050565b5f805f606084860312156113e0575f80fd5b833567ffffffffffffffff808211156113f7575f80fd5b818601915086601f83011261140a575f80fd5b8135602061141a6113818361133f565b82815260059290921b8401810191818101908a841115611438575f80fd5b948201945b8386101561145f578535611450816112af565b8252948201949082019061143d565b97505087013592505080821115611474575f80fd5b5061148186828701611362565b925050604084013590509250925092565b5f602082840312156114a2575f80fd5b5035919050565b5f602082840312156114b9575f80fd5b81356107c6816112af565b5f815180845260208085019450602084015f5b838110156114fc5781516001600160a01b0316875295820195908201906001016114d7565b509495945050505050565b602081525f6107c660208301846114c4565b5f806040838503121561152a575f80fd5b8235611535816112af565b915060208381013567ffffffffffffffff80821115611552575f80fd5b818601915086601f830112611565575f80fd5b813581811115611577576115776112fa565b611589601f8201601f1916850161130e565b9150808252878482850101111561159e575f80fd5b80848401858401375f848284010152508093505050509250929050565b5f80604083850312156115cc575f80fd5b82356115d7816112af565b9150602083013567ffffffffffffffff811681146112ef575f80fd5b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b634e487b7160e01b5f52601160045260245ffd5b808201808211156103cb576103cb611628565b634e487b7160e01b5f52603260045260245ffd5b608081525f61167560808301876114c4565b8281036020848101919091528651808352878201928201905f5b818110156116ab5784518352938301939183019160010161168f565b505060408501969096525050506001600160a01b039190911660609091015292915050565b5f60208083850312156116e1575f80fd5b825167ffffffffffffffff8111156116f7575f80fd5b8301601f81018513611707575f80fd5b80516117156113818261133f565b81815260059190911b82018301908381019087831115611733575f80fd5b928401925b8284101561175a57835161174b816112af565b82529284019290840190611738565b979650505050505050565b5f6001820161177657611776611628565b5060010190565b5f6020828403121561178d575f80fd5b5051919050565b5f82518060208501845e5f92019182525091905056fe60806040526512309ce54000600c556007600d5567053b1daa2fd98364600e55670493b9f4e9de52f7600f5566016bcc41e90000601055670de0b6b3a764000060115566470de4df820000601255348015610058575f80fd5b5060405161440f38038061440f83398101604081905261007791610810565b60405180604001604052806009815260200168042616c756e69204c560bc1b81525060405180604001604052806009815260200168042414c554e492d4c560bc1b81525081600390816100ca9190610969565b5060046100d78282610969565b5050600160055550600b80546001600160a01b0319166001600160a01b038316179055670de0b6b3a76400006008555f61011185856102d4565b9050806101655760405162461bcd60e51b815260206004820152601560248201527f496e697469616c697a6174696f6e206661696c6564000000000000000000000060448201526064015b60405180910390fd5b6007839055600b5460408051631bf01e9b60e01b815290516001600160a01b0390921691631bf01e9b916004808201926020929091908290030181865afa1580156101b2573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906101d69190610a28565b600980546001600160a01b0319166001600160a01b0392909216918217905564e8d4a51000600a5561024a5760405162461bcd60e51b815260206004820152601a60248201527f496e76616c696420626173652061737365742061646472657373000000000000604482015260640161015c565b5f805b85518110156102855785818151811061026857610268610a48565b60200260200101518261027b9190610a5c565b915060010161024d565b5080612710146102c95760405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964207765696768747360881b604482015260640161015c565b505050505050610ab1565b5f80600b5f9054906101000a90046001600160a01b03166001600160a01b031663cff49d686040518163ffffffff1660e01b8152600401602060405180830381865afa158015610326573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061034a9190610a28565b90505f6001600160a01b0316600b5f9054906101000a90046001600160a01b03166001600160a01b031663cff49d686040518163ffffffff1660e01b8152600401602060405180830381865afa1580156103a6573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103ca9190610a28565b6001600160a01b0316036104205760405162461bcd60e51b815260206004820152601a60248201527f496e76616c696420726562616c616e6365722061646472657373000000000000604482015260640161015c565b825184511461047c5760405162461bcd60e51b815260206004820152602260248201527f41737365747320616e642077656967687473206c656e677468206d69736d61746044820152610c6d60f31b606482015260840161015c565b5f5b8451811015610716575f6001600160a01b03168582815181106104a3576104a3610a48565b60200260200101516001600160a01b0316036105015760405162461bcd60e51b815260206004820152601560248201527f496e76616c696420617373657420616464726573730000000000000000000000604482015260640161015c565b5f84828151811061051457610514610a48565b60200260200101511161055a5760405162461bcd60e51b815260206004820152600e60248201526d125b9d985b1a59081dd95a59da1d60921b604482015260640161015c565b6006604051806060016040528087848151811061057957610579610a48565b60200260200101516001600160a01b031681526020018684815181106105a1576105a1610a48565b60209081029190910181015182525f918101829052835460018082018655948352818320845160039092020180546001600160a01b0319166001600160a01b039092169190911781559083015193810193909355604090910151600290920191909155855186908390811061061857610618610a48565b6020908102919091010151604051636eb1769f60e11b81523060048201526001600160a01b0385811660248301529192509082169063dd62ed3e90604401602060405180830381865afa158015610671573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106959190610a7b565b5f0361070d5760405163095ea7b360e01b81526001600160a01b0384811660048301525f19602483015282169063095ea7b3906044016020604051808303815f875af11580156106e7573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061070b9190610a92565b505b5060010161047e565b5060019150505b92915050565b634e487b7160e01b5f52604160045260245ffd5b604051601f8201601f191681016001600160401b038111828210171561075f5761075f610723565b604052919050565b5f6001600160401b0382111561077f5761077f610723565b5060051b60200190565b80516001600160a01b038116811461079f575f80fd5b919050565b5f82601f8301126107b3575f80fd5b815160206107c86107c383610767565b610737565b8083825260208201915060208460051b8701019350868411156107e9575f80fd5b602086015b8481101561080557805183529183019183016107ee565b509695505050505050565b5f805f8060808587031215610823575f80fd5b84516001600160401b0380821115610839575f80fd5b818701915087601f83011261084c575f80fd5b8151602061085c6107c383610767565b82815260059290921b8401810191818101908b84111561087a575f80fd5b948201945b8386101561089f5761089086610789565b8252948201949082019061087f565b918a01519198509093505050808211156108b7575f80fd5b506108c4878288016107a4565b935050604085015191506108da60608601610789565b905092959194509250565b600181811c908216806108f957607f821691505b60208210810361091757634e487b7160e01b5f52602260045260245ffd5b50919050565b601f82111561096457805f5260205f20601f840160051c810160208510156109425750805b601f840160051c820191505b81811015610961575f815560010161094e565b50505b505050565b81516001600160401b0381111561098257610982610723565b6109968161099084546108e5565b8461091d565b602080601f8311600181146109c9575f84156109b25750858301515b5f19600386901b1c1916600185901b178555610a20565b5f85815260208120601f198616915b828110156109f7578886015182559484019460019091019084016109d8565b5085821015610a1457878501515f19600388901b60f8161c191681555b505060018460011b0185555b505050505050565b5f60208284031215610a38575f80fd5b610a4182610789565b9392505050565b634e487b7160e01b5f52603260045260245ffd5b8082018082111561071d57634e487b7160e01b5f52601160045260245ffd5b5f60208284031215610a8b575f80fd5b5051919050565b5f60208284031215610aa2575f80fd5b81518015158114610a41575f80fd5b61395180610abe5f395ff3fe608060405234801561000f575f80fd5b50600436106101fd575f3560e01c80637b10399911610114578063b2b55d70116100a9578063d14ef46d11610079578063d14ef46d1461042e578063dd62ed3e14610466578063de836ebd1461049e578063e73faa2d146104b1578063f47b45e8146104b9575f80fd5b8063b2b55d70146103ec578063c2ee3a08146103ff578063cdf456e114610408578063cf8fa7641461041b575f80fd5b80638a77c8dc116100e45780638a77c8dc146103b657806395d89b41146103be578063a1f241cc146103c6578063a9059cbb146103d9575f80fd5b80637b103999146103595780637fec8d381461038457806389ab35321461038d57806389afcb44146103a3575f80fd5b806322acb8671161019557806336bf6e391161016557806336bf6e39146102e05780634aa06652146102f657806367e4ac2c146103095780636e81221c1461031e57806370a0823114610331575f80fd5b806322acb867146102a357806323b872dd146102ab578063250aa683146102be578063313ce567146102d1575f80fd5b806312899068116101d0578063128990681461026a57806318160ddd1461028b57806318904ea4146102935780631a6865021461029b575f80fd5b806306fdde03146102015780630723c9991461021f5780630902f1ac1461023f578063095ea7b314610247575b5f80fd5b6102096104cf565b6040516102169190613238565b60405180910390f35b61023261022d366004613284565b61055f565b60405161021691906132d9565b6102326107ab565b61025a6102553660046132eb565b610893565b6040519015158152602001610216565b61027d610278366004613284565b6108ac565b604051908152602001610216565b60025461027d565b61023261092f565b61027d6109ce565b6102326109df565b61025a6102b9366004613315565b610a7e565b61027d6102cc366004613284565b610aa1565b60405160128152602001610216565b6102e8610b1c565b604051610216929190613353565b61027d610304366004613315565b610b30565b610311610cf9565b60405161021691906133a3565b61027d61032c3660046133b5565b610db3565b61027d61033f366004613284565b6001600160a01b03165f9081526020819052604090205490565b600b5461036c906001600160a01b031681565b6040516001600160a01b039091168152602001610216565b61027d60075481565b610395611040565b604051610216929190613405565b6102326103b1366004613284565b6111f9565b61025a611765565b6102096117df565b61027d6103d4366004613315565b6117ee565b61025a6103e73660046132eb565b611909565b61027d6103fa366004613284565b611916565b61027d60085481565b60095461036c906001600160a01b031681565b61027d610429366004613454565b611a05565b61044161043c366004613454565b611a7a565b604080516001600160a01b039094168452602084019290925290820152606001610216565b61027d61047436600461346b565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b61027d6104ac366004613508565b611ab5565b61027d611e4d565b6104c1611f35565b6040516102169291906135ad565b6060600380546104de906135d1565b80601f016020809104026020016040519081016040528092919081815260200182805461050a906135d1565b80156105555780601f1061052c57610100808354040283529160200191610555565b820191905f5260205f20905b81548152906001019060200180831161053857829003601f168201915b5050505050905090565b60605f600b5f9054906101000a90046001600160a01b03166001600160a01b0316631acb61416040518163ffffffff1660e01b8152600401602060405180830381865afa1580156105b2573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906105d69190613603565b9050336001600160a01b038216146106095760405162461bcd60e51b81526004016106009061361e565b60405180910390fd5b610611611765565b6106545760405162461bcd60e51b8152602060048201526014602482015273149958985b185b98d9481b9bdd081b995959195960621b6044820152606401610600565b5f8061065e612033565b915091505f61066d8383612162565b90505f61067982612263565b9050600a5481610689919061365a565b6006549091505f906001600160401b038111156106a8576106a86134a2565b6040519080825280602002602001820160405280156106d1578160200160208202803683370190505b5090505f5b835181101561074a575f8482815181106106f2576106f2613671565b60200260200101511115610742576107238185838151811061071657610716613671565b602002602001015161229f565b82828151811061073557610735613671565b6020026020010181815250505b6001016106d6565b50610755888361236f565b61075d6123a7565b336001600160a01b03167fa95ad530009c6f929555e70a66aadbeae7231e45756c5b028ca77fbaa376e73e8460405161079691906132d9565b60405180910390a29550505050505b50919050565b60605f600b5f9054906101000a90046001600160a01b03166001600160a01b0316631acb61416040518163ffffffff1660e01b8152600401602060405180830381865afa1580156107fe573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108229190613603565b604051630fa6707960e21b81523060048201529091506001600160a01b03821690633e99c1e4906024015f60405180830381865afa158015610866573d5f803e3d5ffd5b505050506040513d5f823e601f3d908101601f1916820160405261088d9190810190613685565b91505090565b5f336108a081858561260a565b60019150505b92915050565b5f805b60065481101561092757826001600160a01b0316600682815481106108d6576108d6613671565b5f9182526020909120600390910201546001600160a01b03160361091f576006818154811061090757610907613671565b905f5260205f20906003020160020154915050919050565b6001016108af565b505f92915050565b6006546060905f906001600160401b0381111561094e5761094e6134a2565b604051908082528060200260200182016040528015610977578160200160208202803683370190505b5090505f5b6006548110156107a5576006818154811061099957610999613671565b905f5260205f209060030201600201548282815181106109bb576109bb613671565b602090810291909101015260010161097c565b5f806109d8612033565b5092915050565b6006546060905f906001600160401b038111156109fe576109fe6134a2565b604051908082528060200260200182016040528015610a27578160200160208202803683370190505b5090505f5b6006548110156107a55760068181548110610a4957610a49613671565b905f5260205f20906003020160010154828281518110610a6b57610a6b613671565b6020908102919091010152600101610a2c565b5f33610a8b858285612617565b610a96858585612692565b506001949350505050565b5f805b60065481101561092757826001600160a01b031660068281548110610acb57610acb613671565b5f9182526020909120600390910201546001600160a01b031603610b145760068181548110610afc57610afc613671565b905f5260205f20906003020160010154915050919050565b600101610aa4565b5f6060610b27612033565b90939092509050565b5f80600b5f9054906101000a90046001600160a01b03166001600160a01b031663bb3ba04c6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b82573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610ba69190613603565b90505f6001600160a01b0316600b5f9054906101000a90046001600160a01b03166001600160a01b031663bb3ba04c6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610c02573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610c269190613603565b6001600160a01b031603610c755760405162461bcd60e51b8152602060048201526016602482015275496e76616c6964206f7261636c65206164647265737360501b6044820152606401610600565b60405163248391ff60e01b81526001600160a01b0386811660048301528581166024830152604482018590525f919083169063248391ff90606401602060405180830381865afa158015610ccb573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610cef9190613710565b9695505050505050565b6006546060905f906001600160401b03811115610d1857610d186134a2565b604051908082528060200260200182016040528015610d41578160200160208202803683370190505b5090505f5b6006548110156107a55760068181548110610d6357610d63613671565b5f91825260209091206003909102015482516001600160a01b0390911690839083908110610d9357610d93613671565b6001600160a01b0390921660209283029190910190910152600101610d46565b5f610dbc6126ef565b600b54604080516385462d6f60e01b815290515f926001600160a01b0316916385462d6f9160048083019260209291908290030181865afa158015610e03573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610e279190613710565b9050846001600160a01b0316866001600160a01b031603610e8a5760405162461bcd60e51b815260206004820152601a60248201527f43616e6e6f742073776170207468652073616d6520746f6b656e0000000000006044820152606401610600565b5f8411610ed95760405162461bcd60e51b815260206004820181905260248201527f416d6f756e74206d7573742062652067726561746572207468616e207a65726f6044820152606401610600565b610ee16123a7565b5f610eed8787876117ee565b905080610ef987611916565b1015610f405760405162461bcd60e51b8152602060048201526016602482015275496e73756666696369656e74204c697175696469747960501b6044820152606401610600565b5f612710610f4e848461365a565b610f58919061373b565b9050610f64818361374e565b93505f8411610fc35760405162461bcd60e51b815260206004820152602560248201527f416d6f756e7420746f2073656e64206d75737420626520677265617465722074604482015264068616e20360dc1b6064820152608401610600565b610fcb6123a7565b866001600160a01b0316886001600160a01b0316866001600160a01b03167fcd3829a3813dc3cdd188fd3d01dcf3268c16be2fdd2dd21d0665418816e460628988604051611023929190918252602082015260400190565b60405180910390a45050506110386001600555565b949350505050565b6060805f8061104d612033565b6006549193509150806001600160401b0381111561106d5761106d6134a2565b604051908082528060200260200182016040528015611096578160200160208202803683370190505b509450806001600160401b038111156110b1576110b16134a2565b6040519080825280602002602001820160405280156110da578160200160208202803683370190505b5093505f5b818110156111f1575f848483815181106110fb576110fb613671565b6020026020010151612710611110919061365a565b61111a919061373b565b90505f6006838154811061113057611130613671565b905f5260205f2090600302016001015490508082111561119b57611154818361374e565b87848151811061116657611166613671565b602002602001018181525050600188848151811061118657611186613671565b911515602092830291909101909101526111e7565b6111a5828261374e565b8784815181106111b7576111b7613671565b6020026020010181815250505f8884815181106111d6576111d6613671565b911515602092830291909101909101525b50506001016110df565b505050509091565b60605f600b5f9054906101000a90046001600160a01b03166001600160a01b0316631acb61416040518163ffffffff1660e01b8152600401602060405180830381865afa15801561124c573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906112709190613603565b9050336001600160a01b0382161461129a5760405162461bcd60e51b81526004016106009061361e565b600b54604080516385462d6f60e01b815290515f926001600160a01b0316916385462d6f9160048083019260209291908290030181865afa1580156112e1573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906113059190613710565b90505f600b5f9054906101000a90046001600160a01b03166001600160a01b0316631acb61416040518163ffffffff1660e01b8152600401602060405180830381865afa158015611358573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061137c9190613603565b305f90815260208190526040902054909150806113db5760405162461bcd60e51b815260206004820152601c60248201527f5368617265206d7573742062652067726561746572207468616e2030000000006044820152606401610600565b5f6113e560025490565b90505f81116114255760405162461bcd60e51b815260206004820152600c60248201526b4e6f206c697175696469747960a01b6044820152606401610600565b6006545f906001600160401b03811115611441576114416134a2565b60405190808252806020026020018201604052801561146a578160200160208202803683370190505b5090505f61271061147b878661365a565b611485919061373b565b90505f611492828661374e565b90505f5b60065481101561157e575f876001600160a01b031663a3e113fb30600685815481106114c4576114c4613671565b5f91825260209091206003909102015460405160e084901b6001600160e01b03191681526001600160a01b03928316600482015291166024820152604401602060405180830381865afa15801561151d573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906115419190613710565b90508561154e848361365a565b611558919061373b565b85838151811061156a5761156a613671565b602090810291909101015250600101611496565b50305f908152602081905260409020548111156115dd5760405162461bcd60e51b815260206004820152601d60248201527f496e73756666696369656e742042414c554e49206c69717569646974790000006044820152606401610600565b600b5460408051631d8cf42560e11b815290515f926001600160a01b031691633b19e84a9160048083019260209291908290030181865afa158015611624573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906116489190613603565b60405163a9059cbb60e01b81526001600160a01b0382166004820152602481018590529091505f90309063a9059cbb906044016020604051808303815f875af1158015611697573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906116bb9190613761565b9050806117005760405162461bcd60e51b8152602060048201526013602482015272119959481d1c985b9cd9995c8819985a5b1959606a1b6044820152606401610600565b61170a3084612719565b6117126123a7565b8b6001600160a01b03167fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca58460405161174d91815260200190565b60405180910390a250929a9950505050505050505050565b5f805f611770611040565b915091505f5b81518110156117d65782818151811061179157611791613671565b602002602001015180156117bf57506007548282815181106117b5576117b5613671565b6020026020010151115b156117ce576001935050505090565b600101611776565b505f9250505090565b6060600480546104de906135d1565b5f806117fb858585610b30565b905083855f606061180a612033565b90925090505f6127108361181d87610aa1565b611827919061365a565b611831919061373b565b90505f6127108461184188610aa1565b61184b919061365a565b611855919061373b565b90505f8990505f611874600c54600d54600e54600f548888885f61274d565b90505f612710876118848a610aa1565b61188e919061365a565b611898919061373b565b90505f612710886118a88b610aa1565b6118b2919061365a565b6118bc919061373b565b90505f6118d8600c54600d54600e54600f5487878b600161274d565b90505f6118e5828661280c565b90505f6118f2878361282a565b9e5050505050505050505050505050509392505050565b5f336108a0818585612692565b5f80600b5f9054906101000a90046001600160a01b03166001600160a01b0316631acb61416040518163ffffffff1660e01b8152600401602060405180830381865afa158015611968573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061198c9190613603565b60405163a3e113fb60e01b81523060048201526001600160a01b0385811660248301529192509082169063a3e113fb90604401602060405180830381865afa1580156119da573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906119fe9190613710565b9392505050565b5f80611a0f612033565b91505080518310611a585760405162461bcd60e51b8152602060048201526013602482015272092dcecc2d8d2c840c2e6e6cae840d2dcc8caf606b1b6044820152606401610600565b808381518110611a6a57611a6a613671565b6020026020010151915050919050565b60068181548110611a89575f80fd5b5f9182526020909120600390910201805460018201546002909201546001600160a01b03909116925083565b5f80600b5f9054906101000a90046001600160a01b03166001600160a01b0316631acb61416040518163ffffffff1660e01b8152600401602060405180830381865afa158015611b07573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611b2b9190613603565b9050336001600160a01b03821614611b555760405162461bcd60e51b81526004016106009061361e565b5f611b5f60025490565b90505f80611b6b6107ab565b805160065491925014611bc05760405162461bcd60e51b815260206004820152601760248201527f496e76616c6964207265736572766573206c656e6774680000000000000000006044820152606401610600565b600654611bfb5760405162461bcd60e51b81526020600482015260096024820152684e6f2061737365747360b81b6044820152606401610600565b5f5b600654811015611c99575f60068281548110611c1b57611c1b613671565b5f91825260208220600390910201546009546001600160a01b039182169350168203611c5d57888381518110611c5357611c53613671565b50611c9192505050565b611c80828a8581518110611c7357611c73613671565b602002602001015161285d565b9050611c8c8186613780565b945050505b600101611bfd565b505f8211611cf45760405162461bcd60e51b815260206004820152602260248201527f546f74616c2076616c7565206d7573742062652067726561746572207468616e604482015261020360f41b6064820152608401610600565b5f835f03611d1057600a54611d09908461365a565b9050611dae565b5f611d19612033565b5090505f8111611d7a5760405162461bcd60e51b815260206004820152602660248201527f546f74616c206c6971756964697479206d75737420626520677265617465722060448201526507468616e20360d41b6064820152608401610600565b600a54611d87908261365a565b85600a5486611d96919061365a565b611da0919061365a565b611daa919061373b565b9150505b805f03611ded5760405162461bcd60e51b815260206004820152600d60248201526c04d696e7420717479206973203609c1b6044820152606401610600565b611df7888261236f565b611dff6123a7565b876001600160a01b03167f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d412139688582604051611e3a91815260200190565b60405180910390a2979650505050505050565b5f8060095f9054906101000a90046001600160a01b03166001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015611e9f573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611ec39190613793565b60ff1690505f611ed482601261374e565b611edf90600a613893565b90505f611eea612033565b5090505f611ef760025490565b9050805f03611f0a575f94505050505090565b60085481611f18858561365a565b611f22919061373b565b611f2c919061365a565b94505050505090565b6060805f600b5f9054906101000a90046001600160a01b03166001600160a01b0316631acb61416040518163ffffffff1660e01b8152600401602060405180830381865afa158015611f89573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611fad9190613603565b9050336001600160a01b03821614611fd75760405162461bcd60e51b81526004016106009061361e565b611fdf611765565b6120225760405162461bcd60e51b8152602060048201526014602482015273149958985b185b98d9481b9bdd081b995959195960621b6044820152606401610600565b61202a612877565b92509250509091565b6006545f90606090806001600160401b03811115612053576120536134a2565b60405190808252806020026020018201604052801561207c578160200160208202803683370190505b5091505f5b8181101561215c575f6006828154811061209d5761209d613671565b5f91825260208220600390910201546001600160a01b031691506120c082611916565b6009549091506001600160a01b03908116908316036120fd57808584815181106120ec576120ec613671565b60200260200101818152505061212b565b5f612108838361285d565b90508086858151811061211d5761211d613671565b602002602001018181525050505b84838151811061213d5761213d613671565b6020026020010151866121509190613780565b95505050600101612081565b50509091565b6006546060906001600160401b0381111561217f5761217f6134a2565b6040519080825280602002602001820160405280156121a8578160200160208202803683370190505b5090505f5b6006548110156109d8575f612710600683815481106121ce576121ce613671565b905f5260205f20906003020160010154866121e9919061365a565b6121f3919061373b565b90508084838151811061220857612208613671565b6020026020010151101561225a5783828151811061222857612228613671565b60200260200101518161223b919061374e565b83838151811061224d5761224d613671565b6020026020010181815250505b506001016121ad565b5f805b6006548110156107a55782818151811061228257612282613671565b6020026020010151826122959190613780565b9150600101612266565b600954600680545f926001600160a01b03169190859081106122c3576122c3613671565b5f9182526020909120600390910201546001600160a01b0316036122e85750806108a6565b5f61231e600685815481106122ff576122ff613671565b5f9182526020909120600390910201546001600160a01b031684612f02565b90505f81116119fe5760405162461bcd60e51b815260206004820152601b60248201527f496e76616c696420746f6b656e20616d6f756e7420746f2061646400000000006044820152606401610600565b6001600160a01b0382166123985760405163ec442f0560e01b81525f6004820152602401610600565b6123a35f8383612f1b565b5050565b5f806123b1611040565b915091505f5b600654811015612605575f600682815481106123d5576123d5613671565b905f5260205f2090600302016002015490508382815181106123f9576123f9613671565b6020026020010151156124ce5782828151811061241857612418613671565b60200260200101516006838154811061243357612433613671565b905f5260205f2090600302016002015f8282546124509190613780565b92505081905550806006838154811061246b5761246b613671565b905f5260205f2090600302016002015410156124c95760405162461bcd60e51b815260206004820152601e60248201527f4f766572666c6f7720696e6372656d656e74696e6720736c69707061676500006044820152606401610600565b6125fc565b8282815181106124e0576124e0613671565b6020026020010151600683815481106124fb576124fb613671565b905f5260205f2090600302016002015411156125d45782828151811061252357612523613671565b60200260200101516006838154811061253e5761253e613671565b905f5260205f2090600302016002015f82825461255b919061374e565b92505081905550806006838154811061257657612576613671565b905f5260205f2090600302016002015411156124c95760405162461bcd60e51b815260206004820152601f60248201527f556e646572666c6f772064656372656d656e74696e6720736c697070616765006044820152606401610600565b5f600683815481106125e8576125e8613671565b905f5260205f209060030201600201819055505b506001016123b7565b505050565b6126058383836001613041565b6001600160a01b038381165f908152600160209081526040808320938616835292905220545f19811461268c578181101561267e57604051637dc7a0d960e11b81526001600160a01b03841660048201526024810182905260448101839052606401610600565b61268c84848484035f613041565b50505050565b6001600160a01b0383166126bb57604051634b637e8f60e11b81525f6004820152602401610600565b6001600160a01b0382166126e45760405163ec442f0560e01b81525f6004820152602401610600565b612605838383612f1b565b60026005540361271257604051633ee5aeb560e01b815260040160405180910390fd5b6002600555565b6001600160a01b03821661274257604051634b637e8f60e11b81525f6004820152602401610600565b6123a3825f83612f1b565b5f806127598686613113565b90505f831561277d5761277686612770878a613780565b90613113565b905061278e565b61278b86612770878a61374e565b90505b80820361279f575f92505050612800565b5f6127ad8c8c8c8c87613132565b90505f6127bd8d8d8d8d87613132565b9050828411156127e9576127de6127d4848661374e565b612770848461374e565b945050505050612800565b6127de6127f6858561374e565b612770838561374e565b98975050505050505050565b5f8161282084670de0b6b3a7640000613780565b6119fe919061374e565b5f670de0b6b3a764000061283f60028261373b565b612849848661365a565b6128539190613780565b6119fe919061373b565b6009545f906119fe9084906001600160a01b031684610b30565b6060805f600b5f9054906101000a90046001600160a01b03166001600160a01b0316631acb61416040518163ffffffff1660e01b8152600401602060405180830381865afa1580156128cb573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906128ef9190613603565b90505f600b5f9054906101000a90046001600160a01b03166001600160a01b031663cff49d686040518163ffffffff1660e01b8152600401602060405180830381865afa158015612942573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906129669190613603565b6006549091505f906001600160401b03811115612985576129856134a2565b6040519080825280602002602001820160405280156129ae578160200160208202803683370190505b506006549091505f906001600160401b038111156129ce576129ce6134a2565b6040519080825280602002602001820160405280156129f7578160200160208202803683370190505b506006549091505f906001600160401b03811115612a1757612a176134a2565b604051908082528060200260200182016040528015612a40578160200160208202803683370190505b506006549091505f906001600160401b03811115612a6057612a606134a2565b604051908082528060200260200182016040528015612a89578160200160208202803683370190505b506006549091505f906001600160401b03811115612aa957612aa96134a2565b604051908082528060200260200182016040528015612ad2578160200160208202803683370190505b506006549091505f906001600160401b03811115612af257612af26134a2565b604051908082528060200260200182016040528015612b1b578160200160208202803683370190505b5090505f5b600654811015612c795760068181548110612b3d57612b3d613671565b5f91825260209091206003909102015487516001600160a01b0390911690889083908110612b6d57612b6d613671565b60200260200101906001600160a01b031690816001600160a01b03168152505060068181548110612ba057612ba0613671565b905f5260205f20906003020160010154868281518110612bc257612bc2613671565b602002602001018181525050868181518110612be057612be0613671565b60209081029190910101516040516370a0823160e01b81526001600160a01b038b81166004830152909116906370a0823190602401602060405180830381865afa158015612c30573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190612c549190613710565b858281518110612c6657612c66613671565b6020908102919091010152600101612b20565b505f612c836107ab565b9050876001600160a01b031663f0bf77148289896007548e8f60095f9054906101000a90046001600160a01b03166040518863ffffffff1660e01b8152600401612cd3979695949392919061389e565b5f604051808303815f87803b158015612cea575f80fd5b505af1158015612cfc573d5f803e3d5ffd5b505050505f5b600654811015612eb057878181518110612d1e57612d1e613671565b60209081029190910101516040516370a0823160e01b81526001600160a01b038c81166004830152909116906370a0823190602401602060405180830381865afa158015612d6e573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190612d929190613710565b858281518110612da457612da4613671565b602002602001018181525050858181518110612dc257612dc2613671565b6020026020010151858281518110612ddc57612ddc613671565b60200260200101511115612e4b57858181518110612dfc57612dfc613671565b6020026020010151858281518110612e1657612e16613671565b6020026020010151612e28919061374e565b848281518110612e3a57612e3a613671565b602002602001018181525050612ea8565b848181518110612e5d57612e5d613671565b6020026020010151868281518110612e7757612e77613671565b6020026020010151612e89919061374e565b838281518110612e9b57612e9b613671565b6020026020010181815250505b600101612d02565b50336001600160a01b03167f279b343370f587af7fb675ae7c8578e9c8abcc373236ad02c501a4771fe7a7b888604051612eea91906133a3565b60405180910390a25090999098509650505050505050565b6009545f906119fe906001600160a01b03168484610b30565b6001600160a01b038316612f45578060025f828254612f3a9190613780565b90915550612fb59050565b6001600160a01b0383165f9081526020819052604090205481811015612f975760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401610600565b6001600160a01b0384165f9081526020819052604090209082900390555b6001600160a01b038216612fd157600280548290039055612fef565b6001600160a01b0382165f9081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161303491815260200190565b60405180910390a3505050565b6001600160a01b03841661306a5760405163e602df0560e01b81525f6004820152602401610600565b6001600160a01b03831661309357604051634a1406b160e11b81525f6004820152602401610600565b6001600160a01b038085165f908152600160209081526040808320938716835292905220829055801561268c57826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161310591815260200190565b60405180910390a350505050565b5f8161312060028261373b565b612849670de0b6b3a76400008661365a565b5f8282101561314c57613145828561374e565b905061319f565b6131456b033b2e3c9fd0803ce8000000670de0b6b3a76400006131848882613174858961365a565b61317e919061373b565b906131a8565b61318e919061365a565b613198919061373b565b8790613113565b95945050505050565b5f6131b4600283613908565b5f036131cc576b033b2e3c9fd0803ce80000006131ce565b825b90506131db60028361373b565b91505b81156108a6576131ee838461321f565b92506131fb600283613908565b1561320d5761320a818461321f565b90505b61321860028361373b565b91506131de565b5f6b033b2e3c9fd0803ce800000061283f60028261373b565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b6001600160a01b0381168114613281575f80fd5b50565b5f60208284031215613294575f80fd5b81356119fe8161326d565b5f815180845260208085019450602084015f5b838110156132ce578151875295820195908201906001016132b2565b509495945050505050565b602081525f6119fe602083018461329f565b5f80604083850312156132fc575f80fd5b82356133078161326d565b946020939093013593505050565b5f805f60608486031215613327575f80fd5b83356133328161326d565b925060208401356133428161326d565b929592945050506040919091013590565b828152604060208201525f611038604083018461329f565b5f815180845260208085019450602084015f5b838110156132ce5781516001600160a01b03168752958201959082019060010161337e565b602081525f6119fe602083018461336b565b5f805f80608085870312156133c8575f80fd5b84356133d38161326d565b935060208501356133e38161326d565b92506040850135915060608501356133fa8161326d565b939692955090935050565b604080825283519082018190525f906020906060840190828701845b8281101561343f578151151584529284019290840190600101613421565b5050508381036020850152610cef818661329f565b5f60208284031215613464575f80fd5b5035919050565b5f806040838503121561347c575f80fd5b82356134878161326d565b915060208301356134978161326d565b809150509250929050565b634e487b7160e01b5f52604160045260245ffd5b604051601f8201601f191681016001600160401b03811182821017156134de576134de6134a2565b604052919050565b5f6001600160401b038211156134fe576134fe6134a2565b5060051b60200190565b5f8060408385031215613519575f80fd5b82356135248161326d565b91506020838101356001600160401b0381111561353f575f80fd5b8401601f8101861361354f575f80fd5b803561356261355d826134e6565b6134b6565b81815260059190911b82018301908381019088831115613580575f80fd5b928401925b8284101561359e57833582529284019290840190613585565b80955050505050509250929050565b604081525f6135bf604083018561329f565b828103602084015261319f818561329f565b600181811c908216806135e557607f821691505b6020821081036107a557634e487b7160e01b5f52602260045260245ffd5b5f60208284031215613613575f80fd5b81516119fe8161326d565b6020808252600e908201526d4f6e6c792050657269706865727960901b604082015260600190565b634e487b7160e01b5f52601160045260245ffd5b80820281158282048414176108a6576108a6613646565b634e487b7160e01b5f52603260045260245ffd5b5f6020808385031215613696575f80fd5b82516001600160401b038111156136ab575f80fd5b8301601f810185136136bb575f80fd5b80516136c961355d826134e6565b81815260059190911b820183019083810190878311156136e7575f80fd5b928401925b82841015613705578351825292840192908401906136ec565b979650505050505050565b5f60208284031215613720575f80fd5b5051919050565b634e487b7160e01b5f52601260045260245ffd5b5f8261374957613749613727565b500490565b818103818111156108a6576108a6613646565b5f60208284031215613771575f80fd5b815180151581146119fe575f80fd5b808201808211156108a6576108a6613646565b5f602082840312156137a3575f80fd5b815160ff811681146119fe575f80fd5b600181815b808511156137ed57815f19048211156137d3576137d3613646565b808516156137e057918102915b93841c93908002906137b8565b509250929050565b5f82613803575060016108a6565b8161380f57505f6108a6565b8160018114613825576002811461382f5761384b565b60019150506108a6565b60ff84111561384057613840613646565b50506001821b6108a6565b5060208310610133831016604e8410600b841016171561386e575081810a6108a6565b61387883836137b3565b805f190482111561388b5761388b613646565b029392505050565b5f6119fe83836137f5565b60e081525f6138b060e083018a61329f565b82810360208401526138c2818a61336b565b905082810360408401526138d6818961329f565b606084019790975250506001600160a01b03938416608082015291831660a083015290911660c0909101529392505050565b5f8261391657613916613727565b50069056fea26469706673582212201ccd53b54c134b34e4ebd8d2ff63d2d5f0ce5f0a9f6fe046ebff11ffa5e6b42f64736f6c63430008190033360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbca2646970667358221220556386326d680f6b13840c18de3d33d8ebc594c8877fe6b63215ccae641ac86164736f6c63430008190033","opcodes":"PUSH1 0xA0 PUSH1 0x40 MSTORE ADDRESS PUSH1 0x80 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0x12 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x80 MLOAD PUSH2 0x5C0F PUSH2 0x39 PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0xDF4 ADD MSTORE DUP2 DUP2 PUSH2 0xE1D ADD MSTORE PUSH2 0xF61 ADD MSTORE PUSH2 0x5C0F PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x105 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x89345EFB GT PUSH2 0x92 JUMPI DUP1 PUSH4 0xB4340E6A GT PUSH2 0x62 JUMPI DUP1 PUSH4 0xB4340E6A EQ PUSH2 0x31F JUMPI DUP1 PUSH4 0xB4AC6860 EQ PUSH2 0x33E JUMPI DUP1 PUSH4 0xC4D66DE8 EQ PUSH2 0x351 JUMPI DUP1 PUSH4 0xD88FF1F4 EQ PUSH2 0x370 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x384 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x89345EFB EQ PUSH2 0x258 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x287 JUMPI DUP1 PUSH4 0x8F2248BC EQ PUSH2 0x2C3 JUMPI DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0x2E2 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4F1EF286 GT PUSH2 0xD8 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x1AF JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x1C4 JUMPI DUP1 PUSH4 0x531AA03E EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x225 JUMPI DUP1 PUSH4 0x7B103999 EQ PUSH2 0x239 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2D5E94A7 EQ PUSH2 0x109 JUMPI DUP1 PUSH4 0x3069873B EQ PUSH2 0x145 JUMPI DUP1 PUSH4 0x41D1DE97 EQ PUSH2 0x164 JUMPI DUP1 PUSH4 0x4276B97B EQ PUSH2 0x183 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x114 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x128 PUSH2 0x123 CALLDATASIZE PUSH1 0x4 PUSH2 0x12C3 JUMP JUMPDEST PUSH2 0x3A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x150 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x128 PUSH2 0x15F CALLDATASIZE PUSH1 0x4 PUSH2 0x13CE JUMP JUMPDEST PUSH2 0x3D1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x16F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x128 PUSH2 0x17E CALLDATASIZE PUSH1 0x4 PUSH2 0x1492 JUMP JUMPDEST PUSH2 0x7CD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A2 PUSH2 0x19D CALLDATASIZE PUSH1 0x4 PUSH2 0x14A9 JUMP JUMPDEST PUSH2 0x7F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13C SWAP2 SWAP1 PUSH2 0x1507 JUMP JUMPDEST PUSH2 0x1C2 PUSH2 0x1BD CALLDATASIZE PUSH1 0x4 PUSH2 0x1519 JUMP JUMPDEST PUSH2 0x85C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1CF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D8 PUSH2 0x87B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x13C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x128 PUSH2 0x200 CALLDATASIZE PUSH1 0x4 PUSH2 0x12C3 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x230 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C2 PUSH2 0x896 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x244 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0x128 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x263 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x277 PUSH2 0x272 CALLDATASIZE PUSH1 0x4 PUSH2 0x14A9 JUMP JUMPDEST PUSH2 0x8A9 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x13C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x292 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x128 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2CE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C2 PUSH2 0x2DD CALLDATASIZE PUSH1 0x4 PUSH2 0x15BB JUMP JUMPDEST PUSH2 0x903 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2ED JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x312 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x352E302E3 PUSH1 0xDC SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13C SWAP2 SWAP1 PUSH2 0x15F3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A2 PUSH2 0x339 CALLDATASIZE PUSH1 0x4 PUSH2 0x14A9 JUMP JUMPDEST PUSH2 0x9EE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x349 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH0 SLOAD PUSH2 0x1D8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x35C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C2 PUSH2 0x36B CALLDATASIZE PUSH1 0x4 PUSH2 0x14A9 JUMP JUMPDEST PUSH2 0xC1C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A2 PUSH2 0xD4D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x38F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C2 PUSH2 0x39E CALLDATASIZE PUSH1 0x4 PUSH2 0x14A9 JUMP JUMPDEST PUSH2 0xDAC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD AND JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 DUP5 MLOAD GT PUSH2 0x428 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4174206C656173742074776F2061737365747320617265207265717569726564 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 MLOAD DUP5 MLOAD EQ PUSH2 0x484 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41737365747320616E642077656967687473206C656E677468206D69736D6174 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0xC6D PUSH1 0xF3 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x41F JUMP JUMPDEST PUSH0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x58F JUMPI PUSH0 PUSH2 0x49B DUP3 PUSH1 0x1 PUSH2 0x163C JUMP JUMPDEST SWAP1 POP JUMPDEST DUP6 MLOAD DUP2 LT ISZERO PUSH2 0x586 JUMPI PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x2 PUSH0 DUP9 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x4C6 JUMPI PUSH2 0x4C6 PUSH2 0x164F JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP9 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x500 JUMPI PUSH2 0x500 PUSH2 0x164F JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP4 MSTORE SWAP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD PUSH0 KECCAK256 SLOAD AND EQ PUSH2 0x57E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x506F6F6C20616C72656164792065786973747320666F72207468697320706169 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x41F JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x49E JUMP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x486 JUMP JUMPDEST POP PUSH0 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 MLOAD PUSH2 0x5B5 SWAP1 PUSH2 0x12A2 JUMP JUMPDEST PUSH2 0x5C2 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1663 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH2 0x5DB JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP PUSH0 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE DUP2 DUP1 MSTORE PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND OR SWAP1 SSTORE SWAP1 SWAP2 POP DUP2 SWAP1 JUMPDEST DUP7 MLOAD DUP2 LT ISZERO PUSH2 0x780 JUMPI PUSH0 PUSH2 0x63E DUP3 PUSH1 0x1 PUSH2 0x163C JUMP JUMPDEST SWAP1 POP JUMPDEST DUP8 MLOAD DUP2 LT ISZERO PUSH2 0x777 JUMPI DUP3 PUSH1 0x2 PUSH0 DUP11 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x660 JUMPI PUSH2 0x660 PUSH2 0x164F JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP11 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x69A JUMPI PUSH2 0x69A PUSH2 0x164F JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP DUP3 PUSH1 0x2 PUSH0 DUP11 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x6FA JUMPI PUSH2 0x6FA PUSH2 0x164F JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP11 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x734 JUMPI PUSH2 0x734 PUSH2 0x164F JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP4 MSTORE SWAP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD PUSH0 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP3 SWAP1 SWAP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x1 ADD PUSH2 0x641 JUMP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x629 JUMP JUMPDEST POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xA4AF51F99A910B453B81F2F9F5673ACD70BF8895729E0A6DE8E5E0908D89F2B DUP8 PUSH1 0x40 MLOAD PUSH2 0x7BA SWAP2 SWAP1 PUSH2 0x1507 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 SWAP2 POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x7DB JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP3 SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x67E4AC2C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x835 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x7C6 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x16D0 JUMP JUMPDEST PUSH2 0x864 PUSH2 0xDE9 JUMP JUMPDEST PUSH2 0x86D DUP3 PUSH2 0xE8D JUMP JUMPDEST PUSH2 0x877 DUP3 DUP3 PUSH2 0xE95 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0x884 PUSH2 0xF56 JUMP JUMPDEST POP PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5BBA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x89E PUSH2 0xF9F JUMP JUMPDEST PUSH2 0x8A7 PUSH0 PUSH2 0xFFA JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP1 JUMPDEST PUSH0 SLOAD DUP2 LT ISZERO PUSH2 0x8FB JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x8D1 JUMPI PUSH2 0x8D1 PUSH2 0x164F JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x8F3 JUMPI POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x8AC JUMP JUMPDEST POP PUSH0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 DUP1 SLOAD DUP3 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x40 SHL SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x94C JUMPI POP DUP1 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP5 AND SWAP2 AND LT ISZERO JUMPDEST ISZERO PUSH2 0x96A JUMPI PUSH1 0x40 MLOAD PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x40 SHL PUSH8 0xFFFFFFFFFFFFFFFF DUP5 AND PUSH9 0xFFFFFFFFFFFFFFFFFF NOT SWAP1 SWAP3 AND DUP3 OR OR DUP3 SSTORE PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND OR SWAP1 SSTORE DUP2 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND DUP3 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x60 SWAP2 SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA0D JUMPI PUSH2 0xA0D PUSH2 0x12FA JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xA36 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP1 JUMPDEST PUSH0 SLOAD DUP2 LT ISZERO PUSH2 0xB76 JUMPI PUSH0 DUP1 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xA58 JUMPI PUSH2 0xA58 PUSH2 0x164F JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP PUSH0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x67E4AC2C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xAB1 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0xAD8 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x16D0 JUMP JUMPDEST SWAP1 POP PUSH0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0xB5C JUMPI DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xB01 JUMPI PUSH2 0xB01 PUSH2 0x164F JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xB54 JUMPI DUP3 DUP7 DUP7 DUP2 MLOAD DUP2 LT PUSH2 0xB2A JUMPI PUSH2 0xB2A PUSH2 0x164F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE DUP5 PUSH2 0xB4C DUP2 PUSH2 0x1765 JUMP JUMPDEST SWAP6 POP POP PUSH2 0xB5C JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0xADC JUMP JUMPDEST POP DUP5 MLOAD DUP5 SUB PUSH2 0xB6C JUMPI POP POP PUSH2 0xB76 JUMP JUMPDEST POP POP PUSH1 0x1 ADD PUSH2 0xA3C JUMP JUMPDEST POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xB91 JUMPI PUSH2 0xB91 PUSH2 0x12FA JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xBBA JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xC13 JUMPI DUP4 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0xBD9 JUMPI PUSH2 0xBD9 PUSH2 0x164F JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xBF3 JUMPI PUSH2 0xBF3 PUSH2 0x164F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE PUSH1 0x1 ADD PUSH2 0xBBF JUMP JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 DUP1 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 DIV PUSH1 0xFF AND ISZERO SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH0 DUP2 ISZERO DUP1 ISZERO PUSH2 0xC61 JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x1 EQ DUP1 ISZERO PUSH2 0xC7D JUMPI POP ADDRESS EXTCODESIZE ISZERO JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0xC8B JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0xCA9 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 OR DUP6 SSTORE DUP4 ISZERO PUSH2 0xCD3 JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND PUSH1 0x1 PUSH1 0x40 SHL OR DUP6 SSTORE JUMPDEST PUSH2 0xCDB PUSH2 0x106A JUMP JUMPDEST PUSH2 0xCE4 CALLER PUSH2 0x1072 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND OR SWAP1 SSTORE DUP4 ISZERO PUSH2 0xD45 JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND DUP6 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0xDA2 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xD84 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xDB4 PUSH2 0xF9F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xDDD JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x41F JUMP JUMPDEST PUSH2 0xDE6 DUP2 PUSH2 0xFFA JUMP JUMPDEST POP JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ DUP1 PUSH2 0xE6F JUMPI POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xE63 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5BBA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x8A7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x703E46DD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDE6 PUSH2 0xF9F JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xEEF JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xEEC SWAP2 DUP2 ADD SWAP1 PUSH2 0x177D JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xF17 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x41F JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5BBA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 EQ PUSH2 0xF47 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2A875269 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x41F JUMP JUMPDEST PUSH2 0xF51 DUP4 DUP4 PUSH2 0x1083 JUMP JUMPDEST POP POP POP JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x8A7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x703E46DD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH2 0xFD1 PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x8A7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x41F JUMP JUMPDEST PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 DUP3 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP3 AND SWAP2 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x8A7 PUSH2 0x10D8 JUMP JUMPDEST PUSH2 0x107A PUSH2 0x10D8 JUMP JUMPDEST PUSH2 0xDE6 DUP2 PUSH2 0x1121 JUMP JUMPDEST PUSH2 0x108C DUP3 PUSH2 0x1129 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH0 SWAP1 LOG2 DUP1 MLOAD ISZERO PUSH2 0x10D0 JUMPI PUSH2 0xF51 DUP3 DUP3 PUSH2 0x118C JUMP JUMPDEST PUSH2 0x877 PUSH2 0x11FE JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SLOAD PUSH1 0x1 PUSH1 0x40 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x8A7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1AFCD79F PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDB4 PUSH2 0x10D8 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE PUSH0 SUB PUSH2 0x115E JUMPI PUSH1 0x40 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x41F JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5BBA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x11A8 SWAP2 SWAP1 PUSH2 0x1794 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x11E0 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x11E5 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x11F5 DUP6 DUP4 DUP4 PUSH2 0x121D JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x8A7 JUMPI PUSH1 0x40 MLOAD PUSH4 0xB398979F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x1232 JUMPI PUSH2 0x122D DUP3 PUSH2 0x1279 JUMP JUMPDEST PUSH2 0x7C6 JUMP JUMPDEST DUP2 MLOAD ISZERO DUP1 ISZERO PUSH2 0x1249 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0x1272 JUMPI PUSH1 0x40 MLOAD PUSH4 0x9996B315 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x41F JUMP JUMPDEST POP DUP1 PUSH2 0x7C6 JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x1289 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA12F521 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x440F DUP1 PUSH2 0x17AB DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xDE6 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x12D4 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x12DF DUP2 PUSH2 0x12AF JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x12EF DUP2 PUSH2 0x12AF JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1337 JUMPI PUSH2 0x1337 PUSH2 0x12FA JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1358 JUMPI PUSH2 0x1358 PUSH2 0x12FA JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1371 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x1386 PUSH2 0x1381 DUP4 PUSH2 0x133F JUMP JUMPDEST PUSH2 0x130E JUMP JUMPDEST DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP5 PUSH1 0x5 SHL DUP8 ADD ADD SWAP4 POP DUP7 DUP5 GT ISZERO PUSH2 0x13A7 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x13C3 JUMPI DUP1 CALLDATALOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x13AC JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x13E0 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x13F7 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x140A JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x141A PUSH2 0x1381 DUP4 PUSH2 0x133F JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP11 DUP5 GT ISZERO PUSH2 0x1438 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP5 DUP3 ADD SWAP5 JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0x145F JUMPI DUP6 CALLDATALOAD PUSH2 0x1450 DUP2 PUSH2 0x12AF JUMP JUMPDEST DUP3 MSTORE SWAP5 DUP3 ADD SWAP5 SWAP1 DUP3 ADD SWAP1 PUSH2 0x143D JUMP JUMPDEST SWAP8 POP POP DUP8 ADD CALLDATALOAD SWAP3 POP POP DUP1 DUP3 GT ISZERO PUSH2 0x1474 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1481 DUP7 DUP3 DUP8 ADD PUSH2 0x1362 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14A2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14B9 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x7C6 DUP2 PUSH2 0x12AF JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP5 ADD PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x14FC JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x14D7 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0x7C6 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x14C4 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x152A JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1535 DUP2 PUSH2 0x12AF JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 DUP2 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1552 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1565 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x1577 JUMPI PUSH2 0x1577 PUSH2 0x12FA JUMP JUMPDEST PUSH2 0x1589 PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP6 ADD PUSH2 0x130E JUMP JUMPDEST SWAP2 POP DUP1 DUP3 MSTORE DUP8 DUP5 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x159E JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 DUP5 DUP5 ADD DUP6 DUP5 ADD CALLDATACOPY PUSH0 DUP5 DUP3 DUP5 ADD ADD MSTORE POP DUP1 SWAP4 POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15CC JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x15D7 DUP2 PUSH2 0x12AF JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x12EF JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x3CB JUMPI PUSH2 0x3CB PUSH2 0x1628 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x80 DUP2 MSTORE PUSH0 PUSH2 0x1675 PUSH1 0x80 DUP4 ADD DUP8 PUSH2 0x14C4 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP7 MLOAD DUP1 DUP4 MSTORE DUP8 DUP3 ADD SWAP3 DUP3 ADD SWAP1 PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x16AB JUMPI DUP5 MLOAD DUP4 MSTORE SWAP4 DUP4 ADD SWAP4 SWAP2 DUP4 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x168F JUMP JUMPDEST POP POP PUSH1 0x40 DUP6 ADD SWAP7 SWAP1 SWAP7 MSTORE POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x60 SWAP1 SWAP2 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x16E1 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x16F7 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x1707 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH2 0x1715 PUSH2 0x1381 DUP3 PUSH2 0x133F JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH1 0x5 SWAP2 SWAP1 SWAP2 SHL DUP3 ADD DUP4 ADD SWAP1 DUP4 DUP2 ADD SWAP1 DUP8 DUP4 GT ISZERO PUSH2 0x1733 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP3 DUP5 ADD SWAP3 JUMPDEST DUP3 DUP5 LT ISZERO PUSH2 0x175A JUMPI DUP4 MLOAD PUSH2 0x174B DUP2 PUSH2 0x12AF JUMP JUMPDEST DUP3 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH2 0x1738 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 DUP3 ADD PUSH2 0x1776 JUMPI PUSH2 0x1776 PUSH2 0x1628 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x178D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP6 ADD DUP5 MCOPY PUSH0 SWAP3 ADD SWAP2 DUP3 MSTORE POP SWAP2 SWAP1 POP JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH6 0x12309CE54000 PUSH1 0xC SSTORE PUSH1 0x7 PUSH1 0xD SSTORE PUSH8 0x53B1DAA2FD98364 PUSH1 0xE SSTORE PUSH8 0x493B9F4E9DE52F7 PUSH1 0xF SSTORE PUSH7 0x16BCC41E90000 PUSH1 0x10 SSTORE PUSH8 0xDE0B6B3A7640000 PUSH1 0x11 SSTORE PUSH7 0x470DE4DF820000 PUSH1 0x12 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x58 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x440F CODESIZE SUB DUP1 PUSH2 0x440F DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x77 SWAP2 PUSH2 0x810 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD PUSH9 0x42616C756E69204C5 PUSH1 0xBC SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD PUSH9 0x42414C554E492D4C5 PUSH1 0xBC SHL DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0xCA SWAP2 SWAP1 PUSH2 0x969 JUMP JUMPDEST POP PUSH1 0x4 PUSH2 0xD7 DUP3 DUP3 PUSH2 0x969 JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0x5 SSTORE POP PUSH1 0xB DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND OR SWAP1 SSTORE PUSH8 0xDE0B6B3A7640000 PUSH1 0x8 SSTORE PUSH0 PUSH2 0x111 DUP6 DUP6 PUSH2 0x2D4 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x165 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A6174696F6E206661696C65640000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 DUP4 SWAP1 SSTORE PUSH1 0xB SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x1BF01E9B PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x1BF01E9B SWAP2 PUSH1 0x4 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1B2 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1D6 SWAP2 SWAP1 PUSH2 0xA28 JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 DUP3 OR SWAP1 SSTORE PUSH5 0xE8D4A51000 PUSH1 0xA SSTORE PUSH2 0x24A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420626173652061737365742061646472657373000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x15C JUMP JUMPDEST PUSH0 DUP1 JUMPDEST DUP6 MLOAD DUP2 LT ISZERO PUSH2 0x285 JUMPI DUP6 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x268 JUMPI PUSH2 0x268 PUSH2 0xA48 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP3 PUSH2 0x27B SWAP2 SWAP1 PUSH2 0xA5C JUMP JUMPDEST SWAP2 POP PUSH1 0x1 ADD PUSH2 0x24D JUMP JUMPDEST POP DUP1 PUSH2 0x2710 EQ PUSH2 0x2C9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x496E76616C69642077656967687473 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x15C JUMP JUMPDEST POP POP POP POP POP POP PUSH2 0xAB1 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xCFF49D68 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x326 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x34A SWAP2 SWAP1 PUSH2 0xA28 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xCFF49D68 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3A6 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3CA SWAP2 SWAP1 PUSH2 0xA28 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x420 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420726562616C616E6365722061646472657373000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x15C JUMP JUMPDEST DUP3 MLOAD DUP5 MLOAD EQ PUSH2 0x47C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41737365747320616E642077656967687473206C656E677468206D69736D6174 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0xC6D PUSH1 0xF3 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x15C JUMP JUMPDEST PUSH0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x716 JUMPI PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x4A3 JUMPI PUSH2 0x4A3 PUSH2 0xA48 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x501 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420617373657420616464726573730000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x15C JUMP JUMPDEST PUSH0 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x514 JUMPI PUSH2 0x514 PUSH2 0xA48 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD GT PUSH2 0x55A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x125B9D985B1A59081DD95A59DA1D PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x15C JUMP JUMPDEST PUSH1 0x6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP8 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x579 JUMPI PUSH2 0x579 PUSH2 0xA48 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x5A1 JUMPI PUSH2 0x5A1 PUSH2 0xA48 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD DUP3 MSTORE PUSH0 SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE DUP4 SLOAD PUSH1 0x1 DUP1 DUP3 ADD DUP7 SSTORE SWAP5 DUP4 MSTORE DUP2 DUP4 KECCAK256 DUP5 MLOAD PUSH1 0x3 SWAP1 SWAP3 MUL ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR DUP2 SSTORE SWAP1 DUP4 ADD MLOAD SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x40 SWAP1 SWAP2 ADD MLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 SSTORE DUP6 MLOAD DUP7 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x618 JUMPI PUSH2 0x618 PUSH2 0xA48 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE SWAP2 SWAP3 POP SWAP1 DUP3 AND SWAP1 PUSH4 0xDD62ED3E SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x671 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x695 SWAP2 SWAP1 PUSH2 0xA7B JUMP JUMPDEST PUSH0 SUB PUSH2 0x70D JUMPI PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH0 NOT PUSH1 0x24 DUP4 ADD MSTORE DUP3 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6E7 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x70B SWAP2 SWAP1 PUSH2 0xA92 JUMP JUMPDEST POP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x47E JUMP JUMPDEST POP PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x75F JUMPI PUSH2 0x75F PUSH2 0x723 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0x77F JUMPI PUSH2 0x77F PUSH2 0x723 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x79F JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x7B3 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x20 PUSH2 0x7C8 PUSH2 0x7C3 DUP4 PUSH2 0x767 JUMP JUMPDEST PUSH2 0x737 JUMP JUMPDEST DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP5 PUSH1 0x5 SHL DUP8 ADD ADD SWAP4 POP DUP7 DUP5 GT ISZERO PUSH2 0x7E9 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x805 JUMPI DUP1 MLOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x7EE JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x823 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP5 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x839 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x84C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x20 PUSH2 0x85C PUSH2 0x7C3 DUP4 PUSH2 0x767 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP12 DUP5 GT ISZERO PUSH2 0x87A JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP5 DUP3 ADD SWAP5 JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0x89F JUMPI PUSH2 0x890 DUP7 PUSH2 0x789 JUMP JUMPDEST DUP3 MSTORE SWAP5 DUP3 ADD SWAP5 SWAP1 DUP3 ADD SWAP1 PUSH2 0x87F JUMP JUMPDEST SWAP2 DUP11 ADD MLOAD SWAP2 SWAP9 POP SWAP1 SWAP4 POP POP POP DUP1 DUP3 GT ISZERO PUSH2 0x8B7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x8C4 DUP8 DUP3 DUP9 ADD PUSH2 0x7A4 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD MLOAD SWAP2 POP PUSH2 0x8DA PUSH1 0x60 DUP7 ADD PUSH2 0x789 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x8F9 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x917 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x964 JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x942 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x961 JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x94E JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x982 JUMPI PUSH2 0x982 PUSH2 0x723 JUMP JUMPDEST PUSH2 0x996 DUP2 PUSH2 0x990 DUP5 SLOAD PUSH2 0x8E5 JUMP JUMPDEST DUP5 PUSH2 0x91D JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x9C9 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x9B2 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0xA20 JUMP JUMPDEST PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x9F7 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x9D8 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0xA14 JUMPI DUP8 DUP6 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP PUSH1 0x1 DUP5 PUSH1 0x1 SHL ADD DUP6 SSTORE JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA38 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xA41 DUP3 PUSH2 0x789 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x71D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA8B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAA2 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xA41 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x3951 DUP1 PUSH2 0xABE PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1FD JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7B103999 GT PUSH2 0x114 JUMPI DUP1 PUSH4 0xB2B55D70 GT PUSH2 0xA9 JUMPI DUP1 PUSH4 0xD14EF46D GT PUSH2 0x79 JUMPI DUP1 PUSH4 0xD14EF46D EQ PUSH2 0x42E JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x466 JUMPI DUP1 PUSH4 0xDE836EBD EQ PUSH2 0x49E JUMPI DUP1 PUSH4 0xE73FAA2D EQ PUSH2 0x4B1 JUMPI DUP1 PUSH4 0xF47B45E8 EQ PUSH2 0x4B9 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xB2B55D70 EQ PUSH2 0x3EC JUMPI DUP1 PUSH4 0xC2EE3A08 EQ PUSH2 0x3FF JUMPI DUP1 PUSH4 0xCDF456E1 EQ PUSH2 0x408 JUMPI DUP1 PUSH4 0xCF8FA764 EQ PUSH2 0x41B JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8A77C8DC GT PUSH2 0xE4 JUMPI DUP1 PUSH4 0x8A77C8DC EQ PUSH2 0x3B6 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x3BE JUMPI DUP1 PUSH4 0xA1F241CC EQ PUSH2 0x3C6 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x3D9 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7B103999 EQ PUSH2 0x359 JUMPI DUP1 PUSH4 0x7FEC8D38 EQ PUSH2 0x384 JUMPI DUP1 PUSH4 0x89AB3532 EQ PUSH2 0x38D JUMPI DUP1 PUSH4 0x89AFCB44 EQ PUSH2 0x3A3 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x22ACB867 GT PUSH2 0x195 JUMPI DUP1 PUSH4 0x36BF6E39 GT PUSH2 0x165 JUMPI DUP1 PUSH4 0x36BF6E39 EQ PUSH2 0x2E0 JUMPI DUP1 PUSH4 0x4AA06652 EQ PUSH2 0x2F6 JUMPI DUP1 PUSH4 0x67E4AC2C EQ PUSH2 0x309 JUMPI DUP1 PUSH4 0x6E81221C EQ PUSH2 0x31E JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x331 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x22ACB867 EQ PUSH2 0x2A3 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2AB JUMPI DUP1 PUSH4 0x250AA683 EQ PUSH2 0x2BE JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2D1 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x12899068 GT PUSH2 0x1D0 JUMPI DUP1 PUSH4 0x12899068 EQ PUSH2 0x26A JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x28B JUMPI DUP1 PUSH4 0x18904EA4 EQ PUSH2 0x293 JUMPI DUP1 PUSH4 0x1A686502 EQ PUSH2 0x29B JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x201 JUMPI DUP1 PUSH4 0x723C999 EQ PUSH2 0x21F JUMPI DUP1 PUSH4 0x902F1AC EQ PUSH2 0x23F JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x247 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x209 PUSH2 0x4CF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x216 SWAP2 SWAP1 PUSH2 0x3238 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x232 PUSH2 0x22D CALLDATASIZE PUSH1 0x4 PUSH2 0x3284 JUMP JUMPDEST PUSH2 0x55F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x216 SWAP2 SWAP1 PUSH2 0x32D9 JUMP JUMPDEST PUSH2 0x232 PUSH2 0x7AB JUMP JUMPDEST PUSH2 0x25A PUSH2 0x255 CALLDATASIZE PUSH1 0x4 PUSH2 0x32EB JUMP JUMPDEST PUSH2 0x893 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x216 JUMP JUMPDEST PUSH2 0x27D PUSH2 0x278 CALLDATASIZE PUSH1 0x4 PUSH2 0x3284 JUMP JUMPDEST PUSH2 0x8AC JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x216 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x27D JUMP JUMPDEST PUSH2 0x232 PUSH2 0x92F JUMP JUMPDEST PUSH2 0x27D PUSH2 0x9CE JUMP JUMPDEST PUSH2 0x232 PUSH2 0x9DF JUMP JUMPDEST PUSH2 0x25A PUSH2 0x2B9 CALLDATASIZE PUSH1 0x4 PUSH2 0x3315 JUMP JUMPDEST PUSH2 0xA7E JUMP JUMPDEST PUSH2 0x27D PUSH2 0x2CC CALLDATASIZE PUSH1 0x4 PUSH2 0x3284 JUMP JUMPDEST PUSH2 0xAA1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x216 JUMP JUMPDEST PUSH2 0x2E8 PUSH2 0xB1C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x216 SWAP3 SWAP2 SWAP1 PUSH2 0x3353 JUMP JUMPDEST PUSH2 0x27D PUSH2 0x304 CALLDATASIZE PUSH1 0x4 PUSH2 0x3315 JUMP JUMPDEST PUSH2 0xB30 JUMP JUMPDEST PUSH2 0x311 PUSH2 0xCF9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x216 SWAP2 SWAP1 PUSH2 0x33A3 JUMP JUMPDEST PUSH2 0x27D PUSH2 0x32C CALLDATASIZE PUSH1 0x4 PUSH2 0x33B5 JUMP JUMPDEST PUSH2 0xDB3 JUMP JUMPDEST PUSH2 0x27D PUSH2 0x33F CALLDATASIZE PUSH1 0x4 PUSH2 0x3284 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH2 0x36C SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x216 JUMP JUMPDEST PUSH2 0x27D PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x395 PUSH2 0x1040 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x216 SWAP3 SWAP2 SWAP1 PUSH2 0x3405 JUMP JUMPDEST PUSH2 0x232 PUSH2 0x3B1 CALLDATASIZE PUSH1 0x4 PUSH2 0x3284 JUMP JUMPDEST PUSH2 0x11F9 JUMP JUMPDEST PUSH2 0x25A PUSH2 0x1765 JUMP JUMPDEST PUSH2 0x209 PUSH2 0x17DF JUMP JUMPDEST PUSH2 0x27D PUSH2 0x3D4 CALLDATASIZE PUSH1 0x4 PUSH2 0x3315 JUMP JUMPDEST PUSH2 0x17EE JUMP JUMPDEST PUSH2 0x25A PUSH2 0x3E7 CALLDATASIZE PUSH1 0x4 PUSH2 0x32EB JUMP JUMPDEST PUSH2 0x1909 JUMP JUMPDEST PUSH2 0x27D PUSH2 0x3FA CALLDATASIZE PUSH1 0x4 PUSH2 0x3284 JUMP JUMPDEST PUSH2 0x1916 JUMP JUMPDEST PUSH2 0x27D PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x36C SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x27D PUSH2 0x429 CALLDATASIZE PUSH1 0x4 PUSH2 0x3454 JUMP JUMPDEST PUSH2 0x1A05 JUMP JUMPDEST PUSH2 0x441 PUSH2 0x43C CALLDATASIZE PUSH1 0x4 PUSH2 0x3454 JUMP JUMPDEST PUSH2 0x1A7A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x216 JUMP JUMPDEST PUSH2 0x27D PUSH2 0x474 CALLDATASIZE PUSH1 0x4 PUSH2 0x346B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x27D PUSH2 0x4AC CALLDATASIZE PUSH1 0x4 PUSH2 0x3508 JUMP JUMPDEST PUSH2 0x1AB5 JUMP JUMPDEST PUSH2 0x27D PUSH2 0x1E4D JUMP JUMPDEST PUSH2 0x4C1 PUSH2 0x1F35 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x216 SWAP3 SWAP2 SWAP1 PUSH2 0x35AD JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x4DE SWAP1 PUSH2 0x35D1 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x50A SWAP1 PUSH2 0x35D1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x555 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x52C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x555 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x538 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1ACB6141 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5B2 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5D6 SWAP2 SWAP1 PUSH2 0x3603 JUMP JUMPDEST SWAP1 POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0x609 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x600 SWAP1 PUSH2 0x361E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x611 PUSH2 0x1765 JUMP JUMPDEST PUSH2 0x654 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x149958985B185B98D9481B9BDD081B9959591959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x600 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x65E PUSH2 0x2033 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH0 PUSH2 0x66D DUP4 DUP4 PUSH2 0x2162 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x679 DUP3 PUSH2 0x2263 JUMP JUMPDEST SWAP1 POP PUSH1 0xA SLOAD DUP2 PUSH2 0x689 SWAP2 SWAP1 PUSH2 0x365A JUMP JUMPDEST PUSH1 0x6 SLOAD SWAP1 SWAP2 POP PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x6A8 JUMPI PUSH2 0x6A8 PUSH2 0x34A2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x6D1 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x74A JUMPI PUSH0 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x6F2 JUMPI PUSH2 0x6F2 PUSH2 0x3671 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD GT ISZERO PUSH2 0x742 JUMPI PUSH2 0x723 DUP2 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x716 JUMPI PUSH2 0x716 PUSH2 0x3671 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x229F JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x735 JUMPI PUSH2 0x735 PUSH2 0x3671 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x6D6 JUMP JUMPDEST POP PUSH2 0x755 DUP9 DUP4 PUSH2 0x236F JUMP JUMPDEST PUSH2 0x75D PUSH2 0x23A7 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xA95AD530009C6F929555E70A66AADBEAE7231E45756C5B028CA77FBAA376E73E DUP5 PUSH1 0x40 MLOAD PUSH2 0x796 SWAP2 SWAP1 PUSH2 0x32D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 SWAP6 POP POP POP POP POP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1ACB6141 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7FE JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x822 SWAP2 SWAP1 PUSH2 0x3603 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xFA67079 PUSH1 0xE2 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0x3E99C1E4 SWAP1 PUSH1 0x24 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x866 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x88D SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x3685 JUMP JUMPDEST SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x8A0 DUP2 DUP6 DUP6 PUSH2 0x260A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x927 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x8D6 JUMPI PUSH2 0x8D6 PUSH2 0x3671 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x91F JUMPI PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x907 JUMPI PUSH2 0x907 PUSH2 0x3671 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x2 ADD SLOAD SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x8AF JUMP JUMPDEST POP PUSH0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x60 SWAP1 PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x94E JUMPI PUSH2 0x94E PUSH2 0x34A2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x977 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x7A5 JUMPI PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x999 JUMPI PUSH2 0x999 PUSH2 0x3671 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x2 ADD SLOAD DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x9BB JUMPI PUSH2 0x9BB PUSH2 0x3671 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x97C JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x9D8 PUSH2 0x2033 JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x60 SWAP1 PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x9FE JUMPI PUSH2 0x9FE PUSH2 0x34A2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xA27 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x7A5 JUMPI PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xA49 JUMPI PUSH2 0xA49 PUSH2 0x3671 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x1 ADD SLOAD DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xA6B JUMPI PUSH2 0xA6B PUSH2 0x3671 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0xA2C JUMP JUMPDEST PUSH0 CALLER PUSH2 0xA8B DUP6 DUP3 DUP6 PUSH2 0x2617 JUMP JUMPDEST PUSH2 0xA96 DUP6 DUP6 DUP6 PUSH2 0x2692 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x927 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xACB JUMPI PUSH2 0xACB PUSH2 0x3671 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xB14 JUMPI PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xAFC JUMPI PUSH2 0xAFC PUSH2 0x3671 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x1 ADD SLOAD SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0xAA4 JUMP JUMPDEST PUSH0 PUSH1 0x60 PUSH2 0xB27 PUSH2 0x2033 JUMP JUMPDEST SWAP1 SWAP4 SWAP1 SWAP3 POP SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xBB3BA04C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB82 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBA6 SWAP2 SWAP1 PUSH2 0x3603 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xBB3BA04C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC02 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC26 SWAP2 SWAP1 PUSH2 0x3603 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xC75 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x496E76616C6964206F7261636C652061646472657373 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x600 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x248391FF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP6 SWAP1 MSTORE PUSH0 SWAP2 SWAP1 DUP4 AND SWAP1 PUSH4 0x248391FF SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xCCB JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCEF SWAP2 SWAP1 PUSH2 0x3710 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x60 SWAP1 PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0xD18 JUMPI PUSH2 0xD18 PUSH2 0x34A2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xD41 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x7A5 JUMPI PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xD63 JUMPI PUSH2 0xD63 PUSH2 0x3671 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD SLOAD DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP4 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0xD93 JUMPI PUSH2 0xD93 PUSH2 0x3671 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE PUSH1 0x1 ADD PUSH2 0xD46 JUMP JUMPDEST PUSH0 PUSH2 0xDBC PUSH2 0x26EF JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x85462D6F PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x85462D6F SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE03 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE27 SWAP2 SWAP1 PUSH2 0x3710 JUMP JUMPDEST SWAP1 POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xE8A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F742073776170207468652073616D6520746F6B656E000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x600 JUMP JUMPDEST PUSH0 DUP5 GT PUSH2 0xED9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E207A65726F PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x600 JUMP JUMPDEST PUSH2 0xEE1 PUSH2 0x23A7 JUMP JUMPDEST PUSH0 PUSH2 0xEED DUP8 DUP8 DUP8 PUSH2 0x17EE JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0xEF9 DUP8 PUSH2 0x1916 JUMP JUMPDEST LT ISZERO PUSH2 0xF40 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x496E73756666696369656E74204C6971756964697479 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x600 JUMP JUMPDEST PUSH0 PUSH2 0x2710 PUSH2 0xF4E DUP5 DUP5 PUSH2 0x365A JUMP JUMPDEST PUSH2 0xF58 SWAP2 SWAP1 PUSH2 0x373B JUMP JUMPDEST SWAP1 POP PUSH2 0xF64 DUP2 DUP4 PUSH2 0x374E JUMP JUMPDEST SWAP4 POP PUSH0 DUP5 GT PUSH2 0xFC3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E7420746F2073656E64206D75737420626520677265617465722074 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x68616E203 PUSH1 0xDC SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x600 JUMP JUMPDEST PUSH2 0xFCB PUSH2 0x23A7 JUMP JUMPDEST DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xCD3829A3813DC3CDD188FD3D01DCF3268C16BE2FDD2DD21D0665418816E46062 DUP10 DUP9 PUSH1 0x40 MLOAD PUSH2 0x1023 SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP PUSH2 0x1038 PUSH1 0x1 PUSH1 0x5 SSTORE JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH0 DUP1 PUSH2 0x104D PUSH2 0x2033 JUMP JUMPDEST PUSH1 0x6 SLOAD SWAP2 SWAP4 POP SWAP2 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x106D JUMPI PUSH2 0x106D PUSH2 0x34A2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1096 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP5 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x10B1 JUMPI PUSH2 0x10B1 PUSH2 0x34A2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x10DA JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP4 POP PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x11F1 JUMPI PUSH0 DUP5 DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x10FB JUMPI PUSH2 0x10FB PUSH2 0x3671 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2710 PUSH2 0x1110 SWAP2 SWAP1 PUSH2 0x365A JUMP JUMPDEST PUSH2 0x111A SWAP2 SWAP1 PUSH2 0x373B JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x6 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x1130 JUMPI PUSH2 0x1130 PUSH2 0x3671 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x1 ADD SLOAD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x119B JUMPI PUSH2 0x1154 DUP2 DUP4 PUSH2 0x374E JUMP JUMPDEST DUP8 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x1166 JUMPI PUSH2 0x1166 PUSH2 0x3671 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x1 DUP9 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x1186 JUMPI PUSH2 0x1186 PUSH2 0x3671 JUMP JUMPDEST SWAP2 ISZERO ISZERO PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE PUSH2 0x11E7 JUMP JUMPDEST PUSH2 0x11A5 DUP3 DUP3 PUSH2 0x374E JUMP JUMPDEST DUP8 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x11B7 JUMPI PUSH2 0x11B7 PUSH2 0x3671 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH0 DUP9 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x11D6 JUMPI PUSH2 0x11D6 PUSH2 0x3671 JUMP JUMPDEST SWAP2 ISZERO ISZERO PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE JUMPDEST POP POP PUSH1 0x1 ADD PUSH2 0x10DF JUMP JUMPDEST POP POP POP POP SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1ACB6141 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x124C JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1270 SWAP2 SWAP1 PUSH2 0x3603 JUMP JUMPDEST SWAP1 POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0x129A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x600 SWAP1 PUSH2 0x361E JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x85462D6F PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x85462D6F SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x12E1 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1305 SWAP2 SWAP1 PUSH2 0x3710 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1ACB6141 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1358 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x137C SWAP2 SWAP1 PUSH2 0x3603 JUMP JUMPDEST ADDRESS PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP1 PUSH2 0x13DB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5368617265206D7573742062652067726561746572207468616E203000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x600 JUMP JUMPDEST PUSH0 PUSH2 0x13E5 PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT PUSH2 0x1425 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x4E6F206C6971756964697479 PUSH1 0xA0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x600 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1441 JUMPI PUSH2 0x1441 PUSH2 0x34A2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x146A JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 PUSH2 0x2710 PUSH2 0x147B DUP8 DUP7 PUSH2 0x365A JUMP JUMPDEST PUSH2 0x1485 SWAP2 SWAP1 PUSH2 0x373B JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x1492 DUP3 DUP7 PUSH2 0x374E JUMP JUMPDEST SWAP1 POP PUSH0 JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x157E JUMPI PUSH0 DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA3E113FB ADDRESS PUSH1 0x6 DUP6 DUP2 SLOAD DUP2 LT PUSH2 0x14C4 JUMPI PUSH2 0x14C4 PUSH2 0x3671 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD SLOAD PUSH1 0x40 MLOAD PUSH1 0xE0 DUP5 SWAP1 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP2 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x151D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1541 SWAP2 SWAP1 PUSH2 0x3710 JUMP JUMPDEST SWAP1 POP DUP6 PUSH2 0x154E DUP5 DUP4 PUSH2 0x365A JUMP JUMPDEST PUSH2 0x1558 SWAP2 SWAP1 PUSH2 0x373B JUMP JUMPDEST DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x156A JUMPI PUSH2 0x156A PUSH2 0x3671 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE POP PUSH1 0x1 ADD PUSH2 0x1496 JUMP JUMPDEST POP ADDRESS PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0x15DD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E742042414C554E49206C6971756964697479000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x600 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x1D8CF425 PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 MLOAD PUSH0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x3B19E84A SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1624 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1648 SWAP2 SWAP1 PUSH2 0x3603 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE SWAP1 SWAP2 POP PUSH0 SWAP1 ADDRESS SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1697 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x16BB SWAP2 SWAP1 PUSH2 0x3761 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x1700 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x119959481D1C985B9CD9995C8819985A5B1959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x600 JUMP JUMPDEST PUSH2 0x170A ADDRESS DUP5 PUSH2 0x2719 JUMP JUMPDEST PUSH2 0x1712 PUSH2 0x23A7 JUMP JUMPDEST DUP12 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xCC16F5DBB4873280815C1EE09DBD06736CFFCC184412CF7A71A0FDB75D397CA5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x174D SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP SWAP3 SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH2 0x1770 PUSH2 0x1040 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x17D6 JUMPI DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x1791 JUMPI PUSH2 0x1791 PUSH2 0x3671 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP1 ISZERO PUSH2 0x17BF JUMPI POP PUSH1 0x7 SLOAD DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x17B5 JUMPI PUSH2 0x17B5 PUSH2 0x3671 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD GT JUMPDEST ISZERO PUSH2 0x17CE JUMPI PUSH1 0x1 SWAP4 POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x1776 JUMP JUMPDEST POP PUSH0 SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x4DE SWAP1 PUSH2 0x35D1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x17FB DUP6 DUP6 DUP6 PUSH2 0xB30 JUMP JUMPDEST SWAP1 POP DUP4 DUP6 PUSH0 PUSH1 0x60 PUSH2 0x180A PUSH2 0x2033 JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP PUSH0 PUSH2 0x2710 DUP4 PUSH2 0x181D DUP8 PUSH2 0xAA1 JUMP JUMPDEST PUSH2 0x1827 SWAP2 SWAP1 PUSH2 0x365A JUMP JUMPDEST PUSH2 0x1831 SWAP2 SWAP1 PUSH2 0x373B JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x2710 DUP5 PUSH2 0x1841 DUP9 PUSH2 0xAA1 JUMP JUMPDEST PUSH2 0x184B SWAP2 SWAP1 PUSH2 0x365A JUMP JUMPDEST PUSH2 0x1855 SWAP2 SWAP1 PUSH2 0x373B JUMP JUMPDEST SWAP1 POP PUSH0 DUP10 SWAP1 POP PUSH0 PUSH2 0x1874 PUSH1 0xC SLOAD PUSH1 0xD SLOAD PUSH1 0xE SLOAD PUSH1 0xF SLOAD DUP9 DUP9 DUP9 PUSH0 PUSH2 0x274D JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x2710 DUP8 PUSH2 0x1884 DUP11 PUSH2 0xAA1 JUMP JUMPDEST PUSH2 0x188E SWAP2 SWAP1 PUSH2 0x365A JUMP JUMPDEST PUSH2 0x1898 SWAP2 SWAP1 PUSH2 0x373B JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x2710 DUP9 PUSH2 0x18A8 DUP12 PUSH2 0xAA1 JUMP JUMPDEST PUSH2 0x18B2 SWAP2 SWAP1 PUSH2 0x365A JUMP JUMPDEST PUSH2 0x18BC SWAP2 SWAP1 PUSH2 0x373B JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x18D8 PUSH1 0xC SLOAD PUSH1 0xD SLOAD PUSH1 0xE SLOAD PUSH1 0xF SLOAD DUP8 DUP8 DUP12 PUSH1 0x1 PUSH2 0x274D JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x18E5 DUP3 DUP7 PUSH2 0x280C JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x18F2 DUP8 DUP4 PUSH2 0x282A JUMP JUMPDEST SWAP15 POP POP POP POP POP POP POP POP POP POP POP POP POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x8A0 DUP2 DUP6 DUP6 PUSH2 0x2692 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1ACB6141 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1968 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x198C SWAP2 SWAP1 PUSH2 0x3603 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA3E113FB PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE SWAP2 SWAP3 POP SWAP1 DUP3 AND SWAP1 PUSH4 0xA3E113FB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x19DA JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x19FE SWAP2 SWAP1 PUSH2 0x3710 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x1A0F PUSH2 0x2033 JUMP JUMPDEST SWAP2 POP POP DUP1 MLOAD DUP4 LT PUSH2 0x1A58 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x92DCECC2D8D2C840C2E6E6CAE840D2DCC8CAF PUSH1 0x6B SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x600 JUMP JUMPDEST DUP1 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1A6A JUMPI PUSH2 0x1A6A PUSH2 0x3671 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1A89 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP3 POP DUP4 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1ACB6141 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1B07 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1B2B SWAP2 SWAP1 PUSH2 0x3603 JUMP JUMPDEST SWAP1 POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0x1B55 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x600 SWAP1 PUSH2 0x361E JUMP JUMPDEST PUSH0 PUSH2 0x1B5F PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH0 DUP1 PUSH2 0x1B6B PUSH2 0x7AB JUMP JUMPDEST DUP1 MLOAD PUSH1 0x6 SLOAD SWAP2 SWAP3 POP EQ PUSH2 0x1BC0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964207265736572766573206C656E677468000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x600 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x1BFB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x4E6F20617373657473 PUSH1 0xB8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x600 JUMP JUMPDEST PUSH0 JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x1C99 JUMPI PUSH0 PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1C1B JUMPI PUSH2 0x1C1B PUSH2 0x3671 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD SLOAD PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP4 POP AND DUP3 SUB PUSH2 0x1C5D JUMPI DUP9 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1C53 JUMPI PUSH2 0x1C53 PUSH2 0x3671 JUMP JUMPDEST POP PUSH2 0x1C91 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1C80 DUP3 DUP11 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x1C73 JUMPI PUSH2 0x1C73 PUSH2 0x3671 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x285D JUMP JUMPDEST SWAP1 POP PUSH2 0x1C8C DUP2 DUP7 PUSH2 0x3780 JUMP JUMPDEST SWAP5 POP POP POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x1BFD JUMP JUMPDEST POP PUSH0 DUP3 GT PUSH2 0x1CF4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F74616C2076616C7565206D7573742062652067726561746572207468616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x203 PUSH1 0xF4 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x600 JUMP JUMPDEST PUSH0 DUP4 PUSH0 SUB PUSH2 0x1D10 JUMPI PUSH1 0xA SLOAD PUSH2 0x1D09 SWAP1 DUP5 PUSH2 0x365A JUMP JUMPDEST SWAP1 POP PUSH2 0x1DAE JUMP JUMPDEST PUSH0 PUSH2 0x1D19 PUSH2 0x2033 JUMP JUMPDEST POP SWAP1 POP PUSH0 DUP2 GT PUSH2 0x1D7A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F74616C206C6971756964697479206D757374206265206772656174657220 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x7468616E203 PUSH1 0xD4 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x600 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH2 0x1D87 SWAP1 DUP3 PUSH2 0x365A JUMP JUMPDEST DUP6 PUSH1 0xA SLOAD DUP7 PUSH2 0x1D96 SWAP2 SWAP1 PUSH2 0x365A JUMP JUMPDEST PUSH2 0x1DA0 SWAP2 SWAP1 PUSH2 0x365A JUMP JUMPDEST PUSH2 0x1DAA SWAP2 SWAP1 PUSH2 0x373B JUMP JUMPDEST SWAP2 POP POP JUMPDEST DUP1 PUSH0 SUB PUSH2 0x1DED JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x4D696E7420717479206973203 PUSH1 0x9C SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x600 JUMP JUMPDEST PUSH2 0x1DF7 DUP9 DUP3 PUSH2 0x236F JUMP JUMPDEST PUSH2 0x1DFF PUSH2 0x23A7 JUMP JUMPDEST DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xF6798A560793A54C3BCFE86A93CDE1E73087D944C0EA20544137D4121396885 DUP3 PUSH1 0x40 MLOAD PUSH2 0x1E3A SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1E9F JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1EC3 SWAP2 SWAP1 PUSH2 0x3793 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 POP PUSH0 PUSH2 0x1ED4 DUP3 PUSH1 0x12 PUSH2 0x374E JUMP JUMPDEST PUSH2 0x1EDF SWAP1 PUSH1 0xA PUSH2 0x3893 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x1EEA PUSH2 0x2033 JUMP JUMPDEST POP SWAP1 POP PUSH0 PUSH2 0x1EF7 PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 SUB PUSH2 0x1F0A JUMPI PUSH0 SWAP5 POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 PUSH2 0x1F18 DUP6 DUP6 PUSH2 0x365A JUMP JUMPDEST PUSH2 0x1F22 SWAP2 SWAP1 PUSH2 0x373B JUMP JUMPDEST PUSH2 0x1F2C SWAP2 SWAP1 PUSH2 0x365A JUMP JUMPDEST SWAP5 POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH0 PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1ACB6141 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1F89 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1FAD SWAP2 SWAP1 PUSH2 0x3603 JUMP JUMPDEST SWAP1 POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0x1FD7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x600 SWAP1 PUSH2 0x361E JUMP JUMPDEST PUSH2 0x1FDF PUSH2 0x1765 JUMP JUMPDEST PUSH2 0x2022 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x149958985B185B98D9481B9BDD081B9959591959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x600 JUMP JUMPDEST PUSH2 0x202A PUSH2 0x2877 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH0 SWAP1 PUSH1 0x60 SWAP1 DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2053 JUMPI PUSH2 0x2053 PUSH2 0x34A2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x207C JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP2 POP PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x215C JUMPI PUSH0 PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x209D JUMPI PUSH2 0x209D PUSH2 0x3671 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 POP PUSH2 0x20C0 DUP3 PUSH2 0x1916 JUMP JUMPDEST PUSH1 0x9 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP4 AND SUB PUSH2 0x20FD JUMPI DUP1 DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x20EC JUMPI PUSH2 0x20EC PUSH2 0x3671 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x212B JUMP JUMPDEST PUSH0 PUSH2 0x2108 DUP4 DUP4 PUSH2 0x285D JUMP JUMPDEST SWAP1 POP DUP1 DUP7 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x211D JUMPI PUSH2 0x211D PUSH2 0x3671 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP POP JUMPDEST DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x213D JUMPI PUSH2 0x213D PUSH2 0x3671 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP7 PUSH2 0x2150 SWAP2 SWAP1 PUSH2 0x3780 JUMP JUMPDEST SWAP6 POP POP POP PUSH1 0x1 ADD PUSH2 0x2081 JUMP JUMPDEST POP POP SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x60 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x217F JUMPI PUSH2 0x217F PUSH2 0x34A2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x21A8 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x9D8 JUMPI PUSH0 PUSH2 0x2710 PUSH1 0x6 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x21CE JUMPI PUSH2 0x21CE PUSH2 0x3671 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x1 ADD SLOAD DUP7 PUSH2 0x21E9 SWAP2 SWAP1 PUSH2 0x365A JUMP JUMPDEST PUSH2 0x21F3 SWAP2 SWAP1 PUSH2 0x373B JUMP JUMPDEST SWAP1 POP DUP1 DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x2208 JUMPI PUSH2 0x2208 PUSH2 0x3671 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD LT ISZERO PUSH2 0x225A JUMPI DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2228 JUMPI PUSH2 0x2228 PUSH2 0x3671 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 PUSH2 0x223B SWAP2 SWAP1 PUSH2 0x374E JUMP JUMPDEST DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x224D JUMPI PUSH2 0x224D PUSH2 0x3671 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x21AD JUMP JUMPDEST PUSH0 DUP1 JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x7A5 JUMPI DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x2282 JUMPI PUSH2 0x2282 PUSH2 0x3671 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP3 PUSH2 0x2295 SWAP2 SWAP1 PUSH2 0x3780 JUMP JUMPDEST SWAP2 POP PUSH1 0x1 ADD PUSH2 0x2266 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x6 DUP1 SLOAD PUSH0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 SWAP1 DUP6 SWAP1 DUP2 LT PUSH2 0x22C3 JUMPI PUSH2 0x22C3 PUSH2 0x3671 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x22E8 JUMPI POP DUP1 PUSH2 0x8A6 JUMP JUMPDEST PUSH0 PUSH2 0x231E PUSH1 0x6 DUP6 DUP2 SLOAD DUP2 LT PUSH2 0x22FF JUMPI PUSH2 0x22FF PUSH2 0x3671 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH2 0x2F02 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT PUSH2 0x19FE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420746F6B656E20616D6F756E7420746F206164640000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x600 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x2398 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x600 JUMP JUMPDEST PUSH2 0x23A3 PUSH0 DUP4 DUP4 PUSH2 0x2F1B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x23B1 PUSH2 0x1040 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH0 JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x2605 JUMPI PUSH0 PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x23D5 JUMPI PUSH2 0x23D5 PUSH2 0x3671 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x23F9 JUMPI PUSH2 0x23F9 PUSH2 0x3671 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD ISZERO PUSH2 0x24CE JUMPI DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2418 JUMPI PUSH2 0x2418 PUSH2 0x3671 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x6 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x2433 JUMPI PUSH2 0x2433 PUSH2 0x3671 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x2 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x2450 SWAP2 SWAP1 PUSH2 0x3780 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x6 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x246B JUMPI PUSH2 0x246B PUSH2 0x3671 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x2 ADD SLOAD LT ISZERO PUSH2 0x24C9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F766572666C6F7720696E6372656D656E74696E6720736C6970706167650000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x600 JUMP JUMPDEST PUSH2 0x25FC JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x24E0 JUMPI PUSH2 0x24E0 PUSH2 0x3671 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x6 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x24FB JUMPI PUSH2 0x24FB PUSH2 0x3671 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x2 ADD SLOAD GT ISZERO PUSH2 0x25D4 JUMPI DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2523 JUMPI PUSH2 0x2523 PUSH2 0x3671 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x6 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x253E JUMPI PUSH2 0x253E PUSH2 0x3671 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x2 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x255B SWAP2 SWAP1 PUSH2 0x374E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x6 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x2576 JUMPI PUSH2 0x2576 PUSH2 0x3671 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x2 ADD SLOAD GT ISZERO PUSH2 0x24C9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E646572666C6F772064656372656D656E74696E6720736C69707061676500 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x600 JUMP JUMPDEST PUSH0 PUSH1 0x6 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x25E8 JUMPI PUSH2 0x25E8 PUSH2 0x3671 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x23B7 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x2605 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x3041 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH0 NOT DUP2 EQ PUSH2 0x268C JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x267E JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x600 JUMP JUMPDEST PUSH2 0x268C DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x3041 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x26BB JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x600 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x26E4 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x600 JUMP JUMPDEST PUSH2 0x2605 DUP4 DUP4 DUP4 PUSH2 0x2F1B JUMP JUMPDEST PUSH1 0x2 PUSH1 0x5 SLOAD SUB PUSH2 0x2712 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x5 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x2742 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x600 JUMP JUMPDEST PUSH2 0x23A3 DUP3 PUSH0 DUP4 PUSH2 0x2F1B JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x2759 DUP7 DUP7 PUSH2 0x3113 JUMP JUMPDEST SWAP1 POP PUSH0 DUP4 ISZERO PUSH2 0x277D JUMPI PUSH2 0x2776 DUP7 PUSH2 0x2770 DUP8 DUP11 PUSH2 0x3780 JUMP JUMPDEST SWAP1 PUSH2 0x3113 JUMP JUMPDEST SWAP1 POP PUSH2 0x278E JUMP JUMPDEST PUSH2 0x278B DUP7 PUSH2 0x2770 DUP8 DUP11 PUSH2 0x374E JUMP JUMPDEST SWAP1 POP JUMPDEST DUP1 DUP3 SUB PUSH2 0x279F JUMPI PUSH0 SWAP3 POP POP POP PUSH2 0x2800 JUMP JUMPDEST PUSH0 PUSH2 0x27AD DUP13 DUP13 DUP13 DUP13 DUP8 PUSH2 0x3132 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x27BD DUP14 DUP14 DUP14 DUP14 DUP8 PUSH2 0x3132 JUMP JUMPDEST SWAP1 POP DUP3 DUP5 GT ISZERO PUSH2 0x27E9 JUMPI PUSH2 0x27DE PUSH2 0x27D4 DUP5 DUP7 PUSH2 0x374E JUMP JUMPDEST PUSH2 0x2770 DUP5 DUP5 PUSH2 0x374E JUMP JUMPDEST SWAP5 POP POP POP POP POP PUSH2 0x2800 JUMP JUMPDEST PUSH2 0x27DE PUSH2 0x27F6 DUP6 DUP6 PUSH2 0x374E JUMP JUMPDEST PUSH2 0x2770 DUP4 DUP6 PUSH2 0x374E JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH2 0x2820 DUP5 PUSH8 0xDE0B6B3A7640000 PUSH2 0x3780 JUMP JUMPDEST PUSH2 0x19FE SWAP2 SWAP1 PUSH2 0x374E JUMP JUMPDEST PUSH0 PUSH8 0xDE0B6B3A7640000 PUSH2 0x283F PUSH1 0x2 DUP3 PUSH2 0x373B JUMP JUMPDEST PUSH2 0x2849 DUP5 DUP7 PUSH2 0x365A JUMP JUMPDEST PUSH2 0x2853 SWAP2 SWAP1 PUSH2 0x3780 JUMP JUMPDEST PUSH2 0x19FE SWAP2 SWAP1 PUSH2 0x373B JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH0 SWAP1 PUSH2 0x19FE SWAP1 DUP5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH2 0xB30 JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH0 PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1ACB6141 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x28CB JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x28EF SWAP2 SWAP1 PUSH2 0x3603 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xCFF49D68 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2942 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2966 SWAP2 SWAP1 PUSH2 0x3603 JUMP JUMPDEST PUSH1 0x6 SLOAD SWAP1 SWAP2 POP PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2985 JUMPI PUSH2 0x2985 PUSH2 0x34A2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x29AE JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP PUSH1 0x6 SLOAD SWAP1 SWAP2 POP PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x29CE JUMPI PUSH2 0x29CE PUSH2 0x34A2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x29F7 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP PUSH1 0x6 SLOAD SWAP1 SWAP2 POP PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2A17 JUMPI PUSH2 0x2A17 PUSH2 0x34A2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2A40 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP PUSH1 0x6 SLOAD SWAP1 SWAP2 POP PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2A60 JUMPI PUSH2 0x2A60 PUSH2 0x34A2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2A89 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP PUSH1 0x6 SLOAD SWAP1 SWAP2 POP PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2AA9 JUMPI PUSH2 0x2AA9 PUSH2 0x34A2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2AD2 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP PUSH1 0x6 SLOAD SWAP1 SWAP2 POP PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2AF2 JUMPI PUSH2 0x2AF2 PUSH2 0x34A2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2B1B JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x2C79 JUMPI PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x2B3D JUMPI PUSH2 0x2B3D PUSH2 0x3671 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD SLOAD DUP8 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP9 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x2B6D JUMPI PUSH2 0x2B6D PUSH2 0x3671 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x2BA0 JUMPI PUSH2 0x2BA0 PUSH2 0x3671 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x1 ADD SLOAD DUP7 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2BC2 JUMPI PUSH2 0x2BC2 PUSH2 0x3671 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP7 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x2BE0 JUMPI PUSH2 0x2BE0 PUSH2 0x3671 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2C30 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2C54 SWAP2 SWAP1 PUSH2 0x3710 JUMP JUMPDEST DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2C66 JUMPI PUSH2 0x2C66 PUSH2 0x3671 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x2B20 JUMP JUMPDEST POP PUSH0 PUSH2 0x2C83 PUSH2 0x7AB JUMP JUMPDEST SWAP1 POP DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF0BF7714 DUP3 DUP10 DUP10 PUSH1 0x7 SLOAD DUP15 DUP16 PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 MLOAD DUP9 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2CD3 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x389E JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2CEA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2CFC JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH0 JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x2EB0 JUMPI DUP8 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x2D1E JUMPI PUSH2 0x2D1E PUSH2 0x3671 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2D6E JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2D92 SWAP2 SWAP1 PUSH2 0x3710 JUMP JUMPDEST DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2DA4 JUMPI PUSH2 0x2DA4 PUSH2 0x3671 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP6 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x2DC2 JUMPI PUSH2 0x2DC2 PUSH2 0x3671 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2DDC JUMPI PUSH2 0x2DDC PUSH2 0x3671 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD GT ISZERO PUSH2 0x2E4B JUMPI DUP6 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x2DFC JUMPI PUSH2 0x2DFC PUSH2 0x3671 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2E16 JUMPI PUSH2 0x2E16 PUSH2 0x3671 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2E28 SWAP2 SWAP1 PUSH2 0x374E JUMP JUMPDEST DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2E3A JUMPI PUSH2 0x2E3A PUSH2 0x3671 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x2EA8 JUMP JUMPDEST DUP5 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x2E5D JUMPI PUSH2 0x2E5D PUSH2 0x3671 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP7 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2E77 JUMPI PUSH2 0x2E77 PUSH2 0x3671 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2E89 SWAP2 SWAP1 PUSH2 0x374E JUMP JUMPDEST DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2E9B JUMPI PUSH2 0x2E9B PUSH2 0x3671 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x2D02 JUMP JUMPDEST POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x279B343370F587AF7FB675AE7C8578E9C8ABCC373236AD02C501A4771FE7A7B8 DUP9 PUSH1 0x40 MLOAD PUSH2 0x2EEA SWAP2 SWAP1 PUSH2 0x33A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP SWAP1 SWAP10 SWAP1 SWAP9 POP SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH0 SWAP1 PUSH2 0x19FE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 DUP5 PUSH2 0xB30 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x2F45 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x2F3A SWAP2 SWAP1 PUSH2 0x3780 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x2FB5 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x2F97 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x600 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x2FD1 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x2FEF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x3034 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x306A JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x600 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3093 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x600 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x268C JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x3105 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH2 0x3120 PUSH1 0x2 DUP3 PUSH2 0x373B JUMP JUMPDEST PUSH2 0x2849 PUSH8 0xDE0B6B3A7640000 DUP7 PUSH2 0x365A JUMP JUMPDEST PUSH0 DUP3 DUP3 LT ISZERO PUSH2 0x314C JUMPI PUSH2 0x3145 DUP3 DUP6 PUSH2 0x374E JUMP JUMPDEST SWAP1 POP PUSH2 0x319F JUMP JUMPDEST PUSH2 0x3145 PUSH12 0x33B2E3C9FD0803CE8000000 PUSH8 0xDE0B6B3A7640000 PUSH2 0x3184 DUP9 DUP3 PUSH2 0x3174 DUP6 DUP10 PUSH2 0x365A JUMP JUMPDEST PUSH2 0x317E SWAP2 SWAP1 PUSH2 0x373B JUMP JUMPDEST SWAP1 PUSH2 0x31A8 JUMP JUMPDEST PUSH2 0x318E SWAP2 SWAP1 PUSH2 0x365A JUMP JUMPDEST PUSH2 0x3198 SWAP2 SWAP1 PUSH2 0x373B JUMP JUMPDEST DUP8 SWAP1 PUSH2 0x3113 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x31B4 PUSH1 0x2 DUP4 PUSH2 0x3908 JUMP JUMPDEST PUSH0 SUB PUSH2 0x31CC JUMPI PUSH12 0x33B2E3C9FD0803CE8000000 PUSH2 0x31CE JUMP JUMPDEST DUP3 JUMPDEST SWAP1 POP PUSH2 0x31DB PUSH1 0x2 DUP4 PUSH2 0x373B JUMP JUMPDEST SWAP2 POP JUMPDEST DUP2 ISZERO PUSH2 0x8A6 JUMPI PUSH2 0x31EE DUP4 DUP5 PUSH2 0x321F JUMP JUMPDEST SWAP3 POP PUSH2 0x31FB PUSH1 0x2 DUP4 PUSH2 0x3908 JUMP JUMPDEST ISZERO PUSH2 0x320D JUMPI PUSH2 0x320A DUP2 DUP5 PUSH2 0x321F JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH2 0x3218 PUSH1 0x2 DUP4 PUSH2 0x373B JUMP JUMPDEST SWAP2 POP PUSH2 0x31DE JUMP JUMPDEST PUSH0 PUSH12 0x33B2E3C9FD0803CE8000000 PUSH2 0x283F PUSH1 0x2 DUP3 PUSH2 0x373B JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x3281 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3294 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x19FE DUP2 PUSH2 0x326D JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP5 ADD PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x32CE JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x32B2 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0x19FE PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x329F JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x32FC JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x3307 DUP2 PUSH2 0x326D JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3327 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x3332 DUP2 PUSH2 0x326D JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x3342 DUP2 PUSH2 0x326D JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH0 PUSH2 0x1038 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x329F JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP5 ADD PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x32CE JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x337E JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0x19FE PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x336B JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x33C8 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x33D3 DUP2 PUSH2 0x326D JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH2 0x33E3 DUP2 PUSH2 0x326D JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH2 0x33FA DUP2 PUSH2 0x326D JUMP JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP1 SWAP4 POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 DUP3 MSTORE DUP4 MLOAD SWAP1 DUP3 ADD DUP2 SWAP1 MSTORE PUSH0 SWAP1 PUSH1 0x20 SWAP1 PUSH1 0x60 DUP5 ADD SWAP1 DUP3 DUP8 ADD DUP5 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x343F JUMPI DUP2 MLOAD ISZERO ISZERO DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x3421 JUMP JUMPDEST POP POP POP DUP4 DUP2 SUB PUSH1 0x20 DUP6 ADD MSTORE PUSH2 0xCEF DUP2 DUP7 PUSH2 0x329F JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3464 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x347C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x3487 DUP2 PUSH2 0x326D JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x3497 DUP2 PUSH2 0x326D JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x34DE JUMPI PUSH2 0x34DE PUSH2 0x34A2 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0x34FE JUMPI PUSH2 0x34FE PUSH2 0x34A2 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3519 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x3524 DUP2 PUSH2 0x326D JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 DUP2 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x353F JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP5 ADD PUSH1 0x1F DUP2 ADD DUP7 SGT PUSH2 0x354F JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0x3562 PUSH2 0x355D DUP3 PUSH2 0x34E6 JUMP JUMPDEST PUSH2 0x34B6 JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH1 0x5 SWAP2 SWAP1 SWAP2 SHL DUP3 ADD DUP4 ADD SWAP1 DUP4 DUP2 ADD SWAP1 DUP9 DUP4 GT ISZERO PUSH2 0x3580 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP3 DUP5 ADD SWAP3 JUMPDEST DUP3 DUP5 LT ISZERO PUSH2 0x359E JUMPI DUP4 CALLDATALOAD DUP3 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH2 0x3585 JUMP JUMPDEST DUP1 SWAP6 POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH0 PUSH2 0x35BF PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x329F JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x319F DUP2 DUP6 PUSH2 0x329F JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x35E5 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x7A5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3613 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x19FE DUP2 PUSH2 0x326D JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xE SWAP1 DUP3 ADD MSTORE PUSH14 0x4F6E6C7920506572697068657279 PUSH1 0x90 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x8A6 JUMPI PUSH2 0x8A6 PUSH2 0x3646 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3696 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x36AB JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x36BB JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH2 0x36C9 PUSH2 0x355D DUP3 PUSH2 0x34E6 JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH1 0x5 SWAP2 SWAP1 SWAP2 SHL DUP3 ADD DUP4 ADD SWAP1 DUP4 DUP2 ADD SWAP1 DUP8 DUP4 GT ISZERO PUSH2 0x36E7 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP3 DUP5 ADD SWAP3 JUMPDEST DUP3 DUP5 LT ISZERO PUSH2 0x3705 JUMPI DUP4 MLOAD DUP3 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH2 0x36EC JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3720 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 PUSH2 0x3749 JUMPI PUSH2 0x3749 PUSH2 0x3727 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x8A6 JUMPI PUSH2 0x8A6 PUSH2 0x3646 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3771 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x19FE JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x8A6 JUMPI PUSH2 0x8A6 PUSH2 0x3646 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x37A3 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x19FE JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x37ED JUMPI DUP2 PUSH0 NOT DIV DUP3 GT ISZERO PUSH2 0x37D3 JUMPI PUSH2 0x37D3 PUSH2 0x3646 JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0x37E0 JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x37B8 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x3803 JUMPI POP PUSH1 0x1 PUSH2 0x8A6 JUMP JUMPDEST DUP2 PUSH2 0x380F JUMPI POP PUSH0 PUSH2 0x8A6 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x3825 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x382F JUMPI PUSH2 0x384B JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x8A6 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x3840 JUMPI PUSH2 0x3840 PUSH2 0x3646 JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x8A6 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x386E JUMPI POP DUP2 DUP2 EXP PUSH2 0x8A6 JUMP JUMPDEST PUSH2 0x3878 DUP4 DUP4 PUSH2 0x37B3 JUMP JUMPDEST DUP1 PUSH0 NOT DIV DUP3 GT ISZERO PUSH2 0x388B JUMPI PUSH2 0x388B PUSH2 0x3646 JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x19FE DUP4 DUP4 PUSH2 0x37F5 JUMP JUMPDEST PUSH1 0xE0 DUP2 MSTORE PUSH0 PUSH2 0x38B0 PUSH1 0xE0 DUP4 ADD DUP11 PUSH2 0x329F JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x38C2 DUP2 DUP11 PUSH2 0x336B JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x38D6 DUP2 DUP10 PUSH2 0x329F JUMP JUMPDEST PUSH1 0x60 DUP5 ADD SWAP8 SWAP1 SWAP8 MSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x80 DUP3 ADD MSTORE SWAP2 DUP4 AND PUSH1 0xA0 DUP4 ADD MSTORE SWAP1 SWAP2 AND PUSH1 0xC0 SWAP1 SWAP2 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x3916 JUMPI PUSH2 0x3916 PUSH2 0x3727 JUMP JUMPDEST POP MOD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHR 0xCD MSTORE8 0xB5 0x4C SGT 0x4B CALLVALUE 0xE4 0xEB 0xD8 0xD2 SELFDESTRUCT PUSH4 0xD2D5F0CE PUSH0 EXP SWAP16 PUSH16 0xE046EBFF11FFA5E6B42F64736F6C6343 STOP ADDMOD NOT STOP CALLER CALLDATASIZE ADDMOD SWAP5 LOG1 EXTCODESIZE LOG1 LOG3 0x21 MOD PUSH8 0xC828492DB98DCA3E KECCAK256 PUSH23 0xCC3735A920A3CA505D382BBCA264697066735822122055 PUSH4 0x86326D68 0xF PUSH12 0x13840C18DE3D33D8EBC594C8 DUP8 PUSH32 0xE6B63215CCAE641AC86164736F6C634300081900330000000000000000000000 ","sourceMap":"1777:4772:16:-:0;;;1171:4:2;1128:48;;1777:4772:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@UPGRADE_INTERFACE_VERSION_472":{"entryPoint":null,"id":472,"parameterSlots":0,"returnSlots":0},"@__Ownable_init_54":{"entryPoint":4210,"id":54,"parameterSlots":1,"returnSlots":0},"@__Ownable_init_unchained_81":{"entryPoint":4385,"id":81,"parameterSlots":1,"returnSlots":0},"@__UUPSUpgradeable_init_502":{"entryPoint":4202,"id":502,"parameterSlots":0,"returnSlots":0},"@_authorizeUpgrade_4676":{"entryPoint":3725,"id":4676,"parameterSlots":1,"returnSlots":0},"@_checkInitializing_370":{"entryPoint":4312,"id":370,"parameterSlots":0,"returnSlots":0},"@_checkNonPayable_1125":{"entryPoint":4606,"id":1125,"parameterSlots":0,"returnSlots":0},"@_checkNotDelegated_578":{"entryPoint":3926,"id":578,"parameterSlots":0,"returnSlots":0},"@_checkOwner_122":{"entryPoint":3999,"id":122,"parameterSlots":0,"returnSlots":0},"@_checkProxy_562":{"entryPoint":3561,"id":562,"parameterSlots":0,"returnSlots":0},"@_getInitializableStorage_447":{"entryPoint":null,"id":447,"parameterSlots":0,"returnSlots":1},"@_getOwnableStorage_25":{"entryPoint":null,"id":25,"parameterSlots":0,"returnSlots":1},"@_isInitializing_438":{"entryPoint":null,"id":438,"parameterSlots":0,"returnSlots":1},"@_msgSender_658":{"entryPoint":null,"id":658,"parameterSlots":0,"returnSlots":1},"@_revert_2007":{"entryPoint":4729,"id":2007,"parameterSlots":1,"returnSlots":0},"@_setImplementation_911":{"entryPoint":4393,"id":911,"parameterSlots":1,"returnSlots":0},"@_transferOwnership_193":{"entryPoint":4090,"id":193,"parameterSlots":1,"returnSlots":0},"@_upgradeToAndCallUUPS_629":{"entryPoint":3733,"id":629,"parameterSlots":2,"returnSlots":0},"@allPools_4612":{"entryPoint":1997,"id":4612,"parameterSlots":0,"returnSlots":0},"@createPool_4844":{"entryPoint":977,"id":4844,"parameterSlots":3,"returnSlots":1},"@functionDelegateCall_1927":{"entryPoint":4492,"id":1927,"parameterSlots":2,"returnSlots":1},"@getAddressSlot_2139":{"entryPoint":null,"id":2139,"parameterSlots":1,"returnSlots":1},"@getAllPools_4854":{"entryPoint":3405,"id":4854,"parameterSlots":0,"returnSlots":1},"@getImplementation_884":{"entryPoint":null,"id":884,"parameterSlots":0,"returnSlots":1},"@getPoolAssets_4885":{"entryPoint":2036,"id":4885,"parameterSlots":1,"returnSlots":1},"@getPoolByAssets_4905":{"entryPoint":931,"id":4905,"parameterSlots":2,"returnSlots":1},"@getPool_4621":{"entryPoint":null,"id":4621,"parameterSlots":0,"returnSlots":0},"@getPoolsByAsset_5035":{"entryPoint":2542,"id":5035,"parameterSlots":1,"returnSlots":1},"@getPoolsCount_4864":{"entryPoint":null,"id":4864,"parameterSlots":0,"returnSlots":1},"@initialize_4650":{"entryPoint":3100,"id":4650,"parameterSlots":1,"returnSlots":0},"@owner_105":{"entryPoint":null,"id":105,"parameterSlots":0,"returnSlots":1},"@poolExist_5067":{"entryPoint":2217,"id":5067,"parameterSlots":1,"returnSlots":1},"@proxiableUUID_520":{"entryPoint":2171,"id":520,"parameterSlots":0,"returnSlots":1},"@registry_4615":{"entryPoint":null,"id":4615,"parameterSlots":0,"returnSlots":0},"@reinitialize_4667":{"entryPoint":2307,"id":4667,"parameterSlots":2,"returnSlots":0},"@renounceOwnership_136":{"entryPoint":2198,"id":136,"parameterSlots":0,"returnSlots":0},"@transferOwnership_164":{"entryPoint":3500,"id":164,"parameterSlots":1,"returnSlots":0},"@upgradeToAndCall_540":{"entryPoint":2140,"id":540,"parameterSlots":2,"returnSlots":0},"@upgradeToAndCall_945":{"entryPoint":4227,"id":945,"parameterSlots":2,"returnSlots":0},"@verifyCallResultFromTarget_1967":{"entryPoint":4637,"id":1967,"parameterSlots":3,"returnSlots":1},"abi_decode_array_uint256_dyn":{"entryPoint":4962,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":5289,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":4803,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_bytes_memory_ptr":{"entryPoint":5401,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint64":{"entryPoint":5563,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptr_fromMemory":{"entryPoint":5840,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_uint256":{"entryPoint":5070,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_bytes32_fromMemory":{"entryPoint":6013,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":5266,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_array_address_dyn":{"entryPoint":5316,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":6036,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":5383,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_uint256_t_address__to_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_uint256_t_address__fromStack_reversed":{"entryPoint":5731,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_IBaluniV1Registry_$5472__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5619,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_2258c7547209181d37eb4aebb58e4d2c60f10b97b943ea694f4dec24e242181e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_39cbcbdd9e6251e82f28a321c8ea534706a2cf624e365b64351e1f84ffc7ff8d__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_ebb567ad160cf2ebbf5e53ab40a3ffae6f6492169d006ee3f8bad6794e36f372__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":4878,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_array_address_dyn":{"entryPoint":4927,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":5692,"id":null,"parameterSlots":2,"returnSlots":1},"increment_t_uint256":{"entryPoint":5989,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":5672,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":5711,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":4858,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_address":{"entryPoint":4783,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:11584:22","nodeType":"YulBlock","src":"0:11584:22","statements":[{"nativeSrc":"6:3:22","nodeType":"YulBlock","src":"6:3:22","statements":[]},{"body":{"nativeSrc":"59:86:22","nodeType":"YulBlock","src":"59:86:22","statements":[{"body":{"nativeSrc":"123:16:22","nodeType":"YulBlock","src":"123:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"132:1:22","nodeType":"YulLiteral","src":"132:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"135:1:22","nodeType":"YulLiteral","src":"135:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"125:6:22","nodeType":"YulIdentifier","src":"125:6:22"},"nativeSrc":"125:12:22","nodeType":"YulFunctionCall","src":"125:12:22"},"nativeSrc":"125:12:22","nodeType":"YulExpressionStatement","src":"125:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"82:5:22","nodeType":"YulIdentifier","src":"82:5:22"},{"arguments":[{"name":"value","nativeSrc":"93:5:22","nodeType":"YulIdentifier","src":"93:5:22"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"108:3:22","nodeType":"YulLiteral","src":"108:3:22","type":"","value":"160"},{"kind":"number","nativeSrc":"113:1:22","nodeType":"YulLiteral","src":"113:1:22","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"104:3:22","nodeType":"YulIdentifier","src":"104:3:22"},"nativeSrc":"104:11:22","nodeType":"YulFunctionCall","src":"104:11:22"},{"kind":"number","nativeSrc":"117:1:22","nodeType":"YulLiteral","src":"117:1:22","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"100:3:22","nodeType":"YulIdentifier","src":"100:3:22"},"nativeSrc":"100:19:22","nodeType":"YulFunctionCall","src":"100:19:22"}],"functionName":{"name":"and","nativeSrc":"89:3:22","nodeType":"YulIdentifier","src":"89:3:22"},"nativeSrc":"89:31:22","nodeType":"YulFunctionCall","src":"89:31:22"}],"functionName":{"name":"eq","nativeSrc":"79:2:22","nodeType":"YulIdentifier","src":"79:2:22"},"nativeSrc":"79:42:22","nodeType":"YulFunctionCall","src":"79:42:22"}],"functionName":{"name":"iszero","nativeSrc":"72:6:22","nodeType":"YulIdentifier","src":"72:6:22"},"nativeSrc":"72:50:22","nodeType":"YulFunctionCall","src":"72:50:22"},"nativeSrc":"69:70:22","nodeType":"YulIf","src":"69:70:22"}]},"name":"validator_revert_address","nativeSrc":"14:131:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"48:5:22","nodeType":"YulTypedName","src":"48:5:22","type":""}],"src":"14:131:22"},{"body":{"nativeSrc":"237:301:22","nodeType":"YulBlock","src":"237:301:22","statements":[{"body":{"nativeSrc":"283:16:22","nodeType":"YulBlock","src":"283:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"292:1:22","nodeType":"YulLiteral","src":"292:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"295:1:22","nodeType":"YulLiteral","src":"295:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"285:6:22","nodeType":"YulIdentifier","src":"285:6:22"},"nativeSrc":"285:12:22","nodeType":"YulFunctionCall","src":"285:12:22"},"nativeSrc":"285:12:22","nodeType":"YulExpressionStatement","src":"285:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"258:7:22","nodeType":"YulIdentifier","src":"258:7:22"},{"name":"headStart","nativeSrc":"267:9:22","nodeType":"YulIdentifier","src":"267:9:22"}],"functionName":{"name":"sub","nativeSrc":"254:3:22","nodeType":"YulIdentifier","src":"254:3:22"},"nativeSrc":"254:23:22","nodeType":"YulFunctionCall","src":"254:23:22"},{"kind":"number","nativeSrc":"279:2:22","nodeType":"YulLiteral","src":"279:2:22","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"250:3:22","nodeType":"YulIdentifier","src":"250:3:22"},"nativeSrc":"250:32:22","nodeType":"YulFunctionCall","src":"250:32:22"},"nativeSrc":"247:52:22","nodeType":"YulIf","src":"247:52:22"},{"nativeSrc":"308:36:22","nodeType":"YulVariableDeclaration","src":"308:36:22","value":{"arguments":[{"name":"headStart","nativeSrc":"334:9:22","nodeType":"YulIdentifier","src":"334:9:22"}],"functionName":{"name":"calldataload","nativeSrc":"321:12:22","nodeType":"YulIdentifier","src":"321:12:22"},"nativeSrc":"321:23:22","nodeType":"YulFunctionCall","src":"321:23:22"},"variables":[{"name":"value","nativeSrc":"312:5:22","nodeType":"YulTypedName","src":"312:5:22","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"378:5:22","nodeType":"YulIdentifier","src":"378:5:22"}],"functionName":{"name":"validator_revert_address","nativeSrc":"353:24:22","nodeType":"YulIdentifier","src":"353:24:22"},"nativeSrc":"353:31:22","nodeType":"YulFunctionCall","src":"353:31:22"},"nativeSrc":"353:31:22","nodeType":"YulExpressionStatement","src":"353:31:22"},{"nativeSrc":"393:15:22","nodeType":"YulAssignment","src":"393:15:22","value":{"name":"value","nativeSrc":"403:5:22","nodeType":"YulIdentifier","src":"403:5:22"},"variableNames":[{"name":"value0","nativeSrc":"393:6:22","nodeType":"YulIdentifier","src":"393:6:22"}]},{"nativeSrc":"417:47:22","nodeType":"YulVariableDeclaration","src":"417:47:22","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"449:9:22","nodeType":"YulIdentifier","src":"449:9:22"},{"kind":"number","nativeSrc":"460:2:22","nodeType":"YulLiteral","src":"460:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"445:3:22","nodeType":"YulIdentifier","src":"445:3:22"},"nativeSrc":"445:18:22","nodeType":"YulFunctionCall","src":"445:18:22"}],"functionName":{"name":"calldataload","nativeSrc":"432:12:22","nodeType":"YulIdentifier","src":"432:12:22"},"nativeSrc":"432:32:22","nodeType":"YulFunctionCall","src":"432:32:22"},"variables":[{"name":"value_1","nativeSrc":"421:7:22","nodeType":"YulTypedName","src":"421:7:22","type":""}]},{"expression":{"arguments":[{"name":"value_1","nativeSrc":"498:7:22","nodeType":"YulIdentifier","src":"498:7:22"}],"functionName":{"name":"validator_revert_address","nativeSrc":"473:24:22","nodeType":"YulIdentifier","src":"473:24:22"},"nativeSrc":"473:33:22","nodeType":"YulFunctionCall","src":"473:33:22"},"nativeSrc":"473:33:22","nodeType":"YulExpressionStatement","src":"473:33:22"},{"nativeSrc":"515:17:22","nodeType":"YulAssignment","src":"515:17:22","value":{"name":"value_1","nativeSrc":"525:7:22","nodeType":"YulIdentifier","src":"525:7:22"},"variableNames":[{"name":"value1","nativeSrc":"515:6:22","nodeType":"YulIdentifier","src":"515:6:22"}]}]},"name":"abi_decode_tuple_t_addresst_address","nativeSrc":"150:388:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"195:9:22","nodeType":"YulTypedName","src":"195:9:22","type":""},{"name":"dataEnd","nativeSrc":"206:7:22","nodeType":"YulTypedName","src":"206:7:22","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"218:6:22","nodeType":"YulTypedName","src":"218:6:22","type":""},{"name":"value1","nativeSrc":"226:6:22","nodeType":"YulTypedName","src":"226:6:22","type":""}],"src":"150:388:22"},{"body":{"nativeSrc":"644:102:22","nodeType":"YulBlock","src":"644:102:22","statements":[{"nativeSrc":"654:26:22","nodeType":"YulAssignment","src":"654:26:22","value":{"arguments":[{"name":"headStart","nativeSrc":"666:9:22","nodeType":"YulIdentifier","src":"666:9:22"},{"kind":"number","nativeSrc":"677:2:22","nodeType":"YulLiteral","src":"677:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"662:3:22","nodeType":"YulIdentifier","src":"662:3:22"},"nativeSrc":"662:18:22","nodeType":"YulFunctionCall","src":"662:18:22"},"variableNames":[{"name":"tail","nativeSrc":"654:4:22","nodeType":"YulIdentifier","src":"654:4:22"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"696:9:22","nodeType":"YulIdentifier","src":"696:9:22"},{"arguments":[{"name":"value0","nativeSrc":"711:6:22","nodeType":"YulIdentifier","src":"711:6:22"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"727:3:22","nodeType":"YulLiteral","src":"727:3:22","type":"","value":"160"},{"kind":"number","nativeSrc":"732:1:22","nodeType":"YulLiteral","src":"732:1:22","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"723:3:22","nodeType":"YulIdentifier","src":"723:3:22"},"nativeSrc":"723:11:22","nodeType":"YulFunctionCall","src":"723:11:22"},{"kind":"number","nativeSrc":"736:1:22","nodeType":"YulLiteral","src":"736:1:22","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"719:3:22","nodeType":"YulIdentifier","src":"719:3:22"},"nativeSrc":"719:19:22","nodeType":"YulFunctionCall","src":"719:19:22"}],"functionName":{"name":"and","nativeSrc":"707:3:22","nodeType":"YulIdentifier","src":"707:3:22"},"nativeSrc":"707:32:22","nodeType":"YulFunctionCall","src":"707:32:22"}],"functionName":{"name":"mstore","nativeSrc":"689:6:22","nodeType":"YulIdentifier","src":"689:6:22"},"nativeSrc":"689:51:22","nodeType":"YulFunctionCall","src":"689:51:22"},"nativeSrc":"689:51:22","nodeType":"YulExpressionStatement","src":"689:51:22"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"543:203:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"613:9:22","nodeType":"YulTypedName","src":"613:9:22","type":""},{"name":"value0","nativeSrc":"624:6:22","nodeType":"YulTypedName","src":"624:6:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"635:4:22","nodeType":"YulTypedName","src":"635:4:22","type":""}],"src":"543:203:22"},{"body":{"nativeSrc":"783:95:22","nodeType":"YulBlock","src":"783:95:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"800:1:22","nodeType":"YulLiteral","src":"800:1:22","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"807:3:22","nodeType":"YulLiteral","src":"807:3:22","type":"","value":"224"},{"kind":"number","nativeSrc":"812:10:22","nodeType":"YulLiteral","src":"812:10:22","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"803:3:22","nodeType":"YulIdentifier","src":"803:3:22"},"nativeSrc":"803:20:22","nodeType":"YulFunctionCall","src":"803:20:22"}],"functionName":{"name":"mstore","nativeSrc":"793:6:22","nodeType":"YulIdentifier","src":"793:6:22"},"nativeSrc":"793:31:22","nodeType":"YulFunctionCall","src":"793:31:22"},"nativeSrc":"793:31:22","nodeType":"YulExpressionStatement","src":"793:31:22"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"840:1:22","nodeType":"YulLiteral","src":"840:1:22","type":"","value":"4"},{"kind":"number","nativeSrc":"843:4:22","nodeType":"YulLiteral","src":"843:4:22","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"833:6:22","nodeType":"YulIdentifier","src":"833:6:22"},"nativeSrc":"833:15:22","nodeType":"YulFunctionCall","src":"833:15:22"},"nativeSrc":"833:15:22","nodeType":"YulExpressionStatement","src":"833:15:22"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"864:1:22","nodeType":"YulLiteral","src":"864:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"867:4:22","nodeType":"YulLiteral","src":"867:4:22","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"857:6:22","nodeType":"YulIdentifier","src":"857:6:22"},"nativeSrc":"857:15:22","nodeType":"YulFunctionCall","src":"857:15:22"},"nativeSrc":"857:15:22","nodeType":"YulExpressionStatement","src":"857:15:22"}]},"name":"panic_error_0x41","nativeSrc":"751:127:22","nodeType":"YulFunctionDefinition","src":"751:127:22"},{"body":{"nativeSrc":"928:230:22","nodeType":"YulBlock","src":"928:230:22","statements":[{"nativeSrc":"938:19:22","nodeType":"YulAssignment","src":"938:19:22","value":{"arguments":[{"kind":"number","nativeSrc":"954:2:22","nodeType":"YulLiteral","src":"954:2:22","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"948:5:22","nodeType":"YulIdentifier","src":"948:5:22"},"nativeSrc":"948:9:22","nodeType":"YulFunctionCall","src":"948:9:22"},"variableNames":[{"name":"memPtr","nativeSrc":"938:6:22","nodeType":"YulIdentifier","src":"938:6:22"}]},{"nativeSrc":"966:58:22","nodeType":"YulVariableDeclaration","src":"966:58:22","value":{"arguments":[{"name":"memPtr","nativeSrc":"988:6:22","nodeType":"YulIdentifier","src":"988:6:22"},{"arguments":[{"arguments":[{"name":"size","nativeSrc":"1004:4:22","nodeType":"YulIdentifier","src":"1004:4:22"},{"kind":"number","nativeSrc":"1010:2:22","nodeType":"YulLiteral","src":"1010:2:22","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"1000:3:22","nodeType":"YulIdentifier","src":"1000:3:22"},"nativeSrc":"1000:13:22","nodeType":"YulFunctionCall","src":"1000:13:22"},{"arguments":[{"kind":"number","nativeSrc":"1019:2:22","nodeType":"YulLiteral","src":"1019:2:22","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"1015:3:22","nodeType":"YulIdentifier","src":"1015:3:22"},"nativeSrc":"1015:7:22","nodeType":"YulFunctionCall","src":"1015:7:22"}],"functionName":{"name":"and","nativeSrc":"996:3:22","nodeType":"YulIdentifier","src":"996:3:22"},"nativeSrc":"996:27:22","nodeType":"YulFunctionCall","src":"996:27:22"}],"functionName":{"name":"add","nativeSrc":"984:3:22","nodeType":"YulIdentifier","src":"984:3:22"},"nativeSrc":"984:40:22","nodeType":"YulFunctionCall","src":"984:40:22"},"variables":[{"name":"newFreePtr","nativeSrc":"970:10:22","nodeType":"YulTypedName","src":"970:10:22","type":""}]},{"body":{"nativeSrc":"1099:22:22","nodeType":"YulBlock","src":"1099:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"1101:16:22","nodeType":"YulIdentifier","src":"1101:16:22"},"nativeSrc":"1101:18:22","nodeType":"YulFunctionCall","src":"1101:18:22"},"nativeSrc":"1101:18:22","nodeType":"YulExpressionStatement","src":"1101:18:22"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nativeSrc":"1042:10:22","nodeType":"YulIdentifier","src":"1042:10:22"},{"kind":"number","nativeSrc":"1054:18:22","nodeType":"YulLiteral","src":"1054:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"1039:2:22","nodeType":"YulIdentifier","src":"1039:2:22"},"nativeSrc":"1039:34:22","nodeType":"YulFunctionCall","src":"1039:34:22"},{"arguments":[{"name":"newFreePtr","nativeSrc":"1078:10:22","nodeType":"YulIdentifier","src":"1078:10:22"},{"name":"memPtr","nativeSrc":"1090:6:22","nodeType":"YulIdentifier","src":"1090:6:22"}],"functionName":{"name":"lt","nativeSrc":"1075:2:22","nodeType":"YulIdentifier","src":"1075:2:22"},"nativeSrc":"1075:22:22","nodeType":"YulFunctionCall","src":"1075:22:22"}],"functionName":{"name":"or","nativeSrc":"1036:2:22","nodeType":"YulIdentifier","src":"1036:2:22"},"nativeSrc":"1036:62:22","nodeType":"YulFunctionCall","src":"1036:62:22"},"nativeSrc":"1033:88:22","nodeType":"YulIf","src":"1033:88:22"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1137:2:22","nodeType":"YulLiteral","src":"1137:2:22","type":"","value":"64"},{"name":"newFreePtr","nativeSrc":"1141:10:22","nodeType":"YulIdentifier","src":"1141:10:22"}],"functionName":{"name":"mstore","nativeSrc":"1130:6:22","nodeType":"YulIdentifier","src":"1130:6:22"},"nativeSrc":"1130:22:22","nodeType":"YulFunctionCall","src":"1130:22:22"},"nativeSrc":"1130:22:22","nodeType":"YulExpressionStatement","src":"1130:22:22"}]},"name":"allocate_memory","nativeSrc":"883:275:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nativeSrc":"908:4:22","nodeType":"YulTypedName","src":"908:4:22","type":""}],"returnVariables":[{"name":"memPtr","nativeSrc":"917:6:22","nodeType":"YulTypedName","src":"917:6:22","type":""}],"src":"883:275:22"},{"body":{"nativeSrc":"1232:114:22","nodeType":"YulBlock","src":"1232:114:22","statements":[{"body":{"nativeSrc":"1276:22:22","nodeType":"YulBlock","src":"1276:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"1278:16:22","nodeType":"YulIdentifier","src":"1278:16:22"},"nativeSrc":"1278:18:22","nodeType":"YulFunctionCall","src":"1278:18:22"},"nativeSrc":"1278:18:22","nodeType":"YulExpressionStatement","src":"1278:18:22"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"1248:6:22","nodeType":"YulIdentifier","src":"1248:6:22"},{"kind":"number","nativeSrc":"1256:18:22","nodeType":"YulLiteral","src":"1256:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"1245:2:22","nodeType":"YulIdentifier","src":"1245:2:22"},"nativeSrc":"1245:30:22","nodeType":"YulFunctionCall","src":"1245:30:22"},"nativeSrc":"1242:56:22","nodeType":"YulIf","src":"1242:56:22"},{"nativeSrc":"1307:33:22","nodeType":"YulAssignment","src":"1307:33:22","value":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"1323:1:22","nodeType":"YulLiteral","src":"1323:1:22","type":"","value":"5"},{"name":"length","nativeSrc":"1326:6:22","nodeType":"YulIdentifier","src":"1326:6:22"}],"functionName":{"name":"shl","nativeSrc":"1319:3:22","nodeType":"YulIdentifier","src":"1319:3:22"},"nativeSrc":"1319:14:22","nodeType":"YulFunctionCall","src":"1319:14:22"},{"kind":"number","nativeSrc":"1335:4:22","nodeType":"YulLiteral","src":"1335:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1315:3:22","nodeType":"YulIdentifier","src":"1315:3:22"},"nativeSrc":"1315:25:22","nodeType":"YulFunctionCall","src":"1315:25:22"},"variableNames":[{"name":"size","nativeSrc":"1307:4:22","nodeType":"YulIdentifier","src":"1307:4:22"}]}]},"name":"array_allocation_size_array_address_dyn","nativeSrc":"1163:183:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nativeSrc":"1212:6:22","nodeType":"YulTypedName","src":"1212:6:22","type":""}],"returnVariables":[{"name":"size","nativeSrc":"1223:4:22","nodeType":"YulTypedName","src":"1223:4:22","type":""}],"src":"1163:183:22"},{"body":{"nativeSrc":"1415:604:22","nodeType":"YulBlock","src":"1415:604:22","statements":[{"body":{"nativeSrc":"1464:16:22","nodeType":"YulBlock","src":"1464:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1473:1:22","nodeType":"YulLiteral","src":"1473:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"1476:1:22","nodeType":"YulLiteral","src":"1476:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1466:6:22","nodeType":"YulIdentifier","src":"1466:6:22"},"nativeSrc":"1466:12:22","nodeType":"YulFunctionCall","src":"1466:12:22"},"nativeSrc":"1466:12:22","nodeType":"YulExpressionStatement","src":"1466:12:22"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"1443:6:22","nodeType":"YulIdentifier","src":"1443:6:22"},{"kind":"number","nativeSrc":"1451:4:22","nodeType":"YulLiteral","src":"1451:4:22","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"1439:3:22","nodeType":"YulIdentifier","src":"1439:3:22"},"nativeSrc":"1439:17:22","nodeType":"YulFunctionCall","src":"1439:17:22"},{"name":"end","nativeSrc":"1458:3:22","nodeType":"YulIdentifier","src":"1458:3:22"}],"functionName":{"name":"slt","nativeSrc":"1435:3:22","nodeType":"YulIdentifier","src":"1435:3:22"},"nativeSrc":"1435:27:22","nodeType":"YulFunctionCall","src":"1435:27:22"}],"functionName":{"name":"iszero","nativeSrc":"1428:6:22","nodeType":"YulIdentifier","src":"1428:6:22"},"nativeSrc":"1428:35:22","nodeType":"YulFunctionCall","src":"1428:35:22"},"nativeSrc":"1425:55:22","nodeType":"YulIf","src":"1425:55:22"},{"nativeSrc":"1489:30:22","nodeType":"YulVariableDeclaration","src":"1489:30:22","value":{"arguments":[{"name":"offset","nativeSrc":"1512:6:22","nodeType":"YulIdentifier","src":"1512:6:22"}],"functionName":{"name":"calldataload","nativeSrc":"1499:12:22","nodeType":"YulIdentifier","src":"1499:12:22"},"nativeSrc":"1499:20:22","nodeType":"YulFunctionCall","src":"1499:20:22"},"variables":[{"name":"_1","nativeSrc":"1493:2:22","nodeType":"YulTypedName","src":"1493:2:22","type":""}]},{"nativeSrc":"1528:14:22","nodeType":"YulVariableDeclaration","src":"1528:14:22","value":{"kind":"number","nativeSrc":"1538:4:22","nodeType":"YulLiteral","src":"1538:4:22","type":"","value":"0x20"},"variables":[{"name":"_2","nativeSrc":"1532:2:22","nodeType":"YulTypedName","src":"1532:2:22","type":""}]},{"nativeSrc":"1551:71:22","nodeType":"YulVariableDeclaration","src":"1551:71:22","value":{"arguments":[{"arguments":[{"name":"_1","nativeSrc":"1618:2:22","nodeType":"YulIdentifier","src":"1618:2:22"}],"functionName":{"name":"array_allocation_size_array_address_dyn","nativeSrc":"1578:39:22","nodeType":"YulIdentifier","src":"1578:39:22"},"nativeSrc":"1578:43:22","nodeType":"YulFunctionCall","src":"1578:43:22"}],"functionName":{"name":"allocate_memory","nativeSrc":"1562:15:22","nodeType":"YulIdentifier","src":"1562:15:22"},"nativeSrc":"1562:60:22","nodeType":"YulFunctionCall","src":"1562:60:22"},"variables":[{"name":"dst","nativeSrc":"1555:3:22","nodeType":"YulTypedName","src":"1555:3:22","type":""}]},{"nativeSrc":"1631:16:22","nodeType":"YulVariableDeclaration","src":"1631:16:22","value":{"name":"dst","nativeSrc":"1644:3:22","nodeType":"YulIdentifier","src":"1644:3:22"},"variables":[{"name":"dst_1","nativeSrc":"1635:5:22","nodeType":"YulTypedName","src":"1635:5:22","type":""}]},{"expression":{"arguments":[{"name":"dst","nativeSrc":"1663:3:22","nodeType":"YulIdentifier","src":"1663:3:22"},{"name":"_1","nativeSrc":"1668:2:22","nodeType":"YulIdentifier","src":"1668:2:22"}],"functionName":{"name":"mstore","nativeSrc":"1656:6:22","nodeType":"YulIdentifier","src":"1656:6:22"},"nativeSrc":"1656:15:22","nodeType":"YulFunctionCall","src":"1656:15:22"},"nativeSrc":"1656:15:22","nodeType":"YulExpressionStatement","src":"1656:15:22"},{"nativeSrc":"1680:21:22","nodeType":"YulAssignment","src":"1680:21:22","value":{"arguments":[{"name":"dst","nativeSrc":"1691:3:22","nodeType":"YulIdentifier","src":"1691:3:22"},{"kind":"number","nativeSrc":"1696:4:22","nodeType":"YulLiteral","src":"1696:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1687:3:22","nodeType":"YulIdentifier","src":"1687:3:22"},"nativeSrc":"1687:14:22","nodeType":"YulFunctionCall","src":"1687:14:22"},"variableNames":[{"name":"dst","nativeSrc":"1680:3:22","nodeType":"YulIdentifier","src":"1680:3:22"}]},{"nativeSrc":"1710:48:22","nodeType":"YulVariableDeclaration","src":"1710:48:22","value":{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"1732:6:22","nodeType":"YulIdentifier","src":"1732:6:22"},{"arguments":[{"kind":"number","nativeSrc":"1744:1:22","nodeType":"YulLiteral","src":"1744:1:22","type":"","value":"5"},{"name":"_1","nativeSrc":"1747:2:22","nodeType":"YulIdentifier","src":"1747:2:22"}],"functionName":{"name":"shl","nativeSrc":"1740:3:22","nodeType":"YulIdentifier","src":"1740:3:22"},"nativeSrc":"1740:10:22","nodeType":"YulFunctionCall","src":"1740:10:22"}],"functionName":{"name":"add","nativeSrc":"1728:3:22","nodeType":"YulIdentifier","src":"1728:3:22"},"nativeSrc":"1728:23:22","nodeType":"YulFunctionCall","src":"1728:23:22"},{"kind":"number","nativeSrc":"1753:4:22","nodeType":"YulLiteral","src":"1753:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1724:3:22","nodeType":"YulIdentifier","src":"1724:3:22"},"nativeSrc":"1724:34:22","nodeType":"YulFunctionCall","src":"1724:34:22"},"variables":[{"name":"srcEnd","nativeSrc":"1714:6:22","nodeType":"YulTypedName","src":"1714:6:22","type":""}]},{"body":{"nativeSrc":"1786:16:22","nodeType":"YulBlock","src":"1786:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1795:1:22","nodeType":"YulLiteral","src":"1795:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"1798:1:22","nodeType":"YulLiteral","src":"1798:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1788:6:22","nodeType":"YulIdentifier","src":"1788:6:22"},"nativeSrc":"1788:12:22","nodeType":"YulFunctionCall","src":"1788:12:22"},"nativeSrc":"1788:12:22","nodeType":"YulExpressionStatement","src":"1788:12:22"}]},"condition":{"arguments":[{"name":"srcEnd","nativeSrc":"1773:6:22","nodeType":"YulIdentifier","src":"1773:6:22"},{"name":"end","nativeSrc":"1781:3:22","nodeType":"YulIdentifier","src":"1781:3:22"}],"functionName":{"name":"gt","nativeSrc":"1770:2:22","nodeType":"YulIdentifier","src":"1770:2:22"},"nativeSrc":"1770:15:22","nodeType":"YulFunctionCall","src":"1770:15:22"},"nativeSrc":"1767:35:22","nodeType":"YulIf","src":"1767:35:22"},{"nativeSrc":"1811:28:22","nodeType":"YulVariableDeclaration","src":"1811:28:22","value":{"arguments":[{"name":"offset","nativeSrc":"1826:6:22","nodeType":"YulIdentifier","src":"1826:6:22"},{"kind":"number","nativeSrc":"1834:4:22","nodeType":"YulLiteral","src":"1834:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1822:3:22","nodeType":"YulIdentifier","src":"1822:3:22"},"nativeSrc":"1822:17:22","nodeType":"YulFunctionCall","src":"1822:17:22"},"variables":[{"name":"src","nativeSrc":"1815:3:22","nodeType":"YulTypedName","src":"1815:3:22","type":""}]},{"body":{"nativeSrc":"1904:86:22","nodeType":"YulBlock","src":"1904:86:22","statements":[{"expression":{"arguments":[{"name":"dst","nativeSrc":"1925:3:22","nodeType":"YulIdentifier","src":"1925:3:22"},{"arguments":[{"name":"src","nativeSrc":"1943:3:22","nodeType":"YulIdentifier","src":"1943:3:22"}],"functionName":{"name":"calldataload","nativeSrc":"1930:12:22","nodeType":"YulIdentifier","src":"1930:12:22"},"nativeSrc":"1930:17:22","nodeType":"YulFunctionCall","src":"1930:17:22"}],"functionName":{"name":"mstore","nativeSrc":"1918:6:22","nodeType":"YulIdentifier","src":"1918:6:22"},"nativeSrc":"1918:30:22","nodeType":"YulFunctionCall","src":"1918:30:22"},"nativeSrc":"1918:30:22","nodeType":"YulExpressionStatement","src":"1918:30:22"},{"nativeSrc":"1961:19:22","nodeType":"YulAssignment","src":"1961:19:22","value":{"arguments":[{"name":"dst","nativeSrc":"1972:3:22","nodeType":"YulIdentifier","src":"1972:3:22"},{"name":"_2","nativeSrc":"1977:2:22","nodeType":"YulIdentifier","src":"1977:2:22"}],"functionName":{"name":"add","nativeSrc":"1968:3:22","nodeType":"YulIdentifier","src":"1968:3:22"},"nativeSrc":"1968:12:22","nodeType":"YulFunctionCall","src":"1968:12:22"},"variableNames":[{"name":"dst","nativeSrc":"1961:3:22","nodeType":"YulIdentifier","src":"1961:3:22"}]}]},"condition":{"arguments":[{"name":"src","nativeSrc":"1859:3:22","nodeType":"YulIdentifier","src":"1859:3:22"},{"name":"srcEnd","nativeSrc":"1864:6:22","nodeType":"YulIdentifier","src":"1864:6:22"}],"functionName":{"name":"lt","nativeSrc":"1856:2:22","nodeType":"YulIdentifier","src":"1856:2:22"},"nativeSrc":"1856:15:22","nodeType":"YulFunctionCall","src":"1856:15:22"},"nativeSrc":"1848:142:22","nodeType":"YulForLoop","post":{"nativeSrc":"1872:23:22","nodeType":"YulBlock","src":"1872:23:22","statements":[{"nativeSrc":"1874:19:22","nodeType":"YulAssignment","src":"1874:19:22","value":{"arguments":[{"name":"src","nativeSrc":"1885:3:22","nodeType":"YulIdentifier","src":"1885:3:22"},{"name":"_2","nativeSrc":"1890:2:22","nodeType":"YulIdentifier","src":"1890:2:22"}],"functionName":{"name":"add","nativeSrc":"1881:3:22","nodeType":"YulIdentifier","src":"1881:3:22"},"nativeSrc":"1881:12:22","nodeType":"YulFunctionCall","src":"1881:12:22"},"variableNames":[{"name":"src","nativeSrc":"1874:3:22","nodeType":"YulIdentifier","src":"1874:3:22"}]}]},"pre":{"nativeSrc":"1852:3:22","nodeType":"YulBlock","src":"1852:3:22","statements":[]},"src":"1848:142:22"},{"nativeSrc":"1999:14:22","nodeType":"YulAssignment","src":"1999:14:22","value":{"name":"dst_1","nativeSrc":"2008:5:22","nodeType":"YulIdentifier","src":"2008:5:22"},"variableNames":[{"name":"array","nativeSrc":"1999:5:22","nodeType":"YulIdentifier","src":"1999:5:22"}]}]},"name":"abi_decode_array_uint256_dyn","nativeSrc":"1351:668:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"1389:6:22","nodeType":"YulTypedName","src":"1389:6:22","type":""},{"name":"end","nativeSrc":"1397:3:22","nodeType":"YulTypedName","src":"1397:3:22","type":""}],"returnVariables":[{"name":"array","nativeSrc":"1405:5:22","nodeType":"YulTypedName","src":"1405:5:22","type":""}],"src":"1351:668:22"},{"body":{"nativeSrc":"2178:1129:22","nodeType":"YulBlock","src":"2178:1129:22","statements":[{"body":{"nativeSrc":"2224:16:22","nodeType":"YulBlock","src":"2224:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2233:1:22","nodeType":"YulLiteral","src":"2233:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"2236:1:22","nodeType":"YulLiteral","src":"2236:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2226:6:22","nodeType":"YulIdentifier","src":"2226:6:22"},"nativeSrc":"2226:12:22","nodeType":"YulFunctionCall","src":"2226:12:22"},"nativeSrc":"2226:12:22","nodeType":"YulExpressionStatement","src":"2226:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2199:7:22","nodeType":"YulIdentifier","src":"2199:7:22"},{"name":"headStart","nativeSrc":"2208:9:22","nodeType":"YulIdentifier","src":"2208:9:22"}],"functionName":{"name":"sub","nativeSrc":"2195:3:22","nodeType":"YulIdentifier","src":"2195:3:22"},"nativeSrc":"2195:23:22","nodeType":"YulFunctionCall","src":"2195:23:22"},{"kind":"number","nativeSrc":"2220:2:22","nodeType":"YulLiteral","src":"2220:2:22","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"2191:3:22","nodeType":"YulIdentifier","src":"2191:3:22"},"nativeSrc":"2191:32:22","nodeType":"YulFunctionCall","src":"2191:32:22"},"nativeSrc":"2188:52:22","nodeType":"YulIf","src":"2188:52:22"},{"nativeSrc":"2249:37:22","nodeType":"YulVariableDeclaration","src":"2249:37:22","value":{"arguments":[{"name":"headStart","nativeSrc":"2276:9:22","nodeType":"YulIdentifier","src":"2276:9:22"}],"functionName":{"name":"calldataload","nativeSrc":"2263:12:22","nodeType":"YulIdentifier","src":"2263:12:22"},"nativeSrc":"2263:23:22","nodeType":"YulFunctionCall","src":"2263:23:22"},"variables":[{"name":"offset","nativeSrc":"2253:6:22","nodeType":"YulTypedName","src":"2253:6:22","type":""}]},{"nativeSrc":"2295:28:22","nodeType":"YulVariableDeclaration","src":"2295:28:22","value":{"kind":"number","nativeSrc":"2305:18:22","nodeType":"YulLiteral","src":"2305:18:22","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nativeSrc":"2299:2:22","nodeType":"YulTypedName","src":"2299:2:22","type":""}]},{"body":{"nativeSrc":"2350:16:22","nodeType":"YulBlock","src":"2350:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2359:1:22","nodeType":"YulLiteral","src":"2359:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"2362:1:22","nodeType":"YulLiteral","src":"2362:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2352:6:22","nodeType":"YulIdentifier","src":"2352:6:22"},"nativeSrc":"2352:12:22","nodeType":"YulFunctionCall","src":"2352:12:22"},"nativeSrc":"2352:12:22","nodeType":"YulExpressionStatement","src":"2352:12:22"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"2338:6:22","nodeType":"YulIdentifier","src":"2338:6:22"},{"name":"_1","nativeSrc":"2346:2:22","nodeType":"YulIdentifier","src":"2346:2:22"}],"functionName":{"name":"gt","nativeSrc":"2335:2:22","nodeType":"YulIdentifier","src":"2335:2:22"},"nativeSrc":"2335:14:22","nodeType":"YulFunctionCall","src":"2335:14:22"},"nativeSrc":"2332:34:22","nodeType":"YulIf","src":"2332:34:22"},{"nativeSrc":"2375:32:22","nodeType":"YulVariableDeclaration","src":"2375:32:22","value":{"arguments":[{"name":"headStart","nativeSrc":"2389:9:22","nodeType":"YulIdentifier","src":"2389:9:22"},{"name":"offset","nativeSrc":"2400:6:22","nodeType":"YulIdentifier","src":"2400:6:22"}],"functionName":{"name":"add","nativeSrc":"2385:3:22","nodeType":"YulIdentifier","src":"2385:3:22"},"nativeSrc":"2385:22:22","nodeType":"YulFunctionCall","src":"2385:22:22"},"variables":[{"name":"_2","nativeSrc":"2379:2:22","nodeType":"YulTypedName","src":"2379:2:22","type":""}]},{"body":{"nativeSrc":"2455:16:22","nodeType":"YulBlock","src":"2455:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2464:1:22","nodeType":"YulLiteral","src":"2464:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"2467:1:22","nodeType":"YulLiteral","src":"2467:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2457:6:22","nodeType":"YulIdentifier","src":"2457:6:22"},"nativeSrc":"2457:12:22","nodeType":"YulFunctionCall","src":"2457:12:22"},"nativeSrc":"2457:12:22","nodeType":"YulExpressionStatement","src":"2457:12:22"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nativeSrc":"2434:2:22","nodeType":"YulIdentifier","src":"2434:2:22"},{"kind":"number","nativeSrc":"2438:4:22","nodeType":"YulLiteral","src":"2438:4:22","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"2430:3:22","nodeType":"YulIdentifier","src":"2430:3:22"},"nativeSrc":"2430:13:22","nodeType":"YulFunctionCall","src":"2430:13:22"},{"name":"dataEnd","nativeSrc":"2445:7:22","nodeType":"YulIdentifier","src":"2445:7:22"}],"functionName":{"name":"slt","nativeSrc":"2426:3:22","nodeType":"YulIdentifier","src":"2426:3:22"},"nativeSrc":"2426:27:22","nodeType":"YulFunctionCall","src":"2426:27:22"}],"functionName":{"name":"iszero","nativeSrc":"2419:6:22","nodeType":"YulIdentifier","src":"2419:6:22"},"nativeSrc":"2419:35:22","nodeType":"YulFunctionCall","src":"2419:35:22"},"nativeSrc":"2416:55:22","nodeType":"YulIf","src":"2416:55:22"},{"nativeSrc":"2480:26:22","nodeType":"YulVariableDeclaration","src":"2480:26:22","value":{"arguments":[{"name":"_2","nativeSrc":"2503:2:22","nodeType":"YulIdentifier","src":"2503:2:22"}],"functionName":{"name":"calldataload","nativeSrc":"2490:12:22","nodeType":"YulIdentifier","src":"2490:12:22"},"nativeSrc":"2490:16:22","nodeType":"YulFunctionCall","src":"2490:16:22"},"variables":[{"name":"_3","nativeSrc":"2484:2:22","nodeType":"YulTypedName","src":"2484:2:22","type":""}]},{"nativeSrc":"2515:14:22","nodeType":"YulVariableDeclaration","src":"2515:14:22","value":{"kind":"number","nativeSrc":"2525:4:22","nodeType":"YulLiteral","src":"2525:4:22","type":"","value":"0x20"},"variables":[{"name":"_4","nativeSrc":"2519:2:22","nodeType":"YulTypedName","src":"2519:2:22","type":""}]},{"nativeSrc":"2538:71:22","nodeType":"YulVariableDeclaration","src":"2538:71:22","value":{"arguments":[{"arguments":[{"name":"_3","nativeSrc":"2605:2:22","nodeType":"YulIdentifier","src":"2605:2:22"}],"functionName":{"name":"array_allocation_size_array_address_dyn","nativeSrc":"2565:39:22","nodeType":"YulIdentifier","src":"2565:39:22"},"nativeSrc":"2565:43:22","nodeType":"YulFunctionCall","src":"2565:43:22"}],"functionName":{"name":"allocate_memory","nativeSrc":"2549:15:22","nodeType":"YulIdentifier","src":"2549:15:22"},"nativeSrc":"2549:60:22","nodeType":"YulFunctionCall","src":"2549:60:22"},"variables":[{"name":"dst","nativeSrc":"2542:3:22","nodeType":"YulTypedName","src":"2542:3:22","type":""}]},{"nativeSrc":"2618:16:22","nodeType":"YulVariableDeclaration","src":"2618:16:22","value":{"name":"dst","nativeSrc":"2631:3:22","nodeType":"YulIdentifier","src":"2631:3:22"},"variables":[{"name":"dst_1","nativeSrc":"2622:5:22","nodeType":"YulTypedName","src":"2622:5:22","type":""}]},{"expression":{"arguments":[{"name":"dst","nativeSrc":"2650:3:22","nodeType":"YulIdentifier","src":"2650:3:22"},{"name":"_3","nativeSrc":"2655:2:22","nodeType":"YulIdentifier","src":"2655:2:22"}],"functionName":{"name":"mstore","nativeSrc":"2643:6:22","nodeType":"YulIdentifier","src":"2643:6:22"},"nativeSrc":"2643:15:22","nodeType":"YulFunctionCall","src":"2643:15:22"},"nativeSrc":"2643:15:22","nodeType":"YulExpressionStatement","src":"2643:15:22"},{"nativeSrc":"2667:19:22","nodeType":"YulAssignment","src":"2667:19:22","value":{"arguments":[{"name":"dst","nativeSrc":"2678:3:22","nodeType":"YulIdentifier","src":"2678:3:22"},{"name":"_4","nativeSrc":"2683:2:22","nodeType":"YulIdentifier","src":"2683:2:22"}],"functionName":{"name":"add","nativeSrc":"2674:3:22","nodeType":"YulIdentifier","src":"2674:3:22"},"nativeSrc":"2674:12:22","nodeType":"YulFunctionCall","src":"2674:12:22"},"variableNames":[{"name":"dst","nativeSrc":"2667:3:22","nodeType":"YulIdentifier","src":"2667:3:22"}]},{"nativeSrc":"2695:42:22","nodeType":"YulVariableDeclaration","src":"2695:42:22","value":{"arguments":[{"arguments":[{"name":"_2","nativeSrc":"2717:2:22","nodeType":"YulIdentifier","src":"2717:2:22"},{"arguments":[{"kind":"number","nativeSrc":"2725:1:22","nodeType":"YulLiteral","src":"2725:1:22","type":"","value":"5"},{"name":"_3","nativeSrc":"2728:2:22","nodeType":"YulIdentifier","src":"2728:2:22"}],"functionName":{"name":"shl","nativeSrc":"2721:3:22","nodeType":"YulIdentifier","src":"2721:3:22"},"nativeSrc":"2721:10:22","nodeType":"YulFunctionCall","src":"2721:10:22"}],"functionName":{"name":"add","nativeSrc":"2713:3:22","nodeType":"YulIdentifier","src":"2713:3:22"},"nativeSrc":"2713:19:22","nodeType":"YulFunctionCall","src":"2713:19:22"},{"name":"_4","nativeSrc":"2734:2:22","nodeType":"YulIdentifier","src":"2734:2:22"}],"functionName":{"name":"add","nativeSrc":"2709:3:22","nodeType":"YulIdentifier","src":"2709:3:22"},"nativeSrc":"2709:28:22","nodeType":"YulFunctionCall","src":"2709:28:22"},"variables":[{"name":"srcEnd","nativeSrc":"2699:6:22","nodeType":"YulTypedName","src":"2699:6:22","type":""}]},{"body":{"nativeSrc":"2769:16:22","nodeType":"YulBlock","src":"2769:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2778:1:22","nodeType":"YulLiteral","src":"2778:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"2781:1:22","nodeType":"YulLiteral","src":"2781:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2771:6:22","nodeType":"YulIdentifier","src":"2771:6:22"},"nativeSrc":"2771:12:22","nodeType":"YulFunctionCall","src":"2771:12:22"},"nativeSrc":"2771:12:22","nodeType":"YulExpressionStatement","src":"2771:12:22"}]},"condition":{"arguments":[{"name":"srcEnd","nativeSrc":"2752:6:22","nodeType":"YulIdentifier","src":"2752:6:22"},{"name":"dataEnd","nativeSrc":"2760:7:22","nodeType":"YulIdentifier","src":"2760:7:22"}],"functionName":{"name":"gt","nativeSrc":"2749:2:22","nodeType":"YulIdentifier","src":"2749:2:22"},"nativeSrc":"2749:19:22","nodeType":"YulFunctionCall","src":"2749:19:22"},"nativeSrc":"2746:39:22","nodeType":"YulIf","src":"2746:39:22"},{"nativeSrc":"2794:22:22","nodeType":"YulVariableDeclaration","src":"2794:22:22","value":{"arguments":[{"name":"_2","nativeSrc":"2809:2:22","nodeType":"YulIdentifier","src":"2809:2:22"},{"name":"_4","nativeSrc":"2813:2:22","nodeType":"YulIdentifier","src":"2813:2:22"}],"functionName":{"name":"add","nativeSrc":"2805:3:22","nodeType":"YulIdentifier","src":"2805:3:22"},"nativeSrc":"2805:11:22","nodeType":"YulFunctionCall","src":"2805:11:22"},"variables":[{"name":"src","nativeSrc":"2798:3:22","nodeType":"YulTypedName","src":"2798:3:22","type":""}]},{"body":{"nativeSrc":"2881:161:22","nodeType":"YulBlock","src":"2881:161:22","statements":[{"nativeSrc":"2895:30:22","nodeType":"YulVariableDeclaration","src":"2895:30:22","value":{"arguments":[{"name":"src","nativeSrc":"2921:3:22","nodeType":"YulIdentifier","src":"2921:3:22"}],"functionName":{"name":"calldataload","nativeSrc":"2908:12:22","nodeType":"YulIdentifier","src":"2908:12:22"},"nativeSrc":"2908:17:22","nodeType":"YulFunctionCall","src":"2908:17:22"},"variables":[{"name":"value","nativeSrc":"2899:5:22","nodeType":"YulTypedName","src":"2899:5:22","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"2963:5:22","nodeType":"YulIdentifier","src":"2963:5:22"}],"functionName":{"name":"validator_revert_address","nativeSrc":"2938:24:22","nodeType":"YulIdentifier","src":"2938:24:22"},"nativeSrc":"2938:31:22","nodeType":"YulFunctionCall","src":"2938:31:22"},"nativeSrc":"2938:31:22","nodeType":"YulExpressionStatement","src":"2938:31:22"},{"expression":{"arguments":[{"name":"dst","nativeSrc":"2989:3:22","nodeType":"YulIdentifier","src":"2989:3:22"},{"name":"value","nativeSrc":"2994:5:22","nodeType":"YulIdentifier","src":"2994:5:22"}],"functionName":{"name":"mstore","nativeSrc":"2982:6:22","nodeType":"YulIdentifier","src":"2982:6:22"},"nativeSrc":"2982:18:22","nodeType":"YulFunctionCall","src":"2982:18:22"},"nativeSrc":"2982:18:22","nodeType":"YulExpressionStatement","src":"2982:18:22"},{"nativeSrc":"3013:19:22","nodeType":"YulAssignment","src":"3013:19:22","value":{"arguments":[{"name":"dst","nativeSrc":"3024:3:22","nodeType":"YulIdentifier","src":"3024:3:22"},{"name":"_4","nativeSrc":"3029:2:22","nodeType":"YulIdentifier","src":"3029:2:22"}],"functionName":{"name":"add","nativeSrc":"3020:3:22","nodeType":"YulIdentifier","src":"3020:3:22"},"nativeSrc":"3020:12:22","nodeType":"YulFunctionCall","src":"3020:12:22"},"variableNames":[{"name":"dst","nativeSrc":"3013:3:22","nodeType":"YulIdentifier","src":"3013:3:22"}]}]},"condition":{"arguments":[{"name":"src","nativeSrc":"2836:3:22","nodeType":"YulIdentifier","src":"2836:3:22"},{"name":"srcEnd","nativeSrc":"2841:6:22","nodeType":"YulIdentifier","src":"2841:6:22"}],"functionName":{"name":"lt","nativeSrc":"2833:2:22","nodeType":"YulIdentifier","src":"2833:2:22"},"nativeSrc":"2833:15:22","nodeType":"YulFunctionCall","src":"2833:15:22"},"nativeSrc":"2825:217:22","nodeType":"YulForLoop","post":{"nativeSrc":"2849:23:22","nodeType":"YulBlock","src":"2849:23:22","statements":[{"nativeSrc":"2851:19:22","nodeType":"YulAssignment","src":"2851:19:22","value":{"arguments":[{"name":"src","nativeSrc":"2862:3:22","nodeType":"YulIdentifier","src":"2862:3:22"},{"name":"_4","nativeSrc":"2867:2:22","nodeType":"YulIdentifier","src":"2867:2:22"}],"functionName":{"name":"add","nativeSrc":"2858:3:22","nodeType":"YulIdentifier","src":"2858:3:22"},"nativeSrc":"2858:12:22","nodeType":"YulFunctionCall","src":"2858:12:22"},"variableNames":[{"name":"src","nativeSrc":"2851:3:22","nodeType":"YulIdentifier","src":"2851:3:22"}]}]},"pre":{"nativeSrc":"2829:3:22","nodeType":"YulBlock","src":"2829:3:22","statements":[]},"src":"2825:217:22"},{"nativeSrc":"3051:15:22","nodeType":"YulAssignment","src":"3051:15:22","value":{"name":"dst_1","nativeSrc":"3061:5:22","nodeType":"YulIdentifier","src":"3061:5:22"},"variableNames":[{"name":"value0","nativeSrc":"3051:6:22","nodeType":"YulIdentifier","src":"3051:6:22"}]},{"nativeSrc":"3075:48:22","nodeType":"YulVariableDeclaration","src":"3075:48:22","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3108:9:22","nodeType":"YulIdentifier","src":"3108:9:22"},{"name":"_4","nativeSrc":"3119:2:22","nodeType":"YulIdentifier","src":"3119:2:22"}],"functionName":{"name":"add","nativeSrc":"3104:3:22","nodeType":"YulIdentifier","src":"3104:3:22"},"nativeSrc":"3104:18:22","nodeType":"YulFunctionCall","src":"3104:18:22"}],"functionName":{"name":"calldataload","nativeSrc":"3091:12:22","nodeType":"YulIdentifier","src":"3091:12:22"},"nativeSrc":"3091:32:22","nodeType":"YulFunctionCall","src":"3091:32:22"},"variables":[{"name":"offset_1","nativeSrc":"3079:8:22","nodeType":"YulTypedName","src":"3079:8:22","type":""}]},{"body":{"nativeSrc":"3152:16:22","nodeType":"YulBlock","src":"3152:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3161:1:22","nodeType":"YulLiteral","src":"3161:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"3164:1:22","nodeType":"YulLiteral","src":"3164:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3154:6:22","nodeType":"YulIdentifier","src":"3154:6:22"},"nativeSrc":"3154:12:22","nodeType":"YulFunctionCall","src":"3154:12:22"},"nativeSrc":"3154:12:22","nodeType":"YulExpressionStatement","src":"3154:12:22"}]},"condition":{"arguments":[{"name":"offset_1","nativeSrc":"3138:8:22","nodeType":"YulIdentifier","src":"3138:8:22"},{"name":"_1","nativeSrc":"3148:2:22","nodeType":"YulIdentifier","src":"3148:2:22"}],"functionName":{"name":"gt","nativeSrc":"3135:2:22","nodeType":"YulIdentifier","src":"3135:2:22"},"nativeSrc":"3135:16:22","nodeType":"YulFunctionCall","src":"3135:16:22"},"nativeSrc":"3132:36:22","nodeType":"YulIf","src":"3132:36:22"},{"nativeSrc":"3177:73:22","nodeType":"YulAssignment","src":"3177:73:22","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3220:9:22","nodeType":"YulIdentifier","src":"3220:9:22"},{"name":"offset_1","nativeSrc":"3231:8:22","nodeType":"YulIdentifier","src":"3231:8:22"}],"functionName":{"name":"add","nativeSrc":"3216:3:22","nodeType":"YulIdentifier","src":"3216:3:22"},"nativeSrc":"3216:24:22","nodeType":"YulFunctionCall","src":"3216:24:22"},{"name":"dataEnd","nativeSrc":"3242:7:22","nodeType":"YulIdentifier","src":"3242:7:22"}],"functionName":{"name":"abi_decode_array_uint256_dyn","nativeSrc":"3187:28:22","nodeType":"YulIdentifier","src":"3187:28:22"},"nativeSrc":"3187:63:22","nodeType":"YulFunctionCall","src":"3187:63:22"},"variableNames":[{"name":"value1","nativeSrc":"3177:6:22","nodeType":"YulIdentifier","src":"3177:6:22"}]},{"nativeSrc":"3259:42:22","nodeType":"YulAssignment","src":"3259:42:22","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3286:9:22","nodeType":"YulIdentifier","src":"3286:9:22"},{"kind":"number","nativeSrc":"3297:2:22","nodeType":"YulLiteral","src":"3297:2:22","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"3282:3:22","nodeType":"YulIdentifier","src":"3282:3:22"},"nativeSrc":"3282:18:22","nodeType":"YulFunctionCall","src":"3282:18:22"}],"functionName":{"name":"calldataload","nativeSrc":"3269:12:22","nodeType":"YulIdentifier","src":"3269:12:22"},"nativeSrc":"3269:32:22","nodeType":"YulFunctionCall","src":"3269:32:22"},"variableNames":[{"name":"value2","nativeSrc":"3259:6:22","nodeType":"YulIdentifier","src":"3259:6:22"}]}]},"name":"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_uint256","nativeSrc":"2024:1283:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2128:9:22","nodeType":"YulTypedName","src":"2128:9:22","type":""},{"name":"dataEnd","nativeSrc":"2139:7:22","nodeType":"YulTypedName","src":"2139:7:22","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2151:6:22","nodeType":"YulTypedName","src":"2151:6:22","type":""},{"name":"value1","nativeSrc":"2159:6:22","nodeType":"YulTypedName","src":"2159:6:22","type":""},{"name":"value2","nativeSrc":"2167:6:22","nodeType":"YulTypedName","src":"2167:6:22","type":""}],"src":"2024:1283:22"},{"body":{"nativeSrc":"3382:110:22","nodeType":"YulBlock","src":"3382:110:22","statements":[{"body":{"nativeSrc":"3428:16:22","nodeType":"YulBlock","src":"3428:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3437:1:22","nodeType":"YulLiteral","src":"3437:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"3440:1:22","nodeType":"YulLiteral","src":"3440:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3430:6:22","nodeType":"YulIdentifier","src":"3430:6:22"},"nativeSrc":"3430:12:22","nodeType":"YulFunctionCall","src":"3430:12:22"},"nativeSrc":"3430:12:22","nodeType":"YulExpressionStatement","src":"3430:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"3403:7:22","nodeType":"YulIdentifier","src":"3403:7:22"},{"name":"headStart","nativeSrc":"3412:9:22","nodeType":"YulIdentifier","src":"3412:9:22"}],"functionName":{"name":"sub","nativeSrc":"3399:3:22","nodeType":"YulIdentifier","src":"3399:3:22"},"nativeSrc":"3399:23:22","nodeType":"YulFunctionCall","src":"3399:23:22"},{"kind":"number","nativeSrc":"3424:2:22","nodeType":"YulLiteral","src":"3424:2:22","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"3395:3:22","nodeType":"YulIdentifier","src":"3395:3:22"},"nativeSrc":"3395:32:22","nodeType":"YulFunctionCall","src":"3395:32:22"},"nativeSrc":"3392:52:22","nodeType":"YulIf","src":"3392:52:22"},{"nativeSrc":"3453:33:22","nodeType":"YulAssignment","src":"3453:33:22","value":{"arguments":[{"name":"headStart","nativeSrc":"3476:9:22","nodeType":"YulIdentifier","src":"3476:9:22"}],"functionName":{"name":"calldataload","nativeSrc":"3463:12:22","nodeType":"YulIdentifier","src":"3463:12:22"},"nativeSrc":"3463:23:22","nodeType":"YulFunctionCall","src":"3463:23:22"},"variableNames":[{"name":"value0","nativeSrc":"3453:6:22","nodeType":"YulIdentifier","src":"3453:6:22"}]}]},"name":"abi_decode_tuple_t_uint256","nativeSrc":"3312:180:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3348:9:22","nodeType":"YulTypedName","src":"3348:9:22","type":""},{"name":"dataEnd","nativeSrc":"3359:7:22","nodeType":"YulTypedName","src":"3359:7:22","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"3371:6:22","nodeType":"YulTypedName","src":"3371:6:22","type":""}],"src":"3312:180:22"},{"body":{"nativeSrc":"3567:177:22","nodeType":"YulBlock","src":"3567:177:22","statements":[{"body":{"nativeSrc":"3613:16:22","nodeType":"YulBlock","src":"3613:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3622:1:22","nodeType":"YulLiteral","src":"3622:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"3625:1:22","nodeType":"YulLiteral","src":"3625:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3615:6:22","nodeType":"YulIdentifier","src":"3615:6:22"},"nativeSrc":"3615:12:22","nodeType":"YulFunctionCall","src":"3615:12:22"},"nativeSrc":"3615:12:22","nodeType":"YulExpressionStatement","src":"3615:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"3588:7:22","nodeType":"YulIdentifier","src":"3588:7:22"},{"name":"headStart","nativeSrc":"3597:9:22","nodeType":"YulIdentifier","src":"3597:9:22"}],"functionName":{"name":"sub","nativeSrc":"3584:3:22","nodeType":"YulIdentifier","src":"3584:3:22"},"nativeSrc":"3584:23:22","nodeType":"YulFunctionCall","src":"3584:23:22"},{"kind":"number","nativeSrc":"3609:2:22","nodeType":"YulLiteral","src":"3609:2:22","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"3580:3:22","nodeType":"YulIdentifier","src":"3580:3:22"},"nativeSrc":"3580:32:22","nodeType":"YulFunctionCall","src":"3580:32:22"},"nativeSrc":"3577:52:22","nodeType":"YulIf","src":"3577:52:22"},{"nativeSrc":"3638:36:22","nodeType":"YulVariableDeclaration","src":"3638:36:22","value":{"arguments":[{"name":"headStart","nativeSrc":"3664:9:22","nodeType":"YulIdentifier","src":"3664:9:22"}],"functionName":{"name":"calldataload","nativeSrc":"3651:12:22","nodeType":"YulIdentifier","src":"3651:12:22"},"nativeSrc":"3651:23:22","nodeType":"YulFunctionCall","src":"3651:23:22"},"variables":[{"name":"value","nativeSrc":"3642:5:22","nodeType":"YulTypedName","src":"3642:5:22","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"3708:5:22","nodeType":"YulIdentifier","src":"3708:5:22"}],"functionName":{"name":"validator_revert_address","nativeSrc":"3683:24:22","nodeType":"YulIdentifier","src":"3683:24:22"},"nativeSrc":"3683:31:22","nodeType":"YulFunctionCall","src":"3683:31:22"},"nativeSrc":"3683:31:22","nodeType":"YulExpressionStatement","src":"3683:31:22"},{"nativeSrc":"3723:15:22","nodeType":"YulAssignment","src":"3723:15:22","value":{"name":"value","nativeSrc":"3733:5:22","nodeType":"YulIdentifier","src":"3733:5:22"},"variableNames":[{"name":"value0","nativeSrc":"3723:6:22","nodeType":"YulIdentifier","src":"3723:6:22"}]}]},"name":"abi_decode_tuple_t_address","nativeSrc":"3497:247:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3533:9:22","nodeType":"YulTypedName","src":"3533:9:22","type":""},{"name":"dataEnd","nativeSrc":"3544:7:22","nodeType":"YulTypedName","src":"3544:7:22","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"3556:6:22","nodeType":"YulTypedName","src":"3556:6:22","type":""}],"src":"3497:247:22"},{"body":{"nativeSrc":"3810:404:22","nodeType":"YulBlock","src":"3810:404:22","statements":[{"nativeSrc":"3820:26:22","nodeType":"YulVariableDeclaration","src":"3820:26:22","value":{"arguments":[{"name":"value","nativeSrc":"3840:5:22","nodeType":"YulIdentifier","src":"3840:5:22"}],"functionName":{"name":"mload","nativeSrc":"3834:5:22","nodeType":"YulIdentifier","src":"3834:5:22"},"nativeSrc":"3834:12:22","nodeType":"YulFunctionCall","src":"3834:12:22"},"variables":[{"name":"length","nativeSrc":"3824:6:22","nodeType":"YulTypedName","src":"3824:6:22","type":""}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"3862:3:22","nodeType":"YulIdentifier","src":"3862:3:22"},{"name":"length","nativeSrc":"3867:6:22","nodeType":"YulIdentifier","src":"3867:6:22"}],"functionName":{"name":"mstore","nativeSrc":"3855:6:22","nodeType":"YulIdentifier","src":"3855:6:22"},"nativeSrc":"3855:19:22","nodeType":"YulFunctionCall","src":"3855:19:22"},"nativeSrc":"3855:19:22","nodeType":"YulExpressionStatement","src":"3855:19:22"},{"nativeSrc":"3883:14:22","nodeType":"YulVariableDeclaration","src":"3883:14:22","value":{"kind":"number","nativeSrc":"3893:4:22","nodeType":"YulLiteral","src":"3893:4:22","type":"","value":"0x20"},"variables":[{"name":"_1","nativeSrc":"3887:2:22","nodeType":"YulTypedName","src":"3887:2:22","type":""}]},{"nativeSrc":"3906:21:22","nodeType":"YulAssignment","src":"3906:21:22","value":{"arguments":[{"name":"pos","nativeSrc":"3917:3:22","nodeType":"YulIdentifier","src":"3917:3:22"},{"kind":"number","nativeSrc":"3922:4:22","nodeType":"YulLiteral","src":"3922:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"3913:3:22","nodeType":"YulIdentifier","src":"3913:3:22"},"nativeSrc":"3913:14:22","nodeType":"YulFunctionCall","src":"3913:14:22"},"variableNames":[{"name":"pos","nativeSrc":"3906:3:22","nodeType":"YulIdentifier","src":"3906:3:22"}]},{"nativeSrc":"3936:30:22","nodeType":"YulVariableDeclaration","src":"3936:30:22","value":{"arguments":[{"name":"value","nativeSrc":"3954:5:22","nodeType":"YulIdentifier","src":"3954:5:22"},{"kind":"number","nativeSrc":"3961:4:22","nodeType":"YulLiteral","src":"3961:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"3950:3:22","nodeType":"YulIdentifier","src":"3950:3:22"},"nativeSrc":"3950:16:22","nodeType":"YulFunctionCall","src":"3950:16:22"},"variables":[{"name":"srcPtr","nativeSrc":"3940:6:22","nodeType":"YulTypedName","src":"3940:6:22","type":""}]},{"nativeSrc":"3975:10:22","nodeType":"YulVariableDeclaration","src":"3975:10:22","value":{"kind":"number","nativeSrc":"3984:1:22","nodeType":"YulLiteral","src":"3984:1:22","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"3979:1:22","nodeType":"YulTypedName","src":"3979:1:22","type":""}]},{"body":{"nativeSrc":"4043:146:22","nodeType":"YulBlock","src":"4043:146:22","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"4064:3:22","nodeType":"YulIdentifier","src":"4064:3:22"},{"arguments":[{"arguments":[{"name":"srcPtr","nativeSrc":"4079:6:22","nodeType":"YulIdentifier","src":"4079:6:22"}],"functionName":{"name":"mload","nativeSrc":"4073:5:22","nodeType":"YulIdentifier","src":"4073:5:22"},"nativeSrc":"4073:13:22","nodeType":"YulFunctionCall","src":"4073:13:22"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"4096:3:22","nodeType":"YulLiteral","src":"4096:3:22","type":"","value":"160"},{"kind":"number","nativeSrc":"4101:1:22","nodeType":"YulLiteral","src":"4101:1:22","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"4092:3:22","nodeType":"YulIdentifier","src":"4092:3:22"},"nativeSrc":"4092:11:22","nodeType":"YulFunctionCall","src":"4092:11:22"},{"kind":"number","nativeSrc":"4105:1:22","nodeType":"YulLiteral","src":"4105:1:22","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"4088:3:22","nodeType":"YulIdentifier","src":"4088:3:22"},"nativeSrc":"4088:19:22","nodeType":"YulFunctionCall","src":"4088:19:22"}],"functionName":{"name":"and","nativeSrc":"4069:3:22","nodeType":"YulIdentifier","src":"4069:3:22"},"nativeSrc":"4069:39:22","nodeType":"YulFunctionCall","src":"4069:39:22"}],"functionName":{"name":"mstore","nativeSrc":"4057:6:22","nodeType":"YulIdentifier","src":"4057:6:22"},"nativeSrc":"4057:52:22","nodeType":"YulFunctionCall","src":"4057:52:22"},"nativeSrc":"4057:52:22","nodeType":"YulExpressionStatement","src":"4057:52:22"},{"nativeSrc":"4122:19:22","nodeType":"YulAssignment","src":"4122:19:22","value":{"arguments":[{"name":"pos","nativeSrc":"4133:3:22","nodeType":"YulIdentifier","src":"4133:3:22"},{"name":"_1","nativeSrc":"4138:2:22","nodeType":"YulIdentifier","src":"4138:2:22"}],"functionName":{"name":"add","nativeSrc":"4129:3:22","nodeType":"YulIdentifier","src":"4129:3:22"},"nativeSrc":"4129:12:22","nodeType":"YulFunctionCall","src":"4129:12:22"},"variableNames":[{"name":"pos","nativeSrc":"4122:3:22","nodeType":"YulIdentifier","src":"4122:3:22"}]},{"nativeSrc":"4154:25:22","nodeType":"YulAssignment","src":"4154:25:22","value":{"arguments":[{"name":"srcPtr","nativeSrc":"4168:6:22","nodeType":"YulIdentifier","src":"4168:6:22"},{"name":"_1","nativeSrc":"4176:2:22","nodeType":"YulIdentifier","src":"4176:2:22"}],"functionName":{"name":"add","nativeSrc":"4164:3:22","nodeType":"YulIdentifier","src":"4164:3:22"},"nativeSrc":"4164:15:22","nodeType":"YulFunctionCall","src":"4164:15:22"},"variableNames":[{"name":"srcPtr","nativeSrc":"4154:6:22","nodeType":"YulIdentifier","src":"4154:6:22"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"4005:1:22","nodeType":"YulIdentifier","src":"4005:1:22"},{"name":"length","nativeSrc":"4008:6:22","nodeType":"YulIdentifier","src":"4008:6:22"}],"functionName":{"name":"lt","nativeSrc":"4002:2:22","nodeType":"YulIdentifier","src":"4002:2:22"},"nativeSrc":"4002:13:22","nodeType":"YulFunctionCall","src":"4002:13:22"},"nativeSrc":"3994:195:22","nodeType":"YulForLoop","post":{"nativeSrc":"4016:18:22","nodeType":"YulBlock","src":"4016:18:22","statements":[{"nativeSrc":"4018:14:22","nodeType":"YulAssignment","src":"4018:14:22","value":{"arguments":[{"name":"i","nativeSrc":"4027:1:22","nodeType":"YulIdentifier","src":"4027:1:22"},{"kind":"number","nativeSrc":"4030:1:22","nodeType":"YulLiteral","src":"4030:1:22","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"4023:3:22","nodeType":"YulIdentifier","src":"4023:3:22"},"nativeSrc":"4023:9:22","nodeType":"YulFunctionCall","src":"4023:9:22"},"variableNames":[{"name":"i","nativeSrc":"4018:1:22","nodeType":"YulIdentifier","src":"4018:1:22"}]}]},"pre":{"nativeSrc":"3998:3:22","nodeType":"YulBlock","src":"3998:3:22","statements":[]},"src":"3994:195:22"},{"nativeSrc":"4198:10:22","nodeType":"YulAssignment","src":"4198:10:22","value":{"name":"pos","nativeSrc":"4205:3:22","nodeType":"YulIdentifier","src":"4205:3:22"},"variableNames":[{"name":"end","nativeSrc":"4198:3:22","nodeType":"YulIdentifier","src":"4198:3:22"}]}]},"name":"abi_encode_array_address_dyn","nativeSrc":"3749:465:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3787:5:22","nodeType":"YulTypedName","src":"3787:5:22","type":""},{"name":"pos","nativeSrc":"3794:3:22","nodeType":"YulTypedName","src":"3794:3:22","type":""}],"returnVariables":[{"name":"end","nativeSrc":"3802:3:22","nodeType":"YulTypedName","src":"3802:3:22","type":""}],"src":"3749:465:22"},{"body":{"nativeSrc":"4370:110:22","nodeType":"YulBlock","src":"4370:110:22","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"4387:9:22","nodeType":"YulIdentifier","src":"4387:9:22"},{"kind":"number","nativeSrc":"4398:2:22","nodeType":"YulLiteral","src":"4398:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"4380:6:22","nodeType":"YulIdentifier","src":"4380:6:22"},"nativeSrc":"4380:21:22","nodeType":"YulFunctionCall","src":"4380:21:22"},"nativeSrc":"4380:21:22","nodeType":"YulExpressionStatement","src":"4380:21:22"},{"nativeSrc":"4410:64:22","nodeType":"YulAssignment","src":"4410:64:22","value":{"arguments":[{"name":"value0","nativeSrc":"4447:6:22","nodeType":"YulIdentifier","src":"4447:6:22"},{"arguments":[{"name":"headStart","nativeSrc":"4459:9:22","nodeType":"YulIdentifier","src":"4459:9:22"},{"kind":"number","nativeSrc":"4470:2:22","nodeType":"YulLiteral","src":"4470:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4455:3:22","nodeType":"YulIdentifier","src":"4455:3:22"},"nativeSrc":"4455:18:22","nodeType":"YulFunctionCall","src":"4455:18:22"}],"functionName":{"name":"abi_encode_array_address_dyn","nativeSrc":"4418:28:22","nodeType":"YulIdentifier","src":"4418:28:22"},"nativeSrc":"4418:56:22","nodeType":"YulFunctionCall","src":"4418:56:22"},"variableNames":[{"name":"tail","nativeSrc":"4410:4:22","nodeType":"YulIdentifier","src":"4410:4:22"}]}]},"name":"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed","nativeSrc":"4219:261:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4339:9:22","nodeType":"YulTypedName","src":"4339:9:22","type":""},{"name":"value0","nativeSrc":"4350:6:22","nodeType":"YulTypedName","src":"4350:6:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4361:4:22","nodeType":"YulTypedName","src":"4361:4:22","type":""}],"src":"4219:261:22"},{"body":{"nativeSrc":"4581:802:22","nodeType":"YulBlock","src":"4581:802:22","statements":[{"body":{"nativeSrc":"4627:16:22","nodeType":"YulBlock","src":"4627:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4636:1:22","nodeType":"YulLiteral","src":"4636:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"4639:1:22","nodeType":"YulLiteral","src":"4639:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"4629:6:22","nodeType":"YulIdentifier","src":"4629:6:22"},"nativeSrc":"4629:12:22","nodeType":"YulFunctionCall","src":"4629:12:22"},"nativeSrc":"4629:12:22","nodeType":"YulExpressionStatement","src":"4629:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"4602:7:22","nodeType":"YulIdentifier","src":"4602:7:22"},{"name":"headStart","nativeSrc":"4611:9:22","nodeType":"YulIdentifier","src":"4611:9:22"}],"functionName":{"name":"sub","nativeSrc":"4598:3:22","nodeType":"YulIdentifier","src":"4598:3:22"},"nativeSrc":"4598:23:22","nodeType":"YulFunctionCall","src":"4598:23:22"},{"kind":"number","nativeSrc":"4623:2:22","nodeType":"YulLiteral","src":"4623:2:22","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"4594:3:22","nodeType":"YulIdentifier","src":"4594:3:22"},"nativeSrc":"4594:32:22","nodeType":"YulFunctionCall","src":"4594:32:22"},"nativeSrc":"4591:52:22","nodeType":"YulIf","src":"4591:52:22"},{"nativeSrc":"4652:36:22","nodeType":"YulVariableDeclaration","src":"4652:36:22","value":{"arguments":[{"name":"headStart","nativeSrc":"4678:9:22","nodeType":"YulIdentifier","src":"4678:9:22"}],"functionName":{"name":"calldataload","nativeSrc":"4665:12:22","nodeType":"YulIdentifier","src":"4665:12:22"},"nativeSrc":"4665:23:22","nodeType":"YulFunctionCall","src":"4665:23:22"},"variables":[{"name":"value","nativeSrc":"4656:5:22","nodeType":"YulTypedName","src":"4656:5:22","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"4722:5:22","nodeType":"YulIdentifier","src":"4722:5:22"}],"functionName":{"name":"validator_revert_address","nativeSrc":"4697:24:22","nodeType":"YulIdentifier","src":"4697:24:22"},"nativeSrc":"4697:31:22","nodeType":"YulFunctionCall","src":"4697:31:22"},"nativeSrc":"4697:31:22","nodeType":"YulExpressionStatement","src":"4697:31:22"},{"nativeSrc":"4737:15:22","nodeType":"YulAssignment","src":"4737:15:22","value":{"name":"value","nativeSrc":"4747:5:22","nodeType":"YulIdentifier","src":"4747:5:22"},"variableNames":[{"name":"value0","nativeSrc":"4737:6:22","nodeType":"YulIdentifier","src":"4737:6:22"}]},{"nativeSrc":"4761:12:22","nodeType":"YulVariableDeclaration","src":"4761:12:22","value":{"kind":"number","nativeSrc":"4771:2:22","nodeType":"YulLiteral","src":"4771:2:22","type":"","value":"32"},"variables":[{"name":"_1","nativeSrc":"4765:2:22","nodeType":"YulTypedName","src":"4765:2:22","type":""}]},{"nativeSrc":"4782:46:22","nodeType":"YulVariableDeclaration","src":"4782:46:22","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4813:9:22","nodeType":"YulIdentifier","src":"4813:9:22"},{"name":"_1","nativeSrc":"4824:2:22","nodeType":"YulIdentifier","src":"4824:2:22"}],"functionName":{"name":"add","nativeSrc":"4809:3:22","nodeType":"YulIdentifier","src":"4809:3:22"},"nativeSrc":"4809:18:22","nodeType":"YulFunctionCall","src":"4809:18:22"}],"functionName":{"name":"calldataload","nativeSrc":"4796:12:22","nodeType":"YulIdentifier","src":"4796:12:22"},"nativeSrc":"4796:32:22","nodeType":"YulFunctionCall","src":"4796:32:22"},"variables":[{"name":"offset","nativeSrc":"4786:6:22","nodeType":"YulTypedName","src":"4786:6:22","type":""}]},{"nativeSrc":"4837:28:22","nodeType":"YulVariableDeclaration","src":"4837:28:22","value":{"kind":"number","nativeSrc":"4847:18:22","nodeType":"YulLiteral","src":"4847:18:22","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_2","nativeSrc":"4841:2:22","nodeType":"YulTypedName","src":"4841:2:22","type":""}]},{"body":{"nativeSrc":"4892:16:22","nodeType":"YulBlock","src":"4892:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4901:1:22","nodeType":"YulLiteral","src":"4901:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"4904:1:22","nodeType":"YulLiteral","src":"4904:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"4894:6:22","nodeType":"YulIdentifier","src":"4894:6:22"},"nativeSrc":"4894:12:22","nodeType":"YulFunctionCall","src":"4894:12:22"},"nativeSrc":"4894:12:22","nodeType":"YulExpressionStatement","src":"4894:12:22"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"4880:6:22","nodeType":"YulIdentifier","src":"4880:6:22"},{"name":"_2","nativeSrc":"4888:2:22","nodeType":"YulIdentifier","src":"4888:2:22"}],"functionName":{"name":"gt","nativeSrc":"4877:2:22","nodeType":"YulIdentifier","src":"4877:2:22"},"nativeSrc":"4877:14:22","nodeType":"YulFunctionCall","src":"4877:14:22"},"nativeSrc":"4874:34:22","nodeType":"YulIf","src":"4874:34:22"},{"nativeSrc":"4917:32:22","nodeType":"YulVariableDeclaration","src":"4917:32:22","value":{"arguments":[{"name":"headStart","nativeSrc":"4931:9:22","nodeType":"YulIdentifier","src":"4931:9:22"},{"name":"offset","nativeSrc":"4942:6:22","nodeType":"YulIdentifier","src":"4942:6:22"}],"functionName":{"name":"add","nativeSrc":"4927:3:22","nodeType":"YulIdentifier","src":"4927:3:22"},"nativeSrc":"4927:22:22","nodeType":"YulFunctionCall","src":"4927:22:22"},"variables":[{"name":"_3","nativeSrc":"4921:2:22","nodeType":"YulTypedName","src":"4921:2:22","type":""}]},{"body":{"nativeSrc":"4997:16:22","nodeType":"YulBlock","src":"4997:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5006:1:22","nodeType":"YulLiteral","src":"5006:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"5009:1:22","nodeType":"YulLiteral","src":"5009:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"4999:6:22","nodeType":"YulIdentifier","src":"4999:6:22"},"nativeSrc":"4999:12:22","nodeType":"YulFunctionCall","src":"4999:12:22"},"nativeSrc":"4999:12:22","nodeType":"YulExpressionStatement","src":"4999:12:22"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_3","nativeSrc":"4976:2:22","nodeType":"YulIdentifier","src":"4976:2:22"},{"kind":"number","nativeSrc":"4980:4:22","nodeType":"YulLiteral","src":"4980:4:22","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"4972:3:22","nodeType":"YulIdentifier","src":"4972:3:22"},"nativeSrc":"4972:13:22","nodeType":"YulFunctionCall","src":"4972:13:22"},{"name":"dataEnd","nativeSrc":"4987:7:22","nodeType":"YulIdentifier","src":"4987:7:22"}],"functionName":{"name":"slt","nativeSrc":"4968:3:22","nodeType":"YulIdentifier","src":"4968:3:22"},"nativeSrc":"4968:27:22","nodeType":"YulFunctionCall","src":"4968:27:22"}],"functionName":{"name":"iszero","nativeSrc":"4961:6:22","nodeType":"YulIdentifier","src":"4961:6:22"},"nativeSrc":"4961:35:22","nodeType":"YulFunctionCall","src":"4961:35:22"},"nativeSrc":"4958:55:22","nodeType":"YulIf","src":"4958:55:22"},{"nativeSrc":"5022:26:22","nodeType":"YulVariableDeclaration","src":"5022:26:22","value":{"arguments":[{"name":"_3","nativeSrc":"5045:2:22","nodeType":"YulIdentifier","src":"5045:2:22"}],"functionName":{"name":"calldataload","nativeSrc":"5032:12:22","nodeType":"YulIdentifier","src":"5032:12:22"},"nativeSrc":"5032:16:22","nodeType":"YulFunctionCall","src":"5032:16:22"},"variables":[{"name":"_4","nativeSrc":"5026:2:22","nodeType":"YulTypedName","src":"5026:2:22","type":""}]},{"body":{"nativeSrc":"5071:22:22","nodeType":"YulBlock","src":"5071:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"5073:16:22","nodeType":"YulIdentifier","src":"5073:16:22"},"nativeSrc":"5073:18:22","nodeType":"YulFunctionCall","src":"5073:18:22"},"nativeSrc":"5073:18:22","nodeType":"YulExpressionStatement","src":"5073:18:22"}]},"condition":{"arguments":[{"name":"_4","nativeSrc":"5063:2:22","nodeType":"YulIdentifier","src":"5063:2:22"},{"name":"_2","nativeSrc":"5067:2:22","nodeType":"YulIdentifier","src":"5067:2:22"}],"functionName":{"name":"gt","nativeSrc":"5060:2:22","nodeType":"YulIdentifier","src":"5060:2:22"},"nativeSrc":"5060:10:22","nodeType":"YulFunctionCall","src":"5060:10:22"},"nativeSrc":"5057:36:22","nodeType":"YulIf","src":"5057:36:22"},{"nativeSrc":"5102:66:22","nodeType":"YulVariableDeclaration","src":"5102:66:22","value":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_4","nativeSrc":"5143:2:22","nodeType":"YulIdentifier","src":"5143:2:22"},{"kind":"number","nativeSrc":"5147:4:22","nodeType":"YulLiteral","src":"5147:4:22","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"5139:3:22","nodeType":"YulIdentifier","src":"5139:3:22"},"nativeSrc":"5139:13:22","nodeType":"YulFunctionCall","src":"5139:13:22"},{"arguments":[{"kind":"number","nativeSrc":"5158:2:22","nodeType":"YulLiteral","src":"5158:2:22","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"5154:3:22","nodeType":"YulIdentifier","src":"5154:3:22"},"nativeSrc":"5154:7:22","nodeType":"YulFunctionCall","src":"5154:7:22"}],"functionName":{"name":"and","nativeSrc":"5135:3:22","nodeType":"YulIdentifier","src":"5135:3:22"},"nativeSrc":"5135:27:22","nodeType":"YulFunctionCall","src":"5135:27:22"},{"name":"_1","nativeSrc":"5164:2:22","nodeType":"YulIdentifier","src":"5164:2:22"}],"functionName":{"name":"add","nativeSrc":"5131:3:22","nodeType":"YulIdentifier","src":"5131:3:22"},"nativeSrc":"5131:36:22","nodeType":"YulFunctionCall","src":"5131:36:22"}],"functionName":{"name":"allocate_memory","nativeSrc":"5115:15:22","nodeType":"YulIdentifier","src":"5115:15:22"},"nativeSrc":"5115:53:22","nodeType":"YulFunctionCall","src":"5115:53:22"},"variables":[{"name":"array","nativeSrc":"5106:5:22","nodeType":"YulTypedName","src":"5106:5:22","type":""}]},{"expression":{"arguments":[{"name":"array","nativeSrc":"5184:5:22","nodeType":"YulIdentifier","src":"5184:5:22"},{"name":"_4","nativeSrc":"5191:2:22","nodeType":"YulIdentifier","src":"5191:2:22"}],"functionName":{"name":"mstore","nativeSrc":"5177:6:22","nodeType":"YulIdentifier","src":"5177:6:22"},"nativeSrc":"5177:17:22","nodeType":"YulFunctionCall","src":"5177:17:22"},"nativeSrc":"5177:17:22","nodeType":"YulExpressionStatement","src":"5177:17:22"},{"body":{"nativeSrc":"5240:16:22","nodeType":"YulBlock","src":"5240:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5249:1:22","nodeType":"YulLiteral","src":"5249:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"5252:1:22","nodeType":"YulLiteral","src":"5252:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"5242:6:22","nodeType":"YulIdentifier","src":"5242:6:22"},"nativeSrc":"5242:12:22","nodeType":"YulFunctionCall","src":"5242:12:22"},"nativeSrc":"5242:12:22","nodeType":"YulExpressionStatement","src":"5242:12:22"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_3","nativeSrc":"5217:2:22","nodeType":"YulIdentifier","src":"5217:2:22"},{"name":"_4","nativeSrc":"5221:2:22","nodeType":"YulIdentifier","src":"5221:2:22"}],"functionName":{"name":"add","nativeSrc":"5213:3:22","nodeType":"YulIdentifier","src":"5213:3:22"},"nativeSrc":"5213:11:22","nodeType":"YulFunctionCall","src":"5213:11:22"},{"name":"_1","nativeSrc":"5226:2:22","nodeType":"YulIdentifier","src":"5226:2:22"}],"functionName":{"name":"add","nativeSrc":"5209:3:22","nodeType":"YulIdentifier","src":"5209:3:22"},"nativeSrc":"5209:20:22","nodeType":"YulFunctionCall","src":"5209:20:22"},{"name":"dataEnd","nativeSrc":"5231:7:22","nodeType":"YulIdentifier","src":"5231:7:22"}],"functionName":{"name":"gt","nativeSrc":"5206:2:22","nodeType":"YulIdentifier","src":"5206:2:22"},"nativeSrc":"5206:33:22","nodeType":"YulFunctionCall","src":"5206:33:22"},"nativeSrc":"5203:53:22","nodeType":"YulIf","src":"5203:53:22"},{"expression":{"arguments":[{"arguments":[{"name":"array","nativeSrc":"5282:5:22","nodeType":"YulIdentifier","src":"5282:5:22"},{"name":"_1","nativeSrc":"5289:2:22","nodeType":"YulIdentifier","src":"5289:2:22"}],"functionName":{"name":"add","nativeSrc":"5278:3:22","nodeType":"YulIdentifier","src":"5278:3:22"},"nativeSrc":"5278:14:22","nodeType":"YulFunctionCall","src":"5278:14:22"},{"arguments":[{"name":"_3","nativeSrc":"5298:2:22","nodeType":"YulIdentifier","src":"5298:2:22"},{"name":"_1","nativeSrc":"5302:2:22","nodeType":"YulIdentifier","src":"5302:2:22"}],"functionName":{"name":"add","nativeSrc":"5294:3:22","nodeType":"YulIdentifier","src":"5294:3:22"},"nativeSrc":"5294:11:22","nodeType":"YulFunctionCall","src":"5294:11:22"},{"name":"_4","nativeSrc":"5307:2:22","nodeType":"YulIdentifier","src":"5307:2:22"}],"functionName":{"name":"calldatacopy","nativeSrc":"5265:12:22","nodeType":"YulIdentifier","src":"5265:12:22"},"nativeSrc":"5265:45:22","nodeType":"YulFunctionCall","src":"5265:45:22"},"nativeSrc":"5265:45:22","nodeType":"YulExpressionStatement","src":"5265:45:22"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"array","nativeSrc":"5334:5:22","nodeType":"YulIdentifier","src":"5334:5:22"},{"name":"_4","nativeSrc":"5341:2:22","nodeType":"YulIdentifier","src":"5341:2:22"}],"functionName":{"name":"add","nativeSrc":"5330:3:22","nodeType":"YulIdentifier","src":"5330:3:22"},"nativeSrc":"5330:14:22","nodeType":"YulFunctionCall","src":"5330:14:22"},{"name":"_1","nativeSrc":"5346:2:22","nodeType":"YulIdentifier","src":"5346:2:22"}],"functionName":{"name":"add","nativeSrc":"5326:3:22","nodeType":"YulIdentifier","src":"5326:3:22"},"nativeSrc":"5326:23:22","nodeType":"YulFunctionCall","src":"5326:23:22"},{"kind":"number","nativeSrc":"5351:1:22","nodeType":"YulLiteral","src":"5351:1:22","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"5319:6:22","nodeType":"YulIdentifier","src":"5319:6:22"},"nativeSrc":"5319:34:22","nodeType":"YulFunctionCall","src":"5319:34:22"},"nativeSrc":"5319:34:22","nodeType":"YulExpressionStatement","src":"5319:34:22"},{"nativeSrc":"5362:15:22","nodeType":"YulAssignment","src":"5362:15:22","value":{"name":"array","nativeSrc":"5372:5:22","nodeType":"YulIdentifier","src":"5372:5:22"},"variableNames":[{"name":"value1","nativeSrc":"5362:6:22","nodeType":"YulIdentifier","src":"5362:6:22"}]}]},"name":"abi_decode_tuple_t_addresst_bytes_memory_ptr","nativeSrc":"4485:898:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4539:9:22","nodeType":"YulTypedName","src":"4539:9:22","type":""},{"name":"dataEnd","nativeSrc":"4550:7:22","nodeType":"YulTypedName","src":"4550:7:22","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"4562:6:22","nodeType":"YulTypedName","src":"4562:6:22","type":""},{"name":"value1","nativeSrc":"4570:6:22","nodeType":"YulTypedName","src":"4570:6:22","type":""}],"src":"4485:898:22"},{"body":{"nativeSrc":"5489:76:22","nodeType":"YulBlock","src":"5489:76:22","statements":[{"nativeSrc":"5499:26:22","nodeType":"YulAssignment","src":"5499:26:22","value":{"arguments":[{"name":"headStart","nativeSrc":"5511:9:22","nodeType":"YulIdentifier","src":"5511:9:22"},{"kind":"number","nativeSrc":"5522:2:22","nodeType":"YulLiteral","src":"5522:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5507:3:22","nodeType":"YulIdentifier","src":"5507:3:22"},"nativeSrc":"5507:18:22","nodeType":"YulFunctionCall","src":"5507:18:22"},"variableNames":[{"name":"tail","nativeSrc":"5499:4:22","nodeType":"YulIdentifier","src":"5499:4:22"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"5541:9:22","nodeType":"YulIdentifier","src":"5541:9:22"},{"name":"value0","nativeSrc":"5552:6:22","nodeType":"YulIdentifier","src":"5552:6:22"}],"functionName":{"name":"mstore","nativeSrc":"5534:6:22","nodeType":"YulIdentifier","src":"5534:6:22"},"nativeSrc":"5534:25:22","nodeType":"YulFunctionCall","src":"5534:25:22"},"nativeSrc":"5534:25:22","nodeType":"YulExpressionStatement","src":"5534:25:22"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nativeSrc":"5388:177:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5458:9:22","nodeType":"YulTypedName","src":"5458:9:22","type":""},{"name":"value0","nativeSrc":"5469:6:22","nodeType":"YulTypedName","src":"5469:6:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"5480:4:22","nodeType":"YulTypedName","src":"5480:4:22","type":""}],"src":"5388:177:22"},{"body":{"nativeSrc":"5697:102:22","nodeType":"YulBlock","src":"5697:102:22","statements":[{"nativeSrc":"5707:26:22","nodeType":"YulAssignment","src":"5707:26:22","value":{"arguments":[{"name":"headStart","nativeSrc":"5719:9:22","nodeType":"YulIdentifier","src":"5719:9:22"},{"kind":"number","nativeSrc":"5730:2:22","nodeType":"YulLiteral","src":"5730:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5715:3:22","nodeType":"YulIdentifier","src":"5715:3:22"},"nativeSrc":"5715:18:22","nodeType":"YulFunctionCall","src":"5715:18:22"},"variableNames":[{"name":"tail","nativeSrc":"5707:4:22","nodeType":"YulIdentifier","src":"5707:4:22"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"5749:9:22","nodeType":"YulIdentifier","src":"5749:9:22"},{"arguments":[{"name":"value0","nativeSrc":"5764:6:22","nodeType":"YulIdentifier","src":"5764:6:22"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"5780:3:22","nodeType":"YulLiteral","src":"5780:3:22","type":"","value":"160"},{"kind":"number","nativeSrc":"5785:1:22","nodeType":"YulLiteral","src":"5785:1:22","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"5776:3:22","nodeType":"YulIdentifier","src":"5776:3:22"},"nativeSrc":"5776:11:22","nodeType":"YulFunctionCall","src":"5776:11:22"},{"kind":"number","nativeSrc":"5789:1:22","nodeType":"YulLiteral","src":"5789:1:22","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"5772:3:22","nodeType":"YulIdentifier","src":"5772:3:22"},"nativeSrc":"5772:19:22","nodeType":"YulFunctionCall","src":"5772:19:22"}],"functionName":{"name":"and","nativeSrc":"5760:3:22","nodeType":"YulIdentifier","src":"5760:3:22"},"nativeSrc":"5760:32:22","nodeType":"YulFunctionCall","src":"5760:32:22"}],"functionName":{"name":"mstore","nativeSrc":"5742:6:22","nodeType":"YulIdentifier","src":"5742:6:22"},"nativeSrc":"5742:51:22","nodeType":"YulFunctionCall","src":"5742:51:22"},"nativeSrc":"5742:51:22","nodeType":"YulExpressionStatement","src":"5742:51:22"}]},"name":"abi_encode_tuple_t_contract$_IBaluniV1Registry_$5472__to_t_address__fromStack_reversed","nativeSrc":"5570:229:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5666:9:22","nodeType":"YulTypedName","src":"5666:9:22","type":""},{"name":"value0","nativeSrc":"5677:6:22","nodeType":"YulTypedName","src":"5677:6:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"5688:4:22","nodeType":"YulTypedName","src":"5688:4:22","type":""}],"src":"5570:229:22"},{"body":{"nativeSrc":"5899:92:22","nodeType":"YulBlock","src":"5899:92:22","statements":[{"nativeSrc":"5909:26:22","nodeType":"YulAssignment","src":"5909:26:22","value":{"arguments":[{"name":"headStart","nativeSrc":"5921:9:22","nodeType":"YulIdentifier","src":"5921:9:22"},{"kind":"number","nativeSrc":"5932:2:22","nodeType":"YulLiteral","src":"5932:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5917:3:22","nodeType":"YulIdentifier","src":"5917:3:22"},"nativeSrc":"5917:18:22","nodeType":"YulFunctionCall","src":"5917:18:22"},"variableNames":[{"name":"tail","nativeSrc":"5909:4:22","nodeType":"YulIdentifier","src":"5909:4:22"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"5951:9:22","nodeType":"YulIdentifier","src":"5951:9:22"},{"arguments":[{"arguments":[{"name":"value0","nativeSrc":"5976:6:22","nodeType":"YulIdentifier","src":"5976:6:22"}],"functionName":{"name":"iszero","nativeSrc":"5969:6:22","nodeType":"YulIdentifier","src":"5969:6:22"},"nativeSrc":"5969:14:22","nodeType":"YulFunctionCall","src":"5969:14:22"}],"functionName":{"name":"iszero","nativeSrc":"5962:6:22","nodeType":"YulIdentifier","src":"5962:6:22"},"nativeSrc":"5962:22:22","nodeType":"YulFunctionCall","src":"5962:22:22"}],"functionName":{"name":"mstore","nativeSrc":"5944:6:22","nodeType":"YulIdentifier","src":"5944:6:22"},"nativeSrc":"5944:41:22","nodeType":"YulFunctionCall","src":"5944:41:22"},"nativeSrc":"5944:41:22","nodeType":"YulExpressionStatement","src":"5944:41:22"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nativeSrc":"5804:187:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5868:9:22","nodeType":"YulTypedName","src":"5868:9:22","type":""},{"name":"value0","nativeSrc":"5879:6:22","nodeType":"YulTypedName","src":"5879:6:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"5890:4:22","nodeType":"YulTypedName","src":"5890:4:22","type":""}],"src":"5804:187:22"},{"body":{"nativeSrc":"6082:341:22","nodeType":"YulBlock","src":"6082:341:22","statements":[{"body":{"nativeSrc":"6128:16:22","nodeType":"YulBlock","src":"6128:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6137:1:22","nodeType":"YulLiteral","src":"6137:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"6140:1:22","nodeType":"YulLiteral","src":"6140:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"6130:6:22","nodeType":"YulIdentifier","src":"6130:6:22"},"nativeSrc":"6130:12:22","nodeType":"YulFunctionCall","src":"6130:12:22"},"nativeSrc":"6130:12:22","nodeType":"YulExpressionStatement","src":"6130:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"6103:7:22","nodeType":"YulIdentifier","src":"6103:7:22"},{"name":"headStart","nativeSrc":"6112:9:22","nodeType":"YulIdentifier","src":"6112:9:22"}],"functionName":{"name":"sub","nativeSrc":"6099:3:22","nodeType":"YulIdentifier","src":"6099:3:22"},"nativeSrc":"6099:23:22","nodeType":"YulFunctionCall","src":"6099:23:22"},{"kind":"number","nativeSrc":"6124:2:22","nodeType":"YulLiteral","src":"6124:2:22","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"6095:3:22","nodeType":"YulIdentifier","src":"6095:3:22"},"nativeSrc":"6095:32:22","nodeType":"YulFunctionCall","src":"6095:32:22"},"nativeSrc":"6092:52:22","nodeType":"YulIf","src":"6092:52:22"},{"nativeSrc":"6153:36:22","nodeType":"YulVariableDeclaration","src":"6153:36:22","value":{"arguments":[{"name":"headStart","nativeSrc":"6179:9:22","nodeType":"YulIdentifier","src":"6179:9:22"}],"functionName":{"name":"calldataload","nativeSrc":"6166:12:22","nodeType":"YulIdentifier","src":"6166:12:22"},"nativeSrc":"6166:23:22","nodeType":"YulFunctionCall","src":"6166:23:22"},"variables":[{"name":"value","nativeSrc":"6157:5:22","nodeType":"YulTypedName","src":"6157:5:22","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"6223:5:22","nodeType":"YulIdentifier","src":"6223:5:22"}],"functionName":{"name":"validator_revert_address","nativeSrc":"6198:24:22","nodeType":"YulIdentifier","src":"6198:24:22"},"nativeSrc":"6198:31:22","nodeType":"YulFunctionCall","src":"6198:31:22"},"nativeSrc":"6198:31:22","nodeType":"YulExpressionStatement","src":"6198:31:22"},{"nativeSrc":"6238:15:22","nodeType":"YulAssignment","src":"6238:15:22","value":{"name":"value","nativeSrc":"6248:5:22","nodeType":"YulIdentifier","src":"6248:5:22"},"variableNames":[{"name":"value0","nativeSrc":"6238:6:22","nodeType":"YulIdentifier","src":"6238:6:22"}]},{"nativeSrc":"6262:47:22","nodeType":"YulVariableDeclaration","src":"6262:47:22","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6294:9:22","nodeType":"YulIdentifier","src":"6294:9:22"},{"kind":"number","nativeSrc":"6305:2:22","nodeType":"YulLiteral","src":"6305:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6290:3:22","nodeType":"YulIdentifier","src":"6290:3:22"},"nativeSrc":"6290:18:22","nodeType":"YulFunctionCall","src":"6290:18:22"}],"functionName":{"name":"calldataload","nativeSrc":"6277:12:22","nodeType":"YulIdentifier","src":"6277:12:22"},"nativeSrc":"6277:32:22","nodeType":"YulFunctionCall","src":"6277:32:22"},"variables":[{"name":"value_1","nativeSrc":"6266:7:22","nodeType":"YulTypedName","src":"6266:7:22","type":""}]},{"body":{"nativeSrc":"6375:16:22","nodeType":"YulBlock","src":"6375:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6384:1:22","nodeType":"YulLiteral","src":"6384:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"6387:1:22","nodeType":"YulLiteral","src":"6387:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"6377:6:22","nodeType":"YulIdentifier","src":"6377:6:22"},"nativeSrc":"6377:12:22","nodeType":"YulFunctionCall","src":"6377:12:22"},"nativeSrc":"6377:12:22","nodeType":"YulExpressionStatement","src":"6377:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"value_1","nativeSrc":"6331:7:22","nodeType":"YulIdentifier","src":"6331:7:22"},{"arguments":[{"name":"value_1","nativeSrc":"6344:7:22","nodeType":"YulIdentifier","src":"6344:7:22"},{"kind":"number","nativeSrc":"6353:18:22","nodeType":"YulLiteral","src":"6353:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"6340:3:22","nodeType":"YulIdentifier","src":"6340:3:22"},"nativeSrc":"6340:32:22","nodeType":"YulFunctionCall","src":"6340:32:22"}],"functionName":{"name":"eq","nativeSrc":"6328:2:22","nodeType":"YulIdentifier","src":"6328:2:22"},"nativeSrc":"6328:45:22","nodeType":"YulFunctionCall","src":"6328:45:22"}],"functionName":{"name":"iszero","nativeSrc":"6321:6:22","nodeType":"YulIdentifier","src":"6321:6:22"},"nativeSrc":"6321:53:22","nodeType":"YulFunctionCall","src":"6321:53:22"},"nativeSrc":"6318:73:22","nodeType":"YulIf","src":"6318:73:22"},{"nativeSrc":"6400:17:22","nodeType":"YulAssignment","src":"6400:17:22","value":{"name":"value_1","nativeSrc":"6410:7:22","nodeType":"YulIdentifier","src":"6410:7:22"},"variableNames":[{"name":"value1","nativeSrc":"6400:6:22","nodeType":"YulIdentifier","src":"6400:6:22"}]}]},"name":"abi_decode_tuple_t_addresst_uint64","nativeSrc":"5996:427:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6040:9:22","nodeType":"YulTypedName","src":"6040:9:22","type":""},{"name":"dataEnd","nativeSrc":"6051:7:22","nodeType":"YulTypedName","src":"6051:7:22","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"6063:6:22","nodeType":"YulTypedName","src":"6063:6:22","type":""},{"name":"value1","nativeSrc":"6071:6:22","nodeType":"YulTypedName","src":"6071:6:22","type":""}],"src":"5996:427:22"},{"body":{"nativeSrc":"6549:297:22","nodeType":"YulBlock","src":"6549:297:22","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"6566:9:22","nodeType":"YulIdentifier","src":"6566:9:22"},{"kind":"number","nativeSrc":"6577:2:22","nodeType":"YulLiteral","src":"6577:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"6559:6:22","nodeType":"YulIdentifier","src":"6559:6:22"},"nativeSrc":"6559:21:22","nodeType":"YulFunctionCall","src":"6559:21:22"},"nativeSrc":"6559:21:22","nodeType":"YulExpressionStatement","src":"6559:21:22"},{"nativeSrc":"6589:27:22","nodeType":"YulVariableDeclaration","src":"6589:27:22","value":{"arguments":[{"name":"value0","nativeSrc":"6609:6:22","nodeType":"YulIdentifier","src":"6609:6:22"}],"functionName":{"name":"mload","nativeSrc":"6603:5:22","nodeType":"YulIdentifier","src":"6603:5:22"},"nativeSrc":"6603:13:22","nodeType":"YulFunctionCall","src":"6603:13:22"},"variables":[{"name":"length","nativeSrc":"6593:6:22","nodeType":"YulTypedName","src":"6593:6:22","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6636:9:22","nodeType":"YulIdentifier","src":"6636:9:22"},{"kind":"number","nativeSrc":"6647:2:22","nodeType":"YulLiteral","src":"6647:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6632:3:22","nodeType":"YulIdentifier","src":"6632:3:22"},"nativeSrc":"6632:18:22","nodeType":"YulFunctionCall","src":"6632:18:22"},{"name":"length","nativeSrc":"6652:6:22","nodeType":"YulIdentifier","src":"6652:6:22"}],"functionName":{"name":"mstore","nativeSrc":"6625:6:22","nodeType":"YulIdentifier","src":"6625:6:22"},"nativeSrc":"6625:34:22","nodeType":"YulFunctionCall","src":"6625:34:22"},"nativeSrc":"6625:34:22","nodeType":"YulExpressionStatement","src":"6625:34:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6678:9:22","nodeType":"YulIdentifier","src":"6678:9:22"},{"kind":"number","nativeSrc":"6689:2:22","nodeType":"YulLiteral","src":"6689:2:22","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"6674:3:22","nodeType":"YulIdentifier","src":"6674:3:22"},"nativeSrc":"6674:18:22","nodeType":"YulFunctionCall","src":"6674:18:22"},{"arguments":[{"name":"value0","nativeSrc":"6698:6:22","nodeType":"YulIdentifier","src":"6698:6:22"},{"kind":"number","nativeSrc":"6706:2:22","nodeType":"YulLiteral","src":"6706:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6694:3:22","nodeType":"YulIdentifier","src":"6694:3:22"},"nativeSrc":"6694:15:22","nodeType":"YulFunctionCall","src":"6694:15:22"},{"name":"length","nativeSrc":"6711:6:22","nodeType":"YulIdentifier","src":"6711:6:22"}],"functionName":{"name":"mcopy","nativeSrc":"6668:5:22","nodeType":"YulIdentifier","src":"6668:5:22"},"nativeSrc":"6668:50:22","nodeType":"YulFunctionCall","src":"6668:50:22"},"nativeSrc":"6668:50:22","nodeType":"YulExpressionStatement","src":"6668:50:22"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6742:9:22","nodeType":"YulIdentifier","src":"6742:9:22"},{"name":"length","nativeSrc":"6753:6:22","nodeType":"YulIdentifier","src":"6753:6:22"}],"functionName":{"name":"add","nativeSrc":"6738:3:22","nodeType":"YulIdentifier","src":"6738:3:22"},"nativeSrc":"6738:22:22","nodeType":"YulFunctionCall","src":"6738:22:22"},{"kind":"number","nativeSrc":"6762:2:22","nodeType":"YulLiteral","src":"6762:2:22","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"6734:3:22","nodeType":"YulIdentifier","src":"6734:3:22"},"nativeSrc":"6734:31:22","nodeType":"YulFunctionCall","src":"6734:31:22"},{"kind":"number","nativeSrc":"6767:1:22","nodeType":"YulLiteral","src":"6767:1:22","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"6727:6:22","nodeType":"YulIdentifier","src":"6727:6:22"},"nativeSrc":"6727:42:22","nodeType":"YulFunctionCall","src":"6727:42:22"},"nativeSrc":"6727:42:22","nodeType":"YulExpressionStatement","src":"6727:42:22"},{"nativeSrc":"6778:62:22","nodeType":"YulAssignment","src":"6778:62:22","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6794:9:22","nodeType":"YulIdentifier","src":"6794:9:22"},{"arguments":[{"arguments":[{"name":"length","nativeSrc":"6813:6:22","nodeType":"YulIdentifier","src":"6813:6:22"},{"kind":"number","nativeSrc":"6821:2:22","nodeType":"YulLiteral","src":"6821:2:22","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"6809:3:22","nodeType":"YulIdentifier","src":"6809:3:22"},"nativeSrc":"6809:15:22","nodeType":"YulFunctionCall","src":"6809:15:22"},{"arguments":[{"kind":"number","nativeSrc":"6830:2:22","nodeType":"YulLiteral","src":"6830:2:22","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"6826:3:22","nodeType":"YulIdentifier","src":"6826:3:22"},"nativeSrc":"6826:7:22","nodeType":"YulFunctionCall","src":"6826:7:22"}],"functionName":{"name":"and","nativeSrc":"6805:3:22","nodeType":"YulIdentifier","src":"6805:3:22"},"nativeSrc":"6805:29:22","nodeType":"YulFunctionCall","src":"6805:29:22"}],"functionName":{"name":"add","nativeSrc":"6790:3:22","nodeType":"YulIdentifier","src":"6790:3:22"},"nativeSrc":"6790:45:22","nodeType":"YulFunctionCall","src":"6790:45:22"},{"kind":"number","nativeSrc":"6837:2:22","nodeType":"YulLiteral","src":"6837:2:22","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"6786:3:22","nodeType":"YulIdentifier","src":"6786:3:22"},"nativeSrc":"6786:54:22","nodeType":"YulFunctionCall","src":"6786:54:22"},"variableNames":[{"name":"tail","nativeSrc":"6778:4:22","nodeType":"YulIdentifier","src":"6778:4:22"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"6428:418:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6518:9:22","nodeType":"YulTypedName","src":"6518:9:22","type":""},{"name":"value0","nativeSrc":"6529:6:22","nodeType":"YulTypedName","src":"6529:6:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"6540:4:22","nodeType":"YulTypedName","src":"6540:4:22","type":""}],"src":"6428:418:22"},{"body":{"nativeSrc":"6952:76:22","nodeType":"YulBlock","src":"6952:76:22","statements":[{"nativeSrc":"6962:26:22","nodeType":"YulAssignment","src":"6962:26:22","value":{"arguments":[{"name":"headStart","nativeSrc":"6974:9:22","nodeType":"YulIdentifier","src":"6974:9:22"},{"kind":"number","nativeSrc":"6985:2:22","nodeType":"YulLiteral","src":"6985:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6970:3:22","nodeType":"YulIdentifier","src":"6970:3:22"},"nativeSrc":"6970:18:22","nodeType":"YulFunctionCall","src":"6970:18:22"},"variableNames":[{"name":"tail","nativeSrc":"6962:4:22","nodeType":"YulIdentifier","src":"6962:4:22"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"7004:9:22","nodeType":"YulIdentifier","src":"7004:9:22"},{"name":"value0","nativeSrc":"7015:6:22","nodeType":"YulIdentifier","src":"7015:6:22"}],"functionName":{"name":"mstore","nativeSrc":"6997:6:22","nodeType":"YulIdentifier","src":"6997:6:22"},"nativeSrc":"6997:25:22","nodeType":"YulFunctionCall","src":"6997:25:22"},"nativeSrc":"6997:25:22","nodeType":"YulExpressionStatement","src":"6997:25:22"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"6851:177:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6921:9:22","nodeType":"YulTypedName","src":"6921:9:22","type":""},{"name":"value0","nativeSrc":"6932:6:22","nodeType":"YulTypedName","src":"6932:6:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"6943:4:22","nodeType":"YulTypedName","src":"6943:4:22","type":""}],"src":"6851:177:22"},{"body":{"nativeSrc":"7207:182:22","nodeType":"YulBlock","src":"7207:182:22","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"7224:9:22","nodeType":"YulIdentifier","src":"7224:9:22"},{"kind":"number","nativeSrc":"7235:2:22","nodeType":"YulLiteral","src":"7235:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"7217:6:22","nodeType":"YulIdentifier","src":"7217:6:22"},"nativeSrc":"7217:21:22","nodeType":"YulFunctionCall","src":"7217:21:22"},"nativeSrc":"7217:21:22","nodeType":"YulExpressionStatement","src":"7217:21:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7258:9:22","nodeType":"YulIdentifier","src":"7258:9:22"},{"kind":"number","nativeSrc":"7269:2:22","nodeType":"YulLiteral","src":"7269:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7254:3:22","nodeType":"YulIdentifier","src":"7254:3:22"},"nativeSrc":"7254:18:22","nodeType":"YulFunctionCall","src":"7254:18:22"},{"kind":"number","nativeSrc":"7274:2:22","nodeType":"YulLiteral","src":"7274:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"7247:6:22","nodeType":"YulIdentifier","src":"7247:6:22"},"nativeSrc":"7247:30:22","nodeType":"YulFunctionCall","src":"7247:30:22"},"nativeSrc":"7247:30:22","nodeType":"YulExpressionStatement","src":"7247:30:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7297:9:22","nodeType":"YulIdentifier","src":"7297:9:22"},{"kind":"number","nativeSrc":"7308:2:22","nodeType":"YulLiteral","src":"7308:2:22","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"7293:3:22","nodeType":"YulIdentifier","src":"7293:3:22"},"nativeSrc":"7293:18:22","nodeType":"YulFunctionCall","src":"7293:18:22"},{"hexValue":"4174206c656173742074776f2061737365747320617265207265717569726564","kind":"string","nativeSrc":"7313:34:22","nodeType":"YulLiteral","src":"7313:34:22","type":"","value":"At least two assets are required"}],"functionName":{"name":"mstore","nativeSrc":"7286:6:22","nodeType":"YulIdentifier","src":"7286:6:22"},"nativeSrc":"7286:62:22","nodeType":"YulFunctionCall","src":"7286:62:22"},"nativeSrc":"7286:62:22","nodeType":"YulExpressionStatement","src":"7286:62:22"},{"nativeSrc":"7357:26:22","nodeType":"YulAssignment","src":"7357:26:22","value":{"arguments":[{"name":"headStart","nativeSrc":"7369:9:22","nodeType":"YulIdentifier","src":"7369:9:22"},{"kind":"number","nativeSrc":"7380:2:22","nodeType":"YulLiteral","src":"7380:2:22","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"7365:3:22","nodeType":"YulIdentifier","src":"7365:3:22"},"nativeSrc":"7365:18:22","nodeType":"YulFunctionCall","src":"7365:18:22"},"variableNames":[{"name":"tail","nativeSrc":"7357:4:22","nodeType":"YulIdentifier","src":"7357:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_39cbcbdd9e6251e82f28a321c8ea534706a2cf624e365b64351e1f84ffc7ff8d__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"7033:356:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7184:9:22","nodeType":"YulTypedName","src":"7184:9:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"7198:4:22","nodeType":"YulTypedName","src":"7198:4:22","type":""}],"src":"7033:356:22"},{"body":{"nativeSrc":"7568:224:22","nodeType":"YulBlock","src":"7568:224:22","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"7585:9:22","nodeType":"YulIdentifier","src":"7585:9:22"},{"kind":"number","nativeSrc":"7596:2:22","nodeType":"YulLiteral","src":"7596:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"7578:6:22","nodeType":"YulIdentifier","src":"7578:6:22"},"nativeSrc":"7578:21:22","nodeType":"YulFunctionCall","src":"7578:21:22"},"nativeSrc":"7578:21:22","nodeType":"YulExpressionStatement","src":"7578:21:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7619:9:22","nodeType":"YulIdentifier","src":"7619:9:22"},{"kind":"number","nativeSrc":"7630:2:22","nodeType":"YulLiteral","src":"7630:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7615:3:22","nodeType":"YulIdentifier","src":"7615:3:22"},"nativeSrc":"7615:18:22","nodeType":"YulFunctionCall","src":"7615:18:22"},{"kind":"number","nativeSrc":"7635:2:22","nodeType":"YulLiteral","src":"7635:2:22","type":"","value":"34"}],"functionName":{"name":"mstore","nativeSrc":"7608:6:22","nodeType":"YulIdentifier","src":"7608:6:22"},"nativeSrc":"7608:30:22","nodeType":"YulFunctionCall","src":"7608:30:22"},"nativeSrc":"7608:30:22","nodeType":"YulExpressionStatement","src":"7608:30:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7658:9:22","nodeType":"YulIdentifier","src":"7658:9:22"},{"kind":"number","nativeSrc":"7669:2:22","nodeType":"YulLiteral","src":"7669:2:22","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"7654:3:22","nodeType":"YulIdentifier","src":"7654:3:22"},"nativeSrc":"7654:18:22","nodeType":"YulFunctionCall","src":"7654:18:22"},{"hexValue":"41737365747320616e642077656967687473206c656e677468206d69736d6174","kind":"string","nativeSrc":"7674:34:22","nodeType":"YulLiteral","src":"7674:34:22","type":"","value":"Assets and weights length mismat"}],"functionName":{"name":"mstore","nativeSrc":"7647:6:22","nodeType":"YulIdentifier","src":"7647:6:22"},"nativeSrc":"7647:62:22","nodeType":"YulFunctionCall","src":"7647:62:22"},"nativeSrc":"7647:62:22","nodeType":"YulExpressionStatement","src":"7647:62:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7729:9:22","nodeType":"YulIdentifier","src":"7729:9:22"},{"kind":"number","nativeSrc":"7740:2:22","nodeType":"YulLiteral","src":"7740:2:22","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"7725:3:22","nodeType":"YulIdentifier","src":"7725:3:22"},"nativeSrc":"7725:18:22","nodeType":"YulFunctionCall","src":"7725:18:22"},{"hexValue":"6368","kind":"string","nativeSrc":"7745:4:22","nodeType":"YulLiteral","src":"7745:4:22","type":"","value":"ch"}],"functionName":{"name":"mstore","nativeSrc":"7718:6:22","nodeType":"YulIdentifier","src":"7718:6:22"},"nativeSrc":"7718:32:22","nodeType":"YulFunctionCall","src":"7718:32:22"},"nativeSrc":"7718:32:22","nodeType":"YulExpressionStatement","src":"7718:32:22"},{"nativeSrc":"7759:27:22","nodeType":"YulAssignment","src":"7759:27:22","value":{"arguments":[{"name":"headStart","nativeSrc":"7771:9:22","nodeType":"YulIdentifier","src":"7771:9:22"},{"kind":"number","nativeSrc":"7782:3:22","nodeType":"YulLiteral","src":"7782:3:22","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"7767:3:22","nodeType":"YulIdentifier","src":"7767:3:22"},"nativeSrc":"7767:19:22","nodeType":"YulFunctionCall","src":"7767:19:22"},"variableNames":[{"name":"tail","nativeSrc":"7759:4:22","nodeType":"YulIdentifier","src":"7759:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_ebb567ad160cf2ebbf5e53ab40a3ffae6f6492169d006ee3f8bad6794e36f372__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"7394:398:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7545:9:22","nodeType":"YulTypedName","src":"7545:9:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"7559:4:22","nodeType":"YulTypedName","src":"7559:4:22","type":""}],"src":"7394:398:22"},{"body":{"nativeSrc":"7829:95:22","nodeType":"YulBlock","src":"7829:95:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"7846:1:22","nodeType":"YulLiteral","src":"7846:1:22","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"7853:3:22","nodeType":"YulLiteral","src":"7853:3:22","type":"","value":"224"},{"kind":"number","nativeSrc":"7858:10:22","nodeType":"YulLiteral","src":"7858:10:22","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"7849:3:22","nodeType":"YulIdentifier","src":"7849:3:22"},"nativeSrc":"7849:20:22","nodeType":"YulFunctionCall","src":"7849:20:22"}],"functionName":{"name":"mstore","nativeSrc":"7839:6:22","nodeType":"YulIdentifier","src":"7839:6:22"},"nativeSrc":"7839:31:22","nodeType":"YulFunctionCall","src":"7839:31:22"},"nativeSrc":"7839:31:22","nodeType":"YulExpressionStatement","src":"7839:31:22"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"7886:1:22","nodeType":"YulLiteral","src":"7886:1:22","type":"","value":"4"},{"kind":"number","nativeSrc":"7889:4:22","nodeType":"YulLiteral","src":"7889:4:22","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"7879:6:22","nodeType":"YulIdentifier","src":"7879:6:22"},"nativeSrc":"7879:15:22","nodeType":"YulFunctionCall","src":"7879:15:22"},"nativeSrc":"7879:15:22","nodeType":"YulExpressionStatement","src":"7879:15:22"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"7910:1:22","nodeType":"YulLiteral","src":"7910:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"7913:4:22","nodeType":"YulLiteral","src":"7913:4:22","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"7903:6:22","nodeType":"YulIdentifier","src":"7903:6:22"},"nativeSrc":"7903:15:22","nodeType":"YulFunctionCall","src":"7903:15:22"},"nativeSrc":"7903:15:22","nodeType":"YulExpressionStatement","src":"7903:15:22"}]},"name":"panic_error_0x11","nativeSrc":"7797:127:22","nodeType":"YulFunctionDefinition","src":"7797:127:22"},{"body":{"nativeSrc":"7977:77:22","nodeType":"YulBlock","src":"7977:77:22","statements":[{"nativeSrc":"7987:16:22","nodeType":"YulAssignment","src":"7987:16:22","value":{"arguments":[{"name":"x","nativeSrc":"7998:1:22","nodeType":"YulIdentifier","src":"7998:1:22"},{"name":"y","nativeSrc":"8001:1:22","nodeType":"YulIdentifier","src":"8001:1:22"}],"functionName":{"name":"add","nativeSrc":"7994:3:22","nodeType":"YulIdentifier","src":"7994:3:22"},"nativeSrc":"7994:9:22","nodeType":"YulFunctionCall","src":"7994:9:22"},"variableNames":[{"name":"sum","nativeSrc":"7987:3:22","nodeType":"YulIdentifier","src":"7987:3:22"}]},{"body":{"nativeSrc":"8026:22:22","nodeType":"YulBlock","src":"8026:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"8028:16:22","nodeType":"YulIdentifier","src":"8028:16:22"},"nativeSrc":"8028:18:22","nodeType":"YulFunctionCall","src":"8028:18:22"},"nativeSrc":"8028:18:22","nodeType":"YulExpressionStatement","src":"8028:18:22"}]},"condition":{"arguments":[{"name":"x","nativeSrc":"8018:1:22","nodeType":"YulIdentifier","src":"8018:1:22"},{"name":"sum","nativeSrc":"8021:3:22","nodeType":"YulIdentifier","src":"8021:3:22"}],"functionName":{"name":"gt","nativeSrc":"8015:2:22","nodeType":"YulIdentifier","src":"8015:2:22"},"nativeSrc":"8015:10:22","nodeType":"YulFunctionCall","src":"8015:10:22"},"nativeSrc":"8012:36:22","nodeType":"YulIf","src":"8012:36:22"}]},"name":"checked_add_t_uint256","nativeSrc":"7929:125:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"7960:1:22","nodeType":"YulTypedName","src":"7960:1:22","type":""},{"name":"y","nativeSrc":"7963:1:22","nodeType":"YulTypedName","src":"7963:1:22","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"7969:3:22","nodeType":"YulTypedName","src":"7969:3:22","type":""}],"src":"7929:125:22"},{"body":{"nativeSrc":"8091:95:22","nodeType":"YulBlock","src":"8091:95:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"8108:1:22","nodeType":"YulLiteral","src":"8108:1:22","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"8115:3:22","nodeType":"YulLiteral","src":"8115:3:22","type":"","value":"224"},{"kind":"number","nativeSrc":"8120:10:22","nodeType":"YulLiteral","src":"8120:10:22","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"8111:3:22","nodeType":"YulIdentifier","src":"8111:3:22"},"nativeSrc":"8111:20:22","nodeType":"YulFunctionCall","src":"8111:20:22"}],"functionName":{"name":"mstore","nativeSrc":"8101:6:22","nodeType":"YulIdentifier","src":"8101:6:22"},"nativeSrc":"8101:31:22","nodeType":"YulFunctionCall","src":"8101:31:22"},"nativeSrc":"8101:31:22","nodeType":"YulExpressionStatement","src":"8101:31:22"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"8148:1:22","nodeType":"YulLiteral","src":"8148:1:22","type":"","value":"4"},{"kind":"number","nativeSrc":"8151:4:22","nodeType":"YulLiteral","src":"8151:4:22","type":"","value":"0x32"}],"functionName":{"name":"mstore","nativeSrc":"8141:6:22","nodeType":"YulIdentifier","src":"8141:6:22"},"nativeSrc":"8141:15:22","nodeType":"YulFunctionCall","src":"8141:15:22"},"nativeSrc":"8141:15:22","nodeType":"YulExpressionStatement","src":"8141:15:22"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"8172:1:22","nodeType":"YulLiteral","src":"8172:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"8175:4:22","nodeType":"YulLiteral","src":"8175:4:22","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"8165:6:22","nodeType":"YulIdentifier","src":"8165:6:22"},"nativeSrc":"8165:15:22","nodeType":"YulFunctionCall","src":"8165:15:22"},"nativeSrc":"8165:15:22","nodeType":"YulExpressionStatement","src":"8165:15:22"}]},"name":"panic_error_0x32","nativeSrc":"8059:127:22","nodeType":"YulFunctionDefinition","src":"8059:127:22"},{"body":{"nativeSrc":"8365:223:22","nodeType":"YulBlock","src":"8365:223:22","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"8382:9:22","nodeType":"YulIdentifier","src":"8382:9:22"},{"kind":"number","nativeSrc":"8393:2:22","nodeType":"YulLiteral","src":"8393:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"8375:6:22","nodeType":"YulIdentifier","src":"8375:6:22"},"nativeSrc":"8375:21:22","nodeType":"YulFunctionCall","src":"8375:21:22"},"nativeSrc":"8375:21:22","nodeType":"YulExpressionStatement","src":"8375:21:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8416:9:22","nodeType":"YulIdentifier","src":"8416:9:22"},{"kind":"number","nativeSrc":"8427:2:22","nodeType":"YulLiteral","src":"8427:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"8412:3:22","nodeType":"YulIdentifier","src":"8412:3:22"},"nativeSrc":"8412:18:22","nodeType":"YulFunctionCall","src":"8412:18:22"},{"kind":"number","nativeSrc":"8432:2:22","nodeType":"YulLiteral","src":"8432:2:22","type":"","value":"33"}],"functionName":{"name":"mstore","nativeSrc":"8405:6:22","nodeType":"YulIdentifier","src":"8405:6:22"},"nativeSrc":"8405:30:22","nodeType":"YulFunctionCall","src":"8405:30:22"},"nativeSrc":"8405:30:22","nodeType":"YulExpressionStatement","src":"8405:30:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8455:9:22","nodeType":"YulIdentifier","src":"8455:9:22"},{"kind":"number","nativeSrc":"8466:2:22","nodeType":"YulLiteral","src":"8466:2:22","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"8451:3:22","nodeType":"YulIdentifier","src":"8451:3:22"},"nativeSrc":"8451:18:22","nodeType":"YulFunctionCall","src":"8451:18:22"},{"hexValue":"506f6f6c20616c72656164792065786973747320666f72207468697320706169","kind":"string","nativeSrc":"8471:34:22","nodeType":"YulLiteral","src":"8471:34:22","type":"","value":"Pool already exists for this pai"}],"functionName":{"name":"mstore","nativeSrc":"8444:6:22","nodeType":"YulIdentifier","src":"8444:6:22"},"nativeSrc":"8444:62:22","nodeType":"YulFunctionCall","src":"8444:62:22"},"nativeSrc":"8444:62:22","nodeType":"YulExpressionStatement","src":"8444:62:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8526:9:22","nodeType":"YulIdentifier","src":"8526:9:22"},{"kind":"number","nativeSrc":"8537:2:22","nodeType":"YulLiteral","src":"8537:2:22","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"8522:3:22","nodeType":"YulIdentifier","src":"8522:3:22"},"nativeSrc":"8522:18:22","nodeType":"YulFunctionCall","src":"8522:18:22"},{"hexValue":"72","kind":"string","nativeSrc":"8542:3:22","nodeType":"YulLiteral","src":"8542:3:22","type":"","value":"r"}],"functionName":{"name":"mstore","nativeSrc":"8515:6:22","nodeType":"YulIdentifier","src":"8515:6:22"},"nativeSrc":"8515:31:22","nodeType":"YulFunctionCall","src":"8515:31:22"},"nativeSrc":"8515:31:22","nodeType":"YulExpressionStatement","src":"8515:31:22"},{"nativeSrc":"8555:27:22","nodeType":"YulAssignment","src":"8555:27:22","value":{"arguments":[{"name":"headStart","nativeSrc":"8567:9:22","nodeType":"YulIdentifier","src":"8567:9:22"},{"kind":"number","nativeSrc":"8578:3:22","nodeType":"YulLiteral","src":"8578:3:22","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"8563:3:22","nodeType":"YulIdentifier","src":"8563:3:22"},"nativeSrc":"8563:19:22","nodeType":"YulFunctionCall","src":"8563:19:22"},"variableNames":[{"name":"tail","nativeSrc":"8555:4:22","nodeType":"YulIdentifier","src":"8555:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_2258c7547209181d37eb4aebb58e4d2c60f10b97b943ea694f4dec24e242181e__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"8191:397:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8342:9:22","nodeType":"YulTypedName","src":"8342:9:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"8356:4:22","nodeType":"YulTypedName","src":"8356:4:22","type":""}],"src":"8191:397:22"},{"body":{"nativeSrc":"8878:689:22","nodeType":"YulBlock","src":"8878:689:22","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"8895:9:22","nodeType":"YulIdentifier","src":"8895:9:22"},{"kind":"number","nativeSrc":"8906:3:22","nodeType":"YulLiteral","src":"8906:3:22","type":"","value":"128"}],"functionName":{"name":"mstore","nativeSrc":"8888:6:22","nodeType":"YulIdentifier","src":"8888:6:22"},"nativeSrc":"8888:22:22","nodeType":"YulFunctionCall","src":"8888:22:22"},"nativeSrc":"8888:22:22","nodeType":"YulExpressionStatement","src":"8888:22:22"},{"nativeSrc":"8919:71:22","nodeType":"YulVariableDeclaration","src":"8919:71:22","value":{"arguments":[{"name":"value0","nativeSrc":"8962:6:22","nodeType":"YulIdentifier","src":"8962:6:22"},{"arguments":[{"name":"headStart","nativeSrc":"8974:9:22","nodeType":"YulIdentifier","src":"8974:9:22"},{"kind":"number","nativeSrc":"8985:3:22","nodeType":"YulLiteral","src":"8985:3:22","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"8970:3:22","nodeType":"YulIdentifier","src":"8970:3:22"},"nativeSrc":"8970:19:22","nodeType":"YulFunctionCall","src":"8970:19:22"}],"functionName":{"name":"abi_encode_array_address_dyn","nativeSrc":"8933:28:22","nodeType":"YulIdentifier","src":"8933:28:22"},"nativeSrc":"8933:57:22","nodeType":"YulFunctionCall","src":"8933:57:22"},"variables":[{"name":"tail_1","nativeSrc":"8923:6:22","nodeType":"YulTypedName","src":"8923:6:22","type":""}]},{"nativeSrc":"8999:12:22","nodeType":"YulVariableDeclaration","src":"8999:12:22","value":{"kind":"number","nativeSrc":"9009:2:22","nodeType":"YulLiteral","src":"9009:2:22","type":"","value":"32"},"variables":[{"name":"_1","nativeSrc":"9003:2:22","nodeType":"YulTypedName","src":"9003:2:22","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9031:9:22","nodeType":"YulIdentifier","src":"9031:9:22"},{"kind":"number","nativeSrc":"9042:2:22","nodeType":"YulLiteral","src":"9042:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"9027:3:22","nodeType":"YulIdentifier","src":"9027:3:22"},"nativeSrc":"9027:18:22","nodeType":"YulFunctionCall","src":"9027:18:22"},{"arguments":[{"name":"tail_1","nativeSrc":"9051:6:22","nodeType":"YulIdentifier","src":"9051:6:22"},{"name":"headStart","nativeSrc":"9059:9:22","nodeType":"YulIdentifier","src":"9059:9:22"}],"functionName":{"name":"sub","nativeSrc":"9047:3:22","nodeType":"YulIdentifier","src":"9047:3:22"},"nativeSrc":"9047:22:22","nodeType":"YulFunctionCall","src":"9047:22:22"}],"functionName":{"name":"mstore","nativeSrc":"9020:6:22","nodeType":"YulIdentifier","src":"9020:6:22"},"nativeSrc":"9020:50:22","nodeType":"YulFunctionCall","src":"9020:50:22"},"nativeSrc":"9020:50:22","nodeType":"YulExpressionStatement","src":"9020:50:22"},{"nativeSrc":"9079:17:22","nodeType":"YulVariableDeclaration","src":"9079:17:22","value":{"name":"tail_1","nativeSrc":"9090:6:22","nodeType":"YulIdentifier","src":"9090:6:22"},"variables":[{"name":"pos","nativeSrc":"9083:3:22","nodeType":"YulTypedName","src":"9083:3:22","type":""}]},{"nativeSrc":"9105:27:22","nodeType":"YulVariableDeclaration","src":"9105:27:22","value":{"arguments":[{"name":"value1","nativeSrc":"9125:6:22","nodeType":"YulIdentifier","src":"9125:6:22"}],"functionName":{"name":"mload","nativeSrc":"9119:5:22","nodeType":"YulIdentifier","src":"9119:5:22"},"nativeSrc":"9119:13:22","nodeType":"YulFunctionCall","src":"9119:13:22"},"variables":[{"name":"length","nativeSrc":"9109:6:22","nodeType":"YulTypedName","src":"9109:6:22","type":""}]},{"expression":{"arguments":[{"name":"tail_1","nativeSrc":"9148:6:22","nodeType":"YulIdentifier","src":"9148:6:22"},{"name":"length","nativeSrc":"9156:6:22","nodeType":"YulIdentifier","src":"9156:6:22"}],"functionName":{"name":"mstore","nativeSrc":"9141:6:22","nodeType":"YulIdentifier","src":"9141:6:22"},"nativeSrc":"9141:22:22","nodeType":"YulFunctionCall","src":"9141:22:22"},"nativeSrc":"9141:22:22","nodeType":"YulExpressionStatement","src":"9141:22:22"},{"nativeSrc":"9172:22:22","nodeType":"YulAssignment","src":"9172:22:22","value":{"arguments":[{"name":"tail_1","nativeSrc":"9183:6:22","nodeType":"YulIdentifier","src":"9183:6:22"},{"kind":"number","nativeSrc":"9191:2:22","nodeType":"YulLiteral","src":"9191:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"9179:3:22","nodeType":"YulIdentifier","src":"9179:3:22"},"nativeSrc":"9179:15:22","nodeType":"YulFunctionCall","src":"9179:15:22"},"variableNames":[{"name":"pos","nativeSrc":"9172:3:22","nodeType":"YulIdentifier","src":"9172:3:22"}]},{"nativeSrc":"9203:29:22","nodeType":"YulVariableDeclaration","src":"9203:29:22","value":{"arguments":[{"name":"value1","nativeSrc":"9221:6:22","nodeType":"YulIdentifier","src":"9221:6:22"},{"kind":"number","nativeSrc":"9229:2:22","nodeType":"YulLiteral","src":"9229:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"9217:3:22","nodeType":"YulIdentifier","src":"9217:3:22"},"nativeSrc":"9217:15:22","nodeType":"YulFunctionCall","src":"9217:15:22"},"variables":[{"name":"srcPtr","nativeSrc":"9207:6:22","nodeType":"YulTypedName","src":"9207:6:22","type":""}]},{"nativeSrc":"9241:10:22","nodeType":"YulVariableDeclaration","src":"9241:10:22","value":{"kind":"number","nativeSrc":"9250:1:22","nodeType":"YulLiteral","src":"9250:1:22","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"9245:1:22","nodeType":"YulTypedName","src":"9245:1:22","type":""}]},{"body":{"nativeSrc":"9309:120:22","nodeType":"YulBlock","src":"9309:120:22","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"9330:3:22","nodeType":"YulIdentifier","src":"9330:3:22"},{"arguments":[{"name":"srcPtr","nativeSrc":"9341:6:22","nodeType":"YulIdentifier","src":"9341:6:22"}],"functionName":{"name":"mload","nativeSrc":"9335:5:22","nodeType":"YulIdentifier","src":"9335:5:22"},"nativeSrc":"9335:13:22","nodeType":"YulFunctionCall","src":"9335:13:22"}],"functionName":{"name":"mstore","nativeSrc":"9323:6:22","nodeType":"YulIdentifier","src":"9323:6:22"},"nativeSrc":"9323:26:22","nodeType":"YulFunctionCall","src":"9323:26:22"},"nativeSrc":"9323:26:22","nodeType":"YulExpressionStatement","src":"9323:26:22"},{"nativeSrc":"9362:19:22","nodeType":"YulAssignment","src":"9362:19:22","value":{"arguments":[{"name":"pos","nativeSrc":"9373:3:22","nodeType":"YulIdentifier","src":"9373:3:22"},{"name":"_1","nativeSrc":"9378:2:22","nodeType":"YulIdentifier","src":"9378:2:22"}],"functionName":{"name":"add","nativeSrc":"9369:3:22","nodeType":"YulIdentifier","src":"9369:3:22"},"nativeSrc":"9369:12:22","nodeType":"YulFunctionCall","src":"9369:12:22"},"variableNames":[{"name":"pos","nativeSrc":"9362:3:22","nodeType":"YulIdentifier","src":"9362:3:22"}]},{"nativeSrc":"9394:25:22","nodeType":"YulAssignment","src":"9394:25:22","value":{"arguments":[{"name":"srcPtr","nativeSrc":"9408:6:22","nodeType":"YulIdentifier","src":"9408:6:22"},{"name":"_1","nativeSrc":"9416:2:22","nodeType":"YulIdentifier","src":"9416:2:22"}],"functionName":{"name":"add","nativeSrc":"9404:3:22","nodeType":"YulIdentifier","src":"9404:3:22"},"nativeSrc":"9404:15:22","nodeType":"YulFunctionCall","src":"9404:15:22"},"variableNames":[{"name":"srcPtr","nativeSrc":"9394:6:22","nodeType":"YulIdentifier","src":"9394:6:22"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"9271:1:22","nodeType":"YulIdentifier","src":"9271:1:22"},{"name":"length","nativeSrc":"9274:6:22","nodeType":"YulIdentifier","src":"9274:6:22"}],"functionName":{"name":"lt","nativeSrc":"9268:2:22","nodeType":"YulIdentifier","src":"9268:2:22"},"nativeSrc":"9268:13:22","nodeType":"YulFunctionCall","src":"9268:13:22"},"nativeSrc":"9260:169:22","nodeType":"YulForLoop","post":{"nativeSrc":"9282:18:22","nodeType":"YulBlock","src":"9282:18:22","statements":[{"nativeSrc":"9284:14:22","nodeType":"YulAssignment","src":"9284:14:22","value":{"arguments":[{"name":"i","nativeSrc":"9293:1:22","nodeType":"YulIdentifier","src":"9293:1:22"},{"kind":"number","nativeSrc":"9296:1:22","nodeType":"YulLiteral","src":"9296:1:22","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"9289:3:22","nodeType":"YulIdentifier","src":"9289:3:22"},"nativeSrc":"9289:9:22","nodeType":"YulFunctionCall","src":"9289:9:22"},"variableNames":[{"name":"i","nativeSrc":"9284:1:22","nodeType":"YulIdentifier","src":"9284:1:22"}]}]},"pre":{"nativeSrc":"9264:3:22","nodeType":"YulBlock","src":"9264:3:22","statements":[]},"src":"9260:169:22"},{"nativeSrc":"9438:11:22","nodeType":"YulAssignment","src":"9438:11:22","value":{"name":"pos","nativeSrc":"9446:3:22","nodeType":"YulIdentifier","src":"9446:3:22"},"variableNames":[{"name":"tail","nativeSrc":"9438:4:22","nodeType":"YulIdentifier","src":"9438:4:22"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9469:9:22","nodeType":"YulIdentifier","src":"9469:9:22"},{"kind":"number","nativeSrc":"9480:2:22","nodeType":"YulLiteral","src":"9480:2:22","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"9465:3:22","nodeType":"YulIdentifier","src":"9465:3:22"},"nativeSrc":"9465:18:22","nodeType":"YulFunctionCall","src":"9465:18:22"},{"name":"value2","nativeSrc":"9485:6:22","nodeType":"YulIdentifier","src":"9485:6:22"}],"functionName":{"name":"mstore","nativeSrc":"9458:6:22","nodeType":"YulIdentifier","src":"9458:6:22"},"nativeSrc":"9458:34:22","nodeType":"YulFunctionCall","src":"9458:34:22"},"nativeSrc":"9458:34:22","nodeType":"YulExpressionStatement","src":"9458:34:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9512:9:22","nodeType":"YulIdentifier","src":"9512:9:22"},{"kind":"number","nativeSrc":"9523:2:22","nodeType":"YulLiteral","src":"9523:2:22","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"9508:3:22","nodeType":"YulIdentifier","src":"9508:3:22"},"nativeSrc":"9508:18:22","nodeType":"YulFunctionCall","src":"9508:18:22"},{"arguments":[{"name":"value3","nativeSrc":"9532:6:22","nodeType":"YulIdentifier","src":"9532:6:22"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"9548:3:22","nodeType":"YulLiteral","src":"9548:3:22","type":"","value":"160"},{"kind":"number","nativeSrc":"9553:1:22","nodeType":"YulLiteral","src":"9553:1:22","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"9544:3:22","nodeType":"YulIdentifier","src":"9544:3:22"},"nativeSrc":"9544:11:22","nodeType":"YulFunctionCall","src":"9544:11:22"},{"kind":"number","nativeSrc":"9557:1:22","nodeType":"YulLiteral","src":"9557:1:22","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"9540:3:22","nodeType":"YulIdentifier","src":"9540:3:22"},"nativeSrc":"9540:19:22","nodeType":"YulFunctionCall","src":"9540:19:22"}],"functionName":{"name":"and","nativeSrc":"9528:3:22","nodeType":"YulIdentifier","src":"9528:3:22"},"nativeSrc":"9528:32:22","nodeType":"YulFunctionCall","src":"9528:32:22"}],"functionName":{"name":"mstore","nativeSrc":"9501:6:22","nodeType":"YulIdentifier","src":"9501:6:22"},"nativeSrc":"9501:60:22","nodeType":"YulFunctionCall","src":"9501:60:22"},"nativeSrc":"9501:60:22","nodeType":"YulExpressionStatement","src":"9501:60:22"}]},"name":"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_uint256_t_address__to_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_uint256_t_address__fromStack_reversed","nativeSrc":"8593:974:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8823:9:22","nodeType":"YulTypedName","src":"8823:9:22","type":""},{"name":"value3","nativeSrc":"8834:6:22","nodeType":"YulTypedName","src":"8834:6:22","type":""},{"name":"value2","nativeSrc":"8842:6:22","nodeType":"YulTypedName","src":"8842:6:22","type":""},{"name":"value1","nativeSrc":"8850:6:22","nodeType":"YulTypedName","src":"8850:6:22","type":""},{"name":"value0","nativeSrc":"8858:6:22","nodeType":"YulTypedName","src":"8858:6:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"8869:4:22","nodeType":"YulTypedName","src":"8869:4:22","type":""}],"src":"8593:974:22"},{"body":{"nativeSrc":"9678:850:22","nodeType":"YulBlock","src":"9678:850:22","statements":[{"nativeSrc":"9688:12:22","nodeType":"YulVariableDeclaration","src":"9688:12:22","value":{"kind":"number","nativeSrc":"9698:2:22","nodeType":"YulLiteral","src":"9698:2:22","type":"","value":"32"},"variables":[{"name":"_1","nativeSrc":"9692:2:22","nodeType":"YulTypedName","src":"9692:2:22","type":""}]},{"body":{"nativeSrc":"9745:16:22","nodeType":"YulBlock","src":"9745:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"9754:1:22","nodeType":"YulLiteral","src":"9754:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"9757:1:22","nodeType":"YulLiteral","src":"9757:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"9747:6:22","nodeType":"YulIdentifier","src":"9747:6:22"},"nativeSrc":"9747:12:22","nodeType":"YulFunctionCall","src":"9747:12:22"},"nativeSrc":"9747:12:22","nodeType":"YulExpressionStatement","src":"9747:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"9720:7:22","nodeType":"YulIdentifier","src":"9720:7:22"},{"name":"headStart","nativeSrc":"9729:9:22","nodeType":"YulIdentifier","src":"9729:9:22"}],"functionName":{"name":"sub","nativeSrc":"9716:3:22","nodeType":"YulIdentifier","src":"9716:3:22"},"nativeSrc":"9716:23:22","nodeType":"YulFunctionCall","src":"9716:23:22"},{"name":"_1","nativeSrc":"9741:2:22","nodeType":"YulIdentifier","src":"9741:2:22"}],"functionName":{"name":"slt","nativeSrc":"9712:3:22","nodeType":"YulIdentifier","src":"9712:3:22"},"nativeSrc":"9712:32:22","nodeType":"YulFunctionCall","src":"9712:32:22"},"nativeSrc":"9709:52:22","nodeType":"YulIf","src":"9709:52:22"},{"nativeSrc":"9770:30:22","nodeType":"YulVariableDeclaration","src":"9770:30:22","value":{"arguments":[{"name":"headStart","nativeSrc":"9790:9:22","nodeType":"YulIdentifier","src":"9790:9:22"}],"functionName":{"name":"mload","nativeSrc":"9784:5:22","nodeType":"YulIdentifier","src":"9784:5:22"},"nativeSrc":"9784:16:22","nodeType":"YulFunctionCall","src":"9784:16:22"},"variables":[{"name":"offset","nativeSrc":"9774:6:22","nodeType":"YulTypedName","src":"9774:6:22","type":""}]},{"body":{"nativeSrc":"9843:16:22","nodeType":"YulBlock","src":"9843:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"9852:1:22","nodeType":"YulLiteral","src":"9852:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"9855:1:22","nodeType":"YulLiteral","src":"9855:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"9845:6:22","nodeType":"YulIdentifier","src":"9845:6:22"},"nativeSrc":"9845:12:22","nodeType":"YulFunctionCall","src":"9845:12:22"},"nativeSrc":"9845:12:22","nodeType":"YulExpressionStatement","src":"9845:12:22"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"9815:6:22","nodeType":"YulIdentifier","src":"9815:6:22"},{"kind":"number","nativeSrc":"9823:18:22","nodeType":"YulLiteral","src":"9823:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"9812:2:22","nodeType":"YulIdentifier","src":"9812:2:22"},"nativeSrc":"9812:30:22","nodeType":"YulFunctionCall","src":"9812:30:22"},"nativeSrc":"9809:50:22","nodeType":"YulIf","src":"9809:50:22"},{"nativeSrc":"9868:32:22","nodeType":"YulVariableDeclaration","src":"9868:32:22","value":{"arguments":[{"name":"headStart","nativeSrc":"9882:9:22","nodeType":"YulIdentifier","src":"9882:9:22"},{"name":"offset","nativeSrc":"9893:6:22","nodeType":"YulIdentifier","src":"9893:6:22"}],"functionName":{"name":"add","nativeSrc":"9878:3:22","nodeType":"YulIdentifier","src":"9878:3:22"},"nativeSrc":"9878:22:22","nodeType":"YulFunctionCall","src":"9878:22:22"},"variables":[{"name":"_2","nativeSrc":"9872:2:22","nodeType":"YulTypedName","src":"9872:2:22","type":""}]},{"body":{"nativeSrc":"9948:16:22","nodeType":"YulBlock","src":"9948:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"9957:1:22","nodeType":"YulLiteral","src":"9957:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"9960:1:22","nodeType":"YulLiteral","src":"9960:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"9950:6:22","nodeType":"YulIdentifier","src":"9950:6:22"},"nativeSrc":"9950:12:22","nodeType":"YulFunctionCall","src":"9950:12:22"},"nativeSrc":"9950:12:22","nodeType":"YulExpressionStatement","src":"9950:12:22"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nativeSrc":"9927:2:22","nodeType":"YulIdentifier","src":"9927:2:22"},{"kind":"number","nativeSrc":"9931:4:22","nodeType":"YulLiteral","src":"9931:4:22","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"9923:3:22","nodeType":"YulIdentifier","src":"9923:3:22"},"nativeSrc":"9923:13:22","nodeType":"YulFunctionCall","src":"9923:13:22"},{"name":"dataEnd","nativeSrc":"9938:7:22","nodeType":"YulIdentifier","src":"9938:7:22"}],"functionName":{"name":"slt","nativeSrc":"9919:3:22","nodeType":"YulIdentifier","src":"9919:3:22"},"nativeSrc":"9919:27:22","nodeType":"YulFunctionCall","src":"9919:27:22"}],"functionName":{"name":"iszero","nativeSrc":"9912:6:22","nodeType":"YulIdentifier","src":"9912:6:22"},"nativeSrc":"9912:35:22","nodeType":"YulFunctionCall","src":"9912:35:22"},"nativeSrc":"9909:55:22","nodeType":"YulIf","src":"9909:55:22"},{"nativeSrc":"9973:19:22","nodeType":"YulVariableDeclaration","src":"9973:19:22","value":{"arguments":[{"name":"_2","nativeSrc":"9989:2:22","nodeType":"YulIdentifier","src":"9989:2:22"}],"functionName":{"name":"mload","nativeSrc":"9983:5:22","nodeType":"YulIdentifier","src":"9983:5:22"},"nativeSrc":"9983:9:22","nodeType":"YulFunctionCall","src":"9983:9:22"},"variables":[{"name":"_3","nativeSrc":"9977:2:22","nodeType":"YulTypedName","src":"9977:2:22","type":""}]},{"nativeSrc":"10001:71:22","nodeType":"YulVariableDeclaration","src":"10001:71:22","value":{"arguments":[{"arguments":[{"name":"_3","nativeSrc":"10068:2:22","nodeType":"YulIdentifier","src":"10068:2:22"}],"functionName":{"name":"array_allocation_size_array_address_dyn","nativeSrc":"10028:39:22","nodeType":"YulIdentifier","src":"10028:39:22"},"nativeSrc":"10028:43:22","nodeType":"YulFunctionCall","src":"10028:43:22"}],"functionName":{"name":"allocate_memory","nativeSrc":"10012:15:22","nodeType":"YulIdentifier","src":"10012:15:22"},"nativeSrc":"10012:60:22","nodeType":"YulFunctionCall","src":"10012:60:22"},"variables":[{"name":"dst","nativeSrc":"10005:3:22","nodeType":"YulTypedName","src":"10005:3:22","type":""}]},{"nativeSrc":"10081:16:22","nodeType":"YulVariableDeclaration","src":"10081:16:22","value":{"name":"dst","nativeSrc":"10094:3:22","nodeType":"YulIdentifier","src":"10094:3:22"},"variables":[{"name":"dst_1","nativeSrc":"10085:5:22","nodeType":"YulTypedName","src":"10085:5:22","type":""}]},{"expression":{"arguments":[{"name":"dst","nativeSrc":"10113:3:22","nodeType":"YulIdentifier","src":"10113:3:22"},{"name":"_3","nativeSrc":"10118:2:22","nodeType":"YulIdentifier","src":"10118:2:22"}],"functionName":{"name":"mstore","nativeSrc":"10106:6:22","nodeType":"YulIdentifier","src":"10106:6:22"},"nativeSrc":"10106:15:22","nodeType":"YulFunctionCall","src":"10106:15:22"},"nativeSrc":"10106:15:22","nodeType":"YulExpressionStatement","src":"10106:15:22"},{"nativeSrc":"10130:19:22","nodeType":"YulAssignment","src":"10130:19:22","value":{"arguments":[{"name":"dst","nativeSrc":"10141:3:22","nodeType":"YulIdentifier","src":"10141:3:22"},{"name":"_1","nativeSrc":"10146:2:22","nodeType":"YulIdentifier","src":"10146:2:22"}],"functionName":{"name":"add","nativeSrc":"10137:3:22","nodeType":"YulIdentifier","src":"10137:3:22"},"nativeSrc":"10137:12:22","nodeType":"YulFunctionCall","src":"10137:12:22"},"variableNames":[{"name":"dst","nativeSrc":"10130:3:22","nodeType":"YulIdentifier","src":"10130:3:22"}]},{"nativeSrc":"10158:42:22","nodeType":"YulVariableDeclaration","src":"10158:42:22","value":{"arguments":[{"arguments":[{"name":"_2","nativeSrc":"10180:2:22","nodeType":"YulIdentifier","src":"10180:2:22"},{"arguments":[{"kind":"number","nativeSrc":"10188:1:22","nodeType":"YulLiteral","src":"10188:1:22","type":"","value":"5"},{"name":"_3","nativeSrc":"10191:2:22","nodeType":"YulIdentifier","src":"10191:2:22"}],"functionName":{"name":"shl","nativeSrc":"10184:3:22","nodeType":"YulIdentifier","src":"10184:3:22"},"nativeSrc":"10184:10:22","nodeType":"YulFunctionCall","src":"10184:10:22"}],"functionName":{"name":"add","nativeSrc":"10176:3:22","nodeType":"YulIdentifier","src":"10176:3:22"},"nativeSrc":"10176:19:22","nodeType":"YulFunctionCall","src":"10176:19:22"},{"name":"_1","nativeSrc":"10197:2:22","nodeType":"YulIdentifier","src":"10197:2:22"}],"functionName":{"name":"add","nativeSrc":"10172:3:22","nodeType":"YulIdentifier","src":"10172:3:22"},"nativeSrc":"10172:28:22","nodeType":"YulFunctionCall","src":"10172:28:22"},"variables":[{"name":"srcEnd","nativeSrc":"10162:6:22","nodeType":"YulTypedName","src":"10162:6:22","type":""}]},{"body":{"nativeSrc":"10232:16:22","nodeType":"YulBlock","src":"10232:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"10241:1:22","nodeType":"YulLiteral","src":"10241:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"10244:1:22","nodeType":"YulLiteral","src":"10244:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"10234:6:22","nodeType":"YulIdentifier","src":"10234:6:22"},"nativeSrc":"10234:12:22","nodeType":"YulFunctionCall","src":"10234:12:22"},"nativeSrc":"10234:12:22","nodeType":"YulExpressionStatement","src":"10234:12:22"}]},"condition":{"arguments":[{"name":"srcEnd","nativeSrc":"10215:6:22","nodeType":"YulIdentifier","src":"10215:6:22"},{"name":"dataEnd","nativeSrc":"10223:7:22","nodeType":"YulIdentifier","src":"10223:7:22"}],"functionName":{"name":"gt","nativeSrc":"10212:2:22","nodeType":"YulIdentifier","src":"10212:2:22"},"nativeSrc":"10212:19:22","nodeType":"YulFunctionCall","src":"10212:19:22"},"nativeSrc":"10209:39:22","nodeType":"YulIf","src":"10209:39:22"},{"nativeSrc":"10257:22:22","nodeType":"YulVariableDeclaration","src":"10257:22:22","value":{"arguments":[{"name":"_2","nativeSrc":"10272:2:22","nodeType":"YulIdentifier","src":"10272:2:22"},{"name":"_1","nativeSrc":"10276:2:22","nodeType":"YulIdentifier","src":"10276:2:22"}],"functionName":{"name":"add","nativeSrc":"10268:3:22","nodeType":"YulIdentifier","src":"10268:3:22"},"nativeSrc":"10268:11:22","nodeType":"YulFunctionCall","src":"10268:11:22"},"variables":[{"name":"src","nativeSrc":"10261:3:22","nodeType":"YulTypedName","src":"10261:3:22","type":""}]},{"body":{"nativeSrc":"10344:154:22","nodeType":"YulBlock","src":"10344:154:22","statements":[{"nativeSrc":"10358:23:22","nodeType":"YulVariableDeclaration","src":"10358:23:22","value":{"arguments":[{"name":"src","nativeSrc":"10377:3:22","nodeType":"YulIdentifier","src":"10377:3:22"}],"functionName":{"name":"mload","nativeSrc":"10371:5:22","nodeType":"YulIdentifier","src":"10371:5:22"},"nativeSrc":"10371:10:22","nodeType":"YulFunctionCall","src":"10371:10:22"},"variables":[{"name":"value","nativeSrc":"10362:5:22","nodeType":"YulTypedName","src":"10362:5:22","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"10419:5:22","nodeType":"YulIdentifier","src":"10419:5:22"}],"functionName":{"name":"validator_revert_address","nativeSrc":"10394:24:22","nodeType":"YulIdentifier","src":"10394:24:22"},"nativeSrc":"10394:31:22","nodeType":"YulFunctionCall","src":"10394:31:22"},"nativeSrc":"10394:31:22","nodeType":"YulExpressionStatement","src":"10394:31:22"},{"expression":{"arguments":[{"name":"dst","nativeSrc":"10445:3:22","nodeType":"YulIdentifier","src":"10445:3:22"},{"name":"value","nativeSrc":"10450:5:22","nodeType":"YulIdentifier","src":"10450:5:22"}],"functionName":{"name":"mstore","nativeSrc":"10438:6:22","nodeType":"YulIdentifier","src":"10438:6:22"},"nativeSrc":"10438:18:22","nodeType":"YulFunctionCall","src":"10438:18:22"},"nativeSrc":"10438:18:22","nodeType":"YulExpressionStatement","src":"10438:18:22"},{"nativeSrc":"10469:19:22","nodeType":"YulAssignment","src":"10469:19:22","value":{"arguments":[{"name":"dst","nativeSrc":"10480:3:22","nodeType":"YulIdentifier","src":"10480:3:22"},{"name":"_1","nativeSrc":"10485:2:22","nodeType":"YulIdentifier","src":"10485:2:22"}],"functionName":{"name":"add","nativeSrc":"10476:3:22","nodeType":"YulIdentifier","src":"10476:3:22"},"nativeSrc":"10476:12:22","nodeType":"YulFunctionCall","src":"10476:12:22"},"variableNames":[{"name":"dst","nativeSrc":"10469:3:22","nodeType":"YulIdentifier","src":"10469:3:22"}]}]},"condition":{"arguments":[{"name":"src","nativeSrc":"10299:3:22","nodeType":"YulIdentifier","src":"10299:3:22"},{"name":"srcEnd","nativeSrc":"10304:6:22","nodeType":"YulIdentifier","src":"10304:6:22"}],"functionName":{"name":"lt","nativeSrc":"10296:2:22","nodeType":"YulIdentifier","src":"10296:2:22"},"nativeSrc":"10296:15:22","nodeType":"YulFunctionCall","src":"10296:15:22"},"nativeSrc":"10288:210:22","nodeType":"YulForLoop","post":{"nativeSrc":"10312:23:22","nodeType":"YulBlock","src":"10312:23:22","statements":[{"nativeSrc":"10314:19:22","nodeType":"YulAssignment","src":"10314:19:22","value":{"arguments":[{"name":"src","nativeSrc":"10325:3:22","nodeType":"YulIdentifier","src":"10325:3:22"},{"name":"_1","nativeSrc":"10330:2:22","nodeType":"YulIdentifier","src":"10330:2:22"}],"functionName":{"name":"add","nativeSrc":"10321:3:22","nodeType":"YulIdentifier","src":"10321:3:22"},"nativeSrc":"10321:12:22","nodeType":"YulFunctionCall","src":"10321:12:22"},"variableNames":[{"name":"src","nativeSrc":"10314:3:22","nodeType":"YulIdentifier","src":"10314:3:22"}]}]},"pre":{"nativeSrc":"10292:3:22","nodeType":"YulBlock","src":"10292:3:22","statements":[]},"src":"10288:210:22"},{"nativeSrc":"10507:15:22","nodeType":"YulAssignment","src":"10507:15:22","value":{"name":"dst_1","nativeSrc":"10517:5:22","nodeType":"YulIdentifier","src":"10517:5:22"},"variableNames":[{"name":"value0","nativeSrc":"10507:6:22","nodeType":"YulIdentifier","src":"10507:6:22"}]}]},"name":"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptr_fromMemory","nativeSrc":"9572:956:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9644:9:22","nodeType":"YulTypedName","src":"9644:9:22","type":""},{"name":"dataEnd","nativeSrc":"9655:7:22","nodeType":"YulTypedName","src":"9655:7:22","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"9667:6:22","nodeType":"YulTypedName","src":"9667:6:22","type":""}],"src":"9572:956:22"},{"body":{"nativeSrc":"10632:101:22","nodeType":"YulBlock","src":"10632:101:22","statements":[{"nativeSrc":"10642:26:22","nodeType":"YulAssignment","src":"10642:26:22","value":{"arguments":[{"name":"headStart","nativeSrc":"10654:9:22","nodeType":"YulIdentifier","src":"10654:9:22"},{"kind":"number","nativeSrc":"10665:2:22","nodeType":"YulLiteral","src":"10665:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"10650:3:22","nodeType":"YulIdentifier","src":"10650:3:22"},"nativeSrc":"10650:18:22","nodeType":"YulFunctionCall","src":"10650:18:22"},"variableNames":[{"name":"tail","nativeSrc":"10642:4:22","nodeType":"YulIdentifier","src":"10642:4:22"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"10684:9:22","nodeType":"YulIdentifier","src":"10684:9:22"},{"arguments":[{"name":"value0","nativeSrc":"10699:6:22","nodeType":"YulIdentifier","src":"10699:6:22"},{"kind":"number","nativeSrc":"10707:18:22","nodeType":"YulLiteral","src":"10707:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"10695:3:22","nodeType":"YulIdentifier","src":"10695:3:22"},"nativeSrc":"10695:31:22","nodeType":"YulFunctionCall","src":"10695:31:22"}],"functionName":{"name":"mstore","nativeSrc":"10677:6:22","nodeType":"YulIdentifier","src":"10677:6:22"},"nativeSrc":"10677:50:22","nodeType":"YulFunctionCall","src":"10677:50:22"},"nativeSrc":"10677:50:22","nodeType":"YulExpressionStatement","src":"10677:50:22"}]},"name":"abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed","nativeSrc":"10533:200:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"10601:9:22","nodeType":"YulTypedName","src":"10601:9:22","type":""},{"name":"value0","nativeSrc":"10612:6:22","nodeType":"YulTypedName","src":"10612:6:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"10623:4:22","nodeType":"YulTypedName","src":"10623:4:22","type":""}],"src":"10533:200:22"},{"body":{"nativeSrc":"10785:88:22","nodeType":"YulBlock","src":"10785:88:22","statements":[{"body":{"nativeSrc":"10816:22:22","nodeType":"YulBlock","src":"10816:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"10818:16:22","nodeType":"YulIdentifier","src":"10818:16:22"},"nativeSrc":"10818:18:22","nodeType":"YulFunctionCall","src":"10818:18:22"},"nativeSrc":"10818:18:22","nodeType":"YulExpressionStatement","src":"10818:18:22"}]},"condition":{"arguments":[{"name":"value","nativeSrc":"10801:5:22","nodeType":"YulIdentifier","src":"10801:5:22"},{"arguments":[{"kind":"number","nativeSrc":"10812:1:22","nodeType":"YulLiteral","src":"10812:1:22","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"10808:3:22","nodeType":"YulIdentifier","src":"10808:3:22"},"nativeSrc":"10808:6:22","nodeType":"YulFunctionCall","src":"10808:6:22"}],"functionName":{"name":"eq","nativeSrc":"10798:2:22","nodeType":"YulIdentifier","src":"10798:2:22"},"nativeSrc":"10798:17:22","nodeType":"YulFunctionCall","src":"10798:17:22"},"nativeSrc":"10795:43:22","nodeType":"YulIf","src":"10795:43:22"},{"nativeSrc":"10847:20:22","nodeType":"YulAssignment","src":"10847:20:22","value":{"arguments":[{"name":"value","nativeSrc":"10858:5:22","nodeType":"YulIdentifier","src":"10858:5:22"},{"kind":"number","nativeSrc":"10865:1:22","nodeType":"YulLiteral","src":"10865:1:22","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"10854:3:22","nodeType":"YulIdentifier","src":"10854:3:22"},"nativeSrc":"10854:13:22","nodeType":"YulFunctionCall","src":"10854:13:22"},"variableNames":[{"name":"ret","nativeSrc":"10847:3:22","nodeType":"YulIdentifier","src":"10847:3:22"}]}]},"name":"increment_t_uint256","nativeSrc":"10738:135:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"10767:5:22","nodeType":"YulTypedName","src":"10767:5:22","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"10777:3:22","nodeType":"YulTypedName","src":"10777:3:22","type":""}],"src":"10738:135:22"},{"body":{"nativeSrc":"10986:101:22","nodeType":"YulBlock","src":"10986:101:22","statements":[{"nativeSrc":"10996:26:22","nodeType":"YulAssignment","src":"10996:26:22","value":{"arguments":[{"name":"headStart","nativeSrc":"11008:9:22","nodeType":"YulIdentifier","src":"11008:9:22"},{"kind":"number","nativeSrc":"11019:2:22","nodeType":"YulLiteral","src":"11019:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"11004:3:22","nodeType":"YulIdentifier","src":"11004:3:22"},"nativeSrc":"11004:18:22","nodeType":"YulFunctionCall","src":"11004:18:22"},"variableNames":[{"name":"tail","nativeSrc":"10996:4:22","nodeType":"YulIdentifier","src":"10996:4:22"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"11038:9:22","nodeType":"YulIdentifier","src":"11038:9:22"},{"arguments":[{"name":"value0","nativeSrc":"11053:6:22","nodeType":"YulIdentifier","src":"11053:6:22"},{"kind":"number","nativeSrc":"11061:18:22","nodeType":"YulLiteral","src":"11061:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"11049:3:22","nodeType":"YulIdentifier","src":"11049:3:22"},"nativeSrc":"11049:31:22","nodeType":"YulFunctionCall","src":"11049:31:22"}],"functionName":{"name":"mstore","nativeSrc":"11031:6:22","nodeType":"YulIdentifier","src":"11031:6:22"},"nativeSrc":"11031:50:22","nodeType":"YulFunctionCall","src":"11031:50:22"},"nativeSrc":"11031:50:22","nodeType":"YulExpressionStatement","src":"11031:50:22"}]},"name":"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed","nativeSrc":"10878:209:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"10955:9:22","nodeType":"YulTypedName","src":"10955:9:22","type":""},{"name":"value0","nativeSrc":"10966:6:22","nodeType":"YulTypedName","src":"10966:6:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"10977:4:22","nodeType":"YulTypedName","src":"10977:4:22","type":""}],"src":"10878:209:22"},{"body":{"nativeSrc":"11173:103:22","nodeType":"YulBlock","src":"11173:103:22","statements":[{"body":{"nativeSrc":"11219:16:22","nodeType":"YulBlock","src":"11219:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"11228:1:22","nodeType":"YulLiteral","src":"11228:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"11231:1:22","nodeType":"YulLiteral","src":"11231:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"11221:6:22","nodeType":"YulIdentifier","src":"11221:6:22"},"nativeSrc":"11221:12:22","nodeType":"YulFunctionCall","src":"11221:12:22"},"nativeSrc":"11221:12:22","nodeType":"YulExpressionStatement","src":"11221:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"11194:7:22","nodeType":"YulIdentifier","src":"11194:7:22"},{"name":"headStart","nativeSrc":"11203:9:22","nodeType":"YulIdentifier","src":"11203:9:22"}],"functionName":{"name":"sub","nativeSrc":"11190:3:22","nodeType":"YulIdentifier","src":"11190:3:22"},"nativeSrc":"11190:23:22","nodeType":"YulFunctionCall","src":"11190:23:22"},{"kind":"number","nativeSrc":"11215:2:22","nodeType":"YulLiteral","src":"11215:2:22","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"11186:3:22","nodeType":"YulIdentifier","src":"11186:3:22"},"nativeSrc":"11186:32:22","nodeType":"YulFunctionCall","src":"11186:32:22"},"nativeSrc":"11183:52:22","nodeType":"YulIf","src":"11183:52:22"},{"nativeSrc":"11244:26:22","nodeType":"YulAssignment","src":"11244:26:22","value":{"arguments":[{"name":"headStart","nativeSrc":"11260:9:22","nodeType":"YulIdentifier","src":"11260:9:22"}],"functionName":{"name":"mload","nativeSrc":"11254:5:22","nodeType":"YulIdentifier","src":"11254:5:22"},"nativeSrc":"11254:16:22","nodeType":"YulFunctionCall","src":"11254:16:22"},"variableNames":[{"name":"value0","nativeSrc":"11244:6:22","nodeType":"YulIdentifier","src":"11244:6:22"}]}]},"name":"abi_decode_tuple_t_bytes32_fromMemory","nativeSrc":"11092:184:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"11139:9:22","nodeType":"YulTypedName","src":"11139:9:22","type":""},{"name":"dataEnd","nativeSrc":"11150:7:22","nodeType":"YulTypedName","src":"11150:7:22","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"11162:6:22","nodeType":"YulTypedName","src":"11162:6:22","type":""}],"src":"11092:184:22"},{"body":{"nativeSrc":"11418:164:22","nodeType":"YulBlock","src":"11418:164:22","statements":[{"nativeSrc":"11428:27:22","nodeType":"YulVariableDeclaration","src":"11428:27:22","value":{"arguments":[{"name":"value0","nativeSrc":"11448:6:22","nodeType":"YulIdentifier","src":"11448:6:22"}],"functionName":{"name":"mload","nativeSrc":"11442:5:22","nodeType":"YulIdentifier","src":"11442:5:22"},"nativeSrc":"11442:13:22","nodeType":"YulFunctionCall","src":"11442:13:22"},"variables":[{"name":"length","nativeSrc":"11432:6:22","nodeType":"YulTypedName","src":"11432:6:22","type":""}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"11470:3:22","nodeType":"YulIdentifier","src":"11470:3:22"},{"arguments":[{"name":"value0","nativeSrc":"11479:6:22","nodeType":"YulIdentifier","src":"11479:6:22"},{"kind":"number","nativeSrc":"11487:4:22","nodeType":"YulLiteral","src":"11487:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"11475:3:22","nodeType":"YulIdentifier","src":"11475:3:22"},"nativeSrc":"11475:17:22","nodeType":"YulFunctionCall","src":"11475:17:22"},{"name":"length","nativeSrc":"11494:6:22","nodeType":"YulIdentifier","src":"11494:6:22"}],"functionName":{"name":"mcopy","nativeSrc":"11464:5:22","nodeType":"YulIdentifier","src":"11464:5:22"},"nativeSrc":"11464:37:22","nodeType":"YulFunctionCall","src":"11464:37:22"},"nativeSrc":"11464:37:22","nodeType":"YulExpressionStatement","src":"11464:37:22"},{"nativeSrc":"11510:26:22","nodeType":"YulVariableDeclaration","src":"11510:26:22","value":{"arguments":[{"name":"pos","nativeSrc":"11524:3:22","nodeType":"YulIdentifier","src":"11524:3:22"},{"name":"length","nativeSrc":"11529:6:22","nodeType":"YulIdentifier","src":"11529:6:22"}],"functionName":{"name":"add","nativeSrc":"11520:3:22","nodeType":"YulIdentifier","src":"11520:3:22"},"nativeSrc":"11520:16:22","nodeType":"YulFunctionCall","src":"11520:16:22"},"variables":[{"name":"_1","nativeSrc":"11514:2:22","nodeType":"YulTypedName","src":"11514:2:22","type":""}]},{"expression":{"arguments":[{"name":"_1","nativeSrc":"11552:2:22","nodeType":"YulIdentifier","src":"11552:2:22"},{"kind":"number","nativeSrc":"11556:1:22","nodeType":"YulLiteral","src":"11556:1:22","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"11545:6:22","nodeType":"YulIdentifier","src":"11545:6:22"},"nativeSrc":"11545:13:22","nodeType":"YulFunctionCall","src":"11545:13:22"},"nativeSrc":"11545:13:22","nodeType":"YulExpressionStatement","src":"11545:13:22"},{"nativeSrc":"11567:9:22","nodeType":"YulAssignment","src":"11567:9:22","value":{"name":"_1","nativeSrc":"11574:2:22","nodeType":"YulIdentifier","src":"11574:2:22"},"variableNames":[{"name":"end","nativeSrc":"11567:3:22","nodeType":"YulIdentifier","src":"11567:3:22"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nativeSrc":"11281:301:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"11394:3:22","nodeType":"YulTypedName","src":"11394:3:22","type":""},{"name":"value0","nativeSrc":"11399:6:22","nodeType":"YulTypedName","src":"11399:6:22","type":""}],"returnVariables":[{"name":"end","nativeSrc":"11410:3:22","nodeType":"YulTypedName","src":"11410:3:22","type":""}],"src":"11281:301:22"}]},"contents":"{\n    { }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function allocate_memory(size) -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function array_allocation_size_array_address_dyn(length) -> size\n    {\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        size := add(shl(5, length), 0x20)\n    }\n    function abi_decode_array_uint256_dyn(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0x20\n        let dst := allocate_memory(array_allocation_size_array_address_dyn(_1))\n        let dst_1 := dst\n        mstore(dst, _1)\n        dst := add(dst, 0x20)\n        let srcEnd := add(add(offset, shl(5, _1)), 0x20)\n        if gt(srcEnd, end) { revert(0, 0) }\n        let src := add(offset, 0x20)\n        for { } lt(src, srcEnd) { src := add(src, _2) }\n        {\n            mstore(dst, calldataload(src))\n            dst := add(dst, _2)\n        }\n        array := dst_1\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        let _4 := 0x20\n        let dst := allocate_memory(array_allocation_size_array_address_dyn(_3))\n        let dst_1 := dst\n        mstore(dst, _3)\n        dst := add(dst, _4)\n        let srcEnd := add(add(_2, shl(5, _3)), _4)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_2, _4)\n        for { } lt(src, srcEnd) { src := add(src, _4) }\n        {\n            let value := calldataload(src)\n            validator_revert_address(value)\n            mstore(dst, value)\n            dst := add(dst, _4)\n        }\n        value0 := dst_1\n        let offset_1 := calldataload(add(headStart, _4))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_array_address_dyn(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let _1 := 0x20\n        pos := add(pos, 0x20)\n        let srcPtr := add(value, 0x20)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), sub(shl(160, 1), 1)))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        end := pos\n    }\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_array_address_dyn(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_bytes_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let _1 := 32\n        let offset := calldataload(add(headStart, _1))\n        let _2 := 0xffffffffffffffff\n        if gt(offset, _2) { revert(0, 0) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(0, 0) }\n        let _4 := calldataload(_3)\n        if gt(_4, _2) { panic_error_0x41() }\n        let array := allocate_memory(add(and(add(_4, 0x1f), not(31)), _1))\n        mstore(array, _4)\n        if gt(add(add(_3, _4), _1), dataEnd) { revert(0, 0) }\n        calldatacopy(add(array, _1), add(_3, _1), _4)\n        mstore(add(add(array, _4), _1), 0)\n        value1 := array\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_contract$_IBaluniV1Registry_$5472__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_addresst_uint64(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        if iszero(eq(value_1, and(value_1, 0xffffffffffffffff))) { revert(0, 0) }\n        value1 := value_1\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        mcopy(add(headStart, 64), add(value0, 32), length)\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_stringliteral_39cbcbdd9e6251e82f28a321c8ea534706a2cf624e365b64351e1f84ffc7ff8d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"At least two assets are required\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ebb567ad160cf2ebbf5e53ab40a3ffae6f6492169d006ee3f8bad6794e36f372__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"Assets and weights length mismat\")\n        mstore(add(headStart, 96), \"ch\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_2258c7547209181d37eb4aebb58e4d2c60f10b97b943ea694f4dec24e242181e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"Pool already exists for this pai\")\n        mstore(add(headStart, 96), \"r\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_uint256_t_address__to_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_uint256_t_address__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, 128)\n        let tail_1 := abi_encode_array_address_dyn(value0, add(headStart, 128))\n        let _1 := 32\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        let pos := tail_1\n        let length := mload(value1)\n        mstore(tail_1, length)\n        pos := add(tail_1, 32)\n        let srcPtr := add(value1, 32)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), and(value3, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        let _1 := 32\n        if slt(sub(dataEnd, headStart), _1) { revert(0, 0) }\n        let offset := mload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := mload(_2)\n        let dst := allocate_memory(array_allocation_size_array_address_dyn(_3))\n        let dst_1 := dst\n        mstore(dst, _3)\n        dst := add(dst, _1)\n        let srcEnd := add(add(_2, shl(5, _3)), _1)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_2, _1)\n        for { } lt(src, srcEnd) { src := add(src, _1) }\n        {\n            let value := mload(src)\n            validator_revert_address(value)\n            mstore(dst, value)\n            dst := add(dst, _1)\n        }\n        value0 := dst_1\n    }\n    function abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffff))\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffff))\n    }\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        mcopy(pos, add(value0, 0x20), length)\n        let _1 := add(pos, length)\n        mstore(_1, 0)\n        end := _1\n    }\n}","id":22,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"468":[{"length":32,"start":3572},{"length":32,"start":3613},{"length":32,"start":3937}]},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x105 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x89345EFB GT PUSH2 0x92 JUMPI DUP1 PUSH4 0xB4340E6A GT PUSH2 0x62 JUMPI DUP1 PUSH4 0xB4340E6A EQ PUSH2 0x31F JUMPI DUP1 PUSH4 0xB4AC6860 EQ PUSH2 0x33E JUMPI DUP1 PUSH4 0xC4D66DE8 EQ PUSH2 0x351 JUMPI DUP1 PUSH4 0xD88FF1F4 EQ PUSH2 0x370 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x384 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x89345EFB EQ PUSH2 0x258 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x287 JUMPI DUP1 PUSH4 0x8F2248BC EQ PUSH2 0x2C3 JUMPI DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0x2E2 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4F1EF286 GT PUSH2 0xD8 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x1AF JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x1C4 JUMPI DUP1 PUSH4 0x531AA03E EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x225 JUMPI DUP1 PUSH4 0x7B103999 EQ PUSH2 0x239 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2D5E94A7 EQ PUSH2 0x109 JUMPI DUP1 PUSH4 0x3069873B EQ PUSH2 0x145 JUMPI DUP1 PUSH4 0x41D1DE97 EQ PUSH2 0x164 JUMPI DUP1 PUSH4 0x4276B97B EQ PUSH2 0x183 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x114 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x128 PUSH2 0x123 CALLDATASIZE PUSH1 0x4 PUSH2 0x12C3 JUMP JUMPDEST PUSH2 0x3A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x150 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x128 PUSH2 0x15F CALLDATASIZE PUSH1 0x4 PUSH2 0x13CE JUMP JUMPDEST PUSH2 0x3D1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x16F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x128 PUSH2 0x17E CALLDATASIZE PUSH1 0x4 PUSH2 0x1492 JUMP JUMPDEST PUSH2 0x7CD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A2 PUSH2 0x19D CALLDATASIZE PUSH1 0x4 PUSH2 0x14A9 JUMP JUMPDEST PUSH2 0x7F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13C SWAP2 SWAP1 PUSH2 0x1507 JUMP JUMPDEST PUSH2 0x1C2 PUSH2 0x1BD CALLDATASIZE PUSH1 0x4 PUSH2 0x1519 JUMP JUMPDEST PUSH2 0x85C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1CF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D8 PUSH2 0x87B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x13C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x128 PUSH2 0x200 CALLDATASIZE PUSH1 0x4 PUSH2 0x12C3 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x230 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C2 PUSH2 0x896 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x244 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0x128 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x263 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x277 PUSH2 0x272 CALLDATASIZE PUSH1 0x4 PUSH2 0x14A9 JUMP JUMPDEST PUSH2 0x8A9 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x13C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x292 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x128 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2CE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C2 PUSH2 0x2DD CALLDATASIZE PUSH1 0x4 PUSH2 0x15BB JUMP JUMPDEST PUSH2 0x903 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2ED JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x312 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x352E302E3 PUSH1 0xDC SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13C SWAP2 SWAP1 PUSH2 0x15F3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A2 PUSH2 0x339 CALLDATASIZE PUSH1 0x4 PUSH2 0x14A9 JUMP JUMPDEST PUSH2 0x9EE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x349 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH0 SLOAD PUSH2 0x1D8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x35C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C2 PUSH2 0x36B CALLDATASIZE PUSH1 0x4 PUSH2 0x14A9 JUMP JUMPDEST PUSH2 0xC1C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A2 PUSH2 0xD4D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x38F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C2 PUSH2 0x39E CALLDATASIZE PUSH1 0x4 PUSH2 0x14A9 JUMP JUMPDEST PUSH2 0xDAC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD AND JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 DUP5 MLOAD GT PUSH2 0x428 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4174206C656173742074776F2061737365747320617265207265717569726564 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 MLOAD DUP5 MLOAD EQ PUSH2 0x484 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41737365747320616E642077656967687473206C656E677468206D69736D6174 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0xC6D PUSH1 0xF3 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x41F JUMP JUMPDEST PUSH0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x58F JUMPI PUSH0 PUSH2 0x49B DUP3 PUSH1 0x1 PUSH2 0x163C JUMP JUMPDEST SWAP1 POP JUMPDEST DUP6 MLOAD DUP2 LT ISZERO PUSH2 0x586 JUMPI PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x2 PUSH0 DUP9 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x4C6 JUMPI PUSH2 0x4C6 PUSH2 0x164F JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP9 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x500 JUMPI PUSH2 0x500 PUSH2 0x164F JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP4 MSTORE SWAP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD PUSH0 KECCAK256 SLOAD AND EQ PUSH2 0x57E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x506F6F6C20616C72656164792065786973747320666F72207468697320706169 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x41F JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x49E JUMP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x486 JUMP JUMPDEST POP PUSH0 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 MLOAD PUSH2 0x5B5 SWAP1 PUSH2 0x12A2 JUMP JUMPDEST PUSH2 0x5C2 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1663 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH2 0x5DB JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP PUSH0 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE DUP2 DUP1 MSTORE PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND OR SWAP1 SSTORE SWAP1 SWAP2 POP DUP2 SWAP1 JUMPDEST DUP7 MLOAD DUP2 LT ISZERO PUSH2 0x780 JUMPI PUSH0 PUSH2 0x63E DUP3 PUSH1 0x1 PUSH2 0x163C JUMP JUMPDEST SWAP1 POP JUMPDEST DUP8 MLOAD DUP2 LT ISZERO PUSH2 0x777 JUMPI DUP3 PUSH1 0x2 PUSH0 DUP11 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x660 JUMPI PUSH2 0x660 PUSH2 0x164F JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP11 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x69A JUMPI PUSH2 0x69A PUSH2 0x164F JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP DUP3 PUSH1 0x2 PUSH0 DUP11 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x6FA JUMPI PUSH2 0x6FA PUSH2 0x164F JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP11 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x734 JUMPI PUSH2 0x734 PUSH2 0x164F JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP4 MSTORE SWAP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD PUSH0 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP3 SWAP1 SWAP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x1 ADD PUSH2 0x641 JUMP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x629 JUMP JUMPDEST POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xA4AF51F99A910B453B81F2F9F5673ACD70BF8895729E0A6DE8E5E0908D89F2B DUP8 PUSH1 0x40 MLOAD PUSH2 0x7BA SWAP2 SWAP1 PUSH2 0x1507 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 SWAP2 POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x7DB JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP3 SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x67E4AC2C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x835 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x7C6 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x16D0 JUMP JUMPDEST PUSH2 0x864 PUSH2 0xDE9 JUMP JUMPDEST PUSH2 0x86D DUP3 PUSH2 0xE8D JUMP JUMPDEST PUSH2 0x877 DUP3 DUP3 PUSH2 0xE95 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0x884 PUSH2 0xF56 JUMP JUMPDEST POP PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5BBA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x89E PUSH2 0xF9F JUMP JUMPDEST PUSH2 0x8A7 PUSH0 PUSH2 0xFFA JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP1 JUMPDEST PUSH0 SLOAD DUP2 LT ISZERO PUSH2 0x8FB JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x8D1 JUMPI PUSH2 0x8D1 PUSH2 0x164F JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x8F3 JUMPI POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x8AC JUMP JUMPDEST POP PUSH0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 DUP1 SLOAD DUP3 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x40 SHL SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x94C JUMPI POP DUP1 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP5 AND SWAP2 AND LT ISZERO JUMPDEST ISZERO PUSH2 0x96A JUMPI PUSH1 0x40 MLOAD PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x40 SHL PUSH8 0xFFFFFFFFFFFFFFFF DUP5 AND PUSH9 0xFFFFFFFFFFFFFFFFFF NOT SWAP1 SWAP3 AND DUP3 OR OR DUP3 SSTORE PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND OR SWAP1 SSTORE DUP2 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND DUP3 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x60 SWAP2 SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA0D JUMPI PUSH2 0xA0D PUSH2 0x12FA JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xA36 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP1 JUMPDEST PUSH0 SLOAD DUP2 LT ISZERO PUSH2 0xB76 JUMPI PUSH0 DUP1 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xA58 JUMPI PUSH2 0xA58 PUSH2 0x164F JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP PUSH0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x67E4AC2C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xAB1 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0xAD8 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x16D0 JUMP JUMPDEST SWAP1 POP PUSH0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0xB5C JUMPI DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xB01 JUMPI PUSH2 0xB01 PUSH2 0x164F JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xB54 JUMPI DUP3 DUP7 DUP7 DUP2 MLOAD DUP2 LT PUSH2 0xB2A JUMPI PUSH2 0xB2A PUSH2 0x164F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE DUP5 PUSH2 0xB4C DUP2 PUSH2 0x1765 JUMP JUMPDEST SWAP6 POP POP PUSH2 0xB5C JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0xADC JUMP JUMPDEST POP DUP5 MLOAD DUP5 SUB PUSH2 0xB6C JUMPI POP POP PUSH2 0xB76 JUMP JUMPDEST POP POP PUSH1 0x1 ADD PUSH2 0xA3C JUMP JUMPDEST POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xB91 JUMPI PUSH2 0xB91 PUSH2 0x12FA JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xBBA JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xC13 JUMPI DUP4 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0xBD9 JUMPI PUSH2 0xBD9 PUSH2 0x164F JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xBF3 JUMPI PUSH2 0xBF3 PUSH2 0x164F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE PUSH1 0x1 ADD PUSH2 0xBBF JUMP JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 DUP1 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 DIV PUSH1 0xFF AND ISZERO SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH0 DUP2 ISZERO DUP1 ISZERO PUSH2 0xC61 JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x1 EQ DUP1 ISZERO PUSH2 0xC7D JUMPI POP ADDRESS EXTCODESIZE ISZERO JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0xC8B JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0xCA9 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 OR DUP6 SSTORE DUP4 ISZERO PUSH2 0xCD3 JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND PUSH1 0x1 PUSH1 0x40 SHL OR DUP6 SSTORE JUMPDEST PUSH2 0xCDB PUSH2 0x106A JUMP JUMPDEST PUSH2 0xCE4 CALLER PUSH2 0x1072 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND OR SWAP1 SSTORE DUP4 ISZERO PUSH2 0xD45 JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND DUP6 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0xDA2 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xD84 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xDB4 PUSH2 0xF9F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xDDD JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x41F JUMP JUMPDEST PUSH2 0xDE6 DUP2 PUSH2 0xFFA JUMP JUMPDEST POP JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ DUP1 PUSH2 0xE6F JUMPI POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xE63 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5BBA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x8A7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x703E46DD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDE6 PUSH2 0xF9F JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xEEF JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xEEC SWAP2 DUP2 ADD SWAP1 PUSH2 0x177D JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xF17 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x41F JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5BBA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 EQ PUSH2 0xF47 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2A875269 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x41F JUMP JUMPDEST PUSH2 0xF51 DUP4 DUP4 PUSH2 0x1083 JUMP JUMPDEST POP POP POP JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x8A7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x703E46DD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH2 0xFD1 PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x8A7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x41F JUMP JUMPDEST PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 DUP3 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP3 AND SWAP2 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x8A7 PUSH2 0x10D8 JUMP JUMPDEST PUSH2 0x107A PUSH2 0x10D8 JUMP JUMPDEST PUSH2 0xDE6 DUP2 PUSH2 0x1121 JUMP JUMPDEST PUSH2 0x108C DUP3 PUSH2 0x1129 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH0 SWAP1 LOG2 DUP1 MLOAD ISZERO PUSH2 0x10D0 JUMPI PUSH2 0xF51 DUP3 DUP3 PUSH2 0x118C JUMP JUMPDEST PUSH2 0x877 PUSH2 0x11FE JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SLOAD PUSH1 0x1 PUSH1 0x40 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x8A7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1AFCD79F PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDB4 PUSH2 0x10D8 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE PUSH0 SUB PUSH2 0x115E JUMPI PUSH1 0x40 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x41F JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5BBA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x11A8 SWAP2 SWAP1 PUSH2 0x1794 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x11E0 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x11E5 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x11F5 DUP6 DUP4 DUP4 PUSH2 0x121D JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x8A7 JUMPI PUSH1 0x40 MLOAD PUSH4 0xB398979F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x1232 JUMPI PUSH2 0x122D DUP3 PUSH2 0x1279 JUMP JUMPDEST PUSH2 0x7C6 JUMP JUMPDEST DUP2 MLOAD ISZERO DUP1 ISZERO PUSH2 0x1249 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0x1272 JUMPI PUSH1 0x40 MLOAD PUSH4 0x9996B315 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x41F JUMP JUMPDEST POP DUP1 PUSH2 0x7C6 JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x1289 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA12F521 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x440F DUP1 PUSH2 0x17AB DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xDE6 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x12D4 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x12DF DUP2 PUSH2 0x12AF JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x12EF DUP2 PUSH2 0x12AF JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1337 JUMPI PUSH2 0x1337 PUSH2 0x12FA JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1358 JUMPI PUSH2 0x1358 PUSH2 0x12FA JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1371 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x1386 PUSH2 0x1381 DUP4 PUSH2 0x133F JUMP JUMPDEST PUSH2 0x130E JUMP JUMPDEST DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP5 PUSH1 0x5 SHL DUP8 ADD ADD SWAP4 POP DUP7 DUP5 GT ISZERO PUSH2 0x13A7 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x13C3 JUMPI DUP1 CALLDATALOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x13AC JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x13E0 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x13F7 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x140A JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x141A PUSH2 0x1381 DUP4 PUSH2 0x133F JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP11 DUP5 GT ISZERO PUSH2 0x1438 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP5 DUP3 ADD SWAP5 JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0x145F JUMPI DUP6 CALLDATALOAD PUSH2 0x1450 DUP2 PUSH2 0x12AF JUMP JUMPDEST DUP3 MSTORE SWAP5 DUP3 ADD SWAP5 SWAP1 DUP3 ADD SWAP1 PUSH2 0x143D JUMP JUMPDEST SWAP8 POP POP DUP8 ADD CALLDATALOAD SWAP3 POP POP DUP1 DUP3 GT ISZERO PUSH2 0x1474 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1481 DUP7 DUP3 DUP8 ADD PUSH2 0x1362 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14A2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14B9 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x7C6 DUP2 PUSH2 0x12AF JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP5 ADD PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x14FC JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x14D7 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0x7C6 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x14C4 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x152A JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1535 DUP2 PUSH2 0x12AF JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 DUP2 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1552 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1565 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x1577 JUMPI PUSH2 0x1577 PUSH2 0x12FA JUMP JUMPDEST PUSH2 0x1589 PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP6 ADD PUSH2 0x130E JUMP JUMPDEST SWAP2 POP DUP1 DUP3 MSTORE DUP8 DUP5 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x159E JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 DUP5 DUP5 ADD DUP6 DUP5 ADD CALLDATACOPY PUSH0 DUP5 DUP3 DUP5 ADD ADD MSTORE POP DUP1 SWAP4 POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15CC JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x15D7 DUP2 PUSH2 0x12AF JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x12EF JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x3CB JUMPI PUSH2 0x3CB PUSH2 0x1628 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x80 DUP2 MSTORE PUSH0 PUSH2 0x1675 PUSH1 0x80 DUP4 ADD DUP8 PUSH2 0x14C4 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP7 MLOAD DUP1 DUP4 MSTORE DUP8 DUP3 ADD SWAP3 DUP3 ADD SWAP1 PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x16AB JUMPI DUP5 MLOAD DUP4 MSTORE SWAP4 DUP4 ADD SWAP4 SWAP2 DUP4 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x168F JUMP JUMPDEST POP POP PUSH1 0x40 DUP6 ADD SWAP7 SWAP1 SWAP7 MSTORE POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x60 SWAP1 SWAP2 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x16E1 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x16F7 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x1707 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH2 0x1715 PUSH2 0x1381 DUP3 PUSH2 0x133F JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH1 0x5 SWAP2 SWAP1 SWAP2 SHL DUP3 ADD DUP4 ADD SWAP1 DUP4 DUP2 ADD SWAP1 DUP8 DUP4 GT ISZERO PUSH2 0x1733 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP3 DUP5 ADD SWAP3 JUMPDEST DUP3 DUP5 LT ISZERO PUSH2 0x175A JUMPI DUP4 MLOAD PUSH2 0x174B DUP2 PUSH2 0x12AF JUMP JUMPDEST DUP3 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH2 0x1738 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 DUP3 ADD PUSH2 0x1776 JUMPI PUSH2 0x1776 PUSH2 0x1628 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x178D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP6 ADD DUP5 MCOPY PUSH0 SWAP3 ADD SWAP2 DUP3 MSTORE POP SWAP2 SWAP1 POP JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH6 0x12309CE54000 PUSH1 0xC SSTORE PUSH1 0x7 PUSH1 0xD SSTORE PUSH8 0x53B1DAA2FD98364 PUSH1 0xE SSTORE PUSH8 0x493B9F4E9DE52F7 PUSH1 0xF SSTORE PUSH7 0x16BCC41E90000 PUSH1 0x10 SSTORE PUSH8 0xDE0B6B3A7640000 PUSH1 0x11 SSTORE PUSH7 0x470DE4DF820000 PUSH1 0x12 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x58 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x440F CODESIZE SUB DUP1 PUSH2 0x440F DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x77 SWAP2 PUSH2 0x810 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD PUSH9 0x42616C756E69204C5 PUSH1 0xBC SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD PUSH9 0x42414C554E492D4C5 PUSH1 0xBC SHL DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0xCA SWAP2 SWAP1 PUSH2 0x969 JUMP JUMPDEST POP PUSH1 0x4 PUSH2 0xD7 DUP3 DUP3 PUSH2 0x969 JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0x5 SSTORE POP PUSH1 0xB DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND OR SWAP1 SSTORE PUSH8 0xDE0B6B3A7640000 PUSH1 0x8 SSTORE PUSH0 PUSH2 0x111 DUP6 DUP6 PUSH2 0x2D4 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x165 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A6174696F6E206661696C65640000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 DUP4 SWAP1 SSTORE PUSH1 0xB SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x1BF01E9B PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x1BF01E9B SWAP2 PUSH1 0x4 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1B2 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1D6 SWAP2 SWAP1 PUSH2 0xA28 JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 DUP3 OR SWAP1 SSTORE PUSH5 0xE8D4A51000 PUSH1 0xA SSTORE PUSH2 0x24A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420626173652061737365742061646472657373000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x15C JUMP JUMPDEST PUSH0 DUP1 JUMPDEST DUP6 MLOAD DUP2 LT ISZERO PUSH2 0x285 JUMPI DUP6 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x268 JUMPI PUSH2 0x268 PUSH2 0xA48 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP3 PUSH2 0x27B SWAP2 SWAP1 PUSH2 0xA5C JUMP JUMPDEST SWAP2 POP PUSH1 0x1 ADD PUSH2 0x24D JUMP JUMPDEST POP DUP1 PUSH2 0x2710 EQ PUSH2 0x2C9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x496E76616C69642077656967687473 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x15C JUMP JUMPDEST POP POP POP POP POP POP PUSH2 0xAB1 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xCFF49D68 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x326 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x34A SWAP2 SWAP1 PUSH2 0xA28 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xCFF49D68 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3A6 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3CA SWAP2 SWAP1 PUSH2 0xA28 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x420 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420726562616C616E6365722061646472657373000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x15C JUMP JUMPDEST DUP3 MLOAD DUP5 MLOAD EQ PUSH2 0x47C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41737365747320616E642077656967687473206C656E677468206D69736D6174 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0xC6D PUSH1 0xF3 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x15C JUMP JUMPDEST PUSH0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x716 JUMPI PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x4A3 JUMPI PUSH2 0x4A3 PUSH2 0xA48 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x501 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420617373657420616464726573730000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x15C JUMP JUMPDEST PUSH0 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x514 JUMPI PUSH2 0x514 PUSH2 0xA48 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD GT PUSH2 0x55A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x125B9D985B1A59081DD95A59DA1D PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x15C JUMP JUMPDEST PUSH1 0x6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP8 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x579 JUMPI PUSH2 0x579 PUSH2 0xA48 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x5A1 JUMPI PUSH2 0x5A1 PUSH2 0xA48 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD DUP3 MSTORE PUSH0 SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE DUP4 SLOAD PUSH1 0x1 DUP1 DUP3 ADD DUP7 SSTORE SWAP5 DUP4 MSTORE DUP2 DUP4 KECCAK256 DUP5 MLOAD PUSH1 0x3 SWAP1 SWAP3 MUL ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR DUP2 SSTORE SWAP1 DUP4 ADD MLOAD SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x40 SWAP1 SWAP2 ADD MLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 SSTORE DUP6 MLOAD DUP7 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x618 JUMPI PUSH2 0x618 PUSH2 0xA48 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE SWAP2 SWAP3 POP SWAP1 DUP3 AND SWAP1 PUSH4 0xDD62ED3E SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x671 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x695 SWAP2 SWAP1 PUSH2 0xA7B JUMP JUMPDEST PUSH0 SUB PUSH2 0x70D JUMPI PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH0 NOT PUSH1 0x24 DUP4 ADD MSTORE DUP3 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6E7 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x70B SWAP2 SWAP1 PUSH2 0xA92 JUMP JUMPDEST POP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x47E JUMP JUMPDEST POP PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x75F JUMPI PUSH2 0x75F PUSH2 0x723 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0x77F JUMPI PUSH2 0x77F PUSH2 0x723 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x79F JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x7B3 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x20 PUSH2 0x7C8 PUSH2 0x7C3 DUP4 PUSH2 0x767 JUMP JUMPDEST PUSH2 0x737 JUMP JUMPDEST DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP5 PUSH1 0x5 SHL DUP8 ADD ADD SWAP4 POP DUP7 DUP5 GT ISZERO PUSH2 0x7E9 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x805 JUMPI DUP1 MLOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x7EE JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x823 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP5 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x839 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x84C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x20 PUSH2 0x85C PUSH2 0x7C3 DUP4 PUSH2 0x767 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP12 DUP5 GT ISZERO PUSH2 0x87A JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP5 DUP3 ADD SWAP5 JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0x89F JUMPI PUSH2 0x890 DUP7 PUSH2 0x789 JUMP JUMPDEST DUP3 MSTORE SWAP5 DUP3 ADD SWAP5 SWAP1 DUP3 ADD SWAP1 PUSH2 0x87F JUMP JUMPDEST SWAP2 DUP11 ADD MLOAD SWAP2 SWAP9 POP SWAP1 SWAP4 POP POP POP DUP1 DUP3 GT ISZERO PUSH2 0x8B7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x8C4 DUP8 DUP3 DUP9 ADD PUSH2 0x7A4 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD MLOAD SWAP2 POP PUSH2 0x8DA PUSH1 0x60 DUP7 ADD PUSH2 0x789 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x8F9 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x917 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x964 JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x942 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x961 JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x94E JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x982 JUMPI PUSH2 0x982 PUSH2 0x723 JUMP JUMPDEST PUSH2 0x996 DUP2 PUSH2 0x990 DUP5 SLOAD PUSH2 0x8E5 JUMP JUMPDEST DUP5 PUSH2 0x91D JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x9C9 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x9B2 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0xA20 JUMP JUMPDEST PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x9F7 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x9D8 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0xA14 JUMPI DUP8 DUP6 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP PUSH1 0x1 DUP5 PUSH1 0x1 SHL ADD DUP6 SSTORE JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA38 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xA41 DUP3 PUSH2 0x789 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x71D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA8B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAA2 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xA41 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x3951 DUP1 PUSH2 0xABE PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1FD JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7B103999 GT PUSH2 0x114 JUMPI DUP1 PUSH4 0xB2B55D70 GT PUSH2 0xA9 JUMPI DUP1 PUSH4 0xD14EF46D GT PUSH2 0x79 JUMPI DUP1 PUSH4 0xD14EF46D EQ PUSH2 0x42E JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x466 JUMPI DUP1 PUSH4 0xDE836EBD EQ PUSH2 0x49E JUMPI DUP1 PUSH4 0xE73FAA2D EQ PUSH2 0x4B1 JUMPI DUP1 PUSH4 0xF47B45E8 EQ PUSH2 0x4B9 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xB2B55D70 EQ PUSH2 0x3EC JUMPI DUP1 PUSH4 0xC2EE3A08 EQ PUSH2 0x3FF JUMPI DUP1 PUSH4 0xCDF456E1 EQ PUSH2 0x408 JUMPI DUP1 PUSH4 0xCF8FA764 EQ PUSH2 0x41B JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8A77C8DC GT PUSH2 0xE4 JUMPI DUP1 PUSH4 0x8A77C8DC EQ PUSH2 0x3B6 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x3BE JUMPI DUP1 PUSH4 0xA1F241CC EQ PUSH2 0x3C6 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x3D9 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7B103999 EQ PUSH2 0x359 JUMPI DUP1 PUSH4 0x7FEC8D38 EQ PUSH2 0x384 JUMPI DUP1 PUSH4 0x89AB3532 EQ PUSH2 0x38D JUMPI DUP1 PUSH4 0x89AFCB44 EQ PUSH2 0x3A3 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x22ACB867 GT PUSH2 0x195 JUMPI DUP1 PUSH4 0x36BF6E39 GT PUSH2 0x165 JUMPI DUP1 PUSH4 0x36BF6E39 EQ PUSH2 0x2E0 JUMPI DUP1 PUSH4 0x4AA06652 EQ PUSH2 0x2F6 JUMPI DUP1 PUSH4 0x67E4AC2C EQ PUSH2 0x309 JUMPI DUP1 PUSH4 0x6E81221C EQ PUSH2 0x31E JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x331 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x22ACB867 EQ PUSH2 0x2A3 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2AB JUMPI DUP1 PUSH4 0x250AA683 EQ PUSH2 0x2BE JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2D1 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x12899068 GT PUSH2 0x1D0 JUMPI DUP1 PUSH4 0x12899068 EQ PUSH2 0x26A JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x28B JUMPI DUP1 PUSH4 0x18904EA4 EQ PUSH2 0x293 JUMPI DUP1 PUSH4 0x1A686502 EQ PUSH2 0x29B JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x201 JUMPI DUP1 PUSH4 0x723C999 EQ PUSH2 0x21F JUMPI DUP1 PUSH4 0x902F1AC EQ PUSH2 0x23F JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x247 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x209 PUSH2 0x4CF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x216 SWAP2 SWAP1 PUSH2 0x3238 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x232 PUSH2 0x22D CALLDATASIZE PUSH1 0x4 PUSH2 0x3284 JUMP JUMPDEST PUSH2 0x55F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x216 SWAP2 SWAP1 PUSH2 0x32D9 JUMP JUMPDEST PUSH2 0x232 PUSH2 0x7AB JUMP JUMPDEST PUSH2 0x25A PUSH2 0x255 CALLDATASIZE PUSH1 0x4 PUSH2 0x32EB JUMP JUMPDEST PUSH2 0x893 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x216 JUMP JUMPDEST PUSH2 0x27D PUSH2 0x278 CALLDATASIZE PUSH1 0x4 PUSH2 0x3284 JUMP JUMPDEST PUSH2 0x8AC JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x216 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x27D JUMP JUMPDEST PUSH2 0x232 PUSH2 0x92F JUMP JUMPDEST PUSH2 0x27D PUSH2 0x9CE JUMP JUMPDEST PUSH2 0x232 PUSH2 0x9DF JUMP JUMPDEST PUSH2 0x25A PUSH2 0x2B9 CALLDATASIZE PUSH1 0x4 PUSH2 0x3315 JUMP JUMPDEST PUSH2 0xA7E JUMP JUMPDEST PUSH2 0x27D PUSH2 0x2CC CALLDATASIZE PUSH1 0x4 PUSH2 0x3284 JUMP JUMPDEST PUSH2 0xAA1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x216 JUMP JUMPDEST PUSH2 0x2E8 PUSH2 0xB1C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x216 SWAP3 SWAP2 SWAP1 PUSH2 0x3353 JUMP JUMPDEST PUSH2 0x27D PUSH2 0x304 CALLDATASIZE PUSH1 0x4 PUSH2 0x3315 JUMP JUMPDEST PUSH2 0xB30 JUMP JUMPDEST PUSH2 0x311 PUSH2 0xCF9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x216 SWAP2 SWAP1 PUSH2 0x33A3 JUMP JUMPDEST PUSH2 0x27D PUSH2 0x32C CALLDATASIZE PUSH1 0x4 PUSH2 0x33B5 JUMP JUMPDEST PUSH2 0xDB3 JUMP JUMPDEST PUSH2 0x27D PUSH2 0x33F CALLDATASIZE PUSH1 0x4 PUSH2 0x3284 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH2 0x36C SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x216 JUMP JUMPDEST PUSH2 0x27D PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x395 PUSH2 0x1040 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x216 SWAP3 SWAP2 SWAP1 PUSH2 0x3405 JUMP JUMPDEST PUSH2 0x232 PUSH2 0x3B1 CALLDATASIZE PUSH1 0x4 PUSH2 0x3284 JUMP JUMPDEST PUSH2 0x11F9 JUMP JUMPDEST PUSH2 0x25A PUSH2 0x1765 JUMP JUMPDEST PUSH2 0x209 PUSH2 0x17DF JUMP JUMPDEST PUSH2 0x27D PUSH2 0x3D4 CALLDATASIZE PUSH1 0x4 PUSH2 0x3315 JUMP JUMPDEST PUSH2 0x17EE JUMP JUMPDEST PUSH2 0x25A PUSH2 0x3E7 CALLDATASIZE PUSH1 0x4 PUSH2 0x32EB JUMP JUMPDEST PUSH2 0x1909 JUMP JUMPDEST PUSH2 0x27D PUSH2 0x3FA CALLDATASIZE PUSH1 0x4 PUSH2 0x3284 JUMP JUMPDEST PUSH2 0x1916 JUMP JUMPDEST PUSH2 0x27D PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x36C SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x27D PUSH2 0x429 CALLDATASIZE PUSH1 0x4 PUSH2 0x3454 JUMP JUMPDEST PUSH2 0x1A05 JUMP JUMPDEST PUSH2 0x441 PUSH2 0x43C CALLDATASIZE PUSH1 0x4 PUSH2 0x3454 JUMP JUMPDEST PUSH2 0x1A7A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x216 JUMP JUMPDEST PUSH2 0x27D PUSH2 0x474 CALLDATASIZE PUSH1 0x4 PUSH2 0x346B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x27D PUSH2 0x4AC CALLDATASIZE PUSH1 0x4 PUSH2 0x3508 JUMP JUMPDEST PUSH2 0x1AB5 JUMP JUMPDEST PUSH2 0x27D PUSH2 0x1E4D JUMP JUMPDEST PUSH2 0x4C1 PUSH2 0x1F35 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x216 SWAP3 SWAP2 SWAP1 PUSH2 0x35AD JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x4DE SWAP1 PUSH2 0x35D1 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x50A SWAP1 PUSH2 0x35D1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x555 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x52C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x555 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x538 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1ACB6141 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5B2 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5D6 SWAP2 SWAP1 PUSH2 0x3603 JUMP JUMPDEST SWAP1 POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0x609 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x600 SWAP1 PUSH2 0x361E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x611 PUSH2 0x1765 JUMP JUMPDEST PUSH2 0x654 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x149958985B185B98D9481B9BDD081B9959591959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x600 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x65E PUSH2 0x2033 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH0 PUSH2 0x66D DUP4 DUP4 PUSH2 0x2162 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x679 DUP3 PUSH2 0x2263 JUMP JUMPDEST SWAP1 POP PUSH1 0xA SLOAD DUP2 PUSH2 0x689 SWAP2 SWAP1 PUSH2 0x365A JUMP JUMPDEST PUSH1 0x6 SLOAD SWAP1 SWAP2 POP PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x6A8 JUMPI PUSH2 0x6A8 PUSH2 0x34A2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x6D1 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x74A JUMPI PUSH0 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x6F2 JUMPI PUSH2 0x6F2 PUSH2 0x3671 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD GT ISZERO PUSH2 0x742 JUMPI PUSH2 0x723 DUP2 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x716 JUMPI PUSH2 0x716 PUSH2 0x3671 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x229F JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x735 JUMPI PUSH2 0x735 PUSH2 0x3671 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x6D6 JUMP JUMPDEST POP PUSH2 0x755 DUP9 DUP4 PUSH2 0x236F JUMP JUMPDEST PUSH2 0x75D PUSH2 0x23A7 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xA95AD530009C6F929555E70A66AADBEAE7231E45756C5B028CA77FBAA376E73E DUP5 PUSH1 0x40 MLOAD PUSH2 0x796 SWAP2 SWAP1 PUSH2 0x32D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 SWAP6 POP POP POP POP POP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1ACB6141 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7FE JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x822 SWAP2 SWAP1 PUSH2 0x3603 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xFA67079 PUSH1 0xE2 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0x3E99C1E4 SWAP1 PUSH1 0x24 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x866 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x88D SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x3685 JUMP JUMPDEST SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x8A0 DUP2 DUP6 DUP6 PUSH2 0x260A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x927 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x8D6 JUMPI PUSH2 0x8D6 PUSH2 0x3671 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x91F JUMPI PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x907 JUMPI PUSH2 0x907 PUSH2 0x3671 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x2 ADD SLOAD SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x8AF JUMP JUMPDEST POP PUSH0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x60 SWAP1 PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x94E JUMPI PUSH2 0x94E PUSH2 0x34A2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x977 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x7A5 JUMPI PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x999 JUMPI PUSH2 0x999 PUSH2 0x3671 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x2 ADD SLOAD DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x9BB JUMPI PUSH2 0x9BB PUSH2 0x3671 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x97C JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x9D8 PUSH2 0x2033 JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x60 SWAP1 PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x9FE JUMPI PUSH2 0x9FE PUSH2 0x34A2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xA27 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x7A5 JUMPI PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xA49 JUMPI PUSH2 0xA49 PUSH2 0x3671 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x1 ADD SLOAD DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xA6B JUMPI PUSH2 0xA6B PUSH2 0x3671 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0xA2C JUMP JUMPDEST PUSH0 CALLER PUSH2 0xA8B DUP6 DUP3 DUP6 PUSH2 0x2617 JUMP JUMPDEST PUSH2 0xA96 DUP6 DUP6 DUP6 PUSH2 0x2692 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x927 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xACB JUMPI PUSH2 0xACB PUSH2 0x3671 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xB14 JUMPI PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xAFC JUMPI PUSH2 0xAFC PUSH2 0x3671 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x1 ADD SLOAD SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0xAA4 JUMP JUMPDEST PUSH0 PUSH1 0x60 PUSH2 0xB27 PUSH2 0x2033 JUMP JUMPDEST SWAP1 SWAP4 SWAP1 SWAP3 POP SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xBB3BA04C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB82 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBA6 SWAP2 SWAP1 PUSH2 0x3603 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xBB3BA04C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC02 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC26 SWAP2 SWAP1 PUSH2 0x3603 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xC75 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x496E76616C6964206F7261636C652061646472657373 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x600 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x248391FF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP6 SWAP1 MSTORE PUSH0 SWAP2 SWAP1 DUP4 AND SWAP1 PUSH4 0x248391FF SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xCCB JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCEF SWAP2 SWAP1 PUSH2 0x3710 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x60 SWAP1 PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0xD18 JUMPI PUSH2 0xD18 PUSH2 0x34A2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xD41 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x7A5 JUMPI PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xD63 JUMPI PUSH2 0xD63 PUSH2 0x3671 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD SLOAD DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP4 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0xD93 JUMPI PUSH2 0xD93 PUSH2 0x3671 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE PUSH1 0x1 ADD PUSH2 0xD46 JUMP JUMPDEST PUSH0 PUSH2 0xDBC PUSH2 0x26EF JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x85462D6F PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x85462D6F SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE03 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE27 SWAP2 SWAP1 PUSH2 0x3710 JUMP JUMPDEST SWAP1 POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xE8A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F742073776170207468652073616D6520746F6B656E000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x600 JUMP JUMPDEST PUSH0 DUP5 GT PUSH2 0xED9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E207A65726F PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x600 JUMP JUMPDEST PUSH2 0xEE1 PUSH2 0x23A7 JUMP JUMPDEST PUSH0 PUSH2 0xEED DUP8 DUP8 DUP8 PUSH2 0x17EE JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0xEF9 DUP8 PUSH2 0x1916 JUMP JUMPDEST LT ISZERO PUSH2 0xF40 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x496E73756666696369656E74204C6971756964697479 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x600 JUMP JUMPDEST PUSH0 PUSH2 0x2710 PUSH2 0xF4E DUP5 DUP5 PUSH2 0x365A JUMP JUMPDEST PUSH2 0xF58 SWAP2 SWAP1 PUSH2 0x373B JUMP JUMPDEST SWAP1 POP PUSH2 0xF64 DUP2 DUP4 PUSH2 0x374E JUMP JUMPDEST SWAP4 POP PUSH0 DUP5 GT PUSH2 0xFC3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E7420746F2073656E64206D75737420626520677265617465722074 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x68616E203 PUSH1 0xDC SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x600 JUMP JUMPDEST PUSH2 0xFCB PUSH2 0x23A7 JUMP JUMPDEST DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xCD3829A3813DC3CDD188FD3D01DCF3268C16BE2FDD2DD21D0665418816E46062 DUP10 DUP9 PUSH1 0x40 MLOAD PUSH2 0x1023 SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP PUSH2 0x1038 PUSH1 0x1 PUSH1 0x5 SSTORE JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH0 DUP1 PUSH2 0x104D PUSH2 0x2033 JUMP JUMPDEST PUSH1 0x6 SLOAD SWAP2 SWAP4 POP SWAP2 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x106D JUMPI PUSH2 0x106D PUSH2 0x34A2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1096 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP5 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x10B1 JUMPI PUSH2 0x10B1 PUSH2 0x34A2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x10DA JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP4 POP PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x11F1 JUMPI PUSH0 DUP5 DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x10FB JUMPI PUSH2 0x10FB PUSH2 0x3671 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2710 PUSH2 0x1110 SWAP2 SWAP1 PUSH2 0x365A JUMP JUMPDEST PUSH2 0x111A SWAP2 SWAP1 PUSH2 0x373B JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x6 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x1130 JUMPI PUSH2 0x1130 PUSH2 0x3671 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x1 ADD SLOAD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x119B JUMPI PUSH2 0x1154 DUP2 DUP4 PUSH2 0x374E JUMP JUMPDEST DUP8 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x1166 JUMPI PUSH2 0x1166 PUSH2 0x3671 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x1 DUP9 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x1186 JUMPI PUSH2 0x1186 PUSH2 0x3671 JUMP JUMPDEST SWAP2 ISZERO ISZERO PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE PUSH2 0x11E7 JUMP JUMPDEST PUSH2 0x11A5 DUP3 DUP3 PUSH2 0x374E JUMP JUMPDEST DUP8 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x11B7 JUMPI PUSH2 0x11B7 PUSH2 0x3671 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH0 DUP9 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x11D6 JUMPI PUSH2 0x11D6 PUSH2 0x3671 JUMP JUMPDEST SWAP2 ISZERO ISZERO PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE JUMPDEST POP POP PUSH1 0x1 ADD PUSH2 0x10DF JUMP JUMPDEST POP POP POP POP SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1ACB6141 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x124C JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1270 SWAP2 SWAP1 PUSH2 0x3603 JUMP JUMPDEST SWAP1 POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0x129A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x600 SWAP1 PUSH2 0x361E JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x85462D6F PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x85462D6F SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x12E1 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1305 SWAP2 SWAP1 PUSH2 0x3710 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1ACB6141 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1358 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x137C SWAP2 SWAP1 PUSH2 0x3603 JUMP JUMPDEST ADDRESS PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP1 PUSH2 0x13DB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5368617265206D7573742062652067726561746572207468616E203000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x600 JUMP JUMPDEST PUSH0 PUSH2 0x13E5 PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT PUSH2 0x1425 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x4E6F206C6971756964697479 PUSH1 0xA0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x600 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1441 JUMPI PUSH2 0x1441 PUSH2 0x34A2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x146A JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 PUSH2 0x2710 PUSH2 0x147B DUP8 DUP7 PUSH2 0x365A JUMP JUMPDEST PUSH2 0x1485 SWAP2 SWAP1 PUSH2 0x373B JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x1492 DUP3 DUP7 PUSH2 0x374E JUMP JUMPDEST SWAP1 POP PUSH0 JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x157E JUMPI PUSH0 DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA3E113FB ADDRESS PUSH1 0x6 DUP6 DUP2 SLOAD DUP2 LT PUSH2 0x14C4 JUMPI PUSH2 0x14C4 PUSH2 0x3671 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD SLOAD PUSH1 0x40 MLOAD PUSH1 0xE0 DUP5 SWAP1 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP2 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x151D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1541 SWAP2 SWAP1 PUSH2 0x3710 JUMP JUMPDEST SWAP1 POP DUP6 PUSH2 0x154E DUP5 DUP4 PUSH2 0x365A JUMP JUMPDEST PUSH2 0x1558 SWAP2 SWAP1 PUSH2 0x373B JUMP JUMPDEST DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x156A JUMPI PUSH2 0x156A PUSH2 0x3671 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE POP PUSH1 0x1 ADD PUSH2 0x1496 JUMP JUMPDEST POP ADDRESS PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0x15DD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E742042414C554E49206C6971756964697479000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x600 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x1D8CF425 PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 MLOAD PUSH0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x3B19E84A SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1624 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1648 SWAP2 SWAP1 PUSH2 0x3603 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE SWAP1 SWAP2 POP PUSH0 SWAP1 ADDRESS SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1697 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x16BB SWAP2 SWAP1 PUSH2 0x3761 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x1700 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x119959481D1C985B9CD9995C8819985A5B1959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x600 JUMP JUMPDEST PUSH2 0x170A ADDRESS DUP5 PUSH2 0x2719 JUMP JUMPDEST PUSH2 0x1712 PUSH2 0x23A7 JUMP JUMPDEST DUP12 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xCC16F5DBB4873280815C1EE09DBD06736CFFCC184412CF7A71A0FDB75D397CA5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x174D SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP SWAP3 SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH2 0x1770 PUSH2 0x1040 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x17D6 JUMPI DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x1791 JUMPI PUSH2 0x1791 PUSH2 0x3671 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP1 ISZERO PUSH2 0x17BF JUMPI POP PUSH1 0x7 SLOAD DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x17B5 JUMPI PUSH2 0x17B5 PUSH2 0x3671 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD GT JUMPDEST ISZERO PUSH2 0x17CE JUMPI PUSH1 0x1 SWAP4 POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x1776 JUMP JUMPDEST POP PUSH0 SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x4DE SWAP1 PUSH2 0x35D1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x17FB DUP6 DUP6 DUP6 PUSH2 0xB30 JUMP JUMPDEST SWAP1 POP DUP4 DUP6 PUSH0 PUSH1 0x60 PUSH2 0x180A PUSH2 0x2033 JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP PUSH0 PUSH2 0x2710 DUP4 PUSH2 0x181D DUP8 PUSH2 0xAA1 JUMP JUMPDEST PUSH2 0x1827 SWAP2 SWAP1 PUSH2 0x365A JUMP JUMPDEST PUSH2 0x1831 SWAP2 SWAP1 PUSH2 0x373B JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x2710 DUP5 PUSH2 0x1841 DUP9 PUSH2 0xAA1 JUMP JUMPDEST PUSH2 0x184B SWAP2 SWAP1 PUSH2 0x365A JUMP JUMPDEST PUSH2 0x1855 SWAP2 SWAP1 PUSH2 0x373B JUMP JUMPDEST SWAP1 POP PUSH0 DUP10 SWAP1 POP PUSH0 PUSH2 0x1874 PUSH1 0xC SLOAD PUSH1 0xD SLOAD PUSH1 0xE SLOAD PUSH1 0xF SLOAD DUP9 DUP9 DUP9 PUSH0 PUSH2 0x274D JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x2710 DUP8 PUSH2 0x1884 DUP11 PUSH2 0xAA1 JUMP JUMPDEST PUSH2 0x188E SWAP2 SWAP1 PUSH2 0x365A JUMP JUMPDEST PUSH2 0x1898 SWAP2 SWAP1 PUSH2 0x373B JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x2710 DUP9 PUSH2 0x18A8 DUP12 PUSH2 0xAA1 JUMP JUMPDEST PUSH2 0x18B2 SWAP2 SWAP1 PUSH2 0x365A JUMP JUMPDEST PUSH2 0x18BC SWAP2 SWAP1 PUSH2 0x373B JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x18D8 PUSH1 0xC SLOAD PUSH1 0xD SLOAD PUSH1 0xE SLOAD PUSH1 0xF SLOAD DUP8 DUP8 DUP12 PUSH1 0x1 PUSH2 0x274D JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x18E5 DUP3 DUP7 PUSH2 0x280C JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x18F2 DUP8 DUP4 PUSH2 0x282A JUMP JUMPDEST SWAP15 POP POP POP POP POP POP POP POP POP POP POP POP POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x8A0 DUP2 DUP6 DUP6 PUSH2 0x2692 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1ACB6141 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1968 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x198C SWAP2 SWAP1 PUSH2 0x3603 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA3E113FB PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE SWAP2 SWAP3 POP SWAP1 DUP3 AND SWAP1 PUSH4 0xA3E113FB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x19DA JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x19FE SWAP2 SWAP1 PUSH2 0x3710 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x1A0F PUSH2 0x2033 JUMP JUMPDEST SWAP2 POP POP DUP1 MLOAD DUP4 LT PUSH2 0x1A58 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x92DCECC2D8D2C840C2E6E6CAE840D2DCC8CAF PUSH1 0x6B SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x600 JUMP JUMPDEST DUP1 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1A6A JUMPI PUSH2 0x1A6A PUSH2 0x3671 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1A89 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP3 POP DUP4 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1ACB6141 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1B07 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1B2B SWAP2 SWAP1 PUSH2 0x3603 JUMP JUMPDEST SWAP1 POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0x1B55 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x600 SWAP1 PUSH2 0x361E JUMP JUMPDEST PUSH0 PUSH2 0x1B5F PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH0 DUP1 PUSH2 0x1B6B PUSH2 0x7AB JUMP JUMPDEST DUP1 MLOAD PUSH1 0x6 SLOAD SWAP2 SWAP3 POP EQ PUSH2 0x1BC0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964207265736572766573206C656E677468000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x600 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x1BFB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x4E6F20617373657473 PUSH1 0xB8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x600 JUMP JUMPDEST PUSH0 JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x1C99 JUMPI PUSH0 PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1C1B JUMPI PUSH2 0x1C1B PUSH2 0x3671 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD SLOAD PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP4 POP AND DUP3 SUB PUSH2 0x1C5D JUMPI DUP9 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1C53 JUMPI PUSH2 0x1C53 PUSH2 0x3671 JUMP JUMPDEST POP PUSH2 0x1C91 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1C80 DUP3 DUP11 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x1C73 JUMPI PUSH2 0x1C73 PUSH2 0x3671 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x285D JUMP JUMPDEST SWAP1 POP PUSH2 0x1C8C DUP2 DUP7 PUSH2 0x3780 JUMP JUMPDEST SWAP5 POP POP POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x1BFD JUMP JUMPDEST POP PUSH0 DUP3 GT PUSH2 0x1CF4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F74616C2076616C7565206D7573742062652067726561746572207468616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x203 PUSH1 0xF4 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x600 JUMP JUMPDEST PUSH0 DUP4 PUSH0 SUB PUSH2 0x1D10 JUMPI PUSH1 0xA SLOAD PUSH2 0x1D09 SWAP1 DUP5 PUSH2 0x365A JUMP JUMPDEST SWAP1 POP PUSH2 0x1DAE JUMP JUMPDEST PUSH0 PUSH2 0x1D19 PUSH2 0x2033 JUMP JUMPDEST POP SWAP1 POP PUSH0 DUP2 GT PUSH2 0x1D7A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F74616C206C6971756964697479206D757374206265206772656174657220 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x7468616E203 PUSH1 0xD4 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x600 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH2 0x1D87 SWAP1 DUP3 PUSH2 0x365A JUMP JUMPDEST DUP6 PUSH1 0xA SLOAD DUP7 PUSH2 0x1D96 SWAP2 SWAP1 PUSH2 0x365A JUMP JUMPDEST PUSH2 0x1DA0 SWAP2 SWAP1 PUSH2 0x365A JUMP JUMPDEST PUSH2 0x1DAA SWAP2 SWAP1 PUSH2 0x373B JUMP JUMPDEST SWAP2 POP POP JUMPDEST DUP1 PUSH0 SUB PUSH2 0x1DED JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x4D696E7420717479206973203 PUSH1 0x9C SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x600 JUMP JUMPDEST PUSH2 0x1DF7 DUP9 DUP3 PUSH2 0x236F JUMP JUMPDEST PUSH2 0x1DFF PUSH2 0x23A7 JUMP JUMPDEST DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xF6798A560793A54C3BCFE86A93CDE1E73087D944C0EA20544137D4121396885 DUP3 PUSH1 0x40 MLOAD PUSH2 0x1E3A SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1E9F JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1EC3 SWAP2 SWAP1 PUSH2 0x3793 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 POP PUSH0 PUSH2 0x1ED4 DUP3 PUSH1 0x12 PUSH2 0x374E JUMP JUMPDEST PUSH2 0x1EDF SWAP1 PUSH1 0xA PUSH2 0x3893 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x1EEA PUSH2 0x2033 JUMP JUMPDEST POP SWAP1 POP PUSH0 PUSH2 0x1EF7 PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 SUB PUSH2 0x1F0A JUMPI PUSH0 SWAP5 POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 PUSH2 0x1F18 DUP6 DUP6 PUSH2 0x365A JUMP JUMPDEST PUSH2 0x1F22 SWAP2 SWAP1 PUSH2 0x373B JUMP JUMPDEST PUSH2 0x1F2C SWAP2 SWAP1 PUSH2 0x365A JUMP JUMPDEST SWAP5 POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH0 PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1ACB6141 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1F89 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1FAD SWAP2 SWAP1 PUSH2 0x3603 JUMP JUMPDEST SWAP1 POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0x1FD7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x600 SWAP1 PUSH2 0x361E JUMP JUMPDEST PUSH2 0x1FDF PUSH2 0x1765 JUMP JUMPDEST PUSH2 0x2022 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x149958985B185B98D9481B9BDD081B9959591959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x600 JUMP JUMPDEST PUSH2 0x202A PUSH2 0x2877 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH0 SWAP1 PUSH1 0x60 SWAP1 DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2053 JUMPI PUSH2 0x2053 PUSH2 0x34A2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x207C JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP2 POP PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x215C JUMPI PUSH0 PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x209D JUMPI PUSH2 0x209D PUSH2 0x3671 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 POP PUSH2 0x20C0 DUP3 PUSH2 0x1916 JUMP JUMPDEST PUSH1 0x9 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP4 AND SUB PUSH2 0x20FD JUMPI DUP1 DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x20EC JUMPI PUSH2 0x20EC PUSH2 0x3671 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x212B JUMP JUMPDEST PUSH0 PUSH2 0x2108 DUP4 DUP4 PUSH2 0x285D JUMP JUMPDEST SWAP1 POP DUP1 DUP7 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x211D JUMPI PUSH2 0x211D PUSH2 0x3671 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP POP JUMPDEST DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x213D JUMPI PUSH2 0x213D PUSH2 0x3671 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP7 PUSH2 0x2150 SWAP2 SWAP1 PUSH2 0x3780 JUMP JUMPDEST SWAP6 POP POP POP PUSH1 0x1 ADD PUSH2 0x2081 JUMP JUMPDEST POP POP SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x60 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x217F JUMPI PUSH2 0x217F PUSH2 0x34A2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x21A8 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x9D8 JUMPI PUSH0 PUSH2 0x2710 PUSH1 0x6 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x21CE JUMPI PUSH2 0x21CE PUSH2 0x3671 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x1 ADD SLOAD DUP7 PUSH2 0x21E9 SWAP2 SWAP1 PUSH2 0x365A JUMP JUMPDEST PUSH2 0x21F3 SWAP2 SWAP1 PUSH2 0x373B JUMP JUMPDEST SWAP1 POP DUP1 DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x2208 JUMPI PUSH2 0x2208 PUSH2 0x3671 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD LT ISZERO PUSH2 0x225A JUMPI DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2228 JUMPI PUSH2 0x2228 PUSH2 0x3671 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 PUSH2 0x223B SWAP2 SWAP1 PUSH2 0x374E JUMP JUMPDEST DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x224D JUMPI PUSH2 0x224D PUSH2 0x3671 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x21AD JUMP JUMPDEST PUSH0 DUP1 JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x7A5 JUMPI DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x2282 JUMPI PUSH2 0x2282 PUSH2 0x3671 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP3 PUSH2 0x2295 SWAP2 SWAP1 PUSH2 0x3780 JUMP JUMPDEST SWAP2 POP PUSH1 0x1 ADD PUSH2 0x2266 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x6 DUP1 SLOAD PUSH0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 SWAP1 DUP6 SWAP1 DUP2 LT PUSH2 0x22C3 JUMPI PUSH2 0x22C3 PUSH2 0x3671 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x22E8 JUMPI POP DUP1 PUSH2 0x8A6 JUMP JUMPDEST PUSH0 PUSH2 0x231E PUSH1 0x6 DUP6 DUP2 SLOAD DUP2 LT PUSH2 0x22FF JUMPI PUSH2 0x22FF PUSH2 0x3671 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH2 0x2F02 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT PUSH2 0x19FE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420746F6B656E20616D6F756E7420746F206164640000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x600 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x2398 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x600 JUMP JUMPDEST PUSH2 0x23A3 PUSH0 DUP4 DUP4 PUSH2 0x2F1B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x23B1 PUSH2 0x1040 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH0 JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x2605 JUMPI PUSH0 PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x23D5 JUMPI PUSH2 0x23D5 PUSH2 0x3671 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x23F9 JUMPI PUSH2 0x23F9 PUSH2 0x3671 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD ISZERO PUSH2 0x24CE JUMPI DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2418 JUMPI PUSH2 0x2418 PUSH2 0x3671 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x6 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x2433 JUMPI PUSH2 0x2433 PUSH2 0x3671 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x2 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x2450 SWAP2 SWAP1 PUSH2 0x3780 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x6 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x246B JUMPI PUSH2 0x246B PUSH2 0x3671 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x2 ADD SLOAD LT ISZERO PUSH2 0x24C9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F766572666C6F7720696E6372656D656E74696E6720736C6970706167650000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x600 JUMP JUMPDEST PUSH2 0x25FC JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x24E0 JUMPI PUSH2 0x24E0 PUSH2 0x3671 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x6 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x24FB JUMPI PUSH2 0x24FB PUSH2 0x3671 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x2 ADD SLOAD GT ISZERO PUSH2 0x25D4 JUMPI DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2523 JUMPI PUSH2 0x2523 PUSH2 0x3671 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x6 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x253E JUMPI PUSH2 0x253E PUSH2 0x3671 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x2 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x255B SWAP2 SWAP1 PUSH2 0x374E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x6 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x2576 JUMPI PUSH2 0x2576 PUSH2 0x3671 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x2 ADD SLOAD GT ISZERO PUSH2 0x24C9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E646572666C6F772064656372656D656E74696E6720736C69707061676500 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x600 JUMP JUMPDEST PUSH0 PUSH1 0x6 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x25E8 JUMPI PUSH2 0x25E8 PUSH2 0x3671 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x23B7 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x2605 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x3041 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH0 NOT DUP2 EQ PUSH2 0x268C JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x267E JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x600 JUMP JUMPDEST PUSH2 0x268C DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x3041 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x26BB JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x600 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x26E4 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x600 JUMP JUMPDEST PUSH2 0x2605 DUP4 DUP4 DUP4 PUSH2 0x2F1B JUMP JUMPDEST PUSH1 0x2 PUSH1 0x5 SLOAD SUB PUSH2 0x2712 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x5 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x2742 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x600 JUMP JUMPDEST PUSH2 0x23A3 DUP3 PUSH0 DUP4 PUSH2 0x2F1B JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x2759 DUP7 DUP7 PUSH2 0x3113 JUMP JUMPDEST SWAP1 POP PUSH0 DUP4 ISZERO PUSH2 0x277D JUMPI PUSH2 0x2776 DUP7 PUSH2 0x2770 DUP8 DUP11 PUSH2 0x3780 JUMP JUMPDEST SWAP1 PUSH2 0x3113 JUMP JUMPDEST SWAP1 POP PUSH2 0x278E JUMP JUMPDEST PUSH2 0x278B DUP7 PUSH2 0x2770 DUP8 DUP11 PUSH2 0x374E JUMP JUMPDEST SWAP1 POP JUMPDEST DUP1 DUP3 SUB PUSH2 0x279F JUMPI PUSH0 SWAP3 POP POP POP PUSH2 0x2800 JUMP JUMPDEST PUSH0 PUSH2 0x27AD DUP13 DUP13 DUP13 DUP13 DUP8 PUSH2 0x3132 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x27BD DUP14 DUP14 DUP14 DUP14 DUP8 PUSH2 0x3132 JUMP JUMPDEST SWAP1 POP DUP3 DUP5 GT ISZERO PUSH2 0x27E9 JUMPI PUSH2 0x27DE PUSH2 0x27D4 DUP5 DUP7 PUSH2 0x374E JUMP JUMPDEST PUSH2 0x2770 DUP5 DUP5 PUSH2 0x374E JUMP JUMPDEST SWAP5 POP POP POP POP POP PUSH2 0x2800 JUMP JUMPDEST PUSH2 0x27DE PUSH2 0x27F6 DUP6 DUP6 PUSH2 0x374E JUMP JUMPDEST PUSH2 0x2770 DUP4 DUP6 PUSH2 0x374E JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH2 0x2820 DUP5 PUSH8 0xDE0B6B3A7640000 PUSH2 0x3780 JUMP JUMPDEST PUSH2 0x19FE SWAP2 SWAP1 PUSH2 0x374E JUMP JUMPDEST PUSH0 PUSH8 0xDE0B6B3A7640000 PUSH2 0x283F PUSH1 0x2 DUP3 PUSH2 0x373B JUMP JUMPDEST PUSH2 0x2849 DUP5 DUP7 PUSH2 0x365A JUMP JUMPDEST PUSH2 0x2853 SWAP2 SWAP1 PUSH2 0x3780 JUMP JUMPDEST PUSH2 0x19FE SWAP2 SWAP1 PUSH2 0x373B JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH0 SWAP1 PUSH2 0x19FE SWAP1 DUP5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH2 0xB30 JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH0 PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1ACB6141 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x28CB JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x28EF SWAP2 SWAP1 PUSH2 0x3603 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xCFF49D68 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2942 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2966 SWAP2 SWAP1 PUSH2 0x3603 JUMP JUMPDEST PUSH1 0x6 SLOAD SWAP1 SWAP2 POP PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2985 JUMPI PUSH2 0x2985 PUSH2 0x34A2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x29AE JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP PUSH1 0x6 SLOAD SWAP1 SWAP2 POP PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x29CE JUMPI PUSH2 0x29CE PUSH2 0x34A2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x29F7 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP PUSH1 0x6 SLOAD SWAP1 SWAP2 POP PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2A17 JUMPI PUSH2 0x2A17 PUSH2 0x34A2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2A40 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP PUSH1 0x6 SLOAD SWAP1 SWAP2 POP PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2A60 JUMPI PUSH2 0x2A60 PUSH2 0x34A2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2A89 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP PUSH1 0x6 SLOAD SWAP1 SWAP2 POP PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2AA9 JUMPI PUSH2 0x2AA9 PUSH2 0x34A2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2AD2 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP PUSH1 0x6 SLOAD SWAP1 SWAP2 POP PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2AF2 JUMPI PUSH2 0x2AF2 PUSH2 0x34A2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2B1B JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x2C79 JUMPI PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x2B3D JUMPI PUSH2 0x2B3D PUSH2 0x3671 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD SLOAD DUP8 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP9 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x2B6D JUMPI PUSH2 0x2B6D PUSH2 0x3671 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x2BA0 JUMPI PUSH2 0x2BA0 PUSH2 0x3671 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x1 ADD SLOAD DUP7 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2BC2 JUMPI PUSH2 0x2BC2 PUSH2 0x3671 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP7 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x2BE0 JUMPI PUSH2 0x2BE0 PUSH2 0x3671 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2C30 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2C54 SWAP2 SWAP1 PUSH2 0x3710 JUMP JUMPDEST DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2C66 JUMPI PUSH2 0x2C66 PUSH2 0x3671 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x2B20 JUMP JUMPDEST POP PUSH0 PUSH2 0x2C83 PUSH2 0x7AB JUMP JUMPDEST SWAP1 POP DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF0BF7714 DUP3 DUP10 DUP10 PUSH1 0x7 SLOAD DUP15 DUP16 PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 MLOAD DUP9 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2CD3 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x389E JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2CEA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2CFC JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH0 JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x2EB0 JUMPI DUP8 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x2D1E JUMPI PUSH2 0x2D1E PUSH2 0x3671 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2D6E JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2D92 SWAP2 SWAP1 PUSH2 0x3710 JUMP JUMPDEST DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2DA4 JUMPI PUSH2 0x2DA4 PUSH2 0x3671 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP6 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x2DC2 JUMPI PUSH2 0x2DC2 PUSH2 0x3671 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2DDC JUMPI PUSH2 0x2DDC PUSH2 0x3671 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD GT ISZERO PUSH2 0x2E4B JUMPI DUP6 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x2DFC JUMPI PUSH2 0x2DFC PUSH2 0x3671 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2E16 JUMPI PUSH2 0x2E16 PUSH2 0x3671 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2E28 SWAP2 SWAP1 PUSH2 0x374E JUMP JUMPDEST DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2E3A JUMPI PUSH2 0x2E3A PUSH2 0x3671 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x2EA8 JUMP JUMPDEST DUP5 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x2E5D JUMPI PUSH2 0x2E5D PUSH2 0x3671 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP7 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2E77 JUMPI PUSH2 0x2E77 PUSH2 0x3671 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2E89 SWAP2 SWAP1 PUSH2 0x374E JUMP JUMPDEST DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2E9B JUMPI PUSH2 0x2E9B PUSH2 0x3671 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x2D02 JUMP JUMPDEST POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x279B343370F587AF7FB675AE7C8578E9C8ABCC373236AD02C501A4771FE7A7B8 DUP9 PUSH1 0x40 MLOAD PUSH2 0x2EEA SWAP2 SWAP1 PUSH2 0x33A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP SWAP1 SWAP10 SWAP1 SWAP9 POP SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH0 SWAP1 PUSH2 0x19FE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 DUP5 PUSH2 0xB30 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x2F45 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x2F3A SWAP2 SWAP1 PUSH2 0x3780 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x2FB5 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x2F97 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x600 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x2FD1 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x2FEF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x3034 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x306A JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x600 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3093 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x600 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x268C JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x3105 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH2 0x3120 PUSH1 0x2 DUP3 PUSH2 0x373B JUMP JUMPDEST PUSH2 0x2849 PUSH8 0xDE0B6B3A7640000 DUP7 PUSH2 0x365A JUMP JUMPDEST PUSH0 DUP3 DUP3 LT ISZERO PUSH2 0x314C JUMPI PUSH2 0x3145 DUP3 DUP6 PUSH2 0x374E JUMP JUMPDEST SWAP1 POP PUSH2 0x319F JUMP JUMPDEST PUSH2 0x3145 PUSH12 0x33B2E3C9FD0803CE8000000 PUSH8 0xDE0B6B3A7640000 PUSH2 0x3184 DUP9 DUP3 PUSH2 0x3174 DUP6 DUP10 PUSH2 0x365A JUMP JUMPDEST PUSH2 0x317E SWAP2 SWAP1 PUSH2 0x373B JUMP JUMPDEST SWAP1 PUSH2 0x31A8 JUMP JUMPDEST PUSH2 0x318E SWAP2 SWAP1 PUSH2 0x365A JUMP JUMPDEST PUSH2 0x3198 SWAP2 SWAP1 PUSH2 0x373B JUMP JUMPDEST DUP8 SWAP1 PUSH2 0x3113 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x31B4 PUSH1 0x2 DUP4 PUSH2 0x3908 JUMP JUMPDEST PUSH0 SUB PUSH2 0x31CC JUMPI PUSH12 0x33B2E3C9FD0803CE8000000 PUSH2 0x31CE JUMP JUMPDEST DUP3 JUMPDEST SWAP1 POP PUSH2 0x31DB PUSH1 0x2 DUP4 PUSH2 0x373B JUMP JUMPDEST SWAP2 POP JUMPDEST DUP2 ISZERO PUSH2 0x8A6 JUMPI PUSH2 0x31EE DUP4 DUP5 PUSH2 0x321F JUMP JUMPDEST SWAP3 POP PUSH2 0x31FB PUSH1 0x2 DUP4 PUSH2 0x3908 JUMP JUMPDEST ISZERO PUSH2 0x320D JUMPI PUSH2 0x320A DUP2 DUP5 PUSH2 0x321F JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH2 0x3218 PUSH1 0x2 DUP4 PUSH2 0x373B JUMP JUMPDEST SWAP2 POP PUSH2 0x31DE JUMP JUMPDEST PUSH0 PUSH12 0x33B2E3C9FD0803CE8000000 PUSH2 0x283F PUSH1 0x2 DUP3 PUSH2 0x373B JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x3281 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3294 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x19FE DUP2 PUSH2 0x326D JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP5 ADD PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x32CE JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x32B2 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0x19FE PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x329F JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x32FC JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x3307 DUP2 PUSH2 0x326D JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3327 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x3332 DUP2 PUSH2 0x326D JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x3342 DUP2 PUSH2 0x326D JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH0 PUSH2 0x1038 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x329F JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP5 ADD PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x32CE JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x337E JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0x19FE PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x336B JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x33C8 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x33D3 DUP2 PUSH2 0x326D JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH2 0x33E3 DUP2 PUSH2 0x326D JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH2 0x33FA DUP2 PUSH2 0x326D JUMP JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP1 SWAP4 POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 DUP3 MSTORE DUP4 MLOAD SWAP1 DUP3 ADD DUP2 SWAP1 MSTORE PUSH0 SWAP1 PUSH1 0x20 SWAP1 PUSH1 0x60 DUP5 ADD SWAP1 DUP3 DUP8 ADD DUP5 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x343F JUMPI DUP2 MLOAD ISZERO ISZERO DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x3421 JUMP JUMPDEST POP POP POP DUP4 DUP2 SUB PUSH1 0x20 DUP6 ADD MSTORE PUSH2 0xCEF DUP2 DUP7 PUSH2 0x329F JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3464 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x347C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x3487 DUP2 PUSH2 0x326D JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x3497 DUP2 PUSH2 0x326D JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x34DE JUMPI PUSH2 0x34DE PUSH2 0x34A2 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0x34FE JUMPI PUSH2 0x34FE PUSH2 0x34A2 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3519 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x3524 DUP2 PUSH2 0x326D JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 DUP2 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x353F JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP5 ADD PUSH1 0x1F DUP2 ADD DUP7 SGT PUSH2 0x354F JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0x3562 PUSH2 0x355D DUP3 PUSH2 0x34E6 JUMP JUMPDEST PUSH2 0x34B6 JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH1 0x5 SWAP2 SWAP1 SWAP2 SHL DUP3 ADD DUP4 ADD SWAP1 DUP4 DUP2 ADD SWAP1 DUP9 DUP4 GT ISZERO PUSH2 0x3580 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP3 DUP5 ADD SWAP3 JUMPDEST DUP3 DUP5 LT ISZERO PUSH2 0x359E JUMPI DUP4 CALLDATALOAD DUP3 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH2 0x3585 JUMP JUMPDEST DUP1 SWAP6 POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH0 PUSH2 0x35BF PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x329F JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x319F DUP2 DUP6 PUSH2 0x329F JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x35E5 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x7A5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3613 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x19FE DUP2 PUSH2 0x326D JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xE SWAP1 DUP3 ADD MSTORE PUSH14 0x4F6E6C7920506572697068657279 PUSH1 0x90 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x8A6 JUMPI PUSH2 0x8A6 PUSH2 0x3646 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3696 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x36AB JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x36BB JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH2 0x36C9 PUSH2 0x355D DUP3 PUSH2 0x34E6 JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH1 0x5 SWAP2 SWAP1 SWAP2 SHL DUP3 ADD DUP4 ADD SWAP1 DUP4 DUP2 ADD SWAP1 DUP8 DUP4 GT ISZERO PUSH2 0x36E7 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP3 DUP5 ADD SWAP3 JUMPDEST DUP3 DUP5 LT ISZERO PUSH2 0x3705 JUMPI DUP4 MLOAD DUP3 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH2 0x36EC JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3720 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 PUSH2 0x3749 JUMPI PUSH2 0x3749 PUSH2 0x3727 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x8A6 JUMPI PUSH2 0x8A6 PUSH2 0x3646 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3771 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x19FE JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x8A6 JUMPI PUSH2 0x8A6 PUSH2 0x3646 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x37A3 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x19FE JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x37ED JUMPI DUP2 PUSH0 NOT DIV DUP3 GT ISZERO PUSH2 0x37D3 JUMPI PUSH2 0x37D3 PUSH2 0x3646 JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0x37E0 JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x37B8 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x3803 JUMPI POP PUSH1 0x1 PUSH2 0x8A6 JUMP JUMPDEST DUP2 PUSH2 0x380F JUMPI POP PUSH0 PUSH2 0x8A6 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x3825 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x382F JUMPI PUSH2 0x384B JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x8A6 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x3840 JUMPI PUSH2 0x3840 PUSH2 0x3646 JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x8A6 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x386E JUMPI POP DUP2 DUP2 EXP PUSH2 0x8A6 JUMP JUMPDEST PUSH2 0x3878 DUP4 DUP4 PUSH2 0x37B3 JUMP JUMPDEST DUP1 PUSH0 NOT DIV DUP3 GT ISZERO PUSH2 0x388B JUMPI PUSH2 0x388B PUSH2 0x3646 JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x19FE DUP4 DUP4 PUSH2 0x37F5 JUMP JUMPDEST PUSH1 0xE0 DUP2 MSTORE PUSH0 PUSH2 0x38B0 PUSH1 0xE0 DUP4 ADD DUP11 PUSH2 0x329F JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x38C2 DUP2 DUP11 PUSH2 0x336B JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x38D6 DUP2 DUP10 PUSH2 0x329F JUMP JUMPDEST PUSH1 0x60 DUP5 ADD SWAP8 SWAP1 SWAP8 MSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x80 DUP3 ADD MSTORE SWAP2 DUP4 AND PUSH1 0xA0 DUP4 ADD MSTORE SWAP1 SWAP2 AND PUSH1 0xC0 SWAP1 SWAP2 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x3916 JUMPI PUSH2 0x3916 PUSH2 0x3727 JUMP JUMPDEST POP MOD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHR 0xCD MSTORE8 0xB5 0x4C SGT 0x4B CALLVALUE 0xE4 0xEB 0xD8 0xD2 SELFDESTRUCT PUSH4 0xD2D5F0CE PUSH0 EXP SWAP16 PUSH16 0xE046EBFF11FFA5E6B42F64736F6C6343 STOP ADDMOD NOT STOP CALLER CALLDATASIZE ADDMOD SWAP5 LOG1 EXTCODESIZE LOG1 LOG3 0x21 MOD PUSH8 0xC828492DB98DCA3E KECCAK256 PUSH23 0xCC3735A920A3CA505D382BBCA264697066735822122055 PUSH4 0x86326D68 0xF PUSH12 0x13840C18DE3D33D8EBC594C8 DUP8 PUSH32 0xE6B63215CCAE641AC86164736F6C634300081900330000000000000000000000 ","sourceMap":"1777:4772:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5052:147;;;;;;;;;;-1:-1:-1;5052:147:16;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;707:32:22;;;689:51;;677:2;662:18;5052:147:16;;;;;;;;2909:1084;;;;;;;;;;-1:-1:-1;2909:1084:16;;;;;:::i;:::-;;:::i;1867:25::-;;;;;;;;;;-1:-1:-1;1867:25:16;;;;;:::i;:::-;;:::i;4626:183::-;;;;;;;;;;-1:-1:-1;4626:183:16;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;4158:214:2:-;;;;;;:::i;:::-;;:::i;:::-;;3705:134;;;;;;;;;;;;;:::i;:::-;;;5534:25:22;;;5522:2;5507:18;3705:134:2;5388:177:22;1943:62:16;;;;;;;;;;-1:-1:-1;1943:62:16;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1943:62:16;;;3155:101:0;;;;;;;;;;;;;:::i;1901:33:16:-;;;;;;;;;;-1:-1:-1;1901:33:16;;;;-1:-1:-1;;;;;1901:33:16;;;6298:248;;;;;;;;;;-1:-1:-1;6298:248:16;;;;;:::i;:::-;;:::i;:::-;;;5969:14:22;;5962:22;5944:41;;5932:2;5917:18;6298:248:16;5804:187:22;2441:144:0;;;;;;;;;;-1:-1:-1;1313:22:0;2570:8;-1:-1:-1;;;;;2570:8:0;2441:144;;2276:147:16;;;;;;;;;;-1:-1:-1;2276:147:16;;;;;:::i;:::-;;:::i;1819:58:2:-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1819:58:2;;;;;;;;;;;;:::i;5412:878:16:-;;;;;;;;;;-1:-1:-1;5412:878:16;;;;;:::i;:::-;;:::i;4351:98::-;;;;;;;;;;-1:-1:-1;4399:7:16;4426:15;4351:98;;2080:188;;;;;;;;;;-1:-1:-1;2080:188:16;;;;;:::i;:::-;;:::i;4124:98::-;;;;;;;;;;;;;:::i;3405:215:0:-;;;;;;;;;;-1:-1:-1;3405:215:0;;;;;:::i;:::-;;:::i;5052:147:16:-;-1:-1:-1;;;;;5167:15:16;;;5132:7;5167:15;;;:7;:15;;;;;;;;:23;;;;;;;;;;;;5052:147;;;;;:::o;2909:1084::-;3015:7;3059:1;3043:6;:13;:17;3035:62;;;;-1:-1:-1;;;3035:62:16;;7235:2:22;3035:62:16;;;7217:21:22;;;7254:18;;;7247:30;7313:34;7293:18;;;7286:62;7365:18;;3035:62:16;;;;;;;;;3133:7;:14;3116:6;:13;:31;3108:78;;;;-1:-1:-1;;;3108:78:16;;7596:2:22;3108:78:16;;;7578:21:22;7635:2;7615:18;;;7608:30;7674:34;7654:18;;;7647:62;-1:-1:-1;;;7725:18:22;;;7718:32;7767:19;;3108:78:16;7394:398:22;3108:78:16;3204:9;3199:251;3223:6;:13;3219:1;:17;3199:251;;;3263:9;3275:5;:1;3279;3275:5;:::i;:::-;3263:17;;3258:181;3286:6;:13;3282:1;:17;3258:181;;;3383:1;-1:-1:-1;;;;;3333:52:16;3341:7;:18;3349:6;3356:1;3349:9;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;3341:18:16;-1:-1:-1;;;;;3341:18:16;;;;;;;;;;;;:29;3360:6;3367:1;3360:9;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;3341:29:16;;;;;;;;;;;;;;-1:-1:-1;3341:29:16;;;3333:52;3325:98;;;;-1:-1:-1;;;3325:98:16;;8393:2:22;3325:98:16;;;8375:21:22;8432:2;8412:18;;;8405:30;8471:34;8451:18;;;8444:62;-1:-1:-1;;;8522:18:22;;;8515:31;8563:19;;3325:98:16;8191:397:22;3325:98:16;3301:3;;3258:181;;;-1:-1:-1;3238:3:16;;3199:251;;;;3462:20;3502:6;3510:7;3519;3536:8;;;;;;;;;-1:-1:-1;;;;;3536:8:16;3485:61;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3559:19:16;3610:26;;;;;;;;;;;;;;-1:-1:-1;;;;;;3610:26:16;-1:-1:-1;;;;;3610:26:16;;;;;;;-1:-1:-1;3610:26:16;;3647:258;3671:6;:13;3667:1;:17;3647:258;;;3711:9;3723:5;:1;3727;3723:5;:::i;:::-;3711:17;;3706:188;3734:6;:13;3730:1;:17;3706:188;;;3805:11;3773:7;:18;3781:6;3788:1;3781:9;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;3773:18:16;-1:-1:-1;;;;;3773:18:16;;;;;;;;;;;;:29;3792:6;3799:1;3792:9;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;3773:29:16;-1:-1:-1;;;;;3773:29:16;;;;;;;;;;;;;:43;;;;;-1:-1:-1;;;;;3773:43:16;;;;;-1:-1:-1;;;;;3773:43:16;;;;;;3867:11;3835:7;:18;3843:6;3850:1;3843:9;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;3835:18:16;-1:-1:-1;;;;;3835:18:16;;;;;;;;;;;;:29;3854:6;3861:1;3854:9;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;3835:29:16;;;;;;;;;;;;;;-1:-1:-1;3835:29:16;:43;;-1:-1:-1;;;;;;3835:43:16;;;;;;;;;;;-1:-1:-1;3749:3:16;3706:188;;;-1:-1:-1;3686:3:16;;3647:258;;;;3934:11;-1:-1:-1;;;;;3922:32:16;;3947:6;3922:32;;;;;;:::i;:::-;;;;;;;;3974:11;-1:-1:-1;;2909:1084:16;;;;;;:::o;1867:25::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1867:25:16;;-1:-1:-1;1867:25:16;:::o;4626:183::-;4693:16;4722:17;4755:11;4722:45;;4785:4;-1:-1:-1;;;;;4785:14:16;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4785:16:16;;;;;;;;;;;;:::i;4158:214:2:-;2653:13;:11;:13::i;:::-;4273:36:::1;4291:17;4273;:36::i;:::-;4319:46;4341:17;4360:4;4319:21;:46::i;:::-;4158:214:::0;;:::o;3705:134::-;3774:7;2924:20;:18;:20::i;:::-;-1:-1:-1;;;;;;;;;;;;3705:134:2;:::o;3155:101:0:-;2334:13;:11;:13::i;:::-;3219:30:::1;3246:1;3219:18;:30::i;:::-;3155:101::o:0;6298:248:16:-;6355:4;;6372:144;6396:8;:15;6392:19;;6372:144;;;6452:5;-1:-1:-1;;;;;6437:20:16;:8;6446:1;6437:11;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;6437:11:16;:20;6433:72;;-1:-1:-1;6485:4:16;;6298:248;-1:-1:-1;;6298:248:16:o;6433:72::-;6413:3;;6372:144;;;-1:-1:-1;6533:5:16;;6298:248;-1:-1:-1;;6298:248:16:o;2276:147::-;8870:21:1;6431:15;;2355:8:16;;8870:21:1;-1:-1:-1;;;6431:15:1;;;;;:44;;-1:-1:-1;6450:14:1;;:25;;;;:14;;:25;;6431:44;6427:105;;;6498:23;;-1:-1:-1;;;6498:23:1;;;;;;;;;;;6427:105;6541:24;;-1:-1:-1;;;6541:24:1;;;-1:-1:-1;;6575:22:1;;;;;;;;-1:-1:-1;2376:39:16;;-1:-1:-1;;;;;;2376:39:16::1;-1:-1:-1::0;;;;;2376:39:16;::::1;;::::0;;6618:23:1;;-1:-1:-1;;;;6618:23:1;;;6656:20;;10677:50:22;;;6656:20:1;;10665:2:22;10650:18;6656:20:1;;;;;;;6291:392;2276:147:16;;;:::o;5412:878::-;5504:22;5543:15;;5475:16;;5504:22;5529:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5529:30:16;;5504:55;;5570:13;5605:9;5600:505;5624:8;:15;5620:19;;5600:505;;;5661:17;5694:8;5703:1;5694:11;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5694:11:16;5661:45;;5721:23;5747:4;-1:-1:-1;;;;;5747:14:16;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5747:16:16;;;;;;;;;;;;:::i;:::-;5721:42;;5785:9;5780:231;5804:6;:13;5800:1;:17;5780:231;;;5860:5;-1:-1:-1;;;;;5847:18:16;:6;5854:1;5847:9;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;5847:18:16;;5843:153;;5913:4;5890:5;5896;5890:12;;;;;;;;:::i;:::-;-1:-1:-1;;;;;5890:28:16;;;:12;;;;;;;;;;;:28;5941:7;;;;:::i;:::-;;;;5971:5;;5843:153;5819:3;;5780:231;;;;6040:5;:12;6031:5;:21;6027:67;;6073:5;;;;6027:67;-1:-1:-1;;5641:3:16;;5600:505;;;;6117:23;6157:5;6143:20;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6143:20:16;;6117:46;;6179:9;6174:83;6198:5;6194:1;:9;6174:83;;;6237:5;6243:1;6237:8;;;;;;;;:::i;:::-;;;;;;;6225:6;6232:1;6225:9;;;;;;;;:::i;:::-;-1:-1:-1;;;;;6225:20:16;;;:9;;;;;;;;;;;:20;6205:3;;6174:83;;;-1:-1:-1;6276:6:16;5412:878;-1:-1:-1;;;;5412:878:16:o;2080:188::-;8870:21:1;4302:15;;-1:-1:-1;;;4302:15:1;;;;4301:16;;4348:14;;4158:30;4726:16;;:34;;;;;4746:14;4726:34;4706:54;;4770:17;4790:11;:16;;4805:1;4790:16;:50;;;;-1:-1:-1;4818:4:1;4810:25;:30;4790:50;4770:70;;4856:12;4855:13;:30;;;;;4873:12;4872:13;4855:30;4851:91;;;4908:23;;-1:-1:-1;;;4908:23:1;;;;;;;;;;;4851:91;4951:18;;-1:-1:-1;;4951:18:1;4968:1;4951:18;;;4979:67;;;;5013:22;;-1:-1:-1;;;;5013:22:1;-1:-1:-1;;;5013:22:1;;;4979:67;2149:24:16::1;:22;:24::i;:::-;2184:26;2199:10;2184:14;:26::i;:::-;2221:8;:39:::0;;-1:-1:-1;;;;;;2221:39:16::1;-1:-1:-1::0;;;;;2221:39:16;::::1;;::::0;;5066:101:1;;;;5100:23;;-1:-1:-1;;;;5100:23:1;;;5142:14;;-1:-1:-1;10677:50:22;;5142:14:1;;10665:2:22;10650:18;5142:14:1;;;;;;;5066:101;4092:1081;;;;;2080:188:16;:::o;4124:98::-;4170:16;4206:8;4199:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4199:15:16;;;;;;;;;;;;;;;;;;;;;;;4124:98;:::o;3405:215:0:-;2334:13;:11;:13::i;:::-;-1:-1:-1;;;;;3489:22:0;::::1;3485:91;;3534:31;::::0;-1:-1:-1;;;3534:31:0;;3562:1:::1;3534:31;::::0;::::1;689:51:22::0;662:18;;3534:31:0::1;543:203:22::0;3485:91:0::1;3585:28;3604:8;3585:18;:28::i;:::-;3405:215:::0;:::o;4599:312:2:-;4679:4;-1:-1:-1;;;;;4688:6:2;4671:23;;;:120;;;4785:6;-1:-1:-1;;;;;4749:42:2;:32;-1:-1:-1;;;;;;;;;;;2035:53:6;-1:-1:-1;;;;;2035:53:6;;1957:138;4749:32:2;-1:-1:-1;;;;;4749:42:2;;;4671:120;4654:251;;;4865:29;;-1:-1:-1;;;4865:29:2;;;;;;;;;;;2431:84:16;2334:13:0;:11;:13::i;6052:538:2:-;6169:17;-1:-1:-1;;;;;6151:50:2;;:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6151:52:2;;;;;;;;-1:-1:-1;;6151:52:2;;;;;;;;;;;;:::i;:::-;;;6147:437;;6513:60;;-1:-1:-1;;;6513:60:2;;-1:-1:-1;;;;;707:32:22;;6513:60:2;;;689:51:22;662:18;;6513:60:2;543:203:22;6147:437:2;-1:-1:-1;;;;;;;;;;;6245:40:2;;6241:120;;6312:34;;-1:-1:-1;;;6312:34:2;;;;;5534:25:22;;;5507:18;;6312:34:2;5388:177:22;6241:120:2;6374:54;6404:17;6423:4;6374:29;:54::i;:::-;6204:235;6052:538;;:::o;5028:213::-;5102:4;-1:-1:-1;;;;;5111:6:2;5094:23;;5090:145;;5195:29;;-1:-1:-1;;;5195:29:2;;;;;;;;;;;2658:162:0;966:10:3;2717:7:0;1313:22;2570:8;-1:-1:-1;;;;;2570:8:0;;2441:144;2717:7;-1:-1:-1;;;;;2717:23:0;;2713:101;;2763:40;;-1:-1:-1;;;2763:40:0;;966:10:3;2763:40:0;;;689:51:22;662:18;;2763:40:0;543:203:22;3774:248:0;1313:22;3923:8;;-1:-1:-1;;;;;;3941:19:0;;-1:-1:-1;;;;;3941:19:0;;;;;;;;3975:40;;3923:8;;;;;3975:40;;3847:24;;3975:40;3837:185;;3774:248;:::o;2968:67:2:-;6931:20:1;:18;:20::i;1847:127:0:-;6931:20:1;:18;:20::i;:::-;1929:38:0::1;1954:12;1929:24;:38::i;2779:335:6:-:0;2870:37;2889:17;2870:18;:37::i;:::-;2922:27;;-1:-1:-1;;;;;2922:27:6;;;;;;;;2964:11;;:15;2960:148;;2995:53;3024:17;3043:4;2995:28;:53::i;2960:148::-;3079:18;:16;:18::i;7084:141:1:-;8870:21;8560:40;-1:-1:-1;;;8560:40:1;;;;7146:73;;7191:17;;-1:-1:-1;;;7191:17:1;;;;;;;;;;;1980:235:0;6931:20:1;:18;:20::i;2186:281:6:-;2263:17;-1:-1:-1;;;;;2263:29:6;;2296:1;2263:34;2259:119;;2320:47;;-1:-1:-1;;;2320:47:6;;-1:-1:-1;;;;;707:32:22;;2320:47:6;;;689:51:22;662:18;;2320:47:6;543:203:22;2259:119:6;-1:-1:-1;;;;;;;;;;;2387:73:6;;-1:-1:-1;;;;;;2387:73:6;-1:-1:-1;;;;;2387:73:6;;;;;;;;;;2186:281::o;4106:253:11:-;4189:12;4214;4228:23;4255:6;-1:-1:-1;;;;;4255:19:11;4275:4;4255:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4213:67;;;;4297:55;4324:6;4332:7;4341:10;4297:26;:55::i;:::-;4290:62;4106:253;-1:-1:-1;;;;;4106:253:11:o;6598:122:6:-;6648:9;:13;6644:70;;6684:19;;-1:-1:-1;;;6684:19:6;;;;;;;;;;;4625:582:11;4769:12;4798:7;4793:408;;4821:19;4829:10;4821:7;:19::i;:::-;4793:408;;;5045:17;;:22;:49;;;;-1:-1:-1;;;;;;5071:18:11;;;:23;5045:49;5041:119;;;5121:24;;-1:-1:-1;;;5121:24:11;;-1:-1:-1;;;;;707:32:22;;5121:24:11;;;689:51:22;662:18;;5121:24:11;543:203:22;5041:119:11;-1:-1:-1;5180:10:11;5173:17;;5743:516;5874:17;;:21;5870:383;;6102:10;6096:17;6158:15;6145:10;6141:2;6137:19;6130:44;5870:383;6225:17;;-1:-1:-1;;;6225:17:11;;;;;;;;;;;-1:-1:-1;;;;;;;;:::o;14:131:22:-;-1:-1:-1;;;;;89:31:22;;79:42;;69:70;;135:1;132;125:12;150:388;218:6;226;279:2;267:9;258:7;254:23;250:32;247:52;;;295:1;292;285:12;247:52;334:9;321:23;353:31;378:5;353:31;:::i;:::-;403:5;-1:-1:-1;460:2:22;445:18;;432:32;473:33;432:32;473:33;:::i;:::-;525:7;515:17;;;150:388;;;;;:::o;751:127::-;812:10;807:3;803:20;800:1;793:31;843:4;840:1;833:15;867:4;864:1;857:15;883:275;954:2;948:9;1019:2;1000:13;;-1:-1:-1;;996:27:22;984:40;;1054:18;1039:34;;1075:22;;;1036:62;1033:88;;;1101:18;;:::i;:::-;1137:2;1130:22;883:275;;-1:-1:-1;883:275:22:o;1163:183::-;1223:4;1256:18;1248:6;1245:30;1242:56;;;1278:18;;:::i;:::-;-1:-1:-1;1323:1:22;1319:14;1335:4;1315:25;;1163:183::o;1351:668::-;1405:5;1458:3;1451:4;1443:6;1439:17;1435:27;1425:55;;1476:1;1473;1466:12;1425:55;1512:6;1499:20;1538:4;1562:60;1578:43;1618:2;1578:43;:::i;:::-;1562:60;:::i;:::-;1644:3;1668:2;1663:3;1656:15;1696:4;1691:3;1687:14;1680:21;;1753:4;1747:2;1744:1;1740:10;1732:6;1728:23;1724:34;1710:48;;1781:3;1773:6;1770:15;1767:35;;;1798:1;1795;1788:12;1767:35;1834:4;1826:6;1822:17;1848:142;1864:6;1859:3;1856:15;1848:142;;;1930:17;;1918:30;;1968:12;;;;1881;;1848:142;;;-1:-1:-1;2008:5:22;1351:668;-1:-1:-1;;;;;;1351:668:22:o;2024:1283::-;2151:6;2159;2167;2220:2;2208:9;2199:7;2195:23;2191:32;2188:52;;;2236:1;2233;2226:12;2188:52;2276:9;2263:23;2305:18;2346:2;2338:6;2335:14;2332:34;;;2362:1;2359;2352:12;2332:34;2400:6;2389:9;2385:22;2375:32;;2445:7;2438:4;2434:2;2430:13;2426:27;2416:55;;2467:1;2464;2457:12;2416:55;2503:2;2490:16;2525:4;2549:60;2565:43;2605:2;2565:43;:::i;2549:60::-;2643:15;;;2725:1;2721:10;;;;2713:19;;2709:28;;;2674:12;;;;2749:19;;;2746:39;;;2781:1;2778;2771:12;2746:39;2805:11;;;;2825:217;2841:6;2836:3;2833:15;2825:217;;;2921:3;2908:17;2938:31;2963:5;2938:31;:::i;:::-;2982:18;;2858:12;;;;3020;;;;2825:217;;;3061:5;-1:-1:-1;;3104:18:22;;3091:32;;-1:-1:-1;;3135:16:22;;;3132:36;;;3164:1;3161;3154:12;3132:36;;3187:63;3242:7;3231:8;3220:9;3216:24;3187:63;:::i;:::-;3177:73;;;3297:2;3286:9;3282:18;3269:32;3259:42;;2024:1283;;;;;:::o;3312:180::-;3371:6;3424:2;3412:9;3403:7;3399:23;3395:32;3392:52;;;3440:1;3437;3430:12;3392:52;-1:-1:-1;3463:23:22;;3312:180;-1:-1:-1;3312:180:22:o;3497:247::-;3556:6;3609:2;3597:9;3588:7;3584:23;3580:32;3577:52;;;3625:1;3622;3615:12;3577:52;3664:9;3651:23;3683:31;3708:5;3683:31;:::i;3749:465::-;3802:3;3840:5;3834:12;3867:6;3862:3;3855:19;3893:4;3922;3917:3;3913:14;3906:21;;3961:4;3954:5;3950:16;3984:1;3994:195;4008:6;4005:1;4002:13;3994:195;;;4073:13;;-1:-1:-1;;;;;4069:39:22;4057:52;;4129:12;;;;4164:15;;;;4105:1;4023:9;3994:195;;;-1:-1:-1;4205:3:22;;3749:465;-1:-1:-1;;;;;3749:465:22:o;4219:261::-;4398:2;4387:9;4380:21;4361:4;4418:56;4470:2;4459:9;4455:18;4447:6;4418:56;:::i;4485:898::-;4562:6;4570;4623:2;4611:9;4602:7;4598:23;4594:32;4591:52;;;4639:1;4636;4629:12;4591:52;4678:9;4665:23;4697:31;4722:5;4697:31;:::i;:::-;4747:5;-1:-1:-1;4771:2:22;4809:18;;;4796:32;4847:18;4877:14;;;4874:34;;;4904:1;4901;4894:12;4874:34;4942:6;4931:9;4927:22;4917:32;;4987:7;4980:4;4976:2;4972:13;4968:27;4958:55;;5009:1;5006;4999:12;4958:55;5045:2;5032:16;5067:2;5063;5060:10;5057:36;;;5073:18;;:::i;:::-;5115:53;5158:2;5139:13;;-1:-1:-1;;5135:27:22;5131:36;;5115:53;:::i;:::-;5102:66;;5191:2;5184:5;5177:17;5231:7;5226:2;5221;5217;5213:11;5209:20;5206:33;5203:53;;;5252:1;5249;5242:12;5203:53;5307:2;5302;5298;5294:11;5289:2;5282:5;5278:14;5265:45;5351:1;5346:2;5341;5334:5;5330:14;5326:23;5319:34;;5372:5;5362:15;;;;;4485:898;;;;;:::o;5996:427::-;6063:6;6071;6124:2;6112:9;6103:7;6099:23;6095:32;6092:52;;;6140:1;6137;6130:12;6092:52;6179:9;6166:23;6198:31;6223:5;6198:31;:::i;:::-;6248:5;-1:-1:-1;6305:2:22;6290:18;;6277:32;6353:18;6340:32;;6328:45;;6318:73;;6387:1;6384;6377:12;6428:418;6577:2;6566:9;6559:21;6540:4;6609:6;6603:13;6652:6;6647:2;6636:9;6632:18;6625:34;6711:6;6706:2;6698:6;6694:15;6689:2;6678:9;6674:18;6668:50;6767:1;6762:2;6753:6;6742:9;6738:22;6734:31;6727:42;6837:2;6830;6826:7;6821:2;6813:6;6809:15;6805:29;6794:9;6790:45;6786:54;6778:62;;;6428:418;;;;:::o;7797:127::-;7858:10;7853:3;7849:20;7846:1;7839:31;7889:4;7886:1;7879:15;7913:4;7910:1;7903:15;7929:125;7994:9;;;8015:10;;;8012:36;;;8028:18;;:::i;8059:127::-;8120:10;8115:3;8111:20;8108:1;8101:31;8151:4;8148:1;8141:15;8175:4;8172:1;8165:15;8593:974;8906:3;8895:9;8888:22;8869:4;8933:57;8985:3;8974:9;8970:19;8962:6;8933:57;:::i;:::-;9047:22;;;9009:2;9027:18;;;9020:50;;;;9119:13;;9141:22;;;9217:15;;;;9179;;;9250:1;9260:169;9274:6;9271:1;9268:13;9260:169;;;9335:13;;9323:26;;9404:15;;;;9369:12;;;;9296:1;9289:9;9260:169;;;-1:-1:-1;;9480:2:22;9465:18;;9458:34;;;;-1:-1:-1;;;;;;;;9528:32:22;;;;9523:2;9508:18;;;9501:60;9446:3;8593:974;-1:-1:-1;;8593:974:22:o;9572:956::-;9667:6;9698:2;9741;9729:9;9720:7;9716:23;9712:32;9709:52;;;9757:1;9754;9747:12;9709:52;9790:9;9784:16;9823:18;9815:6;9812:30;9809:50;;;9855:1;9852;9845:12;9809:50;9878:22;;9931:4;9923:13;;9919:27;-1:-1:-1;9909:55:22;;9960:1;9957;9950:12;9909:55;9989:2;9983:9;10012:60;10028:43;10068:2;10028:43;:::i;10012:60::-;10106:15;;;10188:1;10184:10;;;;10176:19;;10172:28;;;10137:12;;;;10212:19;;;10209:39;;;10244:1;10241;10234:12;10209:39;10268:11;;;;10288:210;10304:6;10299:3;10296:15;10288:210;;;10377:3;10371:10;10394:31;10419:5;10394:31;:::i;:::-;10438:18;;10321:12;;;;10476;;;;10288:210;;;10517:5;9572:956;-1:-1:-1;;;;;;;9572:956:22:o;10738:135::-;10777:3;10798:17;;;10795:43;;10818:18;;:::i;:::-;-1:-1:-1;10865:1:22;10854:13;;10738:135::o;11092:184::-;11162:6;11215:2;11203:9;11194:7;11190:23;11186:32;11183:52;;;11231:1;11228;11221:12;11183:52;-1:-1:-1;11254:16:22;;11092:184;-1:-1:-1;11092:184:22:o;11281:301::-;11410:3;11448:6;11442:13;11494:6;11487:4;11479:6;11475:17;11470:3;11464:37;11556:1;11520:16;;11545:13;;;-1:-1:-1;11520:16:22;11281:301;-1:-1:-1;11281:301:22:o"},"gasEstimates":{"creation":{"codeDepositCost":"4713400","executionCost":"infinite","totalCost":"infinite"},"external":{"UPGRADE_INTERFACE_VERSION()":"infinite","allPools(uint256)":"4667","createPool(address[],uint256[],uint256)":"infinite","getAllPools()":"infinite","getPool(address,address)":"infinite","getPoolAssets(address)":"infinite","getPoolByAssets(address,address)":"infinite","getPoolsByAsset(address)":"infinite","getPoolsCount()":"2334","initialize(address)":"infinite","owner()":"2364","poolExist(address)":"infinite","proxiableUUID()":"infinite","registry()":"2436","reinitialize(address,uint64)":"78510","renounceOwnership()":"infinite","transferOwnership(address)":"infinite","upgradeToAndCall(address,bytes)":"infinite"},"internal":{"_authorizeUpgrade(address)":"infinite"}},"methodIdentifiers":{"UPGRADE_INTERFACE_VERSION()":"ad3cb1cc","allPools(uint256)":"41d1de97","createPool(address[],uint256[],uint256)":"3069873b","getAllPools()":"d88ff1f4","getPool(address,address)":"531aa03e","getPoolAssets(address)":"4276b97b","getPoolByAssets(address,address)":"2d5e94a7","getPoolsByAsset(address)":"b4340e6a","getPoolsCount()":"b4ac6860","initialize(address)":"c4d66de8","owner()":"8da5cb5b","poolExist(address)":"89345efb","proxiableUUID()":"52d1902d","registry()":"7b103999","reinitialize(address,uint64)":"8f2248bc","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b","upgradeToAndCall(address,bytes)":"4f1ef286"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"}],\"name\":\"PoolCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allPools\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"weights\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"trigger\",\"type\":\"uint256\"}],\"name\":\"createPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllPools\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"getPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"poolAddress\",\"type\":\"address\"}],\"name\":\"getPoolAssets\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"asset2\",\"type\":\"address\"}],\"name\":\"getPoolByAssets\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getPoolsByAsset\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPoolsCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_register\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_pool\",\"type\":\"address\"}],\"name\":\"poolExist\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"registry\",\"outputs\":[{\"internalType\":\"contract IBaluniV1Registry\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_register\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"_version\",\"type\":\"uint64\"}],\"name\":\"reinitialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"createPool(address[],uint256[],uint256)\":{\"details\":\"Creates a new BaluniV1Pool contract and registers it in the factory.\",\"params\":{\"assets\":\"The array of asset addresses to be included in the pool.\",\"trigger\":\"The trigger value for rebalancing the pool.\",\"weights\":\"The array of weights corresponding to each asset in the pool.\"},\"returns\":{\"_0\":\"The address of the newly created pool.\"}},\"getAllPools()\":{\"details\":\"Retrieves all the pools created by the factory.\",\"returns\":{\"_0\":\"An array of pool addresses.\"}},\"getPoolAssets(address)\":{\"details\":\"Retrieves the assets of a specific pool.\",\"params\":{\"poolAddress\":\"The address of the pool.\"},\"returns\":{\"_0\":\"An array of asset addresses.\"}},\"getPoolByAssets(address,address)\":{\"details\":\"Retrieves the pool address based on the given assets.\",\"params\":{\"asset1\":\"The address of the first asset.\",\"asset2\":\"The address of the second asset.\"},\"returns\":{\"_0\":\"The address of the pool.\"}},\"getPoolsByAsset(address)\":{\"details\":\"Returns an array of pool addresses that contain the specified token.\",\"params\":{\"token\":\"The address of the token to search for.\"},\"returns\":{\"_0\":\"An array of pool addresses.\"}},\"getPoolsCount()\":{\"details\":\"Retrieves the number of pools created by the factory.\",\"returns\":{\"_0\":\"The count of pools.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BaluniV1PoolFactory.sol\":\"BaluniV1PoolFactory\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {ContextUpgradeable} from \\\"../utils/ContextUpgradeable.sol\\\";\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\\n    /// @custom:storage-location erc7201:openzeppelin.storage.Ownable\\n    struct OwnableStorage {\\n        address _owner;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.Ownable\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant OwnableStorageLocation = 0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300;\\n\\n    function _getOwnableStorage() private pure returns (OwnableStorage storage $) {\\n        assembly {\\n            $.slot := OwnableStorageLocation\\n        }\\n    }\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    function __Ownable_init(address initialOwner) internal onlyInitializing {\\n        __Ownable_init_unchained(initialOwner);\\n    }\\n\\n    function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        OwnableStorage storage $ = _getOwnableStorage();\\n        return $._owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        OwnableStorage storage $ = _getOwnableStorage();\\n        address oldOwner = $._owner;\\n        $._owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Storage of the initializable contract.\\n     *\\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\\n     * when using with upgradeable contracts.\\n     *\\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\\n     */\\n    struct InitializableStorage {\\n        /**\\n         * @dev Indicates that the contract has been initialized.\\n         */\\n        uint64 _initialized;\\n        /**\\n         * @dev Indicates that the contract is in the process of being initialized.\\n         */\\n        bool _initializing;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.Initializable\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\\n\\n    /**\\n     * @dev The contract is already initialized.\\n     */\\n    error InvalidInitialization();\\n\\n    /**\\n     * @dev The contract is not initializing.\\n     */\\n    error NotInitializing();\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint64 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\\n     * production.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        // Cache values to avoid duplicated sloads\\n        bool isTopLevelCall = !$._initializing;\\n        uint64 initialized = $._initialized;\\n\\n        // Allowed calls:\\n        // - initialSetup: the contract is not in the initializing state and no previous version was\\n        //                 initialized\\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\\n        //                 current contract is just being deployed\\n        bool initialSetup = initialized == 0 && isTopLevelCall;\\n        bool construction = initialized == 1 && address(this).code.length == 0;\\n\\n        if (!initialSetup && !construction) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = 1;\\n        if (isTopLevelCall) {\\n            $._initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            $._initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint64 version) {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing || $._initialized >= version) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = version;\\n        $._initializing = true;\\n        _;\\n        $._initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        _checkInitializing();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\\n     */\\n    function _checkInitializing() internal view virtual {\\n        if (!_isInitializing()) {\\n            revert NotInitializing();\\n        }\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing) {\\n            revert InvalidInitialization();\\n        }\\n        if ($._initialized != type(uint64).max) {\\n            $._initialized = type(uint64).max;\\n            emit Initialized(type(uint64).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint64) {\\n        return _getInitializableStorage()._initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _getInitializableStorage()._initializing;\\n    }\\n\\n    /**\\n     * @dev Returns a pointer to the storage namespace.\\n     */\\n    // solhint-disable-next-line var-name-mixedcase\\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\\n        assembly {\\n            $.slot := INITIALIZABLE_STORAGE\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/UUPSUpgradeable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC1822Proxiable} from \\\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\\\";\\nimport {ERC1967Utils} from \\\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\\\";\\nimport {Initializable} from \\\"./Initializable.sol\\\";\\n\\n/**\\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\\n *\\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\\n * `UUPSUpgradeable` with a custom implementation of upgrades.\\n *\\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\\n */\\nabstract contract UUPSUpgradeable is Initializable, IERC1822Proxiable {\\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable\\n    address private immutable __self = address(this);\\n\\n    /**\\n     * @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\\n     * and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\\n     * while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\\n     * If the getter returns `\\\"5.0.0\\\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\\n     * be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\\n     * during an upgrade.\\n     */\\n    string public constant UPGRADE_INTERFACE_VERSION = \\\"5.0.0\\\";\\n\\n    /**\\n     * @dev The call is from an unauthorized context.\\n     */\\n    error UUPSUnauthorizedCallContext();\\n\\n    /**\\n     * @dev The storage `slot` is unsupported as a UUID.\\n     */\\n    error UUPSUnsupportedProxiableUUID(bytes32 slot);\\n\\n    /**\\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\\n     * a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\\n     * function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\\n     * fail.\\n     */\\n    modifier onlyProxy() {\\n        _checkProxy();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\\n     * callable on the implementing contract but not through proxies.\\n     */\\n    modifier notDelegated() {\\n        _checkNotDelegated();\\n        _;\\n    }\\n\\n    function __UUPSUpgradeable_init() internal onlyInitializing {\\n    }\\n\\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\\n    }\\n    /**\\n     * @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\\n     */\\n    function proxiableUUID() external view virtual notDelegated returns (bytes32) {\\n        return ERC1967Utils.IMPLEMENTATION_SLOT;\\n    }\\n\\n    /**\\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\\n     * encoded in `data`.\\n     *\\n     * Calls {_authorizeUpgrade}.\\n     *\\n     * Emits an {Upgraded} event.\\n     *\\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\\n     */\\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {\\n        _authorizeUpgrade(newImplementation);\\n        _upgradeToAndCallUUPS(newImplementation, data);\\n    }\\n\\n    /**\\n     * @dev Reverts if the execution is not performed via delegatecall or the execution\\n     * context is not of a proxy with an ERC1967-compliant implementation pointing to self.\\n     * See {_onlyProxy}.\\n     */\\n    function _checkProxy() internal view virtual {\\n        if (\\n            address(this) == __self || // Must be called through delegatecall\\n            ERC1967Utils.getImplementation() != __self // Must be called through an active proxy\\n        ) {\\n            revert UUPSUnauthorizedCallContext();\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts if the execution is performed via delegatecall.\\n     * See {notDelegated}.\\n     */\\n    function _checkNotDelegated() internal view virtual {\\n        if (address(this) != __self) {\\n            // Must not be called through delegatecall\\n            revert UUPSUnauthorizedCallContext();\\n        }\\n    }\\n\\n    /**\\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\\n     * {upgradeToAndCall}.\\n     *\\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\\n     *\\n     * ```solidity\\n     * function _authorizeUpgrade(address) internal onlyOwner {}\\n     * ```\\n     */\\n    function _authorizeUpgrade(address newImplementation) internal virtual;\\n\\n    /**\\n     * @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\\n     *\\n     * As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\\n     * is expected to be the implementation slot in ERC1967.\\n     *\\n     * Emits an {IERC1967-Upgraded} event.\\n     */\\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {\\n        try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\\n            if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {\\n                revert UUPSUnsupportedProxiableUUID(slot);\\n            }\\n            ERC1967Utils.upgradeToAndCall(newImplementation, data);\\n        } catch {\\n            // The implementation is not UUPS\\n            revert ERC1967Utils.ERC1967InvalidImplementation(newImplementation);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x3f13b947637c4969c0644cab4ef399cdc4b67f101463b8775c5a43b118558e53\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC1822.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\\n * proxy whose upgrades are fully controlled by the current implementation.\\n */\\ninterface IERC1822Proxiable {\\n    /**\\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\\n     * address.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy.\\n     */\\n    function proxiableUUID() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/ERC1967/ERC1967Utils.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IBeacon} from \\\"../beacon/IBeacon.sol\\\";\\nimport {Address} from \\\"../../utils/Address.sol\\\";\\nimport {StorageSlot} from \\\"../../utils/StorageSlot.sol\\\";\\n\\n/**\\n * @dev This abstract contract provides getters and event emitting update functions for\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\\n */\\nlibrary ERC1967Utils {\\n    // We re-declare ERC-1967 events here because they can't be used directly from IERC1967.\\n    // This will be fixed in Solidity 0.8.21. At that point we should remove these events.\\n    /**\\n     * @dev Emitted when the implementation is upgraded.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Emitted when the admin account has changed.\\n     */\\n    event AdminChanged(address previousAdmin, address newAdmin);\\n\\n    /**\\n     * @dev Emitted when the beacon is changed.\\n     */\\n    event BeaconUpgraded(address indexed beacon);\\n\\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /**\\n     * @dev The `implementation` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidImplementation(address implementation);\\n\\n    /**\\n     * @dev The `admin` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidAdmin(address admin);\\n\\n    /**\\n     * @dev The `beacon` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidBeacon(address beacon);\\n\\n    /**\\n     * @dev An upgrade function sees `msg.value > 0` that may be lost.\\n     */\\n    error ERC1967NonPayable();\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function getImplementation() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 implementation slot.\\n     */\\n    function _setImplementation(address newImplementation) private {\\n        if (newImplementation.code.length == 0) {\\n            revert ERC1967InvalidImplementation(newImplementation);\\n        }\\n        StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation;\\n    }\\n\\n    /**\\n     * @dev Performs implementation upgrade with additional setup call if data is nonempty.\\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\\n     * to avoid stuck value in the contract.\\n     *\\n     * Emits an {IERC1967-Upgraded} event.\\n     */\\n    function upgradeToAndCall(address newImplementation, bytes memory data) internal {\\n        _setImplementation(newImplementation);\\n        emit Upgraded(newImplementation);\\n\\n        if (data.length > 0) {\\n            Address.functionDelegateCall(newImplementation, data);\\n        } else {\\n            _checkNonPayable();\\n        }\\n    }\\n\\n    /**\\n     * @dev Storage slot with the admin of the contract.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n\\n    /**\\n     * @dev Returns the current admin.\\n     *\\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using\\n     * the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\\n     */\\n    function getAdmin() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(ADMIN_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 admin slot.\\n     */\\n    function _setAdmin(address newAdmin) private {\\n        if (newAdmin == address(0)) {\\n            revert ERC1967InvalidAdmin(address(0));\\n        }\\n        StorageSlot.getAddressSlot(ADMIN_SLOT).value = newAdmin;\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {IERC1967-AdminChanged} event.\\n     */\\n    function changeAdmin(address newAdmin) internal {\\n        emit AdminChanged(getAdmin(), newAdmin);\\n        _setAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.beacon\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\\n\\n    /**\\n     * @dev Returns the current beacon.\\n     */\\n    function getBeacon() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(BEACON_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\\n     */\\n    function _setBeacon(address newBeacon) private {\\n        if (newBeacon.code.length == 0) {\\n            revert ERC1967InvalidBeacon(newBeacon);\\n        }\\n\\n        StorageSlot.getAddressSlot(BEACON_SLOT).value = newBeacon;\\n\\n        address beaconImplementation = IBeacon(newBeacon).implementation();\\n        if (beaconImplementation.code.length == 0) {\\n            revert ERC1967InvalidImplementation(beaconImplementation);\\n        }\\n    }\\n\\n    /**\\n     * @dev Change the beacon and trigger a setup call if data is nonempty.\\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\\n     * to avoid stuck value in the contract.\\n     *\\n     * Emits an {IERC1967-BeaconUpgraded} event.\\n     *\\n     * CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\\n     * it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\\n     * efficiency.\\n     */\\n    function upgradeBeaconToAndCall(address newBeacon, bytes memory data) internal {\\n        _setBeacon(newBeacon);\\n        emit BeaconUpgraded(newBeacon);\\n\\n        if (data.length > 0) {\\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\\n        } else {\\n            _checkNonPayable();\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\\n     * if an upgrade doesn't perform an initialization call.\\n     */\\n    function _checkNonPayable() private {\\n        if (msg.value > 0) {\\n            revert ERC1967NonPayable();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeacon {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {UpgradeableBeacon} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"./IERC20.sol\\\";\\nimport {IERC20Metadata} from \\\"./extensions/IERC20Metadata.sol\\\";\\nimport {Context} from \\\"../../utils/Context.sol\\\";\\nimport {IERC20Errors} from \\\"../../interfaces/draft-IERC6093.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n */\\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\\n    mapping(address account => uint256) private _balances;\\n\\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `value`.\\n     */\\n    function transfer(address to, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `value`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `value`.\\n     */\\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, value);\\n        _transfer(from, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _transfer(address from, address to, uint256 value) internal {\\n        if (from == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        if (to == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\\n     * this function.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _update(address from, address to, uint256 value) internal virtual {\\n        if (from == address(0)) {\\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\\n            _totalSupply += value;\\n        } else {\\n            uint256 fromBalance = _balances[from];\\n            if (fromBalance < value) {\\n                revert ERC20InsufficientBalance(from, fromBalance, value);\\n            }\\n            unchecked {\\n                // Overflow not possible: value <= fromBalance <= totalSupply.\\n                _balances[from] = fromBalance - value;\\n            }\\n        }\\n\\n        if (to == address(0)) {\\n            unchecked {\\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\\n                _totalSupply -= value;\\n            }\\n        } else {\\n            unchecked {\\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\\n                _balances[to] += value;\\n            }\\n        }\\n\\n        emit Transfer(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\\n     * Relies on the `_update` mechanism\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _mint(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(address(0), account, value);\\n    }\\n\\n    /**\\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\\n     * Relies on the `_update` mechanism.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead\\n     */\\n    function _burn(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        _update(account, address(0), value);\\n    }\\n\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     *\\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\\n     */\\n    function _approve(address owner, address spender, uint256 value) internal {\\n        _approve(owner, spender, value, true);\\n    }\\n\\n    /**\\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\\n     *\\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\\n     * `Approval` event during `transferFrom` operations.\\n     *\\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\\n     * true using the following override:\\n     * ```\\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\\n     *     super._approve(owner, spender, value, true);\\n     * }\\n     * ```\\n     *\\n     * Requirements are the same as {_approve}.\\n     */\\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\\n        if (owner == address(0)) {\\n            revert ERC20InvalidApprover(address(0));\\n        }\\n        if (spender == address(0)) {\\n            revert ERC20InvalidSpender(address(0));\\n        }\\n        _allowances[owner][spender] = value;\\n        if (emitEvent) {\\n            emit Approval(owner, spender, value);\\n        }\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\\n     *\\n     * Does not update the allowance value in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Does not emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            if (currentAllowance < value) {\\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\\n            }\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - value, false);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev The ETH balance of the account is not enough to perform the operation.\\n     */\\n    error AddressInsufficientBalance(address account);\\n\\n    /**\\n     * @dev There's no code at `target` (it is not a contract).\\n     */\\n    error AddressEmptyCode(address target);\\n\\n    /**\\n     * @dev A call to an address target failed. The target may have reverted.\\n     */\\n    error FailedInnerCall();\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        if (address(this).balance < amount) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        if (!success) {\\n            revert FailedInnerCall();\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason or custom error, it is bubbled\\n     * up by this function (like regular Solidity function calls). However, if\\n     * the call reverted with no returned reason, this function reverts with a\\n     * {FailedInnerCall} error.\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        if (address(this).balance < value) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\\n     * unsuccessful call.\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata\\n    ) internal view returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            // only check if target is a contract if the call was successful and the return data is empty\\n            // otherwise we already know that it was a contract\\n            if (returndata.length == 0 && target.code.length == 0) {\\n                revert AddressEmptyCode(target);\\n            }\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\\n     * revert reason or with a default {FailedInnerCall} error.\\n     */\\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\\n     */\\n    function _revert(bytes memory returndata) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert FailedInnerCall();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant NOT_ENTERED = 1;\\n    uint256 private constant ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    /**\\n     * @dev Unauthorized reentrant call.\\n     */\\n    error ReentrancyGuardReentrantCall();\\n\\n    constructor() {\\n        _status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\\n        if (_status == ENTERED) {\\n            revert ReentrancyGuardReentrantCall();\\n        }\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Returns true if the reentrancy guard is currently set to \\\"entered\\\", which indicates there is a\\n     * `nonReentrant` function in the call stack.\\n     */\\n    function _reentrancyGuardEntered() internal view returns (bool) {\\n        return _status == ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```solidity\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(newImplementation.code.length > 0);\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    struct StringSlot {\\n        string value;\\n    }\\n\\n    struct BytesSlot {\\n        bytes value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\\n     */\\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\\n     */\\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\\n     */\\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\\n     */\\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\"},\"contracts/BaluniV1Pool.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n/**\\r\\n *  __                  __                      __\\r\\n * /  |                /  |                    /  |\\r\\n * $$ |____    ______  $$ | __    __  _______  $$/\\r\\n * $$      \\\\  /      \\\\ $$ |/  |  /  |/       \\\\ /  |\\r\\n * $$$$$$$  | $$$$$$  |$$ |$$ |  $$ |$$$$$$$  |$$ |\\r\\n * $$ |  $$ | /    $$ |$$ |$$ |  $$ |$$ |  $$ |$$ |\\r\\n * $$ |__$$ |/$$$$$$$ |$$ |$$ \\\\__$$ |$$ |  $$ |$$ |\\r\\n * $$    $$/ $$    $$ |$$ |$$    $$/ $$ |  $$ |$$ |\\r\\n * $$$$$$$/   $$$$$$$/ $$/  $$$$$$/  $$/   $$/ $$/\\r\\n *\\r\\n *\\r\\n *                  ,-\\\"\\\"\\\"\\\"-.\\r\\n *                ,'      _ `.\\r\\n *               /       )_)  \\\\\\r\\n *              :              :\\r\\n *              \\\\              /\\r\\n *               \\\\            /\\r\\n *                `.        ,'\\r\\n *                  `.    ,'\\r\\n *                    `.,'\\r\\n *                     /\\\\`.   ,-._\\r\\n *                         `-'    \\\\__\\r\\n *                              .\\r\\n *               s                \\\\\\r\\n *                                \\\\\\\\\\r\\n *                                 \\\\\\\\\\r\\n *                                  >\\\\/7\\r\\n *                              _.-(6'  \\\\\\r\\n *                             (=___._/` \\\\\\r\\n *                                  )  \\\\ |\\r\\n *                                 /   / |\\r\\n *                                /    > /\\r\\n *                               j    < _\\\\\\r\\n *                           _.-' :      ``.\\r\\n *                           \\\\ r=._\\\\        `.\\r\\n */\\r\\n\\r\\nimport '@openzeppelin/contracts/token/ERC20/ERC20.sol';\\r\\nimport '@openzeppelin/contracts/utils/ReentrancyGuard.sol';\\r\\n\\r\\nimport './interfaces/IBaluniV1PoolPeriphery.sol';\\r\\nimport './interfaces/IBaluniV1Registry.sol';\\r\\nimport './interfaces/IBaluniV1Rebalancer.sol';\\r\\nimport './interfaces/IBaluniV1Oracle.sol';\\r\\nimport './libs/DSMath.sol';\\r\\n\\r\\ncontract BaluniV1Pool is ERC20, ReentrancyGuard {\\r\\n    AssetInfo[] public assetInfos;\\r\\n    using DSMath for uint256;\\r\\n\\r\\n    uint256 public trigger;\\r\\n    uint256 public ONE;\\r\\n    address public baseAsset;\\r\\n    uint256 private scalingFactor;\\r\\n\\r\\n    IBaluniV1Registry public registry;\\r\\n\\r\\n    /// @notice WAD unit. Used to handle most numbers.\\r\\n    uint256 internal constant WAD = 10 ** 18;\\r\\n\\r\\n    /// @notice RAY unit. Used for rpow function.\\r\\n    uint256 internal constant RAY = 10 ** 27;\\r\\n\\r\\n    uint256 _slippageParamK = 0.00002e18; //2 * 10**13 == 0.00002 * WETH\\r\\n    uint256 _slippageParamN = 7; // 7\\r\\n    uint256 _c1 = 376927610599998308; // ((k**(1/(n+1))) / (n**((n)/(n+1)))) + (k*n)**(1/(n+1))\\r\\n    uint256 _xThreshold = 329811659274998519; // (k*n)**(1/(n+1))\\r\\n    uint256 _haircutRate = 0.0004e18; // 4 * 10**14 == 0.0004 == 0.04% for intra-aggregate account swap\\r\\n    uint256 _retentionRatio = 1e18; // 1\\r\\n    uint256 _maxPriceDeviation = 0.02e18; // 2 * 10**16 == 2% = 0.02 in ETH_UNIT.\\r\\n\\r\\n    struct AssetInfo {\\r\\n        address asset;\\r\\n        uint256 weight;\\r\\n        uint256 slippage; // Nuovo parametro per lo slippage\\r\\n    }\\r\\n\\r\\n    event RebalancePerformed(address indexed by, address[] assets);\\r\\n    event WeightsRebalanced(address indexed user, uint256[] amountsAdded);\\r\\n    event Burn(address indexed user, uint256 sharesBurned);\\r\\n    event Mint(address indexed to, uint256 sharesMinted);\\r\\n    event Swap(\\r\\n        address indexed user,\\r\\n        address indexed fromToken,\\r\\n        address indexed toToken,\\r\\n        uint256 amountIn,\\r\\n        uint256 amountOut\\r\\n    );\\r\\n\\r\\n    constructor(\\r\\n        address[] memory _assets,\\r\\n        uint256[] memory _weights,\\r\\n        uint256 _trigger,\\r\\n        address _registry\\r\\n    ) ERC20('Baluni LP', 'BALUNI-LP') {\\r\\n        registry = IBaluniV1Registry(_registry);\\r\\n\\r\\n        ONE = 1e18;\\r\\n\\r\\n        bool result = initializeAssets(_assets, _weights);\\r\\n        require(result, 'Initialization failed');\\r\\n\\r\\n        trigger = _trigger;\\r\\n\\r\\n        baseAsset = registry.getUSDC();\\r\\n\\r\\n        scalingFactor = 10 ** (18 - 6);\\r\\n\\r\\n        require(baseAsset != address(0), 'Invalid base asset address');\\r\\n\\r\\n        uint256 totalWeight = 0;\\r\\n\\r\\n        for (uint256 i = 0; i < _weights.length; i++) {\\r\\n            totalWeight += _weights[i];\\r\\n        }\\r\\n\\r\\n        require(totalWeight == 10000, 'Invalid weights');\\r\\n    }\\r\\n\\r\\n    modifier onlyPeriphery() {\\r\\n        address periphery = registry.getBaluniPoolPeriphery();\\r\\n        require(msg.sender == periphery, 'Only Periphery');\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Initializes the assets and their weights for the pool.\\r\\n     * @param _assets The array of asset addresses.\\r\\n     * @param _weights The array of weights corresponding to each asset.\\r\\n     */\\r\\n    function initializeAssets(address[] memory _assets, uint256[] memory _weights) internal returns (bool) {\\r\\n        address rebalancer = registry.getBaluniRebalancer();\\r\\n\\r\\n        require(registry.getBaluniRebalancer() != address(0), 'Invalid rebalancer address');\\r\\n        require(_assets.length == _weights.length, 'Assets and weights length mismatch');\\r\\n\\r\\n        for (uint256 i = 0; i < _assets.length; i++) {\\r\\n            require(_assets[i] != address(0), 'Invalid asset address');\\r\\n            require(_weights[i] > 0, 'Invalid weight');\\r\\n\\r\\n            assetInfos.push(\\r\\n                AssetInfo({\\r\\n                    asset: _assets[i],\\r\\n                    weight: _weights[i],\\r\\n                    slippage: 0 // Imposta slippage iniziale a 1%\\r\\n                })\\r\\n            );\\r\\n\\r\\n            IERC20 asset = IERC20(_assets[i]);\\r\\n            if (asset.allowance(address(this), address(rebalancer)) == 0) {\\r\\n                asset.approve(address(rebalancer), type(uint256).max);\\r\\n            }\\r\\n        }\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Rebalances the weights of the pool by calculating the amounts to add for each token,\\r\\n     * transferring the calculated amounts from the user to the pool, minting the total added liquidity,\\r\\n     * updating the reserves, and emitting an event to indicate the rebalancing of weights.\\r\\n     * @param receiver The address to receive the minted liquidity tokens.\\r\\n     */\\r\\n    function rebalanceWeights(address receiver) external onlyPeriphery returns (uint256[] memory) {\\r\\n        require(isRebalanceNeeded(), 'Rebalance not needed');\\r\\n        (uint256 totalValuation, uint256[] memory valuations) = _computeTotalValuation(); // 6dec\\r\\n\\r\\n        uint256[] memory amountsToAdd = _calculateAmountsToAdd(totalValuation, valuations); // 6dec\\r\\n        uint256 totalAddedLiquidity = _calculateTotalAddedLiquidity(amountsToAdd);\\r\\n\\r\\n        totalAddedLiquidity *= scalingFactor;\\r\\n\\r\\n        uint256[] memory amounts = new uint256[](assetInfos.length);\\r\\n\\r\\n        for (uint256 i = 0; i < amountsToAdd.length; i++) {\\r\\n            if (amountsToAdd[i] > 0) {\\r\\n                amounts[i] = _calculateLiquidity(i, amountsToAdd[i]);\\r\\n            }\\r\\n        }\\r\\n\\r\\n        _mint(receiver, totalAddedLiquidity);\\r\\n\\r\\n        // Aggiorna lo slippage in base ai nuovi pesi\\r\\n        updateSlippage();\\r\\n\\r\\n        emit WeightsRebalanced(msg.sender, amountsToAdd);\\r\\n\\r\\n        return amounts;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Swaps `amount` of `fromToken` to `toToken` and transfers the received amount to `receiver`.\\r\\n     *\\r\\n     * Requirements:\\r\\n     * - `fromToken` and `toToken` must be different tokens.\\r\\n     * - `amount` must be greater than zero.\\r\\n     * - Sufficient liquidity of `toToken` must be available in the contract.\\r\\n     *\\r\\n     * Emits a `Swap` event with the details of the swap.\\r\\n     *\\r\\n     * Updates the reserves after the swap.\\r\\n     *\\r\\n     * @param fromToken The address of the token to swap from.\\r\\n     * @param toToken The address of the token to swap to.\\r\\n     * @param amount The amount of `fromToken` to swap.\\r\\n     * @param receiver The address to receive the swapped tokens.\\r\\n     * @return amountOut The amount of `toToken` received after the swap.\\r\\n     */\\r\\n    function swap(\\r\\n        address fromToken,\\r\\n        address toToken,\\r\\n        uint256 amount,\\r\\n        address receiver\\r\\n    ) external nonReentrant returns (uint256 amountOut) {\\r\\n        uint256 _BPS_FEE = registry.getBPS_FEE();\\r\\n        require(fromToken != toToken, 'Cannot swap the same token');\\r\\n        require(amount > 0, 'Amount must be greater than zero');\\r\\n        updateSlippage();\\r\\n        uint256 receivedAmount = getAmountOutWithSlippage(fromToken, toToken, amount);\\r\\n        require(getAssetReserve(toToken) >= receivedAmount, 'Insufficient Liquidity');\\r\\n\\r\\n        uint256 fee = (receivedAmount * _BPS_FEE) / 10000;\\r\\n        amountOut = receivedAmount - fee;\\r\\n\\r\\n        require(amountOut > 0, 'Amount to send must be greater than 0');\\r\\n\\r\\n        // Aggiorna lo slippage in base ai pesi degli asset coinvolti nello swap\\r\\n        updateSlippage();\\r\\n\\r\\n        emit Swap(receiver, fromToken, toToken, amount, amountOut);\\r\\n\\r\\n        return amountOut;\\r\\n    }\\r\\n    /**\\r\\n     * @dev Calcola l'importo effettivo di `toToken` ricevuto tenendo conto dello slippage.\\r\\n     * @param fromToken The address of the token being swapped from.\\r\\n     * @param toToken The address of the token being swapped to.\\r\\n     * @param amount The amount of `fromToken` being swapped.\\r\\n     * @return The amount of `toToken` received after applying slippage.\\r\\n     */\\r\\n    function getAmountOutWithSlippage(\\r\\n        address fromToken,\\r\\n        address toToken,\\r\\n        uint256 amount\\r\\n    ) public view returns (uint256) {\\r\\n        uint256 amountOut = getAmountOut(fromToken, toToken, amount);\\r\\n\\r\\n        //uint256 slippageFrom = getSlippage(fromToken);\\r\\n        //uint256 slippageTo = getSlippage(toToken);\\r\\n\\r\\n        address to = toToken;\\r\\n        address from = fromToken;\\r\\n\\r\\n        uint256 totalValuation;\\r\\n        uint256[] memory valuations;\\r\\n        (totalValuation, valuations) = _computeTotalValuation();\\r\\n        uint256 toTokenWeightVaulation = (getTokenWeight(to) * totalValuation) / 10000;\\r\\n        uint256 toTokenWeightActualVaulation = (getTokenWeight(to) * totalValuation) / 10000;\\r\\n\\r\\n        uint a = amount;\\r\\n        uint256 slippageTo = _slippage(\\r\\n            _slippageParamK,\\r\\n            _slippageParamN,\\r\\n            _c1,\\r\\n            _xThreshold,\\r\\n            toTokenWeightVaulation,\\r\\n            toTokenWeightActualVaulation,\\r\\n            a,\\r\\n            false\\r\\n        );\\r\\n        uint256 fromTokenWeightVaulation = (getTokenWeight(from) * totalValuation) / 10000;\\r\\n        uint256 fromTokenWeightActualVaulation = (getTokenWeight(from) * totalValuation) / 10000;\\r\\n\\r\\n        uint256 slippageFrom = _slippage(\\r\\n            _slippageParamK,\\r\\n            _slippageParamN,\\r\\n            _c1,\\r\\n            _xThreshold,\\r\\n            fromTokenWeightVaulation,\\r\\n            fromTokenWeightActualVaulation,\\r\\n            a,\\r\\n            true\\r\\n        );\\r\\n\\r\\n        uint256 swappingSlippage = _swappingSlippage(slippageFrom, slippageTo);\\r\\n        uint256 toAmount = a.wmul(swappingSlippage);\\r\\n\\r\\n        return toAmount;\\r\\n    }\\r\\n\\r\\n    function getTokenWeight(address token) public view returns (uint256) {\\r\\n        for (uint256 i = 0; i < assetInfos.length; i++) {\\r\\n            if (assetInfos[i].asset == token) {\\r\\n                return assetInfos[i].weight;\\r\\n            }\\r\\n        }\\r\\n        return 0; // Default weight se non trovato\\r\\n    }\\r\\n\\r\\n    function _slippage(\\r\\n        uint256 k,\\r\\n        uint256 n,\\r\\n        uint256 c1,\\r\\n        uint256 xThreshold,\\r\\n        uint256 cash,\\r\\n        uint256 liability,\\r\\n        uint256 cashChange,\\r\\n        bool addCash\\r\\n    ) internal pure returns (uint256) {\\r\\n        uint256 covBefore = cash.wdiv(liability);\\r\\n        uint256 covAfter;\\r\\n        if (addCash) {\\r\\n            covAfter = (cash + cashChange).wdiv(liability);\\r\\n        } else {\\r\\n            covAfter = (cash - cashChange).wdiv(liability);\\r\\n        }\\r\\n\\r\\n        // if cov stays unchanged, slippage is 0\\r\\n        if (covBefore == covAfter) {\\r\\n            return 0;\\r\\n        }\\r\\n\\r\\n        uint256 slippageBefore = _slippageFunc(k, n, c1, xThreshold, covBefore);\\r\\n        uint256 slippageAfter = _slippageFunc(k, n, c1, xThreshold, covAfter);\\r\\n\\r\\n        if (covBefore > covAfter) {\\r\\n            return (slippageAfter - slippageBefore).wdiv(covBefore - covAfter);\\r\\n        } else {\\r\\n            return (slippageBefore - slippageAfter).wdiv(covAfter - covBefore);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function _slippageFunc(\\r\\n        uint256 k,\\r\\n        uint256 n,\\r\\n        uint256 c1,\\r\\n        uint256 xThreshold,\\r\\n        uint256 x\\r\\n    ) internal pure returns (uint256) {\\r\\n        if (x < xThreshold) {\\r\\n            return c1 - x;\\r\\n        } else {\\r\\n            return k.wdiv((((x * RAY) / WAD).rpow(n) * WAD) / RAY); // k / (x ** n)\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function _swappingSlippage(uint256 si, uint256 sj) internal pure returns (uint256) {\\r\\n        return WAD + si - sj;\\r\\n    }\\r\\n    /**\\r\\n     * @dev Restituisce lo slippage attuale per un dato token.\\r\\n     * @param token The address of the token.\\r\\n     * @return Lo slippage attuale per il token.\\r\\n     */\\r\\n    function getSlippage(address token) public view returns (uint256) {\\r\\n        for (uint256 i = 0; i < assetInfos.length; i++) {\\r\\n            if (assetInfos[i].asset == token) {\\r\\n                return assetInfos[i].slippage;\\r\\n            }\\r\\n        }\\r\\n        return 0; // Default slippage se non trovato\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Funzione per aggiornare lo slippage in base ai pesi degli asset.\\r\\n     */\\r\\n    function updateSlippage() internal {\\r\\n        (bool[] memory directions, uint256[] memory deviations) = getDeviation();\\r\\n\\r\\n        for (uint256 i = 0; i < assetInfos.length; i++) {\\r\\n            uint256 previousSlippage = assetInfos[i].slippage;\\r\\n\\r\\n            if (directions[i]) {\\r\\n                // Aumenta lo slippage se il peso dell'asset \\u00e8 aumentato\\r\\n                assetInfos[i].slippage += deviations[i];\\r\\n                // Verifica che non ci sia overflow\\r\\n                require(assetInfos[i].slippage >= previousSlippage, 'Overflow incrementing slippage');\\r\\n            } else {\\r\\n                // Diminuisce lo slippage se il peso dell'asset \\u00e8 diminuito\\r\\n                if (assetInfos[i].slippage > deviations[i]) {\\r\\n                    assetInfos[i].slippage -= deviations[i];\\r\\n                    // Verifica che non ci sia underflow\\r\\n                    require(assetInfos[i].slippage <= previousSlippage, 'Underflow decrementing slippage');\\r\\n                } else {\\r\\n                    assetInfos[i].slippage = 0; // Evita lo slippage negativo\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function getSlippages() external view returns (uint256[] memory) {\\r\\n        uint256[] memory slippages = new uint256[](assetInfos.length);\\r\\n        for (uint256 i = 0; i < assetInfos.length; i++) {\\r\\n            slippages[i] = assetInfos[i].slippage;\\r\\n        }\\r\\n        return slippages;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Mints new tokens and adds them to the specified address.\\r\\n     * @param to The address to which the new tokens will be minted.\\r\\n     * @return The amount of tokens minted.\\r\\n     */\\r\\n    function mint(address to, uint256[] memory amounts) external onlyPeriphery returns (uint256) {\\r\\n        uint256 totalSupply = totalSupply();\\r\\n        uint256 totalValue = 0;\\r\\n        uint256[] memory _reserves = getReserves();\\r\\n        require(assetInfos.length == _reserves.length, 'Invalid reserves length');\\r\\n        require(assetInfos.length > 0, 'No assets');\\r\\n\\r\\n        for (uint256 i = 0; i < assetInfos.length; i++) {\\r\\n            address asset = assetInfos[i].asset;\\r\\n            uint256 valuation;\\r\\n            if (asset == baseAsset) {\\r\\n                valuation = amounts[i];\\r\\n                continue;\\r\\n            }\\r\\n            valuation = _convertTokenToBase(asset, amounts[i]);\\r\\n            totalValue += valuation;\\r\\n        }\\r\\n\\r\\n        require(totalValue > 0, 'Total value must be greater than 0');\\r\\n\\r\\n        uint256 toMint;\\r\\n\\r\\n        if (totalSupply == 0) {\\r\\n            toMint = totalValue * scalingFactor;\\r\\n        } else {\\r\\n            (uint256 totalLiquidity, ) = _computeTotalValuation();\\r\\n            require(totalLiquidity > 0, 'Total liquidity must be greater than 0');\\r\\n            toMint = ((totalValue * scalingFactor) * totalSupply) / (totalLiquidity * scalingFactor);\\r\\n        }\\r\\n        require(toMint != 0, 'Mint qty is 0');\\r\\n\\r\\n        _mint(to, toMint);\\r\\n\\r\\n        updateSlippage();\\r\\n\\r\\n        emit Mint(to, toMint);\\r\\n\\r\\n        return toMint;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Burns the pool tokens and transfers the underlying assets to the specified address.\\r\\n     * @param to The address to transfer the underlying assets to.\\r\\n     * @notice This function can only be called by the periphery contract.\\r\\n     * @notice The pool tokens must have a balance greater than 0.\\r\\n     * @notice The total supply of pool tokens must be greater than 0.\\r\\n     * @notice The function calculates the amounts of each underlying asset to transfer based on the share of pool tokens being burned.\\r\\n     * @notice A fee is deducted from the share of pool tokens being burned and transferred to the treasury address.\\r\\n     * @notice The function checks if the pool has sufficient liquidity before performing any transfers.\\r\\n     * @notice If any transfer fails, the function reverts the entire operation.\\r\\n     * @notice After the transfers, the function updates the reserves of the pool.\\r\\n     * @notice Emits a `Burn` event with the address and share of pool tokens burned.\\r\\n     */\\r\\n    function burn(address to) external onlyPeriphery returns (uint256[] memory) {\\r\\n        uint256 _BPS_FEE = registry.getBPS_FEE();\\r\\n        address periphery = registry.getBaluniPoolPeriphery();\\r\\n\\r\\n        uint256 share = balanceOf(address(this));\\r\\n        require(share > 0, 'Share must be greater than 0');\\r\\n\\r\\n        uint256 totalSupply = totalSupply();\\r\\n        require(totalSupply > 0, 'No liquidity');\\r\\n\\r\\n        uint256[] memory amounts = new uint256[](assetInfos.length);\\r\\n        uint256 fee = (share * _BPS_FEE) / 10000;\\r\\n        uint256 shareAfterFee = share - fee;\\r\\n\\r\\n        for (uint256 i = 0; i < assetInfos.length; i++) {\\r\\n            uint256 assetBalance = IBaluniV1PoolPeriphery(periphery).getAssetReserve(\\r\\n                address(this),\\r\\n                assetInfos[i].asset\\r\\n            );\\r\\n            amounts[i] = (assetBalance * shareAfterFee) / totalSupply;\\r\\n        }\\r\\n\\r\\n        require(balanceOf(address(this)) >= shareAfterFee, 'Insufficient BALUNI liquidity');\\r\\n\\r\\n        address treasury = registry.getTreasury();\\r\\n        bool feeTransferSuccess = IERC20(address(this)).transfer(treasury, fee);\\r\\n        require(feeTransferSuccess, 'Fee transfer failed');\\r\\n\\r\\n        _burn(address(this), shareAfterFee);\\r\\n\\r\\n        updateSlippage();\\r\\n\\r\\n        emit Burn(to, shareAfterFee);\\r\\n\\r\\n        return amounts;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Calculates the amount of `toToken` that will be received when swapping `fromToken` for `toToken`.\\r\\n     * @param fromToken The address of the token being swapped from.\\r\\n     * @param toToken The address of the token being swapped to.\\r\\n     * @param amount The amount of `fromToken` being swapped.\\r\\n     * @return The amount of `toToken` that will be received.\\r\\n     */\\r\\n    function getAmountOut(address fromToken, address toToken, uint256 amount) public view returns (uint256) {\\r\\n        IBaluniV1Oracle baluniOracle = IBaluniV1Oracle(registry.getBaluniOracle());\\r\\n        require(registry.getBaluniOracle() != address(0), 'Invalid oracle address');\\r\\n        uint256 amountOut = baluniOracle.convert(fromToken, toToken, amount);\\r\\n        return amountOut;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Performs rebalance\\r\\n     */\\r\\n    function performRebalanceIfNeeded()\\r\\n        external\\r\\n        onlyPeriphery\\r\\n        returns (uint256[] memory amountsToAdd, uint256[] memory amountsToRemove)\\r\\n    {\\r\\n        require(isRebalanceNeeded(), 'Rebalance not needed');\\r\\n        return _performRebalanceIfNeeded();\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the deviation between the current weights and target weights of the assets in the pool.\\r\\n     * @return directions An array of boolean values indicating whether the current weight is higher (true) or lower (false) than the target weight.\\r\\n     */\\r\\n    function getDeviation() public view returns (bool[] memory directions, uint256[] memory deviations) {\\r\\n        (uint256 totVal, uint256[] memory valuations) = _computeTotalValuation();\\r\\n        uint256 numAssets = assetInfos.length;\\r\\n\\r\\n        directions = new bool[](numAssets);\\r\\n        deviations = new uint256[](numAssets);\\r\\n\\r\\n        for (uint256 i = 0; i < numAssets; i++) {\\r\\n            uint256 currentWeight = (valuations[i] * 10000) / totVal;\\r\\n            uint256 targetWeight = assetInfos[i].weight;\\r\\n\\r\\n            if (currentWeight > targetWeight) {\\r\\n                deviations[i] = currentWeight - targetWeight;\\r\\n                directions[i] = true;\\r\\n            } else {\\r\\n                deviations[i] = targetWeight - currentWeight;\\r\\n                directions[i] = false;\\r\\n            }\\r\\n        }\\r\\n\\r\\n        return (directions, deviations);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the liquidity of a specific asset in the pool.\\r\\n     * @param assetIndex The index of the asset.\\r\\n     * @return The liquidity of the asset.\\r\\n     */\\r\\n    function assetLiquidity(uint256 assetIndex) external view returns (uint256) {\\r\\n        (, uint256[] memory usdValuations) = _computeTotalValuation();\\r\\n        require(assetIndex < usdValuations.length, 'Invalid asset index');\\r\\n        return usdValuations[assetIndex];\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Computes the total valuation of the pool and returns the total valuation and an array of individual valuations.\\r\\n     * @return totalVal The total valuation of the pool.\\r\\n     * @return valuations An array of individual valuations.\\r\\n     */\\r\\n    function computeTotalValuation() external view returns (uint256 totalVal, uint256[] memory valuations) {\\r\\n        (totalVal, valuations) = _computeTotalValuation();\\r\\n        return (totalVal, valuations);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the total liquidity of the pool.\\r\\n     * @return The total liquidity of the pool.\\r\\n     */\\r\\n    function liquidity() external view returns (uint256) {\\r\\n        (uint256 totalVal, ) = _computeTotalValuation();\\r\\n        return totalVal;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the unit price of the pool.\\r\\n     * @return The unit price of the pool.\\r\\n     */\\r\\n    function unitPrice() external view returns (uint256) {\\r\\n        uint256 baseDecimal = IERC20Metadata(baseAsset).decimals();\\r\\n        uint256 factor = 10 ** (18 - baseDecimal);\\r\\n        (uint256 totalVal, ) = _computeTotalValuation();\\r\\n        uint256 totalSupply = totalSupply();\\r\\n        if (totalSupply == 0) {\\r\\n            return 0;\\r\\n        }\\r\\n        return (((totalVal * factor) / totalSupply) * ONE);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns an array of reserves for each asset in the pool.\\r\\n     * @return An array of reserves.\\r\\n     */\\r\\n    function getReserves() public view returns (uint256[] memory) {\\r\\n        address periphery = registry.getBaluniPoolPeriphery();\\r\\n        return IBaluniV1PoolPeriphery(periphery).getReserves(address(this));\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the reserve amount of the specified asset.\\r\\n     * @param asset The address of the asset.\\r\\n     * @return The reserve amount of the asset.\\r\\n     */\\r\\n    function getAssetReserve(address asset) public view returns (uint256) {\\r\\n        address periphery = registry.getBaluniPoolPeriphery();\\r\\n        return IBaluniV1PoolPeriphery(periphery).getAssetReserve(address(this), asset);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Retrieves the list of assets in the pool.\\r\\n     * @return An array of addresses representing the assets.\\r\\n     */\\r\\n    function getAssets() external view returns (address[] memory) {\\r\\n        address[] memory assets = new address[](assetInfos.length);\\r\\n        for (uint256 i = 0; i < assetInfos.length; i++) {\\r\\n            assets[i] = assetInfos[i].asset;\\r\\n        }\\r\\n        return assets;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Retrieves the list of weights associated with the assets in the pool.\\r\\n     * @return An array of uint256 values representing the weights.\\r\\n     */\\r\\n    function getWeights() external view returns (uint256[] memory) {\\r\\n        uint256[] memory weights = new uint256[](assetInfos.length);\\r\\n        for (uint256 i = 0; i < assetInfos.length; i++) {\\r\\n            weights[i] = assetInfos[i].weight;\\r\\n        }\\r\\n        return weights;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Computes the total valuation of the assets in the pool.\\r\\n     * @return totalValuation The total valuation of the assets.\\r\\n     * @return valuations An array of valuations for each asset in the pool.\\r\\n     */\\r\\n    function _computeTotalValuation() internal view returns (uint256 totalValuation, uint256[] memory valuations) {\\r\\n        uint256 numAssets = assetInfos.length;\\r\\n        valuations = new uint256[](numAssets);\\r\\n        for (uint256 i = 0; i < numAssets; i++) {\\r\\n            address asset = assetInfos[i].asset;\\r\\n            uint256 assetReserve = getAssetReserve(address(asset));\\r\\n\\r\\n            if ((address(asset) == baseAsset)) {\\r\\n                valuations[i] = assetReserve;\\r\\n            } else {\\r\\n                uint256 valuation = _convertTokenToBase(address(asset), assetReserve);\\r\\n                valuations[i] = valuation;\\r\\n            }\\r\\n            totalValuation += valuations[i];\\r\\n        }\\r\\n        return (totalValuation, valuations);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Performs rebalance if needed.\\r\\n     * This function retrieves the assets and weights from the `assetInfos` array,\\r\\n     * and calls the `rebalance` function of the `rebalancer` contract with the retrieved values.\\r\\n     * It emits a `RebalancePerformed` event after the rebalance is performed.\\r\\n     * @notice This function should only be called internally.\\r\\n     */\\r\\n    function _performRebalanceIfNeeded() internal returns (uint256[] memory, uint256[] memory) {\\r\\n        address periphery = registry.getBaluniPoolPeriphery();\\r\\n        address rebalancer = registry.getBaluniRebalancer();\\r\\n\\r\\n        address[] memory assets = new address[](assetInfos.length);\\r\\n        uint256[] memory weights = new uint256[](assetInfos.length);\\r\\n        uint256[] memory peripheryBalancesB4 = new uint256[](assetInfos.length);\\r\\n        uint256[] memory peripheryBalancesAfter = new uint256[](assetInfos.length);\\r\\n        uint256[] memory amountsToAdd = new uint256[](assetInfos.length);\\r\\n        uint256[] memory amountsToRemove = new uint256[](assetInfos.length);\\r\\n\\r\\n        for (uint256 i = 0; i < assetInfos.length; i++) {\\r\\n            assets[i] = assetInfos[i].asset;\\r\\n            weights[i] = assetInfos[i].weight;\\r\\n            peripheryBalancesB4[i] = IERC20(assets[i]).balanceOf(periphery);\\r\\n        }\\r\\n\\r\\n        uint256[] memory balances = getReserves();\\r\\n\\r\\n        IBaluniV1Rebalancer(rebalancer).rebalance(balances, assets, weights, trigger, periphery, periphery, baseAsset);\\r\\n\\r\\n        for (uint256 i = 0; i < assetInfos.length; i++) {\\r\\n            peripheryBalancesAfter[i] = IERC20(assets[i]).balanceOf(periphery);\\r\\n\\r\\n            if (peripheryBalancesAfter[i] > peripheryBalancesB4[i]) {\\r\\n                amountsToAdd[i] = peripheryBalancesAfter[i] - peripheryBalancesB4[i];\\r\\n            } else {\\r\\n                amountsToRemove[i] = peripheryBalancesB4[i] - peripheryBalancesAfter[i];\\r\\n            }\\r\\n        }\\r\\n\\r\\n        emit RebalancePerformed(msg.sender, assets);\\r\\n\\r\\n        return (amountsToAdd, amountsToRemove);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Calculates the total added liquidity based on the amounts to add.\\r\\n     * @param amountsToAdd An array of amounts to add for each asset.\\r\\n     * @return totalAddedLiquidity The total added liquidity.\\r\\n     */\\r\\n    function _calculateTotalAddedLiquidity(\\r\\n        uint256[] memory amountsToAdd\\r\\n    ) internal view returns (uint256 totalAddedLiquidity) {\\r\\n        for (uint256 i = 0; i < assetInfos.length; i++) {\\r\\n            totalAddedLiquidity += amountsToAdd[i];\\r\\n        }\\r\\n        return totalAddedLiquidity;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Calculates the amounts to add to each asset based on the total valuation and current valuations.\\r\\n     * @param totalValuation The total valuation of the pool.\\r\\n     * @param valuations An array of current valuations for each asset.\\r\\n     * @return amountsToAdd An array of amounts to add to each asset.\\r\\n     */\\r\\n    function _calculateAmountsToAdd(\\r\\n        uint256 totalValuation,\\r\\n        uint256[] memory valuations\\r\\n    ) internal view returns (uint256[] memory amountsToAdd) {\\r\\n        amountsToAdd = new uint256[](assetInfos.length);\\r\\n        for (uint256 i = 0; i < assetInfos.length; i++) {\\r\\n            uint256 targetValuation = (totalValuation * assetInfos[i].weight) / 10000;\\r\\n            if (valuations[i] < targetValuation) {\\r\\n                amountsToAdd[i] = targetValuation - valuations[i];\\r\\n            }\\r\\n        }\\r\\n\\r\\n        return amountsToAdd;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Internal function to transfer tokens from the caller to the contract and calculate the liquidity.\\r\\n     * @param index The index of the asset in the assetInfos array.\\r\\n     * @param amountToAdd The amount of native tokens to add as liquidity.\\r\\n     */\\r\\n    function _calculateLiquidity(uint256 index, uint256 amountToAdd) internal view returns (uint256) {\\r\\n        if (assetInfos[index].asset == baseAsset) return amountToAdd;\\r\\n        uint256 tokenAmount = _convertBaseToToken(assetInfos[index].asset, amountToAdd);\\r\\n        require(tokenAmount > 0, 'Invalid token amount to add');\\r\\n        return tokenAmount;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Converts the specified amount of native token to the corresponding token amount.\\r\\n     * @param toToken The address of the native token to convert from.\\r\\n     * @param amount The amount of native token to convert.\\r\\n     * @return The corresponding token amount.\\r\\n     */\\r\\n    function _convertBaseToToken(address toToken, uint256 amount) internal view returns (uint256) {\\r\\n        return getAmountOut(baseAsset, toToken, amount);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Converts the specified token to the native token using the rebalancer contract.\\r\\n     * @param fromToken The address of the token to convert from.\\r\\n     * @param amount The amount of tokens to convert.\\r\\n     * @return tokenAmount The converted amount of tokens.\\r\\n     */\\r\\n    function _convertTokenToBase(address fromToken, uint256 amount) internal view returns (uint256 tokenAmount) {\\r\\n        return getAmountOut(fromToken, baseAsset, amount);\\r\\n    }\\r\\n\\r\\n    // return true if one of the deviation overcome the trigger\\r\\n    /**\\r\\n     * @dev Checks if rebalancing is needed for the pool.\\r\\n     * @return A boolean value indicating whether rebalancing is needed or not.\\r\\n     */\\r\\n    function isRebalanceNeeded() public view returns (bool) {\\r\\n        (bool[] memory directions, uint256[] memory deviations) = getDeviation();\\r\\n        for (uint256 i = 0; i < deviations.length; i++) {\\r\\n            if (directions[i] && deviations[i] > trigger) {\\r\\n                return true;\\r\\n            }\\r\\n        }\\r\\n        return false;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x5d3cad2f872c0cf5543f269758e54819cab5cfe5a5bd7f49b0fcf7df1679ad93\",\"license\":\"GNU AGPLv3\"},\"contracts/BaluniV1PoolFactory.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n/**\\r\\n *  __                  __                      __\\r\\n * /  |                /  |                    /  |\\r\\n * $$ |____    ______  $$ | __    __  _______  $$/\\r\\n * $$      \\\\  /      \\\\ $$ |/  |  /  |/       \\\\ /  |\\r\\n * $$$$$$$  | $$$$$$  |$$ |$$ |  $$ |$$$$$$$  |$$ |\\r\\n * $$ |  $$ | /    $$ |$$ |$$ |  $$ |$$ |  $$ |$$ |\\r\\n * $$ |__$$ |/$$$$$$$ |$$ |$$ \\\\__$$ |$$ |  $$ |$$ |\\r\\n * $$    $$/ $$    $$ |$$ |$$    $$/ $$ |  $$ |$$ |\\r\\n * $$$$$$$/   $$$$$$$/ $$/  $$$$$$/  $$/   $$/ $$/\\r\\n *\\r\\n *\\r\\n *                  ,-\\\"\\\"\\\"\\\"-.\\r\\n *                ,'      _ `.\\r\\n *               /       )_)  \\\\\\r\\n *              :              :\\r\\n *              \\\\              /\\r\\n *               \\\\            /\\r\\n *                `.        ,'\\r\\n *                  `.    ,'\\r\\n *                    `.,'\\r\\n *                     /\\\\`.   ,-._\\r\\n *                         `-'    \\\\__\\r\\n *                              .\\r\\n *               s                \\\\\\r\\n *                                \\\\\\\\\\r\\n *                                 \\\\\\\\\\r\\n *                                  >\\\\/7\\r\\n *                              _.-(6'  \\\\\\r\\n *                             (=___._/` \\\\\\r\\n *                                  )  \\\\ |\\r\\n *                                 /   / |\\r\\n *                                /    > /\\r\\n *                               j    < _\\\\\\r\\n *                           _.-' :      ``.\\r\\n *                           \\\\ r=._\\\\        `.\\r\\n */\\r\\nimport './BaluniV1Pool.sol';\\r\\nimport '@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol';\\r\\nimport '@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol';\\r\\nimport '@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol';\\r\\nimport './interfaces/IBaluniV1Registry.sol';\\r\\n\\r\\ncontract BaluniV1PoolFactory is Initializable, UUPSUpgradeable, OwnableUpgradeable {\\r\\n    address[] public allPools;\\r\\n\\r\\n    IBaluniV1Registry public registry;\\r\\n\\r\\n    mapping(address => mapping(address => address)) public getPool;\\r\\n\\r\\n    event PoolCreated(address indexed pool, address[] assets);\\r\\n\\r\\n    function initialize(address _register) public initializer {\\r\\n        __UUPSUpgradeable_init();\\r\\n        __Ownable_init(msg.sender);\\r\\n        registry = IBaluniV1Registry(_register);\\r\\n    }\\r\\n\\r\\n    function reinitialize(address _register, uint64 _version) public reinitializer(_version) {\\r\\n        registry = IBaluniV1Registry(_register);\\r\\n    }\\r\\n\\r\\n    function _authorizeUpgrade(address newImplementation) internal override onlyOwner {}\\r\\n\\r\\n    /**\\r\\n     * @dev Creates a new BaluniV1Pool contract and registers it in the factory.\\r\\n     * @param assets The array of asset addresses to be included in the pool.\\r\\n     * @param weights The array of weights corresponding to each asset in the pool.\\r\\n     * @param trigger The trigger value for rebalancing the pool.\\r\\n     * @return The address of the newly created pool.\\r\\n     */\\r\\n    function createPool(address[] memory assets, uint256[] memory weights, uint256 trigger) external returns (address) {\\r\\n        require(assets.length > 1, 'At least two assets are required');\\r\\n        require(assets.length == weights.length, 'Assets and weights length mismatch');\\r\\n\\r\\n        for (uint256 i = 0; i < assets.length; i++) {\\r\\n            for (uint256 j = i + 1; j < assets.length; j++) {\\r\\n                require(address(getPool[assets[i]][assets[j]]) == address(0), 'Pool already exists for this pair');\\r\\n            }\\r\\n        }\\r\\n\\r\\n        BaluniV1Pool newPool = new BaluniV1Pool(assets, weights, trigger, address(registry));\\r\\n\\r\\n        address poolAddress = address(newPool);\\r\\n\\r\\n        allPools.push(poolAddress);\\r\\n        for (uint256 i = 0; i < assets.length; i++) {\\r\\n            for (uint256 j = i + 1; j < assets.length; j++) {\\r\\n                getPool[assets[i]][assets[j]] = poolAddress;\\r\\n                getPool[assets[j]][assets[i]] = poolAddress;\\r\\n            }\\r\\n        }\\r\\n\\r\\n        emit PoolCreated(poolAddress, assets);\\r\\n\\r\\n        return poolAddress;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Retrieves all the pools created by the factory.\\r\\n     * @return An array of pool addresses.\\r\\n     */\\r\\n    function getAllPools() external view returns (address[] memory) {\\r\\n        return allPools;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Retrieves the number of pools created by the factory.\\r\\n     * @return The count of pools.\\r\\n     */\\r\\n    function getPoolsCount() external view returns (uint256) {\\r\\n        return allPools.length;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Retrieves the assets of a specific pool.\\r\\n     * @param poolAddress The address of the pool.\\r\\n     * @return An array of asset addresses.\\r\\n     */\\r\\n    function getPoolAssets(address poolAddress) external view returns (address[] memory) {\\r\\n        BaluniV1Pool pool = BaluniV1Pool(poolAddress);\\r\\n        return pool.getAssets();\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Retrieves the pool address based on the given assets.\\r\\n     * @param asset1 The address of the first asset.\\r\\n     * @param asset2 The address of the second asset.\\r\\n     * @return The address of the pool.\\r\\n     */\\r\\n    function getPoolByAssets(address asset1, address asset2) external view returns (address) {\\r\\n        return address(getPool[asset1][asset2]);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns an array of pool addresses that contain the specified token.\\r\\n     * @param token The address of the token to search for.\\r\\n     * @return An array of pool addresses.\\r\\n     */\\r\\n    function getPoolsByAsset(address token) external view returns (address[] memory) {\\r\\n        address[] memory pools = new address[](allPools.length);\\r\\n        uint256 count = 0;\\r\\n\\r\\n        for (uint256 i = 0; i < allPools.length; i++) {\\r\\n            BaluniV1Pool pool = BaluniV1Pool(allPools[i]);\\r\\n            address[] memory assets = pool.getAssets();\\r\\n\\r\\n            for (uint256 j = 0; j < assets.length; j++) {\\r\\n                if (assets[j] == token) {\\r\\n                    pools[count] = address(pool);\\r\\n                    count++;\\r\\n                    break;\\r\\n                }\\r\\n            }\\r\\n\\r\\n            if (count == pools.length) {\\r\\n                break;\\r\\n            }\\r\\n        }\\r\\n\\r\\n        address[] memory result = new address[](count);\\r\\n        for (uint256 i = 0; i < count; i++) {\\r\\n            result[i] = pools[i];\\r\\n        }\\r\\n\\r\\n        return result;\\r\\n    }\\r\\n\\r\\n    function poolExist(address _pool) external view returns (bool) {\\r\\n        for (uint256 i = 0; i < allPools.length; i++) {\\r\\n            if (allPools[i] == _pool) {\\r\\n                return true;\\r\\n            }\\r\\n        }\\r\\n        return false;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x1321c1404f360e3eddbb24fc343ba2d7d3a0bd8091df557d3b3d5a4f9e689124\",\"license\":\"GNU AGPLv3\"},\"contracts/interfaces/IBaluniV1Oracle.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n\\r\\ninterface IBaluniV1Oracle {\\r\\n    function convert(address fromToken, address toToken, uint256 amount) external view returns (uint256 valuation);\\r\\n\\r\\n    function convertScaled(\\r\\n        address fromToken,\\r\\n        address toToken,\\r\\n        uint256 amount\\r\\n    ) external view returns (uint256 valuation);\\r\\n}\\r\\n\",\"keccak256\":\"0x2bc62f7640b15a1772de630216f6fe6aa7a719cb6cf0255befdde19ec8de785a\",\"license\":\"GNU AGPLv3\"},\"contracts/interfaces/IBaluniV1PoolPeriphery.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n\\r\\n/**\\r\\n * @title IBaluniV1PoolPeriphery\\r\\n * @dev Interface for the BaluniV1PoolPeriphery contract.\\r\\n */\\r\\ninterface IBaluniV1PoolPeriphery {\\r\\n    /**\\r\\n     * @dev Swaps tokens in a BaluniV1Pool.\\r\\n     * @param fromToken The address of the token to swap from.\\r\\n     * @param toToken The address of the token to swap to.\\r\\n     * @param amount The amount of tokens to swap.\\r\\n     * @param receiver The address of the receiver.\\r\\n     * @return The amount of tokens received after the swap.\\r\\n     */\\r\\n    function swap(address fromToken, address toToken, uint256 amount, address receiver) external returns (uint256);\\r\\n\\r\\n    /**\\r\\n     * @dev Performs batch swaps between multiple token pairs.\\r\\n     * @param fromTokens An array of addresses representing the tokens to swap from.\\r\\n     * @param toTokens An array of addresses representing the tokens to swap to.\\r\\n     * @param amounts An array of amounts representing the amounts to swap.\\r\\n     * @param receivers An array of addresses representing the receivers of the swapped tokens.\\r\\n     * @return An array of amounts representing the amounts of tokens received after the swaps.\\r\\n     */\\r\\n    function batchSwap(\\r\\n        address[] calldata fromTokens,\\r\\n        address[] calldata toTokens,\\r\\n        uint256[] calldata amounts,\\r\\n        address[] calldata receivers\\r\\n    ) external returns (uint256[] memory);\\r\\n\\r\\n    /**\\r\\n     * @dev Rebalances weights in a pool.\\r\\n     * @param poolAddress The address of the pool.\\r\\n     * @param receiver The address of the receiver.\\r\\n     */\\r\\n    function rebalanceWeights(address poolAddress, address receiver) external;\\r\\n\\r\\n    /**\\r\\n     * @dev Adds liquidity to a BaluniV1Pool.\\r\\n     * @param amounts An array of amounts for each asset to add as liquidity.\\r\\n     * @param poolAddress The address of the pool.\\r\\n     * @param receiver The address of the receiver.\\r\\n     */\\r\\n    function addLiquidity(uint256[] memory amounts, address poolAddress, address receiver) external returns (uint256);\\r\\n\\r\\n    /**\\r\\n     * @dev Removes liquidity from a BaluniV1Pool.\\r\\n     * @param share The amount of liquidity tokens to remove.\\r\\n     * @param poolAddress The address of the pool.\\r\\n     * @param receiver The address of the receiver.\\r\\n     */\\r\\n    function removeLiquidity(uint256 share, address poolAddress, address receiver) external;\\r\\n\\r\\n    /**\\r\\n     * @dev Gets the amount of tokens received after a swap in a BaluniV1Pool.\\r\\n     * @param fromToken The address of the token to swap from.\\r\\n     * @param toToken The address of the token to swap to.\\r\\n     * @param amount The amount of tokens to swap.\\r\\n     * @return The amount of tokens received after the swap.\\r\\n     */\\r\\n    function getAmountOut(address fromToken, address toToken, uint256 amount) external view returns (uint256);\\r\\n\\r\\n    /**\\r\\n     * @dev Performs rebalance if needed for the given tokens.\\r\\n     * @param poolAddress The address of the token pool to rebalance.\\r\\n     */\\r\\n    function performRebalanceIfNeeded(address poolAddress) external;\\r\\n\\r\\n    /**\\r\\n     * @dev Returns an array of pool addresses that contain the given token.\\r\\n     * @param token The address of the token to search for.\\r\\n     * @return An array of pool addresses.\\r\\n     */\\r\\n    function getPoolsContainingToken(address token) external view returns (address[] memory);\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the version of the contract.\\r\\n     * @return The version string.\\r\\n     */\\r\\n    function getVersion() external view returns (uint64);\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the reserves of the pool.\\r\\n     * @param pool The address of the pool.\\r\\n     * @return An array of reserves.\\r\\n     */\\r\\n    function getReserves(address pool) external view returns (uint256[] memory);\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the reserve of a specific asset in a pool.\\r\\n     * @param pool The address of the pool.\\r\\n     * @param asset The address of the asset.\\r\\n     * @return The reserve of the asset.\\r\\n     */\\r\\n    function getAssetReserve(address pool, address asset) external view returns (uint256);\\r\\n}\\r\\n\",\"keccak256\":\"0x0d208337a9258876165804a1e3158e005dcdab6f38ced9147d2b05d951a0f54c\",\"license\":\"GNU AGPLv3\"},\"contracts/interfaces/IBaluniV1Rebalancer.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n\\r\\ninterface IBaluniV1Rebalancer {\\r\\n    struct RebalanceVars {\\r\\n        uint256 length;\\r\\n        uint256 totalValue;\\r\\n        uint256 finalUsdBalance;\\r\\n        uint256 overweightVaultsLength;\\r\\n        uint256 underweightVaultsLength;\\r\\n        uint256 totalActiveWeight;\\r\\n        uint256 amountOut;\\r\\n        uint256[] overweightVaults;\\r\\n        uint256[] overweightAmounts;\\r\\n        uint256[] underweightVaults;\\r\\n        uint256[] underweightAmounts;\\r\\n        uint256[] balances;\\r\\n    }\\r\\n\\r\\n    // Functions\\r\\n    function rebalance(\\r\\n        uint256[] memory balances,\\r\\n        address[] calldata assets,\\r\\n        uint256[] calldata weights,\\r\\n        uint256 limit,\\r\\n        address sender,\\r\\n        address receiver,\\r\\n        address baseAsset\\r\\n    ) external;\\r\\n\\r\\n    function checkRebalance(\\r\\n        uint256[] memory balances,\\r\\n        address[] calldata assets,\\r\\n        uint256[] calldata weights,\\r\\n        uint256 limit,\\r\\n        address sender,\\r\\n        address baseAsset\\r\\n    ) external view returns (RebalanceVars memory);\\r\\n\\r\\n    function convert(address fromToken, address toToken, uint256 amount) external view returns (uint256);\\r\\n}\\r\\n\",\"keccak256\":\"0x61c44c9208ab5c5638160706c4737e8032440e73054a90378d0b65559653d57a\",\"license\":\"GNU AGPLv3\"},\"contracts/interfaces/IBaluniV1Registry.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n\\r\\n/**\\r\\n * @title IBaluniV1Registry\\r\\n * @dev Interface for the BaluniV1Registry contract.\\r\\n */\\r\\ninterface IBaluniV1Registry {\\r\\n    function setUniswapFactory(address _uniswapFactory) external;\\r\\n\\r\\n    function setUniswapRouter(address _uniswapRouter) external;\\r\\n\\r\\n    function setBaluniAgentFactory(address _baluniAgentFactory) external;\\r\\n\\r\\n    function setBaluniPoolPeriphery(address _baluniPoolPeriphery) external;\\r\\n\\r\\n    function setBaluniSwapper(address _baluniSwapper) external;\\r\\n\\r\\n    function setBaluniOracle(address _baluniOracle) external;\\r\\n\\r\\n    function setBaluniPoolFactory(address _baluniPoolFactory) external;\\r\\n\\r\\n    function setBaluniRebalancer(address _baluniRebalancer) external;\\r\\n\\r\\n    function setBaluniRouter(address _baluniRouter) external;\\r\\n\\r\\n    function setBaluniRegistry(address _baluniRegistry) external;\\r\\n\\r\\n    function setWNATIVE(address _WNATIVE) external;\\r\\n\\r\\n    function setUSDC(address _USDC) external;\\r\\n\\r\\n    function setTreasury(address _treasury) external;\\r\\n\\r\\n    function set1inchSpotAgg(address __1inchSpotAgg) external;\\r\\n\\r\\n    function setBPS_FEE(uint256 __BPS_FEE) external;\\r\\n\\r\\n    function getUniswapFactory() external view returns (address);\\r\\n\\r\\n    function getUniswapRouter() external view returns (address);\\r\\n\\r\\n    function getBaluniSwapper() external view returns (address);\\r\\n\\r\\n    function getBaluniOracle() external view returns (address);\\r\\n\\r\\n    function getBaluniAgentFactory() external view returns (address);\\r\\n\\r\\n    function getBaluniPoolPeriphery() external view returns (address);\\r\\n\\r\\n    function getBaluniPoolFactory() external view returns (address);\\r\\n\\r\\n    function getBaluniRebalancer() external view returns (address);\\r\\n\\r\\n    function getBaluniRouter() external view returns (address);\\r\\n\\r\\n    function getBaluniRegistry() external view returns (address);\\r\\n\\r\\n    function getWNATIVE() external view returns (address);\\r\\n\\r\\n    function getUSDC() external view returns (address);\\r\\n\\r\\n    function get1inchSpotAgg() external view returns (address);\\r\\n\\r\\n    function getBPS_FEE() external view returns (uint256);\\r\\n\\r\\n    function getMAX_BPS_FEE() external view returns (uint256);\\r\\n\\r\\n    function getBPS_BASE() external view returns (uint256);\\r\\n\\r\\n    function getTreasury() external view returns (address);\\r\\n\\r\\n    function setStaticOracle(address _staticOracle) external;\\r\\n\\r\\n    function getStaticOracle() external view returns (address);\\r\\n}\\r\\n\",\"keccak256\":\"0x846d9e23f2a9579307f6f9b453f9426e1083b2f550bb999315a4abc32a648570\",\"license\":\"GNU AGPLv3\"},\"contracts/libs/DSMath.sol\":{\"content\":\"/// math.sol -- mixin for inline numerical wizardry\\r\\n\\r\\n// This program is free software: you can redistribute it and/or modify\\r\\n// it under the terms of the GNU General Public License as published by\\r\\n// the Free Software Foundation, either version 3 of the License, or\\r\\n// (at your option) any later version.\\r\\n\\r\\n// This program is distributed in the hope that it will be useful,\\r\\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\\r\\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\r\\n// GNU General Public License for more details.\\r\\n\\r\\n// You should have received a copy of the GNU General Public License\\r\\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\\r\\n\\r\\n// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity 0.8.25;\\r\\n\\r\\nlibrary DSMath {\\r\\n    uint256 public constant WAD = 10 ** 18;\\r\\n    uint256 public constant RAY = 10 ** 27;\\r\\n\\r\\n    //rounds to zero if x*y < WAD / 2\\r\\n    function wmul(uint256 x, uint256 y) internal pure returns (uint256) {\\r\\n        return ((x * y) + (WAD / 2)) / WAD;\\r\\n    }\\r\\n\\r\\n    //rounds to zero if x*y < WAD / 2\\r\\n    function wdiv(uint256 x, uint256 y) internal pure returns (uint256) {\\r\\n        return ((x * WAD) + (y / 2)) / y;\\r\\n    }\\r\\n\\r\\n    function reciprocal(uint256 x) internal pure returns (uint256) {\\r\\n        return wdiv(WAD, x);\\r\\n    }\\r\\n\\r\\n    // This famous algorithm is called \\\"exponentiation by squaring\\\"\\r\\n    // and calculates x^n with x as fixed-point and n as regular unsigned.\\r\\n    //\\r\\n    // It's O(log n), instead of O(n) for naive repeated multiplication.\\r\\n    //\\r\\n    // These facts are why it works:\\r\\n    //\\r\\n    //  If n is even, then x^n = (x^2)^(n/2).\\r\\n    //  If n is odd,  then x^n = x * x^(n-1),\\r\\n    //   and applying the equation for even x gives\\r\\n    //    x^n = x * (x^2)^((n-1) / 2).\\r\\n    //\\r\\n    //  Also, EVM division is flooring and\\r\\n    //    floor[(n-1) / 2] = floor[n / 2].\\r\\n    //\\r\\n    function rpow(uint256 x, uint256 n) internal pure returns (uint256 z) {\\r\\n        z = n % 2 != 0 ? x : RAY;\\r\\n\\r\\n        for (n /= 2; n != 0; n /= 2) {\\r\\n            x = rmul(x, x);\\r\\n\\r\\n            if (n % 2 != 0) {\\r\\n                z = rmul(z, x);\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    //rounds to zero if x*y < WAD / 2\\r\\n    function rmul(uint256 x, uint256 y) internal pure returns (uint256 z) {\\r\\n        z = ((x * y) + (RAY / 2)) / RAY;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xcca02b43a015cb2ab00f363742d17518d3ff6267b3ed20bdaaf7798022fd6893\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":4612,"contract":"contracts/BaluniV1PoolFactory.sol:BaluniV1PoolFactory","label":"allPools","offset":0,"slot":"0","type":"t_array(t_address)dyn_storage"},{"astId":4615,"contract":"contracts/BaluniV1PoolFactory.sol:BaluniV1PoolFactory","label":"registry","offset":0,"slot":"1","type":"t_contract(IBaluniV1Registry)5472"},{"astId":4621,"contract":"contracts/BaluniV1PoolFactory.sol:BaluniV1PoolFactory","label":"getPool","offset":0,"slot":"2","type":"t_mapping(t_address,t_mapping(t_address,t_address))"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_address)dyn_storage":{"base":"t_address","encoding":"dynamic_array","label":"address[]","numberOfBytes":"32"},"t_contract(IBaluniV1Registry)5472":{"encoding":"inplace","label":"contract IBaluniV1Registry","numberOfBytes":"20"},"t_mapping(t_address,t_address)":{"encoding":"mapping","key":"t_address","label":"mapping(address => address)","numberOfBytes":"32","value":"t_address"},"t_mapping(t_address,t_mapping(t_address,t_address))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => address))","numberOfBytes":"32","value":"t_mapping(t_address,t_address)"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interfaces/IBaluniV1Oracle.sol":{"IBaluniV1Oracle":{"abi":[{"inputs":[{"internalType":"address","name":"fromToken","type":"address"},{"internalType":"address","name":"toToken","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"convert","outputs":[{"internalType":"uint256","name":"valuation","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"fromToken","type":"address"},{"internalType":"address","name":"toToken","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"convertScaled","outputs":[{"internalType":"uint256","name":"valuation","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"convert(address,address,uint256)":"248391ff","convertScaled(address,address,uint256)":"b27b5e75"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"toToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"convert\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"valuation\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"toToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"convertScaled\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"valuation\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IBaluniV1Oracle.sol\":\"IBaluniV1Oracle\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IBaluniV1Oracle.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n\\r\\ninterface IBaluniV1Oracle {\\r\\n    function convert(address fromToken, address toToken, uint256 amount) external view returns (uint256 valuation);\\r\\n\\r\\n    function convertScaled(\\r\\n        address fromToken,\\r\\n        address toToken,\\r\\n        uint256 amount\\r\\n    ) external view returns (uint256 valuation);\\r\\n}\\r\\n\",\"keccak256\":\"0x2bc62f7640b15a1772de630216f6fe6aa7a719cb6cf0255befdde19ec8de785a\",\"license\":\"GNU AGPLv3\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interfaces/IBaluniV1PoolPeriphery.sol":{"IBaluniV1PoolPeriphery":{"abi":[{"inputs":[{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"address","name":"poolAddress","type":"address"},{"internalType":"address","name":"receiver","type":"address"}],"name":"addLiquidity","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"fromTokens","type":"address[]"},{"internalType":"address[]","name":"toTokens","type":"address[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"address[]","name":"receivers","type":"address[]"}],"name":"batchSwap","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"fromToken","type":"address"},{"internalType":"address","name":"toToken","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"getAmountOut","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"address","name":"asset","type":"address"}],"name":"getAssetReserve","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"getPoolsContainingToken","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"}],"name":"getReserves","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getVersion","outputs":[{"internalType":"uint64","name":"","type":"uint64"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"poolAddress","type":"address"}],"name":"performRebalanceIfNeeded","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"poolAddress","type":"address"},{"internalType":"address","name":"receiver","type":"address"}],"name":"rebalanceWeights","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"share","type":"uint256"},{"internalType":"address","name":"poolAddress","type":"address"},{"internalType":"address","name":"receiver","type":"address"}],"name":"removeLiquidity","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"fromToken","type":"address"},{"internalType":"address","name":"toToken","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"receiver","type":"address"}],"name":"swap","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface for the BaluniV1PoolPeriphery contract.","kind":"dev","methods":{"addLiquidity(uint256[],address,address)":{"details":"Adds liquidity to a BaluniV1Pool.","params":{"amounts":"An array of amounts for each asset to add as liquidity.","poolAddress":"The address of the pool.","receiver":"The address of the receiver."}},"batchSwap(address[],address[],uint256[],address[])":{"details":"Performs batch swaps between multiple token pairs.","params":{"amounts":"An array of amounts representing the amounts to swap.","fromTokens":"An array of addresses representing the tokens to swap from.","receivers":"An array of addresses representing the receivers of the swapped tokens.","toTokens":"An array of addresses representing the tokens to swap to."},"returns":{"_0":"An array of amounts representing the amounts of tokens received after the swaps."}},"getAmountOut(address,address,uint256)":{"details":"Gets the amount of tokens received after a swap in a BaluniV1Pool.","params":{"amount":"The amount of tokens to swap.","fromToken":"The address of the token to swap from.","toToken":"The address of the token to swap to."},"returns":{"_0":"The amount of tokens received after the swap."}},"getAssetReserve(address,address)":{"details":"Returns the reserve of a specific asset in a pool.","params":{"asset":"The address of the asset.","pool":"The address of the pool."},"returns":{"_0":"The reserve of the asset."}},"getPoolsContainingToken(address)":{"details":"Returns an array of pool addresses that contain the given token.","params":{"token":"The address of the token to search for."},"returns":{"_0":"An array of pool addresses."}},"getReserves(address)":{"details":"Returns the reserves of the pool.","params":{"pool":"The address of the pool."},"returns":{"_0":"An array of reserves."}},"getVersion()":{"details":"Returns the version of the contract.","returns":{"_0":"The version string."}},"performRebalanceIfNeeded(address)":{"details":"Performs rebalance if needed for the given tokens.","params":{"poolAddress":"The address of the token pool to rebalance."}},"rebalanceWeights(address,address)":{"details":"Rebalances weights in a pool.","params":{"poolAddress":"The address of the pool.","receiver":"The address of the receiver."}},"removeLiquidity(uint256,address,address)":{"details":"Removes liquidity from a BaluniV1Pool.","params":{"poolAddress":"The address of the pool.","receiver":"The address of the receiver.","share":"The amount of liquidity tokens to remove."}},"swap(address,address,uint256,address)":{"details":"Swaps tokens in a BaluniV1Pool.","params":{"amount":"The amount of tokens to swap.","fromToken":"The address of the token to swap from.","receiver":"The address of the receiver.","toToken":"The address of the token to swap to."},"returns":{"_0":"The amount of tokens received after the swap."}}},"title":"IBaluniV1PoolPeriphery","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"addLiquidity(uint256[],address,address)":"ec0cd2eb","batchSwap(address[],address[],uint256[],address[])":"e74e9b06","getAmountOut(address,address,uint256)":"4aa06652","getAssetReserve(address,address)":"a3e113fb","getPoolsContainingToken(address)":"ae3cce1c","getReserves(address)":"3e99c1e4","getVersion()":"0d8e6e2c","performRebalanceIfNeeded(address)":"5568081a","rebalanceWeights(address,address)":"ad414263","removeLiquidity(uint256,address,address)":"f31abcc4","swap(address,address,uint256,address)":"6e81221c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"poolAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"addLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"fromTokens\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"toTokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"receivers\",\"type\":\"address[]\"}],\"name\":\"batchSwap\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"toToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"getAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getAssetReserve\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getPoolsContainingToken\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"getReserves\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVersion\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"poolAddress\",\"type\":\"address\"}],\"name\":\"performRebalanceIfNeeded\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"poolAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"rebalanceWeights\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"share\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"poolAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"removeLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"toToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the BaluniV1PoolPeriphery contract.\",\"kind\":\"dev\",\"methods\":{\"addLiquidity(uint256[],address,address)\":{\"details\":\"Adds liquidity to a BaluniV1Pool.\",\"params\":{\"amounts\":\"An array of amounts for each asset to add as liquidity.\",\"poolAddress\":\"The address of the pool.\",\"receiver\":\"The address of the receiver.\"}},\"batchSwap(address[],address[],uint256[],address[])\":{\"details\":\"Performs batch swaps between multiple token pairs.\",\"params\":{\"amounts\":\"An array of amounts representing the amounts to swap.\",\"fromTokens\":\"An array of addresses representing the tokens to swap from.\",\"receivers\":\"An array of addresses representing the receivers of the swapped tokens.\",\"toTokens\":\"An array of addresses representing the tokens to swap to.\"},\"returns\":{\"_0\":\"An array of amounts representing the amounts of tokens received after the swaps.\"}},\"getAmountOut(address,address,uint256)\":{\"details\":\"Gets the amount of tokens received after a swap in a BaluniV1Pool.\",\"params\":{\"amount\":\"The amount of tokens to swap.\",\"fromToken\":\"The address of the token to swap from.\",\"toToken\":\"The address of the token to swap to.\"},\"returns\":{\"_0\":\"The amount of tokens received after the swap.\"}},\"getAssetReserve(address,address)\":{\"details\":\"Returns the reserve of a specific asset in a pool.\",\"params\":{\"asset\":\"The address of the asset.\",\"pool\":\"The address of the pool.\"},\"returns\":{\"_0\":\"The reserve of the asset.\"}},\"getPoolsContainingToken(address)\":{\"details\":\"Returns an array of pool addresses that contain the given token.\",\"params\":{\"token\":\"The address of the token to search for.\"},\"returns\":{\"_0\":\"An array of pool addresses.\"}},\"getReserves(address)\":{\"details\":\"Returns the reserves of the pool.\",\"params\":{\"pool\":\"The address of the pool.\"},\"returns\":{\"_0\":\"An array of reserves.\"}},\"getVersion()\":{\"details\":\"Returns the version of the contract.\",\"returns\":{\"_0\":\"The version string.\"}},\"performRebalanceIfNeeded(address)\":{\"details\":\"Performs rebalance if needed for the given tokens.\",\"params\":{\"poolAddress\":\"The address of the token pool to rebalance.\"}},\"rebalanceWeights(address,address)\":{\"details\":\"Rebalances weights in a pool.\",\"params\":{\"poolAddress\":\"The address of the pool.\",\"receiver\":\"The address of the receiver.\"}},\"removeLiquidity(uint256,address,address)\":{\"details\":\"Removes liquidity from a BaluniV1Pool.\",\"params\":{\"poolAddress\":\"The address of the pool.\",\"receiver\":\"The address of the receiver.\",\"share\":\"The amount of liquidity tokens to remove.\"}},\"swap(address,address,uint256,address)\":{\"details\":\"Swaps tokens in a BaluniV1Pool.\",\"params\":{\"amount\":\"The amount of tokens to swap.\",\"fromToken\":\"The address of the token to swap from.\",\"receiver\":\"The address of the receiver.\",\"toToken\":\"The address of the token to swap to.\"},\"returns\":{\"_0\":\"The amount of tokens received after the swap.\"}}},\"title\":\"IBaluniV1PoolPeriphery\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IBaluniV1PoolPeriphery.sol\":\"IBaluniV1PoolPeriphery\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IBaluniV1PoolPeriphery.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n\\r\\n/**\\r\\n * @title IBaluniV1PoolPeriphery\\r\\n * @dev Interface for the BaluniV1PoolPeriphery contract.\\r\\n */\\r\\ninterface IBaluniV1PoolPeriphery {\\r\\n    /**\\r\\n     * @dev Swaps tokens in a BaluniV1Pool.\\r\\n     * @param fromToken The address of the token to swap from.\\r\\n     * @param toToken The address of the token to swap to.\\r\\n     * @param amount The amount of tokens to swap.\\r\\n     * @param receiver The address of the receiver.\\r\\n     * @return The amount of tokens received after the swap.\\r\\n     */\\r\\n    function swap(address fromToken, address toToken, uint256 amount, address receiver) external returns (uint256);\\r\\n\\r\\n    /**\\r\\n     * @dev Performs batch swaps between multiple token pairs.\\r\\n     * @param fromTokens An array of addresses representing the tokens to swap from.\\r\\n     * @param toTokens An array of addresses representing the tokens to swap to.\\r\\n     * @param amounts An array of amounts representing the amounts to swap.\\r\\n     * @param receivers An array of addresses representing the receivers of the swapped tokens.\\r\\n     * @return An array of amounts representing the amounts of tokens received after the swaps.\\r\\n     */\\r\\n    function batchSwap(\\r\\n        address[] calldata fromTokens,\\r\\n        address[] calldata toTokens,\\r\\n        uint256[] calldata amounts,\\r\\n        address[] calldata receivers\\r\\n    ) external returns (uint256[] memory);\\r\\n\\r\\n    /**\\r\\n     * @dev Rebalances weights in a pool.\\r\\n     * @param poolAddress The address of the pool.\\r\\n     * @param receiver The address of the receiver.\\r\\n     */\\r\\n    function rebalanceWeights(address poolAddress, address receiver) external;\\r\\n\\r\\n    /**\\r\\n     * @dev Adds liquidity to a BaluniV1Pool.\\r\\n     * @param amounts An array of amounts for each asset to add as liquidity.\\r\\n     * @param poolAddress The address of the pool.\\r\\n     * @param receiver The address of the receiver.\\r\\n     */\\r\\n    function addLiquidity(uint256[] memory amounts, address poolAddress, address receiver) external returns (uint256);\\r\\n\\r\\n    /**\\r\\n     * @dev Removes liquidity from a BaluniV1Pool.\\r\\n     * @param share The amount of liquidity tokens to remove.\\r\\n     * @param poolAddress The address of the pool.\\r\\n     * @param receiver The address of the receiver.\\r\\n     */\\r\\n    function removeLiquidity(uint256 share, address poolAddress, address receiver) external;\\r\\n\\r\\n    /**\\r\\n     * @dev Gets the amount of tokens received after a swap in a BaluniV1Pool.\\r\\n     * @param fromToken The address of the token to swap from.\\r\\n     * @param toToken The address of the token to swap to.\\r\\n     * @param amount The amount of tokens to swap.\\r\\n     * @return The amount of tokens received after the swap.\\r\\n     */\\r\\n    function getAmountOut(address fromToken, address toToken, uint256 amount) external view returns (uint256);\\r\\n\\r\\n    /**\\r\\n     * @dev Performs rebalance if needed for the given tokens.\\r\\n     * @param poolAddress The address of the token pool to rebalance.\\r\\n     */\\r\\n    function performRebalanceIfNeeded(address poolAddress) external;\\r\\n\\r\\n    /**\\r\\n     * @dev Returns an array of pool addresses that contain the given token.\\r\\n     * @param token The address of the token to search for.\\r\\n     * @return An array of pool addresses.\\r\\n     */\\r\\n    function getPoolsContainingToken(address token) external view returns (address[] memory);\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the version of the contract.\\r\\n     * @return The version string.\\r\\n     */\\r\\n    function getVersion() external view returns (uint64);\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the reserves of the pool.\\r\\n     * @param pool The address of the pool.\\r\\n     * @return An array of reserves.\\r\\n     */\\r\\n    function getReserves(address pool) external view returns (uint256[] memory);\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the reserve of a specific asset in a pool.\\r\\n     * @param pool The address of the pool.\\r\\n     * @param asset The address of the asset.\\r\\n     * @return The reserve of the asset.\\r\\n     */\\r\\n    function getAssetReserve(address pool, address asset) external view returns (uint256);\\r\\n}\\r\\n\",\"keccak256\":\"0x0d208337a9258876165804a1e3158e005dcdab6f38ced9147d2b05d951a0f54c\",\"license\":\"GNU AGPLv3\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interfaces/IBaluniV1Rebalancer.sol":{"IBaluniV1Rebalancer":{"abi":[{"inputs":[{"internalType":"uint256[]","name":"balances","type":"uint256[]"},{"internalType":"address[]","name":"assets","type":"address[]"},{"internalType":"uint256[]","name":"weights","type":"uint256[]"},{"internalType":"uint256","name":"limit","type":"uint256"},{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"baseAsset","type":"address"}],"name":"checkRebalance","outputs":[{"components":[{"internalType":"uint256","name":"length","type":"uint256"},{"internalType":"uint256","name":"totalValue","type":"uint256"},{"internalType":"uint256","name":"finalUsdBalance","type":"uint256"},{"internalType":"uint256","name":"overweightVaultsLength","type":"uint256"},{"internalType":"uint256","name":"underweightVaultsLength","type":"uint256"},{"internalType":"uint256","name":"totalActiveWeight","type":"uint256"},{"internalType":"uint256","name":"amountOut","type":"uint256"},{"internalType":"uint256[]","name":"overweightVaults","type":"uint256[]"},{"internalType":"uint256[]","name":"overweightAmounts","type":"uint256[]"},{"internalType":"uint256[]","name":"underweightVaults","type":"uint256[]"},{"internalType":"uint256[]","name":"underweightAmounts","type":"uint256[]"},{"internalType":"uint256[]","name":"balances","type":"uint256[]"}],"internalType":"struct IBaluniV1Rebalancer.RebalanceVars","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"fromToken","type":"address"},{"internalType":"address","name":"toToken","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"convert","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256[]","name":"balances","type":"uint256[]"},{"internalType":"address[]","name":"assets","type":"address[]"},{"internalType":"uint256[]","name":"weights","type":"uint256[]"},{"internalType":"uint256","name":"limit","type":"uint256"},{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"receiver","type":"address"},{"internalType":"address","name":"baseAsset","type":"address"}],"name":"rebalance","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"checkRebalance(uint256[],address[],uint256[],uint256,address,address)":"997146f5","convert(address,address,uint256)":"248391ff","rebalance(uint256[],address[],uint256[],uint256,address,address,address)":"f0bf7714"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"balances\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"weights\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"baseAsset\",\"type\":\"address\"}],\"name\":\"checkRebalance\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"finalUsdBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"overweightVaultsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"underweightVaultsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalActiveWeight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"overweightVaults\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"overweightAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"underweightVaults\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"underweightAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"balances\",\"type\":\"uint256[]\"}],\"internalType\":\"struct IBaluniV1Rebalancer.RebalanceVars\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"toToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"convert\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"balances\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"weights\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"baseAsset\",\"type\":\"address\"}],\"name\":\"rebalance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IBaluniV1Rebalancer.sol\":\"IBaluniV1Rebalancer\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IBaluniV1Rebalancer.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n\\r\\ninterface IBaluniV1Rebalancer {\\r\\n    struct RebalanceVars {\\r\\n        uint256 length;\\r\\n        uint256 totalValue;\\r\\n        uint256 finalUsdBalance;\\r\\n        uint256 overweightVaultsLength;\\r\\n        uint256 underweightVaultsLength;\\r\\n        uint256 totalActiveWeight;\\r\\n        uint256 amountOut;\\r\\n        uint256[] overweightVaults;\\r\\n        uint256[] overweightAmounts;\\r\\n        uint256[] underweightVaults;\\r\\n        uint256[] underweightAmounts;\\r\\n        uint256[] balances;\\r\\n    }\\r\\n\\r\\n    // Functions\\r\\n    function rebalance(\\r\\n        uint256[] memory balances,\\r\\n        address[] calldata assets,\\r\\n        uint256[] calldata weights,\\r\\n        uint256 limit,\\r\\n        address sender,\\r\\n        address receiver,\\r\\n        address baseAsset\\r\\n    ) external;\\r\\n\\r\\n    function checkRebalance(\\r\\n        uint256[] memory balances,\\r\\n        address[] calldata assets,\\r\\n        uint256[] calldata weights,\\r\\n        uint256 limit,\\r\\n        address sender,\\r\\n        address baseAsset\\r\\n    ) external view returns (RebalanceVars memory);\\r\\n\\r\\n    function convert(address fromToken, address toToken, uint256 amount) external view returns (uint256);\\r\\n}\\r\\n\",\"keccak256\":\"0x61c44c9208ab5c5638160706c4737e8032440e73054a90378d0b65559653d57a\",\"license\":\"GNU AGPLv3\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interfaces/IBaluniV1Registry.sol":{"IBaluniV1Registry":{"abi":[{"inputs":[],"name":"get1inchSpotAgg","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getBPS_BASE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getBPS_FEE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getBaluniAgentFactory","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getBaluniOracle","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getBaluniPoolFactory","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getBaluniPoolPeriphery","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getBaluniRebalancer","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getBaluniRegistry","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getBaluniRouter","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getBaluniSwapper","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getMAX_BPS_FEE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getStaticOracle","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getTreasury","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getUSDC","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getUniswapFactory","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getUniswapRouter","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getWNATIVE","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"__1inchSpotAgg","type":"address"}],"name":"set1inchSpotAgg","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"__BPS_FEE","type":"uint256"}],"name":"setBPS_FEE","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_baluniAgentFactory","type":"address"}],"name":"setBaluniAgentFactory","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_baluniOracle","type":"address"}],"name":"setBaluniOracle","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_baluniPoolFactory","type":"address"}],"name":"setBaluniPoolFactory","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_baluniPoolPeriphery","type":"address"}],"name":"setBaluniPoolPeriphery","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_baluniRebalancer","type":"address"}],"name":"setBaluniRebalancer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_baluniRegistry","type":"address"}],"name":"setBaluniRegistry","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_baluniRouter","type":"address"}],"name":"setBaluniRouter","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_baluniSwapper","type":"address"}],"name":"setBaluniSwapper","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_staticOracle","type":"address"}],"name":"setStaticOracle","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_treasury","type":"address"}],"name":"setTreasury","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_USDC","type":"address"}],"name":"setUSDC","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_uniswapFactory","type":"address"}],"name":"setUniswapFactory","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_uniswapRouter","type":"address"}],"name":"setUniswapRouter","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_WNATIVE","type":"address"}],"name":"setWNATIVE","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface for the BaluniV1Registry contract.","kind":"dev","methods":{},"title":"IBaluniV1Registry","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"get1inchSpotAgg()":"8e1c3a8a","getBPS_BASE()":"4f4608a2","getBPS_FEE()":"85462d6f","getBaluniAgentFactory()":"f5d2d998","getBaluniOracle()":"bb3ba04c","getBaluniPoolFactory()":"7c6fd308","getBaluniPoolPeriphery()":"1acb6141","getBaluniRebalancer()":"cff49d68","getBaluniRegistry()":"c9aba8ae","getBaluniRouter()":"04cc7325","getBaluniSwapper()":"82755ebb","getMAX_BPS_FEE()":"9380fb6f","getStaticOracle()":"a5d2236f","getTreasury()":"3b19e84a","getUSDC()":"1bf01e9b","getUniswapFactory()":"3e6dfa36","getUniswapRouter()":"524900b5","getWNATIVE()":"6c9c0078","set1inchSpotAgg(address)":"c08f786b","setBPS_FEE(uint256)":"9e6453f8","setBaluniAgentFactory(address)":"f1dccde7","setBaluniOracle(address)":"f5b84f64","setBaluniPoolFactory(address)":"8267c2c8","setBaluniPoolPeriphery(address)":"588c5b70","setBaluniRebalancer(address)":"0241bffa","setBaluniRegistry(address)":"6c43274c","setBaluniRouter(address)":"400fb668","setBaluniSwapper(address)":"c3f5df5c","setStaticOracle(address)":"cc01e9a6","setTreasury(address)":"f0f44260","setUSDC(address)":"b3e089a2","setUniswapFactory(address)":"e04b677f","setUniswapRouter(address)":"bea9849e","setWNATIVE(address)":"b6fe9cc7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"get1inchSpotAgg\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBPS_BASE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBPS_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBaluniAgentFactory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBaluniOracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBaluniPoolFactory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBaluniPoolPeriphery\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBaluniRebalancer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBaluniRegistry\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBaluniRouter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBaluniSwapper\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMAX_BPS_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStaticOracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTreasury\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getUSDC\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getUniswapFactory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getUniswapRouter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getWNATIVE\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"__1inchSpotAgg\",\"type\":\"address\"}],\"name\":\"set1inchSpotAgg\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"__BPS_FEE\",\"type\":\"uint256\"}],\"name\":\"setBPS_FEE\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_baluniAgentFactory\",\"type\":\"address\"}],\"name\":\"setBaluniAgentFactory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_baluniOracle\",\"type\":\"address\"}],\"name\":\"setBaluniOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_baluniPoolFactory\",\"type\":\"address\"}],\"name\":\"setBaluniPoolFactory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_baluniPoolPeriphery\",\"type\":\"address\"}],\"name\":\"setBaluniPoolPeriphery\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_baluniRebalancer\",\"type\":\"address\"}],\"name\":\"setBaluniRebalancer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_baluniRegistry\",\"type\":\"address\"}],\"name\":\"setBaluniRegistry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_baluniRouter\",\"type\":\"address\"}],\"name\":\"setBaluniRouter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_baluniSwapper\",\"type\":\"address\"}],\"name\":\"setBaluniSwapper\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_staticOracle\",\"type\":\"address\"}],\"name\":\"setStaticOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_treasury\",\"type\":\"address\"}],\"name\":\"setTreasury\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_USDC\",\"type\":\"address\"}],\"name\":\"setUSDC\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_uniswapFactory\",\"type\":\"address\"}],\"name\":\"setUniswapFactory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_uniswapRouter\",\"type\":\"address\"}],\"name\":\"setUniswapRouter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_WNATIVE\",\"type\":\"address\"}],\"name\":\"setWNATIVE\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the BaluniV1Registry contract.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"IBaluniV1Registry\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IBaluniV1Registry.sol\":\"IBaluniV1Registry\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IBaluniV1Registry.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n\\r\\n/**\\r\\n * @title IBaluniV1Registry\\r\\n * @dev Interface for the BaluniV1Registry contract.\\r\\n */\\r\\ninterface IBaluniV1Registry {\\r\\n    function setUniswapFactory(address _uniswapFactory) external;\\r\\n\\r\\n    function setUniswapRouter(address _uniswapRouter) external;\\r\\n\\r\\n    function setBaluniAgentFactory(address _baluniAgentFactory) external;\\r\\n\\r\\n    function setBaluniPoolPeriphery(address _baluniPoolPeriphery) external;\\r\\n\\r\\n    function setBaluniSwapper(address _baluniSwapper) external;\\r\\n\\r\\n    function setBaluniOracle(address _baluniOracle) external;\\r\\n\\r\\n    function setBaluniPoolFactory(address _baluniPoolFactory) external;\\r\\n\\r\\n    function setBaluniRebalancer(address _baluniRebalancer) external;\\r\\n\\r\\n    function setBaluniRouter(address _baluniRouter) external;\\r\\n\\r\\n    function setBaluniRegistry(address _baluniRegistry) external;\\r\\n\\r\\n    function setWNATIVE(address _WNATIVE) external;\\r\\n\\r\\n    function setUSDC(address _USDC) external;\\r\\n\\r\\n    function setTreasury(address _treasury) external;\\r\\n\\r\\n    function set1inchSpotAgg(address __1inchSpotAgg) external;\\r\\n\\r\\n    function setBPS_FEE(uint256 __BPS_FEE) external;\\r\\n\\r\\n    function getUniswapFactory() external view returns (address);\\r\\n\\r\\n    function getUniswapRouter() external view returns (address);\\r\\n\\r\\n    function getBaluniSwapper() external view returns (address);\\r\\n\\r\\n    function getBaluniOracle() external view returns (address);\\r\\n\\r\\n    function getBaluniAgentFactory() external view returns (address);\\r\\n\\r\\n    function getBaluniPoolPeriphery() external view returns (address);\\r\\n\\r\\n    function getBaluniPoolFactory() external view returns (address);\\r\\n\\r\\n    function getBaluniRebalancer() external view returns (address);\\r\\n\\r\\n    function getBaluniRouter() external view returns (address);\\r\\n\\r\\n    function getBaluniRegistry() external view returns (address);\\r\\n\\r\\n    function getWNATIVE() external view returns (address);\\r\\n\\r\\n    function getUSDC() external view returns (address);\\r\\n\\r\\n    function get1inchSpotAgg() external view returns (address);\\r\\n\\r\\n    function getBPS_FEE() external view returns (uint256);\\r\\n\\r\\n    function getMAX_BPS_FEE() external view returns (uint256);\\r\\n\\r\\n    function getBPS_BASE() external view returns (uint256);\\r\\n\\r\\n    function getTreasury() external view returns (address);\\r\\n\\r\\n    function setStaticOracle(address _staticOracle) external;\\r\\n\\r\\n    function getStaticOracle() external view returns (address);\\r\\n}\\r\\n\",\"keccak256\":\"0x846d9e23f2a9579307f6f9b453f9426e1083b2f550bb999315a4abc32a648570\",\"license\":\"GNU AGPLv3\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/libs/DSMath.sol":{"DSMath":{"abi":[{"inputs":[],"name":"RAY","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"WAD","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60a86032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe7300000000000000000000000000000000000000003014608060405260043610603c575f3560e01c8063552033c41460405780636a146024146064575b5f80fd5b60526b033b2e3c9fd0803ce800000081565b60405190815260200160405180910390f35b6052670de0b6b3a76400008156fea26469706673582212202fda6cb9fce9e465fc2a86db5e53e6197def5a27618a2f28b4fa596bb96cad6e64736f6c63430008190033","opcodes":"PUSH1 0xA8 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH1 0x3C JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x552033C4 EQ PUSH1 0x40 JUMPI DUP1 PUSH4 0x6A146024 EQ PUSH1 0x64 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x52 PUSH12 0x33B2E3C9FD0803CE8000000 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x52 PUSH8 0xDE0B6B3A7640000 DUP2 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2F 0xDA PUSH13 0xB9FCE9E465FC2A86DB5E53E619 PUSH30 0xEF5A27618A2F28B4FA596BB96CAD6E64736F6C6343000819003300000000 ","sourceMap":"773:1575:21:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;773:1575:21;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@RAY_5484":{"entryPoint":null,"id":5484,"parameterSlots":0,"returnSlots":0},"@WAD_5479":{"entryPoint":null,"id":5479,"parameterSlots":0,"returnSlots":0},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_library_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1}},"generatedSources":[{"ast":{"nativeSrc":"0:201:22","nodeType":"YulBlock","src":"0:201:22","statements":[{"nativeSrc":"6:3:22","nodeType":"YulBlock","src":"6:3:22","statements":[]},{"body":{"nativeSrc":"123:76:22","nodeType":"YulBlock","src":"123:76:22","statements":[{"nativeSrc":"133:26:22","nodeType":"YulAssignment","src":"133:26:22","value":{"arguments":[{"name":"headStart","nativeSrc":"145:9:22","nodeType":"YulIdentifier","src":"145:9:22"},{"kind":"number","nativeSrc":"156:2:22","nodeType":"YulLiteral","src":"156:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"141:3:22","nodeType":"YulIdentifier","src":"141:3:22"},"nativeSrc":"141:18:22","nodeType":"YulFunctionCall","src":"141:18:22"},"variableNames":[{"name":"tail","nativeSrc":"133:4:22","nodeType":"YulIdentifier","src":"133:4:22"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"175:9:22","nodeType":"YulIdentifier","src":"175:9:22"},{"name":"value0","nativeSrc":"186:6:22","nodeType":"YulIdentifier","src":"186:6:22"}],"functionName":{"name":"mstore","nativeSrc":"168:6:22","nodeType":"YulIdentifier","src":"168:6:22"},"nativeSrc":"168:25:22","nodeType":"YulFunctionCall","src":"168:25:22"},"nativeSrc":"168:25:22","nodeType":"YulExpressionStatement","src":"168:25:22"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_library_reversed","nativeSrc":"14:185:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"92:9:22","nodeType":"YulTypedName","src":"92:9:22","type":""},{"name":"value0","nativeSrc":"103:6:22","nodeType":"YulTypedName","src":"103:6:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"114:4:22","nodeType":"YulTypedName","src":"114:4:22","type":""}],"src":"14:185:22"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_library_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}","id":22,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"7300000000000000000000000000000000000000003014608060405260043610603c575f3560e01c8063552033c41460405780636a146024146064575b5f80fd5b60526b033b2e3c9fd0803ce800000081565b60405190815260200160405180910390f35b6052670de0b6b3a76400008156fea26469706673582212202fda6cb9fce9e465fc2a86db5e53e6197def5a27618a2f28b4fa596bb96cad6e64736f6c63430008190033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH1 0x3C JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x552033C4 EQ PUSH1 0x40 JUMPI DUP1 PUSH4 0x6A146024 EQ PUSH1 0x64 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x52 PUSH12 0x33B2E3C9FD0803CE8000000 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x52 PUSH8 0xDE0B6B3A7640000 DUP2 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2F 0xDA PUSH13 0xB9FCE9E465FC2A86DB5E53E619 PUSH30 0xEF5A27618A2F28B4FA596BB96CAD6E64736F6C6343000819003300000000 ","sourceMap":"773:1575:21:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;840:38;;870:8;840:38;;;;;168:25:22;;;156:2;141:18;840:38:21;;;;;;;795;;825:8;795:38;"},"gasEstimates":{"creation":{"codeDepositCost":"33600","executionCost":"114","totalCost":"33714"},"external":{"RAY()":"144","WAD()":"166"},"internal":{"reciprocal(uint256)":"infinite","rmul(uint256,uint256)":"infinite","rpow(uint256,uint256)":"infinite","wdiv(uint256,uint256)":"infinite","wmul(uint256,uint256)":"infinite"}},"methodIdentifiers":{"RAY()":"552033c4","WAD()":"6a146024"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"RAY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WAD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libs/DSMath.sol\":\"DSMath\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/libs/DSMath.sol\":{\"content\":\"/// math.sol -- mixin for inline numerical wizardry\\r\\n\\r\\n// This program is free software: you can redistribute it and/or modify\\r\\n// it under the terms of the GNU General Public License as published by\\r\\n// the Free Software Foundation, either version 3 of the License, or\\r\\n// (at your option) any later version.\\r\\n\\r\\n// This program is distributed in the hope that it will be useful,\\r\\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\\r\\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\r\\n// GNU General Public License for more details.\\r\\n\\r\\n// You should have received a copy of the GNU General Public License\\r\\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\\r\\n\\r\\n// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity 0.8.25;\\r\\n\\r\\nlibrary DSMath {\\r\\n    uint256 public constant WAD = 10 ** 18;\\r\\n    uint256 public constant RAY = 10 ** 27;\\r\\n\\r\\n    //rounds to zero if x*y < WAD / 2\\r\\n    function wmul(uint256 x, uint256 y) internal pure returns (uint256) {\\r\\n        return ((x * y) + (WAD / 2)) / WAD;\\r\\n    }\\r\\n\\r\\n    //rounds to zero if x*y < WAD / 2\\r\\n    function wdiv(uint256 x, uint256 y) internal pure returns (uint256) {\\r\\n        return ((x * WAD) + (y / 2)) / y;\\r\\n    }\\r\\n\\r\\n    function reciprocal(uint256 x) internal pure returns (uint256) {\\r\\n        return wdiv(WAD, x);\\r\\n    }\\r\\n\\r\\n    // This famous algorithm is called \\\"exponentiation by squaring\\\"\\r\\n    // and calculates x^n with x as fixed-point and n as regular unsigned.\\r\\n    //\\r\\n    // It's O(log n), instead of O(n) for naive repeated multiplication.\\r\\n    //\\r\\n    // These facts are why it works:\\r\\n    //\\r\\n    //  If n is even, then x^n = (x^2)^(n/2).\\r\\n    //  If n is odd,  then x^n = x * x^(n-1),\\r\\n    //   and applying the equation for even x gives\\r\\n    //    x^n = x * (x^2)^((n-1) / 2).\\r\\n    //\\r\\n    //  Also, EVM division is flooring and\\r\\n    //    floor[(n-1) / 2] = floor[n / 2].\\r\\n    //\\r\\n    function rpow(uint256 x, uint256 n) internal pure returns (uint256 z) {\\r\\n        z = n % 2 != 0 ? x : RAY;\\r\\n\\r\\n        for (n /= 2; n != 0; n /= 2) {\\r\\n            x = rmul(x, x);\\r\\n\\r\\n            if (n % 2 != 0) {\\r\\n                z = rmul(z, x);\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    //rounds to zero if x*y < WAD / 2\\r\\n    function rmul(uint256 x, uint256 y) internal pure returns (uint256 z) {\\r\\n        z = ((x * y) + (RAY / 2)) / RAY;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xcca02b43a015cb2ab00f363742d17518d3ff6267b3ed20bdaaf7798022fd6893\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}