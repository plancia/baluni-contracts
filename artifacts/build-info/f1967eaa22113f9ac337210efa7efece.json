{"id":"f1967eaa22113f9ac337210efa7efece","_format":"hh-sol-build-info-1","solcVersion":"0.8.25","solcLongVersion":"0.8.25+commit.b61c2a91","input":{"language":"Solidity","sources":{"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ContextUpgradeable} from \"../utils/ContextUpgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\n    /// @custom:storage-location erc7201:openzeppelin.storage.Ownable\n    struct OwnableStorage {\n        address _owner;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Ownable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant OwnableStorageLocation = 0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300;\n\n    function _getOwnableStorage() private pure returns (OwnableStorage storage $) {\n        assembly {\n            $.slot := OwnableStorageLocation\n        }\n    }\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    function __Ownable_init(address initialOwner) internal onlyInitializing {\n        __Ownable_init_unchained(initialOwner);\n    }\n\n    function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        OwnableStorage storage $ = _getOwnableStorage();\n        return $._owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        OwnableStorage storage $ = _getOwnableStorage();\n        address oldOwner = $._owner;\n        $._owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Storage of the initializable contract.\n     *\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n     * when using with upgradeable contracts.\n     *\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\n     */\n    struct InitializableStorage {\n        /**\n         * @dev Indicates that the contract has been initialized.\n         */\n        uint64 _initialized;\n        /**\n         * @dev Indicates that the contract is in the process of being initialized.\n         */\n        bool _initializing;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Initializable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\n\n    /**\n     * @dev The contract is already initialized.\n     */\n    error InvalidInitialization();\n\n    /**\n     * @dev The contract is not initializing.\n     */\n    error NotInitializing();\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint64 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n     * production.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        // Cache values to avoid duplicated sloads\n        bool isTopLevelCall = !$._initializing;\n        uint64 initialized = $._initialized;\n\n        // Allowed calls:\n        // - initialSetup: the contract is not in the initializing state and no previous version was\n        //                 initialized\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\n        //                 current contract is just being deployed\n        bool initialSetup = initialized == 0 && isTopLevelCall;\n        bool construction = initialized == 1 && address(this).code.length == 0;\n\n        if (!initialSetup && !construction) {\n            revert InvalidInitialization();\n        }\n        $._initialized = 1;\n        if (isTopLevelCall) {\n            $._initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            $._initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint64 version) {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing || $._initialized >= version) {\n            revert InvalidInitialization();\n        }\n        $._initialized = version;\n        $._initializing = true;\n        _;\n        $._initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        _checkInitializing();\n        _;\n    }\n\n    /**\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\n     */\n    function _checkInitializing() internal view virtual {\n        if (!_isInitializing()) {\n            revert NotInitializing();\n        }\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing) {\n            revert InvalidInitialization();\n        }\n        if ($._initialized != type(uint64).max) {\n            $._initialized = type(uint64).max;\n            emit Initialized(type(uint64).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint64) {\n        return _getInitializableStorage()._initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _getInitializableStorage()._initializing;\n    }\n\n    /**\n     * @dev Returns a pointer to the storage namespace.\n     */\n    // solhint-disable-next-line var-name-mixedcase\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\n        assembly {\n            $.slot := INITIALIZABLE_STORAGE\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/UUPSUpgradeable.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC1822Proxiable} from \"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\";\nimport {ERC1967Utils} from \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\";\nimport {Initializable} from \"./Initializable.sol\";\n\n/**\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n *\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n * `UUPSUpgradeable` with a custom implementation of upgrades.\n *\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\n */\nabstract contract UUPSUpgradeable is Initializable, IERC1822Proxiable {\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable\n    address private immutable __self = address(this);\n\n    /**\n     * @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\n     * and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\n     * while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\n     * If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\n     * be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\n     * during an upgrade.\n     */\n    string public constant UPGRADE_INTERFACE_VERSION = \"5.0.0\";\n\n    /**\n     * @dev The call is from an unauthorized context.\n     */\n    error UUPSUnauthorizedCallContext();\n\n    /**\n     * @dev The storage `slot` is unsupported as a UUID.\n     */\n    error UUPSUnsupportedProxiableUUID(bytes32 slot);\n\n    /**\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n     * a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n     * function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n     * fail.\n     */\n    modifier onlyProxy() {\n        _checkProxy();\n        _;\n    }\n\n    /**\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n     * callable on the implementing contract but not through proxies.\n     */\n    modifier notDelegated() {\n        _checkNotDelegated();\n        _;\n    }\n\n    function __UUPSUpgradeable_init() internal onlyInitializing {\n    }\n\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\n     */\n    function proxiableUUID() external view virtual notDelegated returns (bytes32) {\n        return ERC1967Utils.IMPLEMENTATION_SLOT;\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n     * encoded in `data`.\n     *\n     * Calls {_authorizeUpgrade}.\n     *\n     * Emits an {Upgraded} event.\n     *\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {\n        _authorizeUpgrade(newImplementation);\n        _upgradeToAndCallUUPS(newImplementation, data);\n    }\n\n    /**\n     * @dev Reverts if the execution is not performed via delegatecall or the execution\n     * context is not of a proxy with an ERC1967-compliant implementation pointing to self.\n     * See {_onlyProxy}.\n     */\n    function _checkProxy() internal view virtual {\n        if (\n            address(this) == __self || // Must be called through delegatecall\n            ERC1967Utils.getImplementation() != __self // Must be called through an active proxy\n        ) {\n            revert UUPSUnauthorizedCallContext();\n        }\n    }\n\n    /**\n     * @dev Reverts if the execution is performed via delegatecall.\n     * See {notDelegated}.\n     */\n    function _checkNotDelegated() internal view virtual {\n        if (address(this) != __self) {\n            // Must not be called through delegatecall\n            revert UUPSUnauthorizedCallContext();\n        }\n    }\n\n    /**\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n     * {upgradeToAndCall}.\n     *\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n     *\n     * ```solidity\n     * function _authorizeUpgrade(address) internal onlyOwner {}\n     * ```\n     */\n    function _authorizeUpgrade(address newImplementation) internal virtual;\n\n    /**\n     * @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\n     *\n     * As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\n     * is expected to be the implementation slot in ERC1967.\n     *\n     * Emits an {IERC1967-Upgraded} event.\n     */\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {\n        try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\n            if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {\n                revert UUPSUnsupportedProxiableUUID(slot);\n            }\n            ERC1967Utils.upgradeToAndCall(newImplementation, data);\n        } catch {\n            // The implementation is not UUPS\n            revert ERC1967Utils.ERC1967InvalidImplementation(newImplementation);\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC1822.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC1822.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n * proxy whose upgrades are fully controlled by the current implementation.\n */\ninterface IERC1822Proxiable {\n    /**\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n     * address.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy.\n     */\n    function proxiableUUID() external view returns (bytes32);\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"},"@openzeppelin/contracts/proxy/beacon/IBeacon.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/IBeacon.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\n */\ninterface IBeacon {\n    /**\n     * @dev Must return an address that can be used as a delegate call target.\n     *\n     * {UpgradeableBeacon} will check that this address is a contract.\n     */\n    function implementation() external view returns (address);\n}\n"},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/ERC1967/ERC1967Utils.sol)\n\npragma solidity ^0.8.20;\n\nimport {IBeacon} from \"../beacon/IBeacon.sol\";\nimport {Address} from \"../../utils/Address.sol\";\nimport {StorageSlot} from \"../../utils/StorageSlot.sol\";\n\n/**\n * @dev This abstract contract provides getters and event emitting update functions for\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\n */\nlibrary ERC1967Utils {\n    // We re-declare ERC-1967 events here because they can't be used directly from IERC1967.\n    // This will be fixed in Solidity 0.8.21. At that point we should remove these events.\n    /**\n     * @dev Emitted when the implementation is upgraded.\n     */\n    event Upgraded(address indexed implementation);\n\n    /**\n     * @dev Emitted when the admin account has changed.\n     */\n    event AdminChanged(address previousAdmin, address newAdmin);\n\n    /**\n     * @dev Emitted when the beacon is changed.\n     */\n    event BeaconUpgraded(address indexed beacon);\n\n    /**\n     * @dev Storage slot with the address of the current implementation.\n     * This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n\n    /**\n     * @dev The `implementation` of the proxy is invalid.\n     */\n    error ERC1967InvalidImplementation(address implementation);\n\n    /**\n     * @dev The `admin` of the proxy is invalid.\n     */\n    error ERC1967InvalidAdmin(address admin);\n\n    /**\n     * @dev The `beacon` of the proxy is invalid.\n     */\n    error ERC1967InvalidBeacon(address beacon);\n\n    /**\n     * @dev An upgrade function sees `msg.value > 0` that may be lost.\n     */\n    error ERC1967NonPayable();\n\n    /**\n     * @dev Returns the current implementation address.\n     */\n    function getImplementation() internal view returns (address) {\n        return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 implementation slot.\n     */\n    function _setImplementation(address newImplementation) private {\n        if (newImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(newImplementation);\n        }\n        StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation;\n    }\n\n    /**\n     * @dev Performs implementation upgrade with additional setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-Upgraded} event.\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) internal {\n        _setImplementation(newImplementation);\n        emit Upgraded(newImplementation);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(newImplementation, data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Storage slot with the admin of the contract.\n     * This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\n\n    /**\n     * @dev Returns the current admin.\n     *\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using\n     * the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\n     */\n    function getAdmin() internal view returns (address) {\n        return StorageSlot.getAddressSlot(ADMIN_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 admin slot.\n     */\n    function _setAdmin(address newAdmin) private {\n        if (newAdmin == address(0)) {\n            revert ERC1967InvalidAdmin(address(0));\n        }\n        StorageSlot.getAddressSlot(ADMIN_SLOT).value = newAdmin;\n    }\n\n    /**\n     * @dev Changes the admin of the proxy.\n     *\n     * Emits an {IERC1967-AdminChanged} event.\n     */\n    function changeAdmin(address newAdmin) internal {\n        emit AdminChanged(getAdmin(), newAdmin);\n        _setAdmin(newAdmin);\n    }\n\n    /**\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n     * This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\n\n    /**\n     * @dev Returns the current beacon.\n     */\n    function getBeacon() internal view returns (address) {\n        return StorageSlot.getAddressSlot(BEACON_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\n     */\n    function _setBeacon(address newBeacon) private {\n        if (newBeacon.code.length == 0) {\n            revert ERC1967InvalidBeacon(newBeacon);\n        }\n\n        StorageSlot.getAddressSlot(BEACON_SLOT).value = newBeacon;\n\n        address beaconImplementation = IBeacon(newBeacon).implementation();\n        if (beaconImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(beaconImplementation);\n        }\n    }\n\n    /**\n     * @dev Change the beacon and trigger a setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-BeaconUpgraded} event.\n     *\n     * CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n     * it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n     * efficiency.\n     */\n    function upgradeBeaconToAndCall(address newBeacon, bytes memory data) internal {\n        _setBeacon(newBeacon);\n        emit BeaconUpgraded(newBeacon);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n     * if an upgrade doesn't perform an initialization call.\n     */\n    function _checkNonPayable() private {\n        if (msg.value > 0) {\n            revert ERC1967NonPayable();\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error AddressInsufficientBalance(address account);\n\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedInnerCall();\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert AddressInsufficientBalance(address(this));\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert FailedInnerCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {FailedInnerCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert AddressInsufficientBalance(address(this));\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n     * unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {FailedInnerCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert FailedInnerCall();\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/ReentrancyGuard.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant NOT_ENTERED = 1;\n    uint256 private constant ENTERED = 2;\n\n    uint256 private _status;\n\n    /**\n     * @dev Unauthorized reentrant call.\n     */\n    error ReentrancyGuardReentrantCall();\n\n    constructor() {\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\n        if (_status == ENTERED) {\n            revert ReentrancyGuardReentrantCall();\n        }\n\n        // Any calls to nonReentrant after this point will fail\n        _status = ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == ENTERED;\n    }\n}\n"},"@openzeppelin/contracts/utils/StorageSlot.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n}\n"},"contracts/BaluniV1Pool.sol":{"content":"// SPDX-License-Identifier: GNU AGPLv3\r\npragma solidity 0.8.25;\r\n/**\r\n *  __                  __                      __\r\n * /  |                /  |                    /  |\r\n * $$ |____    ______  $$ | __    __  _______  $$/\r\n * $$      \\  /      \\ $$ |/  |  /  |/       \\ /  |\r\n * $$$$$$$  | $$$$$$  |$$ |$$ |  $$ |$$$$$$$  |$$ |\r\n * $$ |  $$ | /    $$ |$$ |$$ |  $$ |$$ |  $$ |$$ |\r\n * $$ |__$$ |/$$$$$$$ |$$ |$$ \\__$$ |$$ |  $$ |$$ |\r\n * $$    $$/ $$    $$ |$$ |$$    $$/ $$ |  $$ |$$ |\r\n * $$$$$$$/   $$$$$$$/ $$/  $$$$$$/  $$/   $$/ $$/\r\n *\r\n *\r\n *                  ,-\"\"\"\"-.\r\n *                ,'      _ `.\r\n *               /       )_)  \\\r\n *              :              :\r\n *              \\              /\r\n *               \\            /\r\n *                `.        ,'\r\n *                  `.    ,'\r\n *                    `.,'\r\n *                     /\\`.   ,-._\r\n *                         `-'    \\__\r\n *                              .\r\n *               s                \\\r\n *                                \\\\\r\n *                                 \\\\\r\n *                                  >\\/7\r\n *                              _.-(6'  \\\r\n *                             (=___._/` \\\r\n *                                  )  \\ |\r\n *                                 /   / |\r\n *                                /    > /\r\n *                               j    < _\\\r\n *                           _.-' :      ``.\r\n *                           \\ r=._\\        `.\r\n */\r\nimport './interfaces/IBaluniV1Rebalancer.sol';\r\nimport './interfaces/IBaluniV1Router.sol';\r\nimport './interfaces/IBaluniV1PoolPeriphery.sol';\r\nimport '@openzeppelin/contracts/token/ERC20/ERC20.sol';\r\nimport '@openzeppelin/contracts/utils/ReentrancyGuard.sol';\r\n\r\ncontract BaluniV1Pool is ERC20, ReentrancyGuard {\r\n  IBaluniV1Rebalancer public rebalancer;\r\n  AssetInfo[] public assetInfos;\r\n  uint256 public trigger;\r\n  uint256 public ONE;\r\n  address public periphery;\r\n  uint256 public constant SWAP_FEE_BPS = 300;\r\n  address public baseAsset;\r\n\r\n  mapping(address => uint256) public reserves;\r\n\r\n  struct AssetInfo {\r\n    address asset;\r\n    uint256 weight;\r\n  }\r\n\r\n  event RebalancePerformed(address indexed by, address[] assets);\r\n  event WeightsRebalanced(address indexed user, uint256[] amountsAdded);\r\n  event Burn(address indexed user, uint256 sharesBurned);\r\n  event Mint(address indexed to, uint256 sharesMinted);\r\n  event Swap(\r\n    address indexed user,\r\n    address indexed fromToken,\r\n    address indexed toToken,\r\n    uint256 amountIn,\r\n    uint256 amountOut\r\n  );\r\n\r\n  constructor(\r\n    address _rebalancer,\r\n    address[] memory _assets,\r\n    uint256[] memory _weights,\r\n    uint256 _trigger,\r\n    address _periphery\r\n  ) ERC20('Baluni LP', 'BALUNI-LP') {\r\n    periphery = _periphery;\r\n    rebalancer = IBaluniV1Rebalancer(_rebalancer);\r\n    ONE = 1e18;\r\n\r\n    initializeAssets(_assets, _weights);\r\n\r\n    trigger = _trigger;\r\n\r\n    baseAsset = IBaluniV1Rebalancer(_rebalancer).getUSDCAddress();\r\n    //baseAsset = IBaluniV1Rebalancer(_rebalancer).getWNATIVEAddress();\r\n\r\n    // ensure the sum o weight equal 10000\r\n    uint256 totalWeight = 0;\r\n    for (uint256 i = 0; i < _weights.length; i++) {\r\n      totalWeight += _weights[i];\r\n    }\r\n    require(totalWeight == 10000, 'Invalid weights');\r\n  }\r\n\r\n  modifier onlyPeriphery() {\r\n    require(msg.sender == periphery, 'Only Periphery');\r\n    _;\r\n  }\r\n\r\n  /**\r\n   * @dev Initializes the assets and their weights for the pool.\r\n   * @param _assets The array of asset addresses.\r\n   * @param _weights The array of weights corresponding to each asset.\r\n   */\r\n  function initializeAssets(address[] memory _assets, uint256[] memory _weights) internal {\r\n    require(_assets.length == _weights.length, 'Assets and weights length mismatch');\r\n\r\n    for (uint256 i = 0; i < _assets.length; i++) {\r\n      require(_assets[i] != address(0), 'Invalid asset address');\r\n      require(_weights[i] > 0, 'Invalid weight');\r\n\r\n      assetInfos.push(AssetInfo({asset: _assets[i], weight: _weights[i]}));\r\n\r\n      IERC20 asset = IERC20(_assets[i]);\r\n      if (asset.allowance(address(this), address(rebalancer)) == 0) {\r\n        asset.approve(address(rebalancer), type(uint256).max);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @dev Rebalances the weights of the pool by calculating the amounts to add for each token,\r\n   * transferring the calculated amounts from the user to the pool, minting the total added liquidity,\r\n   * updating the reserves, and emitting an event to indicate the rebalancing of weights.\r\n   * @param receiver The address to receive the minted liquidity tokens.\r\n   */\r\n  function rebalanceWeights(address receiver) external {\r\n    require(isRebalanceNeeded(), 'Rebalance not needed');\r\n    (uint256 totalValuation, uint256[] memory valuations) = _computeTotalValuation();\r\n\r\n    uint256[] memory amountsToAdd = _calculateAmountsToAdd(totalValuation, valuations);\r\n\r\n    // Calculate total added liquidity before minting\r\n    uint256 totalAddedLiquidity = _calculateTotalAddedLiquidity(amountsToAdd);\r\n\r\n    // Transfer the calculated amounts from the user to the pool\r\n    for (uint256 i = 0; i < amountsToAdd.length; i++) {\r\n      if (amountsToAdd[i] > 0) {\r\n        _transferAndCalculateLiquidity(i, amountsToAdd[i]);\r\n      }\r\n    }\r\n\r\n    _mint(receiver, totalAddedLiquidity);\r\n\r\n    emit WeightsRebalanced(msg.sender, amountsToAdd);\r\n  }\r\n\r\n  /**\r\n   * @dev Swaps `amount` of `fromToken` to `toToken` and transfers the received amount to `receiver`.\r\n   *\r\n   * Requirements:\r\n   * - `fromToken` and `toToken` must be different tokens.\r\n   * - `amount` must be greater than zero.\r\n   * - Sufficient liquidity of `toToken` must be available in the contract.\r\n   *\r\n   * Emits a `Swap` event with the details of the swap.\r\n   *\r\n   * Updates the reserves after the swap.\r\n   *\r\n   * @param fromToken The address of the token to swap from.\r\n   * @param toToken The address of the token to swap to.\r\n   * @param amount The amount of `fromToken` to swap.\r\n   * @param receiver The address to receive the swapped tokens.\r\n   * @return The amount of `toToken` received after the swap.\r\n   */\r\n  function swap(\r\n    address fromToken,\r\n    address toToken,\r\n    uint256 amount,\r\n    address receiver\r\n  ) external nonReentrant returns (uint256) {\r\n    require(fromToken != toToken, 'Cannot swap the same token');\r\n    require(amount > 0, 'Amount must be greater than zero');\r\n\r\n    // Transfer fromToken from sender to this contract\r\n    IERC20(fromToken).transferFrom(msg.sender, address(this), amount);\r\n\r\n    // Get the amount of toToken to be received\r\n    uint256 receivedAmount = getAmountOut(fromToken, toToken, amount);\r\n\r\n    // Check if there is sufficient liquidity\r\n    require(IERC20(toToken).balanceOf(address(this)) >= receivedAmount, 'Insufficient Liquidity');\r\n\r\n    // apply fee\r\n    uint256 fee = (receivedAmount * SWAP_FEE_BPS) / 10000;\r\n    uint256 toSend = receivedAmount - fee;\r\n\r\n    // Transfer toToken to the receiver\r\n    IERC20(toToken).transfer(receiver, toSend);\r\n\r\n    emit Swap(receiver, fromToken, toToken, amount, toSend);\r\n\r\n    reserves[fromToken] += amount;\r\n    reserves[toToken] += toSend;\r\n\r\n    return receivedAmount;\r\n  }\r\n\r\n  /**\r\n   * @dev Mints new tokens and adds them to the specified address.\r\n   * @param to The address to which the new tokens will be minted.\r\n   * @return The amount of tokens minted.\r\n   */\r\n  function mint(address to, uint256[] memory amounts) external onlyPeriphery returns (uint256) {\r\n    uint256 totalSupply = totalSupply();\r\n    uint256 totalValue = 0;\r\n\r\n    uint256[] memory _reserves = getReserves();\r\n\r\n    require(assetInfos.length == _reserves.length, 'Invalid reserves length');\r\n    require(assetInfos.length > 0, 'No assets');\r\n\r\n    for (uint256 i = 0; i < assetInfos.length; i++) {\r\n      address asset = assetInfos[i].asset;\r\n      uint256 actualBalance = IERC20(asset).balanceOf(address(this));\r\n      require(actualBalance > 0, 'Balance must be greater than 0');\r\n      uint256 amount = actualBalance - _reserves[i];\r\n      require(amount > 0, 'Amount must be greater than 0');\r\n      uint256 valuation = _convertTokenToBase(asset, amount);\r\n      totalValue += valuation;\r\n    }\r\n\r\n    require(totalValue > 0, 'Total value must be greater than 0');\r\n\r\n    uint256 toMint;\r\n\r\n    if (totalSupply == 0) {\r\n      toMint = totalValue;\r\n    } else {\r\n      (uint256 totalLiquidity, ) = _computeTotalValuation();\r\n      require(totalLiquidity > 0, 'Total liquidity must be greater than 0');\r\n      toMint = ((totalValue) * totalSupply) / totalLiquidity;\r\n    }\r\n    require(toMint != 0, 'Mint qty is 0');\r\n    uint256 b4 = balanceOf(msg.sender);\r\n\r\n    _mint(to, toMint);\r\n\r\n    uint256 b = balanceOf(to) - b4;\r\n    require(b == toMint, 'Mint Failed');\r\n\r\n    _updateReserves(amounts, true);\r\n\r\n    emit Mint(to, toMint);\r\n\r\n    return toMint;\r\n  }\r\n\r\n  /**\r\n   * @dev Burns the pool tokens and transfers the underlying assets to the specified address.\r\n   * @param to The address to transfer the underlying assets to.\r\n   * @notice This function can only be called by the periphery contract.\r\n   * @notice The pool tokens must have a balance greater than 0.\r\n   * @notice The total supply of pool tokens must be greater than 0.\r\n   * @notice The function calculates the amounts of each underlying asset to transfer based on the share of pool tokens being burned.\r\n   * @notice A fee is deducted from the share of pool tokens being burned and transferred to the treasury address.\r\n   * @notice The function checks if the pool has sufficient liquidity before performing any transfers.\r\n   * @notice If any transfer fails, the function reverts the entire operation.\r\n   * @notice After the transfers, the function updates the reserves of the pool.\r\n   * @notice Emits a `Burn` event with the address and share of pool tokens burned.\r\n   */\r\n  function burn(address to) external onlyPeriphery {\r\n    uint256 share = balanceOf(address(this));\r\n\r\n    require(share > 0, 'Share must be greater than 0');\r\n    uint256 totalSupply = totalSupply();\r\n\r\n    require(totalSupply > 0, 'No liquidity');\r\n    uint256[] memory amounts = new uint256[](assetInfos.length);\r\n\r\n    uint256 fee = (share * SWAP_FEE_BPS) / 10000;\r\n    uint256 shareAfterFee = share - fee;\r\n\r\n    for (uint256 i = 0; i < assetInfos.length; i++) {\r\n      uint256 assetBalance = IERC20(assetInfos[i].asset).balanceOf(address(this));\r\n      amounts[i] = (assetBalance * shareAfterFee) / totalSupply;\r\n    }\r\n\r\n    require(balanceOf(address(this)) >= shareAfterFee, 'Insufficient liquidity');\r\n\r\n    bool feeTransferSuccess = IERC20(address(this)).transfer(rebalancer.getTreasury(), fee);\r\n    require(feeTransferSuccess, 'Fee transfer failed');\r\n\r\n    require(balanceOf(address(this)) >= shareAfterFee, 'Insufficient liquidity');\r\n    _burn(address(this), shareAfterFee);\r\n\r\n    for (uint256 i = 0; i < assetInfos.length; i++) {\r\n      require(IERC20(assetInfos[i].asset).balanceOf(address(this)) >= amounts[i], 'Insufficient Liquidity');\r\n      bool assetTransferSuccess = IERC20(assetInfos[i].asset).transfer(to, amounts[i]);\r\n      require(assetTransferSuccess, 'Asset transfer failed');\r\n    }\r\n\r\n    _updateReserves(amounts, false);\r\n\r\n    emit Burn(to, shareAfterFee);\r\n  }\r\n\r\n  /**\r\n   * @dev Calculates the amount of `toToken` that will be received when swapping `fromToken` for `toToken`.\r\n   * @param fromToken The address of the token being swapped from.\r\n   * @param toToken The address of the token being swapped to.\r\n   * @param amount The amount of `fromToken` being swapped.\r\n   * @return The amount of `toToken` that will be received.\r\n   */\r\n  function getAmountOut(address fromToken, address toToken, uint256 amount) public view returns (uint256) {\r\n    return rebalancer.convert(fromToken, toToken, amount);\r\n  }\r\n\r\n  /**\r\n   * @dev Performs rebalance if needed based on the LP share of the sender.\r\n   * @param _sender The address of the sender.\r\n   */\r\n  function performRebalanceIfNeeded(address _sender) external {\r\n    require(isRebalanceNeeded(), 'Rebalance not needed');\r\n    uint256 requiredBalance = (totalSupply() * 1000) / 10000;\r\n    require(balanceOf(_sender) >= requiredBalance, 'Under 5% LP share');\r\n    _performRebalanceIfNeeded();\r\n  }\r\n\r\n  /**\r\n   * @dev Returns the deviation between the current weights and target weights of the assets in the pool.\r\n   * @return directions An array of boolean values indicating whether the current weight is higher (true) or lower (false) than the target weight.\r\n   */\r\n  function getDeviation() public view returns (bool[] memory directions, uint256[] memory deviations) {\r\n    (uint256 totVal, uint256[] memory valuations) = _computeTotalValuation();\r\n    uint256 numAssets = assetInfos.length;\r\n\r\n    directions = new bool[](numAssets);\r\n    deviations = new uint256[](numAssets);\r\n\r\n    for (uint256 i = 0; i < numAssets; i++) {\r\n      uint256 currentWeight = (valuations[i] * 10000) / totVal;\r\n      uint256 targetWeight = assetInfos[i].weight;\r\n\r\n      if (currentWeight > targetWeight) {\r\n        deviations[i] = currentWeight - targetWeight;\r\n        directions[i] = true;\r\n      } else {\r\n        deviations[i] = targetWeight - currentWeight;\r\n        directions[i] = false;\r\n      }\r\n    }\r\n\r\n    return (directions, deviations);\r\n  }\r\n\r\n  /**\r\n   * @dev Returns the liquidity of a specific asset in the pool.\r\n   * @param assetIndex The index of the asset.\r\n   * @return The liquidity of the asset.\r\n   */\r\n  function assetLiquidity(uint256 assetIndex) external view returns (uint256) {\r\n    (, uint256[] memory usdValuations) = _computeTotalValuation();\r\n    require(assetIndex < usdValuations.length, 'Invalid asset index');\r\n    return usdValuations[assetIndex];\r\n  }\r\n\r\n  /**\r\n   * @dev Computes the total valuation of the pool and returns the total valuation and an array of individual valuations.\r\n   * @return totalVal The total valuation of the pool.\r\n   * @return valuations An array of individual valuations.\r\n   */\r\n  function computeTotalValuation() external view returns (uint256 totalVal, uint256[] memory valuations) {\r\n    (totalVal, valuations) = _computeTotalValuation();\r\n    return (totalVal, valuations);\r\n  }\r\n\r\n  /**\r\n   * @dev Returns the total liquidity of the pool.\r\n   * @return The total liquidity of the pool.\r\n   */\r\n  function liquidity() external view returns (uint256) {\r\n    (uint256 totalVal, ) = _computeTotalValuation();\r\n    return totalVal;\r\n  }\r\n\r\n  /**\r\n   * @dev Returns the unit price of the pool.\r\n   * @return The unit price of the pool.\r\n   */\r\n  function unitPrice() external view returns (uint256) {\r\n    (uint256 totalVal, ) = _computeTotalValuation();\r\n    uint256 totalSupply = totalSupply();\r\n    if (totalSupply == 0) {\r\n      return 0;\r\n    }\r\n    return (totalVal * ONE) / totalSupply;\r\n  }\r\n\r\n  /**\r\n   * @dev Returns an array of reserves for each asset in the pool.\r\n   * @return An array of reserves.\r\n   */\r\n  function getReserves() public view returns (uint256[] memory) {\r\n    uint256[] memory _reserves = new uint256[](assetInfos.length);\r\n    for (uint256 i = 0; i < assetInfos.length; i++) {\r\n      _reserves[i] = reserves[assetInfos[i].asset];\r\n    }\r\n    return _reserves;\r\n  }\r\n\r\n  /**\r\n   * @dev Returns the reserve amount of the specified asset.\r\n   * @param asset The address of the asset.\r\n   * @return The reserve amount of the asset.\r\n   */\r\n  function getAssetReserve(address asset) public view returns (uint256) {\r\n    return reserves[asset];\r\n  }\r\n\r\n  /**\r\n   * @dev Retrieves the list of assets in the pool.\r\n   * @return An array of addresses representing the assets.\r\n   */\r\n  function getAssets() external view returns (address[] memory) {\r\n    address[] memory assets = new address[](assetInfos.length);\r\n    for (uint256 i = 0; i < assetInfos.length; i++) {\r\n      assets[i] = assetInfos[i].asset;\r\n    }\r\n    return assets;\r\n  }\r\n\r\n  /**\r\n   * @dev Retrieves the list of weights associated with the assets in the pool.\r\n   * @return An array of uint256 values representing the weights.\r\n   */\r\n  function getWeights() external view returns (uint256[] memory) {\r\n    uint256[] memory weights = new uint256[](assetInfos.length);\r\n    for (uint256 i = 0; i < assetInfos.length; i++) {\r\n      weights[i] = assetInfos[i].weight;\r\n    }\r\n    return weights;\r\n  }\r\n\r\n  /**\r\n   * @dev Computes the total valuation of the assets in the pool.\r\n   * @return totalValuation The total valuation of the assets.\r\n   * @return valuations An array of valuations for each asset in the pool.\r\n   */\r\n  function _computeTotalValuation() internal view returns (uint256 totalValuation, uint256[] memory valuations) {\r\n    uint256 numAssets = assetInfos.length;\r\n    valuations = new uint256[](numAssets);\r\n    for (uint256 i = 0; i < numAssets; i++) {\r\n      IERC20 asset = IERC20(assetInfos[i].asset);\r\n\r\n      if ((address(asset) == baseAsset)) {\r\n        valuations[i] = reserves[address(asset)];\r\n      } else {\r\n        uint256 valuation = _convertTokenToBase(address(asset), reserves[address(asset)]);\r\n        valuations[i] = valuation;\r\n      }\r\n      totalValuation += valuations[i];\r\n    }\r\n    return (totalValuation, valuations);\r\n  }\r\n\r\n  /**\r\n   * @dev Performs rebalance if needed.\r\n   * This function retrieves the assets and weights from the `assetInfos` array,\r\n   * and calls the `rebalance` function of the `rebalancer` contract with the retrieved values.\r\n   * It emits a `RebalancePerformed` event after the rebalance is performed.\r\n   * @notice This function should only be called internally.\r\n   */\r\n  function _performRebalanceIfNeeded() internal {\r\n    address[] memory assets = new address[](assetInfos.length);\r\n    uint256[] memory weights = new uint256[](assetInfos.length);\r\n    for (uint256 i = 0; i < assetInfos.length; i++) {\r\n      assets[i] = assetInfos[i].asset;\r\n      weights[i] = assetInfos[i].weight;\r\n    }\r\n\r\n    IBaluniV1PoolPeriphery(periphery).transferToPool();\r\n\r\n    rebalancer.rebalance(assets, weights, address(this), address(this), trigger, baseAsset);\r\n\r\n    _updateReservesAndTransfer();\r\n\r\n    emit RebalancePerformed(msg.sender, assets);\r\n  }\r\n\r\n  /**\r\n   * @dev Calculates the total added liquidity based on the amounts to add.\r\n   * @param amountsToAdd An array of amounts to add for each asset.\r\n   * @return totalAddedLiquidity The total added liquidity.\r\n   */\r\n  function _calculateTotalAddedLiquidity(\r\n    uint256[] memory amountsToAdd\r\n  ) internal view returns (uint256 totalAddedLiquidity) {\r\n    for (uint256 i = 0; i < assetInfos.length; i++) {\r\n      totalAddedLiquidity += amountsToAdd[i];\r\n    }\r\n    return totalAddedLiquidity;\r\n  }\r\n\r\n  /**\r\n   * @dev Calculates the amounts to add to each asset based on the total valuation and current valuations.\r\n   * @param totalValuation The total valuation of the pool.\r\n   * @param valuations An array of current valuations for each asset.\r\n   * @return amountsToAdd An array of amounts to add to each asset.\r\n   */\r\n  function _calculateAmountsToAdd(\r\n    uint256 totalValuation,\r\n    uint256[] memory valuations\r\n  ) internal view returns (uint256[] memory amountsToAdd) {\r\n    amountsToAdd = new uint256[](assetInfos.length);\r\n    for (uint256 i = 0; i < assetInfos.length; i++) {\r\n      uint256 targetValuation = (totalValuation * assetInfos[i].weight) / 10000;\r\n      if (valuations[i] < targetValuation) {\r\n        amountsToAdd[i] = targetValuation - valuations[i];\r\n      }\r\n    }\r\n    return amountsToAdd;\r\n  }\r\n\r\n  /**\r\n   * @dev Internal function to transfer tokens from the caller to the contract and calculate the liquidity.\r\n   * @param index The index of the asset in the assetInfos array.\r\n   * @param amountToAdd The amount of native tokens to add as liquidity.\r\n   */\r\n  function _transferAndCalculateLiquidity(uint256 index, uint256 amountToAdd) internal {\r\n    uint256 tokenAmount = _convertBaseToToken(assetInfos[index].asset, amountToAdd);\r\n    require(tokenAmount > 0, 'Invalid token amount to add');\r\n    IERC20(assetInfos[index].asset).transferFrom(msg.sender, periphery, tokenAmount);\r\n    reserves[assetInfos[index].asset] += tokenAmount;\r\n  }\r\n\r\n  /**\r\n   * @dev Converts the specified amount of native token to the corresponding token amount.\r\n   * @param fromToken The address of the native token to convert from.\r\n   * @param amount The amount of native token to convert.\r\n   * @return The corresponding token amount.\r\n   */\r\n  function _convertBaseToToken(address fromToken, uint256 amount) internal view returns (uint256) {\r\n    uint256 tokenAmount = rebalancer.convert(baseAsset, fromToken, amount);\r\n    return tokenAmount;\r\n  }\r\n\r\n  /**\r\n   * @dev Returns the maximum of two uint8 values.\r\n   * @param a The first uint8 value.\r\n   * @param b The second uint8 value.\r\n   * @return The maximum value between a and b.\r\n   */\r\n  function max(uint8 a, uint8 b) private pure returns (uint8) {\r\n    return a >= b ? a : b;\r\n  }\r\n\r\n  /**\r\n   * @dev Returns the minimum of two uint8 values.\r\n   * @param a The first uint8 value.\r\n   * @param b The second uint8 value.\r\n   * @return The minimum value between a and b.\r\n   */\r\n  function min(uint8 a, uint8 b) private pure returns (uint8) {\r\n    return a <= b ? a : b;\r\n  }\r\n\r\n  /**\r\n   * @dev Converts the specified token to the native token using the rebalancer contract.\r\n   * @param fromToken The address of the token to convert from.\r\n   * @param amount The amount of tokens to convert.\r\n   * @return scaledAmount The converted amount of tokens.\r\n   */\r\n  function _convertTokenToBase(address fromToken, uint256 amount) internal view returns (uint256 scaledAmount) {\r\n    uint256 tokenAmount = rebalancer.convert(fromToken, baseAsset, amount);\r\n    return tokenAmount;\r\n  }\r\n\r\n  function updateReserves(uint256[] memory amounts, bool increase) external onlyPeriphery {\r\n    _updateReserves(amounts, increase);\r\n  }\r\n\r\n  function _updateReserves(uint256[] memory amounts, bool increase) internal {\r\n    for (uint256 i = 0; i < assetInfos.length; i++) {\r\n      address asset = assetInfos[i].asset;\r\n      uint256 newReserve = amounts[i];\r\n      if (increase) reserves[asset] += newReserve;\r\n      else reserves[asset] -= newReserve;\r\n    }\r\n  }\r\n\r\n  function _updateReservesAndTransfer() internal {\r\n    for (uint256 i = 0; i < assetInfos.length; i++) {\r\n      address asset = assetInfos[i].asset;\r\n      uint256 newReserve = IERC20(asset).balanceOf(address(this));\r\n      reserves[asset] = newReserve;\r\n      IERC20(asset).transfer(periphery, newReserve);\r\n    }\r\n  }\r\n\r\n  function decreaseReserves(uint256[] memory amounts) external onlyPeriphery {\r\n    for (uint256 i = 0; i < assetInfos.length; i++) {\r\n      address asset = assetInfos[i].asset;\r\n      uint256 newReserve = amounts[i];\r\n      reserves[asset] -= newReserve;\r\n    }\r\n  }\r\n\r\n  // return true if one of the deviation overcome the trigger\r\n  function isRebalanceNeeded() public view returns (bool) {\r\n    (bool[] memory directions, uint256[] memory deviations) = getDeviation();\r\n    for (uint256 i = 0; i < deviations.length; i++) {\r\n      if (directions[i] && deviations[i] > trigger) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n}\r\n"},"contracts/BaluniV1PoolFactory.sol":{"content":"// SPDX-License-Identifier: GNU AGPLv3\r\npragma solidity 0.8.25;\r\n/**\r\n *  __                  __                      __\r\n * /  |                /  |                    /  |\r\n * $$ |____    ______  $$ | __    __  _______  $$/\r\n * $$      \\  /      \\ $$ |/  |  /  |/       \\ /  |\r\n * $$$$$$$  | $$$$$$  |$$ |$$ |  $$ |$$$$$$$  |$$ |\r\n * $$ |  $$ | /    $$ |$$ |$$ |  $$ |$$ |  $$ |$$ |\r\n * $$ |__$$ |/$$$$$$$ |$$ |$$ \\__$$ |$$ |  $$ |$$ |\r\n * $$    $$/ $$    $$ |$$ |$$    $$/ $$ |  $$ |$$ |\r\n * $$$$$$$/   $$$$$$$/ $$/  $$$$$$/  $$/   $$/ $$/\r\n *\r\n *\r\n *                  ,-\"\"\"\"-.\r\n *                ,'      _ `.\r\n *               /       )_)  \\\r\n *              :              :\r\n *              \\              /\r\n *               \\            /\r\n *                `.        ,'\r\n *                  `.    ,'\r\n *                    `.,'\r\n *                     /\\`.   ,-._\r\n *                         `-'    \\__\r\n *                              .\r\n *               s                \\\r\n *                                \\\\\r\n *                                 \\\\\r\n *                                  >\\/7\r\n *                              _.-(6'  \\\r\n *                             (=___._/` \\\r\n *                                  )  \\ |\r\n *                                 /   / |\r\n *                                /    > /\r\n *                               j    < _\\\r\n *                           _.-' :      ``.\r\n *                           \\ r=._\\        `.\r\n */\r\nimport './BaluniV1Pool.sol';\r\nimport '@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol';\r\nimport '@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol';\r\nimport '@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol';\r\n\r\ncontract BaluniV1PoolFactory is Initializable, UUPSUpgradeable, OwnableUpgradeable {\r\n  address[] public allPools;\r\n  mapping(address => mapping(address => address)) public getPool;\r\n\r\n  address public rebalancer;\r\n  address public periphery;\r\n\r\n  event PoolCreated(address indexed pool, address[] assets, address rebalancer);\r\n\r\n  function initialize(address _rebalancer) public initializer {\r\n    __UUPSUpgradeable_init();\r\n    __Ownable_init(msg.sender);\r\n    rebalancer = _rebalancer;\r\n  }\r\n\r\n  function reinitialize(address _rebalancer, uint64 _version) public reinitializer(_version) {\r\n    rebalancer = _rebalancer;\r\n  }\r\n\r\n  function _authorizeUpgrade(address newImplementation) internal override onlyOwner {}\r\n\r\n  /**\r\n   * @dev Creates a new BaluniV1Pool contract and registers it in the factory.\r\n   * @param assets The array of asset addresses to be included in the pool.\r\n   * @param weights The array of weights corresponding to each asset in the pool.\r\n   * @param trigger The trigger value for rebalancing the pool.\r\n   * @return The address of the newly created pool.\r\n   */\r\n  function createPool(address[] memory assets, uint256[] memory weights, uint256 trigger) external returns (address) {\r\n    require(periphery != address(0), 'Periphery not set');\r\n    require(assets.length > 1, 'At least two assets are required');\r\n    require(assets.length == weights.length, 'Assets and weights length mismatch');\r\n\r\n    for (uint256 i = 0; i < assets.length; i++) {\r\n      for (uint256 j = i + 1; j < assets.length; j++) {\r\n        require(address(getPool[assets[i]][assets[j]]) == address(0), 'Pool already exists for this pair');\r\n      }\r\n    }\r\n\r\n    BaluniV1Pool newPool = new BaluniV1Pool(rebalancer, assets, weights, trigger, periphery);\r\n\r\n    address poolAddress = address(newPool);\r\n\r\n    allPools.push(poolAddress);\r\n    for (uint256 i = 0; i < assets.length; i++) {\r\n      for (uint256 j = i + 1; j < assets.length; j++) {\r\n        getPool[assets[i]][assets[j]] = poolAddress;\r\n        getPool[assets[j]][assets[i]] = poolAddress;\r\n      }\r\n    }\r\n\r\n    emit PoolCreated(poolAddress, assets, rebalancer);\r\n\r\n    return poolAddress;\r\n  }\r\n\r\n  /**\r\n   * @dev Retrieves all the pools created by the factory.\r\n   * @return An array of pool addresses.\r\n   */\r\n  function getAllPools() external view returns (address[] memory) {\r\n    return allPools;\r\n  }\r\n\r\n  /**\r\n   * @dev Retrieves the number of pools created by the factory.\r\n   * @return The count of pools.\r\n   */\r\n  function getPoolsCount() external view returns (uint256) {\r\n    return allPools.length;\r\n  }\r\n\r\n  /**\r\n   * @dev Retrieves the assets of a specific pool.\r\n   * @param poolAddress The address of the pool.\r\n   * @return An array of asset addresses.\r\n   */\r\n  function getPoolAssets(address poolAddress) external view returns (address[] memory) {\r\n    BaluniV1Pool pool = BaluniV1Pool(poolAddress);\r\n    return pool.getAssets();\r\n  }\r\n\r\n  /**\r\n   * @dev Retrieves the pool address based on the given assets.\r\n   * @param asset1 The address of the first asset.\r\n   * @param asset2 The address of the second asset.\r\n   * @return The address of the pool.\r\n   */\r\n  function getPoolByAssets(address asset1, address asset2) external view returns (address) {\r\n    return address(getPool[asset1][asset2]);\r\n  }\r\n\r\n  /**\r\n   * @dev Returns an array of pool addresses that contain the specified token.\r\n   * @param token The address of the token to search for.\r\n   * @return An array of pool addresses.\r\n   */\r\n  function getPoolsByAsset(address token) external view returns (address[] memory) {\r\n    address[] memory pools = new address[](allPools.length);\r\n    uint256 count = 0;\r\n\r\n    for (uint256 i = 0; i < allPools.length; i++) {\r\n      BaluniV1Pool pool = BaluniV1Pool(allPools[i]);\r\n      address[] memory assets = pool.getAssets();\r\n\r\n      for (uint256 j = 0; j < assets.length; j++) {\r\n        if (assets[j] == token) {\r\n          pools[count] = address(pool);\r\n          count++;\r\n          break;\r\n        }\r\n      }\r\n\r\n      if (count == pools.length) {\r\n        break;\r\n      }\r\n    }\r\n\r\n    address[] memory result = new address[](count);\r\n    for (uint256 i = 0; i < count; i++) {\r\n      result[i] = pools[i];\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * @dev Changes the address of the periphery contract.\r\n   * @param _newPeriphery The new address of the periphery contract.\r\n   */\r\n  function changePeriphery(address _newPeriphery) external onlyOwner {\r\n    periphery = _newPeriphery;\r\n  }\r\n\r\n  function poolExist(address _pool) external returns (bool) {\r\n    for (uint256 i = 0; i < allPools.length; i++) {\r\n      if (allPools[i] == _pool) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n}\r\n"},"contracts/BaluniV1PoolPeriphery.sol":{"content":"// SPDX-License-Identifier: GNU AGPLv3\r\npragma solidity 0.8.25;\r\n/**\r\n *  __                  __                      __\r\n * /  |                /  |                    /  |\r\n * $$ |____    ______  $$ | __    __  _______  $$/\r\n * $$      \\  /      \\ $$ |/  |  /  |/       \\ /  |\r\n * $$$$$$$  | $$$$$$  |$$ |$$ |  $$ |$$$$$$$  |$$ |\r\n * $$ |  $$ | /    $$ |$$ |$$ |  $$ |$$ |  $$ |$$ |\r\n * $$ |__$$ |/$$$$$$$ |$$ |$$ \\__$$ |$$ |  $$ |$$ |\r\n * $$    $$/ $$    $$ |$$ |$$    $$/ $$ |  $$ |$$ |\r\n * $$$$$$$/   $$$$$$$/ $$/  $$$$$$/  $$/   $$/ $$/\r\n *\r\n *\r\n *                  ,-\"\"\"\"-.\r\n *                ,'      _ `.\r\n *               /       )_)  \\\r\n *              :              :\r\n *              \\              /\r\n *               \\            /\r\n *                `.        ,'\r\n *                  `.    ,'\r\n *                    `.,'\r\n *                     /\\`.   ,-._\r\n *                         `-'    \\__\r\n *                              .\r\n *               s                \\\r\n *                                \\\\\r\n *                                 \\\\\r\n *                                  >\\/7\r\n *                              _.-(6'  \\\r\n *                             (=___._/` \\\r\n *                                  )  \\ |\r\n *                                 /   / |\r\n *                                /    > /\r\n *                               j    < _\\\r\n *                           _.-' :      ``.\r\n *                           \\ r=._\\        `.\r\n */\r\nimport './interfaces/IBaluniV1PoolFactory.sol';\r\nimport './interfaces/IBaluniV1Pool.sol';\r\nimport '@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol';\r\nimport '@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol';\r\nimport '@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol';\r\n\r\n/**\r\n * @title BaluniV1PoolPeriphery\r\n * @dev This contract serves as the periphery contract for interacting with BaluniV1Pool contracts.\r\n * It provides functions for swapping tokens, adding liquidity, removing liquidity, and getting the amount out for a given swap.\r\n */\r\ncontract BaluniV1PoolPeriphery is Initializable, OwnableUpgradeable, UUPSUpgradeable {\r\n  IBaluniV1PoolFactory public poolFactory;\r\n\r\n  /**\r\n   * @dev Initializes the contract by setting the pool factory address.\r\n   * @param _poolFactory The address of the BaluniV1PoolFactory contract.\r\n   */\r\n  function initialize(address _poolFactory) public initializer {\r\n    __UUPSUpgradeable_init();\r\n    __Ownable_init(msg.sender);\r\n    poolFactory = IBaluniV1PoolFactory(_poolFactory);\r\n  }\r\n\r\n  /**\r\n   * @dev Initializes the contract by setting the pool factory address.\r\n   * @param _poolFactory The address of the BaluniV1PoolFactory contract.\r\n   */\r\n  function reinitialize(address _poolFactory, uint64 version) public reinitializer(version) {\r\n    poolFactory = IBaluniV1PoolFactory(_poolFactory);\r\n  }\r\n\r\n  /**\r\n   * @dev Internal function to authorize an upgrade to a new implementation contract.\r\n   * @param newImplementation The address of the new implementation contract.\r\n   * @notice This function can only be called by the contract owner.\r\n   */\r\n  function _authorizeUpgrade(address newImplementation) internal override onlyOwner {}\r\n\r\n  /**\r\n   * @dev Swaps tokens in a BaluniV1Pool.\r\n   * @param fromToken The address of the token to swap from.\r\n   * @param toToken The address of the token to swap to.\r\n   * @param amount The amount of tokens to swap.\r\n   * @return The amount of tokens received after the swap.\r\n   */\r\n  function swap(address fromToken, address toToken, uint256 amount, address receiver) external returns (uint256) {\r\n    require(amount > 0, 'Amount must be greater than zero');\r\n\r\n    // Get the pool address for the given tokens\r\n    address poolAddress = poolFactory.getPoolByAssets(fromToken, toToken);\r\n    IBaluniV1Pool pool = IBaluniV1Pool(poolAddress);\r\n\r\n    IERC20(fromToken).transferFrom(msg.sender, address(this), amount);\r\n    IERC20(fromToken).approve(poolAddress, amount);\r\n\r\n    uint256 amountOut = pool.swap(fromToken, toToken, amount, receiver);\r\n\r\n    return amountOut;\r\n  }\r\n\r\n  /**\r\n   * @dev Performs batch swaps between multiple token pairs.\r\n   * @param fromTokens An array of addresses representing the tokens to swap from.\r\n   * @param toTokens An array of addresses representing the tokens to swap to.\r\n   * @param amounts An array of amounts representing the amounts to swap.\r\n   * @param receivers An array of addresses representing the receivers of the swapped tokens.\r\n   * @return An array of amounts representing the amounts of tokens received after the swaps.\r\n   */\r\n  function batchSwap(\r\n    address[] calldata fromTokens,\r\n    address[] calldata toTokens,\r\n    uint256[] calldata amounts,\r\n    address[] calldata receivers\r\n  ) external returns (uint256[] memory) {\r\n    require(\r\n      fromTokens.length == toTokens.length && toTokens.length == amounts.length && amounts.length == receivers.length,\r\n      'Input arrays length mismatch'\r\n    );\r\n\r\n    uint256[] memory amountsOut = new uint256[](fromTokens.length);\r\n\r\n    for (uint256 i = 0; i < fromTokens.length; i++) {\r\n      require(amounts[i] > 0, 'Amount must be greater than zero');\r\n\r\n      // Transfer fromToken from sender to this contract\r\n      IERC20(fromTokens[i]).transferFrom(msg.sender, address(this), amounts[i]);\r\n\r\n      // Get the pool address for the given tokens\r\n      address poolAddress = poolFactory.getPoolByAssets(fromTokens[i], toTokens[i]);\r\n      IBaluniV1Pool pool = IBaluniV1Pool(poolAddress);\r\n\r\n      // Approve the pool to spend fromToken\r\n      IERC20(fromTokens[i]).approve(poolAddress, amounts[i]);\r\n\r\n      // Perform the swap\r\n      uint256 amountOut = pool.swap(fromTokens[i], toTokens[i], amounts[i], receivers[i]);\r\n      amountsOut[i] = amountOut;\r\n    }\r\n\r\n    return amountsOut;\r\n  }\r\n\r\n  function smartSwap(address fromToken, address toToken, uint256 amount, address receiver) external returns (uint256) {\r\n    require(amount > 0, 'Amount must be greater than zero');\r\n\r\n    // Get all pools that contain fromToken\r\n    address[] memory fromPools = poolFactory.getPoolsByAsset(fromToken);\r\n    uint256 bestAmountOut = 0;\r\n    address bestPoolAddress;\r\n    uint256 bestTokenLiquidity = 0;\r\n\r\n    // Iterate over all pools to find the best pool based on token-specific liquidity and asset deviation\r\n    for (uint256 i = 0; i < fromPools.length; i++) {\r\n      IBaluniV1Pool pool = IBaluniV1Pool(fromPools[i]);\r\n      (bool[] memory directions, uint256[] memory deviations) = pool.getDeviation();\r\n      (uint256 totalValuation, uint256[] memory valuations) = pool.computeTotalValuation();\r\n\r\n      // Check if fromToken is overweight and get the liquidity of the specific token\r\n      for (uint256 j = 0; j < directions.length; j++) {\r\n        if (pool.assetInfos(j).asset == fromToken) {\r\n          uint256 tokenLiquidity = valuations[j];\r\n          if (directions[j] && tokenLiquidity > bestTokenLiquidity) {\r\n            bestTokenLiquidity = tokenLiquidity;\r\n            bestPoolAddress = fromPools[i];\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    require(bestPoolAddress != address(0), 'No suitable pool found');\r\n\r\n    // Perform the swap in the best pool\r\n    IBaluniV1Pool bestPool = IBaluniV1Pool(bestPoolAddress);\r\n    IERC20(fromToken).transferFrom(msg.sender, address(this), amount);\r\n    IERC20(fromToken).approve(bestPoolAddress, amount);\r\n    uint256 amountReceived = bestPool.swap(fromToken, toToken, amount, receiver);\r\n\r\n    return amountReceived;\r\n  }\r\n\r\n  /**\r\n   * @dev Adds liquidity to a BaluniV1Pool.\r\n   * @param amounts An array of amounts for each asset to add as liquidity.\r\n   */\r\n  function addLiquidity(uint256[] calldata amounts, address poolAddress, address receiver) external {\r\n    IBaluniV1Pool pool = IBaluniV1Pool(poolAddress);\r\n    address[] memory assets = pool.getAssets(); // Get the assets in the pool\r\n\r\n    for (uint256 i = 0; i < assets.length; i++) {\r\n      address asset = assets[i];\r\n      uint256 amount = amounts[i];\r\n      IERC20(asset).transferFrom(msg.sender, address(this), amount);\r\n    }\r\n\r\n    pool.mint(receiver);\r\n  }\r\n\r\n  /**\r\n   * @dev Removes liquidity from a BaluniV1Pool.\r\n   * @param share The amount of liquidity tokens to remove.\r\n   * @param poolAddress The address of the BaluniV1Pool.\r\n   */\r\n  function removeLiquidity(uint256 share, address poolAddress, address receiver) external {\r\n    require(share > 0, 'Share must be greater than zero');\r\n    IERC20 poolToken = IERC20(poolAddress);\r\n\r\n    // Check allowance\r\n    uint256 allowance = poolToken.allowance(msg.sender, address(this));\r\n    require(allowance >= share, 'Insufficient allowance');\r\n\r\n    // Check balance\r\n    uint256 balance = poolToken.balanceOf(msg.sender);\r\n    require(balance >= share, 'Insufficient balance');\r\n\r\n    bool success = poolToken.transferFrom(msg.sender, poolAddress, share);\r\n    require(success, 'Transfer failed');\r\n\r\n    IBaluniV1Pool(poolAddress).burn(receiver);\r\n  }\r\n\r\n  /**\r\n   * @dev Gets the amount of tokens received after a swap in a BaluniV1Pool.\r\n   * @param fromToken The address of the token to swap from.\r\n   * @param toToken The address of the token to swap to.\r\n   * @param amount The amount of tokens to swap.\r\n   * @return The amount of tokens received after the swap.\r\n   */\r\n  function getAmountOut(address fromToken, address toToken, uint256 amount) external view returns (uint256) {\r\n    address poolAddress = poolFactory.getPoolByAssets(fromToken, toToken);\r\n    IBaluniV1Pool pool = IBaluniV1Pool(poolAddress);\r\n    return pool.getAmountOut(fromToken, toToken, amount);\r\n  }\r\n\r\n  /**\r\n   * @dev Performs rebalance if needed for the given tokens.\r\n   * @param poolAddress The address of the token pool to rebalance.\r\n   */\r\n  function performRebalanceIfNeeded(address poolAddress) external {\r\n    IBaluniV1Pool pool = IBaluniV1Pool(poolAddress);\r\n    pool.performRebalanceIfNeeded(msg.sender);\r\n  }\r\n\r\n  /**\r\n   * @dev Returns an array of pool addresses that contain the given token.\r\n   * @param token The address of the token to search for.\r\n   * @return An array of pool addresses.\r\n   */\r\n  function getPoolsContainingToken(address token) external view returns (address[] memory) {\r\n    return poolFactory.getPoolsByAsset(token);\r\n  }\r\n\r\n  /**\r\n   * @dev Returns the version of the contract.\r\n   * @return The version string.\r\n   */\r\n  function getVersion() external view returns (uint64) {\r\n    return _getInitializedVersion();\r\n  }\r\n\r\n  /**\r\n   * @dev Changes the address of the pool factory contract.\r\n   * Can only be called by the contract owner.\r\n   * @param _poolFactory The new address of the pool factory contract.\r\n   */\r\n  function changePoolFactory(address _poolFactory) external onlyOwner {\r\n    poolFactory = IBaluniV1PoolFactory(_poolFactory);\r\n  }\r\n\r\n  function transferToPool() external {\r\n    require(poolFactory.poolExist(msg.sender), 'Only Pools');\r\n    uint256[] memory reserves = IBaluniV1Pool(msg.sender).getReserves();\r\n    address[] memory assets = IBaluniV1Pool(msg.sender).getAssets();\r\n    for (uint256 i = 0; i < assets.length; i++) {\r\n      IERC20(assets[i]).transfer(msg.sender, reserves[i]);\r\n    }\r\n  }\r\n}\r\n"},"contracts/interfaces/IBaluniV1Pool.sol":{"content":"// SPDX-License-Identifier: GNU AGPLv3\r\npragma solidity 0.8.25;\r\nimport '@openzeppelin/contracts/token/ERC20/ERC20.sol';\r\n\r\ninterface IBaluniV1Pool {\r\n  // Views\r\n  function rebalancer() external view returns (address);\r\n\r\n  function assets(uint256 index) external view returns (address);\r\n\r\n  function weights(uint256 index) external view returns (uint256);\r\n\r\n  function trigger() external view returns (uint256);\r\n\r\n  function ONE() external view returns (uint256);\r\n\r\n  function router() external view returns (address);\r\n\r\n  function SWAP_FEE_BPS() external view returns (uint256);\r\n\r\n  function getReserves() external view returns (uint256[] memory);\r\n\r\n  function getAssets() external view returns (address[] memory);\r\n\r\n  function getWeights() external view returns (uint256[] memory);\r\n\r\n  function getAmountOut(address fromToken, address toToken, uint256 amount) external view returns (uint256);\r\n\r\n  function performRebalanceIfNeeded(address _sender) external;\r\n\r\n  function getDeviation() external view returns (bool[] memory directions, uint256[] memory deviations);\r\n\r\n  function assetLiquidity(uint256 assetIndex) external view returns (uint256);\r\n\r\n  function liquidity() external view returns (uint256);\r\n\r\n  function unitPrice() external view returns (uint256);\r\n\r\n  // Mutative\r\n  function rebalanceWeights(address receiver) external;\r\n\r\n  function swap(address fromToken, address toToken, uint256 amount, address receiver) external returns (uint256);\r\n\r\n  function mint(address to) external returns (uint256);\r\n\r\n  function mintOneSide(uint256 assetIndex, uint256 amount, address receiver) external returns (uint256);\r\n\r\n  function burn(address to) external;\r\n\r\n  function changeRebalancer(address _newRebalancer) external;\r\n\r\n  function changeRouter(address _newRouter) external;\r\n\r\n  function computeTotalValuation() external view returns (uint256 totalVal, uint256[] memory valuations);\r\n\r\n  struct AssetInfo {\r\n    address asset;\r\n    uint256 weight;\r\n  }\r\n\r\n  function assetInfos(uint _index) external view returns (AssetInfo memory);\r\n\r\n  // Events\r\n  event RebalancePerformed(address indexed by, address[] assets);\r\n  event WeightsRebalanced(address indexed user, uint256[] amountsAdded);\r\n  event Burn(address indexed user, uint256 sharesBurned);\r\n  event Mint(address indexed to, uint256 sharesMinted);\r\n  event Swap(\r\n    address indexed user,\r\n    address indexed fromToken,\r\n    address indexed toToken,\r\n    uint256 amountIn,\r\n    uint256 amountOut\r\n  );\r\n}\r\n"},"contracts/interfaces/IBaluniV1PoolFactory.sol":{"content":"// SPDX-License-Identifier: GNU AGPLv3\r\npragma solidity 0.8.25;\r\n\r\ninterface IBaluniV1PoolFactory {\r\n  function getPoolByAssets(address asset1, address asset2) external view returns (address);\r\n\r\n  function getPoolsByAsset(address token) external view returns (address[] memory);\r\n\r\n  function poolExist(address _pool) external view returns (bool);\r\n}\r\n"},"contracts/interfaces/IBaluniV1PoolPeriphery.sol":{"content":"// SPDX-License-Identifier: GNU AGPLv3\r\npragma solidity 0.8.25;\r\n\r\ninterface IBaluniV1PoolPeriphery {\r\n  function transferToPool() external;\r\n}\r\n"},"contracts/interfaces/IBaluniV1Rebalancer.sol":{"content":"// SPDX-License-Identifier: GNU AGPLv3\r\npragma solidity 0.8.25;\r\nimport '@openzeppelin/contracts/token/ERC20/IERC20.sol';\r\nimport '@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol';\r\n\r\ninterface IBaluniV1Rebalancer {\r\n  enum RebalanceType {\r\n    Overweight,\r\n    Underweight,\r\n    NoRebalance\r\n  }\r\n\r\n  struct RebalanceVars {\r\n    uint256 len;\r\n    uint256 totalValue;\r\n    uint256 finalUsdBalance;\r\n    uint256 overweightVaultsLength;\r\n    uint256 underweightVaultsLength;\r\n    uint256 totalActiveWeight;\r\n    uint256 amountOut;\r\n    uint256[] overweightVaults;\r\n    uint256[] overweightAmounts;\r\n    uint256[] underweightVaults;\r\n    uint256[] underweightAmounts;\r\n    uint256[] balances;\r\n  }\r\n\r\n  function checkRebalance(\r\n    address[] calldata assets,\r\n    uint256[] calldata weights,\r\n    uint256 limit,\r\n    address sender,\r\n    address baseAsset\r\n  ) external view returns (RebalanceVars memory);\r\n\r\n  function rebalance(\r\n    address[] calldata assets,\r\n    uint256[] calldata weights,\r\n    address sender,\r\n    address receiver,\r\n    uint256 limit,\r\n    address baseAsset\r\n  ) external;\r\n\r\n  function getBaluniRouter() external view returns (address);\r\n\r\n  function getRate(IERC20 srcToken, IERC20 dstToken, bool useWrappers) external view returns (uint256 weightedRate);\r\n\r\n  function getTreasury() external view returns (address);\r\n\r\n  function getUSDCAddress() external view returns (address);\r\n\r\n  function getWNATIVEAddress() external view returns (address);\r\n\r\n  function getRateToEth(IERC20 srcToken, bool useWrappers) external view returns (uint256 weightedRate);\r\n\r\n  function convert(address fromToken, address toToken, uint256 amount) external view returns (uint256);\r\n}\r\n"},"contracts/interfaces/IBaluniV1Router.sol":{"content":"// SPDX-License-Identifier: GNU AGPLv3\r\npragma solidity 0.8.25;\r\n\r\ninterface IBaluniV1Router {\r\n  function getAgentAddress(address _user) external view returns (address);\r\n\r\n  function getBpsFee() external view returns (uint256);\r\n\r\n  function tokenValuation(uint256 amount, address token) external view returns (uint256);\r\n\r\n  function getTreasury() external view returns (address);\r\n\r\n  function getUnitPrice() external view returns (uint256);\r\n}\r\n"}},"settings":{"optimizer":{"enabled":true,"runs":80000},"viaIR":true,"evmVersion":"cancun","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates","devdoc","userdoc"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"errors":[{"component":"general","errorCode":"2072","formattedMessage":"Warning: Unused local variable.\n   --> contracts/BaluniV1PoolPeriphery.sol:148:5:\n    |\n148 |     uint256 bestAmountOut = 0;\n    |     ^^^^^^^^^^^^^^^^^^^^^\n\n","message":"Unused local variable.","severity":"warning","sourceLocation":{"end":6152,"file":"contracts/BaluniV1PoolPeriphery.sol","start":6131},"type":"Warning"},{"component":"general","errorCode":"2072","formattedMessage":"Warning: Unused local variable.\n   --> contracts/BaluniV1PoolPeriphery.sol:155:34:\n    |\n155 |       (bool[] memory directions, uint256[] memory deviations) = pool.getDeviation();\n    |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n","message":"Unused local variable.","severity":"warning","sourceLocation":{"end":6506,"file":"contracts/BaluniV1PoolPeriphery.sol","start":6479},"type":"Warning"},{"component":"general","errorCode":"2072","formattedMessage":"Warning: Unused local variable.\n   --> contracts/BaluniV1PoolPeriphery.sol:156:8:\n    |\n156 |       (uint256 totalValuation, uint256[] memory valuations) = pool.computeTotalValuation();\n    |        ^^^^^^^^^^^^^^^^^^^^^^\n\n","message":"Unused local variable.","severity":"warning","sourceLocation":{"end":6561,"file":"contracts/BaluniV1PoolPeriphery.sol","start":6539},"type":"Warning"},{"component":"general","errorCode":"2018","formattedMessage":"Warning: Function state mutability can be restricted to view\n   --> contracts/BaluniV1PoolFactory.sol:179:3:\n    |\n179 |   function poolExist(address _pool) external returns (bool) {\n    |   ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"Function state mutability can be restricted to view","severity":"warning","sourceLocation":{"end":6441,"file":"contracts/BaluniV1PoolFactory.sol","start":6232},"type":"Warning"}],"sources":{"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","exportedSymbols":{"ContextUpgradeable":[676],"Initializable":[448],"OwnableUpgradeable":[194]},"id":195,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:0"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../utils/ContextUpgradeable.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":195,"sourceUnit":677,"src":"128:67:0","symbolAliases":[{"foreign":{"id":2,"name":"ContextUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":676,"src":"136:18:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":5,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":195,"sourceUnit":449,"src":"196:63:0","symbolAliases":[{"foreign":{"id":4,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"204:13:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":7,"name":"Initializable","nameLocations":["789:13:0"],"nodeType":"IdentifierPath","referencedDeclaration":448,"src":"789:13:0"},"id":8,"nodeType":"InheritanceSpecifier","src":"789:13:0"},{"baseName":{"id":9,"name":"ContextUpgradeable","nameLocations":["804:18:0"],"nodeType":"IdentifierPath","referencedDeclaration":676,"src":"804:18:0"},"id":10,"nodeType":"InheritanceSpecifier","src":"804:18:0"}],"canonicalName":"OwnableUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":6,"nodeType":"StructuredDocumentation","src":"261:487:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":194,"linearizedBaseContracts":[194,676,448],"name":"OwnableUpgradeable","nameLocation":"767:18:0","nodeType":"ContractDefinition","nodes":[{"canonicalName":"OwnableUpgradeable.OwnableStorage","documentation":{"id":11,"nodeType":"StructuredDocumentation","src":"829:65:0","text":"@custom:storage-location erc7201:openzeppelin.storage.Ownable"},"id":14,"members":[{"constant":false,"id":13,"mutability":"mutable","name":"_owner","nameLocation":"939:6:0","nodeType":"VariableDeclaration","scope":14,"src":"931:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"OwnableStorage","nameLocation":"906:14:0","nodeType":"StructDefinition","scope":194,"src":"899:53:0","visibility":"public"},{"constant":true,"id":17,"mutability":"constant","name":"OwnableStorageLocation","nameLocation":"1094:22:0","nodeType":"VariableDeclaration","scope":194,"src":"1069:116:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1069:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307839303136643039643732643430666461653266643863656163366236323334633737303632313466643339633163643165363039613035323863313939333030","id":16,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1119:66:0","typeDescriptions":{"typeIdentifier":"t_rational_65173360639460082030725920392146925864023520599682862633725751242436743107328_by_1","typeString":"int_const 6517...(69 digits omitted)...7328"},"value":"0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300"},"visibility":"private"},{"body":{"id":24,"nodeType":"Block","src":"1270:81:0","statements":[{"AST":{"nativeSrc":"1289:56:0","nodeType":"YulBlock","src":"1289:56:0","statements":[{"nativeSrc":"1303:32:0","nodeType":"YulAssignment","src":"1303:32:0","value":{"name":"OwnableStorageLocation","nativeSrc":"1313:22:0","nodeType":"YulIdentifier","src":"1313:22:0"},"variableNames":[{"name":"$.slot","nativeSrc":"1303:6:0","nodeType":"YulIdentifier","src":"1303:6:0"}]}]},"evmVersion":"cancun","externalReferences":[{"declaration":21,"isOffset":false,"isSlot":true,"src":"1303:6:0","suffix":"slot","valueSize":1},{"declaration":17,"isOffset":false,"isSlot":false,"src":"1313:22:0","valueSize":1}],"id":23,"nodeType":"InlineAssembly","src":"1280:65:0"}]},"id":25,"implemented":true,"kind":"function","modifiers":[],"name":"_getOwnableStorage","nameLocation":"1201:18:0","nodeType":"FunctionDefinition","parameters":{"id":18,"nodeType":"ParameterList","parameters":[],"src":"1219:2:0"},"returnParameters":{"id":22,"nodeType":"ParameterList","parameters":[{"constant":false,"id":21,"mutability":"mutable","name":"$","nameLocation":"1267:1:0","nodeType":"VariableDeclaration","scope":25,"src":"1244:24:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"},"typeName":{"id":20,"nodeType":"UserDefinedTypeName","pathNode":{"id":19,"name":"OwnableStorage","nameLocations":["1244:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":14,"src":"1244:14:0"},"referencedDeclaration":14,"src":"1244:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"}},"visibility":"internal"}],"src":"1243:26:0"},"scope":194,"src":"1192:159:0","stateMutability":"pure","virtual":false,"visibility":"private"},{"documentation":{"id":26,"nodeType":"StructuredDocumentation","src":"1357:85:0","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":30,"name":"OwnableUnauthorizedAccount","nameLocation":"1453:26:0","nodeType":"ErrorDefinition","parameters":{"id":29,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28,"mutability":"mutable","name":"account","nameLocation":"1488:7:0","nodeType":"VariableDeclaration","scope":30,"src":"1480:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":27,"name":"address","nodeType":"ElementaryTypeName","src":"1480:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1479:17:0"},"src":"1447:50:0"},{"documentation":{"id":31,"nodeType":"StructuredDocumentation","src":"1503:82:0","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":35,"name":"OwnableInvalidOwner","nameLocation":"1596:19:0","nodeType":"ErrorDefinition","parameters":{"id":34,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33,"mutability":"mutable","name":"owner","nameLocation":"1624:5:0","nodeType":"VariableDeclaration","scope":35,"src":"1616:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":32,"name":"address","nodeType":"ElementaryTypeName","src":"1616:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1615:15:0"},"src":"1590:41:0"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":41,"name":"OwnershipTransferred","nameLocation":"1643:20:0","nodeType":"EventDefinition","parameters":{"id":40,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1680:13:0","nodeType":"VariableDeclaration","scope":41,"src":"1664:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":36,"name":"address","nodeType":"ElementaryTypeName","src":"1664:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":39,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1711:8:0","nodeType":"VariableDeclaration","scope":41,"src":"1695:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":38,"name":"address","nodeType":"ElementaryTypeName","src":"1695:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1663:57:0"},"src":"1637:84:0"},{"body":{"id":53,"nodeType":"Block","src":"1919:55:0","statements":[{"expression":{"arguments":[{"id":50,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":44,"src":"1954:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":49,"name":"__Ownable_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":81,"src":"1929:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":51,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1929:38:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":52,"nodeType":"ExpressionStatement","src":"1929:38:0"}]},"documentation":{"id":42,"nodeType":"StructuredDocumentation","src":"1727:115:0","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":54,"implemented":true,"kind":"function","modifiers":[{"id":47,"kind":"modifierInvocation","modifierName":{"id":46,"name":"onlyInitializing","nameLocations":["1902:16:0"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"1902:16:0"},"nodeType":"ModifierInvocation","src":"1902:16:0"}],"name":"__Ownable_init","nameLocation":"1856:14:0","nodeType":"FunctionDefinition","parameters":{"id":45,"nodeType":"ParameterList","parameters":[{"constant":false,"id":44,"mutability":"mutable","name":"initialOwner","nameLocation":"1879:12:0","nodeType":"VariableDeclaration","scope":54,"src":"1871:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":43,"name":"address","nodeType":"ElementaryTypeName","src":"1871:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1870:22:0"},"returnParameters":{"id":48,"nodeType":"ParameterList","parameters":[],"src":"1919:0:0"},"scope":194,"src":"1847:127:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":80,"nodeType":"Block","src":"2062:153:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":66,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":61,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":56,"src":"2076:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":64,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2100:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":63,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2092:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":62,"name":"address","nodeType":"ElementaryTypeName","src":"2092:7:0","typeDescriptions":{}}},"id":65,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2092:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2076:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":75,"nodeType":"IfStatement","src":"2072:95:0","trueBody":{"id":74,"nodeType":"Block","src":"2104:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":70,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2153:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":69,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2145:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":68,"name":"address","nodeType":"ElementaryTypeName","src":"2145:7:0","typeDescriptions":{}}},"id":71,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2145:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":67,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":35,"src":"2125:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":72,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2125:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":73,"nodeType":"RevertStatement","src":"2118:38:0"}]}},{"expression":{"arguments":[{"id":77,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":56,"src":"2195:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":76,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"2176:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":78,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2176:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":79,"nodeType":"ExpressionStatement","src":"2176:32:0"}]},"id":81,"implemented":true,"kind":"function","modifiers":[{"id":59,"kind":"modifierInvocation","modifierName":{"id":58,"name":"onlyInitializing","nameLocations":["2045:16:0"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"2045:16:0"},"nodeType":"ModifierInvocation","src":"2045:16:0"}],"name":"__Ownable_init_unchained","nameLocation":"1989:24:0","nodeType":"FunctionDefinition","parameters":{"id":57,"nodeType":"ParameterList","parameters":[{"constant":false,"id":56,"mutability":"mutable","name":"initialOwner","nameLocation":"2022:12:0","nodeType":"VariableDeclaration","scope":81,"src":"2014:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":55,"name":"address","nodeType":"ElementaryTypeName","src":"2014:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2013:22:0"},"returnParameters":{"id":60,"nodeType":"ParameterList","parameters":[],"src":"2062:0:0"},"scope":194,"src":"1980:235:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":88,"nodeType":"Block","src":"2324:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":84,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":122,"src":"2334:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":85,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2334:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":86,"nodeType":"ExpressionStatement","src":"2334:13:0"},{"id":87,"nodeType":"PlaceholderStatement","src":"2357:1:0"}]},"documentation":{"id":82,"nodeType":"StructuredDocumentation","src":"2221:77:0","text":" @dev Throws if called by any account other than the owner."},"id":89,"name":"onlyOwner","nameLocation":"2312:9:0","nodeType":"ModifierDefinition","parameters":{"id":83,"nodeType":"ParameterList","parameters":[],"src":"2321:2:0"},"src":"2303:62:0","virtual":false,"visibility":"internal"},{"body":{"id":104,"nodeType":"Block","src":"2496:89:0","statements":[{"assignments":[97],"declarations":[{"constant":false,"id":97,"mutability":"mutable","name":"$","nameLocation":"2529:1:0","nodeType":"VariableDeclaration","scope":104,"src":"2506:24:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"},"typeName":{"id":96,"nodeType":"UserDefinedTypeName","pathNode":{"id":95,"name":"OwnableStorage","nameLocations":["2506:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":14,"src":"2506:14:0"},"referencedDeclaration":14,"src":"2506:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"}},"visibility":"internal"}],"id":100,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":98,"name":"_getOwnableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":25,"src":"2533:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$14_storage_ptr_$","typeString":"function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"}},"id":99,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2533:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"2506:47:0"},{"expression":{"expression":{"id":101,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97,"src":"2570:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage storage pointer"}},"id":102,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2572:6:0","memberName":"_owner","nodeType":"MemberAccess","referencedDeclaration":13,"src":"2570:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":94,"id":103,"nodeType":"Return","src":"2563:15:0"}]},"documentation":{"id":90,"nodeType":"StructuredDocumentation","src":"2371:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":105,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"2450:5:0","nodeType":"FunctionDefinition","parameters":{"id":91,"nodeType":"ParameterList","parameters":[],"src":"2455:2:0"},"returnParameters":{"id":94,"nodeType":"ParameterList","parameters":[{"constant":false,"id":93,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":105,"src":"2487:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":92,"name":"address","nodeType":"ElementaryTypeName","src":"2487:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2486:9:0"},"scope":194,"src":"2441:144:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":121,"nodeType":"Block","src":"2703:117:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":109,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":105,"src":"2717:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":110,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2717:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":111,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":658,"src":"2728:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2728:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2717:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":120,"nodeType":"IfStatement","src":"2713:101:0","trueBody":{"id":119,"nodeType":"Block","src":"2742:72:0","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":115,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":658,"src":"2790:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2790:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":114,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"2763:26:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2763:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":118,"nodeType":"RevertStatement","src":"2756:47:0"}]}}]},"documentation":{"id":106,"nodeType":"StructuredDocumentation","src":"2591:62:0","text":" @dev Throws if the sender is not the owner."},"id":122,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"2667:11:0","nodeType":"FunctionDefinition","parameters":{"id":107,"nodeType":"ParameterList","parameters":[],"src":"2678:2:0"},"returnParameters":{"id":108,"nodeType":"ParameterList","parameters":[],"src":"2703:0:0"},"scope":194,"src":"2658:162:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":135,"nodeType":"Block","src":"3209:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3246:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":130,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3238:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":129,"name":"address","nodeType":"ElementaryTypeName","src":"3238:7:0","typeDescriptions":{}}},"id":132,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3238:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":128,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"3219:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":133,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3219:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":134,"nodeType":"ExpressionStatement","src":"3219:30:0"}]},"documentation":{"id":123,"nodeType":"StructuredDocumentation","src":"2826:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":136,"implemented":true,"kind":"function","modifiers":[{"id":126,"kind":"modifierInvocation","modifierName":{"id":125,"name":"onlyOwner","nameLocations":["3199:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"3199:9:0"},"nodeType":"ModifierInvocation","src":"3199:9:0"}],"name":"renounceOwnership","nameLocation":"3164:17:0","nodeType":"FunctionDefinition","parameters":{"id":124,"nodeType":"ParameterList","parameters":[],"src":"3181:2:0"},"returnParameters":{"id":127,"nodeType":"ParameterList","parameters":[],"src":"3209:0:0"},"scope":194,"src":"3155:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":163,"nodeType":"Block","src":"3475:145:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":144,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":139,"src":"3489:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3509:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":146,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3501:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":145,"name":"address","nodeType":"ElementaryTypeName","src":"3501:7:0","typeDescriptions":{}}},"id":148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3501:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3489:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":158,"nodeType":"IfStatement","src":"3485:91:0","trueBody":{"id":157,"nodeType":"Block","src":"3513:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3562:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":152,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3554:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":151,"name":"address","nodeType":"ElementaryTypeName","src":"3554:7:0","typeDescriptions":{}}},"id":154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3554:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":150,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":35,"src":"3534:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":155,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3534:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":156,"nodeType":"RevertStatement","src":"3527:38:0"}]}},{"expression":{"arguments":[{"id":160,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":139,"src":"3604:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":159,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"3585:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3585:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":162,"nodeType":"ExpressionStatement","src":"3585:28:0"}]},"documentation":{"id":137,"nodeType":"StructuredDocumentation","src":"3262:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":164,"implemented":true,"kind":"function","modifiers":[{"id":142,"kind":"modifierInvocation","modifierName":{"id":141,"name":"onlyOwner","nameLocations":["3465:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"3465:9:0"},"nodeType":"ModifierInvocation","src":"3465:9:0"}],"name":"transferOwnership","nameLocation":"3414:17:0","nodeType":"FunctionDefinition","parameters":{"id":140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":139,"mutability":"mutable","name":"newOwner","nameLocation":"3440:8:0","nodeType":"VariableDeclaration","scope":164,"src":"3432:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":138,"name":"address","nodeType":"ElementaryTypeName","src":"3432:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3431:18:0"},"returnParameters":{"id":143,"nodeType":"ParameterList","parameters":[],"src":"3475:0:0"},"scope":194,"src":"3405:215:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":192,"nodeType":"Block","src":"3837:185:0","statements":[{"assignments":[172],"declarations":[{"constant":false,"id":172,"mutability":"mutable","name":"$","nameLocation":"3870:1:0","nodeType":"VariableDeclaration","scope":192,"src":"3847:24:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"},"typeName":{"id":171,"nodeType":"UserDefinedTypeName","pathNode":{"id":170,"name":"OwnableStorage","nameLocations":["3847:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":14,"src":"3847:14:0"},"referencedDeclaration":14,"src":"3847:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"}},"visibility":"internal"}],"id":175,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":173,"name":"_getOwnableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":25,"src":"3874:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$14_storage_ptr_$","typeString":"function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"}},"id":174,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3874:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3847:47:0"},{"assignments":[177],"declarations":[{"constant":false,"id":177,"mutability":"mutable","name":"oldOwner","nameLocation":"3912:8:0","nodeType":"VariableDeclaration","scope":192,"src":"3904:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":176,"name":"address","nodeType":"ElementaryTypeName","src":"3904:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":180,"initialValue":{"expression":{"id":178,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":172,"src":"3923:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage storage pointer"}},"id":179,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3925:6:0","memberName":"_owner","nodeType":"MemberAccess","referencedDeclaration":13,"src":"3923:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3904:27:0"},{"expression":{"id":185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":181,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":172,"src":"3941:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage storage pointer"}},"id":183,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3943:6:0","memberName":"_owner","nodeType":"MemberAccess","referencedDeclaration":13,"src":"3941:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":184,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"3952:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3941:19:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":186,"nodeType":"ExpressionStatement","src":"3941:19:0"},{"eventCall":{"arguments":[{"id":188,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":177,"src":"3996:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":189,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"4006:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":187,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41,"src":"3975:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":190,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3975:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":191,"nodeType":"EmitStatement","src":"3970:45:0"}]},"documentation":{"id":165,"nodeType":"StructuredDocumentation","src":"3626:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":193,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"3783:18:0","nodeType":"FunctionDefinition","parameters":{"id":168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":167,"mutability":"mutable","name":"newOwner","nameLocation":"3810:8:0","nodeType":"VariableDeclaration","scope":193,"src":"3802:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":166,"name":"address","nodeType":"ElementaryTypeName","src":"3802:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3801:18:0"},"returnParameters":{"id":169,"nodeType":"ParameterList","parameters":[],"src":"3837:0:0"},"scope":194,"src":"3774:248:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":195,"src":"749:3275:0","usedErrors":[30,35,211,214],"usedEvents":[41,219]}],"src":"102:3923:0"},"id":0},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","exportedSymbols":{"Initializable":[448]},"id":449,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":196,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"113:24:1"},{"abstract":true,"baseContracts":[],"canonicalName":"Initializable","contractDependencies":[],"contractKind":"contract","documentation":{"id":197,"nodeType":"StructuredDocumentation","src":"139:2209:1","text":" @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="},"fullyImplemented":true,"id":448,"linearizedBaseContracts":[448],"name":"Initializable","nameLocation":"2367:13:1","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Initializable.InitializableStorage","documentation":{"id":198,"nodeType":"StructuredDocumentation","src":"2387:293:1","text":" @dev Storage of the initializable contract.\n It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n when using with upgradeable contracts.\n @custom:storage-location erc7201:openzeppelin.storage.Initializable"},"id":205,"members":[{"constant":false,"id":201,"mutability":"mutable","name":"_initialized","nameLocation":"2820:12:1","nodeType":"VariableDeclaration","scope":205,"src":"2813:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":200,"name":"uint64","nodeType":"ElementaryTypeName","src":"2813:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":204,"mutability":"mutable","name":"_initializing","nameLocation":"2955:13:1","nodeType":"VariableDeclaration","scope":205,"src":"2950:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":203,"name":"bool","nodeType":"ElementaryTypeName","src":"2950:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"InitializableStorage","nameLocation":"2692:20:1","nodeType":"StructDefinition","scope":448,"src":"2685:290:1","visibility":"public"},{"constant":true,"id":208,"mutability":"constant","name":"INITIALIZABLE_STORAGE","nameLocation":"3123:21:1","nodeType":"VariableDeclaration","scope":448,"src":"3098:115:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":206,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3098:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307866306335376531363834306466303430663135303838646332663831666533393163333932336265633733653233613936363265666339633232396336613030","id":207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3147:66:1","typeDescriptions":{"typeIdentifier":"t_rational_108904022758810753673719992590105913556127789646572562039383141376366747609600_by_1","typeString":"int_const 1089...(70 digits omitted)...9600"},"value":"0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00"},"visibility":"private"},{"documentation":{"id":209,"nodeType":"StructuredDocumentation","src":"3220:60:1","text":" @dev The contract is already initialized."},"errorSelector":"f92ee8a9","id":211,"name":"InvalidInitialization","nameLocation":"3291:21:1","nodeType":"ErrorDefinition","parameters":{"id":210,"nodeType":"ParameterList","parameters":[],"src":"3312:2:1"},"src":"3285:30:1"},{"documentation":{"id":212,"nodeType":"StructuredDocumentation","src":"3321:57:1","text":" @dev The contract is not initializing."},"errorSelector":"d7e6bcf8","id":214,"name":"NotInitializing","nameLocation":"3389:15:1","nodeType":"ErrorDefinition","parameters":{"id":213,"nodeType":"ParameterList","parameters":[],"src":"3404:2:1"},"src":"3383:24:1"},{"anonymous":false,"documentation":{"id":215,"nodeType":"StructuredDocumentation","src":"3413:90:1","text":" @dev Triggered when the contract has been initialized or reinitialized."},"eventSelector":"c7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2","id":219,"name":"Initialized","nameLocation":"3514:11:1","nodeType":"EventDefinition","parameters":{"id":218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":217,"indexed":false,"mutability":"mutable","name":"version","nameLocation":"3533:7:1","nodeType":"VariableDeclaration","scope":219,"src":"3526:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":216,"name":"uint64","nodeType":"ElementaryTypeName","src":"3526:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"3525:16:1"},"src":"3508:34:1"},{"body":{"id":301,"nodeType":"Block","src":"4092:1081:1","statements":[{"assignments":[224],"declarations":[{"constant":false,"id":224,"mutability":"mutable","name":"$","nameLocation":"4187:1:1","nodeType":"VariableDeclaration","scope":301,"src":"4158:30:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":223,"nodeType":"UserDefinedTypeName","pathNode":{"id":222,"name":"InitializableStorage","nameLocations":["4158:20:1"],"nodeType":"IdentifierPath","referencedDeclaration":205,"src":"4158:20:1"},"referencedDeclaration":205,"src":"4158:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"id":227,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":225,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"4191:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":226,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4191:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"4158:59:1"},{"assignments":[229],"declarations":[{"constant":false,"id":229,"mutability":"mutable","name":"isTopLevelCall","nameLocation":"4284:14:1","nodeType":"VariableDeclaration","scope":301,"src":"4279:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":228,"name":"bool","nodeType":"ElementaryTypeName","src":"4279:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":233,"initialValue":{"id":232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4301:16:1","subExpression":{"expression":{"id":230,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"4302:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":231,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4304:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"4302:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4279:38:1"},{"assignments":[235],"declarations":[{"constant":false,"id":235,"mutability":"mutable","name":"initialized","nameLocation":"4334:11:1","nodeType":"VariableDeclaration","scope":301,"src":"4327:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":234,"name":"uint64","nodeType":"ElementaryTypeName","src":"4327:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"id":238,"initialValue":{"expression":{"id":236,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"4348:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":237,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4350:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"4348:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"VariableDeclarationStatement","src":"4327:35:1"},{"assignments":[240],"declarations":[{"constant":false,"id":240,"mutability":"mutable","name":"initialSetup","nameLocation":"4711:12:1","nodeType":"VariableDeclaration","scope":301,"src":"4706:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":239,"name":"bool","nodeType":"ElementaryTypeName","src":"4706:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":246,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":241,"name":"initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":235,"src":"4726:11:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4741:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4726:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":244,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"4746:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4726:34:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4706:54:1"},{"assignments":[248],"declarations":[{"constant":false,"id":248,"mutability":"mutable","name":"construction","nameLocation":"4775:12:1","nodeType":"VariableDeclaration","scope":301,"src":"4770:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":247,"name":"bool","nodeType":"ElementaryTypeName","src":"4770:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":261,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":249,"name":"initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":235,"src":"4790:11:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4805:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4790:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"arguments":[{"id":254,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4818:4:1","typeDescriptions":{"typeIdentifier":"t_contract$_Initializable_$448","typeString":"contract Initializable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Initializable_$448","typeString":"contract Initializable"}],"id":253,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4810:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":252,"name":"address","nodeType":"ElementaryTypeName","src":"4810:7:1","typeDescriptions":{}}},"id":255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4810:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4824:4:1","memberName":"code","nodeType":"MemberAccess","src":"4810:18:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4829:6:1","memberName":"length","nodeType":"MemberAccess","src":"4810:25:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4839:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4810:30:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4790:50:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4770:70:1"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4855:13:1","subExpression":{"id":262,"name":"initialSetup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":240,"src":"4856:12:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4872:13:1","subExpression":{"id":264,"name":"construction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":248,"src":"4873:12:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4855:30:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":271,"nodeType":"IfStatement","src":"4851:91:1","trueBody":{"id":270,"nodeType":"Block","src":"4887:55:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":267,"name":"InvalidInitialization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":211,"src":"4908:21:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":268,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4908:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":269,"nodeType":"RevertStatement","src":"4901:30:1"}]}},{"expression":{"id":276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":272,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"4951:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":274,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4953:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"4951:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4968:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4951:18:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":277,"nodeType":"ExpressionStatement","src":"4951:18:1"},{"condition":{"id":278,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"4983:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":286,"nodeType":"IfStatement","src":"4979:67:1","trueBody":{"id":285,"nodeType":"Block","src":"4999:47:1","statements":[{"expression":{"id":283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":279,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"5013:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":281,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5015:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"5013:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5031:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5013:22:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":284,"nodeType":"ExpressionStatement","src":"5013:22:1"}]}},{"id":287,"nodeType":"PlaceholderStatement","src":"5055:1:1"},{"condition":{"id":288,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"5070:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":300,"nodeType":"IfStatement","src":"5066:101:1","trueBody":{"id":299,"nodeType":"Block","src":"5086:81:1","statements":[{"expression":{"id":293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":289,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"5100:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":291,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5102:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"5100:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":292,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5118:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"5100:23:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":294,"nodeType":"ExpressionStatement","src":"5100:23:1"},{"eventCall":{"arguments":[{"hexValue":"31","id":296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5154:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":295,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"5142:11:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$returns$__$","typeString":"function (uint64)"}},"id":297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5142:14:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":298,"nodeType":"EmitStatement","src":"5137:19:1"}]}}]},"documentation":{"id":220,"nodeType":"StructuredDocumentation","src":"3548:516:1","text":" @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n production.\n Emits an {Initialized} event."},"id":302,"name":"initializer","nameLocation":"4078:11:1","nodeType":"ModifierDefinition","parameters":{"id":221,"nodeType":"ParameterList","parameters":[],"src":"4089:2:1"},"src":"4069:1104:1","virtual":false,"visibility":"internal"},{"body":{"id":348,"nodeType":"Block","src":"6291:392:1","statements":[{"assignments":[309],"declarations":[{"constant":false,"id":309,"mutability":"mutable","name":"$","nameLocation":"6386:1:1","nodeType":"VariableDeclaration","scope":348,"src":"6357:30:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":308,"nodeType":"UserDefinedTypeName","pathNode":{"id":307,"name":"InitializableStorage","nameLocations":["6357:20:1"],"nodeType":"IdentifierPath","referencedDeclaration":205,"src":"6357:20:1"},"referencedDeclaration":205,"src":"6357:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"id":312,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":310,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"6390:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":311,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6390:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"6357:59:1"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":313,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"6431:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":314,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6433:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"6431:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":315,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"6450:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":316,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6452:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"6450:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":317,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"6468:7:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"6450:25:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6431:44:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":324,"nodeType":"IfStatement","src":"6427:105:1","trueBody":{"id":323,"nodeType":"Block","src":"6477:55:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":320,"name":"InvalidInitialization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":211,"src":"6498:21:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":321,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6498:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":322,"nodeType":"RevertStatement","src":"6491:30:1"}]}},{"expression":{"id":329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":325,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"6541:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":327,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6543:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"6541:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":328,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"6558:7:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"6541:24:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":330,"nodeType":"ExpressionStatement","src":"6541:24:1"},{"expression":{"id":335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":331,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"6575:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":333,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6577:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"6575:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":334,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6593:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"6575:22:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":336,"nodeType":"ExpressionStatement","src":"6575:22:1"},{"id":337,"nodeType":"PlaceholderStatement","src":"6607:1:1"},{"expression":{"id":342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":338,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"6618:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":340,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6620:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"6618:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6636:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"6618:23:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":343,"nodeType":"ExpressionStatement","src":"6618:23:1"},{"eventCall":{"arguments":[{"id":345,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"6668:7:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":344,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"6656:11:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$returns$__$","typeString":"function (uint64)"}},"id":346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6656:20:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":347,"nodeType":"EmitStatement","src":"6651:25:1"}]},"documentation":{"id":303,"nodeType":"StructuredDocumentation","src":"5179:1068:1","text":" @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n Emits an {Initialized} event."},"id":349,"name":"reinitializer","nameLocation":"6261:13:1","nodeType":"ModifierDefinition","parameters":{"id":306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":305,"mutability":"mutable","name":"version","nameLocation":"6282:7:1","nodeType":"VariableDeclaration","scope":349,"src":"6275:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":304,"name":"uint64","nodeType":"ElementaryTypeName","src":"6275:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"6274:16:1"},"src":"6252:431:1","virtual":false,"visibility":"internal"},{"body":{"id":356,"nodeType":"Block","src":"6921:48:1","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":352,"name":"_checkInitializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":370,"src":"6931:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":353,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6931:20:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":354,"nodeType":"ExpressionStatement","src":"6931:20:1"},{"id":355,"nodeType":"PlaceholderStatement","src":"6961:1:1"}]},"documentation":{"id":350,"nodeType":"StructuredDocumentation","src":"6689:199:1","text":" @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."},"id":357,"name":"onlyInitializing","nameLocation":"6902:16:1","nodeType":"ModifierDefinition","parameters":{"id":351,"nodeType":"ParameterList","parameters":[],"src":"6918:2:1"},"src":"6893:76:1","virtual":false,"visibility":"internal"},{"body":{"id":369,"nodeType":"Block","src":"7136:89:1","statements":[{"condition":{"id":363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7150:18:1","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":361,"name":"_isInitializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":438,"src":"7151:15:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":362,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7151:17:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":368,"nodeType":"IfStatement","src":"7146:73:1","trueBody":{"id":367,"nodeType":"Block","src":"7170:49:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":364,"name":"NotInitializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":214,"src":"7191:15:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7191:17:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":366,"nodeType":"RevertStatement","src":"7184:24:1"}]}}]},"documentation":{"id":358,"nodeType":"StructuredDocumentation","src":"6975:104:1","text":" @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}."},"id":370,"implemented":true,"kind":"function","modifiers":[],"name":"_checkInitializing","nameLocation":"7093:18:1","nodeType":"FunctionDefinition","parameters":{"id":359,"nodeType":"ParameterList","parameters":[],"src":"7111:2:1"},"returnParameters":{"id":360,"nodeType":"ParameterList","parameters":[],"src":"7136:0:1"},"scope":448,"src":"7084:141:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":415,"nodeType":"Block","src":"7760:373:1","statements":[{"assignments":[376],"declarations":[{"constant":false,"id":376,"mutability":"mutable","name":"$","nameLocation":"7855:1:1","nodeType":"VariableDeclaration","scope":415,"src":"7826:30:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":375,"nodeType":"UserDefinedTypeName","pathNode":{"id":374,"name":"InitializableStorage","nameLocations":["7826:20:1"],"nodeType":"IdentifierPath","referencedDeclaration":205,"src":"7826:20:1"},"referencedDeclaration":205,"src":"7826:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"id":379,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":377,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"7859:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7859:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"7826:59:1"},{"condition":{"expression":{"id":380,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"7900:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":381,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7902:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"7900:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":386,"nodeType":"IfStatement","src":"7896:76:1","trueBody":{"id":385,"nodeType":"Block","src":"7917:55:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":382,"name":"InvalidInitialization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":211,"src":"7938:21:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7938:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":384,"nodeType":"RevertStatement","src":"7931:30:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":387,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"7985:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":388,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7987:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"7985:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":391,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8008:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":390,"name":"uint64","nodeType":"ElementaryTypeName","src":"8008:6:1","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":389,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8003:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":392,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8003:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":393,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8016:3:1","memberName":"max","nodeType":"MemberAccess","src":"8003:16:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"7985:34:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":414,"nodeType":"IfStatement","src":"7981:146:1","trueBody":{"id":413,"nodeType":"Block","src":"8021:106:1","statements":[{"expression":{"id":403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":395,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"8035:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":397,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8037:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"8035:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"arguments":[{"id":400,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8057:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":399,"name":"uint64","nodeType":"ElementaryTypeName","src":"8057:6:1","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":398,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8052:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":401,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8052:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":402,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8065:3:1","memberName":"max","nodeType":"MemberAccess","src":"8052:16:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"8035:33:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":404,"nodeType":"ExpressionStatement","src":"8035:33:1"},{"eventCall":{"arguments":[{"expression":{"arguments":[{"id":408,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8104:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":407,"name":"uint64","nodeType":"ElementaryTypeName","src":"8104:6:1","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":406,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8099:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8099:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":410,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8112:3:1","memberName":"max","nodeType":"MemberAccess","src":"8099:16:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":405,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"8087:11:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$returns$__$","typeString":"function (uint64)"}},"id":411,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8087:29:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":412,"nodeType":"EmitStatement","src":"8082:34:1"}]}}]},"documentation":{"id":371,"nodeType":"StructuredDocumentation","src":"7231:475:1","text":" @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."},"id":416,"implemented":true,"kind":"function","modifiers":[],"name":"_disableInitializers","nameLocation":"7720:20:1","nodeType":"FunctionDefinition","parameters":{"id":372,"nodeType":"ParameterList","parameters":[],"src":"7740:2:1"},"returnParameters":{"id":373,"nodeType":"ParameterList","parameters":[],"src":"7760:0:1"},"scope":448,"src":"7711:422:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":426,"nodeType":"Block","src":"8308:63:1","statements":[{"expression":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":422,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"8325:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8325:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":424,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8352:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"8325:39:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":421,"id":425,"nodeType":"Return","src":"8318:46:1"}]},"documentation":{"id":417,"nodeType":"StructuredDocumentation","src":"8139:99:1","text":" @dev Returns the highest version that has been initialized. See {reinitializer}."},"id":427,"implemented":true,"kind":"function","modifiers":[],"name":"_getInitializedVersion","nameLocation":"8252:22:1","nodeType":"FunctionDefinition","parameters":{"id":418,"nodeType":"ParameterList","parameters":[],"src":"8274:2:1"},"returnParameters":{"id":421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":420,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":427,"src":"8300:6:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":419,"name":"uint64","nodeType":"ElementaryTypeName","src":"8300:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"8299:8:1"},"scope":448,"src":"8243:128:1","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":437,"nodeType":"Block","src":"8543:64:1","statements":[{"expression":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":433,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"8560:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":434,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8560:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":435,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8587:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"8560:40:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":432,"id":436,"nodeType":"Return","src":"8553:47:1"}]},"documentation":{"id":428,"nodeType":"StructuredDocumentation","src":"8377:105:1","text":" @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."},"id":438,"implemented":true,"kind":"function","modifiers":[],"name":"_isInitializing","nameLocation":"8496:15:1","nodeType":"FunctionDefinition","parameters":{"id":429,"nodeType":"ParameterList","parameters":[],"src":"8511:2:1"},"returnParameters":{"id":432,"nodeType":"ParameterList","parameters":[{"constant":false,"id":431,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":438,"src":"8537:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":430,"name":"bool","nodeType":"ElementaryTypeName","src":"8537:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8536:6:1"},"scope":448,"src":"8487:120:1","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":446,"nodeType":"Block","src":"8827:80:1","statements":[{"AST":{"nativeSrc":"8846:55:1","nodeType":"YulBlock","src":"8846:55:1","statements":[{"nativeSrc":"8860:31:1","nodeType":"YulAssignment","src":"8860:31:1","value":{"name":"INITIALIZABLE_STORAGE","nativeSrc":"8870:21:1","nodeType":"YulIdentifier","src":"8870:21:1"},"variableNames":[{"name":"$.slot","nativeSrc":"8860:6:1","nodeType":"YulIdentifier","src":"8860:6:1"}]}]},"evmVersion":"cancun","externalReferences":[{"declaration":443,"isOffset":false,"isSlot":true,"src":"8860:6:1","suffix":"slot","valueSize":1},{"declaration":208,"isOffset":false,"isSlot":false,"src":"8870:21:1","valueSize":1}],"id":445,"nodeType":"InlineAssembly","src":"8837:64:1"}]},"documentation":{"id":439,"nodeType":"StructuredDocumentation","src":"8613:67:1","text":" @dev Returns a pointer to the storage namespace."},"id":447,"implemented":true,"kind":"function","modifiers":[],"name":"_getInitializableStorage","nameLocation":"8746:24:1","nodeType":"FunctionDefinition","parameters":{"id":440,"nodeType":"ParameterList","parameters":[],"src":"8770:2:1"},"returnParameters":{"id":444,"nodeType":"ParameterList","parameters":[{"constant":false,"id":443,"mutability":"mutable","name":"$","nameLocation":"8824:1:1","nodeType":"VariableDeclaration","scope":447,"src":"8795:30:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":442,"nodeType":"UserDefinedTypeName","pathNode":{"id":441,"name":"InitializableStorage","nameLocations":["8795:20:1"],"nodeType":"IdentifierPath","referencedDeclaration":205,"src":"8795:20:1"},"referencedDeclaration":205,"src":"8795:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"src":"8794:32:1"},"scope":448,"src":"8737:170:1","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":449,"src":"2349:6560:1","usedErrors":[211,214],"usedEvents":[219]}],"src":"113:8797:1"},"id":1},"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","exportedSymbols":{"ERC1967Utils":[1126],"IERC1822Proxiable":[686],"Initializable":[448],"UUPSUpgradeable":[630]},"id":631,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":450,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:2"},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC1822.sol","file":"@openzeppelin/contracts/interfaces/draft-IERC1822.sol","id":452,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":631,"sourceUnit":687,"src":"141:88:2","symbolAliases":[{"foreign":{"id":451,"name":"IERC1822Proxiable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":686,"src":"149:17:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol","file":"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol","id":454,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":631,"sourceUnit":1127,"src":"230:84:2","symbolAliases":[{"foreign":{"id":453,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1126,"src":"238:12:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"./Initializable.sol","id":456,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":631,"sourceUnit":449,"src":"315:50:2","symbolAliases":[{"foreign":{"id":455,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"323:13:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":458,"name":"Initializable","nameLocations":["1023:13:2"],"nodeType":"IdentifierPath","referencedDeclaration":448,"src":"1023:13:2"},"id":459,"nodeType":"InheritanceSpecifier","src":"1023:13:2"},{"baseName":{"id":460,"name":"IERC1822Proxiable","nameLocations":["1038:17:2"],"nodeType":"IdentifierPath","referencedDeclaration":686,"src":"1038:17:2"},"id":461,"nodeType":"InheritanceSpecifier","src":"1038:17:2"}],"canonicalName":"UUPSUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":457,"nodeType":"StructuredDocumentation","src":"367:618:2","text":" @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n `UUPSUpgradeable` with a custom implementation of upgrades.\n The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism."},"fullyImplemented":false,"id":630,"linearizedBaseContracts":[630,686,448],"name":"UUPSUpgradeable","nameLocation":"1004:15:2","nodeType":"ContractDefinition","nodes":[{"constant":false,"documentation":{"id":462,"nodeType":"StructuredDocumentation","src":"1062:61:2","text":"@custom:oz-upgrades-unsafe-allow state-variable-immutable"},"id":468,"mutability":"immutable","name":"__self","nameLocation":"1154:6:2","nodeType":"VariableDeclaration","scope":630,"src":"1128:48:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":463,"name":"address","nodeType":"ElementaryTypeName","src":"1128:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"arguments":[{"id":466,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1171:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_UUPSUpgradeable_$630","typeString":"contract UUPSUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UUPSUpgradeable_$630","typeString":"contract UUPSUpgradeable"}],"id":465,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1163:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":464,"name":"address","nodeType":"ElementaryTypeName","src":"1163:7:2","typeDescriptions":{}}},"id":467,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1163:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":true,"documentation":{"id":469,"nodeType":"StructuredDocumentation","src":"1183:631:2","text":" @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\n and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\n while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\n If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\n be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\n during an upgrade."},"functionSelector":"ad3cb1cc","id":472,"mutability":"constant","name":"UPGRADE_INTERFACE_VERSION","nameLocation":"1842:25:2","nodeType":"VariableDeclaration","scope":630,"src":"1819:58:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":470,"name":"string","nodeType":"ElementaryTypeName","src":"1819:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"352e302e30","id":471,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1870:7:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_2ade050ecfcf8ae20ae1d10a23573f9d7e0bad85e74a2cf8338a65401e64558c","typeString":"literal_string \"5.0.0\""},"value":"5.0.0"},"visibility":"public"},{"documentation":{"id":473,"nodeType":"StructuredDocumentation","src":"1884:65:2","text":" @dev The call is from an unauthorized context."},"errorSelector":"e07c8dba","id":475,"name":"UUPSUnauthorizedCallContext","nameLocation":"1960:27:2","nodeType":"ErrorDefinition","parameters":{"id":474,"nodeType":"ParameterList","parameters":[],"src":"1987:2:2"},"src":"1954:36:2"},{"documentation":{"id":476,"nodeType":"StructuredDocumentation","src":"1996:68:2","text":" @dev The storage `slot` is unsupported as a UUID."},"errorSelector":"aa1d49a4","id":480,"name":"UUPSUnsupportedProxiableUUID","nameLocation":"2075:28:2","nodeType":"ErrorDefinition","parameters":{"id":479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":478,"mutability":"mutable","name":"slot","nameLocation":"2112:4:2","nodeType":"VariableDeclaration","scope":480,"src":"2104:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":477,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2104:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2103:14:2"},"src":"2069:49:2"},{"body":{"id":487,"nodeType":"Block","src":"2643:41:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":483,"name":"_checkProxy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":562,"src":"2653:11:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2653:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":485,"nodeType":"ExpressionStatement","src":"2653:13:2"},{"id":486,"nodeType":"PlaceholderStatement","src":"2676:1:2"}]},"documentation":{"id":481,"nodeType":"StructuredDocumentation","src":"2124:493:2","text":" @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\n for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n fail."},"id":488,"name":"onlyProxy","nameLocation":"2631:9:2","nodeType":"ModifierDefinition","parameters":{"id":482,"nodeType":"ParameterList","parameters":[],"src":"2640:2:2"},"src":"2622:62:2","virtual":false,"visibility":"internal"},{"body":{"id":495,"nodeType":"Block","src":"2914:48:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":491,"name":"_checkNotDelegated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":578,"src":"2924:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":492,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2924:20:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":493,"nodeType":"ExpressionStatement","src":"2924:20:2"},{"id":494,"nodeType":"PlaceholderStatement","src":"2954:1:2"}]},"documentation":{"id":489,"nodeType":"StructuredDocumentation","src":"2690:195:2","text":" @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n callable on the implementing contract but not through proxies."},"id":496,"name":"notDelegated","nameLocation":"2899:12:2","nodeType":"ModifierDefinition","parameters":{"id":490,"nodeType":"ParameterList","parameters":[],"src":"2911:2:2"},"src":"2890:72:2","virtual":false,"visibility":"internal"},{"body":{"id":501,"nodeType":"Block","src":"3028:7:2","statements":[]},"id":502,"implemented":true,"kind":"function","modifiers":[{"id":499,"kind":"modifierInvocation","modifierName":{"id":498,"name":"onlyInitializing","nameLocations":["3011:16:2"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"3011:16:2"},"nodeType":"ModifierInvocation","src":"3011:16:2"}],"name":"__UUPSUpgradeable_init","nameLocation":"2977:22:2","nodeType":"FunctionDefinition","parameters":{"id":497,"nodeType":"ParameterList","parameters":[],"src":"2999:2:2"},"returnParameters":{"id":500,"nodeType":"ParameterList","parameters":[],"src":"3028:0:2"},"scope":630,"src":"2968:67:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":507,"nodeType":"Block","src":"3111:7:2","statements":[]},"id":508,"implemented":true,"kind":"function","modifiers":[{"id":505,"kind":"modifierInvocation","modifierName":{"id":504,"name":"onlyInitializing","nameLocations":["3094:16:2"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"3094:16:2"},"nodeType":"ModifierInvocation","src":"3094:16:2"}],"name":"__UUPSUpgradeable_init_unchained","nameLocation":"3050:32:2","nodeType":"FunctionDefinition","parameters":{"id":503,"nodeType":"ParameterList","parameters":[],"src":"3082:2:2"},"returnParameters":{"id":506,"nodeType":"ParameterList","parameters":[],"src":"3111:0:2"},"scope":630,"src":"3041:77:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[685],"body":{"id":519,"nodeType":"Block","src":"3783:56:2","statements":[{"expression":{"expression":{"id":516,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1126,"src":"3800:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$1126_$","typeString":"type(library ERC1967Utils)"}},"id":517,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3813:19:2","memberName":"IMPLEMENTATION_SLOT","nodeType":"MemberAccess","referencedDeclaration":853,"src":"3800:32:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":515,"id":518,"nodeType":"Return","src":"3793:39:2"}]},"documentation":{"id":509,"nodeType":"StructuredDocumentation","src":"3123:577:2","text":" @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\n implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."},"functionSelector":"52d1902d","id":520,"implemented":true,"kind":"function","modifiers":[{"id":512,"kind":"modifierInvocation","modifierName":{"id":511,"name":"notDelegated","nameLocations":["3752:12:2"],"nodeType":"IdentifierPath","referencedDeclaration":496,"src":"3752:12:2"},"nodeType":"ModifierInvocation","src":"3752:12:2"}],"name":"proxiableUUID","nameLocation":"3714:13:2","nodeType":"FunctionDefinition","parameters":{"id":510,"nodeType":"ParameterList","parameters":[],"src":"3727:2:2"},"returnParameters":{"id":515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":514,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":520,"src":"3774:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":513,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3774:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3773:9:2"},"scope":630,"src":"3705:134:2","stateMutability":"view","virtual":true,"visibility":"external"},{"body":{"id":539,"nodeType":"Block","src":"4263:109:2","statements":[{"expression":{"arguments":[{"id":531,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":523,"src":"4291:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":530,"name":"_authorizeUpgrade","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":584,"src":"4273:17:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4273:36:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":533,"nodeType":"ExpressionStatement","src":"4273:36:2"},{"expression":{"arguments":[{"id":535,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":523,"src":"4341:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":536,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":525,"src":"4360:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":534,"name":"_upgradeToAndCallUUPS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":629,"src":"4319:21:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,bytes memory)"}},"id":537,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4319:46:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":538,"nodeType":"ExpressionStatement","src":"4319:46:2"}]},"documentation":{"id":521,"nodeType":"StructuredDocumentation","src":"3845:308:2","text":" @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n encoded in `data`.\n Calls {_authorizeUpgrade}.\n Emits an {Upgraded} event.\n @custom:oz-upgrades-unsafe-allow-reachable delegatecall"},"functionSelector":"4f1ef286","id":540,"implemented":true,"kind":"function","modifiers":[{"id":528,"kind":"modifierInvocation","modifierName":{"id":527,"name":"onlyProxy","nameLocations":["4253:9:2"],"nodeType":"IdentifierPath","referencedDeclaration":488,"src":"4253:9:2"},"nodeType":"ModifierInvocation","src":"4253:9:2"}],"name":"upgradeToAndCall","nameLocation":"4167:16:2","nodeType":"FunctionDefinition","parameters":{"id":526,"nodeType":"ParameterList","parameters":[{"constant":false,"id":523,"mutability":"mutable","name":"newImplementation","nameLocation":"4192:17:2","nodeType":"VariableDeclaration","scope":540,"src":"4184:25:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":522,"name":"address","nodeType":"ElementaryTypeName","src":"4184:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":525,"mutability":"mutable","name":"data","nameLocation":"4224:4:2","nodeType":"VariableDeclaration","scope":540,"src":"4211:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":524,"name":"bytes","nodeType":"ElementaryTypeName","src":"4211:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4183:46:2"},"returnParameters":{"id":529,"nodeType":"ParameterList","parameters":[],"src":"4263:0:2"},"scope":630,"src":"4158:214:2","stateMutability":"payable","virtual":true,"visibility":"public"},{"body":{"id":561,"nodeType":"Block","src":"4644:267:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":546,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4679:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_UUPSUpgradeable_$630","typeString":"contract UUPSUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UUPSUpgradeable_$630","typeString":"contract UUPSUpgradeable"}],"id":545,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4671:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":544,"name":"address","nodeType":"ElementaryTypeName","src":"4671:7:2","typeDescriptions":{}}},"id":547,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4671:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":548,"name":"__self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":468,"src":"4688:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4671:23:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":550,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1126,"src":"4749:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$1126_$","typeString":"type(library ERC1967Utils)"}},"id":551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4762:17:2","memberName":"getImplementation","nodeType":"MemberAccess","referencedDeclaration":884,"src":"4749:30:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":552,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4749:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":553,"name":"__self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":468,"src":"4785:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4749:42:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4671:120:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":560,"nodeType":"IfStatement","src":"4654:251:2","trueBody":{"id":559,"nodeType":"Block","src":"4844:61:2","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":556,"name":"UUPSUnauthorizedCallContext","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":475,"src":"4865:27:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":557,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4865:29:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":558,"nodeType":"RevertStatement","src":"4858:36:2"}]}}]},"documentation":{"id":541,"nodeType":"StructuredDocumentation","src":"4378:216:2","text":" @dev Reverts if the execution is not performed via delegatecall or the execution\n context is not of a proxy with an ERC1967-compliant implementation pointing to self.\n See {_onlyProxy}."},"id":562,"implemented":true,"kind":"function","modifiers":[],"name":"_checkProxy","nameLocation":"4608:11:2","nodeType":"FunctionDefinition","parameters":{"id":542,"nodeType":"ParameterList","parameters":[],"src":"4619:2:2"},"returnParameters":{"id":543,"nodeType":"ParameterList","parameters":[],"src":"4644:0:2"},"scope":630,"src":"4599:312:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":577,"nodeType":"Block","src":"5080:161:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":568,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5102:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_UUPSUpgradeable_$630","typeString":"contract UUPSUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UUPSUpgradeable_$630","typeString":"contract UUPSUpgradeable"}],"id":567,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5094:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":566,"name":"address","nodeType":"ElementaryTypeName","src":"5094:7:2","typeDescriptions":{}}},"id":569,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5094:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":570,"name":"__self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":468,"src":"5111:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5094:23:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":576,"nodeType":"IfStatement","src":"5090:145:2","trueBody":{"id":575,"nodeType":"Block","src":"5119:116:2","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":572,"name":"UUPSUnauthorizedCallContext","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":475,"src":"5195:27:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":573,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5195:29:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":574,"nodeType":"RevertStatement","src":"5188:36:2"}]}}]},"documentation":{"id":563,"nodeType":"StructuredDocumentation","src":"4917:106:2","text":" @dev Reverts if the execution is performed via delegatecall.\n See {notDelegated}."},"id":578,"implemented":true,"kind":"function","modifiers":[],"name":"_checkNotDelegated","nameLocation":"5037:18:2","nodeType":"FunctionDefinition","parameters":{"id":564,"nodeType":"ParameterList","parameters":[],"src":"5055:2:2"},"returnParameters":{"id":565,"nodeType":"ParameterList","parameters":[],"src":"5080:0:2"},"scope":630,"src":"5028:213:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"documentation":{"id":579,"nodeType":"StructuredDocumentation","src":"5247:372:2","text":" @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n {upgradeToAndCall}.\n Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n ```solidity\n function _authorizeUpgrade(address) internal onlyOwner {}\n ```"},"id":584,"implemented":false,"kind":"function","modifiers":[],"name":"_authorizeUpgrade","nameLocation":"5633:17:2","nodeType":"FunctionDefinition","parameters":{"id":582,"nodeType":"ParameterList","parameters":[{"constant":false,"id":581,"mutability":"mutable","name":"newImplementation","nameLocation":"5659:17:2","nodeType":"VariableDeclaration","scope":584,"src":"5651:25:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":580,"name":"address","nodeType":"ElementaryTypeName","src":"5651:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5650:27:2"},"returnParameters":{"id":583,"nodeType":"ParameterList","parameters":[],"src":"5694:0:2"},"scope":630,"src":"5624:71:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":628,"nodeType":"Block","src":"6137:453:2","statements":[{"clauses":[{"block":{"id":617,"nodeType":"Block","src":"6227:212:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":600,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":598,"src":"6245:4:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":601,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1126,"src":"6253:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$1126_$","typeString":"type(library ERC1967Utils)"}},"id":602,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6266:19:2","memberName":"IMPLEMENTATION_SLOT","nodeType":"MemberAccess","referencedDeclaration":853,"src":"6253:32:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"6245:40:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":609,"nodeType":"IfStatement","src":"6241:120:2","trueBody":{"id":608,"nodeType":"Block","src":"6287:74:2","statements":[{"errorCall":{"arguments":[{"id":605,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":598,"src":"6341:4:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":604,"name":"UUPSUnsupportedProxiableUUID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":480,"src":"6312:28:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$returns$__$","typeString":"function (bytes32) pure"}},"id":606,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6312:34:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":607,"nodeType":"RevertStatement","src":"6305:41:2"}]}},{"expression":{"arguments":[{"id":613,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":587,"src":"6404:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":614,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":589,"src":"6423:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":610,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1126,"src":"6374:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$1126_$","typeString":"type(library ERC1967Utils)"}},"id":612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6387:16:2","memberName":"upgradeToAndCall","nodeType":"MemberAccess","referencedDeclaration":945,"src":"6374:29:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,bytes memory)"}},"id":615,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6374:54:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":616,"nodeType":"ExpressionStatement","src":"6374:54:2"}]},"errorName":"","id":618,"nodeType":"TryCatchClause","parameters":{"id":599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":598,"mutability":"mutable","name":"slot","nameLocation":"6221:4:2","nodeType":"VariableDeclaration","scope":618,"src":"6213:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":597,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6213:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6212:14:2"},"src":"6204:235:2"},{"block":{"id":625,"nodeType":"Block","src":"6446:138:2","statements":[{"errorCall":{"arguments":[{"id":622,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":587,"src":"6555:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":619,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1126,"src":"6513:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$1126_$","typeString":"type(library ERC1967Utils)"}},"id":621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6526:28:2","memberName":"ERC1967InvalidImplementation","nodeType":"MemberAccess","referencedDeclaration":858,"src":"6513:41:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":623,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6513:60:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":624,"nodeType":"RevertStatement","src":"6506:67:2"}]},"errorName":"","id":626,"nodeType":"TryCatchClause","src":"6440:144:2"}],"externalCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":593,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":587,"src":"6169:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":592,"name":"IERC1822Proxiable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":686,"src":"6151:17:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1822Proxiable_$686_$","typeString":"type(contract IERC1822Proxiable)"}},"id":594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6151:36:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC1822Proxiable_$686","typeString":"contract IERC1822Proxiable"}},"id":595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6188:13:2","memberName":"proxiableUUID","nodeType":"MemberAccess","referencedDeclaration":685,"src":"6151:50:2","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_bytes32_$","typeString":"function () view external returns (bytes32)"}},"id":596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6151:52:2","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":627,"nodeType":"TryStatement","src":"6147:437:2"}]},"documentation":{"id":585,"nodeType":"StructuredDocumentation","src":"5701:346:2","text":" @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\n As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\n is expected to be the implementation slot in ERC1967.\n Emits an {IERC1967-Upgraded} event."},"id":629,"implemented":true,"kind":"function","modifiers":[],"name":"_upgradeToAndCallUUPS","nameLocation":"6061:21:2","nodeType":"FunctionDefinition","parameters":{"id":590,"nodeType":"ParameterList","parameters":[{"constant":false,"id":587,"mutability":"mutable","name":"newImplementation","nameLocation":"6091:17:2","nodeType":"VariableDeclaration","scope":629,"src":"6083:25:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":586,"name":"address","nodeType":"ElementaryTypeName","src":"6083:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":589,"mutability":"mutable","name":"data","nameLocation":"6123:4:2","nodeType":"VariableDeclaration","scope":629,"src":"6110:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":588,"name":"bytes","nodeType":"ElementaryTypeName","src":"6110:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6082:46:2"},"returnParameters":{"id":591,"nodeType":"ParameterList","parameters":[],"src":"6137:0:2"},"scope":630,"src":"6052:538:2","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":631,"src":"986:5606:2","usedErrors":[211,214,475,480,858,871,1768,1771],"usedEvents":[219,837]}],"src":"115:6478:2"},"id":2},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","exportedSymbols":{"ContextUpgradeable":[676],"Initializable":[448]},"id":677,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":632,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:3"},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":634,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":677,"sourceUnit":449,"src":"126:63:3","symbolAliases":[{"foreign":{"id":633,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"134:13:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":636,"name":"Initializable","nameLocations":["728:13:3"],"nodeType":"IdentifierPath","referencedDeclaration":448,"src":"728:13:3"},"id":637,"nodeType":"InheritanceSpecifier","src":"728:13:3"}],"canonicalName":"ContextUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":635,"nodeType":"StructuredDocumentation","src":"191:496:3","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":676,"linearizedBaseContracts":[676,448],"name":"ContextUpgradeable","nameLocation":"706:18:3","nodeType":"ContractDefinition","nodes":[{"body":{"id":642,"nodeType":"Block","src":"800:7:3","statements":[]},"id":643,"implemented":true,"kind":"function","modifiers":[{"id":640,"kind":"modifierInvocation","modifierName":{"id":639,"name":"onlyInitializing","nameLocations":["783:16:3"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"783:16:3"},"nodeType":"ModifierInvocation","src":"783:16:3"}],"name":"__Context_init","nameLocation":"757:14:3","nodeType":"FunctionDefinition","parameters":{"id":638,"nodeType":"ParameterList","parameters":[],"src":"771:2:3"},"returnParameters":{"id":641,"nodeType":"ParameterList","parameters":[],"src":"800:0:3"},"scope":676,"src":"748:59:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":648,"nodeType":"Block","src":"875:7:3","statements":[]},"id":649,"implemented":true,"kind":"function","modifiers":[{"id":646,"kind":"modifierInvocation","modifierName":{"id":645,"name":"onlyInitializing","nameLocations":["858:16:3"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"858:16:3"},"nodeType":"ModifierInvocation","src":"858:16:3"}],"name":"__Context_init_unchained","nameLocation":"822:24:3","nodeType":"FunctionDefinition","parameters":{"id":644,"nodeType":"ParameterList","parameters":[],"src":"846:2:3"},"returnParameters":{"id":647,"nodeType":"ParameterList","parameters":[],"src":"875:0:3"},"scope":676,"src":"813:69:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":657,"nodeType":"Block","src":"949:34:3","statements":[{"expression":{"expression":{"id":654,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"966:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"970:6:3","memberName":"sender","nodeType":"MemberAccess","src":"966:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":653,"id":656,"nodeType":"Return","src":"959:17:3"}]},"id":658,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"896:10:3","nodeType":"FunctionDefinition","parameters":{"id":650,"nodeType":"ParameterList","parameters":[],"src":"906:2:3"},"returnParameters":{"id":653,"nodeType":"ParameterList","parameters":[{"constant":false,"id":652,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":658,"src":"940:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":651,"name":"address","nodeType":"ElementaryTypeName","src":"940:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"939:9:3"},"scope":676,"src":"887:96:3","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":666,"nodeType":"Block","src":"1056:32:3","statements":[{"expression":{"expression":{"id":663,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1073:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1077:4:3","memberName":"data","nodeType":"MemberAccess","src":"1073:8:3","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":662,"id":665,"nodeType":"Return","src":"1066:15:3"}]},"id":667,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"998:8:3","nodeType":"FunctionDefinition","parameters":{"id":659,"nodeType":"ParameterList","parameters":[],"src":"1006:2:3"},"returnParameters":{"id":662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":661,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":667,"src":"1040:14:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":660,"name":"bytes","nodeType":"ElementaryTypeName","src":"1040:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1039:16:3"},"scope":676,"src":"989:99:3","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":674,"nodeType":"Block","src":"1166:25:3","statements":[{"expression":{"hexValue":"30","id":672,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1183:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":671,"id":673,"nodeType":"Return","src":"1176:8:3"}]},"id":675,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"1103:20:3","nodeType":"FunctionDefinition","parameters":{"id":668,"nodeType":"ParameterList","parameters":[],"src":"1123:2:3"},"returnParameters":{"id":671,"nodeType":"ParameterList","parameters":[{"constant":false,"id":670,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":675,"src":"1157:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":669,"name":"uint256","nodeType":"ElementaryTypeName","src":"1157:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1156:9:3"},"scope":676,"src":"1094:97:3","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":677,"src":"688:505:3","usedErrors":[211,214],"usedEvents":[219]}],"src":"101:1093:3"},"id":3},"@openzeppelin/contracts/interfaces/draft-IERC1822.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC1822.sol","exportedSymbols":{"IERC1822Proxiable":[686]},"id":687,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":678,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"113:24:4"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1822Proxiable","contractDependencies":[],"contractKind":"interface","documentation":{"id":679,"nodeType":"StructuredDocumentation","src":"139:203:4","text":" @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n proxy whose upgrades are fully controlled by the current implementation."},"fullyImplemented":false,"id":686,"linearizedBaseContracts":[686],"name":"IERC1822Proxiable","nameLocation":"353:17:4","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":680,"nodeType":"StructuredDocumentation","src":"377:438:4","text":" @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n address.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy."},"functionSelector":"52d1902d","id":685,"implemented":false,"kind":"function","modifiers":[],"name":"proxiableUUID","nameLocation":"829:13:4","nodeType":"FunctionDefinition","parameters":{"id":681,"nodeType":"ParameterList","parameters":[],"src":"842:2:4"},"returnParameters":{"id":684,"nodeType":"ParameterList","parameters":[{"constant":false,"id":683,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":685,"src":"868:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":682,"name":"bytes32","nodeType":"ElementaryTypeName","src":"868:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"867:9:4"},"scope":686,"src":"820:57:4","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":687,"src":"343:536:4","usedErrors":[],"usedEvents":[]}],"src":"113:767:4"},"id":4},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","exportedSymbols":{"IERC1155Errors":[823],"IERC20Errors":[728],"IERC721Errors":[776]},"id":824,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":688,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:5"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":689,"nodeType":"StructuredDocumentation","src":"138:139:5","text":" @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."},"fullyImplemented":true,"id":728,"linearizedBaseContracts":[728],"name":"IERC20Errors","nameLocation":"288:12:5","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":690,"nodeType":"StructuredDocumentation","src":"307:309:5","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"e450d38c","id":698,"name":"ERC20InsufficientBalance","nameLocation":"627:24:5","nodeType":"ErrorDefinition","parameters":{"id":697,"nodeType":"ParameterList","parameters":[{"constant":false,"id":692,"mutability":"mutable","name":"sender","nameLocation":"660:6:5","nodeType":"VariableDeclaration","scope":698,"src":"652:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":691,"name":"address","nodeType":"ElementaryTypeName","src":"652:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":694,"mutability":"mutable","name":"balance","nameLocation":"676:7:5","nodeType":"VariableDeclaration","scope":698,"src":"668:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":693,"name":"uint256","nodeType":"ElementaryTypeName","src":"668:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":696,"mutability":"mutable","name":"needed","nameLocation":"693:6:5","nodeType":"VariableDeclaration","scope":698,"src":"685:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":695,"name":"uint256","nodeType":"ElementaryTypeName","src":"685:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"651:49:5"},"src":"621:80:5"},{"documentation":{"id":699,"nodeType":"StructuredDocumentation","src":"707:152:5","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"96c6fd1e","id":703,"name":"ERC20InvalidSender","nameLocation":"870:18:5","nodeType":"ErrorDefinition","parameters":{"id":702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":701,"mutability":"mutable","name":"sender","nameLocation":"897:6:5","nodeType":"VariableDeclaration","scope":703,"src":"889:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":700,"name":"address","nodeType":"ElementaryTypeName","src":"889:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"888:16:5"},"src":"864:41:5"},{"documentation":{"id":704,"nodeType":"StructuredDocumentation","src":"911:159:5","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"ec442f05","id":708,"name":"ERC20InvalidReceiver","nameLocation":"1081:20:5","nodeType":"ErrorDefinition","parameters":{"id":707,"nodeType":"ParameterList","parameters":[{"constant":false,"id":706,"mutability":"mutable","name":"receiver","nameLocation":"1110:8:5","nodeType":"VariableDeclaration","scope":708,"src":"1102:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":705,"name":"address","nodeType":"ElementaryTypeName","src":"1102:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1101:18:5"},"src":"1075:45:5"},{"documentation":{"id":709,"nodeType":"StructuredDocumentation","src":"1126:345:5","text":" @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"fb8f41b2","id":717,"name":"ERC20InsufficientAllowance","nameLocation":"1482:26:5","nodeType":"ErrorDefinition","parameters":{"id":716,"nodeType":"ParameterList","parameters":[{"constant":false,"id":711,"mutability":"mutable","name":"spender","nameLocation":"1517:7:5","nodeType":"VariableDeclaration","scope":717,"src":"1509:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":710,"name":"address","nodeType":"ElementaryTypeName","src":"1509:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":713,"mutability":"mutable","name":"allowance","nameLocation":"1534:9:5","nodeType":"VariableDeclaration","scope":717,"src":"1526:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":712,"name":"uint256","nodeType":"ElementaryTypeName","src":"1526:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":715,"mutability":"mutable","name":"needed","nameLocation":"1553:6:5","nodeType":"VariableDeclaration","scope":717,"src":"1545:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":714,"name":"uint256","nodeType":"ElementaryTypeName","src":"1545:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1508:52:5"},"src":"1476:85:5"},{"documentation":{"id":718,"nodeType":"StructuredDocumentation","src":"1567:174:5","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"e602df05","id":722,"name":"ERC20InvalidApprover","nameLocation":"1752:20:5","nodeType":"ErrorDefinition","parameters":{"id":721,"nodeType":"ParameterList","parameters":[{"constant":false,"id":720,"mutability":"mutable","name":"approver","nameLocation":"1781:8:5","nodeType":"VariableDeclaration","scope":722,"src":"1773:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":719,"name":"address","nodeType":"ElementaryTypeName","src":"1773:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1772:18:5"},"src":"1746:45:5"},{"documentation":{"id":723,"nodeType":"StructuredDocumentation","src":"1797:195:5","text":" @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"94280d62","id":727,"name":"ERC20InvalidSpender","nameLocation":"2003:19:5","nodeType":"ErrorDefinition","parameters":{"id":726,"nodeType":"ParameterList","parameters":[{"constant":false,"id":725,"mutability":"mutable","name":"spender","nameLocation":"2031:7:5","nodeType":"VariableDeclaration","scope":727,"src":"2023:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":724,"name":"address","nodeType":"ElementaryTypeName","src":"2023:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2022:17:5"},"src":"1997:43:5"}],"scope":824,"src":"278:1764:5","usedErrors":[698,703,708,717,722,727],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":729,"nodeType":"StructuredDocumentation","src":"2044:141:5","text":" @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."},"fullyImplemented":true,"id":776,"linearizedBaseContracts":[776],"name":"IERC721Errors","nameLocation":"2196:13:5","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":730,"nodeType":"StructuredDocumentation","src":"2216:219:5","text":" @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."},"errorSelector":"89c62b64","id":734,"name":"ERC721InvalidOwner","nameLocation":"2446:18:5","nodeType":"ErrorDefinition","parameters":{"id":733,"nodeType":"ParameterList","parameters":[{"constant":false,"id":732,"mutability":"mutable","name":"owner","nameLocation":"2473:5:5","nodeType":"VariableDeclaration","scope":734,"src":"2465:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":731,"name":"address","nodeType":"ElementaryTypeName","src":"2465:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2464:15:5"},"src":"2440:40:5"},{"documentation":{"id":735,"nodeType":"StructuredDocumentation","src":"2486:132:5","text":" @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."},"errorSelector":"7e273289","id":739,"name":"ERC721NonexistentToken","nameLocation":"2629:22:5","nodeType":"ErrorDefinition","parameters":{"id":738,"nodeType":"ParameterList","parameters":[{"constant":false,"id":737,"mutability":"mutable","name":"tokenId","nameLocation":"2660:7:5","nodeType":"VariableDeclaration","scope":739,"src":"2652:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":736,"name":"uint256","nodeType":"ElementaryTypeName","src":"2652:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2651:17:5"},"src":"2623:46:5"},{"documentation":{"id":740,"nodeType":"StructuredDocumentation","src":"2675:289:5","text":" @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."},"errorSelector":"64283d7b","id":748,"name":"ERC721IncorrectOwner","nameLocation":"2975:20:5","nodeType":"ErrorDefinition","parameters":{"id":747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":742,"mutability":"mutable","name":"sender","nameLocation":"3004:6:5","nodeType":"VariableDeclaration","scope":748,"src":"2996:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":741,"name":"address","nodeType":"ElementaryTypeName","src":"2996:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":744,"mutability":"mutable","name":"tokenId","nameLocation":"3020:7:5","nodeType":"VariableDeclaration","scope":748,"src":"3012:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":743,"name":"uint256","nodeType":"ElementaryTypeName","src":"3012:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":746,"mutability":"mutable","name":"owner","nameLocation":"3037:5:5","nodeType":"VariableDeclaration","scope":748,"src":"3029:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":745,"name":"address","nodeType":"ElementaryTypeName","src":"3029:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2995:48:5"},"src":"2969:75:5"},{"documentation":{"id":749,"nodeType":"StructuredDocumentation","src":"3050:152:5","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"73c6ac6e","id":753,"name":"ERC721InvalidSender","nameLocation":"3213:19:5","nodeType":"ErrorDefinition","parameters":{"id":752,"nodeType":"ParameterList","parameters":[{"constant":false,"id":751,"mutability":"mutable","name":"sender","nameLocation":"3241:6:5","nodeType":"VariableDeclaration","scope":753,"src":"3233:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":750,"name":"address","nodeType":"ElementaryTypeName","src":"3233:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3232:16:5"},"src":"3207:42:5"},{"documentation":{"id":754,"nodeType":"StructuredDocumentation","src":"3255:159:5","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"64a0ae92","id":758,"name":"ERC721InvalidReceiver","nameLocation":"3425:21:5","nodeType":"ErrorDefinition","parameters":{"id":757,"nodeType":"ParameterList","parameters":[{"constant":false,"id":756,"mutability":"mutable","name":"receiver","nameLocation":"3455:8:5","nodeType":"VariableDeclaration","scope":758,"src":"3447:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":755,"name":"address","nodeType":"ElementaryTypeName","src":"3447:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3446:18:5"},"src":"3419:46:5"},{"documentation":{"id":759,"nodeType":"StructuredDocumentation","src":"3471:247:5","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."},"errorSelector":"177e802f","id":765,"name":"ERC721InsufficientApproval","nameLocation":"3729:26:5","nodeType":"ErrorDefinition","parameters":{"id":764,"nodeType":"ParameterList","parameters":[{"constant":false,"id":761,"mutability":"mutable","name":"operator","nameLocation":"3764:8:5","nodeType":"VariableDeclaration","scope":765,"src":"3756:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":760,"name":"address","nodeType":"ElementaryTypeName","src":"3756:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":763,"mutability":"mutable","name":"tokenId","nameLocation":"3782:7:5","nodeType":"VariableDeclaration","scope":765,"src":"3774:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":762,"name":"uint256","nodeType":"ElementaryTypeName","src":"3774:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3755:35:5"},"src":"3723:68:5"},{"documentation":{"id":766,"nodeType":"StructuredDocumentation","src":"3797:174:5","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"a9fbf51f","id":770,"name":"ERC721InvalidApprover","nameLocation":"3982:21:5","nodeType":"ErrorDefinition","parameters":{"id":769,"nodeType":"ParameterList","parameters":[{"constant":false,"id":768,"mutability":"mutable","name":"approver","nameLocation":"4012:8:5","nodeType":"VariableDeclaration","scope":770,"src":"4004:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":767,"name":"address","nodeType":"ElementaryTypeName","src":"4004:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4003:18:5"},"src":"3976:46:5"},{"documentation":{"id":771,"nodeType":"StructuredDocumentation","src":"4028:197:5","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"5b08ba18","id":775,"name":"ERC721InvalidOperator","nameLocation":"4236:21:5","nodeType":"ErrorDefinition","parameters":{"id":774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":773,"mutability":"mutable","name":"operator","nameLocation":"4266:8:5","nodeType":"VariableDeclaration","scope":775,"src":"4258:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":772,"name":"address","nodeType":"ElementaryTypeName","src":"4258:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4257:18:5"},"src":"4230:46:5"}],"scope":824,"src":"2186:2092:5","usedErrors":[734,739,748,753,758,765,770,775],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1155Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":777,"nodeType":"StructuredDocumentation","src":"4280:143:5","text":" @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."},"fullyImplemented":true,"id":823,"linearizedBaseContracts":[823],"name":"IERC1155Errors","nameLocation":"4434:14:5","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":778,"nodeType":"StructuredDocumentation","src":"4455:361:5","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."},"errorSelector":"03dee4c5","id":788,"name":"ERC1155InsufficientBalance","nameLocation":"4827:26:5","nodeType":"ErrorDefinition","parameters":{"id":787,"nodeType":"ParameterList","parameters":[{"constant":false,"id":780,"mutability":"mutable","name":"sender","nameLocation":"4862:6:5","nodeType":"VariableDeclaration","scope":788,"src":"4854:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":779,"name":"address","nodeType":"ElementaryTypeName","src":"4854:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":782,"mutability":"mutable","name":"balance","nameLocation":"4878:7:5","nodeType":"VariableDeclaration","scope":788,"src":"4870:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":781,"name":"uint256","nodeType":"ElementaryTypeName","src":"4870:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":784,"mutability":"mutable","name":"needed","nameLocation":"4895:6:5","nodeType":"VariableDeclaration","scope":788,"src":"4887:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":783,"name":"uint256","nodeType":"ElementaryTypeName","src":"4887:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":786,"mutability":"mutable","name":"tokenId","nameLocation":"4911:7:5","nodeType":"VariableDeclaration","scope":788,"src":"4903:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":785,"name":"uint256","nodeType":"ElementaryTypeName","src":"4903:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4853:66:5"},"src":"4821:99:5"},{"documentation":{"id":789,"nodeType":"StructuredDocumentation","src":"4926:152:5","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"01a83514","id":793,"name":"ERC1155InvalidSender","nameLocation":"5089:20:5","nodeType":"ErrorDefinition","parameters":{"id":792,"nodeType":"ParameterList","parameters":[{"constant":false,"id":791,"mutability":"mutable","name":"sender","nameLocation":"5118:6:5","nodeType":"VariableDeclaration","scope":793,"src":"5110:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":790,"name":"address","nodeType":"ElementaryTypeName","src":"5110:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5109:16:5"},"src":"5083:43:5"},{"documentation":{"id":794,"nodeType":"StructuredDocumentation","src":"5132:159:5","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"57f447ce","id":798,"name":"ERC1155InvalidReceiver","nameLocation":"5302:22:5","nodeType":"ErrorDefinition","parameters":{"id":797,"nodeType":"ParameterList","parameters":[{"constant":false,"id":796,"mutability":"mutable","name":"receiver","nameLocation":"5333:8:5","nodeType":"VariableDeclaration","scope":798,"src":"5325:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":795,"name":"address","nodeType":"ElementaryTypeName","src":"5325:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5324:18:5"},"src":"5296:47:5"},{"documentation":{"id":799,"nodeType":"StructuredDocumentation","src":"5349:256:5","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."},"errorSelector":"e237d922","id":805,"name":"ERC1155MissingApprovalForAll","nameLocation":"5616:28:5","nodeType":"ErrorDefinition","parameters":{"id":804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":801,"mutability":"mutable","name":"operator","nameLocation":"5653:8:5","nodeType":"VariableDeclaration","scope":805,"src":"5645:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":800,"name":"address","nodeType":"ElementaryTypeName","src":"5645:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":803,"mutability":"mutable","name":"owner","nameLocation":"5671:5:5","nodeType":"VariableDeclaration","scope":805,"src":"5663:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":802,"name":"address","nodeType":"ElementaryTypeName","src":"5663:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5644:33:5"},"src":"5610:68:5"},{"documentation":{"id":806,"nodeType":"StructuredDocumentation","src":"5684:174:5","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"3e31884e","id":810,"name":"ERC1155InvalidApprover","nameLocation":"5869:22:5","nodeType":"ErrorDefinition","parameters":{"id":809,"nodeType":"ParameterList","parameters":[{"constant":false,"id":808,"mutability":"mutable","name":"approver","nameLocation":"5900:8:5","nodeType":"VariableDeclaration","scope":810,"src":"5892:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":807,"name":"address","nodeType":"ElementaryTypeName","src":"5892:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5891:18:5"},"src":"5863:47:5"},{"documentation":{"id":811,"nodeType":"StructuredDocumentation","src":"5916:197:5","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"ced3e100","id":815,"name":"ERC1155InvalidOperator","nameLocation":"6124:22:5","nodeType":"ErrorDefinition","parameters":{"id":814,"nodeType":"ParameterList","parameters":[{"constant":false,"id":813,"mutability":"mutable","name":"operator","nameLocation":"6155:8:5","nodeType":"VariableDeclaration","scope":815,"src":"6147:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":812,"name":"address","nodeType":"ElementaryTypeName","src":"6147:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6146:18:5"},"src":"6118:47:5"},{"documentation":{"id":816,"nodeType":"StructuredDocumentation","src":"6171:280:5","text":" @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"},"errorSelector":"5b059991","id":822,"name":"ERC1155InvalidArrayLength","nameLocation":"6462:25:5","nodeType":"ErrorDefinition","parameters":{"id":821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":818,"mutability":"mutable","name":"idsLength","nameLocation":"6496:9:5","nodeType":"VariableDeclaration","scope":822,"src":"6488:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":817,"name":"uint256","nodeType":"ElementaryTypeName","src":"6488:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":820,"mutability":"mutable","name":"valuesLength","nameLocation":"6515:12:5","nodeType":"VariableDeclaration","scope":822,"src":"6507:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":819,"name":"uint256","nodeType":"ElementaryTypeName","src":"6507:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6487:41:5"},"src":"6456:73:5"}],"scope":824,"src":"4424:2107:5","usedErrors":[788,793,798,805,810,815,822],"usedEvents":[]}],"src":"112:6420:5"},"id":5},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol","exportedSymbols":{"Address":[2008],"ERC1967Utils":[1126],"IBeacon":[1136],"StorageSlot":[2217]},"id":1127,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":825,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"114:24:6"},{"absolutePath":"@openzeppelin/contracts/proxy/beacon/IBeacon.sol","file":"../beacon/IBeacon.sol","id":827,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1127,"sourceUnit":1137,"src":"140:46:6","symbolAliases":[{"foreign":{"id":826,"name":"IBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1136,"src":"148:7:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../../utils/Address.sol","id":829,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1127,"sourceUnit":2009,"src":"187:48:6","symbolAliases":[{"foreign":{"id":828,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2008,"src":"195:7:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","file":"../../utils/StorageSlot.sol","id":831,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1127,"sourceUnit":2218,"src":"236:56:6","symbolAliases":[{"foreign":{"id":830,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2217,"src":"244:11:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ERC1967Utils","contractDependencies":[],"contractKind":"library","documentation":{"id":832,"nodeType":"StructuredDocumentation","src":"294:154:6","text":" @dev This abstract contract provides getters and event emitting update functions for\n https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots."},"fullyImplemented":true,"id":1126,"linearizedBaseContracts":[1126],"name":"ERC1967Utils","nameLocation":"457:12:6","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":833,"nodeType":"StructuredDocumentation","src":"660:68:6","text":" @dev Emitted when the implementation is upgraded."},"eventSelector":"bc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b","id":837,"name":"Upgraded","nameLocation":"739:8:6","nodeType":"EventDefinition","parameters":{"id":836,"nodeType":"ParameterList","parameters":[{"constant":false,"id":835,"indexed":true,"mutability":"mutable","name":"implementation","nameLocation":"764:14:6","nodeType":"VariableDeclaration","scope":837,"src":"748:30:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":834,"name":"address","nodeType":"ElementaryTypeName","src":"748:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"747:32:6"},"src":"733:47:6"},{"anonymous":false,"documentation":{"id":838,"nodeType":"StructuredDocumentation","src":"786:67:6","text":" @dev Emitted when the admin account has changed."},"eventSelector":"7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f","id":844,"name":"AdminChanged","nameLocation":"864:12:6","nodeType":"EventDefinition","parameters":{"id":843,"nodeType":"ParameterList","parameters":[{"constant":false,"id":840,"indexed":false,"mutability":"mutable","name":"previousAdmin","nameLocation":"885:13:6","nodeType":"VariableDeclaration","scope":844,"src":"877:21:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":839,"name":"address","nodeType":"ElementaryTypeName","src":"877:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":842,"indexed":false,"mutability":"mutable","name":"newAdmin","nameLocation":"908:8:6","nodeType":"VariableDeclaration","scope":844,"src":"900:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":841,"name":"address","nodeType":"ElementaryTypeName","src":"900:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"876:41:6"},"src":"858:60:6"},{"anonymous":false,"documentation":{"id":845,"nodeType":"StructuredDocumentation","src":"924:59:6","text":" @dev Emitted when the beacon is changed."},"eventSelector":"1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e","id":849,"name":"BeaconUpgraded","nameLocation":"994:14:6","nodeType":"EventDefinition","parameters":{"id":848,"nodeType":"ParameterList","parameters":[{"constant":false,"id":847,"indexed":true,"mutability":"mutable","name":"beacon","nameLocation":"1025:6:6","nodeType":"VariableDeclaration","scope":849,"src":"1009:22:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":846,"name":"address","nodeType":"ElementaryTypeName","src":"1009:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1008:24:6"},"src":"988:45:6"},{"constant":true,"documentation":{"id":850,"nodeType":"StructuredDocumentation","src":"1039:170:6","text":" @dev Storage slot with the address of the current implementation.\n This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1."},"id":853,"mutability":"constant","name":"IMPLEMENTATION_SLOT","nameLocation":"1305:19:6","nodeType":"VariableDeclaration","scope":1126,"src":"1279:114:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":851,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1279:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307833363038393461313362613161333231303636376338323834393264623938646361336532303736636333373335613932306133636135303564333832626263","id":852,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1327:66:6","typeDescriptions":{"typeIdentifier":"t_rational_24440054405305269366569402256811496959409073762505157381672968839269610695612_by_1","typeString":"int_const 2444...(69 digits omitted)...5612"},"value":"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc"},"visibility":"internal"},{"documentation":{"id":854,"nodeType":"StructuredDocumentation","src":"1400:69:6","text":" @dev The `implementation` of the proxy is invalid."},"errorSelector":"4c9c8ce3","id":858,"name":"ERC1967InvalidImplementation","nameLocation":"1480:28:6","nodeType":"ErrorDefinition","parameters":{"id":857,"nodeType":"ParameterList","parameters":[{"constant":false,"id":856,"mutability":"mutable","name":"implementation","nameLocation":"1517:14:6","nodeType":"VariableDeclaration","scope":858,"src":"1509:22:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":855,"name":"address","nodeType":"ElementaryTypeName","src":"1509:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1508:24:6"},"src":"1474:59:6"},{"documentation":{"id":859,"nodeType":"StructuredDocumentation","src":"1539:60:6","text":" @dev The `admin` of the proxy is invalid."},"errorSelector":"62e77ba2","id":863,"name":"ERC1967InvalidAdmin","nameLocation":"1610:19:6","nodeType":"ErrorDefinition","parameters":{"id":862,"nodeType":"ParameterList","parameters":[{"constant":false,"id":861,"mutability":"mutable","name":"admin","nameLocation":"1638:5:6","nodeType":"VariableDeclaration","scope":863,"src":"1630:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":860,"name":"address","nodeType":"ElementaryTypeName","src":"1630:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1629:15:6"},"src":"1604:41:6"},{"documentation":{"id":864,"nodeType":"StructuredDocumentation","src":"1651:61:6","text":" @dev The `beacon` of the proxy is invalid."},"errorSelector":"64ced0ec","id":868,"name":"ERC1967InvalidBeacon","nameLocation":"1723:20:6","nodeType":"ErrorDefinition","parameters":{"id":867,"nodeType":"ParameterList","parameters":[{"constant":false,"id":866,"mutability":"mutable","name":"beacon","nameLocation":"1752:6:6","nodeType":"VariableDeclaration","scope":868,"src":"1744:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":865,"name":"address","nodeType":"ElementaryTypeName","src":"1744:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1743:16:6"},"src":"1717:43:6"},{"documentation":{"id":869,"nodeType":"StructuredDocumentation","src":"1766:82:6","text":" @dev An upgrade function sees `msg.value > 0` that may be lost."},"errorSelector":"b398979f","id":871,"name":"ERC1967NonPayable","nameLocation":"1859:17:6","nodeType":"ErrorDefinition","parameters":{"id":870,"nodeType":"ParameterList","parameters":[],"src":"1876:2:6"},"src":"1853:26:6"},{"body":{"id":883,"nodeType":"Block","src":"2018:77:6","statements":[{"expression":{"expression":{"arguments":[{"id":879,"name":"IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":853,"src":"2062:19:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":877,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2217,"src":"2035:11:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$2217_$","typeString":"type(library StorageSlot)"}},"id":878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2047:14:6","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":2139,"src":"2035:26:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2113_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":880,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2035:47:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2113_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":881,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2083:5:6","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2112,"src":"2035:53:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":876,"id":882,"nodeType":"Return","src":"2028:60:6"}]},"documentation":{"id":872,"nodeType":"StructuredDocumentation","src":"1885:67:6","text":" @dev Returns the current implementation address."},"id":884,"implemented":true,"kind":"function","modifiers":[],"name":"getImplementation","nameLocation":"1966:17:6","nodeType":"FunctionDefinition","parameters":{"id":873,"nodeType":"ParameterList","parameters":[],"src":"1983:2:6"},"returnParameters":{"id":876,"nodeType":"ParameterList","parameters":[{"constant":false,"id":875,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":884,"src":"2009:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":874,"name":"address","nodeType":"ElementaryTypeName","src":"2009:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2008:9:6"},"scope":1126,"src":"1957:138:6","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":910,"nodeType":"Block","src":"2249:218:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":890,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":887,"src":"2263:17:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2281:4:6","memberName":"code","nodeType":"MemberAccess","src":"2263:22:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2286:6:6","memberName":"length","nodeType":"MemberAccess","src":"2263:29:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2296:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2263:34:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":900,"nodeType":"IfStatement","src":"2259:119:6","trueBody":{"id":899,"nodeType":"Block","src":"2299:79:6","statements":[{"errorCall":{"arguments":[{"id":896,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":887,"src":"2349:17:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":895,"name":"ERC1967InvalidImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":858,"src":"2320:28:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":897,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2320:47:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":898,"nodeType":"RevertStatement","src":"2313:54:6"}]}},{"expression":{"id":908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":904,"name":"IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":853,"src":"2414:19:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":901,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2217,"src":"2387:11:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$2217_$","typeString":"type(library StorageSlot)"}},"id":903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2399:14:6","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":2139,"src":"2387:26:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2113_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":905,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2387:47:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2113_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":906,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2435:5:6","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2112,"src":"2387:53:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":907,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":887,"src":"2443:17:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2387:73:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":909,"nodeType":"ExpressionStatement","src":"2387:73:6"}]},"documentation":{"id":885,"nodeType":"StructuredDocumentation","src":"2101:80:6","text":" @dev Stores a new address in the EIP1967 implementation slot."},"id":911,"implemented":true,"kind":"function","modifiers":[],"name":"_setImplementation","nameLocation":"2195:18:6","nodeType":"FunctionDefinition","parameters":{"id":888,"nodeType":"ParameterList","parameters":[{"constant":false,"id":887,"mutability":"mutable","name":"newImplementation","nameLocation":"2222:17:6","nodeType":"VariableDeclaration","scope":911,"src":"2214:25:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":886,"name":"address","nodeType":"ElementaryTypeName","src":"2214:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2213:27:6"},"returnParameters":{"id":889,"nodeType":"ParameterList","parameters":[],"src":"2249:0:6"},"scope":1126,"src":"2186:281:6","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":944,"nodeType":"Block","src":"2860:254:6","statements":[{"expression":{"arguments":[{"id":920,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":914,"src":"2889:17:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":919,"name":"_setImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":911,"src":"2870:18:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":921,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2870:37:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":922,"nodeType":"ExpressionStatement","src":"2870:37:6"},{"eventCall":{"arguments":[{"id":924,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":914,"src":"2931:17:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":923,"name":"Upgraded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":837,"src":"2922:8:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":925,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2922:27:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":926,"nodeType":"EmitStatement","src":"2917:32:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":927,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":916,"src":"2964:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2969:6:6","memberName":"length","nodeType":"MemberAccess","src":"2964:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":929,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2978:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2964:15:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":942,"nodeType":"Block","src":"3065:43:6","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":939,"name":"_checkNonPayable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1125,"src":"3079:16:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":940,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3079:18:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":941,"nodeType":"ExpressionStatement","src":"3079:18:6"}]},"id":943,"nodeType":"IfStatement","src":"2960:148:6","trueBody":{"id":938,"nodeType":"Block","src":"2981:78:6","statements":[{"expression":{"arguments":[{"id":934,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":914,"src":"3024:17:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":935,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":916,"src":"3043:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":931,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2008,"src":"2995:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$2008_$","typeString":"type(library Address)"}},"id":933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3003:20:6","memberName":"functionDelegateCall","nodeType":"MemberAccess","referencedDeclaration":1927,"src":"2995:28:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory) returns (bytes memory)"}},"id":936,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2995:53:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":937,"nodeType":"ExpressionStatement","src":"2995:53:6"}]}}]},"documentation":{"id":912,"nodeType":"StructuredDocumentation","src":"2473:301:6","text":" @dev Performs implementation upgrade with additional setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-Upgraded} event."},"id":945,"implemented":true,"kind":"function","modifiers":[],"name":"upgradeToAndCall","nameLocation":"2788:16:6","nodeType":"FunctionDefinition","parameters":{"id":917,"nodeType":"ParameterList","parameters":[{"constant":false,"id":914,"mutability":"mutable","name":"newImplementation","nameLocation":"2813:17:6","nodeType":"VariableDeclaration","scope":945,"src":"2805:25:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":913,"name":"address","nodeType":"ElementaryTypeName","src":"2805:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":916,"mutability":"mutable","name":"data","nameLocation":"2845:4:6","nodeType":"VariableDeclaration","scope":945,"src":"2832:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":915,"name":"bytes","nodeType":"ElementaryTypeName","src":"2832:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2804:46:6"},"returnParameters":{"id":918,"nodeType":"ParameterList","parameters":[],"src":"2860:0:6"},"scope":1126,"src":"2779:335:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":true,"documentation":{"id":946,"nodeType":"StructuredDocumentation","src":"3120:145:6","text":" @dev Storage slot with the admin of the contract.\n This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1."},"id":949,"mutability":"constant","name":"ADMIN_SLOT","nameLocation":"3361:10:6","nodeType":"VariableDeclaration","scope":1126,"src":"3335:105:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":947,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3335:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307862353331323736383461353638623331373361653133623966386136303136653234336536336236653865653131373864366137313738353062356436313033","id":948,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3374:66:6","typeDescriptions":{"typeIdentifier":"t_rational_81955473079516046949633743016697847541294818689821282749996681496272635257091_by_1","typeString":"int_const 8195...(69 digits omitted)...7091"},"value":"0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103"},"visibility":"internal"},{"body":{"id":961,"nodeType":"Block","src":"3844:68:6","statements":[{"expression":{"expression":{"arguments":[{"id":957,"name":"ADMIN_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":949,"src":"3888:10:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":955,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2217,"src":"3861:11:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$2217_$","typeString":"type(library StorageSlot)"}},"id":956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3873:14:6","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":2139,"src":"3861:26:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2113_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":958,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3861:38:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2113_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":959,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3900:5:6","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2112,"src":"3861:44:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":954,"id":960,"nodeType":"Return","src":"3854:51:6"}]},"documentation":{"id":950,"nodeType":"StructuredDocumentation","src":"3447:340:6","text":" @dev Returns the current admin.\n TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using\n the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`"},"id":962,"implemented":true,"kind":"function","modifiers":[],"name":"getAdmin","nameLocation":"3801:8:6","nodeType":"FunctionDefinition","parameters":{"id":951,"nodeType":"ParameterList","parameters":[],"src":"3809:2:6"},"returnParameters":{"id":954,"nodeType":"ParameterList","parameters":[{"constant":false,"id":953,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":962,"src":"3835:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":952,"name":"address","nodeType":"ElementaryTypeName","src":"3835:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3834:9:6"},"scope":1126,"src":"3792:120:6","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":992,"nodeType":"Block","src":"4039:172:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":968,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":965,"src":"4053:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":971,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4073:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":970,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4065:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":969,"name":"address","nodeType":"ElementaryTypeName","src":"4065:7:6","typeDescriptions":{}}},"id":972,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4065:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4053:22:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":982,"nodeType":"IfStatement","src":"4049:91:6","trueBody":{"id":981,"nodeType":"Block","src":"4077:63:6","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4126:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":976,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4118:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":975,"name":"address","nodeType":"ElementaryTypeName","src":"4118:7:6","typeDescriptions":{}}},"id":978,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4118:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":974,"name":"ERC1967InvalidAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":863,"src":"4098:19:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":979,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4098:31:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":980,"nodeType":"RevertStatement","src":"4091:38:6"}]}},{"expression":{"id":990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":986,"name":"ADMIN_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":949,"src":"4176:10:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":983,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2217,"src":"4149:11:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$2217_$","typeString":"type(library StorageSlot)"}},"id":985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4161:14:6","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":2139,"src":"4149:26:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2113_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":987,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4149:38:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2113_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":988,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4188:5:6","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2112,"src":"4149:44:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":989,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":965,"src":"4196:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4149:55:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":991,"nodeType":"ExpressionStatement","src":"4149:55:6"}]},"documentation":{"id":963,"nodeType":"StructuredDocumentation","src":"3918:71:6","text":" @dev Stores a new address in the EIP1967 admin slot."},"id":993,"implemented":true,"kind":"function","modifiers":[],"name":"_setAdmin","nameLocation":"4003:9:6","nodeType":"FunctionDefinition","parameters":{"id":966,"nodeType":"ParameterList","parameters":[{"constant":false,"id":965,"mutability":"mutable","name":"newAdmin","nameLocation":"4021:8:6","nodeType":"VariableDeclaration","scope":993,"src":"4013:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":964,"name":"address","nodeType":"ElementaryTypeName","src":"4013:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4012:18:6"},"returnParameters":{"id":967,"nodeType":"ParameterList","parameters":[],"src":"4039:0:6"},"scope":1126,"src":"3994:217:6","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1009,"nodeType":"Block","src":"4379:85:6","statements":[{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1000,"name":"getAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":962,"src":"4407:8:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1001,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4407:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1002,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":996,"src":"4419:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":999,"name":"AdminChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":844,"src":"4394:12:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":1003,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4394:34:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1004,"nodeType":"EmitStatement","src":"4389:39:6"},{"expression":{"arguments":[{"id":1006,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":996,"src":"4448:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1005,"name":"_setAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":993,"src":"4438:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1007,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4438:19:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1008,"nodeType":"ExpressionStatement","src":"4438:19:6"}]},"documentation":{"id":994,"nodeType":"StructuredDocumentation","src":"4217:109:6","text":" @dev Changes the admin of the proxy.\n Emits an {IERC1967-AdminChanged} event."},"id":1010,"implemented":true,"kind":"function","modifiers":[],"name":"changeAdmin","nameLocation":"4340:11:6","nodeType":"FunctionDefinition","parameters":{"id":997,"nodeType":"ParameterList","parameters":[{"constant":false,"id":996,"mutability":"mutable","name":"newAdmin","nameLocation":"4360:8:6","nodeType":"VariableDeclaration","scope":1010,"src":"4352:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":995,"name":"address","nodeType":"ElementaryTypeName","src":"4352:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4351:18:6"},"returnParameters":{"id":998,"nodeType":"ParameterList","parameters":[],"src":"4379:0:6"},"scope":1126,"src":"4331:133:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":true,"documentation":{"id":1011,"nodeType":"StructuredDocumentation","src":"4470:201:6","text":" @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1."},"id":1014,"mutability":"constant","name":"BEACON_SLOT","nameLocation":"4767:11:6","nodeType":"VariableDeclaration","scope":1126,"src":"4741:106:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1012,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4741:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307861336630616437346535343233616562666438306433656634333436353738333335613961373261656165653539666636636233353832623335313333643530","id":1013,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4781:66:6","typeDescriptions":{"typeIdentifier":"t_rational_74152234768234802001998023604048924213078445070507226371336425913862612794704_by_1","typeString":"int_const 7415...(69 digits omitted)...4704"},"value":"0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50"},"visibility":"internal"},{"body":{"id":1026,"nodeType":"Block","src":"4963:69:6","statements":[{"expression":{"expression":{"arguments":[{"id":1022,"name":"BEACON_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1014,"src":"5007:11:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1020,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2217,"src":"4980:11:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$2217_$","typeString":"type(library StorageSlot)"}},"id":1021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4992:14:6","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":2139,"src":"4980:26:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2113_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":1023,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4980:39:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2113_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":1024,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5020:5:6","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2112,"src":"4980:45:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1019,"id":1025,"nodeType":"Return","src":"4973:52:6"}]},"documentation":{"id":1015,"nodeType":"StructuredDocumentation","src":"4854:51:6","text":" @dev Returns the current beacon."},"id":1027,"implemented":true,"kind":"function","modifiers":[],"name":"getBeacon","nameLocation":"4919:9:6","nodeType":"FunctionDefinition","parameters":{"id":1016,"nodeType":"ParameterList","parameters":[],"src":"4928:2:6"},"returnParameters":{"id":1019,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1018,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1027,"src":"4954:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1017,"name":"address","nodeType":"ElementaryTypeName","src":"4954:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4953:9:6"},"scope":1126,"src":"4910:122:6","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1072,"nodeType":"Block","src":"5161:390:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1033,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1030,"src":"5175:9:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5185:4:6","memberName":"code","nodeType":"MemberAccess","src":"5175:14:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5190:6:6","memberName":"length","nodeType":"MemberAccess","src":"5175:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1036,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5200:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5175:26:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1043,"nodeType":"IfStatement","src":"5171:95:6","trueBody":{"id":1042,"nodeType":"Block","src":"5203:63:6","statements":[{"errorCall":{"arguments":[{"id":1039,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1030,"src":"5245:9:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1038,"name":"ERC1967InvalidBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":868,"src":"5224:20:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1040,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5224:31:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1041,"nodeType":"RevertStatement","src":"5217:38:6"}]}},{"expression":{"id":1051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":1047,"name":"BEACON_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1014,"src":"5303:11:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1044,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2217,"src":"5276:11:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$2217_$","typeString":"type(library StorageSlot)"}},"id":1046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5288:14:6","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":2139,"src":"5276:26:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2113_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":1048,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5276:39:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2113_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":1049,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5316:5:6","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2112,"src":"5276:45:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1050,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1030,"src":"5324:9:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5276:57:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1052,"nodeType":"ExpressionStatement","src":"5276:57:6"},{"assignments":[1054],"declarations":[{"constant":false,"id":1054,"mutability":"mutable","name":"beaconImplementation","nameLocation":"5352:20:6","nodeType":"VariableDeclaration","scope":1072,"src":"5344:28:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1053,"name":"address","nodeType":"ElementaryTypeName","src":"5344:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1060,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":1056,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1030,"src":"5383:9:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1055,"name":"IBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1136,"src":"5375:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBeacon_$1136_$","typeString":"type(contract IBeacon)"}},"id":1057,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5375:18:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBeacon_$1136","typeString":"contract IBeacon"}},"id":1058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5394:14:6","memberName":"implementation","nodeType":"MemberAccess","referencedDeclaration":1135,"src":"5375:33:6","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":1059,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5375:35:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5344:66:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1061,"name":"beaconImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1054,"src":"5424:20:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5445:4:6","memberName":"code","nodeType":"MemberAccess","src":"5424:25:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5450:6:6","memberName":"length","nodeType":"MemberAccess","src":"5424:32:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1064,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5460:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5424:37:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1071,"nodeType":"IfStatement","src":"5420:125:6","trueBody":{"id":1070,"nodeType":"Block","src":"5463:82:6","statements":[{"errorCall":{"arguments":[{"id":1067,"name":"beaconImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1054,"src":"5513:20:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1066,"name":"ERC1967InvalidImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":858,"src":"5484:28:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1068,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5484:50:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1069,"nodeType":"RevertStatement","src":"5477:57:6"}]}}]},"documentation":{"id":1028,"nodeType":"StructuredDocumentation","src":"5038:71:6","text":" @dev Stores a new beacon in the EIP1967 beacon slot."},"id":1073,"implemented":true,"kind":"function","modifiers":[],"name":"_setBeacon","nameLocation":"5123:10:6","nodeType":"FunctionDefinition","parameters":{"id":1031,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1030,"mutability":"mutable","name":"newBeacon","nameLocation":"5142:9:6","nodeType":"VariableDeclaration","scope":1073,"src":"5134:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1029,"name":"address","nodeType":"ElementaryTypeName","src":"5134:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5133:19:6"},"returnParameters":{"id":1032,"nodeType":"ParameterList","parameters":[],"src":"5161:0:6"},"scope":1126,"src":"5114:437:6","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1110,"nodeType":"Block","src":"6155:254:6","statements":[{"expression":{"arguments":[{"id":1082,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1076,"src":"6176:9:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1081,"name":"_setBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1073,"src":"6165:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1083,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6165:21:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1084,"nodeType":"ExpressionStatement","src":"6165:21:6"},{"eventCall":{"arguments":[{"id":1086,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1076,"src":"6216:9:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1085,"name":"BeaconUpgraded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":849,"src":"6201:14:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1087,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6201:25:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1088,"nodeType":"EmitStatement","src":"6196:30:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1089,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1078,"src":"6241:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6246:6:6","memberName":"length","nodeType":"MemberAccess","src":"6241:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1091,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6255:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6241:15:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1108,"nodeType":"Block","src":"6360:43:6","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1105,"name":"_checkNonPayable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1125,"src":"6374:16:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1106,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6374:18:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1107,"nodeType":"ExpressionStatement","src":"6374:18:6"}]},"id":1109,"nodeType":"IfStatement","src":"6237:166:6","trueBody":{"id":1104,"nodeType":"Block","src":"6258:96:6","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":1097,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1076,"src":"6309:9:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1096,"name":"IBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1136,"src":"6301:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBeacon_$1136_$","typeString":"type(contract IBeacon)"}},"id":1098,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6301:18:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBeacon_$1136","typeString":"contract IBeacon"}},"id":1099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6320:14:6","memberName":"implementation","nodeType":"MemberAccess","referencedDeclaration":1135,"src":"6301:33:6","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":1100,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6301:35:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1101,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1078,"src":"6338:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1093,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2008,"src":"6272:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$2008_$","typeString":"type(library Address)"}},"id":1095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6280:20:6","memberName":"functionDelegateCall","nodeType":"MemberAccess","referencedDeclaration":1927,"src":"6272:28:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory) returns (bytes memory)"}},"id":1102,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6272:71:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1103,"nodeType":"ExpressionStatement","src":"6272:71:6"}]}}]},"documentation":{"id":1074,"nodeType":"StructuredDocumentation","src":"5557:514:6","text":" @dev Change the beacon and trigger a setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-BeaconUpgraded} event.\n CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n efficiency."},"id":1111,"implemented":true,"kind":"function","modifiers":[],"name":"upgradeBeaconToAndCall","nameLocation":"6085:22:6","nodeType":"FunctionDefinition","parameters":{"id":1079,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1076,"mutability":"mutable","name":"newBeacon","nameLocation":"6116:9:6","nodeType":"VariableDeclaration","scope":1111,"src":"6108:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1075,"name":"address","nodeType":"ElementaryTypeName","src":"6108:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1078,"mutability":"mutable","name":"data","nameLocation":"6140:4:6","nodeType":"VariableDeclaration","scope":1111,"src":"6127:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1077,"name":"bytes","nodeType":"ElementaryTypeName","src":"6127:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6107:38:6"},"returnParameters":{"id":1080,"nodeType":"ParameterList","parameters":[],"src":"6155:0:6"},"scope":1126,"src":"6076:333:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1124,"nodeType":"Block","src":"6634:86:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1115,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6648:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6652:5:6","memberName":"value","nodeType":"MemberAccess","src":"6648:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1117,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6660:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6648:13:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1123,"nodeType":"IfStatement","src":"6644:70:6","trueBody":{"id":1122,"nodeType":"Block","src":"6663:51:6","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1119,"name":"ERC1967NonPayable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":871,"src":"6684:17:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1120,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6684:19:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1121,"nodeType":"RevertStatement","src":"6677:26:6"}]}}]},"documentation":{"id":1112,"nodeType":"StructuredDocumentation","src":"6415:178:6","text":" @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n if an upgrade doesn't perform an initialization call."},"id":1125,"implemented":true,"kind":"function","modifiers":[],"name":"_checkNonPayable","nameLocation":"6607:16:6","nodeType":"FunctionDefinition","parameters":{"id":1113,"nodeType":"ParameterList","parameters":[],"src":"6623:2:6"},"returnParameters":{"id":1114,"nodeType":"ParameterList","parameters":[],"src":"6634:0:6"},"scope":1126,"src":"6598:122:6","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":1127,"src":"449:6273:6","usedErrors":[858,863,868,871],"usedEvents":[837,844,849]}],"src":"114:6609:6"},"id":6},"@openzeppelin/contracts/proxy/beacon/IBeacon.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/proxy/beacon/IBeacon.sol","exportedSymbols":{"IBeacon":[1136]},"id":1137,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1128,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"108:24:7"},{"abstract":false,"baseContracts":[],"canonicalName":"IBeacon","contractDependencies":[],"contractKind":"interface","documentation":{"id":1129,"nodeType":"StructuredDocumentation","src":"134:79:7","text":" @dev This is the interface that {BeaconProxy} expects of its beacon."},"fullyImplemented":false,"id":1136,"linearizedBaseContracts":[1136],"name":"IBeacon","nameLocation":"224:7:7","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1130,"nodeType":"StructuredDocumentation","src":"238:168:7","text":" @dev Must return an address that can be used as a delegate call target.\n {UpgradeableBeacon} will check that this address is a contract."},"functionSelector":"5c60da1b","id":1135,"implemented":false,"kind":"function","modifiers":[],"name":"implementation","nameLocation":"420:14:7","nodeType":"FunctionDefinition","parameters":{"id":1131,"nodeType":"ParameterList","parameters":[],"src":"434:2:7"},"returnParameters":{"id":1134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1133,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1135,"src":"460:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1132,"name":"address","nodeType":"ElementaryTypeName","src":"460:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"459:9:7"},"scope":1136,"src":"411:58:7","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1137,"src":"214:257:7","usedErrors":[],"usedEvents":[]}],"src":"108:364:7"},"id":7},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","exportedSymbols":{"Context":[2038],"ERC20":[1651],"IERC20":[1729],"IERC20Errors":[728],"IERC20Metadata":[1755]},"id":1652,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1138,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:8"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"./IERC20.sol","id":1140,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1652,"sourceUnit":1730,"src":"131:36:8","symbolAliases":[{"foreign":{"id":1139,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1729,"src":"139:6:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"./extensions/IERC20Metadata.sol","id":1142,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1652,"sourceUnit":1756,"src":"168:63:8","symbolAliases":[{"foreign":{"id":1141,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1755,"src":"176:14:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":1144,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1652,"sourceUnit":2039,"src":"232:48:8","symbolAliases":[{"foreign":{"id":1143,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2038,"src":"240:7:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":1146,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1652,"sourceUnit":824,"src":"281:65:8","symbolAliases":[{"foreign":{"id":1145,"name":"IERC20Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":728,"src":"289:12:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1148,"name":"Context","nameLocations":["1428:7:8"],"nodeType":"IdentifierPath","referencedDeclaration":2038,"src":"1428:7:8"},"id":1149,"nodeType":"InheritanceSpecifier","src":"1428:7:8"},{"baseName":{"id":1150,"name":"IERC20","nameLocations":["1437:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":1729,"src":"1437:6:8"},"id":1151,"nodeType":"InheritanceSpecifier","src":"1437:6:8"},{"baseName":{"id":1152,"name":"IERC20Metadata","nameLocations":["1445:14:8"],"nodeType":"IdentifierPath","referencedDeclaration":1755,"src":"1445:14:8"},"id":1153,"nodeType":"InheritanceSpecifier","src":"1445:14:8"},{"baseName":{"id":1154,"name":"IERC20Errors","nameLocations":["1461:12:8"],"nodeType":"IdentifierPath","referencedDeclaration":728,"src":"1461:12:8"},"id":1155,"nodeType":"InheritanceSpecifier","src":"1461:12:8"}],"canonicalName":"ERC20","contractDependencies":[],"contractKind":"contract","documentation":{"id":1147,"nodeType":"StructuredDocumentation","src":"348:1052:8","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."},"fullyImplemented":true,"id":1651,"linearizedBaseContracts":[1651,728,1755,1729,2038],"name":"ERC20","nameLocation":"1419:5:8","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":1159,"mutability":"mutable","name":"_balances","nameLocation":"1524:9:8","nodeType":"VariableDeclaration","scope":1651,"src":"1480:53:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":1158,"keyName":"account","keyNameLocation":"1496:7:8","keyType":{"id":1156,"name":"address","nodeType":"ElementaryTypeName","src":"1488:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1480:35:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1157,"name":"uint256","nodeType":"ElementaryTypeName","src":"1507:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":1165,"mutability":"mutable","name":"_allowances","nameLocation":"1612:11:8","nodeType":"VariableDeclaration","scope":1651,"src":"1540:83:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":1164,"keyName":"account","keyNameLocation":"1556:7:8","keyType":{"id":1160,"name":"address","nodeType":"ElementaryTypeName","src":"1548:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1540:63:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1163,"keyName":"spender","keyNameLocation":"1583:7:8","keyType":{"id":1161,"name":"address","nodeType":"ElementaryTypeName","src":"1575:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1567:35:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1162,"name":"uint256","nodeType":"ElementaryTypeName","src":"1594:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":1167,"mutability":"mutable","name":"_totalSupply","nameLocation":"1646:12:8","nodeType":"VariableDeclaration","scope":1651,"src":"1630:28:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1166,"name":"uint256","nodeType":"ElementaryTypeName","src":"1630:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":1169,"mutability":"mutable","name":"_name","nameLocation":"1680:5:8","nodeType":"VariableDeclaration","scope":1651,"src":"1665:20:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":1168,"name":"string","nodeType":"ElementaryTypeName","src":"1665:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":1171,"mutability":"mutable","name":"_symbol","nameLocation":"1706:7:8","nodeType":"VariableDeclaration","scope":1651,"src":"1691:22:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":1170,"name":"string","nodeType":"ElementaryTypeName","src":"1691:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":1187,"nodeType":"Block","src":"1952:57:8","statements":[{"expression":{"id":1181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1179,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1169,"src":"1962:5:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1180,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1174,"src":"1970:5:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1962:13:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1182,"nodeType":"ExpressionStatement","src":"1962:13:8"},{"expression":{"id":1185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1183,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1171,"src":"1985:7:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1184,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1176,"src":"1995:7:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1985:17:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1186,"nodeType":"ExpressionStatement","src":"1985:17:8"}]},"documentation":{"id":1172,"nodeType":"StructuredDocumentation","src":"1720:171:8","text":" @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."},"id":1188,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1174,"mutability":"mutable","name":"name_","nameLocation":"1922:5:8","nodeType":"VariableDeclaration","scope":1188,"src":"1908:19:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1173,"name":"string","nodeType":"ElementaryTypeName","src":"1908:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1176,"mutability":"mutable","name":"symbol_","nameLocation":"1943:7:8","nodeType":"VariableDeclaration","scope":1188,"src":"1929:21:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1175,"name":"string","nodeType":"ElementaryTypeName","src":"1929:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1907:44:8"},"returnParameters":{"id":1178,"nodeType":"ParameterList","parameters":[],"src":"1952:0:8"},"scope":1651,"src":"1896:113:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1742],"body":{"id":1196,"nodeType":"Block","src":"2134:29:8","statements":[{"expression":{"id":1194,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1169,"src":"2151:5:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1193,"id":1195,"nodeType":"Return","src":"2144:12:8"}]},"documentation":{"id":1189,"nodeType":"StructuredDocumentation","src":"2015:54:8","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":1197,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2083:4:8","nodeType":"FunctionDefinition","parameters":{"id":1190,"nodeType":"ParameterList","parameters":[],"src":"2087:2:8"},"returnParameters":{"id":1193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1192,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1197,"src":"2119:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1191,"name":"string","nodeType":"ElementaryTypeName","src":"2119:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2118:15:8"},"scope":1651,"src":"2074:89:8","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1748],"body":{"id":1205,"nodeType":"Block","src":"2338:31:8","statements":[{"expression":{"id":1203,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1171,"src":"2355:7:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1202,"id":1204,"nodeType":"Return","src":"2348:14:8"}]},"documentation":{"id":1198,"nodeType":"StructuredDocumentation","src":"2169:102:8","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":1206,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2285:6:8","nodeType":"FunctionDefinition","parameters":{"id":1199,"nodeType":"ParameterList","parameters":[],"src":"2291:2:8"},"returnParameters":{"id":1202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1201,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1206,"src":"2323:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1200,"name":"string","nodeType":"ElementaryTypeName","src":"2323:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2322:15:8"},"scope":1651,"src":"2276:93:8","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1754],"body":{"id":1214,"nodeType":"Block","src":"3058:26:8","statements":[{"expression":{"hexValue":"3138","id":1212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3075:2:8","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":1211,"id":1213,"nodeType":"Return","src":"3068:9:8"}]},"documentation":{"id":1207,"nodeType":"StructuredDocumentation","src":"2375:622:8","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":1215,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"3011:8:8","nodeType":"FunctionDefinition","parameters":{"id":1208,"nodeType":"ParameterList","parameters":[],"src":"3019:2:8"},"returnParameters":{"id":1211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1210,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1215,"src":"3051:5:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1209,"name":"uint8","nodeType":"ElementaryTypeName","src":"3051:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"3050:7:8"},"scope":1651,"src":"3002:82:8","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1678],"body":{"id":1223,"nodeType":"Block","src":"3205:36:8","statements":[{"expression":{"id":1221,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1167,"src":"3222:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1220,"id":1222,"nodeType":"Return","src":"3215:19:8"}]},"documentation":{"id":1216,"nodeType":"StructuredDocumentation","src":"3090:49:8","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":1224,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"3153:11:8","nodeType":"FunctionDefinition","parameters":{"id":1217,"nodeType":"ParameterList","parameters":[],"src":"3164:2:8"},"returnParameters":{"id":1220,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1219,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1224,"src":"3196:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1218,"name":"uint256","nodeType":"ElementaryTypeName","src":"3196:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3195:9:8"},"scope":1651,"src":"3144:97:8","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1686],"body":{"id":1236,"nodeType":"Block","src":"3373:42:8","statements":[{"expression":{"baseExpression":{"id":1232,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1159,"src":"3390:9:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1234,"indexExpression":{"id":1233,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1227,"src":"3400:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3390:18:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1231,"id":1235,"nodeType":"Return","src":"3383:25:8"}]},"documentation":{"id":1225,"nodeType":"StructuredDocumentation","src":"3247:47:8","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":1237,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"3308:9:8","nodeType":"FunctionDefinition","parameters":{"id":1228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1227,"mutability":"mutable","name":"account","nameLocation":"3326:7:8","nodeType":"VariableDeclaration","scope":1237,"src":"3318:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1226,"name":"address","nodeType":"ElementaryTypeName","src":"3318:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3317:17:8"},"returnParameters":{"id":1231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1230,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1237,"src":"3364:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1229,"name":"uint256","nodeType":"ElementaryTypeName","src":"3364:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3363:9:8"},"scope":1651,"src":"3299:116:8","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1696],"body":{"id":1260,"nodeType":"Block","src":"3685:103:8","statements":[{"assignments":[1248],"declarations":[{"constant":false,"id":1248,"mutability":"mutable","name":"owner","nameLocation":"3703:5:8","nodeType":"VariableDeclaration","scope":1260,"src":"3695:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1247,"name":"address","nodeType":"ElementaryTypeName","src":"3695:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1251,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1249,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2020,"src":"3711:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1250,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3711:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3695:28:8"},{"expression":{"arguments":[{"id":1253,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1248,"src":"3743:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1254,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1240,"src":"3750:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1255,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1242,"src":"3754:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1252,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1381,"src":"3733:9:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1256,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3733:27:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1257,"nodeType":"ExpressionStatement","src":"3733:27:8"},{"expression":{"hexValue":"74727565","id":1258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3777:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1246,"id":1259,"nodeType":"Return","src":"3770:11:8"}]},"documentation":{"id":1238,"nodeType":"StructuredDocumentation","src":"3421:184:8","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."},"functionSelector":"a9059cbb","id":1261,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"3619:8:8","nodeType":"FunctionDefinition","parameters":{"id":1243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1240,"mutability":"mutable","name":"to","nameLocation":"3636:2:8","nodeType":"VariableDeclaration","scope":1261,"src":"3628:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1239,"name":"address","nodeType":"ElementaryTypeName","src":"3628:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1242,"mutability":"mutable","name":"value","nameLocation":"3648:5:8","nodeType":"VariableDeclaration","scope":1261,"src":"3640:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1241,"name":"uint256","nodeType":"ElementaryTypeName","src":"3640:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3627:27:8"},"returnParameters":{"id":1246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1245,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1261,"src":"3679:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1244,"name":"bool","nodeType":"ElementaryTypeName","src":"3679:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3678:6:8"},"scope":1651,"src":"3610:178:8","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1706],"body":{"id":1277,"nodeType":"Block","src":"3935:51:8","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":1271,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1165,"src":"3952:11:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":1273,"indexExpression":{"id":1272,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1264,"src":"3964:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3952:18:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1275,"indexExpression":{"id":1274,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"3971:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3952:27:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1270,"id":1276,"nodeType":"Return","src":"3945:34:8"}]},"documentation":{"id":1262,"nodeType":"StructuredDocumentation","src":"3794:47:8","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":1278,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"3855:9:8","nodeType":"FunctionDefinition","parameters":{"id":1267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1264,"mutability":"mutable","name":"owner","nameLocation":"3873:5:8","nodeType":"VariableDeclaration","scope":1278,"src":"3865:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1263,"name":"address","nodeType":"ElementaryTypeName","src":"3865:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1266,"mutability":"mutable","name":"spender","nameLocation":"3888:7:8","nodeType":"VariableDeclaration","scope":1278,"src":"3880:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1265,"name":"address","nodeType":"ElementaryTypeName","src":"3880:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3864:32:8"},"returnParameters":{"id":1270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1269,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1278,"src":"3926:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1268,"name":"uint256","nodeType":"ElementaryTypeName","src":"3926:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3925:9:8"},"scope":1651,"src":"3846:140:8","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1716],"body":{"id":1301,"nodeType":"Block","src":"4372:107:8","statements":[{"assignments":[1289],"declarations":[{"constant":false,"id":1289,"mutability":"mutable","name":"owner","nameLocation":"4390:5:8","nodeType":"VariableDeclaration","scope":1301,"src":"4382:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1288,"name":"address","nodeType":"ElementaryTypeName","src":"4382:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1292,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1290,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2020,"src":"4398:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1291,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4398:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4382:28:8"},{"expression":{"arguments":[{"id":1294,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1289,"src":"4429:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1295,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1281,"src":"4436:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1296,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1283,"src":"4445:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1293,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1542,1602],"referencedDeclaration":1542,"src":"4420:8:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4420:31:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1298,"nodeType":"ExpressionStatement","src":"4420:31:8"},{"expression":{"hexValue":"74727565","id":1299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4468:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1287,"id":1300,"nodeType":"Return","src":"4461:11:8"}]},"documentation":{"id":1279,"nodeType":"StructuredDocumentation","src":"3992:296:8","text":" @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":1302,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4302:7:8","nodeType":"FunctionDefinition","parameters":{"id":1284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1281,"mutability":"mutable","name":"spender","nameLocation":"4318:7:8","nodeType":"VariableDeclaration","scope":1302,"src":"4310:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1280,"name":"address","nodeType":"ElementaryTypeName","src":"4310:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1283,"mutability":"mutable","name":"value","nameLocation":"4335:5:8","nodeType":"VariableDeclaration","scope":1302,"src":"4327:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1282,"name":"uint256","nodeType":"ElementaryTypeName","src":"4327:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4309:32:8"},"returnParameters":{"id":1287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1286,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1302,"src":"4366:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1285,"name":"bool","nodeType":"ElementaryTypeName","src":"4366:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4365:6:8"},"scope":1651,"src":"4293:186:8","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1728],"body":{"id":1333,"nodeType":"Block","src":"5132:151:8","statements":[{"assignments":[1315],"declarations":[{"constant":false,"id":1315,"mutability":"mutable","name":"spender","nameLocation":"5150:7:8","nodeType":"VariableDeclaration","scope":1333,"src":"5142:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1314,"name":"address","nodeType":"ElementaryTypeName","src":"5142:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1318,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1316,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2020,"src":"5160:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1317,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5160:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5142:30:8"},{"expression":{"arguments":[{"id":1320,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1305,"src":"5198:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1321,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1315,"src":"5204:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1322,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1309,"src":"5213:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1319,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1650,"src":"5182:15:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1323,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5182:37:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1324,"nodeType":"ExpressionStatement","src":"5182:37:8"},{"expression":{"arguments":[{"id":1326,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1305,"src":"5239:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1327,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1307,"src":"5245:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1328,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1309,"src":"5249:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1325,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1381,"src":"5229:9:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1329,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5229:26:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1330,"nodeType":"ExpressionStatement","src":"5229:26:8"},{"expression":{"hexValue":"74727565","id":1331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5272:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1313,"id":1332,"nodeType":"Return","src":"5265:11:8"}]},"documentation":{"id":1303,"nodeType":"StructuredDocumentation","src":"4485:549:8","text":" @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."},"functionSelector":"23b872dd","id":1334,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"5048:12:8","nodeType":"FunctionDefinition","parameters":{"id":1310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1305,"mutability":"mutable","name":"from","nameLocation":"5069:4:8","nodeType":"VariableDeclaration","scope":1334,"src":"5061:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1304,"name":"address","nodeType":"ElementaryTypeName","src":"5061:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1307,"mutability":"mutable","name":"to","nameLocation":"5083:2:8","nodeType":"VariableDeclaration","scope":1334,"src":"5075:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1306,"name":"address","nodeType":"ElementaryTypeName","src":"5075:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1309,"mutability":"mutable","name":"value","nameLocation":"5095:5:8","nodeType":"VariableDeclaration","scope":1334,"src":"5087:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1308,"name":"uint256","nodeType":"ElementaryTypeName","src":"5087:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5060:41:8"},"returnParameters":{"id":1313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1312,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1334,"src":"5126:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1311,"name":"bool","nodeType":"ElementaryTypeName","src":"5126:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5125:6:8"},"scope":1651,"src":"5039:244:8","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1380,"nodeType":"Block","src":"5725:231:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1344,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1337,"src":"5739:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1347,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5755:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1346,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5747:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1345,"name":"address","nodeType":"ElementaryTypeName","src":"5747:7:8","typeDescriptions":{}}},"id":1348,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5747:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5739:18:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1358,"nodeType":"IfStatement","src":"5735:86:8","trueBody":{"id":1357,"nodeType":"Block","src":"5759:62:8","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5807:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1352,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5799:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1351,"name":"address","nodeType":"ElementaryTypeName","src":"5799:7:8","typeDescriptions":{}}},"id":1354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5799:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1350,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":703,"src":"5780:18:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5780:30:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1356,"nodeType":"RevertStatement","src":"5773:37:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1359,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1339,"src":"5834:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1362,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5848:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1361,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5840:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1360,"name":"address","nodeType":"ElementaryTypeName","src":"5840:7:8","typeDescriptions":{}}},"id":1363,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5840:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5834:16:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1373,"nodeType":"IfStatement","src":"5830:86:8","trueBody":{"id":1372,"nodeType":"Block","src":"5852:64:8","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5902:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1367,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5894:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1366,"name":"address","nodeType":"ElementaryTypeName","src":"5894:7:8","typeDescriptions":{}}},"id":1369,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5894:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1365,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":708,"src":"5873:20:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1370,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5873:32:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1371,"nodeType":"RevertStatement","src":"5866:39:8"}]}},{"expression":{"arguments":[{"id":1375,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1337,"src":"5933:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1376,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1339,"src":"5939:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1377,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1341,"src":"5943:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1374,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1458,"src":"5925:7:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5925:24:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1379,"nodeType":"ExpressionStatement","src":"5925:24:8"}]},"documentation":{"id":1335,"nodeType":"StructuredDocumentation","src":"5289:362:8","text":" @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":1381,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"5665:9:8","nodeType":"FunctionDefinition","parameters":{"id":1342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1337,"mutability":"mutable","name":"from","nameLocation":"5683:4:8","nodeType":"VariableDeclaration","scope":1381,"src":"5675:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1336,"name":"address","nodeType":"ElementaryTypeName","src":"5675:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1339,"mutability":"mutable","name":"to","nameLocation":"5697:2:8","nodeType":"VariableDeclaration","scope":1381,"src":"5689:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1338,"name":"address","nodeType":"ElementaryTypeName","src":"5689:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1341,"mutability":"mutable","name":"value","nameLocation":"5709:5:8","nodeType":"VariableDeclaration","scope":1381,"src":"5701:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1340,"name":"uint256","nodeType":"ElementaryTypeName","src":"5701:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5674:41:8"},"returnParameters":{"id":1343,"nodeType":"ParameterList","parameters":[],"src":"5725:0:8"},"scope":1651,"src":"5656:300:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1457,"nodeType":"Block","src":"6346:1032:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1391,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1384,"src":"6360:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6376:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1393,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6368:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1392,"name":"address","nodeType":"ElementaryTypeName","src":"6368:7:8","typeDescriptions":{}}},"id":1395,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6368:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6360:18:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1428,"nodeType":"Block","src":"6534:362:8","statements":[{"assignments":[1403],"declarations":[{"constant":false,"id":1403,"mutability":"mutable","name":"fromBalance","nameLocation":"6556:11:8","nodeType":"VariableDeclaration","scope":1428,"src":"6548:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1402,"name":"uint256","nodeType":"ElementaryTypeName","src":"6548:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1407,"initialValue":{"baseExpression":{"id":1404,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1159,"src":"6570:9:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1406,"indexExpression":{"id":1405,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1384,"src":"6580:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6570:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6548:37:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1408,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1403,"src":"6603:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1409,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1388,"src":"6617:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6603:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1418,"nodeType":"IfStatement","src":"6599:115:8","trueBody":{"id":1417,"nodeType":"Block","src":"6624:90:8","statements":[{"errorCall":{"arguments":[{"id":1412,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1384,"src":"6674:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1413,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1403,"src":"6680:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1414,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1388,"src":"6693:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1411,"name":"ERC20InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":698,"src":"6649:24:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":1415,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6649:50:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1416,"nodeType":"RevertStatement","src":"6642:57:8"}]}},{"id":1427,"nodeType":"UncheckedBlock","src":"6727:159:8","statements":[{"expression":{"id":1425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1419,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1159,"src":"6834:9:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1421,"indexExpression":{"id":1420,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1384,"src":"6844:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6834:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1422,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1403,"src":"6852:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1423,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1388,"src":"6866:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6852:19:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6834:37:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1426,"nodeType":"ExpressionStatement","src":"6834:37:8"}]}]},"id":1429,"nodeType":"IfStatement","src":"6356:540:8","trueBody":{"id":1401,"nodeType":"Block","src":"6380:148:8","statements":[{"expression":{"id":1399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1397,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1167,"src":"6496:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1398,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1388,"src":"6512:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6496:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1400,"nodeType":"ExpressionStatement","src":"6496:21:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1430,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1386,"src":"6910:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1433,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6924:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1432,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1431,"name":"address","nodeType":"ElementaryTypeName","src":"6916:7:8","typeDescriptions":{}}},"id":1434,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6910:16:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1449,"nodeType":"Block","src":"7125:206:8","statements":[{"id":1448,"nodeType":"UncheckedBlock","src":"7139:182:8","statements":[{"expression":{"id":1446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1442,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1159,"src":"7284:9:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1444,"indexExpression":{"id":1443,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1386,"src":"7294:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7284:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1445,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1388,"src":"7301:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7284:22:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1447,"nodeType":"ExpressionStatement","src":"7284:22:8"}]}]},"id":1450,"nodeType":"IfStatement","src":"6906:425:8","trueBody":{"id":1441,"nodeType":"Block","src":"6928:191:8","statements":[{"id":1440,"nodeType":"UncheckedBlock","src":"6942:167:8","statements":[{"expression":{"id":1438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1436,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1167,"src":"7073:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":1437,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1388,"src":"7089:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7073:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1439,"nodeType":"ExpressionStatement","src":"7073:21:8"}]}]}},{"eventCall":{"arguments":[{"id":1452,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1384,"src":"7355:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1453,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1386,"src":"7361:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1454,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1388,"src":"7365:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1451,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1663,"src":"7346:8:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1455,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7346:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1456,"nodeType":"EmitStatement","src":"7341:30:8"}]},"documentation":{"id":1382,"nodeType":"StructuredDocumentation","src":"5962:304:8","text":" @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."},"id":1458,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"6280:7:8","nodeType":"FunctionDefinition","parameters":{"id":1389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1384,"mutability":"mutable","name":"from","nameLocation":"6296:4:8","nodeType":"VariableDeclaration","scope":1458,"src":"6288:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1383,"name":"address","nodeType":"ElementaryTypeName","src":"6288:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1386,"mutability":"mutable","name":"to","nameLocation":"6310:2:8","nodeType":"VariableDeclaration","scope":1458,"src":"6302:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1385,"name":"address","nodeType":"ElementaryTypeName","src":"6302:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1388,"mutability":"mutable","name":"value","nameLocation":"6322:5:8","nodeType":"VariableDeclaration","scope":1458,"src":"6314:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1387,"name":"uint256","nodeType":"ElementaryTypeName","src":"6314:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6287:41:8"},"returnParameters":{"id":1390,"nodeType":"ParameterList","parameters":[],"src":"6346:0:8"},"scope":1651,"src":"6271:1107:8","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1490,"nodeType":"Block","src":"7777:152:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1466,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1461,"src":"7791:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7810:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1468,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7802:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1467,"name":"address","nodeType":"ElementaryTypeName","src":"7802:7:8","typeDescriptions":{}}},"id":1470,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7802:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7791:21:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1480,"nodeType":"IfStatement","src":"7787:91:8","trueBody":{"id":1479,"nodeType":"Block","src":"7814:64:8","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7864:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1474,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7856:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1473,"name":"address","nodeType":"ElementaryTypeName","src":"7856:7:8","typeDescriptions":{}}},"id":1476,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7856:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1472,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":708,"src":"7835:20:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1477,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7835:32:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1478,"nodeType":"RevertStatement","src":"7828:39:8"}]}},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7903:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1483,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7895:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1482,"name":"address","nodeType":"ElementaryTypeName","src":"7895:7:8","typeDescriptions":{}}},"id":1485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7895:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1486,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1461,"src":"7907:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1487,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1463,"src":"7916:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1481,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1458,"src":"7887:7:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1488,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7887:35:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1489,"nodeType":"ExpressionStatement","src":"7887:35:8"}]},"documentation":{"id":1459,"nodeType":"StructuredDocumentation","src":"7384:332:8","text":" @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":1491,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"7730:5:8","nodeType":"FunctionDefinition","parameters":{"id":1464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1461,"mutability":"mutable","name":"account","nameLocation":"7744:7:8","nodeType":"VariableDeclaration","scope":1491,"src":"7736:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1460,"name":"address","nodeType":"ElementaryTypeName","src":"7736:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1463,"mutability":"mutable","name":"value","nameLocation":"7761:5:8","nodeType":"VariableDeclaration","scope":1491,"src":"7753:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1462,"name":"uint256","nodeType":"ElementaryTypeName","src":"7753:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7735:32:8"},"returnParameters":{"id":1465,"nodeType":"ParameterList","parameters":[],"src":"7777:0:8"},"scope":1651,"src":"7721:208:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1523,"nodeType":"Block","src":"8303:150:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1499,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1494,"src":"8317:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8336:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1501,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8328:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1500,"name":"address","nodeType":"ElementaryTypeName","src":"8328:7:8","typeDescriptions":{}}},"id":1503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8328:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8317:21:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1513,"nodeType":"IfStatement","src":"8313:89:8","trueBody":{"id":1512,"nodeType":"Block","src":"8340:62:8","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1508,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8388:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1507,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8380:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1506,"name":"address","nodeType":"ElementaryTypeName","src":"8380:7:8","typeDescriptions":{}}},"id":1509,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8380:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1505,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":703,"src":"8361:18:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1510,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8361:30:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1511,"nodeType":"RevertStatement","src":"8354:37:8"}]}},{"expression":{"arguments":[{"id":1515,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1494,"src":"8419:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1518,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8436:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1517,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8428:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1516,"name":"address","nodeType":"ElementaryTypeName","src":"8428:7:8","typeDescriptions":{}}},"id":1519,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8428:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1520,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1496,"src":"8440:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1514,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1458,"src":"8411:7:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8411:35:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1522,"nodeType":"ExpressionStatement","src":"8411:35:8"}]},"documentation":{"id":1492,"nodeType":"StructuredDocumentation","src":"7935:307:8","text":" @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"},"id":1524,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"8256:5:8","nodeType":"FunctionDefinition","parameters":{"id":1497,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1494,"mutability":"mutable","name":"account","nameLocation":"8270:7:8","nodeType":"VariableDeclaration","scope":1524,"src":"8262:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1493,"name":"address","nodeType":"ElementaryTypeName","src":"8262:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1496,"mutability":"mutable","name":"value","nameLocation":"8287:5:8","nodeType":"VariableDeclaration","scope":1524,"src":"8279:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1495,"name":"uint256","nodeType":"ElementaryTypeName","src":"8279:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8261:32:8"},"returnParameters":{"id":1498,"nodeType":"ParameterList","parameters":[],"src":"8303:0:8"},"scope":1651,"src":"8247:206:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1541,"nodeType":"Block","src":"9063:54:8","statements":[{"expression":{"arguments":[{"id":1535,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1527,"src":"9082:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1536,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1529,"src":"9089:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1537,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1531,"src":"9098:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":1538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9105:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1534,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1542,1602],"referencedDeclaration":1602,"src":"9073:8:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":1539,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9073:37:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1540,"nodeType":"ExpressionStatement","src":"9073:37:8"}]},"documentation":{"id":1525,"nodeType":"StructuredDocumentation","src":"8459:525:8","text":" @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"id":1542,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"8998:8:8","nodeType":"FunctionDefinition","parameters":{"id":1532,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1527,"mutability":"mutable","name":"owner","nameLocation":"9015:5:8","nodeType":"VariableDeclaration","scope":1542,"src":"9007:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1526,"name":"address","nodeType":"ElementaryTypeName","src":"9007:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1529,"mutability":"mutable","name":"spender","nameLocation":"9030:7:8","nodeType":"VariableDeclaration","scope":1542,"src":"9022:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1528,"name":"address","nodeType":"ElementaryTypeName","src":"9022:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1531,"mutability":"mutable","name":"value","nameLocation":"9047:5:8","nodeType":"VariableDeclaration","scope":1542,"src":"9039:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1530,"name":"uint256","nodeType":"ElementaryTypeName","src":"9039:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9006:47:8"},"returnParameters":{"id":1533,"nodeType":"ParameterList","parameters":[],"src":"9063:0:8"},"scope":1651,"src":"8989:128:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1601,"nodeType":"Block","src":"10047:334:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1554,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1545,"src":"10061:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10078:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1556,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10070:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1555,"name":"address","nodeType":"ElementaryTypeName","src":"10070:7:8","typeDescriptions":{}}},"id":1558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10070:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10061:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1568,"nodeType":"IfStatement","src":"10057:89:8","trueBody":{"id":1567,"nodeType":"Block","src":"10082:64:8","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10132:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1562,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10124:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1561,"name":"address","nodeType":"ElementaryTypeName","src":"10124:7:8","typeDescriptions":{}}},"id":1564,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10124:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1560,"name":"ERC20InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":722,"src":"10103:20:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1565,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10103:32:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1566,"nodeType":"RevertStatement","src":"10096:39:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1569,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1547,"src":"10159:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1572,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10178:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1571,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10170:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1570,"name":"address","nodeType":"ElementaryTypeName","src":"10170:7:8","typeDescriptions":{}}},"id":1573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10170:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10159:21:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1583,"nodeType":"IfStatement","src":"10155:90:8","trueBody":{"id":1582,"nodeType":"Block","src":"10182:63:8","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1578,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10231:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1577,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10223:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1576,"name":"address","nodeType":"ElementaryTypeName","src":"10223:7:8","typeDescriptions":{}}},"id":1579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10223:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1575,"name":"ERC20InvalidSpender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":727,"src":"10203:19:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1580,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10203:31:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1581,"nodeType":"RevertStatement","src":"10196:38:8"}]}},{"expression":{"id":1590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1584,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1165,"src":"10254:11:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":1587,"indexExpression":{"id":1585,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1545,"src":"10266:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10254:18:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1588,"indexExpression":{"id":1586,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1547,"src":"10273:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10254:27:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1589,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1549,"src":"10284:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10254:35:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1591,"nodeType":"ExpressionStatement","src":"10254:35:8"},{"condition":{"id":1592,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1551,"src":"10303:9:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1600,"nodeType":"IfStatement","src":"10299:76:8","trueBody":{"id":1599,"nodeType":"Block","src":"10314:61:8","statements":[{"eventCall":{"arguments":[{"id":1594,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1545,"src":"10342:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1595,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1547,"src":"10349:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1596,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1549,"src":"10358:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1593,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1672,"src":"10333:8:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1597,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10333:31:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1598,"nodeType":"EmitStatement","src":"10328:36:8"}]}}]},"documentation":{"id":1543,"nodeType":"StructuredDocumentation","src":"9123:821:8","text":" @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."},"id":1602,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"9958:8:8","nodeType":"FunctionDefinition","parameters":{"id":1552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1545,"mutability":"mutable","name":"owner","nameLocation":"9975:5:8","nodeType":"VariableDeclaration","scope":1602,"src":"9967:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1544,"name":"address","nodeType":"ElementaryTypeName","src":"9967:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1547,"mutability":"mutable","name":"spender","nameLocation":"9990:7:8","nodeType":"VariableDeclaration","scope":1602,"src":"9982:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1546,"name":"address","nodeType":"ElementaryTypeName","src":"9982:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1549,"mutability":"mutable","name":"value","nameLocation":"10007:5:8","nodeType":"VariableDeclaration","scope":1602,"src":"9999:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1548,"name":"uint256","nodeType":"ElementaryTypeName","src":"9999:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1551,"mutability":"mutable","name":"emitEvent","nameLocation":"10019:9:8","nodeType":"VariableDeclaration","scope":1602,"src":"10014:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1550,"name":"bool","nodeType":"ElementaryTypeName","src":"10014:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9966:63:8"},"returnParameters":{"id":1553,"nodeType":"ParameterList","parameters":[],"src":"10047:0:8"},"scope":1651,"src":"9949:432:8","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1649,"nodeType":"Block","src":"10752:388:8","statements":[{"assignments":[1613],"declarations":[{"constant":false,"id":1613,"mutability":"mutable","name":"currentAllowance","nameLocation":"10770:16:8","nodeType":"VariableDeclaration","scope":1649,"src":"10762:24:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1612,"name":"uint256","nodeType":"ElementaryTypeName","src":"10762:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1618,"initialValue":{"arguments":[{"id":1615,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1605,"src":"10799:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1616,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1607,"src":"10806:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1614,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1278,"src":"10789:9:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":1617,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10789:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10762:52:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1619,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1613,"src":"10828:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":1622,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10853:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1621,"name":"uint256","nodeType":"ElementaryTypeName","src":"10853:7:8","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":1620,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10848:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10848:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":1624,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10862:3:8","memberName":"max","nodeType":"MemberAccess","src":"10848:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10828:37:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1648,"nodeType":"IfStatement","src":"10824:310:8","trueBody":{"id":1647,"nodeType":"Block","src":"10867:267:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1626,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1613,"src":"10885:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1627,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1609,"src":"10904:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10885:24:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1636,"nodeType":"IfStatement","src":"10881:130:8","trueBody":{"id":1635,"nodeType":"Block","src":"10911:100:8","statements":[{"errorCall":{"arguments":[{"id":1630,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1607,"src":"10963:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1631,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1613,"src":"10972:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1632,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1609,"src":"10990:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1629,"name":"ERC20InsufficientAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":717,"src":"10936:26:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":1633,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10936:60:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1634,"nodeType":"RevertStatement","src":"10929:67:8"}]}},{"id":1646,"nodeType":"UncheckedBlock","src":"11024:100:8","statements":[{"expression":{"arguments":[{"id":1638,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1605,"src":"11061:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1639,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1607,"src":"11068:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1640,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1613,"src":"11077:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1641,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1609,"src":"11096:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11077:24:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":1643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11103:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1637,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1542,1602],"referencedDeclaration":1602,"src":"11052:8:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":1644,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11052:57:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1645,"nodeType":"ExpressionStatement","src":"11052:57:8"}]}]}}]},"documentation":{"id":1603,"nodeType":"StructuredDocumentation","src":"10387:271:8","text":" @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."},"id":1650,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"10672:15:8","nodeType":"FunctionDefinition","parameters":{"id":1610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1605,"mutability":"mutable","name":"owner","nameLocation":"10696:5:8","nodeType":"VariableDeclaration","scope":1650,"src":"10688:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1604,"name":"address","nodeType":"ElementaryTypeName","src":"10688:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1607,"mutability":"mutable","name":"spender","nameLocation":"10711:7:8","nodeType":"VariableDeclaration","scope":1650,"src":"10703:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1606,"name":"address","nodeType":"ElementaryTypeName","src":"10703:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1609,"mutability":"mutable","name":"value","nameLocation":"10728:5:8","nodeType":"VariableDeclaration","scope":1650,"src":"10720:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1608,"name":"uint256","nodeType":"ElementaryTypeName","src":"10720:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10687:47:8"},"returnParameters":{"id":1611,"nodeType":"ParameterList","parameters":[],"src":"10752:0:8"},"scope":1651,"src":"10663:477:8","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1652,"src":"1401:9741:8","usedErrors":[698,703,708,717,722,727],"usedEvents":[1663,1672]}],"src":"105:11038:8"},"id":8},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[1729]},"id":1730,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1653,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:9"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":1654,"nodeType":"StructuredDocumentation","src":"132:70:9","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":1729,"linearizedBaseContracts":[1729],"name":"IERC20","nameLocation":"213:6:9","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1655,"nodeType":"StructuredDocumentation","src":"226:158:9","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":1663,"name":"Transfer","nameLocation":"395:8:9","nodeType":"EventDefinition","parameters":{"id":1662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1657,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"420:4:9","nodeType":"VariableDeclaration","scope":1663,"src":"404:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1656,"name":"address","nodeType":"ElementaryTypeName","src":"404:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1659,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"442:2:9","nodeType":"VariableDeclaration","scope":1663,"src":"426:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1658,"name":"address","nodeType":"ElementaryTypeName","src":"426:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1661,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"454:5:9","nodeType":"VariableDeclaration","scope":1663,"src":"446:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1660,"name":"uint256","nodeType":"ElementaryTypeName","src":"446:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"403:57:9"},"src":"389:72:9"},{"anonymous":false,"documentation":{"id":1664,"nodeType":"StructuredDocumentation","src":"467:148:9","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":1672,"name":"Approval","nameLocation":"626:8:9","nodeType":"EventDefinition","parameters":{"id":1671,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1666,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"651:5:9","nodeType":"VariableDeclaration","scope":1672,"src":"635:21:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1665,"name":"address","nodeType":"ElementaryTypeName","src":"635:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1668,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"674:7:9","nodeType":"VariableDeclaration","scope":1672,"src":"658:23:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1667,"name":"address","nodeType":"ElementaryTypeName","src":"658:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1670,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"691:5:9","nodeType":"VariableDeclaration","scope":1672,"src":"683:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1669,"name":"uint256","nodeType":"ElementaryTypeName","src":"683:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"634:63:9"},"src":"620:78:9"},{"documentation":{"id":1673,"nodeType":"StructuredDocumentation","src":"704:65:9","text":" @dev Returns the value of tokens in existence."},"functionSelector":"18160ddd","id":1678,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:9","nodeType":"FunctionDefinition","parameters":{"id":1674,"nodeType":"ParameterList","parameters":[],"src":"794:2:9"},"returnParameters":{"id":1677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1676,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1678,"src":"820:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1675,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:9"},"scope":1729,"src":"774:55:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1679,"nodeType":"StructuredDocumentation","src":"835:71:9","text":" @dev Returns the value of tokens owned by `account`."},"functionSelector":"70a08231","id":1686,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"920:9:9","nodeType":"FunctionDefinition","parameters":{"id":1682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1681,"mutability":"mutable","name":"account","nameLocation":"938:7:9","nodeType":"VariableDeclaration","scope":1686,"src":"930:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1680,"name":"address","nodeType":"ElementaryTypeName","src":"930:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"929:17:9"},"returnParameters":{"id":1685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1684,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1686,"src":"970:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1683,"name":"uint256","nodeType":"ElementaryTypeName","src":"970:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"969:9:9"},"scope":1729,"src":"911:68:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1687,"nodeType":"StructuredDocumentation","src":"985:213:9","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":1696,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1212:8:9","nodeType":"FunctionDefinition","parameters":{"id":1692,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1689,"mutability":"mutable","name":"to","nameLocation":"1229:2:9","nodeType":"VariableDeclaration","scope":1696,"src":"1221:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1688,"name":"address","nodeType":"ElementaryTypeName","src":"1221:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1691,"mutability":"mutable","name":"value","nameLocation":"1241:5:9","nodeType":"VariableDeclaration","scope":1696,"src":"1233:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1690,"name":"uint256","nodeType":"ElementaryTypeName","src":"1233:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1220:27:9"},"returnParameters":{"id":1695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1694,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1696,"src":"1266:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1693,"name":"bool","nodeType":"ElementaryTypeName","src":"1266:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1265:6:9"},"scope":1729,"src":"1203:69:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1697,"nodeType":"StructuredDocumentation","src":"1278:264:9","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":1706,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1556:9:9","nodeType":"FunctionDefinition","parameters":{"id":1702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1699,"mutability":"mutable","name":"owner","nameLocation":"1574:5:9","nodeType":"VariableDeclaration","scope":1706,"src":"1566:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1698,"name":"address","nodeType":"ElementaryTypeName","src":"1566:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1701,"mutability":"mutable","name":"spender","nameLocation":"1589:7:9","nodeType":"VariableDeclaration","scope":1706,"src":"1581:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1700,"name":"address","nodeType":"ElementaryTypeName","src":"1581:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1565:32:9"},"returnParameters":{"id":1705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1704,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1706,"src":"1621:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1703,"name":"uint256","nodeType":"ElementaryTypeName","src":"1621:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1620:9:9"},"scope":1729,"src":"1547:83:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1707,"nodeType":"StructuredDocumentation","src":"1636:667:9","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":1716,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2317:7:9","nodeType":"FunctionDefinition","parameters":{"id":1712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1709,"mutability":"mutable","name":"spender","nameLocation":"2333:7:9","nodeType":"VariableDeclaration","scope":1716,"src":"2325:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1708,"name":"address","nodeType":"ElementaryTypeName","src":"2325:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1711,"mutability":"mutable","name":"value","nameLocation":"2350:5:9","nodeType":"VariableDeclaration","scope":1716,"src":"2342:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1710,"name":"uint256","nodeType":"ElementaryTypeName","src":"2342:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2324:32:9"},"returnParameters":{"id":1715,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1714,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1716,"src":"2375:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1713,"name":"bool","nodeType":"ElementaryTypeName","src":"2375:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2374:6:9"},"scope":1729,"src":"2308:73:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1717,"nodeType":"StructuredDocumentation","src":"2387:297:9","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":1728,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2698:12:9","nodeType":"FunctionDefinition","parameters":{"id":1724,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1719,"mutability":"mutable","name":"from","nameLocation":"2719:4:9","nodeType":"VariableDeclaration","scope":1728,"src":"2711:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1718,"name":"address","nodeType":"ElementaryTypeName","src":"2711:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1721,"mutability":"mutable","name":"to","nameLocation":"2733:2:9","nodeType":"VariableDeclaration","scope":1728,"src":"2725:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1720,"name":"address","nodeType":"ElementaryTypeName","src":"2725:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1723,"mutability":"mutable","name":"value","nameLocation":"2745:5:9","nodeType":"VariableDeclaration","scope":1728,"src":"2737:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1722,"name":"uint256","nodeType":"ElementaryTypeName","src":"2737:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2710:41:9"},"returnParameters":{"id":1727,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1726,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1728,"src":"2770:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1725,"name":"bool","nodeType":"ElementaryTypeName","src":"2770:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2769:6:9"},"scope":1729,"src":"2689:87:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1730,"src":"203:2575:9","usedErrors":[],"usedEvents":[1663,1672]}],"src":"106:2673:9"},"id":9},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[1729],"IERC20Metadata":[1755]},"id":1756,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1731,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"125:24:10"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":1733,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1756,"sourceUnit":1730,"src":"151:37:10","symbolAliases":[{"foreign":{"id":1732,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1729,"src":"159:6:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1735,"name":"IERC20","nameLocations":["305:6:10"],"nodeType":"IdentifierPath","referencedDeclaration":1729,"src":"305:6:10"},"id":1736,"nodeType":"InheritanceSpecifier","src":"305:6:10"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":1734,"nodeType":"StructuredDocumentation","src":"190:86:10","text":" @dev Interface for the optional metadata functions from the ERC20 standard."},"fullyImplemented":false,"id":1755,"linearizedBaseContracts":[1755,1729],"name":"IERC20Metadata","nameLocation":"287:14:10","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1737,"nodeType":"StructuredDocumentation","src":"318:54:10","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":1742,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"386:4:10","nodeType":"FunctionDefinition","parameters":{"id":1738,"nodeType":"ParameterList","parameters":[],"src":"390:2:10"},"returnParameters":{"id":1741,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1740,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1742,"src":"416:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1739,"name":"string","nodeType":"ElementaryTypeName","src":"416:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"415:15:10"},"scope":1755,"src":"377:54:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1743,"nodeType":"StructuredDocumentation","src":"437:56:10","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":1748,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"507:6:10","nodeType":"FunctionDefinition","parameters":{"id":1744,"nodeType":"ParameterList","parameters":[],"src":"513:2:10"},"returnParameters":{"id":1747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1746,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1748,"src":"539:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1745,"name":"string","nodeType":"ElementaryTypeName","src":"539:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"538:15:10"},"scope":1755,"src":"498:56:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1749,"nodeType":"StructuredDocumentation","src":"560:65:10","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":1754,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"639:8:10","nodeType":"FunctionDefinition","parameters":{"id":1750,"nodeType":"ParameterList","parameters":[],"src":"647:2:10"},"returnParameters":{"id":1753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1752,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1754,"src":"673:5:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1751,"name":"uint8","nodeType":"ElementaryTypeName","src":"673:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"672:7:10"},"scope":1755,"src":"630:50:10","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1756,"src":"277:405:10","usedErrors":[],"usedEvents":[1663,1672]}],"src":"125:558:10"},"id":10},"@openzeppelin/contracts/utils/Address.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[2008]},"id":2009,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1757,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:11"},{"abstract":false,"baseContracts":[],"canonicalName":"Address","contractDependencies":[],"contractKind":"library","documentation":{"id":1758,"nodeType":"StructuredDocumentation","src":"127:67:11","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":2008,"linearizedBaseContracts":[2008],"name":"Address","nameLocation":"203:7:11","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1759,"nodeType":"StructuredDocumentation","src":"217:94:11","text":" @dev The ETH balance of the account is not enough to perform the operation."},"errorSelector":"cd786059","id":1763,"name":"AddressInsufficientBalance","nameLocation":"322:26:11","nodeType":"ErrorDefinition","parameters":{"id":1762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1761,"mutability":"mutable","name":"account","nameLocation":"357:7:11","nodeType":"VariableDeclaration","scope":1763,"src":"349:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1760,"name":"address","nodeType":"ElementaryTypeName","src":"349:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"348:17:11"},"src":"316:50:11"},{"documentation":{"id":1764,"nodeType":"StructuredDocumentation","src":"372:75:11","text":" @dev There's no code at `target` (it is not a contract)."},"errorSelector":"9996b315","id":1768,"name":"AddressEmptyCode","nameLocation":"458:16:11","nodeType":"ErrorDefinition","parameters":{"id":1767,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1766,"mutability":"mutable","name":"target","nameLocation":"483:6:11","nodeType":"VariableDeclaration","scope":1768,"src":"475:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1765,"name":"address","nodeType":"ElementaryTypeName","src":"475:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"474:16:11"},"src":"452:39:11"},{"documentation":{"id":1769,"nodeType":"StructuredDocumentation","src":"497:89:11","text":" @dev A call to an address target failed. The target may have reverted."},"errorSelector":"1425ea42","id":1771,"name":"FailedInnerCall","nameLocation":"597:15:11","nodeType":"ErrorDefinition","parameters":{"id":1770,"nodeType":"ParameterList","parameters":[],"src":"612:2:11"},"src":"591:24:11"},{"body":{"id":1811,"nodeType":"Block","src":"1602:260:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1781,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1624:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$2008","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$2008","typeString":"library Address"}],"id":1780,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1616:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1779,"name":"address","nodeType":"ElementaryTypeName","src":"1616:7:11","typeDescriptions":{}}},"id":1782,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1616:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1630:7:11","memberName":"balance","nodeType":"MemberAccess","src":"1616:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1784,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1776,"src":"1640:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1616:30:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1794,"nodeType":"IfStatement","src":"1612:109:11","trueBody":{"id":1793,"nodeType":"Block","src":"1648:73:11","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":1789,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1704:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$2008","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$2008","typeString":"library Address"}],"id":1788,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1696:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1787,"name":"address","nodeType":"ElementaryTypeName","src":"1696:7:11","typeDescriptions":{}}},"id":1790,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1696:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1786,"name":"AddressInsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1763,"src":"1669:26:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1791,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1669:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1792,"nodeType":"RevertStatement","src":"1662:48:11"}]}},{"assignments":[1796,null],"declarations":[{"constant":false,"id":1796,"mutability":"mutable","name":"success","nameLocation":"1737:7:11","nodeType":"VariableDeclaration","scope":1811,"src":"1732:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1795,"name":"bool","nodeType":"ElementaryTypeName","src":"1732:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":1803,"initialValue":{"arguments":[{"hexValue":"","id":1801,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1780:2:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":1797,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1774,"src":"1750:9:11","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":1798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1760:4:11","memberName":"call","nodeType":"MemberAccess","src":"1750:14:11","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1799,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1776,"src":"1772:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"1750:29:11","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1802,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1750:33:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"1731:52:11"},{"condition":{"id":1805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1797:8:11","subExpression":{"id":1804,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1796,"src":"1798:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1810,"nodeType":"IfStatement","src":"1793:63:11","trueBody":{"id":1809,"nodeType":"Block","src":"1807:49:11","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1806,"name":"FailedInnerCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1771,"src":"1828:15:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1807,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1828:17:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1808,"nodeType":"RevertStatement","src":"1821:24:11"}]}}]},"documentation":{"id":1772,"nodeType":"StructuredDocumentation","src":"621:905:11","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":1812,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"1540:9:11","nodeType":"FunctionDefinition","parameters":{"id":1777,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1774,"mutability":"mutable","name":"recipient","nameLocation":"1566:9:11","nodeType":"VariableDeclaration","scope":1812,"src":"1550:25:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":1773,"name":"address","nodeType":"ElementaryTypeName","src":"1550:15:11","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":1776,"mutability":"mutable","name":"amount","nameLocation":"1585:6:11","nodeType":"VariableDeclaration","scope":1812,"src":"1577:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1775,"name":"uint256","nodeType":"ElementaryTypeName","src":"1577:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1549:43:11"},"returnParameters":{"id":1778,"nodeType":"ParameterList","parameters":[],"src":"1602:0:11"},"scope":2008,"src":"1531:331:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1828,"nodeType":"Block","src":"2794:62:11","statements":[{"expression":{"arguments":[{"id":1823,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1815,"src":"2833:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1824,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1817,"src":"2841:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":1825,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2847:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1822,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1875,"src":"2811:21:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256) returns (bytes memory)"}},"id":1826,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2811:38:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1821,"id":1827,"nodeType":"Return","src":"2804:45:11"}]},"documentation":{"id":1813,"nodeType":"StructuredDocumentation","src":"1868:832:11","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {FailedInnerCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."},"id":1829,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"2714:12:11","nodeType":"FunctionDefinition","parameters":{"id":1818,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1815,"mutability":"mutable","name":"target","nameLocation":"2735:6:11","nodeType":"VariableDeclaration","scope":1829,"src":"2727:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1814,"name":"address","nodeType":"ElementaryTypeName","src":"2727:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1817,"mutability":"mutable","name":"data","nameLocation":"2756:4:11","nodeType":"VariableDeclaration","scope":1829,"src":"2743:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1816,"name":"bytes","nodeType":"ElementaryTypeName","src":"2743:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2726:35:11"},"returnParameters":{"id":1821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1820,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1829,"src":"2780:12:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1819,"name":"bytes","nodeType":"ElementaryTypeName","src":"2780:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2779:14:11"},"scope":2008,"src":"2705:151:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1874,"nodeType":"Block","src":"3293:279:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1843,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3315:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$2008","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$2008","typeString":"library Address"}],"id":1842,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3307:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1841,"name":"address","nodeType":"ElementaryTypeName","src":"3307:7:11","typeDescriptions":{}}},"id":1844,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3307:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3321:7:11","memberName":"balance","nodeType":"MemberAccess","src":"3307:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1846,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1836,"src":"3331:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3307:29:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1856,"nodeType":"IfStatement","src":"3303:108:11","trueBody":{"id":1855,"nodeType":"Block","src":"3338:73:11","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":1851,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3394:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$2008","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$2008","typeString":"library Address"}],"id":1850,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3386:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1849,"name":"address","nodeType":"ElementaryTypeName","src":"3386:7:11","typeDescriptions":{}}},"id":1852,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3386:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1848,"name":"AddressInsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1763,"src":"3359:26:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1853,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3359:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1854,"nodeType":"RevertStatement","src":"3352:48:11"}]}},{"assignments":[1858,1860],"declarations":[{"constant":false,"id":1858,"mutability":"mutable","name":"success","nameLocation":"3426:7:11","nodeType":"VariableDeclaration","scope":1874,"src":"3421:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1857,"name":"bool","nodeType":"ElementaryTypeName","src":"3421:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1860,"mutability":"mutable","name":"returndata","nameLocation":"3448:10:11","nodeType":"VariableDeclaration","scope":1874,"src":"3435:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1859,"name":"bytes","nodeType":"ElementaryTypeName","src":"3435:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1867,"initialValue":{"arguments":[{"id":1865,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1834,"src":"3488:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1861,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1832,"src":"3462:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3469:4:11","memberName":"call","nodeType":"MemberAccess","src":"3462:11:11","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1863,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1836,"src":"3481:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"3462:25:11","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1866,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3462:31:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3420:73:11"},{"expression":{"arguments":[{"id":1869,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1832,"src":"3537:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1870,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1858,"src":"3545:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1871,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1860,"src":"3554:10:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1868,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1967,"src":"3510:26:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":1872,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3510:55:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1840,"id":1873,"nodeType":"Return","src":"3503:62:11"}]},"documentation":{"id":1830,"nodeType":"StructuredDocumentation","src":"2862:313:11","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."},"id":1875,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"3189:21:11","nodeType":"FunctionDefinition","parameters":{"id":1837,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1832,"mutability":"mutable","name":"target","nameLocation":"3219:6:11","nodeType":"VariableDeclaration","scope":1875,"src":"3211:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1831,"name":"address","nodeType":"ElementaryTypeName","src":"3211:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1834,"mutability":"mutable","name":"data","nameLocation":"3240:4:11","nodeType":"VariableDeclaration","scope":1875,"src":"3227:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1833,"name":"bytes","nodeType":"ElementaryTypeName","src":"3227:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1836,"mutability":"mutable","name":"value","nameLocation":"3254:5:11","nodeType":"VariableDeclaration","scope":1875,"src":"3246:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1835,"name":"uint256","nodeType":"ElementaryTypeName","src":"3246:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3210:50:11"},"returnParameters":{"id":1840,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1839,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1875,"src":"3279:12:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1838,"name":"bytes","nodeType":"ElementaryTypeName","src":"3279:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3278:14:11"},"scope":2008,"src":"3180:392:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1900,"nodeType":"Block","src":"3811:154:11","statements":[{"assignments":[1886,1888],"declarations":[{"constant":false,"id":1886,"mutability":"mutable","name":"success","nameLocation":"3827:7:11","nodeType":"VariableDeclaration","scope":1900,"src":"3822:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1885,"name":"bool","nodeType":"ElementaryTypeName","src":"3822:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1888,"mutability":"mutable","name":"returndata","nameLocation":"3849:10:11","nodeType":"VariableDeclaration","scope":1900,"src":"3836:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1887,"name":"bytes","nodeType":"ElementaryTypeName","src":"3836:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1893,"initialValue":{"arguments":[{"id":1891,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1880,"src":"3881:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1889,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1878,"src":"3863:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3870:10:11","memberName":"staticcall","nodeType":"MemberAccess","src":"3863:17:11","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":1892,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3863:23:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3821:65:11"},{"expression":{"arguments":[{"id":1895,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1878,"src":"3930:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1896,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1886,"src":"3938:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1897,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1888,"src":"3947:10:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1894,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1967,"src":"3903:26:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":1898,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3903:55:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1884,"id":1899,"nodeType":"Return","src":"3896:62:11"}]},"documentation":{"id":1876,"nodeType":"StructuredDocumentation","src":"3578:128:11","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."},"id":1901,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"3720:18:11","nodeType":"FunctionDefinition","parameters":{"id":1881,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1878,"mutability":"mutable","name":"target","nameLocation":"3747:6:11","nodeType":"VariableDeclaration","scope":1901,"src":"3739:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1877,"name":"address","nodeType":"ElementaryTypeName","src":"3739:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1880,"mutability":"mutable","name":"data","nameLocation":"3768:4:11","nodeType":"VariableDeclaration","scope":1901,"src":"3755:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1879,"name":"bytes","nodeType":"ElementaryTypeName","src":"3755:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3738:35:11"},"returnParameters":{"id":1884,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1883,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1901,"src":"3797:12:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1882,"name":"bytes","nodeType":"ElementaryTypeName","src":"3797:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3796:14:11"},"scope":2008,"src":"3711:254:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1926,"nodeType":"Block","src":"4203:156:11","statements":[{"assignments":[1912,1914],"declarations":[{"constant":false,"id":1912,"mutability":"mutable","name":"success","nameLocation":"4219:7:11","nodeType":"VariableDeclaration","scope":1926,"src":"4214:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1911,"name":"bool","nodeType":"ElementaryTypeName","src":"4214:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1914,"mutability":"mutable","name":"returndata","nameLocation":"4241:10:11","nodeType":"VariableDeclaration","scope":1926,"src":"4228:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1913,"name":"bytes","nodeType":"ElementaryTypeName","src":"4228:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1919,"initialValue":{"arguments":[{"id":1917,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1906,"src":"4275:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1915,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1904,"src":"4255:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4262:12:11","memberName":"delegatecall","nodeType":"MemberAccess","src":"4255:19:11","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":1918,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4255:25:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"4213:67:11"},{"expression":{"arguments":[{"id":1921,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1904,"src":"4324:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1922,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1912,"src":"4332:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1923,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1914,"src":"4341:10:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1920,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1967,"src":"4297:26:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":1924,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4297:55:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1910,"id":1925,"nodeType":"Return","src":"4290:62:11"}]},"documentation":{"id":1902,"nodeType":"StructuredDocumentation","src":"3971:130:11","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."},"id":1927,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"4115:20:11","nodeType":"FunctionDefinition","parameters":{"id":1907,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1904,"mutability":"mutable","name":"target","nameLocation":"4144:6:11","nodeType":"VariableDeclaration","scope":1927,"src":"4136:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1903,"name":"address","nodeType":"ElementaryTypeName","src":"4136:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1906,"mutability":"mutable","name":"data","nameLocation":"4165:4:11","nodeType":"VariableDeclaration","scope":1927,"src":"4152:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1905,"name":"bytes","nodeType":"ElementaryTypeName","src":"4152:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4135:35:11"},"returnParameters":{"id":1910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1909,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1927,"src":"4189:12:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1908,"name":"bytes","nodeType":"ElementaryTypeName","src":"4189:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4188:14:11"},"scope":2008,"src":"4106:253:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1966,"nodeType":"Block","src":"4783:424:11","statements":[{"condition":{"id":1940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4797:8:11","subExpression":{"id":1939,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1932,"src":"4798:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1964,"nodeType":"Block","src":"4857:344:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1946,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1934,"src":"5045:10:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5056:6:11","memberName":"length","nodeType":"MemberAccess","src":"5045:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1948,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5066:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5045:22:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1950,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1930,"src":"5071:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5078:4:11","memberName":"code","nodeType":"MemberAccess","src":"5071:11:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5083:6:11","memberName":"length","nodeType":"MemberAccess","src":"5071:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1953,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5093:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5071:23:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5045:49:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1961,"nodeType":"IfStatement","src":"5041:119:11","trueBody":{"id":1960,"nodeType":"Block","src":"5096:64:11","statements":[{"errorCall":{"arguments":[{"id":1957,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1930,"src":"5138:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1956,"name":"AddressEmptyCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1768,"src":"5121:16:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1958,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5121:24:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1959,"nodeType":"RevertStatement","src":"5114:31:11"}]}},{"expression":{"id":1962,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1934,"src":"5180:10:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1938,"id":1963,"nodeType":"Return","src":"5173:17:11"}]},"id":1965,"nodeType":"IfStatement","src":"4793:408:11","trueBody":{"id":1945,"nodeType":"Block","src":"4807:44:11","statements":[{"expression":{"arguments":[{"id":1942,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1934,"src":"4829:10:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1941,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2007,"src":"4821:7:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":1943,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4821:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1944,"nodeType":"ExpressionStatement","src":"4821:19:11"}]}}]},"documentation":{"id":1928,"nodeType":"StructuredDocumentation","src":"4365:255:11","text":" @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n unsuccessful call."},"id":1967,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"4634:26:11","nodeType":"FunctionDefinition","parameters":{"id":1935,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1930,"mutability":"mutable","name":"target","nameLocation":"4678:6:11","nodeType":"VariableDeclaration","scope":1967,"src":"4670:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1929,"name":"address","nodeType":"ElementaryTypeName","src":"4670:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1932,"mutability":"mutable","name":"success","nameLocation":"4699:7:11","nodeType":"VariableDeclaration","scope":1967,"src":"4694:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1931,"name":"bool","nodeType":"ElementaryTypeName","src":"4694:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1934,"mutability":"mutable","name":"returndata","nameLocation":"4729:10:11","nodeType":"VariableDeclaration","scope":1967,"src":"4716:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1933,"name":"bytes","nodeType":"ElementaryTypeName","src":"4716:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4660:85:11"},"returnParameters":{"id":1938,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1937,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1967,"src":"4769:12:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1936,"name":"bytes","nodeType":"ElementaryTypeName","src":"4769:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4768:14:11"},"scope":2008,"src":"4625:582:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1988,"nodeType":"Block","src":"5509:122:11","statements":[{"condition":{"id":1978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5523:8:11","subExpression":{"id":1977,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1970,"src":"5524:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1986,"nodeType":"Block","src":"5583:42:11","statements":[{"expression":{"id":1984,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1972,"src":"5604:10:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1976,"id":1985,"nodeType":"Return","src":"5597:17:11"}]},"id":1987,"nodeType":"IfStatement","src":"5519:106:11","trueBody":{"id":1983,"nodeType":"Block","src":"5533:44:11","statements":[{"expression":{"arguments":[{"id":1980,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1972,"src":"5555:10:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1979,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2007,"src":"5547:7:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":1981,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5547:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1982,"nodeType":"ExpressionStatement","src":"5547:19:11"}]}}]},"documentation":{"id":1968,"nodeType":"StructuredDocumentation","src":"5213:189:11","text":" @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {FailedInnerCall} error."},"id":1989,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"5416:16:11","nodeType":"FunctionDefinition","parameters":{"id":1973,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1970,"mutability":"mutable","name":"success","nameLocation":"5438:7:11","nodeType":"VariableDeclaration","scope":1989,"src":"5433:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1969,"name":"bool","nodeType":"ElementaryTypeName","src":"5433:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1972,"mutability":"mutable","name":"returndata","nameLocation":"5460:10:11","nodeType":"VariableDeclaration","scope":1989,"src":"5447:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1971,"name":"bytes","nodeType":"ElementaryTypeName","src":"5447:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5432:39:11"},"returnParameters":{"id":1976,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1975,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1989,"src":"5495:12:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1974,"name":"bytes","nodeType":"ElementaryTypeName","src":"5495:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5494:14:11"},"scope":2008,"src":"5407:224:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2006,"nodeType":"Block","src":"5798:461:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1995,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1992,"src":"5874:10:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5885:6:11","memberName":"length","nodeType":"MemberAccess","src":"5874:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1997,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5894:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5874:21:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2004,"nodeType":"Block","src":"6204:49:11","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2001,"name":"FailedInnerCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1771,"src":"6225:15:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2002,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6225:17:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2003,"nodeType":"RevertStatement","src":"6218:24:11"}]},"id":2005,"nodeType":"IfStatement","src":"5870:383:11","trueBody":{"id":2000,"nodeType":"Block","src":"5897:301:11","statements":[{"AST":{"nativeSrc":"6055:133:11","nodeType":"YulBlock","src":"6055:133:11","statements":[{"nativeSrc":"6073:40:11","nodeType":"YulVariableDeclaration","src":"6073:40:11","value":{"arguments":[{"name":"returndata","nativeSrc":"6102:10:11","nodeType":"YulIdentifier","src":"6102:10:11"}],"functionName":{"name":"mload","nativeSrc":"6096:5:11","nodeType":"YulIdentifier","src":"6096:5:11"},"nativeSrc":"6096:17:11","nodeType":"YulFunctionCall","src":"6096:17:11"},"variables":[{"name":"returndata_size","nativeSrc":"6077:15:11","nodeType":"YulTypedName","src":"6077:15:11","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"6141:2:11","nodeType":"YulLiteral","src":"6141:2:11","type":"","value":"32"},{"name":"returndata","nativeSrc":"6145:10:11","nodeType":"YulIdentifier","src":"6145:10:11"}],"functionName":{"name":"add","nativeSrc":"6137:3:11","nodeType":"YulIdentifier","src":"6137:3:11"},"nativeSrc":"6137:19:11","nodeType":"YulFunctionCall","src":"6137:19:11"},{"name":"returndata_size","nativeSrc":"6158:15:11","nodeType":"YulIdentifier","src":"6158:15:11"}],"functionName":{"name":"revert","nativeSrc":"6130:6:11","nodeType":"YulIdentifier","src":"6130:6:11"},"nativeSrc":"6130:44:11","nodeType":"YulFunctionCall","src":"6130:44:11"},"nativeSrc":"6130:44:11","nodeType":"YulExpressionStatement","src":"6130:44:11"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"cancun","externalReferences":[{"declaration":1992,"isOffset":false,"isSlot":false,"src":"6102:10:11","valueSize":1},{"declaration":1992,"isOffset":false,"isSlot":false,"src":"6145:10:11","valueSize":1}],"id":1999,"nodeType":"InlineAssembly","src":"6046:142:11"}]}}]},"documentation":{"id":1990,"nodeType":"StructuredDocumentation","src":"5637:101:11","text":" @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}."},"id":2007,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"5752:7:11","nodeType":"FunctionDefinition","parameters":{"id":1993,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1992,"mutability":"mutable","name":"returndata","nameLocation":"5773:10:11","nodeType":"VariableDeclaration","scope":2007,"src":"5760:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1991,"name":"bytes","nodeType":"ElementaryTypeName","src":"5760:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5759:25:11"},"returnParameters":{"id":1994,"nodeType":"ParameterList","parameters":[],"src":"5798:0:11"},"scope":2008,"src":"5743:516:11","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":2009,"src":"195:6066:11","usedErrors":[1763,1768,1771],"usedEvents":[]}],"src":"101:6161:11"},"id":11},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[2038]},"id":2039,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2010,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:12"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":2011,"nodeType":"StructuredDocumentation","src":"127:496:12","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":2038,"linearizedBaseContracts":[2038],"name":"Context","nameLocation":"642:7:12","nodeType":"ContractDefinition","nodes":[{"body":{"id":2019,"nodeType":"Block","src":"718:34:12","statements":[{"expression":{"expression":{"id":2016,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:12","memberName":"sender","nodeType":"MemberAccess","src":"735:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2015,"id":2018,"nodeType":"Return","src":"728:17:12"}]},"id":2020,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:12","nodeType":"FunctionDefinition","parameters":{"id":2012,"nodeType":"ParameterList","parameters":[],"src":"675:2:12"},"returnParameters":{"id":2015,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2014,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2020,"src":"709:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2013,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:12"},"scope":2038,"src":"656:96:12","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2028,"nodeType":"Block","src":"825:32:12","statements":[{"expression":{"expression":{"id":2025,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:12","memberName":"data","nodeType":"MemberAccess","src":"842:8:12","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":2024,"id":2027,"nodeType":"Return","src":"835:15:12"}]},"id":2029,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:12","nodeType":"FunctionDefinition","parameters":{"id":2021,"nodeType":"ParameterList","parameters":[],"src":"775:2:12"},"returnParameters":{"id":2024,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2023,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2029,"src":"809:14:12","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2022,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:12"},"scope":2038,"src":"758:99:12","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2036,"nodeType":"Block","src":"935:25:12","statements":[{"expression":{"hexValue":"30","id":2034,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2033,"id":2035,"nodeType":"Return","src":"945:8:12"}]},"id":2037,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:12","nodeType":"FunctionDefinition","parameters":{"id":2030,"nodeType":"ParameterList","parameters":[],"src":"892:2:12"},"returnParameters":{"id":2033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2032,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2037,"src":"926:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2031,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:12"},"scope":2038,"src":"863:97:12","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":2039,"src":"624:338:12","usedErrors":[],"usedEvents":[]}],"src":"101:862:12"},"id":12},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","exportedSymbols":{"ReentrancyGuard":[2107]},"id":2108,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2040,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:13"},{"abstract":true,"baseContracts":[],"canonicalName":"ReentrancyGuard","contractDependencies":[],"contractKind":"contract","documentation":{"id":2041,"nodeType":"StructuredDocumentation","src":"135:750:13","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"id":2107,"linearizedBaseContracts":[2107],"name":"ReentrancyGuard","nameLocation":"904:15:13","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":2044,"mutability":"constant","name":"NOT_ENTERED","nameLocation":"1699:11:13","nodeType":"VariableDeclaration","scope":2107,"src":"1674:40:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2042,"name":"uint256","nodeType":"ElementaryTypeName","src":"1674:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":2043,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1713:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":2047,"mutability":"constant","name":"ENTERED","nameLocation":"1745:7:13","nodeType":"VariableDeclaration","scope":2107,"src":"1720:36:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2045,"name":"uint256","nodeType":"ElementaryTypeName","src":"1720:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":2046,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1755:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":false,"id":2049,"mutability":"mutable","name":"_status","nameLocation":"1779:7:13","nodeType":"VariableDeclaration","scope":2107,"src":"1763:23:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2048,"name":"uint256","nodeType":"ElementaryTypeName","src":"1763:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"documentation":{"id":2050,"nodeType":"StructuredDocumentation","src":"1793:52:13","text":" @dev Unauthorized reentrant call."},"errorSelector":"3ee5aeb5","id":2052,"name":"ReentrancyGuardReentrantCall","nameLocation":"1856:28:13","nodeType":"ErrorDefinition","parameters":{"id":2051,"nodeType":"ParameterList","parameters":[],"src":"1884:2:13"},"src":"1850:37:13"},{"body":{"id":2059,"nodeType":"Block","src":"1907:38:13","statements":[{"expression":{"id":2057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2055,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2049,"src":"1917:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2056,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2044,"src":"1927:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1917:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2058,"nodeType":"ExpressionStatement","src":"1917:21:13"}]},"id":2060,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2053,"nodeType":"ParameterList","parameters":[],"src":"1904:2:13"},"returnParameters":{"id":2054,"nodeType":"ParameterList","parameters":[],"src":"1907:0:13"},"scope":2107,"src":"1893:52:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2070,"nodeType":"Block","src":"2346:79:13","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2063,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2087,"src":"2356:19:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2064,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2356:21:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2065,"nodeType":"ExpressionStatement","src":"2356:21:13"},{"id":2066,"nodeType":"PlaceholderStatement","src":"2387:1:13"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2067,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2095,"src":"2398:18:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2068,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2398:20:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2069,"nodeType":"ExpressionStatement","src":"2398:20:13"}]},"documentation":{"id":2061,"nodeType":"StructuredDocumentation","src":"1951:366:13","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"id":2071,"name":"nonReentrant","nameLocation":"2331:12:13","nodeType":"ModifierDefinition","parameters":{"id":2062,"nodeType":"ParameterList","parameters":[],"src":"2343:2:13"},"src":"2322:103:13","virtual":false,"visibility":"internal"},{"body":{"id":2086,"nodeType":"Block","src":"2470:268:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2074,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2049,"src":"2558:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2075,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2047,"src":"2569:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2558:18:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2081,"nodeType":"IfStatement","src":"2554:86:13","trueBody":{"id":2080,"nodeType":"Block","src":"2578:62:13","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2077,"name":"ReentrancyGuardReentrantCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2052,"src":"2599:28:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2078,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2599:30:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2079,"nodeType":"RevertStatement","src":"2592:37:13"}]}},{"expression":{"id":2084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2082,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2049,"src":"2714:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2083,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2047,"src":"2724:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2714:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2085,"nodeType":"ExpressionStatement","src":"2714:17:13"}]},"id":2087,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"2440:19:13","nodeType":"FunctionDefinition","parameters":{"id":2072,"nodeType":"ParameterList","parameters":[],"src":"2459:2:13"},"returnParameters":{"id":2073,"nodeType":"ParameterList","parameters":[],"src":"2470:0:13"},"scope":2107,"src":"2431:307:13","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2094,"nodeType":"Block","src":"2782:170:13","statements":[{"expression":{"id":2092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2090,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2049,"src":"2924:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2091,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2044,"src":"2934:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2924:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2093,"nodeType":"ExpressionStatement","src":"2924:21:13"}]},"id":2095,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"2753:18:13","nodeType":"FunctionDefinition","parameters":{"id":2088,"nodeType":"ParameterList","parameters":[],"src":"2771:2:13"},"returnParameters":{"id":2089,"nodeType":"ParameterList","parameters":[],"src":"2782:0:13"},"scope":2107,"src":"2744:208:13","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2105,"nodeType":"Block","src":"3195:42:13","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2101,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2049,"src":"3212:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2102,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2047,"src":"3223:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3212:18:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2100,"id":2104,"nodeType":"Return","src":"3205:25:13"}]},"documentation":{"id":2096,"nodeType":"StructuredDocumentation","src":"2958:168:13","text":" @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."},"id":2106,"implemented":true,"kind":"function","modifiers":[],"name":"_reentrancyGuardEntered","nameLocation":"3140:23:13","nodeType":"FunctionDefinition","parameters":{"id":2097,"nodeType":"ParameterList","parameters":[],"src":"3163:2:13"},"returnParameters":{"id":2100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2099,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2106,"src":"3189:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2098,"name":"bool","nodeType":"ElementaryTypeName","src":"3189:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3188:6:13"},"scope":2107,"src":"3131:106:13","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":2108,"src":"886:2353:13","usedErrors":[2052],"usedEvents":[]}],"src":"109:3131:13"},"id":13},"@openzeppelin/contracts/utils/StorageSlot.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","exportedSymbols":{"StorageSlot":[2217]},"id":2218,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2109,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"193:24:14"},{"abstract":false,"baseContracts":[],"canonicalName":"StorageSlot","contractDependencies":[],"contractKind":"library","documentation":{"id":2110,"nodeType":"StructuredDocumentation","src":"219:1025:14","text":" @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```"},"fullyImplemented":true,"id":2217,"linearizedBaseContracts":[2217],"name":"StorageSlot","nameLocation":"1253:11:14","nodeType":"ContractDefinition","nodes":[{"canonicalName":"StorageSlot.AddressSlot","id":2113,"members":[{"constant":false,"id":2112,"mutability":"mutable","name":"value","nameLocation":"1308:5:14","nodeType":"VariableDeclaration","scope":2113,"src":"1300:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2111,"name":"address","nodeType":"ElementaryTypeName","src":"1300:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"AddressSlot","nameLocation":"1278:11:14","nodeType":"StructDefinition","scope":2217,"src":"1271:49:14","visibility":"public"},{"canonicalName":"StorageSlot.BooleanSlot","id":2116,"members":[{"constant":false,"id":2115,"mutability":"mutable","name":"value","nameLocation":"1360:5:14","nodeType":"VariableDeclaration","scope":2116,"src":"1355:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2114,"name":"bool","nodeType":"ElementaryTypeName","src":"1355:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"BooleanSlot","nameLocation":"1333:11:14","nodeType":"StructDefinition","scope":2217,"src":"1326:46:14","visibility":"public"},{"canonicalName":"StorageSlot.Bytes32Slot","id":2119,"members":[{"constant":false,"id":2118,"mutability":"mutable","name":"value","nameLocation":"1415:5:14","nodeType":"VariableDeclaration","scope":2119,"src":"1407:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2117,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1407:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Bytes32Slot","nameLocation":"1385:11:14","nodeType":"StructDefinition","scope":2217,"src":"1378:49:14","visibility":"public"},{"canonicalName":"StorageSlot.Uint256Slot","id":2122,"members":[{"constant":false,"id":2121,"mutability":"mutable","name":"value","nameLocation":"1470:5:14","nodeType":"VariableDeclaration","scope":2122,"src":"1462:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2120,"name":"uint256","nodeType":"ElementaryTypeName","src":"1462:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Uint256Slot","nameLocation":"1440:11:14","nodeType":"StructDefinition","scope":2217,"src":"1433:49:14","visibility":"public"},{"canonicalName":"StorageSlot.StringSlot","id":2125,"members":[{"constant":false,"id":2124,"mutability":"mutable","name":"value","nameLocation":"1523:5:14","nodeType":"VariableDeclaration","scope":2125,"src":"1516:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2123,"name":"string","nodeType":"ElementaryTypeName","src":"1516:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"StringSlot","nameLocation":"1495:10:14","nodeType":"StructDefinition","scope":2217,"src":"1488:47:14","visibility":"public"},{"canonicalName":"StorageSlot.BytesSlot","id":2128,"members":[{"constant":false,"id":2127,"mutability":"mutable","name":"value","nameLocation":"1574:5:14","nodeType":"VariableDeclaration","scope":2128,"src":"1568:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":2126,"name":"bytes","nodeType":"ElementaryTypeName","src":"1568:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"BytesSlot","nameLocation":"1548:9:14","nodeType":"StructDefinition","scope":2217,"src":"1541:45:14","visibility":"public"},{"body":{"id":2138,"nodeType":"Block","src":"1768:106:14","statements":[{"AST":{"nativeSrc":"1830:38:14","nodeType":"YulBlock","src":"1830:38:14","statements":[{"nativeSrc":"1844:14:14","nodeType":"YulAssignment","src":"1844:14:14","value":{"name":"slot","nativeSrc":"1854:4:14","nodeType":"YulIdentifier","src":"1854:4:14"},"variableNames":[{"name":"r.slot","nativeSrc":"1844:6:14","nodeType":"YulIdentifier","src":"1844:6:14"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"cancun","externalReferences":[{"declaration":2135,"isOffset":false,"isSlot":true,"src":"1844:6:14","suffix":"slot","valueSize":1},{"declaration":2131,"isOffset":false,"isSlot":false,"src":"1854:4:14","valueSize":1}],"id":2137,"nodeType":"InlineAssembly","src":"1821:47:14"}]},"documentation":{"id":2129,"nodeType":"StructuredDocumentation","src":"1592:87:14","text":" @dev Returns an `AddressSlot` with member `value` located at `slot`."},"id":2139,"implemented":true,"kind":"function","modifiers":[],"name":"getAddressSlot","nameLocation":"1693:14:14","nodeType":"FunctionDefinition","parameters":{"id":2132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2131,"mutability":"mutable","name":"slot","nameLocation":"1716:4:14","nodeType":"VariableDeclaration","scope":2139,"src":"1708:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2130,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1708:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1707:14:14"},"returnParameters":{"id":2136,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2135,"mutability":"mutable","name":"r","nameLocation":"1765:1:14","nodeType":"VariableDeclaration","scope":2139,"src":"1745:21:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2113_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":2134,"nodeType":"UserDefinedTypeName","pathNode":{"id":2133,"name":"AddressSlot","nameLocations":["1745:11:14"],"nodeType":"IdentifierPath","referencedDeclaration":2113,"src":"1745:11:14"},"referencedDeclaration":2113,"src":"1745:11:14","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2113_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"1744:23:14"},"scope":2217,"src":"1684:190:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2149,"nodeType":"Block","src":"2056:106:14","statements":[{"AST":{"nativeSrc":"2118:38:14","nodeType":"YulBlock","src":"2118:38:14","statements":[{"nativeSrc":"2132:14:14","nodeType":"YulAssignment","src":"2132:14:14","value":{"name":"slot","nativeSrc":"2142:4:14","nodeType":"YulIdentifier","src":"2142:4:14"},"variableNames":[{"name":"r.slot","nativeSrc":"2132:6:14","nodeType":"YulIdentifier","src":"2132:6:14"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"cancun","externalReferences":[{"declaration":2146,"isOffset":false,"isSlot":true,"src":"2132:6:14","suffix":"slot","valueSize":1},{"declaration":2142,"isOffset":false,"isSlot":false,"src":"2142:4:14","valueSize":1}],"id":2148,"nodeType":"InlineAssembly","src":"2109:47:14"}]},"documentation":{"id":2140,"nodeType":"StructuredDocumentation","src":"1880:87:14","text":" @dev Returns an `BooleanSlot` with member `value` located at `slot`."},"id":2150,"implemented":true,"kind":"function","modifiers":[],"name":"getBooleanSlot","nameLocation":"1981:14:14","nodeType":"FunctionDefinition","parameters":{"id":2143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2142,"mutability":"mutable","name":"slot","nameLocation":"2004:4:14","nodeType":"VariableDeclaration","scope":2150,"src":"1996:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2141,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1996:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1995:14:14"},"returnParameters":{"id":2147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2146,"mutability":"mutable","name":"r","nameLocation":"2053:1:14","nodeType":"VariableDeclaration","scope":2150,"src":"2033:21:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$2116_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"},"typeName":{"id":2145,"nodeType":"UserDefinedTypeName","pathNode":{"id":2144,"name":"BooleanSlot","nameLocations":["2033:11:14"],"nodeType":"IdentifierPath","referencedDeclaration":2116,"src":"2033:11:14"},"referencedDeclaration":2116,"src":"2033:11:14","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$2116_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"}},"visibility":"internal"}],"src":"2032:23:14"},"scope":2217,"src":"1972:190:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2160,"nodeType":"Block","src":"2344:106:14","statements":[{"AST":{"nativeSrc":"2406:38:14","nodeType":"YulBlock","src":"2406:38:14","statements":[{"nativeSrc":"2420:14:14","nodeType":"YulAssignment","src":"2420:14:14","value":{"name":"slot","nativeSrc":"2430:4:14","nodeType":"YulIdentifier","src":"2430:4:14"},"variableNames":[{"name":"r.slot","nativeSrc":"2420:6:14","nodeType":"YulIdentifier","src":"2420:6:14"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"cancun","externalReferences":[{"declaration":2157,"isOffset":false,"isSlot":true,"src":"2420:6:14","suffix":"slot","valueSize":1},{"declaration":2153,"isOffset":false,"isSlot":false,"src":"2430:4:14","valueSize":1}],"id":2159,"nodeType":"InlineAssembly","src":"2397:47:14"}]},"documentation":{"id":2151,"nodeType":"StructuredDocumentation","src":"2168:87:14","text":" @dev Returns an `Bytes32Slot` with member `value` located at `slot`."},"id":2161,"implemented":true,"kind":"function","modifiers":[],"name":"getBytes32Slot","nameLocation":"2269:14:14","nodeType":"FunctionDefinition","parameters":{"id":2154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2153,"mutability":"mutable","name":"slot","nameLocation":"2292:4:14","nodeType":"VariableDeclaration","scope":2161,"src":"2284:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2152,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2284:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2283:14:14"},"returnParameters":{"id":2158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2157,"mutability":"mutable","name":"r","nameLocation":"2341:1:14","nodeType":"VariableDeclaration","scope":2161,"src":"2321:21:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$2119_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":2156,"nodeType":"UserDefinedTypeName","pathNode":{"id":2155,"name":"Bytes32Slot","nameLocations":["2321:11:14"],"nodeType":"IdentifierPath","referencedDeclaration":2119,"src":"2321:11:14"},"referencedDeclaration":2119,"src":"2321:11:14","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$2119_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"2320:23:14"},"scope":2217,"src":"2260:190:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2171,"nodeType":"Block","src":"2632:106:14","statements":[{"AST":{"nativeSrc":"2694:38:14","nodeType":"YulBlock","src":"2694:38:14","statements":[{"nativeSrc":"2708:14:14","nodeType":"YulAssignment","src":"2708:14:14","value":{"name":"slot","nativeSrc":"2718:4:14","nodeType":"YulIdentifier","src":"2718:4:14"},"variableNames":[{"name":"r.slot","nativeSrc":"2708:6:14","nodeType":"YulIdentifier","src":"2708:6:14"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"cancun","externalReferences":[{"declaration":2168,"isOffset":false,"isSlot":true,"src":"2708:6:14","suffix":"slot","valueSize":1},{"declaration":2164,"isOffset":false,"isSlot":false,"src":"2718:4:14","valueSize":1}],"id":2170,"nodeType":"InlineAssembly","src":"2685:47:14"}]},"documentation":{"id":2162,"nodeType":"StructuredDocumentation","src":"2456:87:14","text":" @dev Returns an `Uint256Slot` with member `value` located at `slot`."},"id":2172,"implemented":true,"kind":"function","modifiers":[],"name":"getUint256Slot","nameLocation":"2557:14:14","nodeType":"FunctionDefinition","parameters":{"id":2165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2164,"mutability":"mutable","name":"slot","nameLocation":"2580:4:14","nodeType":"VariableDeclaration","scope":2172,"src":"2572:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2163,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2572:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2571:14:14"},"returnParameters":{"id":2169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2168,"mutability":"mutable","name":"r","nameLocation":"2629:1:14","nodeType":"VariableDeclaration","scope":2172,"src":"2609:21:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$2122_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":2167,"nodeType":"UserDefinedTypeName","pathNode":{"id":2166,"name":"Uint256Slot","nameLocations":["2609:11:14"],"nodeType":"IdentifierPath","referencedDeclaration":2122,"src":"2609:11:14"},"referencedDeclaration":2122,"src":"2609:11:14","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$2122_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"2608:23:14"},"scope":2217,"src":"2548:190:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2182,"nodeType":"Block","src":"2917:106:14","statements":[{"AST":{"nativeSrc":"2979:38:14","nodeType":"YulBlock","src":"2979:38:14","statements":[{"nativeSrc":"2993:14:14","nodeType":"YulAssignment","src":"2993:14:14","value":{"name":"slot","nativeSrc":"3003:4:14","nodeType":"YulIdentifier","src":"3003:4:14"},"variableNames":[{"name":"r.slot","nativeSrc":"2993:6:14","nodeType":"YulIdentifier","src":"2993:6:14"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"cancun","externalReferences":[{"declaration":2179,"isOffset":false,"isSlot":true,"src":"2993:6:14","suffix":"slot","valueSize":1},{"declaration":2175,"isOffset":false,"isSlot":false,"src":"3003:4:14","valueSize":1}],"id":2181,"nodeType":"InlineAssembly","src":"2970:47:14"}]},"documentation":{"id":2173,"nodeType":"StructuredDocumentation","src":"2744:86:14","text":" @dev Returns an `StringSlot` with member `value` located at `slot`."},"id":2183,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"2844:13:14","nodeType":"FunctionDefinition","parameters":{"id":2176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2175,"mutability":"mutable","name":"slot","nameLocation":"2866:4:14","nodeType":"VariableDeclaration","scope":2183,"src":"2858:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2174,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2858:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2857:14:14"},"returnParameters":{"id":2180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2179,"mutability":"mutable","name":"r","nameLocation":"2914:1:14","nodeType":"VariableDeclaration","scope":2183,"src":"2895:20:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2125_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":2178,"nodeType":"UserDefinedTypeName","pathNode":{"id":2177,"name":"StringSlot","nameLocations":["2895:10:14"],"nodeType":"IdentifierPath","referencedDeclaration":2125,"src":"2895:10:14"},"referencedDeclaration":2125,"src":"2895:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2125_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"2894:22:14"},"scope":2217,"src":"2835:188:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2193,"nodeType":"Block","src":"3225:112:14","statements":[{"AST":{"nativeSrc":"3287:44:14","nodeType":"YulBlock","src":"3287:44:14","statements":[{"nativeSrc":"3301:20:14","nodeType":"YulAssignment","src":"3301:20:14","value":{"name":"store.slot","nativeSrc":"3311:10:14","nodeType":"YulIdentifier","src":"3311:10:14"},"variableNames":[{"name":"r.slot","nativeSrc":"3301:6:14","nodeType":"YulIdentifier","src":"3301:6:14"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"cancun","externalReferences":[{"declaration":2190,"isOffset":false,"isSlot":true,"src":"3301:6:14","suffix":"slot","valueSize":1},{"declaration":2186,"isOffset":false,"isSlot":true,"src":"3311:10:14","suffix":"slot","valueSize":1}],"id":2192,"nodeType":"InlineAssembly","src":"3278:53:14"}]},"documentation":{"id":2184,"nodeType":"StructuredDocumentation","src":"3029:101:14","text":" @dev Returns an `StringSlot` representation of the string storage pointer `store`."},"id":2194,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3144:13:14","nodeType":"FunctionDefinition","parameters":{"id":2187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2186,"mutability":"mutable","name":"store","nameLocation":"3173:5:14","nodeType":"VariableDeclaration","scope":2194,"src":"3158:20:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2185,"name":"string","nodeType":"ElementaryTypeName","src":"3158:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3157:22:14"},"returnParameters":{"id":2191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2190,"mutability":"mutable","name":"r","nameLocation":"3222:1:14","nodeType":"VariableDeclaration","scope":2194,"src":"3203:20:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2125_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":2189,"nodeType":"UserDefinedTypeName","pathNode":{"id":2188,"name":"StringSlot","nameLocations":["3203:10:14"],"nodeType":"IdentifierPath","referencedDeclaration":2125,"src":"3203:10:14"},"referencedDeclaration":2125,"src":"3203:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2125_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3202:22:14"},"scope":2217,"src":"3135:202:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2204,"nodeType":"Block","src":"3513:106:14","statements":[{"AST":{"nativeSrc":"3575:38:14","nodeType":"YulBlock","src":"3575:38:14","statements":[{"nativeSrc":"3589:14:14","nodeType":"YulAssignment","src":"3589:14:14","value":{"name":"slot","nativeSrc":"3599:4:14","nodeType":"YulIdentifier","src":"3599:4:14"},"variableNames":[{"name":"r.slot","nativeSrc":"3589:6:14","nodeType":"YulIdentifier","src":"3589:6:14"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"cancun","externalReferences":[{"declaration":2201,"isOffset":false,"isSlot":true,"src":"3589:6:14","suffix":"slot","valueSize":1},{"declaration":2197,"isOffset":false,"isSlot":false,"src":"3599:4:14","valueSize":1}],"id":2203,"nodeType":"InlineAssembly","src":"3566:47:14"}]},"documentation":{"id":2195,"nodeType":"StructuredDocumentation","src":"3343:85:14","text":" @dev Returns an `BytesSlot` with member `value` located at `slot`."},"id":2205,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3442:12:14","nodeType":"FunctionDefinition","parameters":{"id":2198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2197,"mutability":"mutable","name":"slot","nameLocation":"3463:4:14","nodeType":"VariableDeclaration","scope":2205,"src":"3455:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2196,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3455:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3454:14:14"},"returnParameters":{"id":2202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2201,"mutability":"mutable","name":"r","nameLocation":"3510:1:14","nodeType":"VariableDeclaration","scope":2205,"src":"3492:19:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2128_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":2200,"nodeType":"UserDefinedTypeName","pathNode":{"id":2199,"name":"BytesSlot","nameLocations":["3492:9:14"],"nodeType":"IdentifierPath","referencedDeclaration":2128,"src":"3492:9:14"},"referencedDeclaration":2128,"src":"3492:9:14","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2128_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3491:21:14"},"scope":2217,"src":"3433:186:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2215,"nodeType":"Block","src":"3816:112:14","statements":[{"AST":{"nativeSrc":"3878:44:14","nodeType":"YulBlock","src":"3878:44:14","statements":[{"nativeSrc":"3892:20:14","nodeType":"YulAssignment","src":"3892:20:14","value":{"name":"store.slot","nativeSrc":"3902:10:14","nodeType":"YulIdentifier","src":"3902:10:14"},"variableNames":[{"name":"r.slot","nativeSrc":"3892:6:14","nodeType":"YulIdentifier","src":"3892:6:14"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"cancun","externalReferences":[{"declaration":2212,"isOffset":false,"isSlot":true,"src":"3892:6:14","suffix":"slot","valueSize":1},{"declaration":2208,"isOffset":false,"isSlot":true,"src":"3902:10:14","suffix":"slot","valueSize":1}],"id":2214,"nodeType":"InlineAssembly","src":"3869:53:14"}]},"documentation":{"id":2206,"nodeType":"StructuredDocumentation","src":"3625:99:14","text":" @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."},"id":2216,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3738:12:14","nodeType":"FunctionDefinition","parameters":{"id":2209,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2208,"mutability":"mutable","name":"store","nameLocation":"3765:5:14","nodeType":"VariableDeclaration","scope":2216,"src":"3751:19:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":2207,"name":"bytes","nodeType":"ElementaryTypeName","src":"3751:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3750:21:14"},"returnParameters":{"id":2213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2212,"mutability":"mutable","name":"r","nameLocation":"3813:1:14","nodeType":"VariableDeclaration","scope":2216,"src":"3795:19:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2128_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":2211,"nodeType":"UserDefinedTypeName","pathNode":{"id":2210,"name":"BytesSlot","nameLocations":["3795:9:14"],"nodeType":"IdentifierPath","referencedDeclaration":2128,"src":"3795:9:14"},"referencedDeclaration":2128,"src":"3795:9:14","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2128_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3794:21:14"},"scope":2217,"src":"3729:199:14","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2218,"src":"1245:2685:14","usedErrors":[],"usedEvents":[]}],"src":"193:3738:14"},"id":14},"contracts/BaluniV1Pool.sol":{"ast":{"absolutePath":"contracts/BaluniV1Pool.sol","exportedSymbols":{"BaluniV1Pool":[4118],"Context":[2038],"ERC20":[1651],"IBaluniV1PoolPeriphery":[5638],"IBaluniV1Rebalancer":[5766],"IBaluniV1Router":[5800],"IERC20":[1729],"IERC20Errors":[728],"IERC20Metadata":[1755],"ReentrancyGuard":[2107]},"id":4119,"license":"GNU AGPLv3","nodeType":"SourceUnit","nodes":[{"id":2219,"literals":["solidity","0.8",".25"],"nodeType":"PragmaDirective","src":"40:23:15"},{"absolutePath":"contracts/interfaces/IBaluniV1Rebalancer.sol","file":"./interfaces/IBaluniV1Rebalancer.sol","id":2220,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4119,"sourceUnit":5767,"src":"1466:46:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IBaluniV1Router.sol","file":"./interfaces/IBaluniV1Router.sol","id":2221,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4119,"sourceUnit":5801,"src":"1514:42:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IBaluniV1PoolPeriphery.sol","file":"./interfaces/IBaluniV1PoolPeriphery.sol","id":2222,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4119,"sourceUnit":5639,"src":"1558:49:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":2223,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4119,"sourceUnit":1652,"src":"1609:55:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","file":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","id":2224,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4119,"sourceUnit":2108,"src":"1666:59:15","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2225,"name":"ERC20","nameLocations":["1754:5:15"],"nodeType":"IdentifierPath","referencedDeclaration":1651,"src":"1754:5:15"},"id":2226,"nodeType":"InheritanceSpecifier","src":"1754:5:15"},{"baseName":{"id":2227,"name":"ReentrancyGuard","nameLocations":["1761:15:15"],"nodeType":"IdentifierPath","referencedDeclaration":2107,"src":"1761:15:15"},"id":2228,"nodeType":"InheritanceSpecifier","src":"1761:15:15"}],"canonicalName":"BaluniV1Pool","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":4118,"linearizedBaseContracts":[4118,2107,1651,728,1755,1729,2038],"name":"BaluniV1Pool","nameLocation":"1738:12:15","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"01d22ccd","id":2231,"mutability":"mutable","name":"rebalancer","nameLocation":"1809:10:15","nodeType":"VariableDeclaration","scope":4118,"src":"1782:37:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Rebalancer_$5766","typeString":"contract IBaluniV1Rebalancer"},"typeName":{"id":2230,"nodeType":"UserDefinedTypeName","pathNode":{"id":2229,"name":"IBaluniV1Rebalancer","nameLocations":["1782:19:15"],"nodeType":"IdentifierPath","referencedDeclaration":5766,"src":"1782:19:15"},"referencedDeclaration":5766,"src":"1782:19:15","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Rebalancer_$5766","typeString":"contract IBaluniV1Rebalancer"}},"visibility":"public"},{"constant":false,"functionSelector":"d14ef46d","id":2235,"mutability":"mutable","name":"assetInfos","nameLocation":"1843:10:15","nodeType":"VariableDeclaration","scope":4118,"src":"1824:29:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2255_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo[]"},"typeName":{"baseType":{"id":2233,"nodeType":"UserDefinedTypeName","pathNode":{"id":2232,"name":"AssetInfo","nameLocations":["1824:9:15"],"nodeType":"IdentifierPath","referencedDeclaration":2255,"src":"1824:9:15"},"referencedDeclaration":2255,"src":"1824:9:15","typeDescriptions":{"typeIdentifier":"t_struct$_AssetInfo_$2255_storage_ptr","typeString":"struct BaluniV1Pool.AssetInfo"}},"id":2234,"nodeType":"ArrayTypeName","src":"1824:11:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2255_storage_$dyn_storage_ptr","typeString":"struct BaluniV1Pool.AssetInfo[]"}},"visibility":"public"},{"constant":false,"functionSelector":"7fec8d38","id":2237,"mutability":"mutable","name":"trigger","nameLocation":"1873:7:15","nodeType":"VariableDeclaration","scope":4118,"src":"1858:22:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2236,"name":"uint256","nodeType":"ElementaryTypeName","src":"1858:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"c2ee3a08","id":2239,"mutability":"mutable","name":"ONE","nameLocation":"1900:3:15","nodeType":"VariableDeclaration","scope":4118,"src":"1885:18:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2238,"name":"uint256","nodeType":"ElementaryTypeName","src":"1885:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"77aace1a","id":2241,"mutability":"mutable","name":"periphery","nameLocation":"1923:9:15","nodeType":"VariableDeclaration","scope":4118,"src":"1908:24:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2240,"name":"address","nodeType":"ElementaryTypeName","src":"1908:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":true,"functionSelector":"67a6c440","id":2244,"mutability":"constant","name":"SWAP_FEE_BPS","nameLocation":"1961:12:15","nodeType":"VariableDeclaration","scope":4118,"src":"1937:42:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2242,"name":"uint256","nodeType":"ElementaryTypeName","src":"1937:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"333030","id":2243,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1976:3:15","typeDescriptions":{"typeIdentifier":"t_rational_300_by_1","typeString":"int_const 300"},"value":"300"},"visibility":"public"},{"constant":false,"functionSelector":"cdf456e1","id":2246,"mutability":"mutable","name":"baseAsset","nameLocation":"1999:9:15","nodeType":"VariableDeclaration","scope":4118,"src":"1984:24:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2245,"name":"address","nodeType":"ElementaryTypeName","src":"1984:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"d66bd524","id":2250,"mutability":"mutable","name":"reserves","nameLocation":"2050:8:15","nodeType":"VariableDeclaration","scope":4118,"src":"2015:43:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":2249,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":2247,"name":"address","nodeType":"ElementaryTypeName","src":"2023:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2015:27:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2248,"name":"uint256","nodeType":"ElementaryTypeName","src":"2034:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"canonicalName":"BaluniV1Pool.AssetInfo","id":2255,"members":[{"constant":false,"id":2252,"mutability":"mutable","name":"asset","nameLocation":"2097:5:15","nodeType":"VariableDeclaration","scope":2255,"src":"2089:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2251,"name":"address","nodeType":"ElementaryTypeName","src":"2089:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2254,"mutability":"mutable","name":"weight","nameLocation":"2117:6:15","nodeType":"VariableDeclaration","scope":2255,"src":"2109:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2253,"name":"uint256","nodeType":"ElementaryTypeName","src":"2109:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"AssetInfo","nameLocation":"2072:9:15","nodeType":"StructDefinition","scope":4118,"src":"2065:64:15","visibility":"public"},{"anonymous":false,"eventSelector":"279b343370f587af7fb675ae7c8578e9c8abcc373236ad02c501a4771fe7a7b8","id":2262,"name":"RebalancePerformed","nameLocation":"2141:18:15","nodeType":"EventDefinition","parameters":{"id":2261,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2257,"indexed":true,"mutability":"mutable","name":"by","nameLocation":"2176:2:15","nodeType":"VariableDeclaration","scope":2262,"src":"2160:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2256,"name":"address","nodeType":"ElementaryTypeName","src":"2160:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2260,"indexed":false,"mutability":"mutable","name":"assets","nameLocation":"2190:6:15","nodeType":"VariableDeclaration","scope":2262,"src":"2180:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2258,"name":"address","nodeType":"ElementaryTypeName","src":"2180:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2259,"nodeType":"ArrayTypeName","src":"2180:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"2159:38:15"},"src":"2135:63:15"},{"anonymous":false,"eventSelector":"a95ad530009c6f929555e70a66aadbeae7231e45756c5b028ca77fbaa376e73e","id":2269,"name":"WeightsRebalanced","nameLocation":"2208:17:15","nodeType":"EventDefinition","parameters":{"id":2268,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2264,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"2242:4:15","nodeType":"VariableDeclaration","scope":2269,"src":"2226:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2263,"name":"address","nodeType":"ElementaryTypeName","src":"2226:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2267,"indexed":false,"mutability":"mutable","name":"amountsAdded","nameLocation":"2258:12:15","nodeType":"VariableDeclaration","scope":2269,"src":"2248:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2265,"name":"uint256","nodeType":"ElementaryTypeName","src":"2248:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2266,"nodeType":"ArrayTypeName","src":"2248:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2225:46:15"},"src":"2202:70:15"},{"anonymous":false,"eventSelector":"cc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5","id":2275,"name":"Burn","nameLocation":"2282:4:15","nodeType":"EventDefinition","parameters":{"id":2274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2271,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"2303:4:15","nodeType":"VariableDeclaration","scope":2275,"src":"2287:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2270,"name":"address","nodeType":"ElementaryTypeName","src":"2287:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2273,"indexed":false,"mutability":"mutable","name":"sharesBurned","nameLocation":"2317:12:15","nodeType":"VariableDeclaration","scope":2275,"src":"2309:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2272,"name":"uint256","nodeType":"ElementaryTypeName","src":"2309:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2286:44:15"},"src":"2276:55:15"},{"anonymous":false,"eventSelector":"0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d4121396885","id":2281,"name":"Mint","nameLocation":"2341:4:15","nodeType":"EventDefinition","parameters":{"id":2280,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2277,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"2362:2:15","nodeType":"VariableDeclaration","scope":2281,"src":"2346:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2276,"name":"address","nodeType":"ElementaryTypeName","src":"2346:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2279,"indexed":false,"mutability":"mutable","name":"sharesMinted","nameLocation":"2374:12:15","nodeType":"VariableDeclaration","scope":2281,"src":"2366:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2278,"name":"uint256","nodeType":"ElementaryTypeName","src":"2366:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2345:42:15"},"src":"2335:53:15"},{"anonymous":false,"eventSelector":"cd3829a3813dc3cdd188fd3d01dcf3268c16be2fdd2dd21d0665418816e46062","id":2293,"name":"Swap","nameLocation":"2398:4:15","nodeType":"EventDefinition","parameters":{"id":2292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2283,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"2425:4:15","nodeType":"VariableDeclaration","scope":2293,"src":"2409:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2282,"name":"address","nodeType":"ElementaryTypeName","src":"2409:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2285,"indexed":true,"mutability":"mutable","name":"fromToken","nameLocation":"2452:9:15","nodeType":"VariableDeclaration","scope":2293,"src":"2436:25:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2284,"name":"address","nodeType":"ElementaryTypeName","src":"2436:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2287,"indexed":true,"mutability":"mutable","name":"toToken","nameLocation":"2484:7:15","nodeType":"VariableDeclaration","scope":2293,"src":"2468:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2286,"name":"address","nodeType":"ElementaryTypeName","src":"2468:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2289,"indexed":false,"mutability":"mutable","name":"amountIn","nameLocation":"2506:8:15","nodeType":"VariableDeclaration","scope":2293,"src":"2498:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2288,"name":"uint256","nodeType":"ElementaryTypeName","src":"2498:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2291,"indexed":false,"mutability":"mutable","name":"amountOut","nameLocation":"2529:9:15","nodeType":"VariableDeclaration","scope":2293,"src":"2521:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2290,"name":"uint256","nodeType":"ElementaryTypeName","src":"2521:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2402:141:15"},"src":"2392:152:15"},{"body":{"id":2373,"nodeType":"Block","src":"2736:544:15","statements":[{"expression":{"id":2314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2312,"name":"periphery","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2241,"src":"2743:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2313,"name":"_periphery","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2305,"src":"2755:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2743:22:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2315,"nodeType":"ExpressionStatement","src":"2743:22:15"},{"expression":{"id":2320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2316,"name":"rebalancer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2231,"src":"2772:10:15","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Rebalancer_$5766","typeString":"contract IBaluniV1Rebalancer"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2318,"name":"_rebalancer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2295,"src":"2805:11:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2317,"name":"IBaluniV1Rebalancer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5766,"src":"2785:19:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBaluniV1Rebalancer_$5766_$","typeString":"type(contract IBaluniV1Rebalancer)"}},"id":2319,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2785:32:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Rebalancer_$5766","typeString":"contract IBaluniV1Rebalancer"}},"src":"2772:45:15","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Rebalancer_$5766","typeString":"contract IBaluniV1Rebalancer"}},"id":2321,"nodeType":"ExpressionStatement","src":"2772:45:15"},{"expression":{"id":2324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2322,"name":"ONE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2239,"src":"2824:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31653138","id":2323,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2830:4:15","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"src":"2824:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2325,"nodeType":"ExpressionStatement","src":"2824:10:15"},{"expression":{"arguments":[{"id":2327,"name":"_assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2298,"src":"2860:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},{"id":2328,"name":"_weights","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2301,"src":"2869:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":2326,"name":"initializeAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2491,"src":"2843:16:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (address[] memory,uint256[] memory)"}},"id":2329,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2843:35:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2330,"nodeType":"ExpressionStatement","src":"2843:35:15"},{"expression":{"id":2333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2331,"name":"trigger","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2237,"src":"2887:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2332,"name":"_trigger","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2303,"src":"2897:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2887:18:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2334,"nodeType":"ExpressionStatement","src":"2887:18:15"},{"expression":{"id":2341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2335,"name":"baseAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2246,"src":"2914:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":2337,"name":"_rebalancer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2295,"src":"2946:11:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2336,"name":"IBaluniV1Rebalancer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5766,"src":"2926:19:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBaluniV1Rebalancer_$5766_$","typeString":"type(contract IBaluniV1Rebalancer)"}},"id":2338,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2926:32:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Rebalancer_$5766","typeString":"contract IBaluniV1Rebalancer"}},"id":2339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2959:14:15","memberName":"getUSDCAddress","nodeType":"MemberAccess","referencedDeclaration":5739,"src":"2926:47:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":2340,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2926:49:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2914:61:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2342,"nodeType":"ExpressionStatement","src":"2914:61:15"},{"assignments":[2344],"declarations":[{"constant":false,"id":2344,"mutability":"mutable","name":"totalWeight","nameLocation":"3109:11:15","nodeType":"VariableDeclaration","scope":2373,"src":"3101:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2343,"name":"uint256","nodeType":"ElementaryTypeName","src":"3101:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2346,"initialValue":{"hexValue":"30","id":2345,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3123:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3101:23:15"},{"body":{"id":2364,"nodeType":"Block","src":"3177:43:15","statements":[{"expression":{"id":2362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2358,"name":"totalWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2344,"src":"3186:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"baseExpression":{"id":2359,"name":"_weights","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2301,"src":"3201:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2361,"indexExpression":{"id":2360,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2348,"src":"3210:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3201:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3186:26:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2363,"nodeType":"ExpressionStatement","src":"3186:26:15"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2351,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2348,"src":"3151:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2352,"name":"_weights","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2301,"src":"3155:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3164:6:15","memberName":"length","nodeType":"MemberAccess","src":"3155:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3151:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2365,"initializationExpression":{"assignments":[2348],"declarations":[{"constant":false,"id":2348,"mutability":"mutable","name":"i","nameLocation":"3144:1:15","nodeType":"VariableDeclaration","scope":2365,"src":"3136:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2347,"name":"uint256","nodeType":"ElementaryTypeName","src":"3136:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2350,"initialValue":{"hexValue":"30","id":2349,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3148:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3136:13:15"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":2356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3172:3:15","subExpression":{"id":2355,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2348,"src":"3172:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2357,"nodeType":"ExpressionStatement","src":"3172:3:15"},"nodeType":"ForStatement","src":"3131:89:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2367,"name":"totalWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2344,"src":"3234:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3130303030","id":2368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3249:5:15","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"src":"3234:20:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642077656967687473","id":2370,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3256:17:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_5cbb8d647918028d0523fccac550113bbbb71d463bbb8b573c02c32bc5cf2b89","typeString":"literal_string \"Invalid weights\""},"value":"Invalid weights"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5cbb8d647918028d0523fccac550113bbbb71d463bbb8b573c02c32bc5cf2b89","typeString":"literal_string \"Invalid weights\""}],"id":2366,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3226:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2371,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3226:48:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2372,"nodeType":"ExpressionStatement","src":"3226:48:15"}]},"id":2374,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"42616c756e69204c50","id":2308,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2710:11:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_ffab3cad7a41854f5c383caa9a930fe1ab39b32cbc67d790708a7a9f02409818","typeString":"literal_string \"Baluni LP\""},"value":"Baluni LP"},{"hexValue":"42414c554e492d4c50","id":2309,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2723:11:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_e9cdad270784d4cf630085b188c6ca83632e4ebde5d7094eec6989a900521298","typeString":"literal_string \"BALUNI-LP\""},"value":"BALUNI-LP"}],"id":2310,"kind":"baseConstructorSpecifier","modifierName":{"id":2307,"name":"ERC20","nameLocations":["2704:5:15"],"nodeType":"IdentifierPath","referencedDeclaration":1651,"src":"2704:5:15"},"nodeType":"ModifierInvocation","src":"2704:31:15"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2295,"mutability":"mutable","name":"_rebalancer","nameLocation":"2576:11:15","nodeType":"VariableDeclaration","scope":2374,"src":"2568:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2294,"name":"address","nodeType":"ElementaryTypeName","src":"2568:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2298,"mutability":"mutable","name":"_assets","nameLocation":"2611:7:15","nodeType":"VariableDeclaration","scope":2374,"src":"2594:24:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2296,"name":"address","nodeType":"ElementaryTypeName","src":"2594:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2297,"nodeType":"ArrayTypeName","src":"2594:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":2301,"mutability":"mutable","name":"_weights","nameLocation":"2642:8:15","nodeType":"VariableDeclaration","scope":2374,"src":"2625:25:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2299,"name":"uint256","nodeType":"ElementaryTypeName","src":"2625:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2300,"nodeType":"ArrayTypeName","src":"2625:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2303,"mutability":"mutable","name":"_trigger","nameLocation":"2665:8:15","nodeType":"VariableDeclaration","scope":2374,"src":"2657:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2302,"name":"uint256","nodeType":"ElementaryTypeName","src":"2657:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2305,"mutability":"mutable","name":"_periphery","nameLocation":"2688:10:15","nodeType":"VariableDeclaration","scope":2374,"src":"2680:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2304,"name":"address","nodeType":"ElementaryTypeName","src":"2680:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2561:142:15"},"returnParameters":{"id":2311,"nodeType":"ParameterList","parameters":[],"src":"2736:0:15"},"scope":4118,"src":"2550:730:15","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2385,"nodeType":"Block","src":"3311:71:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2377,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3326:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3330:6:15","memberName":"sender","nodeType":"MemberAccess","src":"3326:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2379,"name":"periphery","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2241,"src":"3340:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3326:23:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c7920506572697068657279","id":2381,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3351:16:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_e84ca658204d8225a6124393bf429fae79ddb71fa88578d833d3a2b9b5da52d2","typeString":"literal_string \"Only Periphery\""},"value":"Only Periphery"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e84ca658204d8225a6124393bf429fae79ddb71fa88578d833d3a2b9b5da52d2","typeString":"literal_string \"Only Periphery\""}],"id":2376,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3318:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2382,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3318:50:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2383,"nodeType":"ExpressionStatement","src":"3318:50:15"},{"id":2384,"nodeType":"PlaceholderStatement","src":"3375:1:15"}]},"id":2386,"name":"onlyPeriphery","nameLocation":"3295:13:15","nodeType":"ModifierDefinition","parameters":{"id":2375,"nodeType":"ParameterList","parameters":[],"src":"3308:2:15"},"src":"3286:96:15","virtual":false,"visibility":"internal"},{"body":{"id":2490,"nodeType":"Block","src":"3679:539:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2397,"name":"_assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2390,"src":"3694:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3702:6:15","memberName":"length","nodeType":"MemberAccess","src":"3694:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2399,"name":"_weights","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2393,"src":"3712:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3721:6:15","memberName":"length","nodeType":"MemberAccess","src":"3712:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3694:33:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"41737365747320616e642077656967687473206c656e677468206d69736d61746368","id":2402,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3729:36:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_ebb567ad160cf2ebbf5e53ab40a3ffae6f6492169d006ee3f8bad6794e36f372","typeString":"literal_string \"Assets and weights length mismatch\""},"value":"Assets and weights length mismatch"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ebb567ad160cf2ebbf5e53ab40a3ffae6f6492169d006ee3f8bad6794e36f372","typeString":"literal_string \"Assets and weights length mismatch\""}],"id":2396,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3686:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2403,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3686:80:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2404,"nodeType":"ExpressionStatement","src":"3686:80:15"},{"body":{"id":2488,"nodeType":"Block","src":"3820:393:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":2417,"name":"_assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2390,"src":"3837:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2419,"indexExpression":{"id":2418,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2406,"src":"3845:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3837:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2422,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3859:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2421,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3851:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2420,"name":"address","nodeType":"ElementaryTypeName","src":"3851:7:15","typeDescriptions":{}}},"id":2423,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3851:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3837:24:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642061737365742061646472657373","id":2425,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3863:23:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_795f8eca8a22be2e70f1d9bdebdbf85a1dc43e172c3964e13eac586b45ff2b92","typeString":"literal_string \"Invalid asset address\""},"value":"Invalid asset address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_795f8eca8a22be2e70f1d9bdebdbf85a1dc43e172c3964e13eac586b45ff2b92","typeString":"literal_string \"Invalid asset address\""}],"id":2416,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3829:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2426,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3829:58:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2427,"nodeType":"ExpressionStatement","src":"3829:58:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":2429,"name":"_weights","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2393,"src":"3904:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2431,"indexExpression":{"id":2430,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2406,"src":"3913:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3904:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2432,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3918:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3904:15:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420776569676874","id":2434,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3921:16:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_ff1ef73e4333da4da038aba1312a1df349427c8859c23d4b6d4a7df22bfc1a19","typeString":"literal_string \"Invalid weight\""},"value":"Invalid weight"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ff1ef73e4333da4da038aba1312a1df349427c8859c23d4b6d4a7df22bfc1a19","typeString":"literal_string \"Invalid weight\""}],"id":2428,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3896:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2435,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3896:42:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2436,"nodeType":"ExpressionStatement","src":"3896:42:15"},{"expression":{"arguments":[{"arguments":[{"baseExpression":{"id":2441,"name":"_assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2390,"src":"3983:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2443,"indexExpression":{"id":2442,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2406,"src":"3991:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3983:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":2444,"name":"_weights","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2393,"src":"4003:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2446,"indexExpression":{"id":2445,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2406,"src":"4012:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4003:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2440,"name":"AssetInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2255,"src":"3965:9:15","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_AssetInfo_$2255_storage_ptr_$","typeString":"type(struct BaluniV1Pool.AssetInfo storage pointer)"}},"id":2447,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["3976:5:15","3995:6:15"],"names":["asset","weight"],"nodeType":"FunctionCall","src":"3965:51:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AssetInfo_$2255_memory_ptr","typeString":"struct BaluniV1Pool.AssetInfo memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_AssetInfo_$2255_memory_ptr","typeString":"struct BaluniV1Pool.AssetInfo memory"}],"expression":{"id":2437,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2235,"src":"3949:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2255_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":2439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3960:4:15","memberName":"push","nodeType":"MemberAccess","src":"3949:15:15","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_AssetInfo_$2255_storage_$dyn_storage_ptr_$_t_struct$_AssetInfo_$2255_storage_$returns$__$attached_to$_t_array$_t_struct$_AssetInfo_$2255_storage_$dyn_storage_ptr_$","typeString":"function (struct BaluniV1Pool.AssetInfo storage ref[] storage pointer,struct BaluniV1Pool.AssetInfo storage ref)"}},"id":2448,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3949:68:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2449,"nodeType":"ExpressionStatement","src":"3949:68:15"},{"assignments":[2452],"declarations":[{"constant":false,"id":2452,"mutability":"mutable","name":"asset","nameLocation":"4035:5:15","nodeType":"VariableDeclaration","scope":2488,"src":"4028:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"},"typeName":{"id":2451,"nodeType":"UserDefinedTypeName","pathNode":{"id":2450,"name":"IERC20","nameLocations":["4028:6:15"],"nodeType":"IdentifierPath","referencedDeclaration":1729,"src":"4028:6:15"},"referencedDeclaration":1729,"src":"4028:6:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"}},"visibility":"internal"}],"id":2458,"initialValue":{"arguments":[{"baseExpression":{"id":2454,"name":"_assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2390,"src":"4050:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2456,"indexExpression":{"id":2455,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2406,"src":"4058:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4050:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2453,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1729,"src":"4043:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1729_$","typeString":"type(contract IERC20)"}},"id":2457,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4043:18:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"}},"nodeType":"VariableDeclarationStatement","src":"4028:33:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2463,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4098:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Pool_$4118","typeString":"contract BaluniV1Pool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniV1Pool_$4118","typeString":"contract BaluniV1Pool"}],"id":2462,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4090:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2461,"name":"address","nodeType":"ElementaryTypeName","src":"4090:7:15","typeDescriptions":{}}},"id":2464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4090:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":2467,"name":"rebalancer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2231,"src":"4113:10:15","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Rebalancer_$5766","typeString":"contract IBaluniV1Rebalancer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IBaluniV1Rebalancer_$5766","typeString":"contract IBaluniV1Rebalancer"}],"id":2466,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4105:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2465,"name":"address","nodeType":"ElementaryTypeName","src":"4105:7:15","typeDescriptions":{}}},"id":2468,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4105:19:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2459,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2452,"src":"4074:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"}},"id":2460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4080:9:15","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":1706,"src":"4074:15:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":2469,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4074:51:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2470,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4129:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4074:56:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2487,"nodeType":"IfStatement","src":"4070:136:15","trueBody":{"id":2486,"nodeType":"Block","src":"4132:74:15","statements":[{"expression":{"arguments":[{"arguments":[{"id":2477,"name":"rebalancer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2231,"src":"4165:10:15","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Rebalancer_$5766","typeString":"contract IBaluniV1Rebalancer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IBaluniV1Rebalancer_$5766","typeString":"contract IBaluniV1Rebalancer"}],"id":2476,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4157:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2475,"name":"address","nodeType":"ElementaryTypeName","src":"4157:7:15","typeDescriptions":{}}},"id":2478,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4157:19:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"arguments":[{"id":2481,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4183:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2480,"name":"uint256","nodeType":"ElementaryTypeName","src":"4183:7:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":2479,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4178:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2482,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4178:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":2483,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4192:3:15","memberName":"max","nodeType":"MemberAccess","src":"4178:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2472,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2452,"src":"4143:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"}},"id":2474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4149:7:15","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":1716,"src":"4143:13:15","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":2484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4143:53:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2485,"nodeType":"ExpressionStatement","src":"4143:53:15"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2409,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2406,"src":"3795:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2410,"name":"_assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2390,"src":"3799:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3807:6:15","memberName":"length","nodeType":"MemberAccess","src":"3799:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3795:18:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2489,"initializationExpression":{"assignments":[2406],"declarations":[{"constant":false,"id":2406,"mutability":"mutable","name":"i","nameLocation":"3788:1:15","nodeType":"VariableDeclaration","scope":2489,"src":"3780:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2405,"name":"uint256","nodeType":"ElementaryTypeName","src":"3780:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2408,"initialValue":{"hexValue":"30","id":2407,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3792:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3780:13:15"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":2414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3815:3:15","subExpression":{"id":2413,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2406,"src":"3815:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2415,"nodeType":"ExpressionStatement","src":"3815:3:15"},"nodeType":"ForStatement","src":"3775:438:15"}]},"documentation":{"id":2387,"nodeType":"StructuredDocumentation","src":"3388:199:15","text":" @dev Initializes the assets and their weights for the pool.\n @param _assets The array of asset addresses.\n @param _weights The array of weights corresponding to each asset."},"id":2491,"implemented":true,"kind":"function","modifiers":[],"name":"initializeAssets","nameLocation":"3600:16:15","nodeType":"FunctionDefinition","parameters":{"id":2394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2390,"mutability":"mutable","name":"_assets","nameLocation":"3634:7:15","nodeType":"VariableDeclaration","scope":2491,"src":"3617:24:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2388,"name":"address","nodeType":"ElementaryTypeName","src":"3617:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2389,"nodeType":"ArrayTypeName","src":"3617:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":2393,"mutability":"mutable","name":"_weights","nameLocation":"3660:8:15","nodeType":"VariableDeclaration","scope":2491,"src":"3643:25:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2391,"name":"uint256","nodeType":"ElementaryTypeName","src":"3643:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2392,"nodeType":"ArrayTypeName","src":"3643:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"3616:53:15"},"returnParameters":{"id":2395,"nodeType":"ParameterList","parameters":[],"src":"3679:0:15"},"scope":4118,"src":"3591:627:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2565,"nodeType":"Block","src":"4656:718:15","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2498,"name":"isRebalanceNeeded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4117,"src":"4671:17:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":2499,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4671:19:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"526562616c616e6365206e6f74206e6565646564","id":2500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4692:22:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_e4fcae9c0286e861087281117e0a3185ced905823104b290e1fe3ba826d8d280","typeString":"literal_string \"Rebalance not needed\""},"value":"Rebalance not needed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e4fcae9c0286e861087281117e0a3185ced905823104b290e1fe3ba826d8d280","typeString":"literal_string \"Rebalance not needed\""}],"id":2497,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4663:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2501,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4663:52:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2502,"nodeType":"ExpressionStatement","src":"4663:52:15"},{"assignments":[2504,2507],"declarations":[{"constant":false,"id":2504,"mutability":"mutable","name":"totalValuation","nameLocation":"4731:14:15","nodeType":"VariableDeclaration","scope":2565,"src":"4723:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2503,"name":"uint256","nodeType":"ElementaryTypeName","src":"4723:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2507,"mutability":"mutable","name":"valuations","nameLocation":"4764:10:15","nodeType":"VariableDeclaration","scope":2565,"src":"4747:27:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2505,"name":"uint256","nodeType":"ElementaryTypeName","src":"4747:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2506,"nodeType":"ArrayTypeName","src":"4747:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":2510,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2508,"name":"_computeTotalValuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3599,"src":"4778:22:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function () view returns (uint256,uint256[] memory)"}},"id":2509,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4778:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256,uint256[] memory)"}},"nodeType":"VariableDeclarationStatement","src":"4722:80:15"},{"assignments":[2515],"declarations":[{"constant":false,"id":2515,"mutability":"mutable","name":"amountsToAdd","nameLocation":"4828:12:15","nodeType":"VariableDeclaration","scope":2565,"src":"4811:29:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2513,"name":"uint256","nodeType":"ElementaryTypeName","src":"4811:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2514,"nodeType":"ArrayTypeName","src":"4811:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":2520,"initialValue":{"arguments":[{"id":2517,"name":"totalValuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2504,"src":"4866:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2518,"name":"valuations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2507,"src":"4882:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":2516,"name":"_calculateAmountsToAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3788,"src":"4843:22:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256,uint256[] memory) view returns (uint256[] memory)"}},"id":2519,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4843:50:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"4811:82:15"},{"assignments":[2522],"declarations":[{"constant":false,"id":2522,"mutability":"mutable","name":"totalAddedLiquidity","nameLocation":"4965:19:15","nodeType":"VariableDeclaration","scope":2565,"src":"4957:27:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2521,"name":"uint256","nodeType":"ElementaryTypeName","src":"4957:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2526,"initialValue":{"arguments":[{"id":2524,"name":"amountsToAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2515,"src":"5017:12:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":2523,"name":"_calculateTotalAddedLiquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3722,"src":"4987:29:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256[] memory) view returns (uint256)"}},"id":2525,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4987:43:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4957:73:15"},{"body":{"id":2552,"nodeType":"Block","src":"5155:112:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":2538,"name":"amountsToAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2515,"src":"5168:12:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2540,"indexExpression":{"id":2539,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2528,"src":"5181:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5168:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5186:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5168:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2551,"nodeType":"IfStatement","src":"5164:96:15","trueBody":{"id":2550,"nodeType":"Block","src":"5189:71:15","statements":[{"expression":{"arguments":[{"id":2544,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2528,"src":"5231:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":2545,"name":"amountsToAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2515,"src":"5234:12:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2547,"indexExpression":{"id":2546,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2528,"src":"5247:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5234:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2543,"name":"_transferAndCalculateLiquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3836,"src":"5200:30:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256)"}},"id":2548,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5200:50:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2549,"nodeType":"ExpressionStatement","src":"5200:50:15"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2531,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2528,"src":"5125:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2532,"name":"amountsToAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2515,"src":"5129:12:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5142:6:15","memberName":"length","nodeType":"MemberAccess","src":"5129:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5125:23:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2553,"initializationExpression":{"assignments":[2528],"declarations":[{"constant":false,"id":2528,"mutability":"mutable","name":"i","nameLocation":"5118:1:15","nodeType":"VariableDeclaration","scope":2553,"src":"5110:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2527,"name":"uint256","nodeType":"ElementaryTypeName","src":"5110:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2530,"initialValue":{"hexValue":"30","id":2529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5122:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5110:13:15"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":2536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5150:3:15","subExpression":{"id":2535,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2528,"src":"5150:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2537,"nodeType":"ExpressionStatement","src":"5150:3:15"},"nodeType":"ForStatement","src":"5105:162:15"},{"expression":{"arguments":[{"id":2555,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2494,"src":"5281:8:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2556,"name":"totalAddedLiquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2522,"src":"5291:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2554,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1491,"src":"5275:5:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2557,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5275:36:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2558,"nodeType":"ExpressionStatement","src":"5275:36:15"},{"eventCall":{"arguments":[{"expression":{"id":2560,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5343:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5347:6:15","memberName":"sender","nodeType":"MemberAccess","src":"5343:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2562,"name":"amountsToAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2515,"src":"5355:12:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":2559,"name":"WeightsRebalanced","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2269,"src":"5325:17:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (address,uint256[] memory)"}},"id":2563,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5325:43:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2564,"nodeType":"EmitStatement","src":"5320:48:15"}]},"documentation":{"id":2492,"nodeType":"StructuredDocumentation","src":"4224:375:15","text":" @dev Rebalances the weights of the pool by calculating the amounts to add for each token,\n transferring the calculated amounts from the user to the pool, minting the total added liquidity,\n updating the reserves, and emitting an event to indicate the rebalancing of weights.\n @param receiver The address to receive the minted liquidity tokens."},"functionSelector":"0723c999","id":2566,"implemented":true,"kind":"function","modifiers":[],"name":"rebalanceWeights","nameLocation":"4612:16:15","nodeType":"FunctionDefinition","parameters":{"id":2495,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2494,"mutability":"mutable","name":"receiver","nameLocation":"4637:8:15","nodeType":"VariableDeclaration","scope":2566,"src":"4629:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2493,"name":"address","nodeType":"ElementaryTypeName","src":"4629:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4628:18:15"},"returnParameters":{"id":2496,"nodeType":"ParameterList","parameters":[],"src":"4656:0:15"},"scope":4118,"src":"4603:771:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2677,"nodeType":"Block","src":"6274:918:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2583,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2569,"src":"6289:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2584,"name":"toToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2571,"src":"6302:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6289:20:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43616e6e6f742073776170207468652073616d6520746f6b656e","id":2586,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6311:28:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_6f3b6914a8f4e42f0dc4d6fcf60d1470463793693c123b4b0782b9cd43668c23","typeString":"literal_string \"Cannot swap the same token\""},"value":"Cannot swap the same token"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6f3b6914a8f4e42f0dc4d6fcf60d1470463793693c123b4b0782b9cd43668c23","typeString":"literal_string \"Cannot swap the same token\""}],"id":2582,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6281:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2587,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6281:59:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2588,"nodeType":"ExpressionStatement","src":"6281:59:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2590,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2573,"src":"6355:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2591,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6364:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6355:10:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416d6f756e74206d7573742062652067726561746572207468616e207a65726f","id":2593,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6367:34:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887","typeString":"literal_string \"Amount must be greater than zero\""},"value":"Amount must be greater than zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887","typeString":"literal_string \"Amount must be greater than zero\""}],"id":2589,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6347:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6347:55:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2595,"nodeType":"ExpressionStatement","src":"6347:55:15"},{"expression":{"arguments":[{"expression":{"id":2600,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6498:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6502:6:15","memberName":"sender","nodeType":"MemberAccess","src":"6498:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":2604,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"6518:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Pool_$4118","typeString":"contract BaluniV1Pool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniV1Pool_$4118","typeString":"contract BaluniV1Pool"}],"id":2603,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6510:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2602,"name":"address","nodeType":"ElementaryTypeName","src":"6510:7:15","typeDescriptions":{}}},"id":2605,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6510:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2606,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2573,"src":"6525:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":2597,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2569,"src":"6474:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2596,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1729,"src":"6467:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1729_$","typeString":"type(contract IERC20)"}},"id":2598,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6467:17:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"}},"id":2599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6485:12:15","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":1728,"src":"6467:30:15","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":2607,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6467:65:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2608,"nodeType":"ExpressionStatement","src":"6467:65:15"},{"assignments":[2610],"declarations":[{"constant":false,"id":2610,"mutability":"mutable","name":"receivedAmount","nameLocation":"6598:14:15","nodeType":"VariableDeclaration","scope":2677,"src":"6590:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2609,"name":"uint256","nodeType":"ElementaryTypeName","src":"6590:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2616,"initialValue":{"arguments":[{"id":2612,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2569,"src":"6628:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2613,"name":"toToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2571,"src":"6639:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2614,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2573,"src":"6648:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2611,"name":"getAmountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3117,"src":"6615:12:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,address,uint256) view returns (uint256)"}},"id":2615,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6615:40:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6590:65:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2624,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"6753:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Pool_$4118","typeString":"contract BaluniV1Pool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniV1Pool_$4118","typeString":"contract BaluniV1Pool"}],"id":2623,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6745:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2622,"name":"address","nodeType":"ElementaryTypeName","src":"6745:7:15","typeDescriptions":{}}},"id":2625,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6745:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":2619,"name":"toToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2571,"src":"6726:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2618,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1729,"src":"6719:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1729_$","typeString":"type(contract IERC20)"}},"id":2620,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6719:15:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"}},"id":2621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6735:9:15","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":1686,"src":"6719:25:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":2626,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6719:40:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2627,"name":"receivedAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2610,"src":"6763:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6719:58:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e74204c6971756964697479","id":2629,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6779:24:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_85d32796faf4bbe37cfdb7e983d4048fee52ebcfc8d2f22a939ce47e85d98ae8","typeString":"literal_string \"Insufficient Liquidity\""},"value":"Insufficient Liquidity"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_85d32796faf4bbe37cfdb7e983d4048fee52ebcfc8d2f22a939ce47e85d98ae8","typeString":"literal_string \"Insufficient Liquidity\""}],"id":2617,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6711:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2630,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6711:93:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2631,"nodeType":"ExpressionStatement","src":"6711:93:15"},{"assignments":[2633],"declarations":[{"constant":false,"id":2633,"mutability":"mutable","name":"fee","nameLocation":"6839:3:15","nodeType":"VariableDeclaration","scope":2677,"src":"6831:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2632,"name":"uint256","nodeType":"ElementaryTypeName","src":"6831:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2640,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2634,"name":"receivedAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2610,"src":"6846:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2635,"name":"SWAP_FEE_BPS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2244,"src":"6863:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6846:29:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2637,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6845:31:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3130303030","id":2638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6879:5:15","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"src":"6845:39:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6831:53:15"},{"assignments":[2642],"declarations":[{"constant":false,"id":2642,"mutability":"mutable","name":"toSend","nameLocation":"6899:6:15","nodeType":"VariableDeclaration","scope":2677,"src":"6891:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2641,"name":"uint256","nodeType":"ElementaryTypeName","src":"6891:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2646,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2643,"name":"receivedAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2610,"src":"6908:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2644,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2633,"src":"6925:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6908:20:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6891:37:15"},{"expression":{"arguments":[{"id":2651,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2575,"src":"7003:8:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2652,"name":"toSend","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2642,"src":"7013:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":2648,"name":"toToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2571,"src":"6985:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2647,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1729,"src":"6978:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1729_$","typeString":"type(contract IERC20)"}},"id":2649,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6978:15:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"}},"id":2650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6994:8:15","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":1696,"src":"6978:24:15","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":2653,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6978:42:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2654,"nodeType":"ExpressionStatement","src":"6978:42:15"},{"eventCall":{"arguments":[{"id":2656,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2575,"src":"7039:8:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2657,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2569,"src":"7049:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2658,"name":"toToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2571,"src":"7060:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2659,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2573,"src":"7069:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2660,"name":"toSend","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2642,"src":"7077:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2655,"name":"Swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2293,"src":"7034:4:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,address,uint256,uint256)"}},"id":2661,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7034:50:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2662,"nodeType":"EmitStatement","src":"7029:55:15"},{"expression":{"id":2667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2663,"name":"reserves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2250,"src":"7093:8:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2665,"indexExpression":{"id":2664,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2569,"src":"7102:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7093:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2666,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2573,"src":"7116:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7093:29:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2668,"nodeType":"ExpressionStatement","src":"7093:29:15"},{"expression":{"id":2673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2669,"name":"reserves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2250,"src":"7129:8:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2671,"indexExpression":{"id":2670,"name":"toToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2571,"src":"7138:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7129:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2672,"name":"toSend","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2642,"src":"7150:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7129:27:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2674,"nodeType":"ExpressionStatement","src":"7129:27:15"},{"expression":{"id":2675,"name":"receivedAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2610,"src":"7172:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2581,"id":2676,"nodeType":"Return","src":"7165:21:15"}]},"documentation":{"id":2567,"nodeType":"StructuredDocumentation","src":"5380:741:15","text":" @dev Swaps `amount` of `fromToken` to `toToken` and transfers the received amount to `receiver`.\n Requirements:\n - `fromToken` and `toToken` must be different tokens.\n - `amount` must be greater than zero.\n - Sufficient liquidity of `toToken` must be available in the contract.\n Emits a `Swap` event with the details of the swap.\n Updates the reserves after the swap.\n @param fromToken The address of the token to swap from.\n @param toToken The address of the token to swap to.\n @param amount The amount of `fromToken` to swap.\n @param receiver The address to receive the swapped tokens.\n @return The amount of `toToken` received after the swap."},"functionSelector":"6e81221c","id":2678,"implemented":true,"kind":"function","modifiers":[{"id":2578,"kind":"modifierInvocation","modifierName":{"id":2577,"name":"nonReentrant","nameLocations":["6243:12:15"],"nodeType":"IdentifierPath","referencedDeclaration":2071,"src":"6243:12:15"},"nodeType":"ModifierInvocation","src":"6243:12:15"}],"name":"swap","nameLocation":"6134:4:15","nodeType":"FunctionDefinition","parameters":{"id":2576,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2569,"mutability":"mutable","name":"fromToken","nameLocation":"6153:9:15","nodeType":"VariableDeclaration","scope":2678,"src":"6145:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2568,"name":"address","nodeType":"ElementaryTypeName","src":"6145:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2571,"mutability":"mutable","name":"toToken","nameLocation":"6177:7:15","nodeType":"VariableDeclaration","scope":2678,"src":"6169:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2570,"name":"address","nodeType":"ElementaryTypeName","src":"6169:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2573,"mutability":"mutable","name":"amount","nameLocation":"6199:6:15","nodeType":"VariableDeclaration","scope":2678,"src":"6191:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2572,"name":"uint256","nodeType":"ElementaryTypeName","src":"6191:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2575,"mutability":"mutable","name":"receiver","nameLocation":"6220:8:15","nodeType":"VariableDeclaration","scope":2678,"src":"6212:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2574,"name":"address","nodeType":"ElementaryTypeName","src":"6212:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6138:95:15"},"returnParameters":{"id":2581,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2580,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2678,"src":"6265:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2579,"name":"uint256","nodeType":"ElementaryTypeName","src":"6265:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6264:9:15"},"scope":4118,"src":"6125:1067:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2878,"nodeType":"Block","src":"7484:1377:15","statements":[{"assignments":[2692],"declarations":[{"constant":false,"id":2692,"mutability":"mutable","name":"totalSupply","nameLocation":"7499:11:15","nodeType":"VariableDeclaration","scope":2878,"src":"7491:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2691,"name":"uint256","nodeType":"ElementaryTypeName","src":"7491:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2695,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2693,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1224,"src":"7513:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":2694,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7513:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7491:35:15"},{"assignments":[2697],"declarations":[{"constant":false,"id":2697,"mutability":"mutable","name":"totalValue","nameLocation":"7541:10:15","nodeType":"VariableDeclaration","scope":2878,"src":"7533:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2696,"name":"uint256","nodeType":"ElementaryTypeName","src":"7533:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2699,"initialValue":{"hexValue":"30","id":2698,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7554:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"7533:22:15"},{"assignments":[2704],"declarations":[{"constant":false,"id":2704,"mutability":"mutable","name":"_reserves","nameLocation":"7581:9:15","nodeType":"VariableDeclaration","scope":2878,"src":"7564:26:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2702,"name":"uint256","nodeType":"ElementaryTypeName","src":"7564:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2703,"nodeType":"ArrayTypeName","src":"7564:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":2707,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2705,"name":"getReserves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3401,"src":"7593:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function () view returns (uint256[] memory)"}},"id":2706,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7593:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"7564:42:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2709,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2235,"src":"7623:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2255_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":2710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7634:6:15","memberName":"length","nodeType":"MemberAccess","src":"7623:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2711,"name":"_reserves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2704,"src":"7644:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7654:6:15","memberName":"length","nodeType":"MemberAccess","src":"7644:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7623:37:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964207265736572766573206c656e677468","id":2714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7662:25:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_788ce755d61da147edad70af92467c8a383af859573990e9defde5b6e0bdf24d","typeString":"literal_string \"Invalid reserves length\""},"value":"Invalid reserves length"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_788ce755d61da147edad70af92467c8a383af859573990e9defde5b6e0bdf24d","typeString":"literal_string \"Invalid reserves length\""}],"id":2708,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7615:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2715,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7615:73:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2716,"nodeType":"ExpressionStatement","src":"7615:73:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2718,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2235,"src":"7703:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2255_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":2719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7714:6:15","memberName":"length","nodeType":"MemberAccess","src":"7703:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2720,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7723:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7703:21:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f20617373657473","id":2722,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7726:11:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_195739df032cb3c07c5ed70a4cae73c5d077df4296263c6db3d1f3b4671efbd0","typeString":"literal_string \"No assets\""},"value":"No assets"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_195739df032cb3c07c5ed70a4cae73c5d077df4296263c6db3d1f3b4671efbd0","typeString":"literal_string \"No assets\""}],"id":2717,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7695:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2723,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7695:43:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2724,"nodeType":"ExpressionStatement","src":"7695:43:15"},{"body":{"id":2788,"nodeType":"Block","src":"7795:402:15","statements":[{"assignments":[2737],"declarations":[{"constant":false,"id":2737,"mutability":"mutable","name":"asset","nameLocation":"7812:5:15","nodeType":"VariableDeclaration","scope":2788,"src":"7804:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2736,"name":"address","nodeType":"ElementaryTypeName","src":"7804:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2742,"initialValue":{"expression":{"baseExpression":{"id":2738,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2235,"src":"7820:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2255_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":2740,"indexExpression":{"id":2739,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2726,"src":"7831:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7820:13:15","typeDescriptions":{"typeIdentifier":"t_struct$_AssetInfo_$2255_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref"}},"id":2741,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7834:5:15","memberName":"asset","nodeType":"MemberAccess","referencedDeclaration":2252,"src":"7820:19:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"7804:35:15"},{"assignments":[2744],"declarations":[{"constant":false,"id":2744,"mutability":"mutable","name":"actualBalance","nameLocation":"7856:13:15","nodeType":"VariableDeclaration","scope":2788,"src":"7848:21:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2743,"name":"uint256","nodeType":"ElementaryTypeName","src":"7848:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2754,"initialValue":{"arguments":[{"arguments":[{"id":2751,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"7904:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Pool_$4118","typeString":"contract BaluniV1Pool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniV1Pool_$4118","typeString":"contract BaluniV1Pool"}],"id":2750,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7896:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2749,"name":"address","nodeType":"ElementaryTypeName","src":"7896:7:15","typeDescriptions":{}}},"id":2752,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7896:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":2746,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2737,"src":"7879:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2745,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1729,"src":"7872:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1729_$","typeString":"type(contract IERC20)"}},"id":2747,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7872:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"}},"id":2748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7886:9:15","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":1686,"src":"7872:23:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":2753,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7872:38:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7848:62:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2756,"name":"actualBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2744,"src":"7927:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2757,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7943:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7927:17:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"42616c616e6365206d7573742062652067726561746572207468616e2030","id":2759,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7946:32:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_f769616ee58ae603f05e4c02a832e846d1a662e38fd15ecc138ef5151cc8100a","typeString":"literal_string \"Balance must be greater than 0\""},"value":"Balance must be greater than 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f769616ee58ae603f05e4c02a832e846d1a662e38fd15ecc138ef5151cc8100a","typeString":"literal_string \"Balance must be greater than 0\""}],"id":2755,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7919:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2760,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7919:60:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2761,"nodeType":"ExpressionStatement","src":"7919:60:15"},{"assignments":[2763],"declarations":[{"constant":false,"id":2763,"mutability":"mutable","name":"amount","nameLocation":"7996:6:15","nodeType":"VariableDeclaration","scope":2788,"src":"7988:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2762,"name":"uint256","nodeType":"ElementaryTypeName","src":"7988:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2769,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2764,"name":"actualBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2744,"src":"8005:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"baseExpression":{"id":2765,"name":"_reserves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2704,"src":"8021:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2767,"indexExpression":{"id":2766,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2726,"src":"8031:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8021:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8005:28:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7988:45:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2771,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2763,"src":"8050:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2772,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8059:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8050:10:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416d6f756e74206d7573742062652067726561746572207468616e2030","id":2774,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8062:31:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296","typeString":"literal_string \"Amount must be greater than 0\""},"value":"Amount must be greater than 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296","typeString":"literal_string \"Amount must be greater than 0\""}],"id":2770,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8042:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2775,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8042:52:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2776,"nodeType":"ExpressionStatement","src":"8042:52:15"},{"assignments":[2778],"declarations":[{"constant":false,"id":2778,"mutability":"mutable","name":"valuation","nameLocation":"8111:9:15","nodeType":"VariableDeclaration","scope":2788,"src":"8103:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2777,"name":"uint256","nodeType":"ElementaryTypeName","src":"8103:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2783,"initialValue":{"arguments":[{"id":2780,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2737,"src":"8143:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2781,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2763,"src":"8150:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2779,"name":"_convertTokenToBase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3916,"src":"8123:19:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view returns (uint256)"}},"id":2782,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8123:34:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8103:54:15"},{"expression":{"id":2786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2784,"name":"totalValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2697,"src":"8166:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2785,"name":"valuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2778,"src":"8180:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8166:23:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2787,"nodeType":"ExpressionStatement","src":"8166:23:15"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2729,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2726,"src":"7767:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2730,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2235,"src":"7771:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2255_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":2731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7782:6:15","memberName":"length","nodeType":"MemberAccess","src":"7771:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7767:21:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2789,"initializationExpression":{"assignments":[2726],"declarations":[{"constant":false,"id":2726,"mutability":"mutable","name":"i","nameLocation":"7760:1:15","nodeType":"VariableDeclaration","scope":2789,"src":"7752:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2725,"name":"uint256","nodeType":"ElementaryTypeName","src":"7752:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2728,"initialValue":{"hexValue":"30","id":2727,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7764:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"7752:13:15"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":2734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"7790:3:15","subExpression":{"id":2733,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2726,"src":"7790:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2735,"nodeType":"ExpressionStatement","src":"7790:3:15"},"nodeType":"ForStatement","src":"7747:450:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2791,"name":"totalValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2697,"src":"8213:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2792,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8226:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8213:14:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f74616c2076616c7565206d7573742062652067726561746572207468616e2030","id":2794,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8229:36:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_e8ec4a06d76118e3b24afbc30b183e086aa6aaa6e137c81160fc8d59e1a33e3f","typeString":"literal_string \"Total value must be greater than 0\""},"value":"Total value must be greater than 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e8ec4a06d76118e3b24afbc30b183e086aa6aaa6e137c81160fc8d59e1a33e3f","typeString":"literal_string \"Total value must be greater than 0\""}],"id":2790,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8205:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2795,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8205:61:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2796,"nodeType":"ExpressionStatement","src":"8205:61:15"},{"assignments":[2798],"declarations":[{"constant":false,"id":2798,"mutability":"mutable","name":"toMint","nameLocation":"8283:6:15","nodeType":"VariableDeclaration","scope":2878,"src":"8275:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2797,"name":"uint256","nodeType":"ElementaryTypeName","src":"8275:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2799,"nodeType":"VariableDeclarationStatement","src":"8275:14:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2800,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2692,"src":"8302:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2801,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8317:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8302:16:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2830,"nodeType":"Block","src":"8362:211:15","statements":[{"assignments":[2809,null],"declarations":[{"constant":false,"id":2809,"mutability":"mutable","name":"totalLiquidity","nameLocation":"8380:14:15","nodeType":"VariableDeclaration","scope":2830,"src":"8372:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2808,"name":"uint256","nodeType":"ElementaryTypeName","src":"8372:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},null],"id":2812,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2810,"name":"_computeTotalValuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3599,"src":"8400:22:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function () view returns (uint256,uint256[] memory)"}},"id":2811,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8400:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256,uint256[] memory)"}},"nodeType":"VariableDeclarationStatement","src":"8371:53:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2814,"name":"totalLiquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2809,"src":"8441:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2815,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8458:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8441:18:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f74616c206c6971756964697479206d7573742062652067726561746572207468616e2030","id":2817,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8461:40:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_a245c00c976af272c663e732300fe860097516364a0d92887494f54e860fa54c","typeString":"literal_string \"Total liquidity must be greater than 0\""},"value":"Total liquidity must be greater than 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a245c00c976af272c663e732300fe860097516364a0d92887494f54e860fa54c","typeString":"literal_string \"Total liquidity must be greater than 0\""}],"id":2813,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8433:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2818,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8433:69:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2819,"nodeType":"ExpressionStatement","src":"8433:69:15"},{"expression":{"id":2828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2820,"name":"toMint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2798,"src":"8511:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"id":2821,"name":"totalValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2697,"src":"8522:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2822,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8521:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2823,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2692,"src":"8536:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8521:26:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2825,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8520:28:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2826,"name":"totalLiquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2809,"src":"8551:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8520:45:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8511:54:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2829,"nodeType":"ExpressionStatement","src":"8511:54:15"}]},"id":2831,"nodeType":"IfStatement","src":"8298:275:15","trueBody":{"id":2807,"nodeType":"Block","src":"8320:36:15","statements":[{"expression":{"id":2805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2803,"name":"toMint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2798,"src":"8329:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2804,"name":"totalValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2697,"src":"8338:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8329:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2806,"nodeType":"ExpressionStatement","src":"8329:19:15"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2833,"name":"toMint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2798,"src":"8587:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2834,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8597:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8587:11:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d696e74207174792069732030","id":2836,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8600:15:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_50327403b25acc6e0d15796c676b8320f8d9ffcece005326d31f4226e4f741bb","typeString":"literal_string \"Mint qty is 0\""},"value":"Mint qty is 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_50327403b25acc6e0d15796c676b8320f8d9ffcece005326d31f4226e4f741bb","typeString":"literal_string \"Mint qty is 0\""}],"id":2832,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8579:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2837,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8579:37:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2838,"nodeType":"ExpressionStatement","src":"8579:37:15"},{"assignments":[2840],"declarations":[{"constant":false,"id":2840,"mutability":"mutable","name":"b4","nameLocation":"8631:2:15","nodeType":"VariableDeclaration","scope":2878,"src":"8623:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2839,"name":"uint256","nodeType":"ElementaryTypeName","src":"8623:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2845,"initialValue":{"arguments":[{"expression":{"id":2842,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8646:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8650:6:15","memberName":"sender","nodeType":"MemberAccess","src":"8646:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2841,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1237,"src":"8636:9:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":2844,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8636:21:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8623:34:15"},{"expression":{"arguments":[{"id":2847,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2681,"src":"8672:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2848,"name":"toMint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2798,"src":"8676:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2846,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1491,"src":"8666:5:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2849,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8666:17:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2850,"nodeType":"ExpressionStatement","src":"8666:17:15"},{"assignments":[2852],"declarations":[{"constant":false,"id":2852,"mutability":"mutable","name":"b","nameLocation":"8700:1:15","nodeType":"VariableDeclaration","scope":2878,"src":"8692:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2851,"name":"uint256","nodeType":"ElementaryTypeName","src":"8692:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2858,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2854,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2681,"src":"8714:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2853,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1237,"src":"8704:9:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":2855,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8704:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2856,"name":"b4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2840,"src":"8720:2:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8704:18:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8692:30:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2860,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2852,"src":"8737:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2861,"name":"toMint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2798,"src":"8742:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8737:11:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d696e74204661696c6564","id":2863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8750:13:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_34ef1863090c1d6424986d336eb7c969d5c87770215770a2698790d3d79274ce","typeString":"literal_string \"Mint Failed\""},"value":"Mint Failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_34ef1863090c1d6424986d336eb7c969d5c87770215770a2698790d3d79274ce","typeString":"literal_string \"Mint Failed\""}],"id":2859,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8729:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2864,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8729:35:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2865,"nodeType":"ExpressionStatement","src":"8729:35:15"},{"expression":{"arguments":[{"id":2867,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2684,"src":"8789:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"hexValue":"74727565","id":2868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8798:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2866,"name":"_updateReserves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3981,"src":"8773:15:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bool_$returns$__$","typeString":"function (uint256[] memory,bool)"}},"id":2869,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8773:30:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2870,"nodeType":"ExpressionStatement","src":"8773:30:15"},{"eventCall":{"arguments":[{"id":2872,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2681,"src":"8822:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2873,"name":"toMint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2798,"src":"8826:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2871,"name":"Mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2281,"src":"8817:4:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2874,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8817:16:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2875,"nodeType":"EmitStatement","src":"8812:21:15"},{"expression":{"id":2876,"name":"toMint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2798,"src":"8849:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2690,"id":2877,"nodeType":"Return","src":"8842:13:15"}]},"documentation":{"id":2679,"nodeType":"StructuredDocumentation","src":"7198:189:15","text":" @dev Mints new tokens and adds them to the specified address.\n @param to The address to which the new tokens will be minted.\n @return The amount of tokens minted."},"functionSelector":"de836ebd","id":2879,"implemented":true,"kind":"function","modifiers":[{"id":2687,"kind":"modifierInvocation","modifierName":{"id":2686,"name":"onlyPeriphery","nameLocations":["7452:13:15"],"nodeType":"IdentifierPath","referencedDeclaration":2386,"src":"7452:13:15"},"nodeType":"ModifierInvocation","src":"7452:13:15"}],"name":"mint","nameLocation":"7400:4:15","nodeType":"FunctionDefinition","parameters":{"id":2685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2681,"mutability":"mutable","name":"to","nameLocation":"7413:2:15","nodeType":"VariableDeclaration","scope":2879,"src":"7405:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2680,"name":"address","nodeType":"ElementaryTypeName","src":"7405:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2684,"mutability":"mutable","name":"amounts","nameLocation":"7434:7:15","nodeType":"VariableDeclaration","scope":2879,"src":"7417:24:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2682,"name":"uint256","nodeType":"ElementaryTypeName","src":"7417:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2683,"nodeType":"ArrayTypeName","src":"7417:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"7404:38:15"},"returnParameters":{"id":2690,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2689,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2879,"src":"7475:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2688,"name":"uint256","nodeType":"ElementaryTypeName","src":"7475:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7474:9:15"},"scope":4118,"src":"7391:1470:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3096,"nodeType":"Block","src":"9903:1346:15","statements":[{"assignments":[2888],"declarations":[{"constant":false,"id":2888,"mutability":"mutable","name":"share","nameLocation":"9918:5:15","nodeType":"VariableDeclaration","scope":3096,"src":"9910:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2887,"name":"uint256","nodeType":"ElementaryTypeName","src":"9910:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2895,"initialValue":{"arguments":[{"arguments":[{"id":2892,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"9944:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Pool_$4118","typeString":"contract BaluniV1Pool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniV1Pool_$4118","typeString":"contract BaluniV1Pool"}],"id":2891,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9936:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2890,"name":"address","nodeType":"ElementaryTypeName","src":"9936:7:15","typeDescriptions":{}}},"id":2893,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9936:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2889,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1237,"src":"9926:9:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":2894,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9926:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9910:40:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2897,"name":"share","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2888,"src":"9967:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2898,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9975:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9967:9:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5368617265206d7573742062652067726561746572207468616e2030","id":2900,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9978:30:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_37b2136db8906a0fa9dcfb36fa22f3e5724d70ae1dfd30e29853723b16bc684b","typeString":"literal_string \"Share must be greater than 0\""},"value":"Share must be greater than 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_37b2136db8906a0fa9dcfb36fa22f3e5724d70ae1dfd30e29853723b16bc684b","typeString":"literal_string \"Share must be greater than 0\""}],"id":2896,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9959:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2901,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9959:50:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2902,"nodeType":"ExpressionStatement","src":"9959:50:15"},{"assignments":[2904],"declarations":[{"constant":false,"id":2904,"mutability":"mutable","name":"totalSupply","nameLocation":"10024:11:15","nodeType":"VariableDeclaration","scope":3096,"src":"10016:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2903,"name":"uint256","nodeType":"ElementaryTypeName","src":"10016:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2907,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2905,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1224,"src":"10038:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":2906,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10038:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10016:35:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2909,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2904,"src":"10068:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2910,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10082:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10068:15:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f206c6971756964697479","id":2912,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10085:14:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_379a432f00aa43993bfbf4e01492a8eab5138dcd2e395864ede728644390fc31","typeString":"literal_string \"No liquidity\""},"value":"No liquidity"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_379a432f00aa43993bfbf4e01492a8eab5138dcd2e395864ede728644390fc31","typeString":"literal_string \"No liquidity\""}],"id":2908,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10060:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2913,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10060:40:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2914,"nodeType":"ExpressionStatement","src":"10060:40:15"},{"assignments":[2919],"declarations":[{"constant":false,"id":2919,"mutability":"mutable","name":"amounts","nameLocation":"10124:7:15","nodeType":"VariableDeclaration","scope":3096,"src":"10107:24:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2917,"name":"uint256","nodeType":"ElementaryTypeName","src":"10107:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2918,"nodeType":"ArrayTypeName","src":"10107:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":2926,"initialValue":{"arguments":[{"expression":{"id":2923,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2235,"src":"10148:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2255_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":2924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10159:6:15","memberName":"length","nodeType":"MemberAccess","src":"10148:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2922,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"10134:13:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":2920,"name":"uint256","nodeType":"ElementaryTypeName","src":"10138:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2921,"nodeType":"ArrayTypeName","src":"10138:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":2925,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10134:32:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"10107:59:15"},{"assignments":[2928],"declarations":[{"constant":false,"id":2928,"mutability":"mutable","name":"fee","nameLocation":"10183:3:15","nodeType":"VariableDeclaration","scope":3096,"src":"10175:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2927,"name":"uint256","nodeType":"ElementaryTypeName","src":"10175:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2935,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2929,"name":"share","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2888,"src":"10190:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2930,"name":"SWAP_FEE_BPS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2244,"src":"10198:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10190:20:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2932,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10189:22:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3130303030","id":2933,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10214:5:15","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"src":"10189:30:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10175:44:15"},{"assignments":[2937],"declarations":[{"constant":false,"id":2937,"mutability":"mutable","name":"shareAfterFee","nameLocation":"10234:13:15","nodeType":"VariableDeclaration","scope":3096,"src":"10226:21:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2936,"name":"uint256","nodeType":"ElementaryTypeName","src":"10226:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2941,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2938,"name":"share","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2888,"src":"10250:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2939,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2928,"src":"10258:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10250:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10226:35:15"},{"body":{"id":2979,"nodeType":"Block","src":"10318:158:15","statements":[{"assignments":[2954],"declarations":[{"constant":false,"id":2954,"mutability":"mutable","name":"assetBalance","nameLocation":"10335:12:15","nodeType":"VariableDeclaration","scope":2979,"src":"10327:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2953,"name":"uint256","nodeType":"ElementaryTypeName","src":"10327:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2967,"initialValue":{"arguments":[{"arguments":[{"id":2964,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"10396:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Pool_$4118","typeString":"contract BaluniV1Pool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniV1Pool_$4118","typeString":"contract BaluniV1Pool"}],"id":2963,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10388:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2962,"name":"address","nodeType":"ElementaryTypeName","src":"10388:7:15","typeDescriptions":{}}},"id":2965,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10388:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"expression":{"baseExpression":{"id":2956,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2235,"src":"10357:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2255_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":2958,"indexExpression":{"id":2957,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2943,"src":"10368:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10357:13:15","typeDescriptions":{"typeIdentifier":"t_struct$_AssetInfo_$2255_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref"}},"id":2959,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10371:5:15","memberName":"asset","nodeType":"MemberAccess","referencedDeclaration":2252,"src":"10357:19:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2955,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1729,"src":"10350:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1729_$","typeString":"type(contract IERC20)"}},"id":2960,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10350:27:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"}},"id":2961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10378:9:15","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":1686,"src":"10350:37:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":2966,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10350:52:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10327:75:15"},{"expression":{"id":2977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2968,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2919,"src":"10411:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2970,"indexExpression":{"id":2969,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2943,"src":"10419:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10411:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2971,"name":"assetBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2954,"src":"10425:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2972,"name":"shareAfterFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2937,"src":"10440:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10425:28:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2974,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10424:30:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2975,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2904,"src":"10457:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10424:44:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10411:57:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2978,"nodeType":"ExpressionStatement","src":"10411:57:15"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2946,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2943,"src":"10290:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2947,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2235,"src":"10294:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2255_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":2948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10305:6:15","memberName":"length","nodeType":"MemberAccess","src":"10294:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10290:21:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2980,"initializationExpression":{"assignments":[2943],"declarations":[{"constant":false,"id":2943,"mutability":"mutable","name":"i","nameLocation":"10283:1:15","nodeType":"VariableDeclaration","scope":2980,"src":"10275:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2942,"name":"uint256","nodeType":"ElementaryTypeName","src":"10275:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2945,"initialValue":{"hexValue":"30","id":2944,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10287:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10275:13:15"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":2951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10313:3:15","subExpression":{"id":2950,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2943,"src":"10313:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2952,"nodeType":"ExpressionStatement","src":"10313:3:15"},"nodeType":"ForStatement","src":"10270:206:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2985,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"10510:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Pool_$4118","typeString":"contract BaluniV1Pool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniV1Pool_$4118","typeString":"contract BaluniV1Pool"}],"id":2984,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10502:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2983,"name":"address","nodeType":"ElementaryTypeName","src":"10502:7:15","typeDescriptions":{}}},"id":2986,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10502:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2982,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1237,"src":"10492:9:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":2987,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10492:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2988,"name":"shareAfterFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2937,"src":"10520:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10492:41:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e74206c6971756964697479","id":2990,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10535:24:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_36435f17e62e176b853e8c37716e51b74bf692c7f7df8628db24bf070e8367ad","typeString":"literal_string \"Insufficient liquidity\""},"value":"Insufficient liquidity"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_36435f17e62e176b853e8c37716e51b74bf692c7f7df8628db24bf070e8367ad","typeString":"literal_string \"Insufficient liquidity\""}],"id":2981,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10484:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2991,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10484:76:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2992,"nodeType":"ExpressionStatement","src":"10484:76:15"},{"assignments":[2994],"declarations":[{"constant":false,"id":2994,"mutability":"mutable","name":"feeTransferSuccess","nameLocation":"10574:18:15","nodeType":"VariableDeclaration","scope":3096,"src":"10569:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2993,"name":"bool","nodeType":"ElementaryTypeName","src":"10569:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3007,"initialValue":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3002,"name":"rebalancer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2231,"src":"10626:10:15","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Rebalancer_$5766","typeString":"contract IBaluniV1Rebalancer"}},"id":3003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10637:11:15","memberName":"getTreasury","nodeType":"MemberAccess","referencedDeclaration":5734,"src":"10626:22:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":3004,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10626:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3005,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2928,"src":"10652:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"arguments":[{"id":2998,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"10610:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Pool_$4118","typeString":"contract BaluniV1Pool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniV1Pool_$4118","typeString":"contract BaluniV1Pool"}],"id":2997,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10602:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2996,"name":"address","nodeType":"ElementaryTypeName","src":"10602:7:15","typeDescriptions":{}}},"id":2999,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10602:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2995,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1729,"src":"10595:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1729_$","typeString":"type(contract IERC20)"}},"id":3000,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10595:21:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"}},"id":3001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10617:8:15","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":1696,"src":"10595:30:15","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":3006,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10595:61:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"10569:87:15"},{"expression":{"arguments":[{"id":3009,"name":"feeTransferSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2994,"src":"10671:18:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"466565207472616e73666572206661696c6564","id":3010,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10691:21:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_5ce83e457e48ac9624285a3c527b5c2f9ccbef788eaf8b73a2271dc0a760bc56","typeString":"literal_string \"Fee transfer failed\""},"value":"Fee transfer failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5ce83e457e48ac9624285a3c527b5c2f9ccbef788eaf8b73a2271dc0a760bc56","typeString":"literal_string \"Fee transfer failed\""}],"id":3008,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10663:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3011,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10663:50:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3012,"nodeType":"ExpressionStatement","src":"10663:50:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":3017,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"10748:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Pool_$4118","typeString":"contract BaluniV1Pool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniV1Pool_$4118","typeString":"contract BaluniV1Pool"}],"id":3016,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10740:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3015,"name":"address","nodeType":"ElementaryTypeName","src":"10740:7:15","typeDescriptions":{}}},"id":3018,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10740:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3014,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1237,"src":"10730:9:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":3019,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10730:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":3020,"name":"shareAfterFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2937,"src":"10758:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10730:41:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e74206c6971756964697479","id":3022,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10773:24:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_36435f17e62e176b853e8c37716e51b74bf692c7f7df8628db24bf070e8367ad","typeString":"literal_string \"Insufficient liquidity\""},"value":"Insufficient liquidity"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_36435f17e62e176b853e8c37716e51b74bf692c7f7df8628db24bf070e8367ad","typeString":"literal_string \"Insufficient liquidity\""}],"id":3013,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10722:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3023,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10722:76:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3024,"nodeType":"ExpressionStatement","src":"10722:76:15"},{"expression":{"arguments":[{"arguments":[{"id":3028,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"10819:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Pool_$4118","typeString":"contract BaluniV1Pool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniV1Pool_$4118","typeString":"contract BaluniV1Pool"}],"id":3027,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10811:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3026,"name":"address","nodeType":"ElementaryTypeName","src":"10811:7:15","typeDescriptions":{}}},"id":3029,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10811:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3030,"name":"shareAfterFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2937,"src":"10826:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3025,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1524,"src":"10805:5:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":3031,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10805:35:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3032,"nodeType":"ExpressionStatement","src":"10805:35:15"},{"body":{"id":3084,"nodeType":"Block","src":"10897:270:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":3054,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"10960:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Pool_$4118","typeString":"contract BaluniV1Pool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniV1Pool_$4118","typeString":"contract BaluniV1Pool"}],"id":3053,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10952:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3052,"name":"address","nodeType":"ElementaryTypeName","src":"10952:7:15","typeDescriptions":{}}},"id":3055,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10952:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"expression":{"baseExpression":{"id":3046,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2235,"src":"10921:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2255_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3048,"indexExpression":{"id":3047,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3034,"src":"10932:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10921:13:15","typeDescriptions":{"typeIdentifier":"t_struct$_AssetInfo_$2255_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref"}},"id":3049,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10935:5:15","memberName":"asset","nodeType":"MemberAccess","referencedDeclaration":2252,"src":"10921:19:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3045,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1729,"src":"10914:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1729_$","typeString":"type(contract IERC20)"}},"id":3050,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10914:27:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"}},"id":3051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10942:9:15","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":1686,"src":"10914:37:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":3056,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10914:52:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"baseExpression":{"id":3057,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2919,"src":"10970:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3059,"indexExpression":{"id":3058,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3034,"src":"10978:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10970:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10914:66:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e74204c6971756964697479","id":3061,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10982:24:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_85d32796faf4bbe37cfdb7e983d4048fee52ebcfc8d2f22a939ce47e85d98ae8","typeString":"literal_string \"Insufficient Liquidity\""},"value":"Insufficient Liquidity"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_85d32796faf4bbe37cfdb7e983d4048fee52ebcfc8d2f22a939ce47e85d98ae8","typeString":"literal_string \"Insufficient Liquidity\""}],"id":3044,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10906:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3062,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10906:101:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3063,"nodeType":"ExpressionStatement","src":"10906:101:15"},{"assignments":[3065],"declarations":[{"constant":false,"id":3065,"mutability":"mutable","name":"assetTransferSuccess","nameLocation":"11021:20:15","nodeType":"VariableDeclaration","scope":3084,"src":"11016:25:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3064,"name":"bool","nodeType":"ElementaryTypeName","src":"11016:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3078,"initialValue":{"arguments":[{"id":3073,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2882,"src":"11081:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":3074,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2919,"src":"11085:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3076,"indexExpression":{"id":3075,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3034,"src":"11093:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11085:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"expression":{"baseExpression":{"id":3067,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2235,"src":"11051:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2255_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3069,"indexExpression":{"id":3068,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3034,"src":"11062:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11051:13:15","typeDescriptions":{"typeIdentifier":"t_struct$_AssetInfo_$2255_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref"}},"id":3070,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11065:5:15","memberName":"asset","nodeType":"MemberAccess","referencedDeclaration":2252,"src":"11051:19:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3066,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1729,"src":"11044:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1729_$","typeString":"type(contract IERC20)"}},"id":3071,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11044:27:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"}},"id":3072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11072:8:15","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":1696,"src":"11044:36:15","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":3077,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11044:52:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"11016:80:15"},{"expression":{"arguments":[{"id":3080,"name":"assetTransferSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3065,"src":"11113:20:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4173736574207472616e73666572206661696c6564","id":3081,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11135:23:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_7c814c07c32441cfc9da2a21de4a11134ec9451c699d8fbc5bbba1c5f5bc0385","typeString":"literal_string \"Asset transfer failed\""},"value":"Asset transfer failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7c814c07c32441cfc9da2a21de4a11134ec9451c699d8fbc5bbba1c5f5bc0385","typeString":"literal_string \"Asset transfer failed\""}],"id":3079,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11105:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3082,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11105:54:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3083,"nodeType":"ExpressionStatement","src":"11105:54:15"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3037,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3034,"src":"10869:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3038,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2235,"src":"10873:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2255_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10884:6:15","memberName":"length","nodeType":"MemberAccess","src":"10873:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10869:21:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3085,"initializationExpression":{"assignments":[3034],"declarations":[{"constant":false,"id":3034,"mutability":"mutable","name":"i","nameLocation":"10862:1:15","nodeType":"VariableDeclaration","scope":3085,"src":"10854:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3033,"name":"uint256","nodeType":"ElementaryTypeName","src":"10854:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3036,"initialValue":{"hexValue":"30","id":3035,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10866:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10854:13:15"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10892:3:15","subExpression":{"id":3041,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3034,"src":"10892:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3043,"nodeType":"ExpressionStatement","src":"10892:3:15"},"nodeType":"ForStatement","src":"10849:318:15"},{"expression":{"arguments":[{"id":3087,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2919,"src":"11191:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"hexValue":"66616c7365","id":3088,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11200:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3086,"name":"_updateReserves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3981,"src":"11175:15:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bool_$returns$__$","typeString":"function (uint256[] memory,bool)"}},"id":3089,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11175:31:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3090,"nodeType":"ExpressionStatement","src":"11175:31:15"},{"eventCall":{"arguments":[{"id":3092,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2882,"src":"11225:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3093,"name":"shareAfterFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2937,"src":"11229:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3091,"name":"Burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2275,"src":"11220:4:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":3094,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11220:23:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3095,"nodeType":"EmitStatement","src":"11215:28:15"}]},"documentation":{"id":2880,"nodeType":"StructuredDocumentation","src":"8867:983:15","text":" @dev Burns the pool tokens and transfers the underlying assets to the specified address.\n @param to The address to transfer the underlying assets to.\n @notice This function can only be called by the periphery contract.\n @notice The pool tokens must have a balance greater than 0.\n @notice The total supply of pool tokens must be greater than 0.\n @notice The function calculates the amounts of each underlying asset to transfer based on the share of pool tokens being burned.\n @notice A fee is deducted from the share of pool tokens being burned and transferred to the treasury address.\n @notice The function checks if the pool has sufficient liquidity before performing any transfers.\n @notice If any transfer fails, the function reverts the entire operation.\n @notice After the transfers, the function updates the reserves of the pool.\n @notice Emits a `Burn` event with the address and share of pool tokens burned."},"functionSelector":"89afcb44","id":3097,"implemented":true,"kind":"function","modifiers":[{"id":2885,"kind":"modifierInvocation","modifierName":{"id":2884,"name":"onlyPeriphery","nameLocations":["9889:13:15"],"nodeType":"IdentifierPath","referencedDeclaration":2386,"src":"9889:13:15"},"nodeType":"ModifierInvocation","src":"9889:13:15"}],"name":"burn","nameLocation":"9863:4:15","nodeType":"FunctionDefinition","parameters":{"id":2883,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2882,"mutability":"mutable","name":"to","nameLocation":"9876:2:15","nodeType":"VariableDeclaration","scope":3097,"src":"9868:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2881,"name":"address","nodeType":"ElementaryTypeName","src":"9868:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9867:12:15"},"returnParameters":{"id":2886,"nodeType":"ParameterList","parameters":[],"src":"9903:0:15"},"scope":4118,"src":"9854:1395:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3116,"nodeType":"Block","src":"11736:66:15","statements":[{"expression":{"arguments":[{"id":3111,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3100,"src":"11769:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3112,"name":"toToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3102,"src":"11780:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3113,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3104,"src":"11789:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3109,"name":"rebalancer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2231,"src":"11750:10:15","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Rebalancer_$5766","typeString":"contract IBaluniV1Rebalancer"}},"id":3110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11761:7:15","memberName":"convert","nodeType":"MemberAccess","referencedDeclaration":5765,"src":"11750:18:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,address,uint256) view external returns (uint256)"}},"id":3114,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11750:46:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3108,"id":3115,"nodeType":"Return","src":"11743:53:15"}]},"documentation":{"id":3098,"nodeType":"StructuredDocumentation","src":"11255:373:15","text":" @dev Calculates the amount of `toToken` that will be received when swapping `fromToken` for `toToken`.\n @param fromToken The address of the token being swapped from.\n @param toToken The address of the token being swapped to.\n @param amount The amount of `fromToken` being swapped.\n @return The amount of `toToken` that will be received."},"functionSelector":"4aa06652","id":3117,"implemented":true,"kind":"function","modifiers":[],"name":"getAmountOut","nameLocation":"11641:12:15","nodeType":"FunctionDefinition","parameters":{"id":3105,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3100,"mutability":"mutable","name":"fromToken","nameLocation":"11662:9:15","nodeType":"VariableDeclaration","scope":3117,"src":"11654:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3099,"name":"address","nodeType":"ElementaryTypeName","src":"11654:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3102,"mutability":"mutable","name":"toToken","nameLocation":"11681:7:15","nodeType":"VariableDeclaration","scope":3117,"src":"11673:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3101,"name":"address","nodeType":"ElementaryTypeName","src":"11673:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3104,"mutability":"mutable","name":"amount","nameLocation":"11698:6:15","nodeType":"VariableDeclaration","scope":3117,"src":"11690:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3103,"name":"uint256","nodeType":"ElementaryTypeName","src":"11690:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11653:52:15"},"returnParameters":{"id":3108,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3107,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3117,"src":"11727:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3106,"name":"uint256","nodeType":"ElementaryTypeName","src":"11727:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11726:9:15"},"scope":4118,"src":"11632:170:15","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3151,"nodeType":"Block","src":"12007:236:15","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":3124,"name":"isRebalanceNeeded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4117,"src":"12022:17:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":3125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12022:19:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"526562616c616e6365206e6f74206e6565646564","id":3126,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12043:22:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_e4fcae9c0286e861087281117e0a3185ced905823104b290e1fe3ba826d8d280","typeString":"literal_string \"Rebalance not needed\""},"value":"Rebalance not needed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e4fcae9c0286e861087281117e0a3185ced905823104b290e1fe3ba826d8d280","typeString":"literal_string \"Rebalance not needed\""}],"id":3123,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12014:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3127,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12014:52:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3128,"nodeType":"ExpressionStatement","src":"12014:52:15"},{"assignments":[3130],"declarations":[{"constant":false,"id":3130,"mutability":"mutable","name":"requiredBalance","nameLocation":"12081:15:15","nodeType":"VariableDeclaration","scope":3151,"src":"12073:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3129,"name":"uint256","nodeType":"ElementaryTypeName","src":"12073:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3138,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":3131,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1224,"src":"12100:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":3132,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12100:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"31303030","id":3133,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12116:4:15","typeDescriptions":{"typeIdentifier":"t_rational_1000_by_1","typeString":"int_const 1000"},"value":"1000"},"src":"12100:20:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3135,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12099:22:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3130303030","id":3136,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12124:5:15","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"src":"12099:30:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12073:56:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3141,"name":"_sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3120,"src":"12154:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3140,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1237,"src":"12144:9:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":3142,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12144:18:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":3143,"name":"requiredBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3130,"src":"12166:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12144:37:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"556e646572203525204c50207368617265","id":3145,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12183:19:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_337db1bee78cb19689eccbda3c1f1f90405451dc88a5dc9233123b96d5788182","typeString":"literal_string \"Under 5% LP share\""},"value":"Under 5% LP share"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_337db1bee78cb19689eccbda3c1f1f90405451dc88a5dc9233123b96d5788182","typeString":"literal_string \"Under 5% LP share\""}],"id":3139,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12136:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3146,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12136:67:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3147,"nodeType":"ExpressionStatement","src":"12136:67:15"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3148,"name":"_performRebalanceIfNeeded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3691,"src":"12210:25:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":3149,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12210:27:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3150,"nodeType":"ExpressionStatement","src":"12210:27:15"}]},"documentation":{"id":3118,"nodeType":"StructuredDocumentation","src":"11808:135:15","text":" @dev Performs rebalance if needed based on the LP share of the sender.\n @param _sender The address of the sender."},"functionSelector":"5568081a","id":3152,"implemented":true,"kind":"function","modifiers":[],"name":"performRebalanceIfNeeded","nameLocation":"11956:24:15","nodeType":"FunctionDefinition","parameters":{"id":3121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3120,"mutability":"mutable","name":"_sender","nameLocation":"11989:7:15","nodeType":"VariableDeclaration","scope":3152,"src":"11981:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3119,"name":"address","nodeType":"ElementaryTypeName","src":"11981:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"11980:17:15"},"returnParameters":{"id":3122,"nodeType":"ParameterList","parameters":[],"src":"12007:0:15"},"scope":4118,"src":"11947:296:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3259,"nodeType":"Block","src":"12618:672:15","statements":[{"assignments":[3163,3166],"declarations":[{"constant":false,"id":3163,"mutability":"mutable","name":"totVal","nameLocation":"12634:6:15","nodeType":"VariableDeclaration","scope":3259,"src":"12626:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3162,"name":"uint256","nodeType":"ElementaryTypeName","src":"12626:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3166,"mutability":"mutable","name":"valuations","nameLocation":"12659:10:15","nodeType":"VariableDeclaration","scope":3259,"src":"12642:27:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3164,"name":"uint256","nodeType":"ElementaryTypeName","src":"12642:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3165,"nodeType":"ArrayTypeName","src":"12642:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":3169,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":3167,"name":"_computeTotalValuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3599,"src":"12673:22:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function () view returns (uint256,uint256[] memory)"}},"id":3168,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12673:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256,uint256[] memory)"}},"nodeType":"VariableDeclarationStatement","src":"12625:72:15"},{"assignments":[3171],"declarations":[{"constant":false,"id":3171,"mutability":"mutable","name":"numAssets","nameLocation":"12712:9:15","nodeType":"VariableDeclaration","scope":3259,"src":"12704:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3170,"name":"uint256","nodeType":"ElementaryTypeName","src":"12704:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3174,"initialValue":{"expression":{"id":3172,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2235,"src":"12724:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2255_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12735:6:15","memberName":"length","nodeType":"MemberAccess","src":"12724:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12704:37:15"},{"expression":{"id":3181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3175,"name":"directions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3157,"src":"12750:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3179,"name":"numAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3171,"src":"12774:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3178,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"12763:10:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bool_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bool[] memory)"},"typeName":{"baseType":{"id":3176,"name":"bool","nodeType":"ElementaryTypeName","src":"12767:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3177,"nodeType":"ArrayTypeName","src":"12767:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}}},"id":3180,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12763:21:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"src":"12750:34:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"id":3182,"nodeType":"ExpressionStatement","src":"12750:34:15"},{"expression":{"id":3189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3183,"name":"deviations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3160,"src":"12791:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3187,"name":"numAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3171,"src":"12818:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3186,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"12804:13:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":3184,"name":"uint256","nodeType":"ElementaryTypeName","src":"12808:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3185,"nodeType":"ArrayTypeName","src":"12808:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":3188,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12804:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"src":"12791:37:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3190,"nodeType":"ExpressionStatement","src":"12791:37:15"},{"body":{"id":3253,"nodeType":"Block","src":"12877:368:15","statements":[{"assignments":[3202],"declarations":[{"constant":false,"id":3202,"mutability":"mutable","name":"currentWeight","nameLocation":"12894:13:15","nodeType":"VariableDeclaration","scope":3253,"src":"12886:21:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3201,"name":"uint256","nodeType":"ElementaryTypeName","src":"12886:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3211,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":3203,"name":"valuations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3166,"src":"12911:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3205,"indexExpression":{"id":3204,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3192,"src":"12922:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12911:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3130303030","id":3206,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12927:5:15","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"src":"12911:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3208,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12910:23:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3209,"name":"totVal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3163,"src":"12936:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12910:32:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12886:56:15"},{"assignments":[3213],"declarations":[{"constant":false,"id":3213,"mutability":"mutable","name":"targetWeight","nameLocation":"12959:12:15","nodeType":"VariableDeclaration","scope":3253,"src":"12951:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3212,"name":"uint256","nodeType":"ElementaryTypeName","src":"12951:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3218,"initialValue":{"expression":{"baseExpression":{"id":3214,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2235,"src":"12974:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2255_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3216,"indexExpression":{"id":3215,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3192,"src":"12985:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12974:13:15","typeDescriptions":{"typeIdentifier":"t_struct$_AssetInfo_$2255_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref"}},"id":3217,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12988:6:15","memberName":"weight","nodeType":"MemberAccess","referencedDeclaration":2254,"src":"12974:20:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12951:43:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3219,"name":"currentWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3202,"src":"13009:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3220,"name":"targetWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3213,"src":"13025:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13009:28:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3251,"nodeType":"Block","src":"13141:97:15","statements":[{"expression":{"id":3243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3237,"name":"deviations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3160,"src":"13152:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3239,"indexExpression":{"id":3238,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3192,"src":"13163:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13152:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3240,"name":"targetWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3213,"src":"13168:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3241,"name":"currentWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3202,"src":"13183:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13168:28:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13152:44:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3244,"nodeType":"ExpressionStatement","src":"13152:44:15"},{"expression":{"id":3249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3245,"name":"directions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3157,"src":"13207:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"id":3247,"indexExpression":{"id":3246,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3192,"src":"13218:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13207:13:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":3248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13223:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"13207:21:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3250,"nodeType":"ExpressionStatement","src":"13207:21:15"}]},"id":3252,"nodeType":"IfStatement","src":"13005:233:15","trueBody":{"id":3236,"nodeType":"Block","src":"13039:96:15","statements":[{"expression":{"id":3228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3222,"name":"deviations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3160,"src":"13050:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3224,"indexExpression":{"id":3223,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3192,"src":"13061:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13050:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3225,"name":"currentWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3202,"src":"13066:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3226,"name":"targetWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3213,"src":"13082:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13066:28:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13050:44:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3229,"nodeType":"ExpressionStatement","src":"13050:44:15"},{"expression":{"id":3234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3230,"name":"directions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3157,"src":"13105:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"id":3232,"indexExpression":{"id":3231,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3192,"src":"13116:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13105:13:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":3233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13121:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"13105:20:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3235,"nodeType":"ExpressionStatement","src":"13105:20:15"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3195,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3192,"src":"12857:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3196,"name":"numAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3171,"src":"12861:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12857:13:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3254,"initializationExpression":{"assignments":[3192],"declarations":[{"constant":false,"id":3192,"mutability":"mutable","name":"i","nameLocation":"12850:1:15","nodeType":"VariableDeclaration","scope":3254,"src":"12842:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3191,"name":"uint256","nodeType":"ElementaryTypeName","src":"12842:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3194,"initialValue":{"hexValue":"30","id":3193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12854:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12842:13:15"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"12872:3:15","subExpression":{"id":3198,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3192,"src":"12872:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3200,"nodeType":"ExpressionStatement","src":"12872:3:15"},"nodeType":"ForStatement","src":"12837:408:15"},{"expression":{"components":[{"id":3255,"name":"directions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3157,"src":"13261:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},{"id":3256,"name":"deviations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3160,"src":"13273:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"id":3257,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13260:24:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_bool_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(bool[] memory,uint256[] memory)"}},"functionReturnParameters":3161,"id":3258,"nodeType":"Return","src":"13253:31:15"}]},"documentation":{"id":3153,"nodeType":"StructuredDocumentation","src":"12249:265:15","text":" @dev Returns the deviation between the current weights and target weights of the assets in the pool.\n @return directions An array of boolean values indicating whether the current weight is higher (true) or lower (false) than the target weight."},"functionSelector":"89ab3532","id":3260,"implemented":true,"kind":"function","modifiers":[],"name":"getDeviation","nameLocation":"12527:12:15","nodeType":"FunctionDefinition","parameters":{"id":3154,"nodeType":"ParameterList","parameters":[],"src":"12539:2:15"},"returnParameters":{"id":3161,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3157,"mutability":"mutable","name":"directions","nameLocation":"12577:10:15","nodeType":"VariableDeclaration","scope":3260,"src":"12563:24:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":3155,"name":"bool","nodeType":"ElementaryTypeName","src":"12563:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3156,"nodeType":"ArrayTypeName","src":"12563:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":3160,"mutability":"mutable","name":"deviations","nameLocation":"12606:10:15","nodeType":"VariableDeclaration","scope":3260,"src":"12589:27:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3158,"name":"uint256","nodeType":"ElementaryTypeName","src":"12589:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3159,"nodeType":"ArrayTypeName","src":"12589:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"12562:55:15"},"scope":4118,"src":"12518:772:15","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3288,"nodeType":"Block","src":"13542:185:15","statements":[{"assignments":[null,3272],"declarations":[null,{"constant":false,"id":3272,"mutability":"mutable","name":"usdValuations","nameLocation":"13569:13:15","nodeType":"VariableDeclaration","scope":3288,"src":"13552:30:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3270,"name":"uint256","nodeType":"ElementaryTypeName","src":"13552:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3271,"nodeType":"ArrayTypeName","src":"13552:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":3275,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":3273,"name":"_computeTotalValuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3599,"src":"13586:22:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function () view returns (uint256,uint256[] memory)"}},"id":3274,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13586:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256,uint256[] memory)"}},"nodeType":"VariableDeclarationStatement","src":"13549:61:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3277,"name":"assetIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3263,"src":"13625:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3278,"name":"usdValuations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3272,"src":"13638:13:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13652:6:15","memberName":"length","nodeType":"MemberAccess","src":"13638:20:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13625:33:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420617373657420696e646578","id":3281,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13660:21:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_f8b105b0b4a7ff5c11f41135d6d4600fd47da6168663f6cb1810745b08d83918","typeString":"literal_string \"Invalid asset index\""},"value":"Invalid asset index"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f8b105b0b4a7ff5c11f41135d6d4600fd47da6168663f6cb1810745b08d83918","typeString":"literal_string \"Invalid asset index\""}],"id":3276,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13617:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3282,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13617:65:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3283,"nodeType":"ExpressionStatement","src":"13617:65:15"},{"expression":{"baseExpression":{"id":3284,"name":"usdValuations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3272,"src":"13696:13:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3286,"indexExpression":{"id":3285,"name":"assetIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3263,"src":"13710:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13696:25:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3267,"id":3287,"nodeType":"Return","src":"13689:32:15"}]},"documentation":{"id":3261,"nodeType":"StructuredDocumentation","src":"13296:166:15","text":" @dev Returns the liquidity of a specific asset in the pool.\n @param assetIndex The index of the asset.\n @return The liquidity of the asset."},"functionSelector":"cf8fa764","id":3289,"implemented":true,"kind":"function","modifiers":[],"name":"assetLiquidity","nameLocation":"13475:14:15","nodeType":"FunctionDefinition","parameters":{"id":3264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3263,"mutability":"mutable","name":"assetIndex","nameLocation":"13498:10:15","nodeType":"VariableDeclaration","scope":3289,"src":"13490:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3262,"name":"uint256","nodeType":"ElementaryTypeName","src":"13490:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13489:20:15"},"returnParameters":{"id":3267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3266,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3289,"src":"13533:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3265,"name":"uint256","nodeType":"ElementaryTypeName","src":"13533:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13532:9:15"},"scope":4118,"src":"13466:261:15","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":3309,"nodeType":"Block","src":"14089:98:15","statements":[{"expression":{"id":3303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":3298,"name":"totalVal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3293,"src":"14097:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3299,"name":"valuations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3296,"src":"14107:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"id":3300,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"14096:22:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256,uint256[] memory)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"id":3301,"name":"_computeTotalValuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3599,"src":"14121:22:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function () view returns (uint256,uint256[] memory)"}},"id":3302,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14121:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256,uint256[] memory)"}},"src":"14096:49:15","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3304,"nodeType":"ExpressionStatement","src":"14096:49:15"},{"expression":{"components":[{"id":3305,"name":"totalVal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3293,"src":"14160:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3306,"name":"valuations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3296,"src":"14170:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"id":3307,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14159:22:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256,uint256[] memory)"}},"functionReturnParameters":3297,"id":3308,"nodeType":"Return","src":"14152:29:15"}]},"documentation":{"id":3290,"nodeType":"StructuredDocumentation","src":"13733:249:15","text":" @dev Computes the total valuation of the pool and returns the total valuation and an array of individual valuations.\n @return totalVal The total valuation of the pool.\n @return valuations An array of individual valuations."},"functionSelector":"36bf6e39","id":3310,"implemented":true,"kind":"function","modifiers":[],"name":"computeTotalValuation","nameLocation":"13995:21:15","nodeType":"FunctionDefinition","parameters":{"id":3291,"nodeType":"ParameterList","parameters":[],"src":"14016:2:15"},"returnParameters":{"id":3297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3293,"mutability":"mutable","name":"totalVal","nameLocation":"14050:8:15","nodeType":"VariableDeclaration","scope":3310,"src":"14042:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3292,"name":"uint256","nodeType":"ElementaryTypeName","src":"14042:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3296,"mutability":"mutable","name":"valuations","nameLocation":"14077:10:15","nodeType":"VariableDeclaration","scope":3310,"src":"14060:27:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3294,"name":"uint256","nodeType":"ElementaryTypeName","src":"14060:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3295,"nodeType":"ArrayTypeName","src":"14060:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"14041:47:15"},"scope":4118,"src":"13986:201:15","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":3323,"nodeType":"Block","src":"14359:82:15","statements":[{"assignments":[3317,null],"declarations":[{"constant":false,"id":3317,"mutability":"mutable","name":"totalVal","nameLocation":"14375:8:15","nodeType":"VariableDeclaration","scope":3323,"src":"14367:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3316,"name":"uint256","nodeType":"ElementaryTypeName","src":"14367:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},null],"id":3320,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":3318,"name":"_computeTotalValuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3599,"src":"14389:22:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function () view returns (uint256,uint256[] memory)"}},"id":3319,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14389:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256,uint256[] memory)"}},"nodeType":"VariableDeclarationStatement","src":"14366:47:15"},{"expression":{"id":3321,"name":"totalVal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3317,"src":"14427:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3315,"id":3322,"nodeType":"Return","src":"14420:15:15"}]},"documentation":{"id":3311,"nodeType":"StructuredDocumentation","src":"14193:109:15","text":" @dev Returns the total liquidity of the pool.\n @return The total liquidity of the pool."},"functionSelector":"1a686502","id":3324,"implemented":true,"kind":"function","modifiers":[],"name":"liquidity","nameLocation":"14315:9:15","nodeType":"FunctionDefinition","parameters":{"id":3312,"nodeType":"ParameterList","parameters":[],"src":"14324:2:15"},"returnParameters":{"id":3315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3314,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3324,"src":"14350:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3313,"name":"uint256","nodeType":"ElementaryTypeName","src":"14350:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14349:9:15"},"scope":4118,"src":"14306:135:15","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":3354,"nodeType":"Block","src":"14603:199:15","statements":[{"assignments":[3331,null],"declarations":[{"constant":false,"id":3331,"mutability":"mutable","name":"totalVal","nameLocation":"14619:8:15","nodeType":"VariableDeclaration","scope":3354,"src":"14611:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3330,"name":"uint256","nodeType":"ElementaryTypeName","src":"14611:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},null],"id":3334,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":3332,"name":"_computeTotalValuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3599,"src":"14633:22:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function () view returns (uint256,uint256[] memory)"}},"id":3333,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14633:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256,uint256[] memory)"}},"nodeType":"VariableDeclarationStatement","src":"14610:47:15"},{"assignments":[3336],"declarations":[{"constant":false,"id":3336,"mutability":"mutable","name":"totalSupply","nameLocation":"14672:11:15","nodeType":"VariableDeclaration","scope":3354,"src":"14664:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3335,"name":"uint256","nodeType":"ElementaryTypeName","src":"14664:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3339,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":3337,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1224,"src":"14686:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":3338,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14686:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"14664:35:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3340,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3336,"src":"14710:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14725:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14710:16:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3346,"nodeType":"IfStatement","src":"14706:47:15","trueBody":{"id":3345,"nodeType":"Block","src":"14728:25:15","statements":[{"expression":{"hexValue":"30","id":3343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14744:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3329,"id":3344,"nodeType":"Return","src":"14737:8:15"}]}},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3347,"name":"totalVal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3331,"src":"14767:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3348,"name":"ONE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2239,"src":"14778:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14767:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3350,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14766:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3351,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3336,"src":"14785:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14766:30:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3329,"id":3353,"nodeType":"Return","src":"14759:37:15"}]},"documentation":{"id":3325,"nodeType":"StructuredDocumentation","src":"14447:99:15","text":" @dev Returns the unit price of the pool.\n @return The unit price of the pool."},"functionSelector":"e73faa2d","id":3355,"implemented":true,"kind":"function","modifiers":[],"name":"unitPrice","nameLocation":"14559:9:15","nodeType":"FunctionDefinition","parameters":{"id":3326,"nodeType":"ParameterList","parameters":[],"src":"14568:2:15"},"returnParameters":{"id":3329,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3328,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3355,"src":"14594:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3327,"name":"uint256","nodeType":"ElementaryTypeName","src":"14594:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14593:9:15"},"scope":4118,"src":"14550:252:15","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":3400,"nodeType":"Block","src":"14988:212:15","statements":[{"assignments":[3366],"declarations":[{"constant":false,"id":3366,"mutability":"mutable","name":"_reserves","nameLocation":"15012:9:15","nodeType":"VariableDeclaration","scope":3400,"src":"14995:26:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3364,"name":"uint256","nodeType":"ElementaryTypeName","src":"14995:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3365,"nodeType":"ArrayTypeName","src":"14995:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":3373,"initialValue":{"arguments":[{"expression":{"id":3370,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2235,"src":"15038:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2255_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15049:6:15","memberName":"length","nodeType":"MemberAccess","src":"15038:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3369,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"15024:13:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":3367,"name":"uint256","nodeType":"ElementaryTypeName","src":"15028:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3368,"nodeType":"ArrayTypeName","src":"15028:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":3372,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15024:32:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"14995:61:15"},{"body":{"id":3396,"nodeType":"Block","src":"15111:61:15","statements":[{"expression":{"id":3394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3385,"name":"_reserves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3366,"src":"15120:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3387,"indexExpression":{"id":3386,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3375,"src":"15130:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15120:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":3388,"name":"reserves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2250,"src":"15135:8:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3393,"indexExpression":{"expression":{"baseExpression":{"id":3389,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2235,"src":"15144:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2255_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3391,"indexExpression":{"id":3390,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3375,"src":"15155:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15144:13:15","typeDescriptions":{"typeIdentifier":"t_struct$_AssetInfo_$2255_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref"}},"id":3392,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15158:5:15","memberName":"asset","nodeType":"MemberAccess","referencedDeclaration":2252,"src":"15144:19:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15135:29:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15120:44:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3395,"nodeType":"ExpressionStatement","src":"15120:44:15"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3378,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3375,"src":"15083:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3379,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2235,"src":"15087:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2255_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15098:6:15","memberName":"length","nodeType":"MemberAccess","src":"15087:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15083:21:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3397,"initializationExpression":{"assignments":[3375],"declarations":[{"constant":false,"id":3375,"mutability":"mutable","name":"i","nameLocation":"15076:1:15","nodeType":"VariableDeclaration","scope":3397,"src":"15068:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3374,"name":"uint256","nodeType":"ElementaryTypeName","src":"15068:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3377,"initialValue":{"hexValue":"30","id":3376,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15080:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"15068:13:15"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"15106:3:15","subExpression":{"id":3382,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3375,"src":"15106:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3384,"nodeType":"ExpressionStatement","src":"15106:3:15"},"nodeType":"ForStatement","src":"15063:109:15"},{"expression":{"id":3398,"name":"_reserves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3366,"src":"15185:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":3361,"id":3399,"nodeType":"Return","src":"15178:16:15"}]},"documentation":{"id":3356,"nodeType":"StructuredDocumentation","src":"14808:114:15","text":" @dev Returns an array of reserves for each asset in the pool.\n @return An array of reserves."},"functionSelector":"0902f1ac","id":3401,"implemented":true,"kind":"function","modifiers":[],"name":"getReserves","nameLocation":"14935:11:15","nodeType":"FunctionDefinition","parameters":{"id":3357,"nodeType":"ParameterList","parameters":[],"src":"14946:2:15"},"returnParameters":{"id":3361,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3360,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3401,"src":"14970:16:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3358,"name":"uint256","nodeType":"ElementaryTypeName","src":"14970:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3359,"nodeType":"ArrayTypeName","src":"14970:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"14969:18:15"},"scope":4118,"src":"14926:274:15","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3413,"nodeType":"Block","src":"15444:35:15","statements":[{"expression":{"baseExpression":{"id":3409,"name":"reserves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2250,"src":"15458:8:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3411,"indexExpression":{"id":3410,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3404,"src":"15467:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15458:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3408,"id":3412,"nodeType":"Return","src":"15451:22:15"}]},"documentation":{"id":3402,"nodeType":"StructuredDocumentation","src":"15206:164:15","text":" @dev Returns the reserve amount of the specified asset.\n @param asset The address of the asset.\n @return The reserve amount of the asset."},"functionSelector":"b2b55d70","id":3414,"implemented":true,"kind":"function","modifiers":[],"name":"getAssetReserve","nameLocation":"15383:15:15","nodeType":"FunctionDefinition","parameters":{"id":3405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3404,"mutability":"mutable","name":"asset","nameLocation":"15407:5:15","nodeType":"VariableDeclaration","scope":3414,"src":"15399:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3403,"name":"address","nodeType":"ElementaryTypeName","src":"15399:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"15398:15:15"},"returnParameters":{"id":3408,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3407,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3414,"src":"15435:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3406,"name":"uint256","nodeType":"ElementaryTypeName","src":"15435:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15434:9:15"},"scope":4118,"src":"15374:105:15","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3457,"nodeType":"Block","src":"15675:193:15","statements":[{"assignments":[3425],"declarations":[{"constant":false,"id":3425,"mutability":"mutable","name":"assets","nameLocation":"15699:6:15","nodeType":"VariableDeclaration","scope":3457,"src":"15682:23:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3423,"name":"address","nodeType":"ElementaryTypeName","src":"15682:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3424,"nodeType":"ArrayTypeName","src":"15682:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":3432,"initialValue":{"arguments":[{"expression":{"id":3429,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2235,"src":"15722:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2255_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15733:6:15","memberName":"length","nodeType":"MemberAccess","src":"15722:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3428,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"15708:13:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address[] memory)"},"typeName":{"baseType":{"id":3426,"name":"address","nodeType":"ElementaryTypeName","src":"15712:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3427,"nodeType":"ArrayTypeName","src":"15712:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"id":3431,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15708:32:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"15682:58:15"},{"body":{"id":3453,"nodeType":"Block","src":"15795:48:15","statements":[{"expression":{"id":3451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3444,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3425,"src":"15804:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":3446,"indexExpression":{"id":3445,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3434,"src":"15811:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15804:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":3447,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2235,"src":"15816:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2255_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3449,"indexExpression":{"id":3448,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3434,"src":"15827:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15816:13:15","typeDescriptions":{"typeIdentifier":"t_struct$_AssetInfo_$2255_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref"}},"id":3450,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15830:5:15","memberName":"asset","nodeType":"MemberAccess","referencedDeclaration":2252,"src":"15816:19:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15804:31:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3452,"nodeType":"ExpressionStatement","src":"15804:31:15"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3437,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3434,"src":"15767:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3438,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2235,"src":"15771:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2255_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15782:6:15","memberName":"length","nodeType":"MemberAccess","src":"15771:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15767:21:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3454,"initializationExpression":{"assignments":[3434],"declarations":[{"constant":false,"id":3434,"mutability":"mutable","name":"i","nameLocation":"15760:1:15","nodeType":"VariableDeclaration","scope":3454,"src":"15752:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3433,"name":"uint256","nodeType":"ElementaryTypeName","src":"15752:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3436,"initialValue":{"hexValue":"30","id":3435,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15764:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"15752:13:15"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"15790:3:15","subExpression":{"id":3441,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3434,"src":"15790:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3443,"nodeType":"ExpressionStatement","src":"15790:3:15"},"nodeType":"ForStatement","src":"15747:96:15"},{"expression":{"id":3455,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3425,"src":"15856:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":3420,"id":3456,"nodeType":"Return","src":"15849:13:15"}]},"documentation":{"id":3415,"nodeType":"StructuredDocumentation","src":"15485:124:15","text":" @dev Retrieves the list of assets in the pool.\n @return An array of addresses representing the assets."},"functionSelector":"67e4ac2c","id":3458,"implemented":true,"kind":"function","modifiers":[],"name":"getAssets","nameLocation":"15622:9:15","nodeType":"FunctionDefinition","parameters":{"id":3416,"nodeType":"ParameterList","parameters":[],"src":"15631:2:15"},"returnParameters":{"id":3420,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3419,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3458,"src":"15657:16:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3417,"name":"address","nodeType":"ElementaryTypeName","src":"15657:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3418,"nodeType":"ArrayTypeName","src":"15657:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"15656:18:15"},"scope":4118,"src":"15613:255:15","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":3501,"nodeType":"Block","src":"16099:197:15","statements":[{"assignments":[3469],"declarations":[{"constant":false,"id":3469,"mutability":"mutable","name":"weights","nameLocation":"16123:7:15","nodeType":"VariableDeclaration","scope":3501,"src":"16106:24:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3467,"name":"uint256","nodeType":"ElementaryTypeName","src":"16106:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3468,"nodeType":"ArrayTypeName","src":"16106:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":3476,"initialValue":{"arguments":[{"expression":{"id":3473,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2235,"src":"16147:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2255_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16158:6:15","memberName":"length","nodeType":"MemberAccess","src":"16147:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3472,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"16133:13:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":3470,"name":"uint256","nodeType":"ElementaryTypeName","src":"16137:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3471,"nodeType":"ArrayTypeName","src":"16137:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":3475,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16133:32:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"16106:59:15"},{"body":{"id":3497,"nodeType":"Block","src":"16220:50:15","statements":[{"expression":{"id":3495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3488,"name":"weights","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3469,"src":"16229:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3490,"indexExpression":{"id":3489,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3478,"src":"16237:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"16229:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":3491,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2235,"src":"16242:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2255_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3493,"indexExpression":{"id":3492,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3478,"src":"16253:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16242:13:15","typeDescriptions":{"typeIdentifier":"t_struct$_AssetInfo_$2255_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref"}},"id":3494,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16256:6:15","memberName":"weight","nodeType":"MemberAccess","referencedDeclaration":2254,"src":"16242:20:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16229:33:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3496,"nodeType":"ExpressionStatement","src":"16229:33:15"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3481,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3478,"src":"16192:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3482,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2235,"src":"16196:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2255_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16207:6:15","memberName":"length","nodeType":"MemberAccess","src":"16196:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16192:21:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3498,"initializationExpression":{"assignments":[3478],"declarations":[{"constant":false,"id":3478,"mutability":"mutable","name":"i","nameLocation":"16185:1:15","nodeType":"VariableDeclaration","scope":3498,"src":"16177:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3477,"name":"uint256","nodeType":"ElementaryTypeName","src":"16177:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3480,"initialValue":{"hexValue":"30","id":3479,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16189:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"16177:13:15"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"16215:3:15","subExpression":{"id":3485,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3478,"src":"16215:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3487,"nodeType":"ExpressionStatement","src":"16215:3:15"},"nodeType":"ForStatement","src":"16172:98:15"},{"expression":{"id":3499,"name":"weights","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3469,"src":"16283:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":3464,"id":3500,"nodeType":"Return","src":"16276:14:15"}]},"documentation":{"id":3459,"nodeType":"StructuredDocumentation","src":"15874:158:15","text":" @dev Retrieves the list of weights associated with the assets in the pool.\n @return An array of uint256 values representing the weights."},"functionSelector":"22acb867","id":3502,"implemented":true,"kind":"function","modifiers":[],"name":"getWeights","nameLocation":"16045:10:15","nodeType":"FunctionDefinition","parameters":{"id":3460,"nodeType":"ParameterList","parameters":[],"src":"16055:2:15"},"returnParameters":{"id":3464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3463,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3502,"src":"16081:16:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3461,"name":"uint256","nodeType":"ElementaryTypeName","src":"16081:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3462,"nodeType":"ArrayTypeName","src":"16081:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"16080:18:15"},"scope":4118,"src":"16036:260:15","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":3598,"nodeType":"Block","src":"16633:531:15","statements":[{"assignments":[3512],"declarations":[{"constant":false,"id":3512,"mutability":"mutable","name":"numAssets","nameLocation":"16648:9:15","nodeType":"VariableDeclaration","scope":3598,"src":"16640:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3511,"name":"uint256","nodeType":"ElementaryTypeName","src":"16640:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3515,"initialValue":{"expression":{"id":3513,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2235,"src":"16660:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2255_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16671:6:15","memberName":"length","nodeType":"MemberAccess","src":"16660:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16640:37:15"},{"expression":{"id":3522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3516,"name":"valuations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3509,"src":"16684:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3520,"name":"numAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3512,"src":"16711:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3519,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"16697:13:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":3517,"name":"uint256","nodeType":"ElementaryTypeName","src":"16701:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3518,"nodeType":"ArrayTypeName","src":"16701:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":3521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16697:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"src":"16684:37:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3523,"nodeType":"ExpressionStatement","src":"16684:37:15"},{"body":{"id":3592,"nodeType":"Block","src":"16768:349:15","statements":[{"assignments":[3536],"declarations":[{"constant":false,"id":3536,"mutability":"mutable","name":"asset","nameLocation":"16784:5:15","nodeType":"VariableDeclaration","scope":3592,"src":"16777:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"},"typeName":{"id":3535,"nodeType":"UserDefinedTypeName","pathNode":{"id":3534,"name":"IERC20","nameLocations":["16777:6:15"],"nodeType":"IdentifierPath","referencedDeclaration":1729,"src":"16777:6:15"},"referencedDeclaration":1729,"src":"16777:6:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"}},"visibility":"internal"}],"id":3543,"initialValue":{"arguments":[{"expression":{"baseExpression":{"id":3538,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2235,"src":"16799:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2255_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3540,"indexExpression":{"id":3539,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3525,"src":"16810:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16799:13:15","typeDescriptions":{"typeIdentifier":"t_struct$_AssetInfo_$2255_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref"}},"id":3541,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16813:5:15","memberName":"asset","nodeType":"MemberAccess","referencedDeclaration":2252,"src":"16799:19:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3537,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1729,"src":"16792:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1729_$","typeString":"type(contract IERC20)"}},"id":3542,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16792:27:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"}},"nodeType":"VariableDeclarationStatement","src":"16777:42:15"},{"condition":{"components":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3546,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3536,"src":"16843:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"}],"id":3545,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16835:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3544,"name":"address","nodeType":"ElementaryTypeName","src":"16835:7:15","typeDescriptions":{}}},"id":3547,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16835:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3548,"name":"baseAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2246,"src":"16853:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"16835:27:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":3550,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"16834:29:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3584,"nodeType":"Block","src":"16932:138:15","statements":[{"assignments":[3564],"declarations":[{"constant":false,"id":3564,"mutability":"mutable","name":"valuation","nameLocation":"16951:9:15","nodeType":"VariableDeclaration","scope":3584,"src":"16943:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3563,"name":"uint256","nodeType":"ElementaryTypeName","src":"16943:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3577,"initialValue":{"arguments":[{"arguments":[{"id":3568,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3536,"src":"16991:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"}],"id":3567,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16983:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3566,"name":"address","nodeType":"ElementaryTypeName","src":"16983:7:15","typeDescriptions":{}}},"id":3569,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16983:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":3570,"name":"reserves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2250,"src":"16999:8:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3575,"indexExpression":{"arguments":[{"id":3573,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3536,"src":"17016:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"}],"id":3572,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17008:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3571,"name":"address","nodeType":"ElementaryTypeName","src":"17008:7:15","typeDescriptions":{}}},"id":3574,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17008:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16999:24:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3565,"name":"_convertTokenToBase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3916,"src":"16963:19:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view returns (uint256)"}},"id":3576,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16963:61:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16943:81:15"},{"expression":{"id":3582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3578,"name":"valuations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3509,"src":"17035:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3580,"indexExpression":{"id":3579,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3525,"src":"17046:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17035:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3581,"name":"valuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3564,"src":"17051:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17035:25:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3583,"nodeType":"ExpressionStatement","src":"17035:25:15"}]},"id":3585,"nodeType":"IfStatement","src":"16830:240:15","trueBody":{"id":3562,"nodeType":"Block","src":"16865:61:15","statements":[{"expression":{"id":3560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3551,"name":"valuations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3509,"src":"16876:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3553,"indexExpression":{"id":3552,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3525,"src":"16887:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"16876:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":3554,"name":"reserves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2250,"src":"16892:8:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3559,"indexExpression":{"arguments":[{"id":3557,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3536,"src":"16909:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"}],"id":3556,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16901:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3555,"name":"address","nodeType":"ElementaryTypeName","src":"16901:7:15","typeDescriptions":{}}},"id":3558,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16901:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16892:24:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16876:40:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3561,"nodeType":"ExpressionStatement","src":"16876:40:15"}]}},{"expression":{"id":3590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3586,"name":"totalValuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3506,"src":"17078:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"baseExpression":{"id":3587,"name":"valuations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3509,"src":"17096:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3589,"indexExpression":{"id":3588,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3525,"src":"17107:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17096:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17078:31:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3591,"nodeType":"ExpressionStatement","src":"17078:31:15"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3528,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3525,"src":"16748:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3529,"name":"numAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3512,"src":"16752:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16748:13:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3593,"initializationExpression":{"assignments":[3525],"declarations":[{"constant":false,"id":3525,"mutability":"mutable","name":"i","nameLocation":"16741:1:15","nodeType":"VariableDeclaration","scope":3593,"src":"16733:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3524,"name":"uint256","nodeType":"ElementaryTypeName","src":"16733:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3527,"initialValue":{"hexValue":"30","id":3526,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16745:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"16733:13:15"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"16763:3:15","subExpression":{"id":3531,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3525,"src":"16763:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3533,"nodeType":"ExpressionStatement","src":"16763:3:15"},"nodeType":"ForStatement","src":"16728:389:15"},{"expression":{"components":[{"id":3594,"name":"totalValuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3506,"src":"17131:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3595,"name":"valuations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3509,"src":"17147:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"id":3596,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17130:28:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256,uint256[] memory)"}},"functionReturnParameters":3510,"id":3597,"nodeType":"Return","src":"17123:35:15"}]},"documentation":{"id":3503,"nodeType":"StructuredDocumentation","src":"16302:217:15","text":" @dev Computes the total valuation of the assets in the pool.\n @return totalValuation The total valuation of the assets.\n @return valuations An array of valuations for each asset in the pool."},"id":3599,"implemented":true,"kind":"function","modifiers":[],"name":"_computeTotalValuation","nameLocation":"16532:22:15","nodeType":"FunctionDefinition","parameters":{"id":3504,"nodeType":"ParameterList","parameters":[],"src":"16554:2:15"},"returnParameters":{"id":3510,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3506,"mutability":"mutable","name":"totalValuation","nameLocation":"16588:14:15","nodeType":"VariableDeclaration","scope":3599,"src":"16580:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3505,"name":"uint256","nodeType":"ElementaryTypeName","src":"16580:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3509,"mutability":"mutable","name":"valuations","nameLocation":"16621:10:15","nodeType":"VariableDeclaration","scope":3599,"src":"16604:27:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3507,"name":"uint256","nodeType":"ElementaryTypeName","src":"16604:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3508,"nodeType":"ArrayTypeName","src":"16604:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"16579:53:15"},"scope":4118,"src":"16523:641:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3690,"nodeType":"Block","src":"17590:525:15","statements":[{"assignments":[3607],"declarations":[{"constant":false,"id":3607,"mutability":"mutable","name":"assets","nameLocation":"17614:6:15","nodeType":"VariableDeclaration","scope":3690,"src":"17597:23:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3605,"name":"address","nodeType":"ElementaryTypeName","src":"17597:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3606,"nodeType":"ArrayTypeName","src":"17597:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":3614,"initialValue":{"arguments":[{"expression":{"id":3611,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2235,"src":"17637:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2255_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17648:6:15","memberName":"length","nodeType":"MemberAccess","src":"17637:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3610,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"17623:13:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address[] memory)"},"typeName":{"baseType":{"id":3608,"name":"address","nodeType":"ElementaryTypeName","src":"17627:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3609,"nodeType":"ArrayTypeName","src":"17627:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"id":3613,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17623:32:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"17597:58:15"},{"assignments":[3619],"declarations":[{"constant":false,"id":3619,"mutability":"mutable","name":"weights","nameLocation":"17679:7:15","nodeType":"VariableDeclaration","scope":3690,"src":"17662:24:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3617,"name":"uint256","nodeType":"ElementaryTypeName","src":"17662:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3618,"nodeType":"ArrayTypeName","src":"17662:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":3626,"initialValue":{"arguments":[{"expression":{"id":3623,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2235,"src":"17703:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2255_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17714:6:15","memberName":"length","nodeType":"MemberAccess","src":"17703:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3622,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"17689:13:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":3620,"name":"uint256","nodeType":"ElementaryTypeName","src":"17693:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3621,"nodeType":"ArrayTypeName","src":"17693:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":3625,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17689:32:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"17662:59:15"},{"body":{"id":3656,"nodeType":"Block","src":"17776:90:15","statements":[{"expression":{"id":3645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3638,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3607,"src":"17785:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":3640,"indexExpression":{"id":3639,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3628,"src":"17792:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17785:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":3641,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2235,"src":"17797:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2255_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3643,"indexExpression":{"id":3642,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3628,"src":"17808:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17797:13:15","typeDescriptions":{"typeIdentifier":"t_struct$_AssetInfo_$2255_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref"}},"id":3644,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17811:5:15","memberName":"asset","nodeType":"MemberAccess","referencedDeclaration":2252,"src":"17797:19:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"17785:31:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3646,"nodeType":"ExpressionStatement","src":"17785:31:15"},{"expression":{"id":3654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3647,"name":"weights","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3619,"src":"17825:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3649,"indexExpression":{"id":3648,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3628,"src":"17833:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17825:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":3650,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2235,"src":"17838:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2255_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3652,"indexExpression":{"id":3651,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3628,"src":"17849:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17838:13:15","typeDescriptions":{"typeIdentifier":"t_struct$_AssetInfo_$2255_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref"}},"id":3653,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17852:6:15","memberName":"weight","nodeType":"MemberAccess","referencedDeclaration":2254,"src":"17838:20:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17825:33:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3655,"nodeType":"ExpressionStatement","src":"17825:33:15"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3631,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3628,"src":"17748:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3632,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2235,"src":"17752:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2255_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17763:6:15","memberName":"length","nodeType":"MemberAccess","src":"17752:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17748:21:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3657,"initializationExpression":{"assignments":[3628],"declarations":[{"constant":false,"id":3628,"mutability":"mutable","name":"i","nameLocation":"17741:1:15","nodeType":"VariableDeclaration","scope":3657,"src":"17733:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3627,"name":"uint256","nodeType":"ElementaryTypeName","src":"17733:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3630,"initialValue":{"hexValue":"30","id":3629,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17745:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"17733:13:15"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17771:3:15","subExpression":{"id":3635,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3628,"src":"17771:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3637,"nodeType":"ExpressionStatement","src":"17771:3:15"},"nodeType":"ForStatement","src":"17728:138:15"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":3659,"name":"periphery","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2241,"src":"17897:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3658,"name":"IBaluniV1PoolPeriphery","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5638,"src":"17874:22:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBaluniV1PoolPeriphery_$5638_$","typeString":"type(contract IBaluniV1PoolPeriphery)"}},"id":3660,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17874:33:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1PoolPeriphery_$5638","typeString":"contract IBaluniV1PoolPeriphery"}},"id":3661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17908:14:15","memberName":"transferToPool","nodeType":"MemberAccess","referencedDeclaration":5637,"src":"17874:48:15","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$__$returns$__$","typeString":"function () external"}},"id":3662,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17874:50:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3663,"nodeType":"ExpressionStatement","src":"17874:50:15"},{"expression":{"arguments":[{"id":3667,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3607,"src":"17954:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},{"id":3668,"name":"weights","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3619,"src":"17962:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"arguments":[{"id":3671,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"17979:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Pool_$4118","typeString":"contract BaluniV1Pool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniV1Pool_$4118","typeString":"contract BaluniV1Pool"}],"id":3670,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17971:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3669,"name":"address","nodeType":"ElementaryTypeName","src":"17971:7:15","typeDescriptions":{}}},"id":3672,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17971:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":3675,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"17994:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Pool_$4118","typeString":"contract BaluniV1Pool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniV1Pool_$4118","typeString":"contract BaluniV1Pool"}],"id":3674,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17986:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3673,"name":"address","nodeType":"ElementaryTypeName","src":"17986:7:15","typeDescriptions":{}}},"id":3676,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17986:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3677,"name":"trigger","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2237,"src":"18001:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3678,"name":"baseAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2246,"src":"18010:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3664,"name":"rebalancer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2231,"src":"17933:10:15","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Rebalancer_$5766","typeString":"contract IBaluniV1Rebalancer"}},"id":3666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17944:9:15","memberName":"rebalance","nodeType":"MemberAccess","referencedDeclaration":5711,"src":"17933:20:15","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_address_$_t_address_$_t_uint256_$_t_address_$returns$__$","typeString":"function (address[] memory,uint256[] memory,address,address,uint256,address) external"}},"id":3679,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17933:87:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3680,"nodeType":"ExpressionStatement","src":"17933:87:15"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3681,"name":"_updateReservesAndTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4031,"src":"18029:26:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":3682,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18029:28:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3683,"nodeType":"ExpressionStatement","src":"18029:28:15"},{"eventCall":{"arguments":[{"expression":{"id":3685,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"18090:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18094:6:15","memberName":"sender","nodeType":"MemberAccess","src":"18090:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3687,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3607,"src":"18102:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}],"id":3684,"name":"RebalancePerformed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2262,"src":"18071:18:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_array$_t_address_$dyn_memory_ptr_$returns$__$","typeString":"function (address,address[] memory)"}},"id":3688,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18071:38:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3689,"nodeType":"EmitStatement","src":"18066:43:15"}]},"documentation":{"id":3600,"nodeType":"StructuredDocumentation","src":"17170:370:15","text":" @dev Performs rebalance if needed.\n This function retrieves the assets and weights from the `assetInfos` array,\n and calls the `rebalance` function of the `rebalancer` contract with the retrieved values.\n It emits a `RebalancePerformed` event after the rebalance is performed.\n @notice This function should only be called internally."},"id":3691,"implemented":true,"kind":"function","modifiers":[],"name":"_performRebalanceIfNeeded","nameLocation":"17553:25:15","nodeType":"FunctionDefinition","parameters":{"id":3601,"nodeType":"ParameterList","parameters":[],"src":"17578:2:15"},"returnParameters":{"id":3602,"nodeType":"ParameterList","parameters":[],"src":"17590:0:15"},"scope":4118,"src":"17544:571:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3721,"nodeType":"Block","src":"18474:148:15","statements":[{"body":{"id":3717,"nodeType":"Block","src":"18529:55:15","statements":[{"expression":{"id":3715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3711,"name":"totalAddedLiquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3698,"src":"18538:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"baseExpression":{"id":3712,"name":"amountsToAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3695,"src":"18561:12:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3714,"indexExpression":{"id":3713,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3701,"src":"18574:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18561:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18538:38:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3716,"nodeType":"ExpressionStatement","src":"18538:38:15"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3704,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3701,"src":"18501:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3705,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2235,"src":"18505:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2255_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18516:6:15","memberName":"length","nodeType":"MemberAccess","src":"18505:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18501:21:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3718,"initializationExpression":{"assignments":[3701],"declarations":[{"constant":false,"id":3701,"mutability":"mutable","name":"i","nameLocation":"18494:1:15","nodeType":"VariableDeclaration","scope":3718,"src":"18486:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3700,"name":"uint256","nodeType":"ElementaryTypeName","src":"18486:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3703,"initialValue":{"hexValue":"30","id":3702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18498:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"18486:13:15"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18524:3:15","subExpression":{"id":3708,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3701,"src":"18524:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3710,"nodeType":"ExpressionStatement","src":"18524:3:15"},"nodeType":"ForStatement","src":"18481:103:15"},{"expression":{"id":3719,"name":"totalAddedLiquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3698,"src":"18597:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3699,"id":3720,"nodeType":"Return","src":"18590:26:15"}]},"documentation":{"id":3692,"nodeType":"StructuredDocumentation","src":"18121:217:15","text":" @dev Calculates the total added liquidity based on the amounts to add.\n @param amountsToAdd An array of amounts to add for each asset.\n @return totalAddedLiquidity The total added liquidity."},"id":3722,"implemented":true,"kind":"function","modifiers":[],"name":"_calculateTotalAddedLiquidity","nameLocation":"18351:29:15","nodeType":"FunctionDefinition","parameters":{"id":3696,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3695,"mutability":"mutable","name":"amountsToAdd","nameLocation":"18404:12:15","nodeType":"VariableDeclaration","scope":3722,"src":"18387:29:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3693,"name":"uint256","nodeType":"ElementaryTypeName","src":"18387:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3694,"nodeType":"ArrayTypeName","src":"18387:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"18380:41:15"},"returnParameters":{"id":3699,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3698,"mutability":"mutable","name":"totalAddedLiquidity","nameLocation":"18453:19:15","nodeType":"VariableDeclaration","scope":3722,"src":"18445:27:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3697,"name":"uint256","nodeType":"ElementaryTypeName","src":"18445:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18444:29:15"},"scope":4118,"src":"18342:280:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3787,"nodeType":"Block","src":"19105:345:15","statements":[{"expression":{"id":3741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3734,"name":"amountsToAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3732,"src":"19112:12:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":3738,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2235,"src":"19141:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2255_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19152:6:15","memberName":"length","nodeType":"MemberAccess","src":"19141:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3737,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"19127:13:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":3735,"name":"uint256","nodeType":"ElementaryTypeName","src":"19131:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3736,"nodeType":"ArrayTypeName","src":"19131:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":3740,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19127:32:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"src":"19112:47:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3742,"nodeType":"ExpressionStatement","src":"19112:47:15"},{"body":{"id":3783,"nodeType":"Block","src":"19214:205:15","statements":[{"assignments":[3755],"declarations":[{"constant":false,"id":3755,"mutability":"mutable","name":"targetValuation","nameLocation":"19231:15:15","nodeType":"VariableDeclaration","scope":3783,"src":"19223:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3754,"name":"uint256","nodeType":"ElementaryTypeName","src":"19223:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3765,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3756,"name":"totalValuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3725,"src":"19250:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"baseExpression":{"id":3757,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2235,"src":"19267:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2255_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3759,"indexExpression":{"id":3758,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3744,"src":"19278:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19267:13:15","typeDescriptions":{"typeIdentifier":"t_struct$_AssetInfo_$2255_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref"}},"id":3760,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"19281:6:15","memberName":"weight","nodeType":"MemberAccess","referencedDeclaration":2254,"src":"19267:20:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19250:37:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3762,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"19249:39:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3130303030","id":3763,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19291:5:15","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"src":"19249:47:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19223:73:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":3766,"name":"valuations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3728,"src":"19309:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3768,"indexExpression":{"id":3767,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3744,"src":"19320:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19309:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3769,"name":"targetValuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3755,"src":"19325:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19309:31:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3782,"nodeType":"IfStatement","src":"19305:107:15","trueBody":{"id":3781,"nodeType":"Block","src":"19342:70:15","statements":[{"expression":{"id":3779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3771,"name":"amountsToAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3732,"src":"19353:12:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3773,"indexExpression":{"id":3772,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3744,"src":"19366:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"19353:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3774,"name":"targetValuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3755,"src":"19371:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"baseExpression":{"id":3775,"name":"valuations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3728,"src":"19389:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3777,"indexExpression":{"id":3776,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3744,"src":"19400:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19389:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19371:31:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19353:49:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3780,"nodeType":"ExpressionStatement","src":"19353:49:15"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3747,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3744,"src":"19186:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3748,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2235,"src":"19190:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2255_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19201:6:15","memberName":"length","nodeType":"MemberAccess","src":"19190:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19186:21:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3784,"initializationExpression":{"assignments":[3744],"declarations":[{"constant":false,"id":3744,"mutability":"mutable","name":"i","nameLocation":"19179:1:15","nodeType":"VariableDeclaration","scope":3784,"src":"19171:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3743,"name":"uint256","nodeType":"ElementaryTypeName","src":"19171:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3746,"initialValue":{"hexValue":"30","id":3745,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19183:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"19171:13:15"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"19209:3:15","subExpression":{"id":3751,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3744,"src":"19209:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3753,"nodeType":"ExpressionStatement","src":"19209:3:15"},"nodeType":"ForStatement","src":"19166:253:15"},{"expression":{"id":3785,"name":"amountsToAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3732,"src":"19432:12:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":3733,"id":3786,"nodeType":"Return","src":"19425:19:15"}]},"documentation":{"id":3723,"nodeType":"StructuredDocumentation","src":"18628:319:15","text":" @dev Calculates the amounts to add to each asset based on the total valuation and current valuations.\n @param totalValuation The total valuation of the pool.\n @param valuations An array of current valuations for each asset.\n @return amountsToAdd An array of amounts to add to each asset."},"id":3788,"implemented":true,"kind":"function","modifiers":[],"name":"_calculateAmountsToAdd","nameLocation":"18960:22:15","nodeType":"FunctionDefinition","parameters":{"id":3729,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3725,"mutability":"mutable","name":"totalValuation","nameLocation":"18997:14:15","nodeType":"VariableDeclaration","scope":3788,"src":"18989:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3724,"name":"uint256","nodeType":"ElementaryTypeName","src":"18989:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3728,"mutability":"mutable","name":"valuations","nameLocation":"19035:10:15","nodeType":"VariableDeclaration","scope":3788,"src":"19018:27:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3726,"name":"uint256","nodeType":"ElementaryTypeName","src":"19018:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3727,"nodeType":"ArrayTypeName","src":"19018:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"18982:68:15"},"returnParameters":{"id":3733,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3732,"mutability":"mutable","name":"amountsToAdd","nameLocation":"19091:12:15","nodeType":"VariableDeclaration","scope":3788,"src":"19074:29:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3730,"name":"uint256","nodeType":"ElementaryTypeName","src":"19074:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3731,"nodeType":"ArrayTypeName","src":"19074:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"19073:31:15"},"scope":4118,"src":"18951:499:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3835,"nodeType":"Block","src":"19805:296:15","statements":[{"assignments":[3797],"declarations":[{"constant":false,"id":3797,"mutability":"mutable","name":"tokenAmount","nameLocation":"19820:11:15","nodeType":"VariableDeclaration","scope":3835,"src":"19812:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3796,"name":"uint256","nodeType":"ElementaryTypeName","src":"19812:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3805,"initialValue":{"arguments":[{"expression":{"baseExpression":{"id":3799,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2235,"src":"19854:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2255_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3801,"indexExpression":{"id":3800,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3791,"src":"19865:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19854:17:15","typeDescriptions":{"typeIdentifier":"t_struct$_AssetInfo_$2255_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref"}},"id":3802,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"19872:5:15","memberName":"asset","nodeType":"MemberAccess","referencedDeclaration":2252,"src":"19854:23:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3803,"name":"amountToAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3793,"src":"19879:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3798,"name":"_convertBaseToToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3858,"src":"19834:19:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view returns (uint256)"}},"id":3804,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19834:57:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19812:79:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3807,"name":"tokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3797,"src":"19906:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3808,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19920:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"19906:15:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420746f6b656e20616d6f756e7420746f20616464","id":3810,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"19923:29:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_231381c7ce9cab5a06140be844586c7572b2dd117d8de83c9f9bda39108cd19d","typeString":"literal_string \"Invalid token amount to add\""},"value":"Invalid token amount to add"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_231381c7ce9cab5a06140be844586c7572b2dd117d8de83c9f9bda39108cd19d","typeString":"literal_string \"Invalid token amount to add\""}],"id":3806,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"19898:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3811,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19898:55:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3812,"nodeType":"ExpressionStatement","src":"19898:55:15"},{"expression":{"arguments":[{"expression":{"id":3820,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"20005:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20009:6:15","memberName":"sender","nodeType":"MemberAccess","src":"20005:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3822,"name":"periphery","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2241,"src":"20017:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3823,"name":"tokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3797,"src":"20028:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"expression":{"baseExpression":{"id":3814,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2235,"src":"19967:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2255_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3816,"indexExpression":{"id":3815,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3791,"src":"19978:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19967:17:15","typeDescriptions":{"typeIdentifier":"t_struct$_AssetInfo_$2255_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref"}},"id":3817,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"19985:5:15","memberName":"asset","nodeType":"MemberAccess","referencedDeclaration":2252,"src":"19967:23:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3813,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1729,"src":"19960:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1729_$","typeString":"type(contract IERC20)"}},"id":3818,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19960:31:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"}},"id":3819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19992:12:15","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":1728,"src":"19960:44:15","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":3824,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19960:80:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3825,"nodeType":"ExpressionStatement","src":"19960:80:15"},{"expression":{"id":3833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3826,"name":"reserves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2250,"src":"20047:8:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3831,"indexExpression":{"expression":{"baseExpression":{"id":3827,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2235,"src":"20056:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2255_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3829,"indexExpression":{"id":3828,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3791,"src":"20067:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20056:17:15","typeDescriptions":{"typeIdentifier":"t_struct$_AssetInfo_$2255_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref"}},"id":3830,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"20074:5:15","memberName":"asset","nodeType":"MemberAccess","referencedDeclaration":2252,"src":"20056:23:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"20047:33:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":3832,"name":"tokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3797,"src":"20084:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20047:48:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3834,"nodeType":"ExpressionStatement","src":"20047:48:15"}]},"documentation":{"id":3789,"nodeType":"StructuredDocumentation","src":"19456:260:15","text":" @dev Internal function to transfer tokens from the caller to the contract and calculate the liquidity.\n @param index The index of the asset in the assetInfos array.\n @param amountToAdd The amount of native tokens to add as liquidity."},"id":3836,"implemented":true,"kind":"function","modifiers":[],"name":"_transferAndCalculateLiquidity","nameLocation":"19729:30:15","nodeType":"FunctionDefinition","parameters":{"id":3794,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3791,"mutability":"mutable","name":"index","nameLocation":"19768:5:15","nodeType":"VariableDeclaration","scope":3836,"src":"19760:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3790,"name":"uint256","nodeType":"ElementaryTypeName","src":"19760:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3793,"mutability":"mutable","name":"amountToAdd","nameLocation":"19783:11:15","nodeType":"VariableDeclaration","scope":3836,"src":"19775:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3792,"name":"uint256","nodeType":"ElementaryTypeName","src":"19775:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"19759:36:15"},"returnParameters":{"id":3795,"nodeType":"ParameterList","parameters":[],"src":"19805:0:15"},"scope":4118,"src":"19720:381:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3857,"nodeType":"Block","src":"20486:108:15","statements":[{"assignments":[3847],"declarations":[{"constant":false,"id":3847,"mutability":"mutable","name":"tokenAmount","nameLocation":"20501:11:15","nodeType":"VariableDeclaration","scope":3857,"src":"20493:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3846,"name":"uint256","nodeType":"ElementaryTypeName","src":"20493:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3854,"initialValue":{"arguments":[{"id":3850,"name":"baseAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2246,"src":"20534:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3851,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3839,"src":"20545:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3852,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3841,"src":"20556:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3848,"name":"rebalancer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2231,"src":"20515:10:15","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Rebalancer_$5766","typeString":"contract IBaluniV1Rebalancer"}},"id":3849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20526:7:15","memberName":"convert","nodeType":"MemberAccess","referencedDeclaration":5765,"src":"20515:18:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,address,uint256) view external returns (uint256)"}},"id":3853,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20515:48:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"20493:70:15"},{"expression":{"id":3855,"name":"tokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3847,"src":"20577:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3845,"id":3856,"nodeType":"Return","src":"20570:18:15"}]},"documentation":{"id":3837,"nodeType":"StructuredDocumentation","src":"20107:279:15","text":" @dev Converts the specified amount of native token to the corresponding token amount.\n @param fromToken The address of the native token to convert from.\n @param amount The amount of native token to convert.\n @return The corresponding token amount."},"id":3858,"implemented":true,"kind":"function","modifiers":[],"name":"_convertBaseToToken","nameLocation":"20399:19:15","nodeType":"FunctionDefinition","parameters":{"id":3842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3839,"mutability":"mutable","name":"fromToken","nameLocation":"20427:9:15","nodeType":"VariableDeclaration","scope":3858,"src":"20419:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3838,"name":"address","nodeType":"ElementaryTypeName","src":"20419:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3841,"mutability":"mutable","name":"amount","nameLocation":"20446:6:15","nodeType":"VariableDeclaration","scope":3858,"src":"20438:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3840,"name":"uint256","nodeType":"ElementaryTypeName","src":"20438:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20418:35:15"},"returnParameters":{"id":3845,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3844,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3858,"src":"20477:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3843,"name":"uint256","nodeType":"ElementaryTypeName","src":"20477:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20476:9:15"},"scope":4118,"src":"20390:204:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3875,"nodeType":"Block","src":"20852:34:15","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3868,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3861,"src":"20866:1:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":3869,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3863,"src":"20871:1:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"20866:6:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3872,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3863,"src":"20879:1:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":3873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"20866:14:15","trueExpression":{"id":3871,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3861,"src":"20875:1:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":3867,"id":3874,"nodeType":"Return","src":"20859:21:15"}]},"documentation":{"id":3859,"nodeType":"StructuredDocumentation","src":"20600:188:15","text":" @dev Returns the maximum of two uint8 values.\n @param a The first uint8 value.\n @param b The second uint8 value.\n @return The maximum value between a and b."},"id":3876,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"20801:3:15","nodeType":"FunctionDefinition","parameters":{"id":3864,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3861,"mutability":"mutable","name":"a","nameLocation":"20811:1:15","nodeType":"VariableDeclaration","scope":3876,"src":"20805:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3860,"name":"uint8","nodeType":"ElementaryTypeName","src":"20805:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3863,"mutability":"mutable","name":"b","nameLocation":"20820:1:15","nodeType":"VariableDeclaration","scope":3876,"src":"20814:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3862,"name":"uint8","nodeType":"ElementaryTypeName","src":"20814:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"20804:18:15"},"returnParameters":{"id":3867,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3866,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3876,"src":"20845:5:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3865,"name":"uint8","nodeType":"ElementaryTypeName","src":"20845:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"20844:7:15"},"scope":4118,"src":"20792:94:15","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3893,"nodeType":"Block","src":"21144:34:15","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3886,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3879,"src":"21158:1:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":3887,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3881,"src":"21163:1:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"21158:6:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3890,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3881,"src":"21171:1:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":3891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"21158:14:15","trueExpression":{"id":3889,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3879,"src":"21167:1:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":3885,"id":3892,"nodeType":"Return","src":"21151:21:15"}]},"documentation":{"id":3877,"nodeType":"StructuredDocumentation","src":"20892:188:15","text":" @dev Returns the minimum of two uint8 values.\n @param a The first uint8 value.\n @param b The second uint8 value.\n @return The minimum value between a and b."},"id":3894,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"21093:3:15","nodeType":"FunctionDefinition","parameters":{"id":3882,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3879,"mutability":"mutable","name":"a","nameLocation":"21103:1:15","nodeType":"VariableDeclaration","scope":3894,"src":"21097:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3878,"name":"uint8","nodeType":"ElementaryTypeName","src":"21097:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3881,"mutability":"mutable","name":"b","nameLocation":"21112:1:15","nodeType":"VariableDeclaration","scope":3894,"src":"21106:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3880,"name":"uint8","nodeType":"ElementaryTypeName","src":"21106:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"21096:18:15"},"returnParameters":{"id":3885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3884,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3894,"src":"21137:5:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3883,"name":"uint8","nodeType":"ElementaryTypeName","src":"21137:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"21136:7:15"},"scope":4118,"src":"21084:94:15","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3915,"nodeType":"Block","src":"21575:108:15","statements":[{"assignments":[3905],"declarations":[{"constant":false,"id":3905,"mutability":"mutable","name":"tokenAmount","nameLocation":"21590:11:15","nodeType":"VariableDeclaration","scope":3915,"src":"21582:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3904,"name":"uint256","nodeType":"ElementaryTypeName","src":"21582:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3912,"initialValue":{"arguments":[{"id":3908,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3897,"src":"21623:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3909,"name":"baseAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2246,"src":"21634:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3910,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3899,"src":"21645:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3906,"name":"rebalancer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2231,"src":"21604:10:15","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Rebalancer_$5766","typeString":"contract IBaluniV1Rebalancer"}},"id":3907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"21615:7:15","memberName":"convert","nodeType":"MemberAccess","referencedDeclaration":5765,"src":"21604:18:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,address,uint256) view external returns (uint256)"}},"id":3911,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21604:48:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"21582:70:15"},{"expression":{"id":3913,"name":"tokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3905,"src":"21666:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3903,"id":3914,"nodeType":"Return","src":"21659:18:15"}]},"documentation":{"id":3895,"nodeType":"StructuredDocumentation","src":"21184:278:15","text":" @dev Converts the specified token to the native token using the rebalancer contract.\n @param fromToken The address of the token to convert from.\n @param amount The amount of tokens to convert.\n @return scaledAmount The converted amount of tokens."},"id":3916,"implemented":true,"kind":"function","modifiers":[],"name":"_convertTokenToBase","nameLocation":"21475:19:15","nodeType":"FunctionDefinition","parameters":{"id":3900,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3897,"mutability":"mutable","name":"fromToken","nameLocation":"21503:9:15","nodeType":"VariableDeclaration","scope":3916,"src":"21495:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3896,"name":"address","nodeType":"ElementaryTypeName","src":"21495:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3899,"mutability":"mutable","name":"amount","nameLocation":"21522:6:15","nodeType":"VariableDeclaration","scope":3916,"src":"21514:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3898,"name":"uint256","nodeType":"ElementaryTypeName","src":"21514:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"21494:35:15"},"returnParameters":{"id":3903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3902,"mutability":"mutable","name":"scaledAmount","nameLocation":"21561:12:15","nodeType":"VariableDeclaration","scope":3916,"src":"21553:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3901,"name":"uint256","nodeType":"ElementaryTypeName","src":"21553:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"21552:22:15"},"scope":4118,"src":"21466:217:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3931,"nodeType":"Block","src":"21777:47:15","statements":[{"expression":{"arguments":[{"id":3927,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3919,"src":"21800:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":3928,"name":"increase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3921,"src":"21809:8:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3926,"name":"_updateReserves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3981,"src":"21784:15:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bool_$returns$__$","typeString":"function (uint256[] memory,bool)"}},"id":3929,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21784:34:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3930,"nodeType":"ExpressionStatement","src":"21784:34:15"}]},"functionSelector":"3dff5b7f","id":3932,"implemented":true,"kind":"function","modifiers":[{"id":3924,"kind":"modifierInvocation","modifierName":{"id":3923,"name":"onlyPeriphery","nameLocations":["21763:13:15"],"nodeType":"IdentifierPath","referencedDeclaration":2386,"src":"21763:13:15"},"nodeType":"ModifierInvocation","src":"21763:13:15"}],"name":"updateReserves","nameLocation":"21698:14:15","nodeType":"FunctionDefinition","parameters":{"id":3922,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3919,"mutability":"mutable","name":"amounts","nameLocation":"21730:7:15","nodeType":"VariableDeclaration","scope":3932,"src":"21713:24:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3917,"name":"uint256","nodeType":"ElementaryTypeName","src":"21713:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3918,"nodeType":"ArrayTypeName","src":"21713:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3921,"mutability":"mutable","name":"increase","nameLocation":"21744:8:15","nodeType":"VariableDeclaration","scope":3932,"src":"21739:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3920,"name":"bool","nodeType":"ElementaryTypeName","src":"21739:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"21712:41:15"},"returnParameters":{"id":3925,"nodeType":"ParameterList","parameters":[],"src":"21777:0:15"},"scope":4118,"src":"21689:135:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3980,"nodeType":"Block","src":"21905:247:15","statements":[{"body":{"id":3978,"nodeType":"Block","src":"21960:187:15","statements":[{"assignments":[3952],"declarations":[{"constant":false,"id":3952,"mutability":"mutable","name":"asset","nameLocation":"21977:5:15","nodeType":"VariableDeclaration","scope":3978,"src":"21969:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3951,"name":"address","nodeType":"ElementaryTypeName","src":"21969:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3957,"initialValue":{"expression":{"baseExpression":{"id":3953,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2235,"src":"21985:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2255_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3955,"indexExpression":{"id":3954,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3941,"src":"21996:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"21985:13:15","typeDescriptions":{"typeIdentifier":"t_struct$_AssetInfo_$2255_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref"}},"id":3956,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"21999:5:15","memberName":"asset","nodeType":"MemberAccess","referencedDeclaration":2252,"src":"21985:19:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"21969:35:15"},{"assignments":[3959],"declarations":[{"constant":false,"id":3959,"mutability":"mutable","name":"newReserve","nameLocation":"22021:10:15","nodeType":"VariableDeclaration","scope":3978,"src":"22013:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3958,"name":"uint256","nodeType":"ElementaryTypeName","src":"22013:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3963,"initialValue":{"baseExpression":{"id":3960,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3935,"src":"22034:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3962,"indexExpression":{"id":3961,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3941,"src":"22042:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"22034:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"22013:31:15"},{"condition":{"id":3964,"name":"increase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3937,"src":"22057:8:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"id":3975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3971,"name":"reserves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2250,"src":"22110:8:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3973,"indexExpression":{"id":3972,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3952,"src":"22119:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"22110:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":3974,"name":"newReserve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3959,"src":"22129:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22110:29:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3976,"nodeType":"ExpressionStatement","src":"22110:29:15"},"id":3977,"nodeType":"IfStatement","src":"22053:86:15","trueBody":{"expression":{"id":3969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3965,"name":"reserves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2250,"src":"22067:8:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3967,"indexExpression":{"id":3966,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3952,"src":"22076:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"22067:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":3968,"name":"newReserve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3959,"src":"22086:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22067:29:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3970,"nodeType":"ExpressionStatement","src":"22067:29:15"}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3944,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3941,"src":"21932:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3945,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2235,"src":"21936:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2255_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"21947:6:15","memberName":"length","nodeType":"MemberAccess","src":"21936:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"21932:21:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3979,"initializationExpression":{"assignments":[3941],"declarations":[{"constant":false,"id":3941,"mutability":"mutable","name":"i","nameLocation":"21925:1:15","nodeType":"VariableDeclaration","scope":3979,"src":"21917:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3940,"name":"uint256","nodeType":"ElementaryTypeName","src":"21917:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3943,"initialValue":{"hexValue":"30","id":3942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21929:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"21917:13:15"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"21955:3:15","subExpression":{"id":3948,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3941,"src":"21955:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3950,"nodeType":"ExpressionStatement","src":"21955:3:15"},"nodeType":"ForStatement","src":"21912:235:15"}]},"id":3981,"implemented":true,"kind":"function","modifiers":[],"name":"_updateReserves","nameLocation":"21839:15:15","nodeType":"FunctionDefinition","parameters":{"id":3938,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3935,"mutability":"mutable","name":"amounts","nameLocation":"21872:7:15","nodeType":"VariableDeclaration","scope":3981,"src":"21855:24:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3933,"name":"uint256","nodeType":"ElementaryTypeName","src":"21855:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3934,"nodeType":"ArrayTypeName","src":"21855:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3937,"mutability":"mutable","name":"increase","nameLocation":"21886:8:15","nodeType":"VariableDeclaration","scope":3981,"src":"21881:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3936,"name":"bool","nodeType":"ElementaryTypeName","src":"21881:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"21854:41:15"},"returnParameters":{"id":3939,"nodeType":"ParameterList","parameters":[],"src":"21905:0:15"},"scope":4118,"src":"21830:322:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4030,"nodeType":"Block","src":"22205:271:15","statements":[{"body":{"id":4028,"nodeType":"Block","src":"22260:211:15","statements":[{"assignments":[3996],"declarations":[{"constant":false,"id":3996,"mutability":"mutable","name":"asset","nameLocation":"22277:5:15","nodeType":"VariableDeclaration","scope":4028,"src":"22269:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3995,"name":"address","nodeType":"ElementaryTypeName","src":"22269:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4001,"initialValue":{"expression":{"baseExpression":{"id":3997,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2235,"src":"22285:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2255_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3999,"indexExpression":{"id":3998,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3985,"src":"22296:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"22285:13:15","typeDescriptions":{"typeIdentifier":"t_struct$_AssetInfo_$2255_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref"}},"id":4000,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"22299:5:15","memberName":"asset","nodeType":"MemberAccess","referencedDeclaration":2252,"src":"22285:19:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"22269:35:15"},{"assignments":[4003],"declarations":[{"constant":false,"id":4003,"mutability":"mutable","name":"newReserve","nameLocation":"22321:10:15","nodeType":"VariableDeclaration","scope":4028,"src":"22313:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4002,"name":"uint256","nodeType":"ElementaryTypeName","src":"22313:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4013,"initialValue":{"arguments":[{"arguments":[{"id":4010,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"22366:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Pool_$4118","typeString":"contract BaluniV1Pool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniV1Pool_$4118","typeString":"contract BaluniV1Pool"}],"id":4009,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22358:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4008,"name":"address","nodeType":"ElementaryTypeName","src":"22358:7:15","typeDescriptions":{}}},"id":4011,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22358:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":4005,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3996,"src":"22341:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4004,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1729,"src":"22334:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1729_$","typeString":"type(contract IERC20)"}},"id":4006,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22334:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"}},"id":4007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"22348:9:15","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":1686,"src":"22334:23:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":4012,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22334:38:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"22313:59:15"},{"expression":{"id":4018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4014,"name":"reserves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2250,"src":"22381:8:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4016,"indexExpression":{"id":4015,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3996,"src":"22390:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"22381:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4017,"name":"newReserve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4003,"src":"22399:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22381:28:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4019,"nodeType":"ExpressionStatement","src":"22381:28:15"},{"expression":{"arguments":[{"id":4024,"name":"periphery","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2241,"src":"22441:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4025,"name":"newReserve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4003,"src":"22452:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":4021,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3996,"src":"22425:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4020,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1729,"src":"22418:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1729_$","typeString":"type(contract IERC20)"}},"id":4022,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22418:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"}},"id":4023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"22432:8:15","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":1696,"src":"22418:22:15","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":4026,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22418:45:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4027,"nodeType":"ExpressionStatement","src":"22418:45:15"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3988,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3985,"src":"22232:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3989,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2235,"src":"22236:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2255_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"22247:6:15","memberName":"length","nodeType":"MemberAccess","src":"22236:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22232:21:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4029,"initializationExpression":{"assignments":[3985],"declarations":[{"constant":false,"id":3985,"mutability":"mutable","name":"i","nameLocation":"22225:1:15","nodeType":"VariableDeclaration","scope":4029,"src":"22217:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3984,"name":"uint256","nodeType":"ElementaryTypeName","src":"22217:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3987,"initialValue":{"hexValue":"30","id":3986,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22229:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"22217:13:15"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"22255:3:15","subExpression":{"id":3992,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3985,"src":"22255:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3994,"nodeType":"ExpressionStatement","src":"22255:3:15"},"nodeType":"ForStatement","src":"22212:259:15"}]},"id":4031,"implemented":true,"kind":"function","modifiers":[],"name":"_updateReservesAndTransfer","nameLocation":"22167:26:15","nodeType":"FunctionDefinition","parameters":{"id":3982,"nodeType":"ParameterList","parameters":[],"src":"22193:2:15"},"returnParameters":{"id":3983,"nodeType":"ParameterList","parameters":[],"src":"22205:0:15"},"scope":4118,"src":"22158:318:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4071,"nodeType":"Block","src":"22557:190:15","statements":[{"body":{"id":4069,"nodeType":"Block","src":"22612:130:15","statements":[{"assignments":[4051],"declarations":[{"constant":false,"id":4051,"mutability":"mutable","name":"asset","nameLocation":"22629:5:15","nodeType":"VariableDeclaration","scope":4069,"src":"22621:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4050,"name":"address","nodeType":"ElementaryTypeName","src":"22621:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4056,"initialValue":{"expression":{"baseExpression":{"id":4052,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2235,"src":"22637:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2255_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":4054,"indexExpression":{"id":4053,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4040,"src":"22648:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"22637:13:15","typeDescriptions":{"typeIdentifier":"t_struct$_AssetInfo_$2255_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref"}},"id":4055,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"22651:5:15","memberName":"asset","nodeType":"MemberAccess","referencedDeclaration":2252,"src":"22637:19:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"22621:35:15"},{"assignments":[4058],"declarations":[{"constant":false,"id":4058,"mutability":"mutable","name":"newReserve","nameLocation":"22673:10:15","nodeType":"VariableDeclaration","scope":4069,"src":"22665:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4057,"name":"uint256","nodeType":"ElementaryTypeName","src":"22665:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4062,"initialValue":{"baseExpression":{"id":4059,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4034,"src":"22686:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":4061,"indexExpression":{"id":4060,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4040,"src":"22694:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"22686:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"22665:31:15"},{"expression":{"id":4067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4063,"name":"reserves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2250,"src":"22705:8:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4065,"indexExpression":{"id":4064,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4051,"src":"22714:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"22705:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":4066,"name":"newReserve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4058,"src":"22724:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22705:29:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4068,"nodeType":"ExpressionStatement","src":"22705:29:15"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4043,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4040,"src":"22584:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4044,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2235,"src":"22588:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2255_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":4045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"22599:6:15","memberName":"length","nodeType":"MemberAccess","src":"22588:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22584:21:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4070,"initializationExpression":{"assignments":[4040],"declarations":[{"constant":false,"id":4040,"mutability":"mutable","name":"i","nameLocation":"22577:1:15","nodeType":"VariableDeclaration","scope":4070,"src":"22569:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4039,"name":"uint256","nodeType":"ElementaryTypeName","src":"22569:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4042,"initialValue":{"hexValue":"30","id":4041,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22581:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"22569:13:15"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"22607:3:15","subExpression":{"id":4047,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4040,"src":"22607:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4049,"nodeType":"ExpressionStatement","src":"22607:3:15"},"nodeType":"ForStatement","src":"22564:178:15"}]},"functionSelector":"7e04795a","id":4072,"implemented":true,"kind":"function","modifiers":[{"id":4037,"kind":"modifierInvocation","modifierName":{"id":4036,"name":"onlyPeriphery","nameLocations":["22543:13:15"],"nodeType":"IdentifierPath","referencedDeclaration":2386,"src":"22543:13:15"},"nodeType":"ModifierInvocation","src":"22543:13:15"}],"name":"decreaseReserves","nameLocation":"22491:16:15","nodeType":"FunctionDefinition","parameters":{"id":4035,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4034,"mutability":"mutable","name":"amounts","nameLocation":"22525:7:15","nodeType":"VariableDeclaration","scope":4072,"src":"22508:24:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4032,"name":"uint256","nodeType":"ElementaryTypeName","src":"22508:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4033,"nodeType":"ArrayTypeName","src":"22508:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"22507:26:15"},"returnParameters":{"id":4038,"nodeType":"ParameterList","parameters":[],"src":"22557:0:15"},"scope":4118,"src":"22482:265:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4116,"nodeType":"Block","src":"22872:252:15","statements":[{"assignments":[4081,4084],"declarations":[{"constant":false,"id":4081,"mutability":"mutable","name":"directions","nameLocation":"22894:10:15","nodeType":"VariableDeclaration","scope":4116,"src":"22880:24:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":4079,"name":"bool","nodeType":"ElementaryTypeName","src":"22880:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4080,"nodeType":"ArrayTypeName","src":"22880:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":4084,"mutability":"mutable","name":"deviations","nameLocation":"22923:10:15","nodeType":"VariableDeclaration","scope":4116,"src":"22906:27:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4082,"name":"uint256","nodeType":"ElementaryTypeName","src":"22906:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4083,"nodeType":"ArrayTypeName","src":"22906:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":4087,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":4085,"name":"getDeviation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3260,"src":"22937:12:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_array$_t_bool_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function () view returns (bool[] memory,uint256[] memory)"}},"id":4086,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22937:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_bool_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(bool[] memory,uint256[] memory)"}},"nodeType":"VariableDeclarationStatement","src":"22879:72:15"},{"body":{"id":4112,"nodeType":"Block","src":"23006:94:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":4099,"name":"directions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4081,"src":"23019:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"id":4101,"indexExpression":{"id":4100,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4089,"src":"23030:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"23019:13:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":4102,"name":"deviations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4084,"src":"23036:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":4104,"indexExpression":{"id":4103,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4089,"src":"23047:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"23036:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4105,"name":"trigger","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2237,"src":"23052:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23036:23:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"23019:40:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4111,"nodeType":"IfStatement","src":"23015:78:15","trueBody":{"id":4110,"nodeType":"Block","src":"23061:32:15","statements":[{"expression":{"hexValue":"74727565","id":4108,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"23079:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":4076,"id":4109,"nodeType":"Return","src":"23072:11:15"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4092,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4089,"src":"22978:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4093,"name":"deviations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4084,"src":"22982:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":4094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"22993:6:15","memberName":"length","nodeType":"MemberAccess","src":"22982:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22978:21:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4113,"initializationExpression":{"assignments":[4089],"declarations":[{"constant":false,"id":4089,"mutability":"mutable","name":"i","nameLocation":"22971:1:15","nodeType":"VariableDeclaration","scope":4113,"src":"22963:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4088,"name":"uint256","nodeType":"ElementaryTypeName","src":"22963:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4091,"initialValue":{"hexValue":"30","id":4090,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22975:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"22963:13:15"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"23001:3:15","subExpression":{"id":4096,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4089,"src":"23001:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4098,"nodeType":"ExpressionStatement","src":"23001:3:15"},"nodeType":"ForStatement","src":"22958:142:15"},{"expression":{"hexValue":"66616c7365","id":4114,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"23113:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":4076,"id":4115,"nodeType":"Return","src":"23106:12:15"}]},"functionSelector":"8a77c8dc","id":4117,"implemented":true,"kind":"function","modifiers":[],"name":"isRebalanceNeeded","nameLocation":"22825:17:15","nodeType":"FunctionDefinition","parameters":{"id":4073,"nodeType":"ParameterList","parameters":[],"src":"22842:2:15"},"returnParameters":{"id":4076,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4075,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4117,"src":"22866:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4074,"name":"bool","nodeType":"ElementaryTypeName","src":"22866:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"22865:6:15"},"scope":4118,"src":"22816:308:15","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":4119,"src":"1729:21398:15","usedErrors":[698,703,708,717,722,727,2052],"usedEvents":[1663,1672,2262,2269,2275,2281,2293]}],"src":"40:23089:15"},"id":15},"contracts/BaluniV1PoolFactory.sol":{"ast":{"absolutePath":"contracts/BaluniV1PoolFactory.sol","exportedSymbols":{"BaluniV1Pool":[4118],"BaluniV1PoolFactory":[4610],"Context":[2038],"ContextUpgradeable":[676],"ERC1967Utils":[1126],"ERC20":[1651],"IBaluniV1PoolPeriphery":[5638],"IBaluniV1Rebalancer":[5766],"IBaluniV1Router":[5800],"IERC1822Proxiable":[686],"IERC20":[1729],"IERC20Errors":[728],"IERC20Metadata":[1755],"Initializable":[448],"OwnableUpgradeable":[194],"ReentrancyGuard":[2107],"UUPSUpgradeable":[630]},"id":4611,"license":"GNU AGPLv3","nodeType":"SourceUnit","nodes":[{"id":4120,"literals":["solidity","0.8",".25"],"nodeType":"PragmaDirective","src":"40:23:16"},{"absolutePath":"contracts/BaluniV1Pool.sol","file":"./BaluniV1Pool.sol","id":4121,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4611,"sourceUnit":4119,"src":"1466:28:16","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","id":4122,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4611,"sourceUnit":195,"src":"1496:75:16","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","id":4123,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4611,"sourceUnit":449,"src":"1573:75:16","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","id":4124,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4611,"sourceUnit":631,"src":"1650:77:16","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":4125,"name":"Initializable","nameLocations":["1763:13:16"],"nodeType":"IdentifierPath","referencedDeclaration":448,"src":"1763:13:16"},"id":4126,"nodeType":"InheritanceSpecifier","src":"1763:13:16"},{"baseName":{"id":4127,"name":"UUPSUpgradeable","nameLocations":["1778:15:16"],"nodeType":"IdentifierPath","referencedDeclaration":630,"src":"1778:15:16"},"id":4128,"nodeType":"InheritanceSpecifier","src":"1778:15:16"},{"baseName":{"id":4129,"name":"OwnableUpgradeable","nameLocations":["1795:18:16"],"nodeType":"IdentifierPath","referencedDeclaration":194,"src":"1795:18:16"},"id":4130,"nodeType":"InheritanceSpecifier","src":"1795:18:16"}],"canonicalName":"BaluniV1PoolFactory","contractDependencies":[4118],"contractKind":"contract","fullyImplemented":true,"id":4610,"linearizedBaseContracts":[4610,194,676,630,686,448],"name":"BaluniV1PoolFactory","nameLocation":"1740:19:16","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"41d1de97","id":4133,"mutability":"mutable","name":"allPools","nameLocation":"1836:8:16","nodeType":"VariableDeclaration","scope":4610,"src":"1819:25:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[]"},"typeName":{"baseType":{"id":4131,"name":"address","nodeType":"ElementaryTypeName","src":"1819:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4132,"nodeType":"ArrayTypeName","src":"1819:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"public"},{"constant":false,"functionSelector":"531aa03e","id":4139,"mutability":"mutable","name":"getPool","nameLocation":"1904:7:16","nodeType":"VariableDeclaration","scope":4610,"src":"1849:62:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$","typeString":"mapping(address => mapping(address => address))"},"typeName":{"id":4138,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":4134,"name":"address","nodeType":"ElementaryTypeName","src":"1857:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1849:47:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$","typeString":"mapping(address => mapping(address => address))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":4137,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":4135,"name":"address","nodeType":"ElementaryTypeName","src":"1876:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1868:27:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":4136,"name":"address","nodeType":"ElementaryTypeName","src":"1887:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}}},"visibility":"public"},{"constant":false,"functionSelector":"01d22ccd","id":4141,"mutability":"mutable","name":"rebalancer","nameLocation":"1933:10:16","nodeType":"VariableDeclaration","scope":4610,"src":"1918:25:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4140,"name":"address","nodeType":"ElementaryTypeName","src":"1918:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"77aace1a","id":4143,"mutability":"mutable","name":"periphery","nameLocation":"1963:9:16","nodeType":"VariableDeclaration","scope":4610,"src":"1948:24:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4142,"name":"address","nodeType":"ElementaryTypeName","src":"1948:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"anonymous":false,"eventSelector":"93de7d9de9f3e05ba87a0170fcbb71af623439caf5e5079587b9d38c5da9b0d1","id":4152,"name":"PoolCreated","nameLocation":"1985:11:16","nodeType":"EventDefinition","parameters":{"id":4151,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4145,"indexed":true,"mutability":"mutable","name":"pool","nameLocation":"2013:4:16","nodeType":"VariableDeclaration","scope":4152,"src":"1997:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4144,"name":"address","nodeType":"ElementaryTypeName","src":"1997:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4148,"indexed":false,"mutability":"mutable","name":"assets","nameLocation":"2029:6:16","nodeType":"VariableDeclaration","scope":4152,"src":"2019:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4146,"name":"address","nodeType":"ElementaryTypeName","src":"2019:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4147,"nodeType":"ArrayTypeName","src":"2019:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":4150,"indexed":false,"mutability":"mutable","name":"rebalancer","nameLocation":"2045:10:16","nodeType":"VariableDeclaration","scope":4152,"src":"2037:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4149,"name":"address","nodeType":"ElementaryTypeName","src":"2037:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1996:60:16"},"src":"1979:78:16"},{"body":{"id":4171,"nodeType":"Block","src":"2123:101:16","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":4159,"name":"__UUPSUpgradeable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":502,"src":"2130:22:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":4160,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2130:24:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4161,"nodeType":"ExpressionStatement","src":"2130:24:16"},{"expression":{"arguments":[{"expression":{"id":4163,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2176:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2180:6:16","memberName":"sender","nodeType":"MemberAccess","src":"2176:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4162,"name":"__Ownable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":54,"src":"2161:14:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":4165,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2161:26:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4166,"nodeType":"ExpressionStatement","src":"2161:26:16"},{"expression":{"id":4169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4167,"name":"rebalancer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4141,"src":"2194:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4168,"name":"_rebalancer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4154,"src":"2207:11:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2194:24:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4170,"nodeType":"ExpressionStatement","src":"2194:24:16"}]},"functionSelector":"c4d66de8","id":4172,"implemented":true,"kind":"function","modifiers":[{"id":4157,"kind":"modifierInvocation","modifierName":{"id":4156,"name":"initializer","nameLocations":["2111:11:16"],"nodeType":"IdentifierPath","referencedDeclaration":302,"src":"2111:11:16"},"nodeType":"ModifierInvocation","src":"2111:11:16"}],"name":"initialize","nameLocation":"2072:10:16","nodeType":"FunctionDefinition","parameters":{"id":4155,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4154,"mutability":"mutable","name":"_rebalancer","nameLocation":"2091:11:16","nodeType":"VariableDeclaration","scope":4172,"src":"2083:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4153,"name":"address","nodeType":"ElementaryTypeName","src":"2083:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2082:21:16"},"returnParameters":{"id":4158,"nodeType":"ParameterList","parameters":[],"src":"2123:0:16"},"scope":4610,"src":"2063:161:16","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4186,"nodeType":"Block","src":"2321:37:16","statements":[{"expression":{"id":4184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4182,"name":"rebalancer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4141,"src":"2328:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4183,"name":"_rebalancer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4174,"src":"2341:11:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2328:24:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4185,"nodeType":"ExpressionStatement","src":"2328:24:16"}]},"functionSelector":"8f2248bc","id":4187,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":4179,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4176,"src":"2311:8:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"id":4180,"kind":"modifierInvocation","modifierName":{"id":4178,"name":"reinitializer","nameLocations":["2297:13:16"],"nodeType":"IdentifierPath","referencedDeclaration":349,"src":"2297:13:16"},"nodeType":"ModifierInvocation","src":"2297:23:16"}],"name":"reinitialize","nameLocation":"2239:12:16","nodeType":"FunctionDefinition","parameters":{"id":4177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4174,"mutability":"mutable","name":"_rebalancer","nameLocation":"2260:11:16","nodeType":"VariableDeclaration","scope":4187,"src":"2252:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4173,"name":"address","nodeType":"ElementaryTypeName","src":"2252:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4176,"mutability":"mutable","name":"_version","nameLocation":"2280:8:16","nodeType":"VariableDeclaration","scope":4187,"src":"2273:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4175,"name":"uint64","nodeType":"ElementaryTypeName","src":"2273:6:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"2251:38:16"},"returnParameters":{"id":4181,"nodeType":"ParameterList","parameters":[],"src":"2321:0:16"},"scope":4610,"src":"2230:128:16","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[584],"body":{"id":4195,"nodeType":"Block","src":"2446:2:16","statements":[]},"id":4196,"implemented":true,"kind":"function","modifiers":[{"id":4193,"kind":"modifierInvocation","modifierName":{"id":4192,"name":"onlyOwner","nameLocations":["2436:9:16"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"2436:9:16"},"nodeType":"ModifierInvocation","src":"2436:9:16"}],"name":"_authorizeUpgrade","nameLocation":"2373:17:16","nodeType":"FunctionDefinition","overrides":{"id":4191,"nodeType":"OverrideSpecifier","overrides":[],"src":"2427:8:16"},"parameters":{"id":4190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4189,"mutability":"mutable","name":"newImplementation","nameLocation":"2399:17:16","nodeType":"VariableDeclaration","scope":4196,"src":"2391:25:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4188,"name":"address","nodeType":"ElementaryTypeName","src":"2391:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2390:27:16"},"returnParameters":{"id":4194,"nodeType":"ParameterList","parameters":[],"src":"2446:0:16"},"scope":4610,"src":"2364:84:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4372,"nodeType":"Block","src":"2941:951:16","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4211,"name":"periphery","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4143,"src":"2956:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":4214,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2977:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4213,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2969:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4212,"name":"address","nodeType":"ElementaryTypeName","src":"2969:7:16","typeDescriptions":{}}},"id":4215,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2969:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2956:23:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"506572697068657279206e6f7420736574","id":4217,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2981:19:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_65b375d97171da936ab457dc3ee73246dd9c78a6728e209f2b7bd00d6d44e84f","typeString":"literal_string \"Periphery not set\""},"value":"Periphery not set"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_65b375d97171da936ab457dc3ee73246dd9c78a6728e209f2b7bd00d6d44e84f","typeString":"literal_string \"Periphery not set\""}],"id":4210,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2948:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4218,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2948:53:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4219,"nodeType":"ExpressionStatement","src":"2948:53:16"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4221,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4200,"src":"3016:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3023:6:16","memberName":"length","nodeType":"MemberAccess","src":"3016:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":4223,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3032:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3016:17:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4174206c656173742074776f2061737365747320617265207265717569726564","id":4225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3035:34:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_39cbcbdd9e6251e82f28a321c8ea534706a2cf624e365b64351e1f84ffc7ff8d","typeString":"literal_string \"At least two assets are required\""},"value":"At least two assets are required"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_39cbcbdd9e6251e82f28a321c8ea534706a2cf624e365b64351e1f84ffc7ff8d","typeString":"literal_string \"At least two assets are required\""}],"id":4220,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3008:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4226,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3008:62:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4227,"nodeType":"ExpressionStatement","src":"3008:62:16"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4229,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4200,"src":"3085:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3092:6:16","memberName":"length","nodeType":"MemberAccess","src":"3085:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4231,"name":"weights","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4203,"src":"3102:7:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":4232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3110:6:16","memberName":"length","nodeType":"MemberAccess","src":"3102:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3085:31:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"41737365747320616e642077656967687473206c656e677468206d69736d61746368","id":4234,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3118:36:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_ebb567ad160cf2ebbf5e53ab40a3ffae6f6492169d006ee3f8bad6794e36f372","typeString":"literal_string \"Assets and weights length mismatch\""},"value":"Assets and weights length mismatch"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ebb567ad160cf2ebbf5e53ab40a3ffae6f6492169d006ee3f8bad6794e36f372","typeString":"literal_string \"Assets and weights length mismatch\""}],"id":4228,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3077:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4235,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3077:78:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4236,"nodeType":"ExpressionStatement","src":"3077:78:16"},{"body":{"id":4284,"nodeType":"Block","src":"3208:183:16","statements":[{"body":{"id":4282,"nodeType":"Block","src":"3265:119:16","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"baseExpression":{"baseExpression":{"id":4264,"name":"getPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4139,"src":"3292:7:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$","typeString":"mapping(address => mapping(address => address))"}},"id":4268,"indexExpression":{"baseExpression":{"id":4265,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4200,"src":"3300:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4267,"indexExpression":{"id":4266,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4238,"src":"3307:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3300:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3292:18:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":4272,"indexExpression":{"baseExpression":{"id":4269,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4200,"src":"3311:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4271,"indexExpression":{"id":4270,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4249,"src":"3318:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3311:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3292:29:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4263,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3284:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4262,"name":"address","nodeType":"ElementaryTypeName","src":"3284:7:16","typeDescriptions":{}}},"id":4273,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3284:38:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":4276,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3334:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4275,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3326:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4274,"name":"address","nodeType":"ElementaryTypeName","src":"3326:7:16","typeDescriptions":{}}},"id":4277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3326:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3284:52:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"506f6f6c20616c72656164792065786973747320666f7220746869732070616972","id":4279,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3338:35:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_2258c7547209181d37eb4aebb58e4d2c60f10b97b943ea694f4dec24e242181e","typeString":"literal_string \"Pool already exists for this pair\""},"value":"Pool already exists for this pair"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2258c7547209181d37eb4aebb58e4d2c60f10b97b943ea694f4dec24e242181e","typeString":"literal_string \"Pool already exists for this pair\""}],"id":4261,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3276:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4280,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3276:98:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4281,"nodeType":"ExpressionStatement","src":"3276:98:16"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4254,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4249,"src":"3241:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4255,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4200,"src":"3245:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3252:6:16","memberName":"length","nodeType":"MemberAccess","src":"3245:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3241:17:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4283,"initializationExpression":{"assignments":[4249],"declarations":[{"constant":false,"id":4249,"mutability":"mutable","name":"j","nameLocation":"3230:1:16","nodeType":"VariableDeclaration","scope":4283,"src":"3222:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4248,"name":"uint256","nodeType":"ElementaryTypeName","src":"3222:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4253,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4250,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4238,"src":"3234:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3238:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3234:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3222:17:16"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3260:3:16","subExpression":{"id":4258,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4249,"src":"3260:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4260,"nodeType":"ExpressionStatement","src":"3260:3:16"},"nodeType":"ForStatement","src":"3217:167:16"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4241,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4238,"src":"3184:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4242,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4200,"src":"3188:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3195:6:16","memberName":"length","nodeType":"MemberAccess","src":"3188:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3184:17:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4285,"initializationExpression":{"assignments":[4238],"declarations":[{"constant":false,"id":4238,"mutability":"mutable","name":"i","nameLocation":"3177:1:16","nodeType":"VariableDeclaration","scope":4285,"src":"3169:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4237,"name":"uint256","nodeType":"ElementaryTypeName","src":"3169:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4240,"initialValue":{"hexValue":"30","id":4239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3181:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3169:13:16"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3203:3:16","subExpression":{"id":4245,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4238,"src":"3203:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4247,"nodeType":"ExpressionStatement","src":"3203:3:16"},"nodeType":"ForStatement","src":"3164:227:16"},{"assignments":[4288],"declarations":[{"constant":false,"id":4288,"mutability":"mutable","name":"newPool","nameLocation":"3412:7:16","nodeType":"VariableDeclaration","scope":4372,"src":"3399:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Pool_$4118","typeString":"contract BaluniV1Pool"},"typeName":{"id":4287,"nodeType":"UserDefinedTypeName","pathNode":{"id":4286,"name":"BaluniV1Pool","nameLocations":["3399:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":4118,"src":"3399:12:16"},"referencedDeclaration":4118,"src":"3399:12:16","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Pool_$4118","typeString":"contract BaluniV1Pool"}},"visibility":"internal"}],"id":4298,"initialValue":{"arguments":[{"id":4292,"name":"rebalancer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4141,"src":"3439:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4293,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4200,"src":"3451:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},{"id":4294,"name":"weights","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4203,"src":"3459:7:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":4295,"name":"trigger","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4205,"src":"3468:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4296,"name":"periphery","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4143,"src":"3477:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":4291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"NewExpression","src":"3422:16:16","typeDescriptions":{"typeIdentifier":"t_function_creation_nonpayable$_t_address_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_address_$returns$_t_contract$_BaluniV1Pool_$4118_$","typeString":"function (address,address[] memory,uint256[] memory,uint256,address) returns (contract BaluniV1Pool)"},"typeName":{"id":4290,"nodeType":"UserDefinedTypeName","pathNode":{"id":4289,"name":"BaluniV1Pool","nameLocations":["3426:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":4118,"src":"3426:12:16"},"referencedDeclaration":4118,"src":"3426:12:16","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Pool_$4118","typeString":"contract BaluniV1Pool"}}},"id":4297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3422:65:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Pool_$4118","typeString":"contract BaluniV1Pool"}},"nodeType":"VariableDeclarationStatement","src":"3399:88:16"},{"assignments":[4300],"declarations":[{"constant":false,"id":4300,"mutability":"mutable","name":"poolAddress","nameLocation":"3504:11:16","nodeType":"VariableDeclaration","scope":4372,"src":"3496:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4299,"name":"address","nodeType":"ElementaryTypeName","src":"3496:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4305,"initialValue":{"arguments":[{"id":4303,"name":"newPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4288,"src":"3526:7:16","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Pool_$4118","typeString":"contract BaluniV1Pool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniV1Pool_$4118","typeString":"contract BaluniV1Pool"}],"id":4302,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3518:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4301,"name":"address","nodeType":"ElementaryTypeName","src":"3518:7:16","typeDescriptions":{}}},"id":4304,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3518:16:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3496:38:16"},{"expression":{"arguments":[{"id":4309,"name":"poolAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4300,"src":"3557:11:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":4306,"name":"allPools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4133,"src":"3543:8:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":4308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3552:4:16","memberName":"push","nodeType":"MemberAccess","src":"3543:13:16","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer,address)"}},"id":4310,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3543:26:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4311,"nodeType":"ExpressionStatement","src":"3543:26:16"},{"body":{"id":4362,"nodeType":"Block","src":"3620:182:16","statements":[{"body":{"id":4360,"nodeType":"Block","src":"3677:118:16","statements":[{"expression":{"id":4346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":4336,"name":"getPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4139,"src":"3688:7:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$","typeString":"mapping(address => mapping(address => address))"}},"id":4343,"indexExpression":{"baseExpression":{"id":4337,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4200,"src":"3696:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4339,"indexExpression":{"id":4338,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4313,"src":"3703:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3696:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3688:18:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":4344,"indexExpression":{"baseExpression":{"id":4340,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4200,"src":"3707:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4342,"indexExpression":{"id":4341,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4324,"src":"3714:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3707:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3688:29:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4345,"name":"poolAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4300,"src":"3720:11:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3688:43:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4347,"nodeType":"ExpressionStatement","src":"3688:43:16"},{"expression":{"id":4358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":4348,"name":"getPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4139,"src":"3742:7:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$","typeString":"mapping(address => mapping(address => address))"}},"id":4355,"indexExpression":{"baseExpression":{"id":4349,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4200,"src":"3750:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4351,"indexExpression":{"id":4350,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4324,"src":"3757:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3750:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3742:18:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":4356,"indexExpression":{"baseExpression":{"id":4352,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4200,"src":"3761:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4354,"indexExpression":{"id":4353,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4313,"src":"3768:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3761:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3742:29:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4357,"name":"poolAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4300,"src":"3774:11:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3742:43:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4359,"nodeType":"ExpressionStatement","src":"3742:43:16"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4329,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4324,"src":"3653:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4330,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4200,"src":"3657:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3664:6:16","memberName":"length","nodeType":"MemberAccess","src":"3657:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3653:17:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4361,"initializationExpression":{"assignments":[4324],"declarations":[{"constant":false,"id":4324,"mutability":"mutable","name":"j","nameLocation":"3642:1:16","nodeType":"VariableDeclaration","scope":4361,"src":"3634:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4323,"name":"uint256","nodeType":"ElementaryTypeName","src":"3634:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4328,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4325,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4313,"src":"3646:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4326,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3650:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3646:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3634:17:16"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3672:3:16","subExpression":{"id":4333,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4324,"src":"3672:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4335,"nodeType":"ExpressionStatement","src":"3672:3:16"},"nodeType":"ForStatement","src":"3629:166:16"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4316,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4313,"src":"3596:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4317,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4200,"src":"3600:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3607:6:16","memberName":"length","nodeType":"MemberAccess","src":"3600:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3596:17:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4363,"initializationExpression":{"assignments":[4313],"declarations":[{"constant":false,"id":4313,"mutability":"mutable","name":"i","nameLocation":"3589:1:16","nodeType":"VariableDeclaration","scope":4363,"src":"3581:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4312,"name":"uint256","nodeType":"ElementaryTypeName","src":"3581:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4315,"initialValue":{"hexValue":"30","id":4314,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3593:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3581:13:16"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3615:3:16","subExpression":{"id":4320,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4313,"src":"3615:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4322,"nodeType":"ExpressionStatement","src":"3615:3:16"},"nodeType":"ForStatement","src":"3576:226:16"},{"eventCall":{"arguments":[{"id":4365,"name":"poolAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4300,"src":"3827:11:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4366,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4200,"src":"3840:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},{"id":4367,"name":"rebalancer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4141,"src":"3848:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"},{"typeIdentifier":"t_address","typeString":"address"}],"id":4364,"name":"PoolCreated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4152,"src":"3815:11:16","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$returns$__$","typeString":"function (address,address[] memory,address)"}},"id":4368,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3815:44:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4369,"nodeType":"EmitStatement","src":"3810:49:16"},{"expression":{"id":4370,"name":"poolAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4300,"src":"3875:11:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":4209,"id":4371,"nodeType":"Return","src":"3868:18:16"}]},"documentation":{"id":4197,"nodeType":"StructuredDocumentation","src":"2454:368:16","text":" @dev Creates a new BaluniV1Pool contract and registers it in the factory.\n @param assets The array of asset addresses to be included in the pool.\n @param weights The array of weights corresponding to each asset in the pool.\n @param trigger The trigger value for rebalancing the pool.\n @return The address of the newly created pool."},"functionSelector":"3069873b","id":4373,"implemented":true,"kind":"function","modifiers":[],"name":"createPool","nameLocation":"2835:10:16","nodeType":"FunctionDefinition","parameters":{"id":4206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4200,"mutability":"mutable","name":"assets","nameLocation":"2863:6:16","nodeType":"VariableDeclaration","scope":4373,"src":"2846:23:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4198,"name":"address","nodeType":"ElementaryTypeName","src":"2846:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4199,"nodeType":"ArrayTypeName","src":"2846:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":4203,"mutability":"mutable","name":"weights","nameLocation":"2888:7:16","nodeType":"VariableDeclaration","scope":4373,"src":"2871:24:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4201,"name":"uint256","nodeType":"ElementaryTypeName","src":"2871:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4202,"nodeType":"ArrayTypeName","src":"2871:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":4205,"mutability":"mutable","name":"trigger","nameLocation":"2905:7:16","nodeType":"VariableDeclaration","scope":4373,"src":"2897:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4204,"name":"uint256","nodeType":"ElementaryTypeName","src":"2897:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2845:68:16"},"returnParameters":{"id":4209,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4208,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4373,"src":"2932:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4207,"name":"address","nodeType":"ElementaryTypeName","src":"2932:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2931:9:16"},"scope":4610,"src":"2826:1066:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4382,"nodeType":"Block","src":"4077:28:16","statements":[{"expression":{"id":4380,"name":"allPools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4133,"src":"4091:8:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"functionReturnParameters":4379,"id":4381,"nodeType":"Return","src":"4084:15:16"}]},"documentation":{"id":4374,"nodeType":"StructuredDocumentation","src":"3898:111:16","text":" @dev Retrieves all the pools created by the factory.\n @return An array of pool addresses."},"functionSelector":"d88ff1f4","id":4383,"implemented":true,"kind":"function","modifiers":[],"name":"getAllPools","nameLocation":"4022:11:16","nodeType":"FunctionDefinition","parameters":{"id":4375,"nodeType":"ParameterList","parameters":[],"src":"4033:2:16"},"returnParameters":{"id":4379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4378,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4383,"src":"4059:16:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4376,"name":"address","nodeType":"ElementaryTypeName","src":"4059:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4377,"nodeType":"ArrayTypeName","src":"4059:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"4058:18:16"},"scope":4610,"src":"4013:92:16","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":4392,"nodeType":"Block","src":"4281:35:16","statements":[{"expression":{"expression":{"id":4389,"name":"allPools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4133,"src":"4295:8:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":4390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4304:6:16","memberName":"length","nodeType":"MemberAccess","src":"4295:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4388,"id":4391,"nodeType":"Return","src":"4288:22:16"}]},"documentation":{"id":4384,"nodeType":"StructuredDocumentation","src":"4111:109:16","text":" @dev Retrieves the number of pools created by the factory.\n @return The count of pools."},"functionSelector":"b4ac6860","id":4393,"implemented":true,"kind":"function","modifiers":[],"name":"getPoolsCount","nameLocation":"4233:13:16","nodeType":"FunctionDefinition","parameters":{"id":4385,"nodeType":"ParameterList","parameters":[],"src":"4246:2:16"},"returnParameters":{"id":4388,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4387,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4393,"src":"4272:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4386,"name":"uint256","nodeType":"ElementaryTypeName","src":"4272:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4271:9:16"},"scope":4610,"src":"4224:92:16","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":4413,"nodeType":"Block","src":"4566:88:16","statements":[{"assignments":[4404],"declarations":[{"constant":false,"id":4404,"mutability":"mutable","name":"pool","nameLocation":"4586:4:16","nodeType":"VariableDeclaration","scope":4413,"src":"4573:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Pool_$4118","typeString":"contract BaluniV1Pool"},"typeName":{"id":4403,"nodeType":"UserDefinedTypeName","pathNode":{"id":4402,"name":"BaluniV1Pool","nameLocations":["4573:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":4118,"src":"4573:12:16"},"referencedDeclaration":4118,"src":"4573:12:16","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Pool_$4118","typeString":"contract BaluniV1Pool"}},"visibility":"internal"}],"id":4408,"initialValue":{"arguments":[{"id":4406,"name":"poolAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4396,"src":"4606:11:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4405,"name":"BaluniV1Pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4118,"src":"4593:12:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_BaluniV1Pool_$4118_$","typeString":"type(contract BaluniV1Pool)"}},"id":4407,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4593:25:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Pool_$4118","typeString":"contract BaluniV1Pool"}},"nodeType":"VariableDeclarationStatement","src":"4573:45:16"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4409,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4404,"src":"4632:4:16","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Pool_$4118","typeString":"contract BaluniV1Pool"}},"id":4410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4637:9:16","memberName":"getAssets","nodeType":"MemberAccess","referencedDeclaration":3458,"src":"4632:14:16","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function () view external returns (address[] memory)"}},"id":4411,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4632:16:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":4401,"id":4412,"nodeType":"Return","src":"4625:23:16"}]},"documentation":{"id":4394,"nodeType":"StructuredDocumentation","src":"4322:155:16","text":" @dev Retrieves the assets of a specific pool.\n @param poolAddress The address of the pool.\n @return An array of asset addresses."},"functionSelector":"4276b97b","id":4414,"implemented":true,"kind":"function","modifiers":[],"name":"getPoolAssets","nameLocation":"4490:13:16","nodeType":"FunctionDefinition","parameters":{"id":4397,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4396,"mutability":"mutable","name":"poolAddress","nameLocation":"4512:11:16","nodeType":"VariableDeclaration","scope":4414,"src":"4504:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4395,"name":"address","nodeType":"ElementaryTypeName","src":"4504:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4503:21:16"},"returnParameters":{"id":4401,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4400,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4414,"src":"4548:16:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4398,"name":"address","nodeType":"ElementaryTypeName","src":"4548:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4399,"nodeType":"ArrayTypeName","src":"4548:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"4547:18:16"},"scope":4610,"src":"4481:173:16","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":4433,"nodeType":"Block","src":"4972:52:16","statements":[{"expression":{"arguments":[{"baseExpression":{"baseExpression":{"id":4426,"name":"getPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4139,"src":"4994:7:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$","typeString":"mapping(address => mapping(address => address))"}},"id":4428,"indexExpression":{"id":4427,"name":"asset1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4417,"src":"5002:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4994:15:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":4430,"indexExpression":{"id":4429,"name":"asset2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4419,"src":"5010:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4994:23:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4425,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4986:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4424,"name":"address","nodeType":"ElementaryTypeName","src":"4986:7:16","typeDescriptions":{}}},"id":4431,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4986:32:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":4423,"id":4432,"nodeType":"Return","src":"4979:39:16"}]},"documentation":{"id":4415,"nodeType":"StructuredDocumentation","src":"4660:219:16","text":" @dev Retrieves the pool address based on the given assets.\n @param asset1 The address of the first asset.\n @param asset2 The address of the second asset.\n @return The address of the pool."},"functionSelector":"2d5e94a7","id":4434,"implemented":true,"kind":"function","modifiers":[],"name":"getPoolByAssets","nameLocation":"4892:15:16","nodeType":"FunctionDefinition","parameters":{"id":4420,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4417,"mutability":"mutable","name":"asset1","nameLocation":"4916:6:16","nodeType":"VariableDeclaration","scope":4434,"src":"4908:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4416,"name":"address","nodeType":"ElementaryTypeName","src":"4908:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4419,"mutability":"mutable","name":"asset2","nameLocation":"4932:6:16","nodeType":"VariableDeclaration","scope":4434,"src":"4924:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4418,"name":"address","nodeType":"ElementaryTypeName","src":"4924:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4907:32:16"},"returnParameters":{"id":4423,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4422,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4434,"src":"4963:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4421,"name":"address","nodeType":"ElementaryTypeName","src":"4963:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4962:9:16"},"scope":4610,"src":"4883:141:16","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":4563,"nodeType":"Block","src":"5306:667:16","statements":[{"assignments":[4447],"declarations":[{"constant":false,"id":4447,"mutability":"mutable","name":"pools","nameLocation":"5330:5:16","nodeType":"VariableDeclaration","scope":4563,"src":"5313:22:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4445,"name":"address","nodeType":"ElementaryTypeName","src":"5313:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4446,"nodeType":"ArrayTypeName","src":"5313:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":4454,"initialValue":{"arguments":[{"expression":{"id":4451,"name":"allPools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4133,"src":"5352:8:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":4452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5361:6:16","memberName":"length","nodeType":"MemberAccess","src":"5352:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4450,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5338:13:16","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address[] memory)"},"typeName":{"baseType":{"id":4448,"name":"address","nodeType":"ElementaryTypeName","src":"5342:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4449,"nodeType":"ArrayTypeName","src":"5342:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"id":4453,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5338:30:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"5313:55:16"},{"assignments":[4456],"declarations":[{"constant":false,"id":4456,"mutability":"mutable","name":"count","nameLocation":"5383:5:16","nodeType":"VariableDeclaration","scope":4563,"src":"5375:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4455,"name":"uint256","nodeType":"ElementaryTypeName","src":"5375:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4458,"initialValue":{"hexValue":"30","id":4457,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5391:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5375:17:16"},{"body":{"id":4528,"nodeType":"Block","src":"5447:365:16","statements":[{"assignments":[4472],"declarations":[{"constant":false,"id":4472,"mutability":"mutable","name":"pool","nameLocation":"5469:4:16","nodeType":"VariableDeclaration","scope":4528,"src":"5456:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Pool_$4118","typeString":"contract BaluniV1Pool"},"typeName":{"id":4471,"nodeType":"UserDefinedTypeName","pathNode":{"id":4470,"name":"BaluniV1Pool","nameLocations":["5456:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":4118,"src":"5456:12:16"},"referencedDeclaration":4118,"src":"5456:12:16","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Pool_$4118","typeString":"contract BaluniV1Pool"}},"visibility":"internal"}],"id":4478,"initialValue":{"arguments":[{"baseExpression":{"id":4474,"name":"allPools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4133,"src":"5489:8:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":4476,"indexExpression":{"id":4475,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4460,"src":"5498:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5489:11:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4473,"name":"BaluniV1Pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4118,"src":"5476:12:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_BaluniV1Pool_$4118_$","typeString":"type(contract BaluniV1Pool)"}},"id":4477,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5476:25:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Pool_$4118","typeString":"contract BaluniV1Pool"}},"nodeType":"VariableDeclarationStatement","src":"5456:45:16"},{"assignments":[4483],"declarations":[{"constant":false,"id":4483,"mutability":"mutable","name":"assets","nameLocation":"5527:6:16","nodeType":"VariableDeclaration","scope":4528,"src":"5510:23:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4481,"name":"address","nodeType":"ElementaryTypeName","src":"5510:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4482,"nodeType":"ArrayTypeName","src":"5510:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":4487,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4484,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4472,"src":"5536:4:16","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Pool_$4118","typeString":"contract BaluniV1Pool"}},"id":4485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5541:9:16","memberName":"getAssets","nodeType":"MemberAccess","referencedDeclaration":3458,"src":"5536:14:16","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function () view external returns (address[] memory)"}},"id":4486,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5536:16:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"5510:42:16"},{"body":{"id":4519,"nodeType":"Block","src":"5607:135:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":4499,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4483,"src":"5622:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4501,"indexExpression":{"id":4500,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4489,"src":"5629:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5622:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4502,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4437,"src":"5635:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5622:18:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4518,"nodeType":"IfStatement","src":"5618:115:16","trueBody":{"id":4517,"nodeType":"Block","src":"5642:91:16","statements":[{"expression":{"id":4511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4504,"name":"pools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4447,"src":"5655:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4506,"indexExpression":{"id":4505,"name":"count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4456,"src":"5661:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5655:12:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4509,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4472,"src":"5678:4:16","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Pool_$4118","typeString":"contract BaluniV1Pool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniV1Pool_$4118","typeString":"contract BaluniV1Pool"}],"id":4508,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5670:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4507,"name":"address","nodeType":"ElementaryTypeName","src":"5670:7:16","typeDescriptions":{}}},"id":4510,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5670:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5655:28:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4512,"nodeType":"ExpressionStatement","src":"5655:28:16"},{"expression":{"id":4514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5696:7:16","subExpression":{"id":4513,"name":"count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4456,"src":"5696:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4515,"nodeType":"ExpressionStatement","src":"5696:7:16"},{"id":4516,"nodeType":"Break","src":"5716:5:16"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4492,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4489,"src":"5583:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4493,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4483,"src":"5587:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5594:6:16","memberName":"length","nodeType":"MemberAccess","src":"5587:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5583:17:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4520,"initializationExpression":{"assignments":[4489],"declarations":[{"constant":false,"id":4489,"mutability":"mutable","name":"j","nameLocation":"5576:1:16","nodeType":"VariableDeclaration","scope":4520,"src":"5568:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4488,"name":"uint256","nodeType":"ElementaryTypeName","src":"5568:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4491,"initialValue":{"hexValue":"30","id":4490,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5580:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5568:13:16"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5602:3:16","subExpression":{"id":4496,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4489,"src":"5602:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4498,"nodeType":"ExpressionStatement","src":"5602:3:16"},"nodeType":"ForStatement","src":"5563:179:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4521,"name":"count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4456,"src":"5756:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4522,"name":"pools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4447,"src":"5765:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5771:6:16","memberName":"length","nodeType":"MemberAccess","src":"5765:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5756:21:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4527,"nodeType":"IfStatement","src":"5752:53:16","trueBody":{"id":4526,"nodeType":"Block","src":"5779:26:16","statements":[{"id":4525,"nodeType":"Break","src":"5790:5:16"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4463,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4460,"src":"5421:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4464,"name":"allPools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4133,"src":"5425:8:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":4465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5434:6:16","memberName":"length","nodeType":"MemberAccess","src":"5425:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5421:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4529,"initializationExpression":{"assignments":[4460],"declarations":[{"constant":false,"id":4460,"mutability":"mutable","name":"i","nameLocation":"5414:1:16","nodeType":"VariableDeclaration","scope":4529,"src":"5406:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4459,"name":"uint256","nodeType":"ElementaryTypeName","src":"5406:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4462,"initialValue":{"hexValue":"30","id":4461,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5418:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5406:13:16"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5442:3:16","subExpression":{"id":4467,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4460,"src":"5442:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4469,"nodeType":"ExpressionStatement","src":"5442:3:16"},"nodeType":"ForStatement","src":"5401:411:16"},{"assignments":[4534],"declarations":[{"constant":false,"id":4534,"mutability":"mutable","name":"result","nameLocation":"5837:6:16","nodeType":"VariableDeclaration","scope":4563,"src":"5820:23:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4532,"name":"address","nodeType":"ElementaryTypeName","src":"5820:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4533,"nodeType":"ArrayTypeName","src":"5820:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":4540,"initialValue":{"arguments":[{"id":4538,"name":"count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4456,"src":"5860:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4537,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5846:13:16","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address[] memory)"},"typeName":{"baseType":{"id":4535,"name":"address","nodeType":"ElementaryTypeName","src":"5850:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4536,"nodeType":"ArrayTypeName","src":"5850:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"id":4539,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5846:20:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"5820:46:16"},{"body":{"id":4559,"nodeType":"Block","src":"5909:37:16","statements":[{"expression":{"id":4557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4551,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4534,"src":"5918:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4553,"indexExpression":{"id":4552,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4542,"src":"5925:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5918:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":4554,"name":"pools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4447,"src":"5930:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4556,"indexExpression":{"id":4555,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4542,"src":"5936:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5930:8:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5918:20:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4558,"nodeType":"ExpressionStatement","src":"5918:20:16"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4545,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4542,"src":"5893:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4546,"name":"count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4456,"src":"5897:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5893:9:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4560,"initializationExpression":{"assignments":[4542],"declarations":[{"constant":false,"id":4542,"mutability":"mutable","name":"i","nameLocation":"5886:1:16","nodeType":"VariableDeclaration","scope":4560,"src":"5878:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4541,"name":"uint256","nodeType":"ElementaryTypeName","src":"5878:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4544,"initialValue":{"hexValue":"30","id":4543,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5890:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5878:13:16"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5904:3:16","subExpression":{"id":4548,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4542,"src":"5904:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4550,"nodeType":"ExpressionStatement","src":"5904:3:16"},"nodeType":"ForStatement","src":"5873:73:16"},{"expression":{"id":4561,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4534,"src":"5961:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":4442,"id":4562,"nodeType":"Return","src":"5954:13:16"}]},"documentation":{"id":4435,"nodeType":"StructuredDocumentation","src":"5030:191:16","text":" @dev Returns an array of pool addresses that contain the specified token.\n @param token The address of the token to search for.\n @return An array of pool addresses."},"functionSelector":"b4340e6a","id":4564,"implemented":true,"kind":"function","modifiers":[],"name":"getPoolsByAsset","nameLocation":"5234:15:16","nodeType":"FunctionDefinition","parameters":{"id":4438,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4437,"mutability":"mutable","name":"token","nameLocation":"5258:5:16","nodeType":"VariableDeclaration","scope":4564,"src":"5250:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4436,"name":"address","nodeType":"ElementaryTypeName","src":"5250:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5249:15:16"},"returnParameters":{"id":4442,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4441,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4564,"src":"5288:16:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4439,"name":"address","nodeType":"ElementaryTypeName","src":"5288:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4440,"nodeType":"ArrayTypeName","src":"5288:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"5287:18:16"},"scope":4610,"src":"5225:748:16","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":4576,"nodeType":"Block","src":"6188:38:16","statements":[{"expression":{"id":4574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4572,"name":"periphery","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4143,"src":"6195:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4573,"name":"_newPeriphery","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4567,"src":"6207:13:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6195:25:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4575,"nodeType":"ExpressionStatement","src":"6195:25:16"}]},"documentation":{"id":4565,"nodeType":"StructuredDocumentation","src":"5979:138:16","text":" @dev Changes the address of the periphery contract.\n @param _newPeriphery The new address of the periphery contract."},"functionSelector":"e9b31cff","id":4577,"implemented":true,"kind":"function","modifiers":[{"id":4570,"kind":"modifierInvocation","modifierName":{"id":4569,"name":"onlyOwner","nameLocations":["6178:9:16"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"6178:9:16"},"nodeType":"ModifierInvocation","src":"6178:9:16"}],"name":"changePeriphery","nameLocation":"6130:15:16","nodeType":"FunctionDefinition","parameters":{"id":4568,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4567,"mutability":"mutable","name":"_newPeriphery","nameLocation":"6154:13:16","nodeType":"VariableDeclaration","scope":4577,"src":"6146:21:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4566,"name":"address","nodeType":"ElementaryTypeName","src":"6146:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6145:23:16"},"returnParameters":{"id":4571,"nodeType":"ParameterList","parameters":[],"src":"6188:0:16"},"scope":4610,"src":"6121:105:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4608,"nodeType":"Block","src":"6290:151:16","statements":[{"body":{"id":4604,"nodeType":"Block","src":"6343:74:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":4595,"name":"allPools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4133,"src":"6356:8:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":4597,"indexExpression":{"id":4596,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4585,"src":"6365:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6356:11:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4598,"name":"_pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4579,"src":"6371:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6356:20:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4603,"nodeType":"IfStatement","src":"6352:58:16","trueBody":{"id":4602,"nodeType":"Block","src":"6378:32:16","statements":[{"expression":{"hexValue":"74727565","id":4600,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6396:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":4583,"id":4601,"nodeType":"Return","src":"6389:11:16"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4588,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4585,"src":"6317:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4589,"name":"allPools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4133,"src":"6321:8:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":4590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6330:6:16","memberName":"length","nodeType":"MemberAccess","src":"6321:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6317:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4605,"initializationExpression":{"assignments":[4585],"declarations":[{"constant":false,"id":4585,"mutability":"mutable","name":"i","nameLocation":"6310:1:16","nodeType":"VariableDeclaration","scope":4605,"src":"6302:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4584,"name":"uint256","nodeType":"ElementaryTypeName","src":"6302:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4587,"initialValue":{"hexValue":"30","id":4586,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6314:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6302:13:16"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6338:3:16","subExpression":{"id":4592,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4585,"src":"6338:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4594,"nodeType":"ExpressionStatement","src":"6338:3:16"},"nodeType":"ForStatement","src":"6297:120:16"},{"expression":{"hexValue":"66616c7365","id":4606,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6430:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":4583,"id":4607,"nodeType":"Return","src":"6423:12:16"}]},"functionSelector":"89345efb","id":4609,"implemented":true,"kind":"function","modifiers":[],"name":"poolExist","nameLocation":"6241:9:16","nodeType":"FunctionDefinition","parameters":{"id":4580,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4579,"mutability":"mutable","name":"_pool","nameLocation":"6259:5:16","nodeType":"VariableDeclaration","scope":4609,"src":"6251:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4578,"name":"address","nodeType":"ElementaryTypeName","src":"6251:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6250:15:16"},"returnParameters":{"id":4583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4582,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4609,"src":"6284:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4581,"name":"bool","nodeType":"ElementaryTypeName","src":"6284:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6283:6:16"},"scope":4610,"src":"6232:209:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":4611,"src":"1731:4713:16","usedErrors":[30,35,211,214,475,480,858,871,1768,1771],"usedEvents":[41,219,837,4152]}],"src":"40:6406:16"},"id":16},"contracts/BaluniV1PoolPeriphery.sol":{"ast":{"absolutePath":"contracts/BaluniV1PoolPeriphery.sol","exportedSymbols":{"BaluniV1PoolPeriphery":[5392],"Context":[2038],"ContextUpgradeable":[676],"ERC1967Utils":[1126],"ERC20":[1651],"IBaluniV1Pool":[5605],"IBaluniV1PoolFactory":[5632],"IERC1822Proxiable":[686],"IERC20":[1729],"IERC20Errors":[728],"IERC20Metadata":[1755],"Initializable":[448],"OwnableUpgradeable":[194],"UUPSUpgradeable":[630]},"id":5393,"license":"GNU AGPLv3","nodeType":"SourceUnit","nodes":[{"id":4612,"literals":["solidity","0.8",".25"],"nodeType":"PragmaDirective","src":"40:23:17"},{"absolutePath":"contracts/interfaces/IBaluniV1PoolFactory.sol","file":"./interfaces/IBaluniV1PoolFactory.sol","id":4613,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5393,"sourceUnit":5633,"src":"1466:47:17","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IBaluniV1Pool.sol","file":"./interfaces/IBaluniV1Pool.sol","id":4614,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5393,"sourceUnit":5606,"src":"1515:40:17","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","id":4615,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5393,"sourceUnit":195,"src":"1557:75:17","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","id":4616,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5393,"sourceUnit":449,"src":"1634:75:17","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","id":4617,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5393,"sourceUnit":631,"src":"1711:77:17","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":4619,"name":"Initializable","nameLocations":["2100:13:17"],"nodeType":"IdentifierPath","referencedDeclaration":448,"src":"2100:13:17"},"id":4620,"nodeType":"InheritanceSpecifier","src":"2100:13:17"},{"baseName":{"id":4621,"name":"OwnableUpgradeable","nameLocations":["2115:18:17"],"nodeType":"IdentifierPath","referencedDeclaration":194,"src":"2115:18:17"},"id":4622,"nodeType":"InheritanceSpecifier","src":"2115:18:17"},{"baseName":{"id":4623,"name":"UUPSUpgradeable","nameLocations":["2135:15:17"],"nodeType":"IdentifierPath","referencedDeclaration":630,"src":"2135:15:17"},"id":4624,"nodeType":"InheritanceSpecifier","src":"2135:15:17"}],"canonicalName":"BaluniV1PoolPeriphery","contractDependencies":[],"contractKind":"contract","documentation":{"id":4618,"nodeType":"StructuredDocumentation","src":"1792:272:17","text":" @title BaluniV1PoolPeriphery\n @dev This contract serves as the periphery contract for interacting with BaluniV1Pool contracts.\n It provides functions for swapping tokens, adding liquidity, removing liquidity, and getting the amount out for a given swap."},"fullyImplemented":true,"id":5392,"linearizedBaseContracts":[5392,630,686,194,676,448],"name":"BaluniV1PoolPeriphery","nameLocation":"2075:21:17","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"4219dc40","id":4627,"mutability":"mutable","name":"poolFactory","nameLocation":"2184:11:17","nodeType":"VariableDeclaration","scope":5392,"src":"2156:39:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1PoolFactory_$5632","typeString":"contract IBaluniV1PoolFactory"},"typeName":{"id":4626,"nodeType":"UserDefinedTypeName","pathNode":{"id":4625,"name":"IBaluniV1PoolFactory","nameLocations":["2156:20:17"],"nodeType":"IdentifierPath","referencedDeclaration":5632,"src":"2156:20:17"},"referencedDeclaration":5632,"src":"2156:20:17","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1PoolFactory_$5632","typeString":"contract IBaluniV1PoolFactory"}},"visibility":"public"},{"body":{"id":4649,"nodeType":"Block","src":"2425:125:17","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":4635,"name":"__UUPSUpgradeable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":502,"src":"2432:22:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":4636,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2432:24:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4637,"nodeType":"ExpressionStatement","src":"2432:24:17"},{"expression":{"arguments":[{"expression":{"id":4639,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2478:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2482:6:17","memberName":"sender","nodeType":"MemberAccess","src":"2478:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4638,"name":"__Ownable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":54,"src":"2463:14:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":4641,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2463:26:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4642,"nodeType":"ExpressionStatement","src":"2463:26:17"},{"expression":{"id":4647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4643,"name":"poolFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4627,"src":"2496:11:17","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1PoolFactory_$5632","typeString":"contract IBaluniV1PoolFactory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4645,"name":"_poolFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4630,"src":"2531:12:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4644,"name":"IBaluniV1PoolFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5632,"src":"2510:20:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBaluniV1PoolFactory_$5632_$","typeString":"type(contract IBaluniV1PoolFactory)"}},"id":4646,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2510:34:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1PoolFactory_$5632","typeString":"contract IBaluniV1PoolFactory"}},"src":"2496:48:17","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1PoolFactory_$5632","typeString":"contract IBaluniV1PoolFactory"}},"id":4648,"nodeType":"ExpressionStatement","src":"2496:48:17"}]},"documentation":{"id":4628,"nodeType":"StructuredDocumentation","src":"2202:158:17","text":" @dev Initializes the contract by setting the pool factory address.\n @param _poolFactory The address of the BaluniV1PoolFactory contract."},"functionSelector":"c4d66de8","id":4650,"implemented":true,"kind":"function","modifiers":[{"id":4633,"kind":"modifierInvocation","modifierName":{"id":4632,"name":"initializer","nameLocations":["2413:11:17"],"nodeType":"IdentifierPath","referencedDeclaration":302,"src":"2413:11:17"},"nodeType":"ModifierInvocation","src":"2413:11:17"}],"name":"initialize","nameLocation":"2373:10:17","nodeType":"FunctionDefinition","parameters":{"id":4631,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4630,"mutability":"mutable","name":"_poolFactory","nameLocation":"2392:12:17","nodeType":"VariableDeclaration","scope":4650,"src":"2384:20:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4629,"name":"address","nodeType":"ElementaryTypeName","src":"2384:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2383:22:17"},"returnParameters":{"id":4634,"nodeType":"ParameterList","parameters":[],"src":"2425:0:17"},"scope":5392,"src":"2364:186:17","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4667,"nodeType":"Block","src":"2808:61:17","statements":[{"expression":{"id":4665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4661,"name":"poolFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4627,"src":"2815:11:17","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1PoolFactory_$5632","typeString":"contract IBaluniV1PoolFactory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4663,"name":"_poolFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4653,"src":"2850:12:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4662,"name":"IBaluniV1PoolFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5632,"src":"2829:20:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBaluniV1PoolFactory_$5632_$","typeString":"type(contract IBaluniV1PoolFactory)"}},"id":4664,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2829:34:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1PoolFactory_$5632","typeString":"contract IBaluniV1PoolFactory"}},"src":"2815:48:17","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1PoolFactory_$5632","typeString":"contract IBaluniV1PoolFactory"}},"id":4666,"nodeType":"ExpressionStatement","src":"2815:48:17"}]},"documentation":{"id":4651,"nodeType":"StructuredDocumentation","src":"2556:158:17","text":" @dev Initializes the contract by setting the pool factory address.\n @param _poolFactory The address of the BaluniV1PoolFactory contract."},"functionSelector":"8f2248bc","id":4668,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":4658,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4655,"src":"2799:7:17","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"id":4659,"kind":"modifierInvocation","modifierName":{"id":4657,"name":"reinitializer","nameLocations":["2785:13:17"],"nodeType":"IdentifierPath","referencedDeclaration":349,"src":"2785:13:17"},"nodeType":"ModifierInvocation","src":"2785:22:17"}],"name":"reinitialize","nameLocation":"2727:12:17","nodeType":"FunctionDefinition","parameters":{"id":4656,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4653,"mutability":"mutable","name":"_poolFactory","nameLocation":"2748:12:17","nodeType":"VariableDeclaration","scope":4668,"src":"2740:20:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4652,"name":"address","nodeType":"ElementaryTypeName","src":"2740:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4655,"mutability":"mutable","name":"version","nameLocation":"2769:7:17","nodeType":"VariableDeclaration","scope":4668,"src":"2762:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4654,"name":"uint64","nodeType":"ElementaryTypeName","src":"2762:6:17","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"2739:38:17"},"returnParameters":{"id":4660,"nodeType":"ParameterList","parameters":[],"src":"2808:0:17"},"scope":5392,"src":"2718:151:17","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[584],"body":{"id":4677,"nodeType":"Block","src":"3207:2:17","statements":[]},"documentation":{"id":4669,"nodeType":"StructuredDocumentation","src":"2875:246:17","text":" @dev Internal function to authorize an upgrade to a new implementation contract.\n @param newImplementation The address of the new implementation contract.\n @notice This function can only be called by the contract owner."},"id":4678,"implemented":true,"kind":"function","modifiers":[{"id":4675,"kind":"modifierInvocation","modifierName":{"id":4674,"name":"onlyOwner","nameLocations":["3197:9:17"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"3197:9:17"},"nodeType":"ModifierInvocation","src":"3197:9:17"}],"name":"_authorizeUpgrade","nameLocation":"3134:17:17","nodeType":"FunctionDefinition","overrides":{"id":4673,"nodeType":"OverrideSpecifier","overrides":[],"src":"3188:8:17"},"parameters":{"id":4672,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4671,"mutability":"mutable","name":"newImplementation","nameLocation":"3160:17:17","nodeType":"VariableDeclaration","scope":4678,"src":"3152:25:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4670,"name":"address","nodeType":"ElementaryTypeName","src":"3152:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3151:27:17"},"returnParameters":{"id":4676,"nodeType":"ParameterList","parameters":[],"src":"3207:0:17"},"scope":5392,"src":"3125:84:17","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4747,"nodeType":"Block","src":"3613:478:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4693,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4685,"src":"3628:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4694,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3637:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3628:10:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416d6f756e74206d7573742062652067726561746572207468616e207a65726f","id":4696,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3640:34:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887","typeString":"literal_string \"Amount must be greater than zero\""},"value":"Amount must be greater than zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887","typeString":"literal_string \"Amount must be greater than zero\""}],"id":4692,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3620:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4697,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3620:55:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4698,"nodeType":"ExpressionStatement","src":"3620:55:17"},{"assignments":[4700],"declarations":[{"constant":false,"id":4700,"mutability":"mutable","name":"poolAddress","nameLocation":"3742:11:17","nodeType":"VariableDeclaration","scope":4747,"src":"3734:19:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4699,"name":"address","nodeType":"ElementaryTypeName","src":"3734:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4706,"initialValue":{"arguments":[{"id":4703,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4681,"src":"3784:9:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4704,"name":"toToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4683,"src":"3795:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":4701,"name":"poolFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4627,"src":"3756:11:17","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1PoolFactory_$5632","typeString":"contract IBaluniV1PoolFactory"}},"id":4702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3768:15:17","memberName":"getPoolByAssets","nodeType":"MemberAccess","referencedDeclaration":5616,"src":"3756:27:17","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_address_$","typeString":"function (address,address) view external returns (address)"}},"id":4705,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3756:47:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3734:69:17"},{"assignments":[4709],"declarations":[{"constant":false,"id":4709,"mutability":"mutable","name":"pool","nameLocation":"3824:4:17","nodeType":"VariableDeclaration","scope":4747,"src":"3810:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$5605","typeString":"contract IBaluniV1Pool"},"typeName":{"id":4708,"nodeType":"UserDefinedTypeName","pathNode":{"id":4707,"name":"IBaluniV1Pool","nameLocations":["3810:13:17"],"nodeType":"IdentifierPath","referencedDeclaration":5605,"src":"3810:13:17"},"referencedDeclaration":5605,"src":"3810:13:17","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$5605","typeString":"contract IBaluniV1Pool"}},"visibility":"internal"}],"id":4713,"initialValue":{"arguments":[{"id":4711,"name":"poolAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4700,"src":"3845:11:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4710,"name":"IBaluniV1Pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5605,"src":"3831:13:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBaluniV1Pool_$5605_$","typeString":"type(contract IBaluniV1Pool)"}},"id":4712,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3831:26:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$5605","typeString":"contract IBaluniV1Pool"}},"nodeType":"VariableDeclarationStatement","src":"3810:47:17"},{"expression":{"arguments":[{"expression":{"id":4718,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3897:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3901:6:17","memberName":"sender","nodeType":"MemberAccess","src":"3897:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":4722,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3917:4:17","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1PoolPeriphery_$5392","typeString":"contract BaluniV1PoolPeriphery"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniV1PoolPeriphery_$5392","typeString":"contract BaluniV1PoolPeriphery"}],"id":4721,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3909:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4720,"name":"address","nodeType":"ElementaryTypeName","src":"3909:7:17","typeDescriptions":{}}},"id":4723,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3909:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4724,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4685,"src":"3924:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":4715,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4681,"src":"3873:9:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4714,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1729,"src":"3866:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1729_$","typeString":"type(contract IERC20)"}},"id":4716,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3866:17:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"}},"id":4717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3884:12:17","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":1728,"src":"3866:30:17","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":4725,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3866:65:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4726,"nodeType":"ExpressionStatement","src":"3866:65:17"},{"expression":{"arguments":[{"id":4731,"name":"poolAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4700,"src":"3964:11:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4732,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4685,"src":"3977:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":4728,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4681,"src":"3945:9:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4727,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1729,"src":"3938:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1729_$","typeString":"type(contract IERC20)"}},"id":4729,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3938:17:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"}},"id":4730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3956:7:17","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":1716,"src":"3938:25:17","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":4733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3938:46:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4734,"nodeType":"ExpressionStatement","src":"3938:46:17"},{"assignments":[4736],"declarations":[{"constant":false,"id":4736,"mutability":"mutable","name":"amountOut","nameLocation":"4001:9:17","nodeType":"VariableDeclaration","scope":4747,"src":"3993:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4735,"name":"uint256","nodeType":"ElementaryTypeName","src":"3993:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4744,"initialValue":{"arguments":[{"id":4739,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4681,"src":"4023:9:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4740,"name":"toToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4683,"src":"4034:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4741,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4685,"src":"4043:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4742,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4687,"src":"4051:8:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":4737,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4709,"src":"4013:4:17","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$5605","typeString":"contract IBaluniV1Pool"}},"id":4738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4018:4:17","memberName":"swap","nodeType":"MemberAccess","referencedDeclaration":5512,"src":"4013:9:17","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address,uint256,address) external returns (uint256)"}},"id":4743,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4013:47:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3993:67:17"},{"expression":{"id":4745,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4736,"src":"4076:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4691,"id":4746,"nodeType":"Return","src":"4069:16:17"}]},"documentation":{"id":4679,"nodeType":"StructuredDocumentation","src":"3215:283:17","text":" @dev Swaps tokens in a BaluniV1Pool.\n @param fromToken The address of the token to swap from.\n @param toToken The address of the token to swap to.\n @param amount The amount of tokens to swap.\n @return The amount of tokens received after the swap."},"functionSelector":"6e81221c","id":4748,"implemented":true,"kind":"function","modifiers":[],"name":"swap","nameLocation":"3511:4:17","nodeType":"FunctionDefinition","parameters":{"id":4688,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4681,"mutability":"mutable","name":"fromToken","nameLocation":"3524:9:17","nodeType":"VariableDeclaration","scope":4748,"src":"3516:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4680,"name":"address","nodeType":"ElementaryTypeName","src":"3516:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4683,"mutability":"mutable","name":"toToken","nameLocation":"3543:7:17","nodeType":"VariableDeclaration","scope":4748,"src":"3535:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4682,"name":"address","nodeType":"ElementaryTypeName","src":"3535:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4685,"mutability":"mutable","name":"amount","nameLocation":"3560:6:17","nodeType":"VariableDeclaration","scope":4748,"src":"3552:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4684,"name":"uint256","nodeType":"ElementaryTypeName","src":"3552:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4687,"mutability":"mutable","name":"receiver","nameLocation":"3576:8:17","nodeType":"VariableDeclaration","scope":4748,"src":"3568:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4686,"name":"address","nodeType":"ElementaryTypeName","src":"3568:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3515:70:17"},"returnParameters":{"id":4691,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4690,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4748,"src":"3604:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4689,"name":"uint256","nodeType":"ElementaryTypeName","src":"3604:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3603:9:17"},"scope":5392,"src":"3502:589:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4896,"nodeType":"Block","src":"4800:1019:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4768,"name":"fromTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4752,"src":"4823:10:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":4769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4834:6:17","memberName":"length","nodeType":"MemberAccess","src":"4823:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4770,"name":"toTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4755,"src":"4844:8:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":4771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4853:6:17","memberName":"length","nodeType":"MemberAccess","src":"4844:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4823:36:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4773,"name":"toTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4755,"src":"4863:8:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":4774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4872:6:17","memberName":"length","nodeType":"MemberAccess","src":"4863:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4775,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4758,"src":"4882:7:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":4776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4890:6:17","memberName":"length","nodeType":"MemberAccess","src":"4882:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4863:33:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4823:73:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4779,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4758,"src":"4900:7:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":4780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4908:6:17","memberName":"length","nodeType":"MemberAccess","src":"4900:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4781,"name":"receivers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4761,"src":"4918:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":4782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4928:6:17","memberName":"length","nodeType":"MemberAccess","src":"4918:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4900:34:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4823:111:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e70757420617272617973206c656e677468206d69736d61746368","id":4785,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4943:30:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_435b01265a0cf39a5f3992d984afd4b4e7ac38f8506d53152286f12879fd2786","typeString":"literal_string \"Input arrays length mismatch\""},"value":"Input arrays length mismatch"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_435b01265a0cf39a5f3992d984afd4b4e7ac38f8506d53152286f12879fd2786","typeString":"literal_string \"Input arrays length mismatch\""}],"id":4767,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4807:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4786,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4807:173:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4787,"nodeType":"ExpressionStatement","src":"4807:173:17"},{"assignments":[4792],"declarations":[{"constant":false,"id":4792,"mutability":"mutable","name":"amountsOut","nameLocation":"5006:10:17","nodeType":"VariableDeclaration","scope":4896,"src":"4989:27:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4790,"name":"uint256","nodeType":"ElementaryTypeName","src":"4989:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4791,"nodeType":"ArrayTypeName","src":"4989:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":4799,"initialValue":{"arguments":[{"expression":{"id":4796,"name":"fromTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4752,"src":"5033:10:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":4797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5044:6:17","memberName":"length","nodeType":"MemberAccess","src":"5033:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4795,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5019:13:17","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":4793,"name":"uint256","nodeType":"ElementaryTypeName","src":"5023:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4794,"nodeType":"ArrayTypeName","src":"5023:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":4798,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5019:32:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"4989:62:17"},{"body":{"id":4892,"nodeType":"Block","src":"5108:680:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":4812,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4758,"src":"5125:7:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":4814,"indexExpression":{"id":4813,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4801,"src":"5133:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5125:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4815,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5138:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5125:14:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416d6f756e74206d7573742062652067726561746572207468616e207a65726f","id":4817,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5141:34:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887","typeString":"literal_string \"Amount must be greater than zero\""},"value":"Amount must be greater than zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887","typeString":"literal_string \"Amount must be greater than zero\""}],"id":4811,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5117:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4818,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5117:59:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4819,"nodeType":"ExpressionStatement","src":"5117:59:17"},{"expression":{"arguments":[{"expression":{"id":4826,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5280:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5284:6:17","memberName":"sender","nodeType":"MemberAccess","src":"5280:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":4830,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5300:4:17","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1PoolPeriphery_$5392","typeString":"contract BaluniV1PoolPeriphery"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniV1PoolPeriphery_$5392","typeString":"contract BaluniV1PoolPeriphery"}],"id":4829,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5292:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4828,"name":"address","nodeType":"ElementaryTypeName","src":"5292:7:17","typeDescriptions":{}}},"id":4831,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5292:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":4832,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4758,"src":"5307:7:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":4834,"indexExpression":{"id":4833,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4801,"src":"5315:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5307:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"baseExpression":{"id":4821,"name":"fromTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4752,"src":"5252:10:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":4823,"indexExpression":{"id":4822,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4801,"src":"5263:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5252:13:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4820,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1729,"src":"5245:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1729_$","typeString":"type(contract IERC20)"}},"id":4824,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5245:21:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"}},"id":4825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5267:12:17","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":1728,"src":"5245:34:17","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":4835,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5245:73:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4836,"nodeType":"ExpressionStatement","src":"5245:73:17"},{"assignments":[4838],"declarations":[{"constant":false,"id":4838,"mutability":"mutable","name":"poolAddress","nameLocation":"5389:11:17","nodeType":"VariableDeclaration","scope":4892,"src":"5381:19:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4837,"name":"address","nodeType":"ElementaryTypeName","src":"5381:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4848,"initialValue":{"arguments":[{"baseExpression":{"id":4841,"name":"fromTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4752,"src":"5431:10:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":4843,"indexExpression":{"id":4842,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4801,"src":"5442:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5431:13:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":4844,"name":"toTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4755,"src":"5446:8:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":4846,"indexExpression":{"id":4845,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4801,"src":"5455:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5446:11:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":4839,"name":"poolFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4627,"src":"5403:11:17","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1PoolFactory_$5632","typeString":"contract IBaluniV1PoolFactory"}},"id":4840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5415:15:17","memberName":"getPoolByAssets","nodeType":"MemberAccess","referencedDeclaration":5616,"src":"5403:27:17","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_address_$","typeString":"function (address,address) view external returns (address)"}},"id":4847,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5403:55:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5381:77:17"},{"assignments":[4851],"declarations":[{"constant":false,"id":4851,"mutability":"mutable","name":"pool","nameLocation":"5481:4:17","nodeType":"VariableDeclaration","scope":4892,"src":"5467:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$5605","typeString":"contract IBaluniV1Pool"},"typeName":{"id":4850,"nodeType":"UserDefinedTypeName","pathNode":{"id":4849,"name":"IBaluniV1Pool","nameLocations":["5467:13:17"],"nodeType":"IdentifierPath","referencedDeclaration":5605,"src":"5467:13:17"},"referencedDeclaration":5605,"src":"5467:13:17","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$5605","typeString":"contract IBaluniV1Pool"}},"visibility":"internal"}],"id":4855,"initialValue":{"arguments":[{"id":4853,"name":"poolAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4838,"src":"5502:11:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4852,"name":"IBaluniV1Pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5605,"src":"5488:13:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBaluniV1Pool_$5605_$","typeString":"type(contract IBaluniV1Pool)"}},"id":4854,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5488:26:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$5605","typeString":"contract IBaluniV1Pool"}},"nodeType":"VariableDeclarationStatement","src":"5467:47:17"},{"expression":{"arguments":[{"id":4862,"name":"poolAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4838,"src":"5601:11:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":4863,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4758,"src":"5614:7:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":4865,"indexExpression":{"id":4864,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4801,"src":"5622:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5614:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"baseExpression":{"id":4857,"name":"fromTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4752,"src":"5578:10:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":4859,"indexExpression":{"id":4858,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4801,"src":"5589:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5578:13:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4856,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1729,"src":"5571:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1729_$","typeString":"type(contract IERC20)"}},"id":4860,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5571:21:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"}},"id":4861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5593:7:17","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":1716,"src":"5571:29:17","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":4866,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5571:54:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4867,"nodeType":"ExpressionStatement","src":"5571:54:17"},{"assignments":[4869],"declarations":[{"constant":false,"id":4869,"mutability":"mutable","name":"amountOut","nameLocation":"5671:9:17","nodeType":"VariableDeclaration","scope":4892,"src":"5663:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4868,"name":"uint256","nodeType":"ElementaryTypeName","src":"5663:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4885,"initialValue":{"arguments":[{"baseExpression":{"id":4872,"name":"fromTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4752,"src":"5693:10:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":4874,"indexExpression":{"id":4873,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4801,"src":"5704:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5693:13:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":4875,"name":"toTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4755,"src":"5708:8:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":4877,"indexExpression":{"id":4876,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4801,"src":"5717:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5708:11:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":4878,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4758,"src":"5721:7:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":4880,"indexExpression":{"id":4879,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4801,"src":"5729:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5721:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":4881,"name":"receivers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4761,"src":"5733:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":4883,"indexExpression":{"id":4882,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4801,"src":"5743:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5733:12:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":4870,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4851,"src":"5683:4:17","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$5605","typeString":"contract IBaluniV1Pool"}},"id":4871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5688:4:17","memberName":"swap","nodeType":"MemberAccess","referencedDeclaration":5512,"src":"5683:9:17","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address,uint256,address) external returns (uint256)"}},"id":4884,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5683:63:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5663:83:17"},{"expression":{"id":4890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4886,"name":"amountsOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4792,"src":"5755:10:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":4888,"indexExpression":{"id":4887,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4801,"src":"5766:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5755:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4889,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4869,"src":"5771:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5755:25:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4891,"nodeType":"ExpressionStatement","src":"5755:25:17"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4804,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4801,"src":"5080:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4805,"name":"fromTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4752,"src":"5084:10:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":4806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5095:6:17","memberName":"length","nodeType":"MemberAccess","src":"5084:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5080:21:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4893,"initializationExpression":{"assignments":[4801],"declarations":[{"constant":false,"id":4801,"mutability":"mutable","name":"i","nameLocation":"5073:1:17","nodeType":"VariableDeclaration","scope":4893,"src":"5065:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4800,"name":"uint256","nodeType":"ElementaryTypeName","src":"5065:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4803,"initialValue":{"hexValue":"30","id":4802,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5077:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5065:13:17"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5103:3:17","subExpression":{"id":4808,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4801,"src":"5103:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4810,"nodeType":"ExpressionStatement","src":"5103:3:17"},"nodeType":"ForStatement","src":"5060:728:17"},{"expression":{"id":4894,"name":"amountsOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4792,"src":"5803:10:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":4766,"id":4895,"nodeType":"Return","src":"5796:17:17"}]},"documentation":{"id":4749,"nodeType":"StructuredDocumentation","src":"4097:501:17","text":" @dev Performs batch swaps between multiple token pairs.\n @param fromTokens An array of addresses representing the tokens to swap from.\n @param toTokens An array of addresses representing the tokens to swap to.\n @param amounts An array of amounts representing the amounts to swap.\n @param receivers An array of addresses representing the receivers of the swapped tokens.\n @return An array of amounts representing the amounts of tokens received after the swaps."},"functionSelector":"e74e9b06","id":4897,"implemented":true,"kind":"function","modifiers":[],"name":"batchSwap","nameLocation":"4611:9:17","nodeType":"FunctionDefinition","parameters":{"id":4762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4752,"mutability":"mutable","name":"fromTokens","nameLocation":"4646:10:17","nodeType":"VariableDeclaration","scope":4897,"src":"4627:29:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4750,"name":"address","nodeType":"ElementaryTypeName","src":"4627:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4751,"nodeType":"ArrayTypeName","src":"4627:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":4755,"mutability":"mutable","name":"toTokens","nameLocation":"4682:8:17","nodeType":"VariableDeclaration","scope":4897,"src":"4663:27:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4753,"name":"address","nodeType":"ElementaryTypeName","src":"4663:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4754,"nodeType":"ArrayTypeName","src":"4663:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":4758,"mutability":"mutable","name":"amounts","nameLocation":"4716:7:17","nodeType":"VariableDeclaration","scope":4897,"src":"4697:26:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4756,"name":"uint256","nodeType":"ElementaryTypeName","src":"4697:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4757,"nodeType":"ArrayTypeName","src":"4697:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":4761,"mutability":"mutable","name":"receivers","nameLocation":"4749:9:17","nodeType":"VariableDeclaration","scope":4897,"src":"4730:28:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4759,"name":"address","nodeType":"ElementaryTypeName","src":"4730:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4760,"nodeType":"ArrayTypeName","src":"4730:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"4620:143:17"},"returnParameters":{"id":4766,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4765,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4897,"src":"4782:16:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4763,"name":"uint256","nodeType":"ElementaryTypeName","src":"4782:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4764,"nodeType":"ArrayTypeName","src":"4782:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"4781:18:17"},"scope":5392,"src":"4602:1217:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":5078,"nodeType":"Block","src":"5941:1565:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4911,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4903,"src":"5956:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4912,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5965:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5956:10:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416d6f756e74206d7573742062652067726561746572207468616e207a65726f","id":4914,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5968:34:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887","typeString":"literal_string \"Amount must be greater than zero\""},"value":"Amount must be greater than zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887","typeString":"literal_string \"Amount must be greater than zero\""}],"id":4910,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5948:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4915,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5948:55:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4916,"nodeType":"ExpressionStatement","src":"5948:55:17"},{"assignments":[4921],"declarations":[{"constant":false,"id":4921,"mutability":"mutable","name":"fromPools","nameLocation":"6074:9:17","nodeType":"VariableDeclaration","scope":5078,"src":"6057:26:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4919,"name":"address","nodeType":"ElementaryTypeName","src":"6057:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4920,"nodeType":"ArrayTypeName","src":"6057:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":4926,"initialValue":{"arguments":[{"id":4924,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4899,"src":"6114:9:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":4922,"name":"poolFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4627,"src":"6086:11:17","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1PoolFactory_$5632","typeString":"contract IBaluniV1PoolFactory"}},"id":4923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6098:15:17","memberName":"getPoolsByAsset","nodeType":"MemberAccess","referencedDeclaration":5624,"src":"6086:27:17","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (address) view external returns (address[] memory)"}},"id":4925,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6086:38:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"6057:67:17"},{"assignments":[4928],"declarations":[{"constant":false,"id":4928,"mutability":"mutable","name":"bestAmountOut","nameLocation":"6139:13:17","nodeType":"VariableDeclaration","scope":5078,"src":"6131:21:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4927,"name":"uint256","nodeType":"ElementaryTypeName","src":"6131:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4930,"initialValue":{"hexValue":"30","id":4929,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6155:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6131:25:17"},{"assignments":[4932],"declarations":[{"constant":false,"id":4932,"mutability":"mutable","name":"bestPoolAddress","nameLocation":"6171:15:17","nodeType":"VariableDeclaration","scope":5078,"src":"6163:23:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4931,"name":"address","nodeType":"ElementaryTypeName","src":"6163:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4933,"nodeType":"VariableDeclarationStatement","src":"6163:23:17"},{"assignments":[4935],"declarations":[{"constant":false,"id":4935,"mutability":"mutable","name":"bestTokenLiquidity","nameLocation":"6201:18:17","nodeType":"VariableDeclaration","scope":5078,"src":"6193:26:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4934,"name":"uint256","nodeType":"ElementaryTypeName","src":"6193:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4937,"initialValue":{"hexValue":"30","id":4936,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6222:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6193:30:17"},{"body":{"id":5026,"nodeType":"Block","src":"6386:694:17","statements":[{"assignments":[4951],"declarations":[{"constant":false,"id":4951,"mutability":"mutable","name":"pool","nameLocation":"6409:4:17","nodeType":"VariableDeclaration","scope":5026,"src":"6395:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$5605","typeString":"contract IBaluniV1Pool"},"typeName":{"id":4950,"nodeType":"UserDefinedTypeName","pathNode":{"id":4949,"name":"IBaluniV1Pool","nameLocations":["6395:13:17"],"nodeType":"IdentifierPath","referencedDeclaration":5605,"src":"6395:13:17"},"referencedDeclaration":5605,"src":"6395:13:17","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$5605","typeString":"contract IBaluniV1Pool"}},"visibility":"internal"}],"id":4957,"initialValue":{"arguments":[{"baseExpression":{"id":4953,"name":"fromPools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4921,"src":"6430:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4955,"indexExpression":{"id":4954,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4939,"src":"6440:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6430:12:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4952,"name":"IBaluniV1Pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5605,"src":"6416:13:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBaluniV1Pool_$5605_$","typeString":"type(contract IBaluniV1Pool)"}},"id":4956,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6416:27:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$5605","typeString":"contract IBaluniV1Pool"}},"nodeType":"VariableDeclarationStatement","src":"6395:48:17"},{"assignments":[4962,4965],"declarations":[{"constant":false,"id":4962,"mutability":"mutable","name":"directions","nameLocation":"6467:10:17","nodeType":"VariableDeclaration","scope":5026,"src":"6453:24:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":4960,"name":"bool","nodeType":"ElementaryTypeName","src":"6453:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4961,"nodeType":"ArrayTypeName","src":"6453:6:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":4965,"mutability":"mutable","name":"deviations","nameLocation":"6496:10:17","nodeType":"VariableDeclaration","scope":5026,"src":"6479:27:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4963,"name":"uint256","nodeType":"ElementaryTypeName","src":"6479:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4964,"nodeType":"ArrayTypeName","src":"6479:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":4969,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4966,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4951,"src":"6510:4:17","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$5605","typeString":"contract IBaluniV1Pool"}},"id":4967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6515:12:17","memberName":"getDeviation","nodeType":"MemberAccess","referencedDeclaration":5477,"src":"6510:17:17","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_array$_t_bool_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function () view external returns (bool[] memory,uint256[] memory)"}},"id":4968,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6510:19:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_bool_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(bool[] memory,uint256[] memory)"}},"nodeType":"VariableDeclarationStatement","src":"6452:77:17"},{"assignments":[4971,4974],"declarations":[{"constant":false,"id":4971,"mutability":"mutable","name":"totalValuation","nameLocation":"6547:14:17","nodeType":"VariableDeclaration","scope":5026,"src":"6539:22:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4970,"name":"uint256","nodeType":"ElementaryTypeName","src":"6539:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4974,"mutability":"mutable","name":"valuations","nameLocation":"6580:10:17","nodeType":"VariableDeclaration","scope":5026,"src":"6563:27:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4972,"name":"uint256","nodeType":"ElementaryTypeName","src":"6563:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4973,"nodeType":"ArrayTypeName","src":"6563:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":4978,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4975,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4951,"src":"6594:4:17","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$5605","typeString":"contract IBaluniV1Pool"}},"id":4976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6599:21:17","memberName":"computeTotalValuation","nodeType":"MemberAccess","referencedDeclaration":5553,"src":"6594:26:17","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function () view external returns (uint256,uint256[] memory)"}},"id":4977,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6594:28:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256,uint256[] memory)"}},"nodeType":"VariableDeclarationStatement","src":"6538:84:17"},{"body":{"id":5024,"nodeType":"Block","src":"6768:305:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":4992,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4980,"src":"6799:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4990,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4951,"src":"6783:4:17","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$5605","typeString":"contract IBaluniV1Pool"}},"id":4991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6788:10:17","memberName":"assetInfos","nodeType":"MemberAccess","referencedDeclaration":5566,"src":"6783:15:17","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_struct$_AssetInfo_$5558_memory_ptr_$","typeString":"function (uint256) view external returns (struct IBaluniV1Pool.AssetInfo memory)"}},"id":4993,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6783:18:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AssetInfo_$5558_memory_ptr","typeString":"struct IBaluniV1Pool.AssetInfo memory"}},"id":4994,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6802:5:17","memberName":"asset","nodeType":"MemberAccess","referencedDeclaration":5555,"src":"6783:24:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4995,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4899,"src":"6811:9:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6783:37:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5023,"nodeType":"IfStatement","src":"6779:285:17","trueBody":{"id":5022,"nodeType":"Block","src":"6822:242:17","statements":[{"assignments":[4998],"declarations":[{"constant":false,"id":4998,"mutability":"mutable","name":"tokenLiquidity","nameLocation":"6843:14:17","nodeType":"VariableDeclaration","scope":5022,"src":"6835:22:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4997,"name":"uint256","nodeType":"ElementaryTypeName","src":"6835:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5002,"initialValue":{"baseExpression":{"id":4999,"name":"valuations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4974,"src":"6860:10:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":5001,"indexExpression":{"id":5000,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4980,"src":"6871:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6860:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6835:38:17"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":5003,"name":"directions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4962,"src":"6890:10:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"id":5005,"indexExpression":{"id":5004,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4980,"src":"6901:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6890:13:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5006,"name":"tokenLiquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4998,"src":"6907:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":5007,"name":"bestTokenLiquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4935,"src":"6924:18:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6907:35:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6890:52:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5021,"nodeType":"IfStatement","src":"6886:167:17","trueBody":{"id":5020,"nodeType":"Block","src":"6944:109:17","statements":[{"expression":{"id":5012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5010,"name":"bestTokenLiquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4935,"src":"6959:18:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5011,"name":"tokenLiquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4998,"src":"6980:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6959:35:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5013,"nodeType":"ExpressionStatement","src":"6959:35:17"},{"expression":{"id":5018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5014,"name":"bestPoolAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4932,"src":"7009:15:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":5015,"name":"fromPools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4921,"src":"7027:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":5017,"indexExpression":{"id":5016,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4939,"src":"7037:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7027:12:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7009:30:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5019,"nodeType":"ExpressionStatement","src":"7009:30:17"}]}}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4983,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4980,"src":"6740:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4984,"name":"directions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4962,"src":"6744:10:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"id":4985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6755:6:17","memberName":"length","nodeType":"MemberAccess","src":"6744:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6740:21:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5025,"initializationExpression":{"assignments":[4980],"declarations":[{"constant":false,"id":4980,"mutability":"mutable","name":"j","nameLocation":"6733:1:17","nodeType":"VariableDeclaration","scope":5025,"src":"6725:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4979,"name":"uint256","nodeType":"ElementaryTypeName","src":"6725:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4982,"initialValue":{"hexValue":"30","id":4981,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6737:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6725:13:17"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6763:3:17","subExpression":{"id":4987,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4980,"src":"6763:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4989,"nodeType":"ExpressionStatement","src":"6763:3:17"},"nodeType":"ForStatement","src":"6720:353:17"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4942,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4939,"src":"6359:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4943,"name":"fromPools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4921,"src":"6363:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6373:6:17","memberName":"length","nodeType":"MemberAccess","src":"6363:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6359:20:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5027,"initializationExpression":{"assignments":[4939],"declarations":[{"constant":false,"id":4939,"mutability":"mutable","name":"i","nameLocation":"6352:1:17","nodeType":"VariableDeclaration","scope":5027,"src":"6344:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4938,"name":"uint256","nodeType":"ElementaryTypeName","src":"6344:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4941,"initialValue":{"hexValue":"30","id":4940,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6356:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6344:13:17"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6381:3:17","subExpression":{"id":4946,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4939,"src":"6381:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4948,"nodeType":"ExpressionStatement","src":"6381:3:17"},"nodeType":"ForStatement","src":"6339:741:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5029,"name":"bestPoolAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4932,"src":"7096:15:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":5032,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7123:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5031,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7115:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5030,"name":"address","nodeType":"ElementaryTypeName","src":"7115:7:17","typeDescriptions":{}}},"id":5033,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7115:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7096:29:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f207375697461626c6520706f6f6c20666f756e64","id":5035,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7127:24:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_ef89ff065df8d87dc332b1f5f689edb79e3176f68beca505b0646a160ea04110","typeString":"literal_string \"No suitable pool found\""},"value":"No suitable pool found"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ef89ff065df8d87dc332b1f5f689edb79e3176f68beca505b0646a160ea04110","typeString":"literal_string \"No suitable pool found\""}],"id":5028,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7088:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5036,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7088:64:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5037,"nodeType":"ExpressionStatement","src":"7088:64:17"},{"assignments":[5040],"declarations":[{"constant":false,"id":5040,"mutability":"mutable","name":"bestPool","nameLocation":"7217:8:17","nodeType":"VariableDeclaration","scope":5078,"src":"7203:22:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$5605","typeString":"contract IBaluniV1Pool"},"typeName":{"id":5039,"nodeType":"UserDefinedTypeName","pathNode":{"id":5038,"name":"IBaluniV1Pool","nameLocations":["7203:13:17"],"nodeType":"IdentifierPath","referencedDeclaration":5605,"src":"7203:13:17"},"referencedDeclaration":5605,"src":"7203:13:17","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$5605","typeString":"contract IBaluniV1Pool"}},"visibility":"internal"}],"id":5044,"initialValue":{"arguments":[{"id":5042,"name":"bestPoolAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4932,"src":"7242:15:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5041,"name":"IBaluniV1Pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5605,"src":"7228:13:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBaluniV1Pool_$5605_$","typeString":"type(contract IBaluniV1Pool)"}},"id":5043,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7228:30:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$5605","typeString":"contract IBaluniV1Pool"}},"nodeType":"VariableDeclarationStatement","src":"7203:55:17"},{"expression":{"arguments":[{"expression":{"id":5049,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7296:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7300:6:17","memberName":"sender","nodeType":"MemberAccess","src":"7296:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":5053,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"7316:4:17","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1PoolPeriphery_$5392","typeString":"contract BaluniV1PoolPeriphery"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniV1PoolPeriphery_$5392","typeString":"contract BaluniV1PoolPeriphery"}],"id":5052,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7308:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5051,"name":"address","nodeType":"ElementaryTypeName","src":"7308:7:17","typeDescriptions":{}}},"id":5054,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7308:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5055,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4903,"src":"7323:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":5046,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4899,"src":"7272:9:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5045,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1729,"src":"7265:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1729_$","typeString":"type(contract IERC20)"}},"id":5047,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7265:17:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"}},"id":5048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7283:12:17","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":1728,"src":"7265:30:17","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":5056,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7265:65:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5057,"nodeType":"ExpressionStatement","src":"7265:65:17"},{"expression":{"arguments":[{"id":5062,"name":"bestPoolAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4932,"src":"7363:15:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5063,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4903,"src":"7380:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":5059,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4899,"src":"7344:9:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5058,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1729,"src":"7337:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1729_$","typeString":"type(contract IERC20)"}},"id":5060,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7337:17:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"}},"id":5061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7355:7:17","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":1716,"src":"7337:25:17","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":5064,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7337:50:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5065,"nodeType":"ExpressionStatement","src":"7337:50:17"},{"assignments":[5067],"declarations":[{"constant":false,"id":5067,"mutability":"mutable","name":"amountReceived","nameLocation":"7402:14:17","nodeType":"VariableDeclaration","scope":5078,"src":"7394:22:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5066,"name":"uint256","nodeType":"ElementaryTypeName","src":"7394:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5075,"initialValue":{"arguments":[{"id":5070,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4899,"src":"7433:9:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5071,"name":"toToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4901,"src":"7444:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5072,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4903,"src":"7453:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5073,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4905,"src":"7461:8:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":5068,"name":"bestPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5040,"src":"7419:8:17","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$5605","typeString":"contract IBaluniV1Pool"}},"id":5069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7428:4:17","memberName":"swap","nodeType":"MemberAccess","referencedDeclaration":5512,"src":"7419:13:17","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address,uint256,address) external returns (uint256)"}},"id":5074,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7419:51:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7394:76:17"},{"expression":{"id":5076,"name":"amountReceived","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5067,"src":"7486:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4909,"id":5077,"nodeType":"Return","src":"7479:21:17"}]},"functionSelector":"7442eca6","id":5079,"implemented":true,"kind":"function","modifiers":[],"name":"smartSwap","nameLocation":"5834:9:17","nodeType":"FunctionDefinition","parameters":{"id":4906,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4899,"mutability":"mutable","name":"fromToken","nameLocation":"5852:9:17","nodeType":"VariableDeclaration","scope":5079,"src":"5844:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4898,"name":"address","nodeType":"ElementaryTypeName","src":"5844:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4901,"mutability":"mutable","name":"toToken","nameLocation":"5871:7:17","nodeType":"VariableDeclaration","scope":5079,"src":"5863:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4900,"name":"address","nodeType":"ElementaryTypeName","src":"5863:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4903,"mutability":"mutable","name":"amount","nameLocation":"5888:6:17","nodeType":"VariableDeclaration","scope":5079,"src":"5880:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4902,"name":"uint256","nodeType":"ElementaryTypeName","src":"5880:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4905,"mutability":"mutable","name":"receiver","nameLocation":"5904:8:17","nodeType":"VariableDeclaration","scope":5079,"src":"5896:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4904,"name":"address","nodeType":"ElementaryTypeName","src":"5896:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5843:70:17"},"returnParameters":{"id":4909,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4908,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5079,"src":"5932:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4907,"name":"uint256","nodeType":"ElementaryTypeName","src":"5932:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5931:9:17"},"scope":5392,"src":"5825:1681:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":5150,"nodeType":"Block","src":"7746:367:17","statements":[{"assignments":[5092],"declarations":[{"constant":false,"id":5092,"mutability":"mutable","name":"pool","nameLocation":"7767:4:17","nodeType":"VariableDeclaration","scope":5150,"src":"7753:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$5605","typeString":"contract IBaluniV1Pool"},"typeName":{"id":5091,"nodeType":"UserDefinedTypeName","pathNode":{"id":5090,"name":"IBaluniV1Pool","nameLocations":["7753:13:17"],"nodeType":"IdentifierPath","referencedDeclaration":5605,"src":"7753:13:17"},"referencedDeclaration":5605,"src":"7753:13:17","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$5605","typeString":"contract IBaluniV1Pool"}},"visibility":"internal"}],"id":5096,"initialValue":{"arguments":[{"id":5094,"name":"poolAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5085,"src":"7788:11:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5093,"name":"IBaluniV1Pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5605,"src":"7774:13:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBaluniV1Pool_$5605_$","typeString":"type(contract IBaluniV1Pool)"}},"id":5095,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7774:26:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$5605","typeString":"contract IBaluniV1Pool"}},"nodeType":"VariableDeclarationStatement","src":"7753:47:17"},{"assignments":[5101],"declarations":[{"constant":false,"id":5101,"mutability":"mutable","name":"assets","nameLocation":"7824:6:17","nodeType":"VariableDeclaration","scope":5150,"src":"7807:23:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":5099,"name":"address","nodeType":"ElementaryTypeName","src":"7807:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5100,"nodeType":"ArrayTypeName","src":"7807:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":5105,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":5102,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5092,"src":"7833:4:17","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$5605","typeString":"contract IBaluniV1Pool"}},"id":5103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7838:9:17","memberName":"getAssets","nodeType":"MemberAccess","referencedDeclaration":5446,"src":"7833:14:17","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function () view external returns (address[] memory)"}},"id":5104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7833:16:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"7807:42:17"},{"body":{"id":5142,"nodeType":"Block","src":"7932:148:17","statements":[{"assignments":[5118],"declarations":[{"constant":false,"id":5118,"mutability":"mutable","name":"asset","nameLocation":"7949:5:17","nodeType":"VariableDeclaration","scope":5142,"src":"7941:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5117,"name":"address","nodeType":"ElementaryTypeName","src":"7941:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":5122,"initialValue":{"baseExpression":{"id":5119,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5101,"src":"7957:6:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":5121,"indexExpression":{"id":5120,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5107,"src":"7964:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7957:9:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"7941:25:17"},{"assignments":[5124],"declarations":[{"constant":false,"id":5124,"mutability":"mutable","name":"amount","nameLocation":"7983:6:17","nodeType":"VariableDeclaration","scope":5142,"src":"7975:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5123,"name":"uint256","nodeType":"ElementaryTypeName","src":"7975:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5128,"initialValue":{"baseExpression":{"id":5125,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5083,"src":"7992:7:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":5127,"indexExpression":{"id":5126,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5107,"src":"8000:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7992:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7975:27:17"},{"expression":{"arguments":[{"expression":{"id":5133,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8038:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8042:6:17","memberName":"sender","nodeType":"MemberAccess","src":"8038:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":5137,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"8058:4:17","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1PoolPeriphery_$5392","typeString":"contract BaluniV1PoolPeriphery"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniV1PoolPeriphery_$5392","typeString":"contract BaluniV1PoolPeriphery"}],"id":5136,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8050:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5135,"name":"address","nodeType":"ElementaryTypeName","src":"8050:7:17","typeDescriptions":{}}},"id":5138,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8050:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5139,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5124,"src":"8065:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":5130,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5118,"src":"8018:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5129,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1729,"src":"8011:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1729_$","typeString":"type(contract IERC20)"}},"id":5131,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8011:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"}},"id":5132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8025:12:17","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":1728,"src":"8011:26:17","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":5140,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8011:61:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5141,"nodeType":"ExpressionStatement","src":"8011:61:17"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5110,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5107,"src":"7908:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":5111,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5101,"src":"7912:6:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":5112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7919:6:17","memberName":"length","nodeType":"MemberAccess","src":"7912:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7908:17:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5143,"initializationExpression":{"assignments":[5107],"declarations":[{"constant":false,"id":5107,"mutability":"mutable","name":"i","nameLocation":"7901:1:17","nodeType":"VariableDeclaration","scope":5143,"src":"7893:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5106,"name":"uint256","nodeType":"ElementaryTypeName","src":"7893:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5109,"initialValue":{"hexValue":"30","id":5108,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7905:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"7893:13:17"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":5115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"7927:3:17","subExpression":{"id":5114,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5107,"src":"7927:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5116,"nodeType":"ExpressionStatement","src":"7927:3:17"},"nodeType":"ForStatement","src":"7888:192:17"},{"expression":{"arguments":[{"id":5147,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5087,"src":"8098:8:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":5144,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5092,"src":"8088:4:17","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$5605","typeString":"contract IBaluniV1Pool"}},"id":5146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8093:4:17","memberName":"mint","nodeType":"MemberAccess","referencedDeclaration":5519,"src":"8088:9:17","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$returns$_t_uint256_$","typeString":"function (address) external returns (uint256)"}},"id":5148,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8088:19:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5149,"nodeType":"ExpressionStatement","src":"8088:19:17"}]},"documentation":{"id":5080,"nodeType":"StructuredDocumentation","src":"7512:132:17","text":" @dev Adds liquidity to a BaluniV1Pool.\n @param amounts An array of amounts for each asset to add as liquidity."},"functionSelector":"ec0cd2eb","id":5151,"implemented":true,"kind":"function","modifiers":[],"name":"addLiquidity","nameLocation":"7657:12:17","nodeType":"FunctionDefinition","parameters":{"id":5088,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5083,"mutability":"mutable","name":"amounts","nameLocation":"7689:7:17","nodeType":"VariableDeclaration","scope":5151,"src":"7670:26:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5081,"name":"uint256","nodeType":"ElementaryTypeName","src":"7670:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5082,"nodeType":"ArrayTypeName","src":"7670:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":5085,"mutability":"mutable","name":"poolAddress","nameLocation":"7706:11:17","nodeType":"VariableDeclaration","scope":5151,"src":"7698:19:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5084,"name":"address","nodeType":"ElementaryTypeName","src":"7698:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5087,"mutability":"mutable","name":"receiver","nameLocation":"7727:8:17","nodeType":"VariableDeclaration","scope":5151,"src":"7719:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5086,"name":"address","nodeType":"ElementaryTypeName","src":"7719:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7669:67:17"},"returnParameters":{"id":5089,"nodeType":"ParameterList","parameters":[],"src":"7746:0:17"},"scope":5392,"src":"7648:465:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":5231,"nodeType":"Block","src":"8390:576:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5162,"name":"share","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5154,"src":"8405:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5163,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8413:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8405:9:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5368617265206d7573742062652067726561746572207468616e207a65726f","id":5165,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8416:33:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_3014e9c0b78a52f3b40736c72d79bc01b52cf504238a7193820baa573d1cea6f","typeString":"literal_string \"Share must be greater than zero\""},"value":"Share must be greater than zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3014e9c0b78a52f3b40736c72d79bc01b52cf504238a7193820baa573d1cea6f","typeString":"literal_string \"Share must be greater than zero\""}],"id":5161,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8397:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5166,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8397:53:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5167,"nodeType":"ExpressionStatement","src":"8397:53:17"},{"assignments":[5170],"declarations":[{"constant":false,"id":5170,"mutability":"mutable","name":"poolToken","nameLocation":"8464:9:17","nodeType":"VariableDeclaration","scope":5231,"src":"8457:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"},"typeName":{"id":5169,"nodeType":"UserDefinedTypeName","pathNode":{"id":5168,"name":"IERC20","nameLocations":["8457:6:17"],"nodeType":"IdentifierPath","referencedDeclaration":1729,"src":"8457:6:17"},"referencedDeclaration":1729,"src":"8457:6:17","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"}},"visibility":"internal"}],"id":5174,"initialValue":{"arguments":[{"id":5172,"name":"poolAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5156,"src":"8483:11:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5171,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1729,"src":"8476:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1729_$","typeString":"type(contract IERC20)"}},"id":5173,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8476:19:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"}},"nodeType":"VariableDeclarationStatement","src":"8457:38:17"},{"assignments":[5176],"declarations":[{"constant":false,"id":5176,"mutability":"mutable","name":"allowance","nameLocation":"8536:9:17","nodeType":"VariableDeclaration","scope":5231,"src":"8528:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5175,"name":"uint256","nodeType":"ElementaryTypeName","src":"8528:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5186,"initialValue":{"arguments":[{"expression":{"id":5179,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8568:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8572:6:17","memberName":"sender","nodeType":"MemberAccess","src":"8568:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":5183,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"8588:4:17","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1PoolPeriphery_$5392","typeString":"contract BaluniV1PoolPeriphery"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniV1PoolPeriphery_$5392","typeString":"contract BaluniV1PoolPeriphery"}],"id":5182,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8580:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5181,"name":"address","nodeType":"ElementaryTypeName","src":"8580:7:17","typeDescriptions":{}}},"id":5184,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8580:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":5177,"name":"poolToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5170,"src":"8548:9:17","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"}},"id":5178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8558:9:17","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":1706,"src":"8548:19:17","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":5185,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8548:46:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8528:66:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5188,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5176,"src":"8609:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":5189,"name":"share","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5154,"src":"8622:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8609:18:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e7420616c6c6f77616e6365","id":5191,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8629:24:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_45e3d26e36c3151c7f92a1eee9add9658cbb8e14605ee2452ec007389b9744bc","typeString":"literal_string \"Insufficient allowance\""},"value":"Insufficient allowance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_45e3d26e36c3151c7f92a1eee9add9658cbb8e14605ee2452ec007389b9744bc","typeString":"literal_string \"Insufficient allowance\""}],"id":5187,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8601:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5192,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8601:53:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5193,"nodeType":"ExpressionStatement","src":"8601:53:17"},{"assignments":[5195],"declarations":[{"constant":false,"id":5195,"mutability":"mutable","name":"balance","nameLocation":"8693:7:17","nodeType":"VariableDeclaration","scope":5231,"src":"8685:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5194,"name":"uint256","nodeType":"ElementaryTypeName","src":"8685:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5201,"initialValue":{"arguments":[{"expression":{"id":5198,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8723:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8727:6:17","memberName":"sender","nodeType":"MemberAccess","src":"8723:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":5196,"name":"poolToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5170,"src":"8703:9:17","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"}},"id":5197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8713:9:17","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":1686,"src":"8703:19:17","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":5200,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8703:31:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8685:49:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5203,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5195,"src":"8749:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":5204,"name":"share","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5154,"src":"8760:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8749:16:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e742062616c616e6365","id":5206,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8767:22:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5","typeString":"literal_string \"Insufficient balance\""},"value":"Insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5","typeString":"literal_string \"Insufficient balance\""}],"id":5202,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8741:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5207,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8741:49:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5208,"nodeType":"ExpressionStatement","src":"8741:49:17"},{"assignments":[5210],"declarations":[{"constant":false,"id":5210,"mutability":"mutable","name":"success","nameLocation":"8804:7:17","nodeType":"VariableDeclaration","scope":5231,"src":"8799:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5209,"name":"bool","nodeType":"ElementaryTypeName","src":"8799:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":5218,"initialValue":{"arguments":[{"expression":{"id":5213,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8837:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8841:6:17","memberName":"sender","nodeType":"MemberAccess","src":"8837:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5215,"name":"poolAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5156,"src":"8849:11:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5216,"name":"share","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5154,"src":"8862:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5211,"name":"poolToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5170,"src":"8814:9:17","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"}},"id":5212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8824:12:17","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":1728,"src":"8814:22:17","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":5217,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8814:54:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"8799:69:17"},{"expression":{"arguments":[{"id":5220,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5210,"src":"8883:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5472616e73666572206661696c6564","id":5221,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8892:17:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51","typeString":"literal_string \"Transfer failed\""},"value":"Transfer failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51","typeString":"literal_string \"Transfer failed\""}],"id":5219,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8875:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5222,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8875:35:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5223,"nodeType":"ExpressionStatement","src":"8875:35:17"},{"expression":{"arguments":[{"id":5228,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5158,"src":"8951:8:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":5225,"name":"poolAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5156,"src":"8933:11:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5224,"name":"IBaluniV1Pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5605,"src":"8919:13:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBaluniV1Pool_$5605_$","typeString":"type(contract IBaluniV1Pool)"}},"id":5226,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8919:26:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$5605","typeString":"contract IBaluniV1Pool"}},"id":5227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8946:4:17","memberName":"burn","nodeType":"MemberAccess","referencedDeclaration":5535,"src":"8919:31:17","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$returns$__$","typeString":"function (address) external"}},"id":5229,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8919:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5230,"nodeType":"ExpressionStatement","src":"8919:41:17"}]},"documentation":{"id":5152,"nodeType":"StructuredDocumentation","src":"8119:179:17","text":" @dev Removes liquidity from a BaluniV1Pool.\n @param share The amount of liquidity tokens to remove.\n @param poolAddress The address of the BaluniV1Pool."},"functionSelector":"f31abcc4","id":5232,"implemented":true,"kind":"function","modifiers":[],"name":"removeLiquidity","nameLocation":"8311:15:17","nodeType":"FunctionDefinition","parameters":{"id":5159,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5154,"mutability":"mutable","name":"share","nameLocation":"8335:5:17","nodeType":"VariableDeclaration","scope":5232,"src":"8327:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5153,"name":"uint256","nodeType":"ElementaryTypeName","src":"8327:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5156,"mutability":"mutable","name":"poolAddress","nameLocation":"8350:11:17","nodeType":"VariableDeclaration","scope":5232,"src":"8342:19:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5155,"name":"address","nodeType":"ElementaryTypeName","src":"8342:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5158,"mutability":"mutable","name":"receiver","nameLocation":"8371:8:17","nodeType":"VariableDeclaration","scope":5232,"src":"8363:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5157,"name":"address","nodeType":"ElementaryTypeName","src":"8363:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8326:54:17"},"returnParameters":{"id":5160,"nodeType":"ParameterList","parameters":[],"src":"8390:0:17"},"scope":5392,"src":"8302:664:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":5266,"nodeType":"Block","src":"9400:195:17","statements":[{"assignments":[5245],"declarations":[{"constant":false,"id":5245,"mutability":"mutable","name":"poolAddress","nameLocation":"9415:11:17","nodeType":"VariableDeclaration","scope":5266,"src":"9407:19:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5244,"name":"address","nodeType":"ElementaryTypeName","src":"9407:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":5251,"initialValue":{"arguments":[{"id":5248,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5235,"src":"9457:9:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5249,"name":"toToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5237,"src":"9468:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":5246,"name":"poolFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4627,"src":"9429:11:17","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1PoolFactory_$5632","typeString":"contract IBaluniV1PoolFactory"}},"id":5247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9441:15:17","memberName":"getPoolByAssets","nodeType":"MemberAccess","referencedDeclaration":5616,"src":"9429:27:17","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_address_$","typeString":"function (address,address) view external returns (address)"}},"id":5250,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9429:47:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"9407:69:17"},{"assignments":[5254],"declarations":[{"constant":false,"id":5254,"mutability":"mutable","name":"pool","nameLocation":"9497:4:17","nodeType":"VariableDeclaration","scope":5266,"src":"9483:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$5605","typeString":"contract IBaluniV1Pool"},"typeName":{"id":5253,"nodeType":"UserDefinedTypeName","pathNode":{"id":5252,"name":"IBaluniV1Pool","nameLocations":["9483:13:17"],"nodeType":"IdentifierPath","referencedDeclaration":5605,"src":"9483:13:17"},"referencedDeclaration":5605,"src":"9483:13:17","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$5605","typeString":"contract IBaluniV1Pool"}},"visibility":"internal"}],"id":5258,"initialValue":{"arguments":[{"id":5256,"name":"poolAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5245,"src":"9518:11:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5255,"name":"IBaluniV1Pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5605,"src":"9504:13:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBaluniV1Pool_$5605_$","typeString":"type(contract IBaluniV1Pool)"}},"id":5257,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9504:26:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$5605","typeString":"contract IBaluniV1Pool"}},"nodeType":"VariableDeclarationStatement","src":"9483:47:17"},{"expression":{"arguments":[{"id":5261,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5235,"src":"9562:9:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5262,"name":"toToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5237,"src":"9573:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5263,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5239,"src":"9582:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5259,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5254,"src":"9544:4:17","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$5605","typeString":"contract IBaluniV1Pool"}},"id":5260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9549:12:17","memberName":"getAmountOut","nodeType":"MemberAccess","referencedDeclaration":5463,"src":"9544:17:17","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,address,uint256) view external returns (uint256)"}},"id":5264,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9544:45:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5243,"id":5265,"nodeType":"Return","src":"9537:52:17"}]},"documentation":{"id":5233,"nodeType":"StructuredDocumentation","src":"8972:318:17","text":" @dev Gets the amount of tokens received after a swap in a BaluniV1Pool.\n @param fromToken The address of the token to swap from.\n @param toToken The address of the token to swap to.\n @param amount The amount of tokens to swap.\n @return The amount of tokens received after the swap."},"functionSelector":"4aa06652","id":5267,"implemented":true,"kind":"function","modifiers":[],"name":"getAmountOut","nameLocation":"9303:12:17","nodeType":"FunctionDefinition","parameters":{"id":5240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5235,"mutability":"mutable","name":"fromToken","nameLocation":"9324:9:17","nodeType":"VariableDeclaration","scope":5267,"src":"9316:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5234,"name":"address","nodeType":"ElementaryTypeName","src":"9316:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5237,"mutability":"mutable","name":"toToken","nameLocation":"9343:7:17","nodeType":"VariableDeclaration","scope":5267,"src":"9335:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5236,"name":"address","nodeType":"ElementaryTypeName","src":"9335:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5239,"mutability":"mutable","name":"amount","nameLocation":"9360:6:17","nodeType":"VariableDeclaration","scope":5267,"src":"9352:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5238,"name":"uint256","nodeType":"ElementaryTypeName","src":"9352:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9315:52:17"},"returnParameters":{"id":5243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5242,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5267,"src":"9391:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5241,"name":"uint256","nodeType":"ElementaryTypeName","src":"9391:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9390:9:17"},"scope":5392,"src":"9294:301:17","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":5287,"nodeType":"Block","src":"9810:108:17","statements":[{"assignments":[5275],"declarations":[{"constant":false,"id":5275,"mutability":"mutable","name":"pool","nameLocation":"9831:4:17","nodeType":"VariableDeclaration","scope":5287,"src":"9817:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$5605","typeString":"contract IBaluniV1Pool"},"typeName":{"id":5274,"nodeType":"UserDefinedTypeName","pathNode":{"id":5273,"name":"IBaluniV1Pool","nameLocations":["9817:13:17"],"nodeType":"IdentifierPath","referencedDeclaration":5605,"src":"9817:13:17"},"referencedDeclaration":5605,"src":"9817:13:17","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$5605","typeString":"contract IBaluniV1Pool"}},"visibility":"internal"}],"id":5279,"initialValue":{"arguments":[{"id":5277,"name":"poolAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5270,"src":"9852:11:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5276,"name":"IBaluniV1Pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5605,"src":"9838:13:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBaluniV1Pool_$5605_$","typeString":"type(contract IBaluniV1Pool)"}},"id":5278,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9838:26:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$5605","typeString":"contract IBaluniV1Pool"}},"nodeType":"VariableDeclarationStatement","src":"9817:47:17"},{"expression":{"arguments":[{"expression":{"id":5283,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9901:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9905:6:17","memberName":"sender","nodeType":"MemberAccess","src":"9901:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":5280,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5275,"src":"9871:4:17","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$5605","typeString":"contract IBaluniV1Pool"}},"id":5282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9876:24:17","memberName":"performRebalanceIfNeeded","nodeType":"MemberAccess","referencedDeclaration":5468,"src":"9871:29:17","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$returns$__$","typeString":"function (address) external"}},"id":5285,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9871:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5286,"nodeType":"ExpressionStatement","src":"9871:41:17"}]},"documentation":{"id":5268,"nodeType":"StructuredDocumentation","src":"9601:141:17","text":" @dev Performs rebalance if needed for the given tokens.\n @param poolAddress The address of the token pool to rebalance."},"functionSelector":"5568081a","id":5288,"implemented":true,"kind":"function","modifiers":[],"name":"performRebalanceIfNeeded","nameLocation":"9755:24:17","nodeType":"FunctionDefinition","parameters":{"id":5271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5270,"mutability":"mutable","name":"poolAddress","nameLocation":"9788:11:17","nodeType":"VariableDeclaration","scope":5288,"src":"9780:19:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5269,"name":"address","nodeType":"ElementaryTypeName","src":"9780:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9779:21:17"},"returnParameters":{"id":5272,"nodeType":"ParameterList","parameters":[],"src":"9810:0:17"},"scope":5392,"src":"9746:172:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":5302,"nodeType":"Block","src":"10204:54:17","statements":[{"expression":{"arguments":[{"id":5299,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5291,"src":"10246:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":5297,"name":"poolFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4627,"src":"10218:11:17","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1PoolFactory_$5632","typeString":"contract IBaluniV1PoolFactory"}},"id":5298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10230:15:17","memberName":"getPoolsByAsset","nodeType":"MemberAccess","referencedDeclaration":5624,"src":"10218:27:17","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (address) view external returns (address[] memory)"}},"id":5300,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10218:34:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":5296,"id":5301,"nodeType":"Return","src":"10211:41:17"}]},"documentation":{"id":5289,"nodeType":"StructuredDocumentation","src":"9924:187:17","text":" @dev Returns an array of pool addresses that contain the given token.\n @param token The address of the token to search for.\n @return An array of pool addresses."},"functionSelector":"ae3cce1c","id":5303,"implemented":true,"kind":"function","modifiers":[],"name":"getPoolsContainingToken","nameLocation":"10124:23:17","nodeType":"FunctionDefinition","parameters":{"id":5292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5291,"mutability":"mutable","name":"token","nameLocation":"10156:5:17","nodeType":"VariableDeclaration","scope":5303,"src":"10148:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5290,"name":"address","nodeType":"ElementaryTypeName","src":"10148:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10147:15:17"},"returnParameters":{"id":5296,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5295,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5303,"src":"10186:16:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":5293,"name":"address","nodeType":"ElementaryTypeName","src":"10186:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5294,"nodeType":"ArrayTypeName","src":"10186:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"10185:18:17"},"scope":5392,"src":"10115:143:17","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":5312,"nodeType":"Block","src":"10413:44:17","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":5309,"name":"_getInitializedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":427,"src":"10427:22:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint64_$","typeString":"function () view returns (uint64)"}},"id":5310,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10427:24:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":5308,"id":5311,"nodeType":"Return","src":"10420:31:17"}]},"documentation":{"id":5304,"nodeType":"StructuredDocumentation","src":"10264:92:17","text":" @dev Returns the version of the contract.\n @return The version string."},"functionSelector":"0d8e6e2c","id":5313,"implemented":true,"kind":"function","modifiers":[],"name":"getVersion","nameLocation":"10369:10:17","nodeType":"FunctionDefinition","parameters":{"id":5305,"nodeType":"ParameterList","parameters":[],"src":"10379:2:17"},"returnParameters":{"id":5308,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5307,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5313,"src":"10405:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":5306,"name":"uint64","nodeType":"ElementaryTypeName","src":"10405:6:17","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"10404:8:17"},"scope":5392,"src":"10360:97:17","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":5327,"nodeType":"Block","src":"10726:61:17","statements":[{"expression":{"id":5325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5321,"name":"poolFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4627,"src":"10733:11:17","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1PoolFactory_$5632","typeString":"contract IBaluniV1PoolFactory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5323,"name":"_poolFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5316,"src":"10768:12:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5322,"name":"IBaluniV1PoolFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5632,"src":"10747:20:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBaluniV1PoolFactory_$5632_$","typeString":"type(contract IBaluniV1PoolFactory)"}},"id":5324,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10747:34:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1PoolFactory_$5632","typeString":"contract IBaluniV1PoolFactory"}},"src":"10733:48:17","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1PoolFactory_$5632","typeString":"contract IBaluniV1PoolFactory"}},"id":5326,"nodeType":"ExpressionStatement","src":"10733:48:17"}]},"documentation":{"id":5314,"nodeType":"StructuredDocumentation","src":"10463:191:17","text":" @dev Changes the address of the pool factory contract.\n Can only be called by the contract owner.\n @param _poolFactory The new address of the pool factory contract."},"functionSelector":"72591be5","id":5328,"implemented":true,"kind":"function","modifiers":[{"id":5319,"kind":"modifierInvocation","modifierName":{"id":5318,"name":"onlyOwner","nameLocations":["10716:9:17"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"10716:9:17"},"nodeType":"ModifierInvocation","src":"10716:9:17"}],"name":"changePoolFactory","nameLocation":"10667:17:17","nodeType":"FunctionDefinition","parameters":{"id":5317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5316,"mutability":"mutable","name":"_poolFactory","nameLocation":"10693:12:17","nodeType":"VariableDeclaration","scope":5328,"src":"10685:20:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5315,"name":"address","nodeType":"ElementaryTypeName","src":"10685:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10684:22:17"},"returnParameters":{"id":5320,"nodeType":"ParameterList","parameters":[],"src":"10726:0:17"},"scope":5392,"src":"10658:129:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":5390,"nodeType":"Block","src":"10828:331:17","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":5334,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"10865:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10869:6:17","memberName":"sender","nodeType":"MemberAccess","src":"10865:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":5332,"name":"poolFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4627,"src":"10843:11:17","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1PoolFactory_$5632","typeString":"contract IBaluniV1PoolFactory"}},"id":5333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10855:9:17","memberName":"poolExist","nodeType":"MemberAccess","referencedDeclaration":5631,"src":"10843:21:17","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view external returns (bool)"}},"id":5336,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10843:33:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c7920506f6f6c73","id":5337,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10878:12:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_ebbdda7ca3eaf84d42b8b19f7c9c751e698c398f764215aee35eec179880a1c9","typeString":"literal_string \"Only Pools\""},"value":"Only Pools"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ebbdda7ca3eaf84d42b8b19f7c9c751e698c398f764215aee35eec179880a1c9","typeString":"literal_string \"Only Pools\""}],"id":5331,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10835:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5338,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10835:56:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5339,"nodeType":"ExpressionStatement","src":"10835:56:17"},{"assignments":[5344],"declarations":[{"constant":false,"id":5344,"mutability":"mutable","name":"reserves","nameLocation":"10915:8:17","nodeType":"VariableDeclaration","scope":5390,"src":"10898:25:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5342,"name":"uint256","nodeType":"ElementaryTypeName","src":"10898:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5343,"nodeType":"ArrayTypeName","src":"10898:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":5351,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"expression":{"id":5346,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"10940:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10944:6:17","memberName":"sender","nodeType":"MemberAccess","src":"10940:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5345,"name":"IBaluniV1Pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5605,"src":"10926:13:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBaluniV1Pool_$5605_$","typeString":"type(contract IBaluniV1Pool)"}},"id":5348,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10926:25:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$5605","typeString":"contract IBaluniV1Pool"}},"id":5349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10952:11:17","memberName":"getReserves","nodeType":"MemberAccess","referencedDeclaration":5440,"src":"10926:37:17","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function () view external returns (uint256[] memory)"}},"id":5350,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10926:39:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"10898:67:17"},{"assignments":[5356],"declarations":[{"constant":false,"id":5356,"mutability":"mutable","name":"assets","nameLocation":"10989:6:17","nodeType":"VariableDeclaration","scope":5390,"src":"10972:23:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":5354,"name":"address","nodeType":"ElementaryTypeName","src":"10972:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5355,"nodeType":"ArrayTypeName","src":"10972:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":5363,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"expression":{"id":5358,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"11012:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11016:6:17","memberName":"sender","nodeType":"MemberAccess","src":"11012:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5357,"name":"IBaluniV1Pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5605,"src":"10998:13:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBaluniV1Pool_$5605_$","typeString":"type(contract IBaluniV1Pool)"}},"id":5360,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10998:25:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$5605","typeString":"contract IBaluniV1Pool"}},"id":5361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11024:9:17","memberName":"getAssets","nodeType":"MemberAccess","referencedDeclaration":5446,"src":"10998:35:17","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function () view external returns (address[] memory)"}},"id":5362,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10998:37:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"10972:63:17"},{"body":{"id":5388,"nodeType":"Block","src":"11086:68:17","statements":[{"expression":{"arguments":[{"expression":{"id":5381,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"11122:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11126:6:17","memberName":"sender","nodeType":"MemberAccess","src":"11122:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":5383,"name":"reserves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5344,"src":"11134:8:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":5385,"indexExpression":{"id":5384,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5365,"src":"11143:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11134:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"baseExpression":{"id":5376,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5356,"src":"11102:6:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":5378,"indexExpression":{"id":5377,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5365,"src":"11109:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11102:9:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5375,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1729,"src":"11095:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1729_$","typeString":"type(contract IERC20)"}},"id":5379,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11095:17:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"}},"id":5380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11113:8:17","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":1696,"src":"11095:26:17","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":5386,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11095:51:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5387,"nodeType":"ExpressionStatement","src":"11095:51:17"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5368,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5365,"src":"11062:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":5369,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5356,"src":"11066:6:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":5370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11073:6:17","memberName":"length","nodeType":"MemberAccess","src":"11066:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11062:17:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5389,"initializationExpression":{"assignments":[5365],"declarations":[{"constant":false,"id":5365,"mutability":"mutable","name":"i","nameLocation":"11055:1:17","nodeType":"VariableDeclaration","scope":5389,"src":"11047:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5364,"name":"uint256","nodeType":"ElementaryTypeName","src":"11047:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5367,"initialValue":{"hexValue":"30","id":5366,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11059:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11047:13:17"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":5373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"11081:3:17","subExpression":{"id":5372,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5365,"src":"11081:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5374,"nodeType":"ExpressionStatement","src":"11081:3:17"},"nodeType":"ForStatement","src":"11042:112:17"}]},"functionSelector":"fe110116","id":5391,"implemented":true,"kind":"function","modifiers":[],"name":"transferToPool","nameLocation":"10802:14:17","nodeType":"FunctionDefinition","parameters":{"id":5329,"nodeType":"ParameterList","parameters":[],"src":"10816:2:17"},"returnParameters":{"id":5330,"nodeType":"ParameterList","parameters":[],"src":"10828:0:17"},"scope":5392,"src":"10793:366:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":5393,"src":"2066:9096:17","usedErrors":[30,35,211,214,475,480,858,871,1768,1771],"usedEvents":[41,219,837]}],"src":"40:11124:17"},"id":17},"contracts/interfaces/IBaluniV1Pool.sol":{"ast":{"absolutePath":"contracts/interfaces/IBaluniV1Pool.sol","exportedSymbols":{"Context":[2038],"ERC20":[1651],"IBaluniV1Pool":[5605],"IERC20":[1729],"IERC20Errors":[728],"IERC20Metadata":[1755]},"id":5606,"license":"GNU AGPLv3","nodeType":"SourceUnit","nodes":[{"id":5394,"literals":["solidity","0.8",".25"],"nodeType":"PragmaDirective","src":"40:23:18"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":5395,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5606,"sourceUnit":1652,"src":"65:55:18","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IBaluniV1Pool","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":5605,"linearizedBaseContracts":[5605],"name":"IBaluniV1Pool","nameLocation":"134:13:18","nodeType":"ContractDefinition","nodes":[{"functionSelector":"01d22ccd","id":5400,"implemented":false,"kind":"function","modifiers":[],"name":"rebalancer","nameLocation":"174:10:18","nodeType":"FunctionDefinition","parameters":{"id":5396,"nodeType":"ParameterList","parameters":[],"src":"184:2:18"},"returnParameters":{"id":5399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5398,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5400,"src":"210:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5397,"name":"address","nodeType":"ElementaryTypeName","src":"210:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"209:9:18"},"scope":5605,"src":"165:54:18","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"cf35bdd0","id":5407,"implemented":false,"kind":"function","modifiers":[],"name":"assets","nameLocation":"234:6:18","nodeType":"FunctionDefinition","parameters":{"id":5403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5402,"mutability":"mutable","name":"index","nameLocation":"249:5:18","nodeType":"VariableDeclaration","scope":5407,"src":"241:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5401,"name":"uint256","nodeType":"ElementaryTypeName","src":"241:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"240:15:18"},"returnParameters":{"id":5406,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5405,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5407,"src":"279:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5404,"name":"address","nodeType":"ElementaryTypeName","src":"279:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"278:9:18"},"scope":5605,"src":"225:63:18","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"b5f163ff","id":5414,"implemented":false,"kind":"function","modifiers":[],"name":"weights","nameLocation":"303:7:18","nodeType":"FunctionDefinition","parameters":{"id":5410,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5409,"mutability":"mutable","name":"index","nameLocation":"319:5:18","nodeType":"VariableDeclaration","scope":5414,"src":"311:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5408,"name":"uint256","nodeType":"ElementaryTypeName","src":"311:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"310:15:18"},"returnParameters":{"id":5413,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5412,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5414,"src":"349:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5411,"name":"uint256","nodeType":"ElementaryTypeName","src":"349:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"348:9:18"},"scope":5605,"src":"294:64:18","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"7fec8d38","id":5419,"implemented":false,"kind":"function","modifiers":[],"name":"trigger","nameLocation":"373:7:18","nodeType":"FunctionDefinition","parameters":{"id":5415,"nodeType":"ParameterList","parameters":[],"src":"380:2:18"},"returnParameters":{"id":5418,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5417,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5419,"src":"406:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5416,"name":"uint256","nodeType":"ElementaryTypeName","src":"406:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"405:9:18"},"scope":5605,"src":"364:51:18","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"c2ee3a08","id":5424,"implemented":false,"kind":"function","modifiers":[],"name":"ONE","nameLocation":"430:3:18","nodeType":"FunctionDefinition","parameters":{"id":5420,"nodeType":"ParameterList","parameters":[],"src":"433:2:18"},"returnParameters":{"id":5423,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5422,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5424,"src":"459:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5421,"name":"uint256","nodeType":"ElementaryTypeName","src":"459:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"458:9:18"},"scope":5605,"src":"421:47:18","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"f887ea40","id":5429,"implemented":false,"kind":"function","modifiers":[],"name":"router","nameLocation":"483:6:18","nodeType":"FunctionDefinition","parameters":{"id":5425,"nodeType":"ParameterList","parameters":[],"src":"489:2:18"},"returnParameters":{"id":5428,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5427,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5429,"src":"515:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5426,"name":"address","nodeType":"ElementaryTypeName","src":"515:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"514:9:18"},"scope":5605,"src":"474:50:18","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"67a6c440","id":5434,"implemented":false,"kind":"function","modifiers":[],"name":"SWAP_FEE_BPS","nameLocation":"539:12:18","nodeType":"FunctionDefinition","parameters":{"id":5430,"nodeType":"ParameterList","parameters":[],"src":"551:2:18"},"returnParameters":{"id":5433,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5432,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5434,"src":"577:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5431,"name":"uint256","nodeType":"ElementaryTypeName","src":"577:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"576:9:18"},"scope":5605,"src":"530:56:18","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"0902f1ac","id":5440,"implemented":false,"kind":"function","modifiers":[],"name":"getReserves","nameLocation":"601:11:18","nodeType":"FunctionDefinition","parameters":{"id":5435,"nodeType":"ParameterList","parameters":[],"src":"612:2:18"},"returnParameters":{"id":5439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5438,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5440,"src":"638:16:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5436,"name":"uint256","nodeType":"ElementaryTypeName","src":"638:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5437,"nodeType":"ArrayTypeName","src":"638:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"637:18:18"},"scope":5605,"src":"592:64:18","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"67e4ac2c","id":5446,"implemented":false,"kind":"function","modifiers":[],"name":"getAssets","nameLocation":"671:9:18","nodeType":"FunctionDefinition","parameters":{"id":5441,"nodeType":"ParameterList","parameters":[],"src":"680:2:18"},"returnParameters":{"id":5445,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5444,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5446,"src":"706:16:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":5442,"name":"address","nodeType":"ElementaryTypeName","src":"706:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5443,"nodeType":"ArrayTypeName","src":"706:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"705:18:18"},"scope":5605,"src":"662:62:18","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"22acb867","id":5452,"implemented":false,"kind":"function","modifiers":[],"name":"getWeights","nameLocation":"739:10:18","nodeType":"FunctionDefinition","parameters":{"id":5447,"nodeType":"ParameterList","parameters":[],"src":"749:2:18"},"returnParameters":{"id":5451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5450,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5452,"src":"775:16:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5448,"name":"uint256","nodeType":"ElementaryTypeName","src":"775:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5449,"nodeType":"ArrayTypeName","src":"775:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"774:18:18"},"scope":5605,"src":"730:63:18","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"4aa06652","id":5463,"implemented":false,"kind":"function","modifiers":[],"name":"getAmountOut","nameLocation":"808:12:18","nodeType":"FunctionDefinition","parameters":{"id":5459,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5454,"mutability":"mutable","name":"fromToken","nameLocation":"829:9:18","nodeType":"VariableDeclaration","scope":5463,"src":"821:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5453,"name":"address","nodeType":"ElementaryTypeName","src":"821:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5456,"mutability":"mutable","name":"toToken","nameLocation":"848:7:18","nodeType":"VariableDeclaration","scope":5463,"src":"840:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5455,"name":"address","nodeType":"ElementaryTypeName","src":"840:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5458,"mutability":"mutable","name":"amount","nameLocation":"865:6:18","nodeType":"VariableDeclaration","scope":5463,"src":"857:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5457,"name":"uint256","nodeType":"ElementaryTypeName","src":"857:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"820:52:18"},"returnParameters":{"id":5462,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5461,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5463,"src":"896:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5460,"name":"uint256","nodeType":"ElementaryTypeName","src":"896:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"895:9:18"},"scope":5605,"src":"799:106:18","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"5568081a","id":5468,"implemented":false,"kind":"function","modifiers":[],"name":"performRebalanceIfNeeded","nameLocation":"920:24:18","nodeType":"FunctionDefinition","parameters":{"id":5466,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5465,"mutability":"mutable","name":"_sender","nameLocation":"953:7:18","nodeType":"VariableDeclaration","scope":5468,"src":"945:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5464,"name":"address","nodeType":"ElementaryTypeName","src":"945:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"944:17:18"},"returnParameters":{"id":5467,"nodeType":"ParameterList","parameters":[],"src":"970:0:18"},"scope":5605,"src":"911:60:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"89ab3532","id":5477,"implemented":false,"kind":"function","modifiers":[],"name":"getDeviation","nameLocation":"986:12:18","nodeType":"FunctionDefinition","parameters":{"id":5469,"nodeType":"ParameterList","parameters":[],"src":"998:2:18"},"returnParameters":{"id":5476,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5472,"mutability":"mutable","name":"directions","nameLocation":"1038:10:18","nodeType":"VariableDeclaration","scope":5477,"src":"1024:24:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":5470,"name":"bool","nodeType":"ElementaryTypeName","src":"1024:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5471,"nodeType":"ArrayTypeName","src":"1024:6:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":5475,"mutability":"mutable","name":"deviations","nameLocation":"1067:10:18","nodeType":"VariableDeclaration","scope":5477,"src":"1050:27:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5473,"name":"uint256","nodeType":"ElementaryTypeName","src":"1050:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5474,"nodeType":"ArrayTypeName","src":"1050:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1023:55:18"},"scope":5605,"src":"977:102:18","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"cf8fa764","id":5484,"implemented":false,"kind":"function","modifiers":[],"name":"assetLiquidity","nameLocation":"1094:14:18","nodeType":"FunctionDefinition","parameters":{"id":5480,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5479,"mutability":"mutable","name":"assetIndex","nameLocation":"1117:10:18","nodeType":"VariableDeclaration","scope":5484,"src":"1109:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5478,"name":"uint256","nodeType":"ElementaryTypeName","src":"1109:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1108:20:18"},"returnParameters":{"id":5483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5482,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5484,"src":"1152:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5481,"name":"uint256","nodeType":"ElementaryTypeName","src":"1152:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1151:9:18"},"scope":5605,"src":"1085:76:18","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"1a686502","id":5489,"implemented":false,"kind":"function","modifiers":[],"name":"liquidity","nameLocation":"1176:9:18","nodeType":"FunctionDefinition","parameters":{"id":5485,"nodeType":"ParameterList","parameters":[],"src":"1185:2:18"},"returnParameters":{"id":5488,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5487,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5489,"src":"1211:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5486,"name":"uint256","nodeType":"ElementaryTypeName","src":"1211:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1210:9:18"},"scope":5605,"src":"1167:53:18","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"e73faa2d","id":5494,"implemented":false,"kind":"function","modifiers":[],"name":"unitPrice","nameLocation":"1235:9:18","nodeType":"FunctionDefinition","parameters":{"id":5490,"nodeType":"ParameterList","parameters":[],"src":"1244:2:18"},"returnParameters":{"id":5493,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5492,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5494,"src":"1270:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5491,"name":"uint256","nodeType":"ElementaryTypeName","src":"1270:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1269:9:18"},"scope":5605,"src":"1226:53:18","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"0723c999","id":5499,"implemented":false,"kind":"function","modifiers":[],"name":"rebalanceWeights","nameLocation":"1309:16:18","nodeType":"FunctionDefinition","parameters":{"id":5497,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5496,"mutability":"mutable","name":"receiver","nameLocation":"1334:8:18","nodeType":"VariableDeclaration","scope":5499,"src":"1326:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5495,"name":"address","nodeType":"ElementaryTypeName","src":"1326:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1325:18:18"},"returnParameters":{"id":5498,"nodeType":"ParameterList","parameters":[],"src":"1352:0:18"},"scope":5605,"src":"1300:53:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"6e81221c","id":5512,"implemented":false,"kind":"function","modifiers":[],"name":"swap","nameLocation":"1368:4:18","nodeType":"FunctionDefinition","parameters":{"id":5508,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5501,"mutability":"mutable","name":"fromToken","nameLocation":"1381:9:18","nodeType":"VariableDeclaration","scope":5512,"src":"1373:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5500,"name":"address","nodeType":"ElementaryTypeName","src":"1373:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5503,"mutability":"mutable","name":"toToken","nameLocation":"1400:7:18","nodeType":"VariableDeclaration","scope":5512,"src":"1392:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5502,"name":"address","nodeType":"ElementaryTypeName","src":"1392:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5505,"mutability":"mutable","name":"amount","nameLocation":"1417:6:18","nodeType":"VariableDeclaration","scope":5512,"src":"1409:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5504,"name":"uint256","nodeType":"ElementaryTypeName","src":"1409:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5507,"mutability":"mutable","name":"receiver","nameLocation":"1433:8:18","nodeType":"VariableDeclaration","scope":5512,"src":"1425:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5506,"name":"address","nodeType":"ElementaryTypeName","src":"1425:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1372:70:18"},"returnParameters":{"id":5511,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5510,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5512,"src":"1461:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5509,"name":"uint256","nodeType":"ElementaryTypeName","src":"1461:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1460:9:18"},"scope":5605,"src":"1359:111:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"6a627842","id":5519,"implemented":false,"kind":"function","modifiers":[],"name":"mint","nameLocation":"1485:4:18","nodeType":"FunctionDefinition","parameters":{"id":5515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5514,"mutability":"mutable","name":"to","nameLocation":"1498:2:18","nodeType":"VariableDeclaration","scope":5519,"src":"1490:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5513,"name":"address","nodeType":"ElementaryTypeName","src":"1490:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1489:12:18"},"returnParameters":{"id":5518,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5517,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5519,"src":"1520:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5516,"name":"uint256","nodeType":"ElementaryTypeName","src":"1520:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1519:9:18"},"scope":5605,"src":"1476:53:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"3bb9339d","id":5530,"implemented":false,"kind":"function","modifiers":[],"name":"mintOneSide","nameLocation":"1544:11:18","nodeType":"FunctionDefinition","parameters":{"id":5526,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5521,"mutability":"mutable","name":"assetIndex","nameLocation":"1564:10:18","nodeType":"VariableDeclaration","scope":5530,"src":"1556:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5520,"name":"uint256","nodeType":"ElementaryTypeName","src":"1556:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5523,"mutability":"mutable","name":"amount","nameLocation":"1584:6:18","nodeType":"VariableDeclaration","scope":5530,"src":"1576:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5522,"name":"uint256","nodeType":"ElementaryTypeName","src":"1576:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5525,"mutability":"mutable","name":"receiver","nameLocation":"1600:8:18","nodeType":"VariableDeclaration","scope":5530,"src":"1592:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5524,"name":"address","nodeType":"ElementaryTypeName","src":"1592:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1555:54:18"},"returnParameters":{"id":5529,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5528,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5530,"src":"1628:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5527,"name":"uint256","nodeType":"ElementaryTypeName","src":"1628:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1627:9:18"},"scope":5605,"src":"1535:102:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"89afcb44","id":5535,"implemented":false,"kind":"function","modifiers":[],"name":"burn","nameLocation":"1652:4:18","nodeType":"FunctionDefinition","parameters":{"id":5533,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5532,"mutability":"mutable","name":"to","nameLocation":"1665:2:18","nodeType":"VariableDeclaration","scope":5535,"src":"1657:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5531,"name":"address","nodeType":"ElementaryTypeName","src":"1657:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1656:12:18"},"returnParameters":{"id":5534,"nodeType":"ParameterList","parameters":[],"src":"1677:0:18"},"scope":5605,"src":"1643:35:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"0918281b","id":5540,"implemented":false,"kind":"function","modifiers":[],"name":"changeRebalancer","nameLocation":"1693:16:18","nodeType":"FunctionDefinition","parameters":{"id":5538,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5537,"mutability":"mutable","name":"_newRebalancer","nameLocation":"1718:14:18","nodeType":"VariableDeclaration","scope":5540,"src":"1710:22:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5536,"name":"address","nodeType":"ElementaryTypeName","src":"1710:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1709:24:18"},"returnParameters":{"id":5539,"nodeType":"ParameterList","parameters":[],"src":"1742:0:18"},"scope":5605,"src":"1684:59:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"340ac20f","id":5545,"implemented":false,"kind":"function","modifiers":[],"name":"changeRouter","nameLocation":"1758:12:18","nodeType":"FunctionDefinition","parameters":{"id":5543,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5542,"mutability":"mutable","name":"_newRouter","nameLocation":"1779:10:18","nodeType":"VariableDeclaration","scope":5545,"src":"1771:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5541,"name":"address","nodeType":"ElementaryTypeName","src":"1771:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1770:20:18"},"returnParameters":{"id":5544,"nodeType":"ParameterList","parameters":[],"src":"1799:0:18"},"scope":5605,"src":"1749:51:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"36bf6e39","id":5553,"implemented":false,"kind":"function","modifiers":[],"name":"computeTotalValuation","nameLocation":"1815:21:18","nodeType":"FunctionDefinition","parameters":{"id":5546,"nodeType":"ParameterList","parameters":[],"src":"1836:2:18"},"returnParameters":{"id":5552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5548,"mutability":"mutable","name":"totalVal","nameLocation":"1870:8:18","nodeType":"VariableDeclaration","scope":5553,"src":"1862:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5547,"name":"uint256","nodeType":"ElementaryTypeName","src":"1862:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5551,"mutability":"mutable","name":"valuations","nameLocation":"1897:10:18","nodeType":"VariableDeclaration","scope":5553,"src":"1880:27:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5549,"name":"uint256","nodeType":"ElementaryTypeName","src":"1880:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5550,"nodeType":"ArrayTypeName","src":"1880:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1861:47:18"},"scope":5605,"src":"1806:103:18","stateMutability":"view","virtual":false,"visibility":"external"},{"canonicalName":"IBaluniV1Pool.AssetInfo","id":5558,"members":[{"constant":false,"id":5555,"mutability":"mutable","name":"asset","nameLocation":"1947:5:18","nodeType":"VariableDeclaration","scope":5558,"src":"1939:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5554,"name":"address","nodeType":"ElementaryTypeName","src":"1939:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5557,"mutability":"mutable","name":"weight","nameLocation":"1967:6:18","nodeType":"VariableDeclaration","scope":5558,"src":"1959:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5556,"name":"uint256","nodeType":"ElementaryTypeName","src":"1959:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"AssetInfo","nameLocation":"1922:9:18","nodeType":"StructDefinition","scope":5605,"src":"1915:64:18","visibility":"public"},{"functionSelector":"d14ef46d","id":5566,"implemented":false,"kind":"function","modifiers":[],"name":"assetInfos","nameLocation":"1994:10:18","nodeType":"FunctionDefinition","parameters":{"id":5561,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5560,"mutability":"mutable","name":"_index","nameLocation":"2010:6:18","nodeType":"VariableDeclaration","scope":5566,"src":"2005:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5559,"name":"uint","nodeType":"ElementaryTypeName","src":"2005:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2004:13:18"},"returnParameters":{"id":5565,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5564,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5566,"src":"2041:16:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_AssetInfo_$5558_memory_ptr","typeString":"struct IBaluniV1Pool.AssetInfo"},"typeName":{"id":5563,"nodeType":"UserDefinedTypeName","pathNode":{"id":5562,"name":"AssetInfo","nameLocations":["2041:9:18"],"nodeType":"IdentifierPath","referencedDeclaration":5558,"src":"2041:9:18"},"referencedDeclaration":5558,"src":"2041:9:18","typeDescriptions":{"typeIdentifier":"t_struct$_AssetInfo_$5558_storage_ptr","typeString":"struct IBaluniV1Pool.AssetInfo"}},"visibility":"internal"}],"src":"2040:18:18"},"scope":5605,"src":"1985:74:18","stateMutability":"view","virtual":false,"visibility":"external"},{"anonymous":false,"eventSelector":"279b343370f587af7fb675ae7c8578e9c8abcc373236ad02c501a4771fe7a7b8","id":5573,"name":"RebalancePerformed","nameLocation":"2084:18:18","nodeType":"EventDefinition","parameters":{"id":5572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5568,"indexed":true,"mutability":"mutable","name":"by","nameLocation":"2119:2:18","nodeType":"VariableDeclaration","scope":5573,"src":"2103:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5567,"name":"address","nodeType":"ElementaryTypeName","src":"2103:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5571,"indexed":false,"mutability":"mutable","name":"assets","nameLocation":"2133:6:18","nodeType":"VariableDeclaration","scope":5573,"src":"2123:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":5569,"name":"address","nodeType":"ElementaryTypeName","src":"2123:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5570,"nodeType":"ArrayTypeName","src":"2123:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"2102:38:18"},"src":"2078:63:18"},{"anonymous":false,"eventSelector":"a95ad530009c6f929555e70a66aadbeae7231e45756c5b028ca77fbaa376e73e","id":5580,"name":"WeightsRebalanced","nameLocation":"2151:17:18","nodeType":"EventDefinition","parameters":{"id":5579,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5575,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"2185:4:18","nodeType":"VariableDeclaration","scope":5580,"src":"2169:20:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5574,"name":"address","nodeType":"ElementaryTypeName","src":"2169:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5578,"indexed":false,"mutability":"mutable","name":"amountsAdded","nameLocation":"2201:12:18","nodeType":"VariableDeclaration","scope":5580,"src":"2191:22:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5576,"name":"uint256","nodeType":"ElementaryTypeName","src":"2191:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5577,"nodeType":"ArrayTypeName","src":"2191:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2168:46:18"},"src":"2145:70:18"},{"anonymous":false,"eventSelector":"cc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5","id":5586,"name":"Burn","nameLocation":"2225:4:18","nodeType":"EventDefinition","parameters":{"id":5585,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5582,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"2246:4:18","nodeType":"VariableDeclaration","scope":5586,"src":"2230:20:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5581,"name":"address","nodeType":"ElementaryTypeName","src":"2230:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5584,"indexed":false,"mutability":"mutable","name":"sharesBurned","nameLocation":"2260:12:18","nodeType":"VariableDeclaration","scope":5586,"src":"2252:20:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5583,"name":"uint256","nodeType":"ElementaryTypeName","src":"2252:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2229:44:18"},"src":"2219:55:18"},{"anonymous":false,"eventSelector":"0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d4121396885","id":5592,"name":"Mint","nameLocation":"2284:4:18","nodeType":"EventDefinition","parameters":{"id":5591,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5588,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"2305:2:18","nodeType":"VariableDeclaration","scope":5592,"src":"2289:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5587,"name":"address","nodeType":"ElementaryTypeName","src":"2289:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5590,"indexed":false,"mutability":"mutable","name":"sharesMinted","nameLocation":"2317:12:18","nodeType":"VariableDeclaration","scope":5592,"src":"2309:20:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5589,"name":"uint256","nodeType":"ElementaryTypeName","src":"2309:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2288:42:18"},"src":"2278:53:18"},{"anonymous":false,"eventSelector":"cd3829a3813dc3cdd188fd3d01dcf3268c16be2fdd2dd21d0665418816e46062","id":5604,"name":"Swap","nameLocation":"2341:4:18","nodeType":"EventDefinition","parameters":{"id":5603,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5594,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"2368:4:18","nodeType":"VariableDeclaration","scope":5604,"src":"2352:20:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5593,"name":"address","nodeType":"ElementaryTypeName","src":"2352:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5596,"indexed":true,"mutability":"mutable","name":"fromToken","nameLocation":"2395:9:18","nodeType":"VariableDeclaration","scope":5604,"src":"2379:25:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5595,"name":"address","nodeType":"ElementaryTypeName","src":"2379:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5598,"indexed":true,"mutability":"mutable","name":"toToken","nameLocation":"2427:7:18","nodeType":"VariableDeclaration","scope":5604,"src":"2411:23:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5597,"name":"address","nodeType":"ElementaryTypeName","src":"2411:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5600,"indexed":false,"mutability":"mutable","name":"amountIn","nameLocation":"2449:8:18","nodeType":"VariableDeclaration","scope":5604,"src":"2441:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5599,"name":"uint256","nodeType":"ElementaryTypeName","src":"2441:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5602,"indexed":false,"mutability":"mutable","name":"amountOut","nameLocation":"2472:9:18","nodeType":"VariableDeclaration","scope":5604,"src":"2464:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5601,"name":"uint256","nodeType":"ElementaryTypeName","src":"2464:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2345:141:18"},"src":"2335:152:18"}],"scope":5606,"src":"124:2366:18","usedErrors":[],"usedEvents":[5573,5580,5586,5592,5604]}],"src":"40:2452:18"},"id":18},"contracts/interfaces/IBaluniV1PoolFactory.sol":{"ast":{"absolutePath":"contracts/interfaces/IBaluniV1PoolFactory.sol","exportedSymbols":{"IBaluniV1PoolFactory":[5632]},"id":5633,"license":"GNU AGPLv3","nodeType":"SourceUnit","nodes":[{"id":5607,"literals":["solidity","0.8",".25"],"nodeType":"PragmaDirective","src":"40:23:19"},{"abstract":false,"baseContracts":[],"canonicalName":"IBaluniV1PoolFactory","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":5632,"linearizedBaseContracts":[5632],"name":"IBaluniV1PoolFactory","nameLocation":"77:20:19","nodeType":"ContractDefinition","nodes":[{"functionSelector":"2d5e94a7","id":5616,"implemented":false,"kind":"function","modifiers":[],"name":"getPoolByAssets","nameLocation":"112:15:19","nodeType":"FunctionDefinition","parameters":{"id":5612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5609,"mutability":"mutable","name":"asset1","nameLocation":"136:6:19","nodeType":"VariableDeclaration","scope":5616,"src":"128:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5608,"name":"address","nodeType":"ElementaryTypeName","src":"128:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5611,"mutability":"mutable","name":"asset2","nameLocation":"152:6:19","nodeType":"VariableDeclaration","scope":5616,"src":"144:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5610,"name":"address","nodeType":"ElementaryTypeName","src":"144:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"127:32:19"},"returnParameters":{"id":5615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5614,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5616,"src":"183:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5613,"name":"address","nodeType":"ElementaryTypeName","src":"183:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"182:9:19"},"scope":5632,"src":"103:89:19","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"b4340e6a","id":5624,"implemented":false,"kind":"function","modifiers":[],"name":"getPoolsByAsset","nameLocation":"207:15:19","nodeType":"FunctionDefinition","parameters":{"id":5619,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5618,"mutability":"mutable","name":"token","nameLocation":"231:5:19","nodeType":"VariableDeclaration","scope":5624,"src":"223:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5617,"name":"address","nodeType":"ElementaryTypeName","src":"223:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"222:15:19"},"returnParameters":{"id":5623,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5622,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5624,"src":"261:16:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":5620,"name":"address","nodeType":"ElementaryTypeName","src":"261:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5621,"nodeType":"ArrayTypeName","src":"261:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"260:18:19"},"scope":5632,"src":"198:81:19","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"89345efb","id":5631,"implemented":false,"kind":"function","modifiers":[],"name":"poolExist","nameLocation":"294:9:19","nodeType":"FunctionDefinition","parameters":{"id":5627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5626,"mutability":"mutable","name":"_pool","nameLocation":"312:5:19","nodeType":"VariableDeclaration","scope":5631,"src":"304:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5625,"name":"address","nodeType":"ElementaryTypeName","src":"304:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"303:15:19"},"returnParameters":{"id":5630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5629,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5631,"src":"342:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5628,"name":"bool","nodeType":"ElementaryTypeName","src":"342:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"341:6:19"},"scope":5632,"src":"285:63:19","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":5633,"src":"67:284:19","usedErrors":[],"usedEvents":[]}],"src":"40:313:19"},"id":19},"contracts/interfaces/IBaluniV1PoolPeriphery.sol":{"ast":{"absolutePath":"contracts/interfaces/IBaluniV1PoolPeriphery.sol","exportedSymbols":{"IBaluniV1PoolPeriphery":[5638]},"id":5639,"license":"GNU AGPLv3","nodeType":"SourceUnit","nodes":[{"id":5634,"literals":["solidity","0.8",".25"],"nodeType":"PragmaDirective","src":"40:23:20"},{"abstract":false,"baseContracts":[],"canonicalName":"IBaluniV1PoolPeriphery","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":5638,"linearizedBaseContracts":[5638],"name":"IBaluniV1PoolPeriphery","nameLocation":"77:22:20","nodeType":"ContractDefinition","nodes":[{"functionSelector":"fe110116","id":5637,"implemented":false,"kind":"function","modifiers":[],"name":"transferToPool","nameLocation":"114:14:20","nodeType":"FunctionDefinition","parameters":{"id":5635,"nodeType":"ParameterList","parameters":[],"src":"128:2:20"},"returnParameters":{"id":5636,"nodeType":"ParameterList","parameters":[],"src":"139:0:20"},"scope":5638,"src":"105:35:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":5639,"src":"67:76:20","usedErrors":[],"usedEvents":[]}],"src":"40:105:20"},"id":20},"contracts/interfaces/IBaluniV1Rebalancer.sol":{"ast":{"absolutePath":"contracts/interfaces/IBaluniV1Rebalancer.sol","exportedSymbols":{"IBaluniV1Rebalancer":[5766],"IERC20":[1729],"IERC20Metadata":[1755]},"id":5767,"license":"GNU AGPLv3","nodeType":"SourceUnit","nodes":[{"id":5640,"literals":["solidity","0.8",".25"],"nodeType":"PragmaDirective","src":"40:23:21"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":5641,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5767,"sourceUnit":1730,"src":"65:56:21","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","id":5642,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5767,"sourceUnit":1756,"src":"123:75:21","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IBaluniV1Rebalancer","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":5766,"linearizedBaseContracts":[5766],"name":"IBaluniV1Rebalancer","nameLocation":"212:19:21","nodeType":"ContractDefinition","nodes":[{"canonicalName":"IBaluniV1Rebalancer.RebalanceType","id":5646,"members":[{"id":5643,"name":"Overweight","nameLocation":"263:10:21","nodeType":"EnumValue","src":"263:10:21"},{"id":5644,"name":"Underweight","nameLocation":"280:11:21","nodeType":"EnumValue","src":"280:11:21"},{"id":5645,"name":"NoRebalance","nameLocation":"298:11:21","nodeType":"EnumValue","src":"298:11:21"}],"name":"RebalanceType","nameLocation":"242:13:21","nodeType":"EnumDefinition","src":"237:77:21"},{"canonicalName":"IBaluniV1Rebalancer.RebalanceVars","id":5676,"members":[{"constant":false,"id":5648,"mutability":"mutable","name":"len","nameLocation":"356:3:21","nodeType":"VariableDeclaration","scope":5676,"src":"348:11:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5647,"name":"uint256","nodeType":"ElementaryTypeName","src":"348:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5650,"mutability":"mutable","name":"totalValue","nameLocation":"374:10:21","nodeType":"VariableDeclaration","scope":5676,"src":"366:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5649,"name":"uint256","nodeType":"ElementaryTypeName","src":"366:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5652,"mutability":"mutable","name":"finalUsdBalance","nameLocation":"399:15:21","nodeType":"VariableDeclaration","scope":5676,"src":"391:23:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5651,"name":"uint256","nodeType":"ElementaryTypeName","src":"391:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5654,"mutability":"mutable","name":"overweightVaultsLength","nameLocation":"429:22:21","nodeType":"VariableDeclaration","scope":5676,"src":"421:30:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5653,"name":"uint256","nodeType":"ElementaryTypeName","src":"421:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5656,"mutability":"mutable","name":"underweightVaultsLength","nameLocation":"466:23:21","nodeType":"VariableDeclaration","scope":5676,"src":"458:31:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5655,"name":"uint256","nodeType":"ElementaryTypeName","src":"458:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5658,"mutability":"mutable","name":"totalActiveWeight","nameLocation":"504:17:21","nodeType":"VariableDeclaration","scope":5676,"src":"496:25:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5657,"name":"uint256","nodeType":"ElementaryTypeName","src":"496:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5660,"mutability":"mutable","name":"amountOut","nameLocation":"536:9:21","nodeType":"VariableDeclaration","scope":5676,"src":"528:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5659,"name":"uint256","nodeType":"ElementaryTypeName","src":"528:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5663,"mutability":"mutable","name":"overweightVaults","nameLocation":"562:16:21","nodeType":"VariableDeclaration","scope":5676,"src":"552:26:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5661,"name":"uint256","nodeType":"ElementaryTypeName","src":"552:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5662,"nodeType":"ArrayTypeName","src":"552:9:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":5666,"mutability":"mutable","name":"overweightAmounts","nameLocation":"595:17:21","nodeType":"VariableDeclaration","scope":5676,"src":"585:27:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5664,"name":"uint256","nodeType":"ElementaryTypeName","src":"585:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5665,"nodeType":"ArrayTypeName","src":"585:9:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":5669,"mutability":"mutable","name":"underweightVaults","nameLocation":"629:17:21","nodeType":"VariableDeclaration","scope":5676,"src":"619:27:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5667,"name":"uint256","nodeType":"ElementaryTypeName","src":"619:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5668,"nodeType":"ArrayTypeName","src":"619:9:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":5672,"mutability":"mutable","name":"underweightAmounts","nameLocation":"663:18:21","nodeType":"VariableDeclaration","scope":5676,"src":"653:28:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5670,"name":"uint256","nodeType":"ElementaryTypeName","src":"653:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5671,"nodeType":"ArrayTypeName","src":"653:9:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":5675,"mutability":"mutable","name":"balances","nameLocation":"698:8:21","nodeType":"VariableDeclaration","scope":5676,"src":"688:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5673,"name":"uint256","nodeType":"ElementaryTypeName","src":"688:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5674,"nodeType":"ArrayTypeName","src":"688:9:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"name":"RebalanceVars","nameLocation":"327:13:21","nodeType":"StructDefinition","scope":5766,"src":"320:392:21","visibility":"public"},{"functionSelector":"f12e445a","id":5694,"implemented":false,"kind":"function","modifiers":[],"name":"checkRebalance","nameLocation":"727:14:21","nodeType":"FunctionDefinition","parameters":{"id":5689,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5679,"mutability":"mutable","name":"assets","nameLocation":"767:6:21","nodeType":"VariableDeclaration","scope":5694,"src":"748:25:21","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":5677,"name":"address","nodeType":"ElementaryTypeName","src":"748:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5678,"nodeType":"ArrayTypeName","src":"748:9:21","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":5682,"mutability":"mutable","name":"weights","nameLocation":"799:7:21","nodeType":"VariableDeclaration","scope":5694,"src":"780:26:21","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5680,"name":"uint256","nodeType":"ElementaryTypeName","src":"780:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5681,"nodeType":"ArrayTypeName","src":"780:9:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":5684,"mutability":"mutable","name":"limit","nameLocation":"821:5:21","nodeType":"VariableDeclaration","scope":5694,"src":"813:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5683,"name":"uint256","nodeType":"ElementaryTypeName","src":"813:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5686,"mutability":"mutable","name":"sender","nameLocation":"841:6:21","nodeType":"VariableDeclaration","scope":5694,"src":"833:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5685,"name":"address","nodeType":"ElementaryTypeName","src":"833:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5688,"mutability":"mutable","name":"baseAsset","nameLocation":"862:9:21","nodeType":"VariableDeclaration","scope":5694,"src":"854:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5687,"name":"address","nodeType":"ElementaryTypeName","src":"854:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"741:135:21"},"returnParameters":{"id":5693,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5692,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5694,"src":"900:20:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_RebalanceVars_$5676_memory_ptr","typeString":"struct IBaluniV1Rebalancer.RebalanceVars"},"typeName":{"id":5691,"nodeType":"UserDefinedTypeName","pathNode":{"id":5690,"name":"RebalanceVars","nameLocations":["900:13:21"],"nodeType":"IdentifierPath","referencedDeclaration":5676,"src":"900:13:21"},"referencedDeclaration":5676,"src":"900:13:21","typeDescriptions":{"typeIdentifier":"t_struct$_RebalanceVars_$5676_storage_ptr","typeString":"struct IBaluniV1Rebalancer.RebalanceVars"}},"visibility":"internal"}],"src":"899:22:21"},"scope":5766,"src":"718:204:21","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"0325192d","id":5711,"implemented":false,"kind":"function","modifiers":[],"name":"rebalance","nameLocation":"937:9:21","nodeType":"FunctionDefinition","parameters":{"id":5709,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5697,"mutability":"mutable","name":"assets","nameLocation":"972:6:21","nodeType":"VariableDeclaration","scope":5711,"src":"953:25:21","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":5695,"name":"address","nodeType":"ElementaryTypeName","src":"953:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5696,"nodeType":"ArrayTypeName","src":"953:9:21","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":5700,"mutability":"mutable","name":"weights","nameLocation":"1004:7:21","nodeType":"VariableDeclaration","scope":5711,"src":"985:26:21","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5698,"name":"uint256","nodeType":"ElementaryTypeName","src":"985:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5699,"nodeType":"ArrayTypeName","src":"985:9:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":5702,"mutability":"mutable","name":"sender","nameLocation":"1026:6:21","nodeType":"VariableDeclaration","scope":5711,"src":"1018:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5701,"name":"address","nodeType":"ElementaryTypeName","src":"1018:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5704,"mutability":"mutable","name":"receiver","nameLocation":"1047:8:21","nodeType":"VariableDeclaration","scope":5711,"src":"1039:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5703,"name":"address","nodeType":"ElementaryTypeName","src":"1039:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5706,"mutability":"mutable","name":"limit","nameLocation":"1070:5:21","nodeType":"VariableDeclaration","scope":5711,"src":"1062:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5705,"name":"uint256","nodeType":"ElementaryTypeName","src":"1062:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5708,"mutability":"mutable","name":"baseAsset","nameLocation":"1090:9:21","nodeType":"VariableDeclaration","scope":5711,"src":"1082:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5707,"name":"address","nodeType":"ElementaryTypeName","src":"1082:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"946:158:21"},"returnParameters":{"id":5710,"nodeType":"ParameterList","parameters":[],"src":"1113:0:21"},"scope":5766,"src":"928:186:21","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"04cc7325","id":5716,"implemented":false,"kind":"function","modifiers":[],"name":"getBaluniRouter","nameLocation":"1129:15:21","nodeType":"FunctionDefinition","parameters":{"id":5712,"nodeType":"ParameterList","parameters":[],"src":"1144:2:21"},"returnParameters":{"id":5715,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5714,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5716,"src":"1170:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5713,"name":"address","nodeType":"ElementaryTypeName","src":"1170:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1169:9:21"},"scope":5766,"src":"1120:59:21","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"802431fb","id":5729,"implemented":false,"kind":"function","modifiers":[],"name":"getRate","nameLocation":"1194:7:21","nodeType":"FunctionDefinition","parameters":{"id":5725,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5719,"mutability":"mutable","name":"srcToken","nameLocation":"1209:8:21","nodeType":"VariableDeclaration","scope":5729,"src":"1202:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"},"typeName":{"id":5718,"nodeType":"UserDefinedTypeName","pathNode":{"id":5717,"name":"IERC20","nameLocations":["1202:6:21"],"nodeType":"IdentifierPath","referencedDeclaration":1729,"src":"1202:6:21"},"referencedDeclaration":1729,"src":"1202:6:21","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":5722,"mutability":"mutable","name":"dstToken","nameLocation":"1226:8:21","nodeType":"VariableDeclaration","scope":5729,"src":"1219:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"},"typeName":{"id":5721,"nodeType":"UserDefinedTypeName","pathNode":{"id":5720,"name":"IERC20","nameLocations":["1219:6:21"],"nodeType":"IdentifierPath","referencedDeclaration":1729,"src":"1219:6:21"},"referencedDeclaration":1729,"src":"1219:6:21","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":5724,"mutability":"mutable","name":"useWrappers","nameLocation":"1241:11:21","nodeType":"VariableDeclaration","scope":5729,"src":"1236:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5723,"name":"bool","nodeType":"ElementaryTypeName","src":"1236:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1201:52:21"},"returnParameters":{"id":5728,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5727,"mutability":"mutable","name":"weightedRate","nameLocation":"1285:12:21","nodeType":"VariableDeclaration","scope":5729,"src":"1277:20:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5726,"name":"uint256","nodeType":"ElementaryTypeName","src":"1277:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1276:22:21"},"scope":5766,"src":"1185:114:21","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"3b19e84a","id":5734,"implemented":false,"kind":"function","modifiers":[],"name":"getTreasury","nameLocation":"1314:11:21","nodeType":"FunctionDefinition","parameters":{"id":5730,"nodeType":"ParameterList","parameters":[],"src":"1325:2:21"},"returnParameters":{"id":5733,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5732,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5734,"src":"1351:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5731,"name":"address","nodeType":"ElementaryTypeName","src":"1351:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1350:9:21"},"scope":5766,"src":"1305:55:21","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"bc06e81d","id":5739,"implemented":false,"kind":"function","modifiers":[],"name":"getUSDCAddress","nameLocation":"1375:14:21","nodeType":"FunctionDefinition","parameters":{"id":5735,"nodeType":"ParameterList","parameters":[],"src":"1389:2:21"},"returnParameters":{"id":5738,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5737,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5739,"src":"1415:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5736,"name":"address","nodeType":"ElementaryTypeName","src":"1415:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1414:9:21"},"scope":5766,"src":"1366:58:21","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"956fb510","id":5744,"implemented":false,"kind":"function","modifiers":[],"name":"getWNATIVEAddress","nameLocation":"1439:17:21","nodeType":"FunctionDefinition","parameters":{"id":5740,"nodeType":"ParameterList","parameters":[],"src":"1456:2:21"},"returnParameters":{"id":5743,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5742,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5744,"src":"1482:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5741,"name":"address","nodeType":"ElementaryTypeName","src":"1482:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1481:9:21"},"scope":5766,"src":"1430:61:21","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"7de4fd10","id":5754,"implemented":false,"kind":"function","modifiers":[],"name":"getRateToEth","nameLocation":"1506:12:21","nodeType":"FunctionDefinition","parameters":{"id":5750,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5747,"mutability":"mutable","name":"srcToken","nameLocation":"1526:8:21","nodeType":"VariableDeclaration","scope":5754,"src":"1519:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"},"typeName":{"id":5746,"nodeType":"UserDefinedTypeName","pathNode":{"id":5745,"name":"IERC20","nameLocations":["1519:6:21"],"nodeType":"IdentifierPath","referencedDeclaration":1729,"src":"1519:6:21"},"referencedDeclaration":1729,"src":"1519:6:21","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":5749,"mutability":"mutable","name":"useWrappers","nameLocation":"1541:11:21","nodeType":"VariableDeclaration","scope":5754,"src":"1536:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5748,"name":"bool","nodeType":"ElementaryTypeName","src":"1536:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1518:35:21"},"returnParameters":{"id":5753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5752,"mutability":"mutable","name":"weightedRate","nameLocation":"1585:12:21","nodeType":"VariableDeclaration","scope":5754,"src":"1577:20:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5751,"name":"uint256","nodeType":"ElementaryTypeName","src":"1577:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1576:22:21"},"scope":5766,"src":"1497:102:21","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"248391ff","id":5765,"implemented":false,"kind":"function","modifiers":[],"name":"convert","nameLocation":"1614:7:21","nodeType":"FunctionDefinition","parameters":{"id":5761,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5756,"mutability":"mutable","name":"fromToken","nameLocation":"1630:9:21","nodeType":"VariableDeclaration","scope":5765,"src":"1622:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5755,"name":"address","nodeType":"ElementaryTypeName","src":"1622:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5758,"mutability":"mutable","name":"toToken","nameLocation":"1649:7:21","nodeType":"VariableDeclaration","scope":5765,"src":"1641:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5757,"name":"address","nodeType":"ElementaryTypeName","src":"1641:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5760,"mutability":"mutable","name":"amount","nameLocation":"1666:6:21","nodeType":"VariableDeclaration","scope":5765,"src":"1658:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5759,"name":"uint256","nodeType":"ElementaryTypeName","src":"1658:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1621:52:21"},"returnParameters":{"id":5764,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5763,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5765,"src":"1697:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5762,"name":"uint256","nodeType":"ElementaryTypeName","src":"1697:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1696:9:21"},"scope":5766,"src":"1605:101:21","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":5767,"src":"202:1507:21","usedErrors":[],"usedEvents":[]}],"src":"40:1671:21"},"id":21},"contracts/interfaces/IBaluniV1Router.sol":{"ast":{"absolutePath":"contracts/interfaces/IBaluniV1Router.sol","exportedSymbols":{"IBaluniV1Router":[5800]},"id":5801,"license":"GNU AGPLv3","nodeType":"SourceUnit","nodes":[{"id":5768,"literals":["solidity","0.8",".25"],"nodeType":"PragmaDirective","src":"40:23:22"},{"abstract":false,"baseContracts":[],"canonicalName":"IBaluniV1Router","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":5800,"linearizedBaseContracts":[5800],"name":"IBaluniV1Router","nameLocation":"77:15:22","nodeType":"ContractDefinition","nodes":[{"functionSelector":"27d54a92","id":5775,"implemented":false,"kind":"function","modifiers":[],"name":"getAgentAddress","nameLocation":"107:15:22","nodeType":"FunctionDefinition","parameters":{"id":5771,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5770,"mutability":"mutable","name":"_user","nameLocation":"131:5:22","nodeType":"VariableDeclaration","scope":5775,"src":"123:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5769,"name":"address","nodeType":"ElementaryTypeName","src":"123:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"122:15:22"},"returnParameters":{"id":5774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5773,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5775,"src":"161:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5772,"name":"address","nodeType":"ElementaryTypeName","src":"161:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"160:9:22"},"scope":5800,"src":"98:72:22","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"185fcffe","id":5780,"implemented":false,"kind":"function","modifiers":[],"name":"getBpsFee","nameLocation":"185:9:22","nodeType":"FunctionDefinition","parameters":{"id":5776,"nodeType":"ParameterList","parameters":[],"src":"194:2:22"},"returnParameters":{"id":5779,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5778,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5780,"src":"220:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5777,"name":"uint256","nodeType":"ElementaryTypeName","src":"220:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"219:9:22"},"scope":5800,"src":"176:53:22","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"2bdd955a","id":5789,"implemented":false,"kind":"function","modifiers":[],"name":"tokenValuation","nameLocation":"244:14:22","nodeType":"FunctionDefinition","parameters":{"id":5785,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5782,"mutability":"mutable","name":"amount","nameLocation":"267:6:22","nodeType":"VariableDeclaration","scope":5789,"src":"259:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5781,"name":"uint256","nodeType":"ElementaryTypeName","src":"259:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5784,"mutability":"mutable","name":"token","nameLocation":"283:5:22","nodeType":"VariableDeclaration","scope":5789,"src":"275:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5783,"name":"address","nodeType":"ElementaryTypeName","src":"275:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"258:31:22"},"returnParameters":{"id":5788,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5787,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5789,"src":"313:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5786,"name":"uint256","nodeType":"ElementaryTypeName","src":"313:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"312:9:22"},"scope":5800,"src":"235:87:22","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"3b19e84a","id":5794,"implemented":false,"kind":"function","modifiers":[],"name":"getTreasury","nameLocation":"337:11:22","nodeType":"FunctionDefinition","parameters":{"id":5790,"nodeType":"ParameterList","parameters":[],"src":"348:2:22"},"returnParameters":{"id":5793,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5792,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5794,"src":"374:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5791,"name":"address","nodeType":"ElementaryTypeName","src":"374:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"373:9:22"},"scope":5800,"src":"328:55:22","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"012a33aa","id":5799,"implemented":false,"kind":"function","modifiers":[],"name":"getUnitPrice","nameLocation":"398:12:22","nodeType":"FunctionDefinition","parameters":{"id":5795,"nodeType":"ParameterList","parameters":[],"src":"410:2:22"},"returnParameters":{"id":5798,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5797,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5799,"src":"436:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5796,"name":"uint256","nodeType":"ElementaryTypeName","src":"436:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"435:9:22"},"scope":5800,"src":"389:56:22","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":5801,"src":"67:381:22","usedErrors":[],"usedEvents":[]}],"src":"40:410:22"},"id":22}},"contracts":{"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"OwnableUpgradeable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.","errors":{"InvalidInitialization()":[{"details":"The contract is already initialized."}],"NotInitializing()":[{"details":"The contract is not initializing."}],"OwnableInvalidOwner(address)":[{"details":"The owner is not a valid owner account. (eg. `address(0)`)"}],"OwnableUnauthorizedAccount(address)":[{"details":"The caller account is not authorized to perform an operation."}]},"events":{"Initialized(uint64)":{"details":"Triggered when the contract has been initialized or reinitialized."}},"kind":"dev","methods":{"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":\"OwnableUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":80000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {ContextUpgradeable} from \\\"../utils/ContextUpgradeable.sol\\\";\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\\n    /// @custom:storage-location erc7201:openzeppelin.storage.Ownable\\n    struct OwnableStorage {\\n        address _owner;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.Ownable\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant OwnableStorageLocation = 0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300;\\n\\n    function _getOwnableStorage() private pure returns (OwnableStorage storage $) {\\n        assembly {\\n            $.slot := OwnableStorageLocation\\n        }\\n    }\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    function __Ownable_init(address initialOwner) internal onlyInitializing {\\n        __Ownable_init_unchained(initialOwner);\\n    }\\n\\n    function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        OwnableStorage storage $ = _getOwnableStorage();\\n        return $._owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        OwnableStorage storage $ = _getOwnableStorage();\\n        address oldOwner = $._owner;\\n        $._owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Storage of the initializable contract.\\n     *\\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\\n     * when using with upgradeable contracts.\\n     *\\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\\n     */\\n    struct InitializableStorage {\\n        /**\\n         * @dev Indicates that the contract has been initialized.\\n         */\\n        uint64 _initialized;\\n        /**\\n         * @dev Indicates that the contract is in the process of being initialized.\\n         */\\n        bool _initializing;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.Initializable\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\\n\\n    /**\\n     * @dev The contract is already initialized.\\n     */\\n    error InvalidInitialization();\\n\\n    /**\\n     * @dev The contract is not initializing.\\n     */\\n    error NotInitializing();\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint64 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\\n     * production.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        // Cache values to avoid duplicated sloads\\n        bool isTopLevelCall = !$._initializing;\\n        uint64 initialized = $._initialized;\\n\\n        // Allowed calls:\\n        // - initialSetup: the contract is not in the initializing state and no previous version was\\n        //                 initialized\\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\\n        //                 current contract is just being deployed\\n        bool initialSetup = initialized == 0 && isTopLevelCall;\\n        bool construction = initialized == 1 && address(this).code.length == 0;\\n\\n        if (!initialSetup && !construction) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = 1;\\n        if (isTopLevelCall) {\\n            $._initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            $._initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint64 version) {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing || $._initialized >= version) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = version;\\n        $._initializing = true;\\n        _;\\n        $._initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        _checkInitializing();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\\n     */\\n    function _checkInitializing() internal view virtual {\\n        if (!_isInitializing()) {\\n            revert NotInitializing();\\n        }\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing) {\\n            revert InvalidInitialization();\\n        }\\n        if ($._initialized != type(uint64).max) {\\n            $._initialized = type(uint64).max;\\n            emit Initialized(type(uint64).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint64) {\\n        return _getInitializableStorage()._initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _getInitializableStorage()._initializing;\\n    }\\n\\n    /**\\n     * @dev Returns a pointer to the storage namespace.\\n     */\\n    // solhint-disable-next-line var-name-mixedcase\\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\\n        assembly {\\n            $.slot := INITIALIZABLE_STORAGE\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"Initializable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"}],"devdoc":{"custom:oz-upgrades-unsafe-allow":"constructor constructor() {     _disableInitializers(); } ``` ====","details":"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```","errors":{"InvalidInitialization()":[{"details":"The contract is already initialized."}],"NotInitializing()":[{"details":"The contract is not initializing."}]},"events":{"Initialized(uint64)":{"details":"Triggered when the contract has been initialized or reinitialized."}},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":80000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Storage of the initializable contract.\\n     *\\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\\n     * when using with upgradeable contracts.\\n     *\\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\\n     */\\n    struct InitializableStorage {\\n        /**\\n         * @dev Indicates that the contract has been initialized.\\n         */\\n        uint64 _initialized;\\n        /**\\n         * @dev Indicates that the contract is in the process of being initialized.\\n         */\\n        bool _initializing;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.Initializable\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\\n\\n    /**\\n     * @dev The contract is already initialized.\\n     */\\n    error InvalidInitialization();\\n\\n    /**\\n     * @dev The contract is not initializing.\\n     */\\n    error NotInitializing();\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint64 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\\n     * production.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        // Cache values to avoid duplicated sloads\\n        bool isTopLevelCall = !$._initializing;\\n        uint64 initialized = $._initialized;\\n\\n        // Allowed calls:\\n        // - initialSetup: the contract is not in the initializing state and no previous version was\\n        //                 initialized\\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\\n        //                 current contract is just being deployed\\n        bool initialSetup = initialized == 0 && isTopLevelCall;\\n        bool construction = initialized == 1 && address(this).code.length == 0;\\n\\n        if (!initialSetup && !construction) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = 1;\\n        if (isTopLevelCall) {\\n            $._initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            $._initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint64 version) {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing || $._initialized >= version) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = version;\\n        $._initializing = true;\\n        _;\\n        $._initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        _checkInitializing();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\\n     */\\n    function _checkInitializing() internal view virtual {\\n        if (!_isInitializing()) {\\n            revert NotInitializing();\\n        }\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing) {\\n            revert InvalidInitialization();\\n        }\\n        if ($._initialized != type(uint64).max) {\\n            $._initialized = type(uint64).max;\\n            emit Initialized(type(uint64).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint64) {\\n        return _getInitializableStorage()._initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _getInitializableStorage()._initializing;\\n    }\\n\\n    /**\\n     * @dev Returns a pointer to the storage namespace.\\n     */\\n    // solhint-disable-next-line var-name-mixedcase\\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\\n        assembly {\\n            $.slot := INITIALIZABLE_STORAGE\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol":{"UUPSUpgradeable":{"abi":[{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"},{"inputs":[{"internalType":"address","name":"implementation","type":"address"}],"name":"ERC1967InvalidImplementation","type":"error"},{"inputs":[],"name":"ERC1967NonPayable","type":"error"},{"inputs":[],"name":"FailedInnerCall","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"inputs":[],"name":"UUPSUnauthorizedCallContext","type":"error"},{"inputs":[{"internalType":"bytes32","name":"slot","type":"bytes32"}],"name":"UUPSUnsupportedProxiableUUID","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"inputs":[],"name":"UPGRADE_INTERFACE_VERSION","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"upgradeToAndCall","outputs":[],"stateMutability":"payable","type":"function"}],"devdoc":{"details":"An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.","errors":{"AddressEmptyCode(address)":[{"details":"There's no code at `target` (it is not a contract)."}],"ERC1967InvalidImplementation(address)":[{"details":"The `implementation` of the proxy is invalid."}],"ERC1967NonPayable()":[{"details":"An upgrade function sees `msg.value > 0` that may be lost."}],"FailedInnerCall()":[{"details":"A call to an address target failed. The target may have reverted."}],"InvalidInitialization()":[{"details":"The contract is already initialized."}],"NotInitializing()":[{"details":"The contract is not initializing."}],"UUPSUnauthorizedCallContext()":[{"details":"The call is from an unauthorized context."}],"UUPSUnsupportedProxiableUUID(bytes32)":[{"details":"The storage `slot` is unsupported as a UUID."}]},"events":{"Initialized(uint64)":{"details":"Triggered when the contract has been initialized or reinitialized."},"Upgraded(address)":{"details":"Emitted when the implementation is upgraded."}},"kind":"dev","methods":{"proxiableUUID()":{"details":"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."},"upgradeToAndCall(address,bytes)":{"custom:oz-upgrades-unsafe-allow-reachable":"delegatecall","details":"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."}},"stateVariables":{"UPGRADE_INTERFACE_VERSION":{"details":"The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)` and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called, while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string. If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must be the empty byte string if no function should be called, making it impossible to invoke the `receive` function during an upgrade."},"__self":{"custom:oz-upgrades-unsafe-allow":"state-variable-immutable"}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"UPGRADE_INTERFACE_VERSION()":"ad3cb1cc","proxiableUUID()":"52d1902d","upgradeToAndCall(address,bytes)":"4f1ef286"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"stateVariables\":{\"UPGRADE_INTERFACE_VERSION\":{\"details\":\"The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)` and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called, while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string. If the getter returns `\\\"5.0.0\\\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must be the empty byte string if no function should be called, making it impossible to invoke the `receive` function during an upgrade.\"},\"__self\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":\"UUPSUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":80000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Storage of the initializable contract.\\n     *\\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\\n     * when using with upgradeable contracts.\\n     *\\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\\n     */\\n    struct InitializableStorage {\\n        /**\\n         * @dev Indicates that the contract has been initialized.\\n         */\\n        uint64 _initialized;\\n        /**\\n         * @dev Indicates that the contract is in the process of being initialized.\\n         */\\n        bool _initializing;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.Initializable\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\\n\\n    /**\\n     * @dev The contract is already initialized.\\n     */\\n    error InvalidInitialization();\\n\\n    /**\\n     * @dev The contract is not initializing.\\n     */\\n    error NotInitializing();\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint64 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\\n     * production.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        // Cache values to avoid duplicated sloads\\n        bool isTopLevelCall = !$._initializing;\\n        uint64 initialized = $._initialized;\\n\\n        // Allowed calls:\\n        // - initialSetup: the contract is not in the initializing state and no previous version was\\n        //                 initialized\\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\\n        //                 current contract is just being deployed\\n        bool initialSetup = initialized == 0 && isTopLevelCall;\\n        bool construction = initialized == 1 && address(this).code.length == 0;\\n\\n        if (!initialSetup && !construction) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = 1;\\n        if (isTopLevelCall) {\\n            $._initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            $._initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint64 version) {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing || $._initialized >= version) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = version;\\n        $._initializing = true;\\n        _;\\n        $._initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        _checkInitializing();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\\n     */\\n    function _checkInitializing() internal view virtual {\\n        if (!_isInitializing()) {\\n            revert NotInitializing();\\n        }\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing) {\\n            revert InvalidInitialization();\\n        }\\n        if ($._initialized != type(uint64).max) {\\n            $._initialized = type(uint64).max;\\n            emit Initialized(type(uint64).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint64) {\\n        return _getInitializableStorage()._initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _getInitializableStorage()._initializing;\\n    }\\n\\n    /**\\n     * @dev Returns a pointer to the storage namespace.\\n     */\\n    // solhint-disable-next-line var-name-mixedcase\\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\\n        assembly {\\n            $.slot := INITIALIZABLE_STORAGE\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/UUPSUpgradeable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC1822Proxiable} from \\\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\\\";\\nimport {ERC1967Utils} from \\\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\\\";\\nimport {Initializable} from \\\"./Initializable.sol\\\";\\n\\n/**\\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\\n *\\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\\n * `UUPSUpgradeable` with a custom implementation of upgrades.\\n *\\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\\n */\\nabstract contract UUPSUpgradeable is Initializable, IERC1822Proxiable {\\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable\\n    address private immutable __self = address(this);\\n\\n    /**\\n     * @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\\n     * and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\\n     * while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\\n     * If the getter returns `\\\"5.0.0\\\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\\n     * be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\\n     * during an upgrade.\\n     */\\n    string public constant UPGRADE_INTERFACE_VERSION = \\\"5.0.0\\\";\\n\\n    /**\\n     * @dev The call is from an unauthorized context.\\n     */\\n    error UUPSUnauthorizedCallContext();\\n\\n    /**\\n     * @dev The storage `slot` is unsupported as a UUID.\\n     */\\n    error UUPSUnsupportedProxiableUUID(bytes32 slot);\\n\\n    /**\\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\\n     * a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\\n     * function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\\n     * fail.\\n     */\\n    modifier onlyProxy() {\\n        _checkProxy();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\\n     * callable on the implementing contract but not through proxies.\\n     */\\n    modifier notDelegated() {\\n        _checkNotDelegated();\\n        _;\\n    }\\n\\n    function __UUPSUpgradeable_init() internal onlyInitializing {\\n    }\\n\\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\\n    }\\n    /**\\n     * @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\\n     */\\n    function proxiableUUID() external view virtual notDelegated returns (bytes32) {\\n        return ERC1967Utils.IMPLEMENTATION_SLOT;\\n    }\\n\\n    /**\\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\\n     * encoded in `data`.\\n     *\\n     * Calls {_authorizeUpgrade}.\\n     *\\n     * Emits an {Upgraded} event.\\n     *\\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\\n     */\\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {\\n        _authorizeUpgrade(newImplementation);\\n        _upgradeToAndCallUUPS(newImplementation, data);\\n    }\\n\\n    /**\\n     * @dev Reverts if the execution is not performed via delegatecall or the execution\\n     * context is not of a proxy with an ERC1967-compliant implementation pointing to self.\\n     * See {_onlyProxy}.\\n     */\\n    function _checkProxy() internal view virtual {\\n        if (\\n            address(this) == __self || // Must be called through delegatecall\\n            ERC1967Utils.getImplementation() != __self // Must be called through an active proxy\\n        ) {\\n            revert UUPSUnauthorizedCallContext();\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts if the execution is performed via delegatecall.\\n     * See {notDelegated}.\\n     */\\n    function _checkNotDelegated() internal view virtual {\\n        if (address(this) != __self) {\\n            // Must not be called through delegatecall\\n            revert UUPSUnauthorizedCallContext();\\n        }\\n    }\\n\\n    /**\\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\\n     * {upgradeToAndCall}.\\n     *\\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\\n     *\\n     * ```solidity\\n     * function _authorizeUpgrade(address) internal onlyOwner {}\\n     * ```\\n     */\\n    function _authorizeUpgrade(address newImplementation) internal virtual;\\n\\n    /**\\n     * @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\\n     *\\n     * As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\\n     * is expected to be the implementation slot in ERC1967.\\n     *\\n     * Emits an {IERC1967-Upgraded} event.\\n     */\\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {\\n        try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\\n            if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {\\n                revert UUPSUnsupportedProxiableUUID(slot);\\n            }\\n            ERC1967Utils.upgradeToAndCall(newImplementation, data);\\n        } catch {\\n            // The implementation is not UUPS\\n            revert ERC1967Utils.ERC1967InvalidImplementation(newImplementation);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x3f13b947637c4969c0644cab4ef399cdc4b67f101463b8775c5a43b118558e53\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC1822.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\\n * proxy whose upgrades are fully controlled by the current implementation.\\n */\\ninterface IERC1822Proxiable {\\n    /**\\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\\n     * address.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy.\\n     */\\n    function proxiableUUID() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/ERC1967/ERC1967Utils.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IBeacon} from \\\"../beacon/IBeacon.sol\\\";\\nimport {Address} from \\\"../../utils/Address.sol\\\";\\nimport {StorageSlot} from \\\"../../utils/StorageSlot.sol\\\";\\n\\n/**\\n * @dev This abstract contract provides getters and event emitting update functions for\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\\n */\\nlibrary ERC1967Utils {\\n    // We re-declare ERC-1967 events here because they can't be used directly from IERC1967.\\n    // This will be fixed in Solidity 0.8.21. At that point we should remove these events.\\n    /**\\n     * @dev Emitted when the implementation is upgraded.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Emitted when the admin account has changed.\\n     */\\n    event AdminChanged(address previousAdmin, address newAdmin);\\n\\n    /**\\n     * @dev Emitted when the beacon is changed.\\n     */\\n    event BeaconUpgraded(address indexed beacon);\\n\\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /**\\n     * @dev The `implementation` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidImplementation(address implementation);\\n\\n    /**\\n     * @dev The `admin` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidAdmin(address admin);\\n\\n    /**\\n     * @dev The `beacon` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidBeacon(address beacon);\\n\\n    /**\\n     * @dev An upgrade function sees `msg.value > 0` that may be lost.\\n     */\\n    error ERC1967NonPayable();\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function getImplementation() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 implementation slot.\\n     */\\n    function _setImplementation(address newImplementation) private {\\n        if (newImplementation.code.length == 0) {\\n            revert ERC1967InvalidImplementation(newImplementation);\\n        }\\n        StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation;\\n    }\\n\\n    /**\\n     * @dev Performs implementation upgrade with additional setup call if data is nonempty.\\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\\n     * to avoid stuck value in the contract.\\n     *\\n     * Emits an {IERC1967-Upgraded} event.\\n     */\\n    function upgradeToAndCall(address newImplementation, bytes memory data) internal {\\n        _setImplementation(newImplementation);\\n        emit Upgraded(newImplementation);\\n\\n        if (data.length > 0) {\\n            Address.functionDelegateCall(newImplementation, data);\\n        } else {\\n            _checkNonPayable();\\n        }\\n    }\\n\\n    /**\\n     * @dev Storage slot with the admin of the contract.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n\\n    /**\\n     * @dev Returns the current admin.\\n     *\\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using\\n     * the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\\n     */\\n    function getAdmin() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(ADMIN_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 admin slot.\\n     */\\n    function _setAdmin(address newAdmin) private {\\n        if (newAdmin == address(0)) {\\n            revert ERC1967InvalidAdmin(address(0));\\n        }\\n        StorageSlot.getAddressSlot(ADMIN_SLOT).value = newAdmin;\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {IERC1967-AdminChanged} event.\\n     */\\n    function changeAdmin(address newAdmin) internal {\\n        emit AdminChanged(getAdmin(), newAdmin);\\n        _setAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.beacon\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\\n\\n    /**\\n     * @dev Returns the current beacon.\\n     */\\n    function getBeacon() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(BEACON_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\\n     */\\n    function _setBeacon(address newBeacon) private {\\n        if (newBeacon.code.length == 0) {\\n            revert ERC1967InvalidBeacon(newBeacon);\\n        }\\n\\n        StorageSlot.getAddressSlot(BEACON_SLOT).value = newBeacon;\\n\\n        address beaconImplementation = IBeacon(newBeacon).implementation();\\n        if (beaconImplementation.code.length == 0) {\\n            revert ERC1967InvalidImplementation(beaconImplementation);\\n        }\\n    }\\n\\n    /**\\n     * @dev Change the beacon and trigger a setup call if data is nonempty.\\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\\n     * to avoid stuck value in the contract.\\n     *\\n     * Emits an {IERC1967-BeaconUpgraded} event.\\n     *\\n     * CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\\n     * it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\\n     * efficiency.\\n     */\\n    function upgradeBeaconToAndCall(address newBeacon, bytes memory data) internal {\\n        _setBeacon(newBeacon);\\n        emit BeaconUpgraded(newBeacon);\\n\\n        if (data.length > 0) {\\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\\n        } else {\\n            _checkNonPayable();\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\\n     * if an upgrade doesn't perform an initialization call.\\n     */\\n    function _checkNonPayable() private {\\n        if (msg.value > 0) {\\n            revert ERC1967NonPayable();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeacon {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {UpgradeableBeacon} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev The ETH balance of the account is not enough to perform the operation.\\n     */\\n    error AddressInsufficientBalance(address account);\\n\\n    /**\\n     * @dev There's no code at `target` (it is not a contract).\\n     */\\n    error AddressEmptyCode(address target);\\n\\n    /**\\n     * @dev A call to an address target failed. The target may have reverted.\\n     */\\n    error FailedInnerCall();\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        if (address(this).balance < amount) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        if (!success) {\\n            revert FailedInnerCall();\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason or custom error, it is bubbled\\n     * up by this function (like regular Solidity function calls). However, if\\n     * the call reverted with no returned reason, this function reverts with a\\n     * {FailedInnerCall} error.\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        if (address(this).balance < value) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\\n     * unsuccessful call.\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata\\n    ) internal view returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            // only check if target is a contract if the call was successful and the return data is empty\\n            // otherwise we already know that it was a contract\\n            if (returndata.length == 0 && target.code.length == 0) {\\n                revert AddressEmptyCode(target);\\n            }\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\\n     * revert reason or with a default {FailedInnerCall} error.\\n     */\\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\\n     */\\n    function _revert(bytes memory returndata) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert FailedInnerCall();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```solidity\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(newImplementation.code.length > 0);\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    struct StringSlot {\\n        string value;\\n    }\\n\\n    struct BytesSlot {\\n        bytes value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\\n     */\\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\\n     */\\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\\n     */\\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\\n     */\\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ContextUpgradeable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"}],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","errors":{"InvalidInitialization()":[{"details":"The contract is already initialized."}],"NotInitializing()":[{"details":"The contract is not initializing."}]},"events":{"Initialized(uint64)":{"details":"Triggered when the contract has been initialized or reinitialized."}},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":80000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Storage of the initializable contract.\\n     *\\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\\n     * when using with upgradeable contracts.\\n     *\\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\\n     */\\n    struct InitializableStorage {\\n        /**\\n         * @dev Indicates that the contract has been initialized.\\n         */\\n        uint64 _initialized;\\n        /**\\n         * @dev Indicates that the contract is in the process of being initialized.\\n         */\\n        bool _initializing;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.Initializable\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\\n\\n    /**\\n     * @dev The contract is already initialized.\\n     */\\n    error InvalidInitialization();\\n\\n    /**\\n     * @dev The contract is not initializing.\\n     */\\n    error NotInitializing();\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint64 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\\n     * production.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        // Cache values to avoid duplicated sloads\\n        bool isTopLevelCall = !$._initializing;\\n        uint64 initialized = $._initialized;\\n\\n        // Allowed calls:\\n        // - initialSetup: the contract is not in the initializing state and no previous version was\\n        //                 initialized\\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\\n        //                 current contract is just being deployed\\n        bool initialSetup = initialized == 0 && isTopLevelCall;\\n        bool construction = initialized == 1 && address(this).code.length == 0;\\n\\n        if (!initialSetup && !construction) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = 1;\\n        if (isTopLevelCall) {\\n            $._initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            $._initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint64 version) {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing || $._initialized >= version) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = version;\\n        $._initializing = true;\\n        _;\\n        $._initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        _checkInitializing();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\\n     */\\n    function _checkInitializing() internal view virtual {\\n        if (!_isInitializing()) {\\n            revert NotInitializing();\\n        }\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing) {\\n            revert InvalidInitialization();\\n        }\\n        if ($._initialized != type(uint64).max) {\\n            $._initialized = type(uint64).max;\\n            emit Initialized(type(uint64).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint64) {\\n        return _getInitializableStorage()._initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _getInitializableStorage()._initializing;\\n    }\\n\\n    /**\\n     * @dev Returns a pointer to the storage namespace.\\n     */\\n    // solhint-disable-next-line var-name-mixedcase\\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\\n        assembly {\\n            $.slot := INITIALIZABLE_STORAGE\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/interfaces/draft-IERC1822.sol":{"IERC1822Proxiable":{"abi":[{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.","kind":"dev","methods":{"proxiableUUID()":{"details":"Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"proxiableUUID()":"52d1902d"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.\",\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":\"IERC1822Proxiable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":80000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC1822.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\\n * proxy whose upgrades are fully controlled by the current implementation.\\n */\\ninterface IERC1822Proxiable {\\n    /**\\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\\n     * address.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy.\\n     */\\n    function proxiableUUID() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"IERC1155Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"}],"devdoc":{"details":"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.","errors":{"ERC1155InsufficientBalance(address,uint256,uint256,uint256)":[{"details":"Indicates an error related to the current `balance` of a `sender`. Used in transfers.","params":{"balance":"Current balance for the interacting account.","needed":"Minimum amount required to perform a transfer.","sender":"Address whose tokens are being transferred.","tokenId":"Identifier number of a token."}}],"ERC1155InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC1155InvalidArrayLength(uint256,uint256)":[{"details":"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.","params":{"idsLength":"Length of the array of token identifiers","valuesLength":"Length of the array of token amounts"}}],"ERC1155InvalidOperator(address)":[{"details":"Indicates a failure with the `operator` to be approved. Used in approvals.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC1155InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC1155InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC1155MissingApprovalForAll(address,address)":[{"details":"Indicates a failure with the `operator`’s approval. Used in transfers.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner.","owner":"Address of the current owner of a token."}}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":80000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}},"IERC20Errors":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"}],"devdoc":{"details":"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.","errors":{"ERC20InsufficientAllowance(address,uint256,uint256)":[{"details":"Indicates a failure with the `spender`’s `allowance`. Used in transfers.","params":{"allowance":"Amount of tokens a `spender` is allowed to operate with.","needed":"Minimum amount required to perform a transfer.","spender":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC20InsufficientBalance(address,uint256,uint256)":[{"details":"Indicates an error related to the current `balance` of a `sender`. Used in transfers.","params":{"balance":"Current balance for the interacting account.","needed":"Minimum amount required to perform a transfer.","sender":"Address whose tokens are being transferred."}}],"ERC20InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC20InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC20InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC20InvalidSpender(address)":[{"details":"Indicates a failure with the `spender` to be approved. Used in approvals.","params":{"spender":"Address that may be allowed to operate on tokens without being their owner."}}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":80000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}},"IERC721Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"}],"devdoc":{"details":"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.","errors":{"ERC721IncorrectOwner(address,uint256,address)":[{"details":"Indicates an error related to the ownership over a particular token. Used in transfers.","params":{"owner":"Address of the current owner of a token.","sender":"Address whose tokens are being transferred.","tokenId":"Identifier number of a token."}}],"ERC721InsufficientApproval(address,uint256)":[{"details":"Indicates a failure with the `operator`’s approval. Used in transfers.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner.","tokenId":"Identifier number of a token."}}],"ERC721InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC721InvalidOperator(address)":[{"details":"Indicates a failure with the `operator` to be approved. Used in approvals.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC721InvalidOwner(address)":[{"details":"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.","params":{"owner":"Address of the current owner of a token."}}],"ERC721InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC721InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC721NonexistentToken(uint256)":[{"details":"Indicates a `tokenId` whose `owner` is the zero address.","params":{"tokenId":"Identifier number of a token."}}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":80000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol":{"ERC1967Utils":{"abi":[{"inputs":[{"internalType":"address","name":"admin","type":"address"}],"name":"ERC1967InvalidAdmin","type":"error"},{"inputs":[{"internalType":"address","name":"beacon","type":"address"}],"name":"ERC1967InvalidBeacon","type":"error"},{"inputs":[{"internalType":"address","name":"implementation","type":"address"}],"name":"ERC1967InvalidImplementation","type":"error"},{"inputs":[],"name":"ERC1967NonPayable","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousAdmin","type":"address"},{"indexed":false,"internalType":"address","name":"newAdmin","type":"address"}],"name":"AdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"beacon","type":"address"}],"name":"BeaconUpgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"}],"devdoc":{"details":"This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.","errors":{"ERC1967InvalidAdmin(address)":[{"details":"The `admin` of the proxy is invalid."}],"ERC1967InvalidBeacon(address)":[{"details":"The `beacon` of the proxy is invalid."}],"ERC1967InvalidImplementation(address)":[{"details":"The `implementation` of the proxy is invalid."}],"ERC1967NonPayable()":[{"details":"An upgrade function sees `msg.value > 0` that may be lost."}]},"events":{"AdminChanged(address,address)":{"details":"Emitted when the admin account has changed."},"BeaconUpgraded(address)":{"details":"Emitted when the beacon is changed."},"Upgraded(address)":{"details":"Emitted when the implementation is upgraded."}},"kind":"dev","methods":{},"stateVariables":{"ADMIN_SLOT":{"details":"Storage slot with the admin of the contract. This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1."},"BEACON_SLOT":{"details":"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1."},"IMPLEMENTATION_SLOT":{"details":"Storage slot with the address of the current implementation. This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080806040523460175760399081601c823930815050f35b5f80fdfe5f80fdfea26469706673582212207005de0af9bdcd07bc27af235059474504c969d7d1eb45de76c62af2a7a1badc64736f6c63430008190033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x39 SWAP1 DUP2 PUSH1 0x1C DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH0 DUP1 REVERT INVALID PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH17 0x5DE0AF9BDCD07BC27AF235059474504C9 PUSH10 0xD7D1EB45DE76C62AF2A7 LOG1 0xBA 0xDC PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ","sourceMap":"449:6273:6:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"5f80fdfea26469706673582212207005de0af9bdcd07bc27af235059474504c969d7d1eb45de76c62af2a7a1badc64736f6c63430008190033","opcodes":"PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH17 0x5DE0AF9BDCD07BC27AF235059474504C9 PUSH10 0xD7D1EB45DE76C62AF2A7 LOG1 0xBA 0xDC PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ","sourceMap":"449:6273:6:-:0;;"},"gasEstimates":{"creation":{"codeDepositCost":"11400","executionCost":"infinite","totalCost":"infinite"},"internal":{"_checkNonPayable()":"infinite","_setAdmin(address)":"infinite","_setBeacon(address)":"infinite","_setImplementation(address)":"infinite","changeAdmin(address)":"infinite","getAdmin()":"infinite","getBeacon()":"infinite","getImplementation()":"infinite","upgradeBeaconToAndCall(address,bytes memory)":"infinite","upgradeToAndCall(address,bytes memory)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidAdmin\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidBeacon\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\",\"errors\":{\"ERC1967InvalidAdmin(address)\":[{\"details\":\"The `admin` of the proxy is invalid.\"}],\"ERC1967InvalidBeacon(address)\":[{\"details\":\"The `beacon` of the proxy is invalid.\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}]},\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ADMIN_SLOT\":{\"details\":\"Storage slot with the admin of the contract. This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1.\"},\"BEACON_SLOT\":{\"details\":\"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is the keccak-256 hash of \\\"eip1967.proxy.beacon\\\" subtracted by 1.\"},\"IMPLEMENTATION_SLOT\":{\"details\":\"Storage slot with the address of the current implementation. This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":\"ERC1967Utils\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":80000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/ERC1967/ERC1967Utils.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IBeacon} from \\\"../beacon/IBeacon.sol\\\";\\nimport {Address} from \\\"../../utils/Address.sol\\\";\\nimport {StorageSlot} from \\\"../../utils/StorageSlot.sol\\\";\\n\\n/**\\n * @dev This abstract contract provides getters and event emitting update functions for\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\\n */\\nlibrary ERC1967Utils {\\n    // We re-declare ERC-1967 events here because they can't be used directly from IERC1967.\\n    // This will be fixed in Solidity 0.8.21. At that point we should remove these events.\\n    /**\\n     * @dev Emitted when the implementation is upgraded.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Emitted when the admin account has changed.\\n     */\\n    event AdminChanged(address previousAdmin, address newAdmin);\\n\\n    /**\\n     * @dev Emitted when the beacon is changed.\\n     */\\n    event BeaconUpgraded(address indexed beacon);\\n\\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /**\\n     * @dev The `implementation` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidImplementation(address implementation);\\n\\n    /**\\n     * @dev The `admin` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidAdmin(address admin);\\n\\n    /**\\n     * @dev The `beacon` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidBeacon(address beacon);\\n\\n    /**\\n     * @dev An upgrade function sees `msg.value > 0` that may be lost.\\n     */\\n    error ERC1967NonPayable();\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function getImplementation() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 implementation slot.\\n     */\\n    function _setImplementation(address newImplementation) private {\\n        if (newImplementation.code.length == 0) {\\n            revert ERC1967InvalidImplementation(newImplementation);\\n        }\\n        StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation;\\n    }\\n\\n    /**\\n     * @dev Performs implementation upgrade with additional setup call if data is nonempty.\\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\\n     * to avoid stuck value in the contract.\\n     *\\n     * Emits an {IERC1967-Upgraded} event.\\n     */\\n    function upgradeToAndCall(address newImplementation, bytes memory data) internal {\\n        _setImplementation(newImplementation);\\n        emit Upgraded(newImplementation);\\n\\n        if (data.length > 0) {\\n            Address.functionDelegateCall(newImplementation, data);\\n        } else {\\n            _checkNonPayable();\\n        }\\n    }\\n\\n    /**\\n     * @dev Storage slot with the admin of the contract.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n\\n    /**\\n     * @dev Returns the current admin.\\n     *\\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using\\n     * the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\\n     */\\n    function getAdmin() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(ADMIN_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 admin slot.\\n     */\\n    function _setAdmin(address newAdmin) private {\\n        if (newAdmin == address(0)) {\\n            revert ERC1967InvalidAdmin(address(0));\\n        }\\n        StorageSlot.getAddressSlot(ADMIN_SLOT).value = newAdmin;\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {IERC1967-AdminChanged} event.\\n     */\\n    function changeAdmin(address newAdmin) internal {\\n        emit AdminChanged(getAdmin(), newAdmin);\\n        _setAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.beacon\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\\n\\n    /**\\n     * @dev Returns the current beacon.\\n     */\\n    function getBeacon() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(BEACON_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\\n     */\\n    function _setBeacon(address newBeacon) private {\\n        if (newBeacon.code.length == 0) {\\n            revert ERC1967InvalidBeacon(newBeacon);\\n        }\\n\\n        StorageSlot.getAddressSlot(BEACON_SLOT).value = newBeacon;\\n\\n        address beaconImplementation = IBeacon(newBeacon).implementation();\\n        if (beaconImplementation.code.length == 0) {\\n            revert ERC1967InvalidImplementation(beaconImplementation);\\n        }\\n    }\\n\\n    /**\\n     * @dev Change the beacon and trigger a setup call if data is nonempty.\\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\\n     * to avoid stuck value in the contract.\\n     *\\n     * Emits an {IERC1967-BeaconUpgraded} event.\\n     *\\n     * CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\\n     * it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\\n     * efficiency.\\n     */\\n    function upgradeBeaconToAndCall(address newBeacon, bytes memory data) internal {\\n        _setBeacon(newBeacon);\\n        emit BeaconUpgraded(newBeacon);\\n\\n        if (data.length > 0) {\\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\\n        } else {\\n            _checkNonPayable();\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\\n     * if an upgrade doesn't perform an initialization call.\\n     */\\n    function _checkNonPayable() private {\\n        if (msg.value > 0) {\\n            revert ERC1967NonPayable();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeacon {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {UpgradeableBeacon} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev The ETH balance of the account is not enough to perform the operation.\\n     */\\n    error AddressInsufficientBalance(address account);\\n\\n    /**\\n     * @dev There's no code at `target` (it is not a contract).\\n     */\\n    error AddressEmptyCode(address target);\\n\\n    /**\\n     * @dev A call to an address target failed. The target may have reverted.\\n     */\\n    error FailedInnerCall();\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        if (address(this).balance < amount) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        if (!success) {\\n            revert FailedInnerCall();\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason or custom error, it is bubbled\\n     * up by this function (like regular Solidity function calls). However, if\\n     * the call reverted with no returned reason, this function reverts with a\\n     * {FailedInnerCall} error.\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        if (address(this).balance < value) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\\n     * unsuccessful call.\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata\\n    ) internal view returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            // only check if target is a contract if the call was successful and the return data is empty\\n            // otherwise we already know that it was a contract\\n            if (returndata.length == 0 && target.code.length == 0) {\\n                revert AddressEmptyCode(target);\\n            }\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\\n     * revert reason or with a default {FailedInnerCall} error.\\n     */\\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\\n     */\\n    function _revert(bytes memory returndata) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert FailedInnerCall();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```solidity\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(newImplementation.code.length > 0);\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    struct StringSlot {\\n        string value;\\n    }\\n\\n    struct BytesSlot {\\n        bytes value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\\n     */\\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\\n     */\\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\\n     */\\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\\n     */\\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/proxy/beacon/IBeacon.sol":{"IBeacon":{"abi":[{"inputs":[],"name":"implementation","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"This is the interface that {BeaconProxy} expects of its beacon.","kind":"dev","methods":{"implementation()":{"details":"Must return an address that can be used as a delegate call target. {UpgradeableBeacon} will check that this address is a contract."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"implementation()":"5c60da1b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is the interface that {BeaconProxy} expects of its beacon.\",\"kind\":\"dev\",\"methods\":{\"implementation()\":{\"details\":\"Must return an address that can be used as a delegate call target. {UpgradeableBeacon} will check that this address is a contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":\"IBeacon\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":80000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeacon {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {UpgradeableBeacon} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ERC20":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.","errors":{"ERC20InsufficientAllowance(address,uint256,uint256)":[{"details":"Indicates a failure with the `spender`’s `allowance`. Used in transfers.","params":{"allowance":"Amount of tokens a `spender` is allowed to operate with.","needed":"Minimum amount required to perform a transfer.","spender":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC20InsufficientBalance(address,uint256,uint256)":[{"details":"Indicates an error related to the current `balance` of a `sender`. Used in transfers.","params":{"balance":"Current balance for the interacting account.","needed":"Minimum amount required to perform a transfer.","sender":"Address whose tokens are being transferred."}}],"ERC20InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC20InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC20InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC20InvalidSpender(address)":[{"details":"Indicates a failure with the `spender` to be approved. Used in approvals.","params":{"spender":"Address that may be allowed to operate on tokens without being their owner."}}]},"events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"See {IERC20-allowance}."},"approve(address,uint256)":{"details":"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{"details":"See {IERC20-balanceOf}."},"constructor":{"details":"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."},"decimals()":{"details":"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{"details":"See {IERC20-totalSupply}."},"transfer(address,uint256)":{"details":"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."},"transferFrom(address,address,uint256)":{"details":"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":80000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"./IERC20.sol\\\";\\nimport {IERC20Metadata} from \\\"./extensions/IERC20Metadata.sol\\\";\\nimport {Context} from \\\"../../utils/Context.sol\\\";\\nimport {IERC20Errors} from \\\"../../interfaces/draft-IERC6093.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n */\\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\\n    mapping(address account => uint256) private _balances;\\n\\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `value`.\\n     */\\n    function transfer(address to, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `value`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `value`.\\n     */\\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, value);\\n        _transfer(from, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _transfer(address from, address to, uint256 value) internal {\\n        if (from == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        if (to == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\\n     * this function.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _update(address from, address to, uint256 value) internal virtual {\\n        if (from == address(0)) {\\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\\n            _totalSupply += value;\\n        } else {\\n            uint256 fromBalance = _balances[from];\\n            if (fromBalance < value) {\\n                revert ERC20InsufficientBalance(from, fromBalance, value);\\n            }\\n            unchecked {\\n                // Overflow not possible: value <= fromBalance <= totalSupply.\\n                _balances[from] = fromBalance - value;\\n            }\\n        }\\n\\n        if (to == address(0)) {\\n            unchecked {\\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\\n                _totalSupply -= value;\\n            }\\n        } else {\\n            unchecked {\\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\\n                _balances[to] += value;\\n            }\\n        }\\n\\n        emit Transfer(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\\n     * Relies on the `_update` mechanism\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _mint(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(address(0), account, value);\\n    }\\n\\n    /**\\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\\n     * Relies on the `_update` mechanism.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead\\n     */\\n    function _burn(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        _update(account, address(0), value);\\n    }\\n\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     *\\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\\n     */\\n    function _approve(address owner, address spender, uint256 value) internal {\\n        _approve(owner, spender, value, true);\\n    }\\n\\n    /**\\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\\n     *\\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\\n     * `Approval` event during `transferFrom` operations.\\n     *\\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\\n     * true using the following override:\\n     * ```\\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\\n     *     super._approve(owner, spender, value, true);\\n     * }\\n     * ```\\n     *\\n     * Requirements are the same as {_approve}.\\n     */\\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\\n        if (owner == address(0)) {\\n            revert ERC20InvalidApprover(address(0));\\n        }\\n        if (spender == address(0)) {\\n            revert ERC20InvalidSpender(address(0));\\n        }\\n        _allowances[owner][spender] = value;\\n        if (emitEvent) {\\n            emit Approval(owner, spender, value);\\n        }\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\\n     *\\n     * Does not update the allowance value in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Does not emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            if (currentAllowance < value) {\\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\\n            }\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - value, false);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1159,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":1165,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_allowances","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":1167,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":1169,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_name","offset":0,"slot":"3","type":"t_string_storage"},{"astId":1171,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_symbol","offset":0,"slot":"4","type":"t_string_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface of the ERC20 standard as defined in the EIP.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the value of tokens owned by `account`."},"totalSupply()":{"details":"Returns the value of tokens in existence."},"transfer(address,uint256)":{"details":"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":80000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface for the optional metadata functions from the ERC20 standard.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the value of tokens owned by `account`."},"decimals()":{"details":"Returns the decimals places of the token."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token."},"totalSupply()":{"details":"Returns the value of tokens in existence."},"transfer(address,uint256)":{"details":"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":80000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"AddressInsufficientBalance","type":"error"},{"inputs":[],"name":"FailedInnerCall","type":"error"}],"devdoc":{"details":"Collection of functions related to the address type","errors":{"AddressEmptyCode(address)":[{"details":"There's no code at `target` (it is not a contract)."}],"AddressInsufficientBalance(address)":[{"details":"The ETH balance of the account is not enough to perform the operation."}],"FailedInnerCall()":[{"details":"A call to an address target failed. The target may have reverted."}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080806040523460175760399081601c823930815050f35b5f80fdfe5f80fdfea2646970667358221220ae52ad6c51835f362cf568d02ce7cb25ef5a09315361fe4f2673055c4da8e2e964736f6c63430008190033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x39 SWAP1 DUP2 PUSH1 0x1C DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH0 DUP1 REVERT INVALID PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAE MSTORE 0xAD PUSH13 0x51835F362CF568D02CE7CB25EF GAS MULMOD BALANCE MSTORE8 PUSH2 0xFE4F 0x26 PUSH20 0x55C4DA8E2E964736F6C63430008190033000000 ","sourceMap":"195:6066:11:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"5f80fdfea2646970667358221220ae52ad6c51835f362cf568d02ce7cb25ef5a09315361fe4f2673055c4da8e2e964736f6c63430008190033","opcodes":"PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAE MSTORE 0xAD PUSH13 0x51835F362CF568D02CE7CB25EF GAS MULMOD BALANCE MSTORE8 PUSH2 0xFE4F 0x26 PUSH20 0x55C4DA8E2E964736F6C63430008190033000000 ","sourceMap":"195:6066:11:-:0;;"},"gasEstimates":{"creation":{"codeDepositCost":"11400","executionCost":"infinite","totalCost":"infinite"},"internal":{"_revert(bytes memory)":"infinite","functionCall(address,bytes memory)":"infinite","functionCallWithValue(address,bytes memory,uint256)":"infinite","functionDelegateCall(address,bytes memory)":"infinite","functionStaticCall(address,bytes memory)":"infinite","sendValue(address payable,uint256)":"infinite","verifyCallResult(bool,bytes memory)":"infinite","verifyCallResultFromTarget(address,bool,bytes memory)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":80000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev The ETH balance of the account is not enough to perform the operation.\\n     */\\n    error AddressInsufficientBalance(address account);\\n\\n    /**\\n     * @dev There's no code at `target` (it is not a contract).\\n     */\\n    error AddressEmptyCode(address target);\\n\\n    /**\\n     * @dev A call to an address target failed. The target may have reverted.\\n     */\\n    error FailedInnerCall();\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        if (address(this).balance < amount) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        if (!success) {\\n            revert FailedInnerCall();\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason or custom error, it is bubbled\\n     * up by this function (like regular Solidity function calls). However, if\\n     * the call reverted with no returned reason, this function reverts with a\\n     * {FailedInnerCall} error.\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        if (address(this).balance < value) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\\n     * unsuccessful call.\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata\\n    ) internal view returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            // only check if target is a contract if the call was successful and the return data is empty\\n            // otherwise we already know that it was a contract\\n            if (returndata.length == 0 && target.code.length == 0) {\\n                revert AddressEmptyCode(target);\\n            }\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\\n     * revert reason or with a default {FailedInnerCall} error.\\n     */\\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\\n     */\\n    function _revert(bytes memory returndata) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert FailedInnerCall();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":80000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"ReentrancyGuard":{"abi":[{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"}],"devdoc":{"details":"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].","errors":{"ReentrancyGuardReentrantCall()":[{"details":"Unauthorized reentrant call."}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":80000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant NOT_ENTERED = 1;\\n    uint256 private constant ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    /**\\n     * @dev Unauthorized reentrant call.\\n     */\\n    error ReentrancyGuardReentrantCall();\\n\\n    constructor() {\\n        _status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\\n        if (_status == ENTERED) {\\n            revert ReentrancyGuardReentrantCall();\\n        }\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Returns true if the reentrancy guard is currently set to \\\"entered\\\", which indicates there is a\\n     * `nonReentrant` function in the call stack.\\n     */\\n    function _reentrancyGuardEntered() internal view returns (bool) {\\n        return _status == ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":2049,"contract":"@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard","label":"_status","offset":0,"slot":"0","type":"t_uint256"}],"types":{"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/StorageSlot.sol":{"StorageSlot":{"abi":[],"devdoc":{"details":"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080806040523460175760399081601c823930815050f35b5f80fdfe5f80fdfea26469706673582212205eb4622ceec81895e086e8df181e5cb9100afea8d4db8b06145e41cbd8ce34a864736f6c63430008190033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x39 SWAP1 DUP2 PUSH1 0x1C DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH0 DUP1 REVERT INVALID PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MCOPY 0xB4 PUSH3 0x2CEEC8 XOR SWAP6 0xE0 DUP7 0xE8 0xDF XOR 0x1E TLOAD 0xB9 LT EXP INVALID 0xA8 0xD4 0xDB DUP12 MOD EQ MCOPY COINBASE 0xCB 0xD8 0xCE CALLVALUE 0xA8 PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ","sourceMap":"1245:2685:14:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"5f80fdfea26469706673582212205eb4622ceec81895e086e8df181e5cb9100afea8d4db8b06145e41cbd8ce34a864736f6c63430008190033","opcodes":"PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MCOPY 0xB4 PUSH3 0x2CEEC8 XOR SWAP6 0xE0 DUP7 0xE8 0xDF XOR 0x1E TLOAD 0xB9 LT EXP INVALID 0xA8 0xD4 0xDB DUP12 MOD EQ MCOPY COINBASE 0xCB 0xD8 0xCE CALLVALUE 0xA8 PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ","sourceMap":"1245:2685:14:-:0;;"},"gasEstimates":{"creation":{"codeDepositCost":"11400","executionCost":"infinite","totalCost":"infinite"},"internal":{"getAddressSlot(bytes32)":"infinite","getBooleanSlot(bytes32)":"infinite","getBytes32Slot(bytes32)":"infinite","getBytesSlot(bytes storage pointer)":"infinite","getBytesSlot(bytes32)":"infinite","getStringSlot(bytes32)":"infinite","getStringSlot(string storage pointer)":"infinite","getUint256Slot(bytes32)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":80000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```solidity\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(newImplementation.code.length > 0);\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    struct StringSlot {\\n        string value;\\n    }\\n\\n    struct BytesSlot {\\n        bytes value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\\n     */\\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\\n     */\\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\\n     */\\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\\n     */\\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/BaluniV1Pool.sol":{"BaluniV1Pool":{"abi":[{"inputs":[{"internalType":"address","name":"_rebalancer","type":"address"},{"internalType":"address[]","name":"_assets","type":"address[]"},{"internalType":"uint256[]","name":"_weights","type":"uint256[]"},{"internalType":"uint256","name":"_trigger","type":"uint256"},{"internalType":"address","name":"_periphery","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"sharesBurned","type":"uint256"}],"name":"Burn","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"sharesMinted","type":"uint256"}],"name":"Mint","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"by","type":"address"},{"indexed":false,"internalType":"address[]","name":"assets","type":"address[]"}],"name":"RebalancePerformed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"address","name":"fromToken","type":"address"},{"indexed":true,"internalType":"address","name":"toToken","type":"address"},{"indexed":false,"internalType":"uint256","name":"amountIn","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amountOut","type":"uint256"}],"name":"Swap","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"amountsAdded","type":"uint256[]"}],"name":"WeightsRebalanced","type":"event"},{"inputs":[],"name":"ONE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"SWAP_FEE_BPS","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"assetInfos","outputs":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"uint256","name":"weight","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"assetIndex","type":"uint256"}],"name":"assetLiquidity","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"baseAsset","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"computeTotalValuation","outputs":[{"internalType":"uint256","name":"totalVal","type":"uint256"},{"internalType":"uint256[]","name":"valuations","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"name":"decreaseReserves","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"fromToken","type":"address"},{"internalType":"address","name":"toToken","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"getAmountOut","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"}],"name":"getAssetReserve","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getAssets","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getDeviation","outputs":[{"internalType":"bool[]","name":"directions","type":"bool[]"},{"internalType":"uint256[]","name":"deviations","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getReserves","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getWeights","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"isRebalanceNeeded","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"liquidity","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"name":"mint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_sender","type":"address"}],"name":"performRebalanceIfNeeded","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"periphery","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"rebalanceWeights","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"rebalancer","outputs":[{"internalType":"contract IBaluniV1Rebalancer","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"reserves","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"fromToken","type":"address"},{"internalType":"address","name":"toToken","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"receiver","type":"address"}],"name":"swap","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"trigger","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"unitPrice","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"bool","name":"increase","type":"bool"}],"name":"updateReserves","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"errors":{"ERC20InsufficientAllowance(address,uint256,uint256)":[{"details":"Indicates a failure with the `spender`’s `allowance`. Used in transfers.","params":{"allowance":"Amount of tokens a `spender` is allowed to operate with.","needed":"Minimum amount required to perform a transfer.","spender":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC20InsufficientBalance(address,uint256,uint256)":[{"details":"Indicates an error related to the current `balance` of a `sender`. Used in transfers.","params":{"balance":"Current balance for the interacting account.","needed":"Minimum amount required to perform a transfer.","sender":"Address whose tokens are being transferred."}}],"ERC20InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC20InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC20InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC20InvalidSpender(address)":[{"details":"Indicates a failure with the `spender` to be approved. Used in approvals.","params":{"spender":"Address that may be allowed to operate on tokens without being their owner."}}],"ReentrancyGuardReentrantCall()":[{"details":"Unauthorized reentrant call."}]},"events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"See {IERC20-allowance}."},"approve(address,uint256)":{"details":"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."},"assetLiquidity(uint256)":{"details":"Returns the liquidity of a specific asset in the pool.","params":{"assetIndex":"The index of the asset."},"returns":{"_0":"The liquidity of the asset."}},"balanceOf(address)":{"details":"See {IERC20-balanceOf}."},"burn(address)":{"details":"Burns the pool tokens and transfers the underlying assets to the specified address.","params":{"to":"The address to transfer the underlying assets to."}},"computeTotalValuation()":{"details":"Computes the total valuation of the pool and returns the total valuation and an array of individual valuations.","returns":{"totalVal":"The total valuation of the pool.","valuations":"An array of individual valuations."}},"decimals()":{"details":"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"getAmountOut(address,address,uint256)":{"details":"Calculates the amount of `toToken` that will be received when swapping `fromToken` for `toToken`.","params":{"amount":"The amount of `fromToken` being swapped.","fromToken":"The address of the token being swapped from.","toToken":"The address of the token being swapped to."},"returns":{"_0":"The amount of `toToken` that will be received."}},"getAssetReserve(address)":{"details":"Returns the reserve amount of the specified asset.","params":{"asset":"The address of the asset."},"returns":{"_0":"The reserve amount of the asset."}},"getAssets()":{"details":"Retrieves the list of assets in the pool.","returns":{"_0":"An array of addresses representing the assets."}},"getDeviation()":{"details":"Returns the deviation between the current weights and target weights of the assets in the pool.","returns":{"directions":"An array of boolean values indicating whether the current weight is higher (true) or lower (false) than the target weight."}},"getReserves()":{"details":"Returns an array of reserves for each asset in the pool.","returns":{"_0":"An array of reserves."}},"getWeights()":{"details":"Retrieves the list of weights associated with the assets in the pool.","returns":{"_0":"An array of uint256 values representing the weights."}},"liquidity()":{"details":"Returns the total liquidity of the pool.","returns":{"_0":"The total liquidity of the pool."}},"mint(address,uint256[])":{"details":"Mints new tokens and adds them to the specified address.","params":{"to":"The address to which the new tokens will be minted."},"returns":{"_0":"The amount of tokens minted."}},"name()":{"details":"Returns the name of the token."},"performRebalanceIfNeeded(address)":{"details":"Performs rebalance if needed based on the LP share of the sender.","params":{"_sender":"The address of the sender."}},"rebalanceWeights(address)":{"details":"Rebalances the weights of the pool by calculating the amounts to add for each token, transferring the calculated amounts from the user to the pool, minting the total added liquidity, updating the reserves, and emitting an event to indicate the rebalancing of weights.","params":{"receiver":"The address to receive the minted liquidity tokens."}},"swap(address,address,uint256,address)":{"details":"Swaps `amount` of `fromToken` to `toToken` and transfers the received amount to `receiver`. Requirements: - `fromToken` and `toToken` must be different tokens. - `amount` must be greater than zero. - Sufficient liquidity of `toToken` must be available in the contract. Emits a `Swap` event with the details of the swap. Updates the reserves after the swap.","params":{"amount":"The amount of `fromToken` to swap.","fromToken":"The address of the token to swap from.","receiver":"The address to receive the swapped tokens.","toToken":"The address of the token to swap to."},"returns":{"_0":"The amount of `toToken` received after the swap."}},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{"details":"See {IERC20-totalSupply}."},"transfer(address,uint256)":{"details":"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."},"transferFrom(address,address,uint256)":{"details":"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."},"unitPrice()":{"details":"Returns the unit price of the pool.","returns":{"_0":"The unit price of the pool."}}},"version":1},"evm":{"bytecode":{"functionDebugData":{"abi_decode_address_fromMemory":{"entryPoint":2327,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_array_address_dyn":{"entryPoint":2347,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":2292,"id":null,"parameterSlots":2,"returnSlots":0},"finalize_allocation_9403":{"entryPoint":2265,"id":null,"parameterSlots":1,"returnSlots":0},"memory_array_index_access_uint256_dyn":{"entryPoint":2370,"id":null,"parameterSlots":2,"returnSlots":1}},"generatedSources":[],"linkReferences":{},"object":"6080806040523461042f57613cb6803803809161001c82856108f4565b8339810160a08282031261042f5761003382610917565b60208301519091906001600160401b03811161042f5783019181601f8401121561042f578251926100638461092b565b9361007160405195866108f4565b80855260208086019160051b8301019184831161042f57602001905b8282106108c15750505060408401516001600160401b03811161042f5784019180601f8401121561042f5782516100c38161092b565b936100d160405195866108f4565b81855260208086019260051b82010192831161042f57602001905b8282106108b157505050610107608060608601519501610917565b604051610113816108d9565b6009815268042616c756e69204c560bc1b602082015260405190610136826108d9565b6009825268042414c554e492d4c560bc1b60208301528051906001600160401b03821161048c5760035490600182811c921680156108a7575b60208310146107885781601f849311610839575b50602090601f83116001146107b1575f926107a6575b50508160011b915f199060031b1c1916176003555b8051906001600160401b03821161048c5760045490600182811c9216801561079c575b60208310146107885781601f84931161071a575b50602090601f8311600114610696575f9261068b575b50508160011b915f199060031b1c1916176004555b6001600555600a80546001600160a01b03199081166001600160a01b039384161790915560068054909116918316919091179055670de0b6b3a7640000600955825182510361063b575f5b835181101561051b576001600160a01b036102768286610942565b5116156104d6576102878184610942565b51156104a0576001600160a01b0361029f8286610942565b51166102ab8285610942565b5160408051929083018084116001600160401b039091111761048c5760408301604052825260208201526007546801000000000000000081101561048c5760018101806007558110156104785760075f5281517fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c68860019290921b91820180546001600160a01b039283166001600160a01b03199091161790556020909201517fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c689909101556103798286610942565b511660018060a01b0360065416604051636eb1769f60e11b8152306004820152816024820152602081604481865afa90811561043b575f91610446575b50156103c7575b505060010161025b565b5f916044602092604051948593849263095ea7b360e01b84526004840152811960248401525af1801561043b576103ff575b806103bd565b6020813d602011610433575b81610418602093836108f4565b8101031261042f57518015150361042f575f6103f9565b5f80fd5b3d915061040b565b6040513d5f823e3d90fd5b90506020813d602011610470575b81610461602093836108f4565b8101031261042f57515f6103b6565b3d9150610454565b634e487b7160e01b5f52603260045260245ffd5b634e487b7160e01b5f52604160045260245ffd5b60405162461bcd60e51b815260206004820152600e60248201526d125b9d985b1a59081dd95a59da1d60921b6044820152606490fd5b60405162461bcd60e51b815260206004820152601560248201527f496e76616c6964206173736574206164647265737300000000000000000000006044820152606490fd5b50600884905560405163bc06e81d60e01b815290602090829060049082906001600160a01b03165afa90811561043b575f91610601575b50600b80546001600160a01b0319166001600160a01b03929092169190911790555f90815b81518310156105b35761058a8383610942565b51810180911161059f57600190920191610577565b634e487b7160e01b5f52601160045260245ffd5b612710036105ca5760405161335f90816109578239f35b60405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964207765696768747360881b6044820152606490fd5b90506020813d602011610633575b8161061c602093836108f4565b8101031261042f5761062d90610917565b82610552565b3d915061060f565b60405162461bcd60e51b815260206004820152602260248201527f41737365747320616e642077656967687473206c656e677468206d69736d61746044820152610c6d60f31b6064820152608490fd5b015190505f806101fb565b60045f9081527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b9350601f198516905b81811061070257509084600195949392106106ea575b505050811b01600455610210565b01515f1960f88460031b161c191690555f80806106dc565b929360206001819287860151815501950193016106c6565b60045f529091507f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b601f840160051c8101916020851061077e575b90601f859493920160051c01905b81811061077057506101e5565b5f8155849350600101610763565b9091508190610755565b634e487b7160e01b5f52602260045260245ffd5b91607f16916101d1565b015190505f80610199565b60035f90815293507fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b91905b601f198416851061081e576001945083601f19811610610806575b505050811b016003556101ae565b01515f1960f88460031b161c191690555f80806107f8565b818101518355602094850194600190930192909101906107dd565b60035f529091507fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b601f840160051c8101916020851061089d575b90601f859493920160051c01905b81811061088f5750610183565b5f8155849350600101610882565b9091508190610874565b91607f169161016f565b81518152602091820191016100ec565b602080916108ce84610917565b81520191019061008d565b604081019081106001600160401b0382111761048c57604052565b601f909101601f19168101906001600160401b0382119082101761048c57604052565b51906001600160a01b038216820361042f57565b6001600160401b03811161048c5760051b60200190565b80518210156104785760209160051b01019056fe60a0604081815260049182361015610015575f80fd5b5f925f3560e01c91826301d22ccd1461281e5750816306fdde03146126d55781630723c9991461236a5781630902f1ac1461231c578163095ea7b31461221757816318160ddd146121db5781631a6865021461219957816322acb8671461211e57816323b872dd14611fc9578163313ce56714611f9057816336bf6e3914611f3e5781633dff5b7f14611e545781634aa0665214611e395781635568081a14611a2557816367a6c440146119ea57816367e4ac2c1461195b5781636e81221c1461157657816370a082311461151557816377aace1a146114c25781637e04795a146113fd5781637fec8d38146113c057816389ab35321461133657816389afcb4414610c175781638a77c8dc14610bd357816395d89b4114610a7d578163a9059cbb14610a2e578163b2b55d7014610802578163c2ee3a08146109f1578163cdf456e11461099e578163cf8fa764146108e2578163d14ef46d14610864578163d66bd52414610802578163dd62ed3e1461078d578163de836ebd146101e7575063e73faa2d146101a3575f80fd5b346101e357817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101e3576020906101dc613040565b9051908152f35b5080fd5b9050823461078a57827ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261078a576102206128b4565b91602492833567ffffffffffffffff8111610786576102429036908401612a27565b9273ffffffffffffffffffffffffffffffffffffffff9261026884600a54163314612c59565b6002549582610275612bfd565b9760079860075490805182036107295781156106cc579086915b8183106105415750505081156104bf57806104145750935b84156103b85790846102e18a979695949333865260209b868d978852808a83822054946102d48882613118565b1698898252522054612e66565b0361035d5750505f5b865481101561032b578084610300600193612ad0565b50541661030d8289612b9a565b51905f52600c8a52610323875f20918254612e73565b9055016102ea565b878386847f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d4121396885848351858152a251908152f35b90600b6064928a8851937f08c379a00000000000000000000000000000000000000000000000000000000085528401528201527f4d696e74204661696c65640000000000000000000000000000000000000000006044820152fd5b606483600d8460208d51937f08c379a00000000000000000000000000000000000000000000000000000000085528401528201527f4d696e74207174792069732030000000000000000000000000000000000000006044820152fd5b61041c61306b565b5091821561043d57610437929161043291612d72565b612db2565b936102a7565b60848560268660208f51937f08c379a00000000000000000000000000000000000000000000000000000000085528401528201527f546f74616c206c6971756964697479206d75737420626520677265617465722060448201527f7468616e203000000000000000000000000000000000000000000000000000006064820152fd5b60848460228560208e51937f08c379a00000000000000000000000000000000000000000000000000000000085528401528201527f546f74616c2076616c7565206d7573742062652067726561746572207468616e60448201527f20300000000000000000000000000000000000000000000000000000000000006064820152fd5b9091938961054e86612ad0565b5054168d51907f70a08231000000000000000000000000000000000000000000000000000000008252308983015260209182818a81855afa9081156106c0578b9161068f575b508015610633576105b0906105a98987612b9a565b5190612e66565b9182156105d75750916105c86105ce926001946132bf565b90612e73565b9401919061028f565b8f601d8a6064938d9351937f08c379a00000000000000000000000000000000000000000000000000000000085528401528201527f416d6f756e74206d7573742062652067726561746572207468616e20300000006044820152fd5b8f8a601e8b8660649451937f08c379a00000000000000000000000000000000000000000000000000000000085528401528201527f42616c616e6365206d7573742062652067726561746572207468616e203000006044820152fd5b90508281813d83116106b9575b6106a681836129ce565b810103126106b557515f610594565b5f80fd5b503d61069c565b50508e513d8b823e3d90fd5b5060648560098660208f51937f08c379a00000000000000000000000000000000000000000000000000000000085528401528201527f4e6f2061737365747300000000000000000000000000000000000000000000006044820152fd5b5060648560178660208f51937f08c379a00000000000000000000000000000000000000000000000000000000085528401528201527f496e76616c6964207265736572766573206c656e6774680000000000000000006044820152fd5b8380fd5b80fd5b5050346101e357807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101e3576020916107c86128b4565b826107d16128d7565b9273ffffffffffffffffffffffffffffffffffffffff8093168152600186522091165f528252805f20549051908152f35b5050346101e35760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101e3578060209273ffffffffffffffffffffffffffffffffffffffff6108546128b4565b168152600c845220549051908152f35b839150346101e35760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101e357359060075482101561078a57506108ac90612ad0565b508054600190910154915173ffffffffffffffffffffffffffffffffffffffff90911681526020810191909152604090f35b0390f35b9050823461078a5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261078a575080359061092061306b565b8092915051831015610941576020846109398585612b9a565b519051908152f35b60649060208551917f08c379a0000000000000000000000000000000000000000000000000000000008352820152601360248201527f496e76616c696420617373657420696e646578000000000000000000000000006044820152fd5b5050346101e357817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101e35760209073ffffffffffffffffffffffffffffffffffffffff600b54169051908152f35b5050346101e357817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101e3576020906009549051908152f35b5050346101e357807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101e357602090610a76610a6c6128b4565b60243590336131b2565b5160018152f35b8383346101e357817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101e35780519180938054916001908360011c9260018516948515610bc9575b6020958686108114610b9d57858952908115610b5b5750600114610b03575b6108de8787610af9828c03836129ce565b519182918261286c565b81529295507f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5b828410610b4857505050826108de94610af992820101948680610ae8565b8054868501880152928601928101610b2a565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00168887015250505050151560051b8301019250610af9826108de8680610ae8565b6024846022857f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b93607f1693610ac9565b5050346101e357817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101e357602090610c0e612fea565b90519015158152f35b839150346101e3576020807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261133257610c526128b4565b9273ffffffffffffffffffffffffffffffffffffffff93610c7885600a54163314612c59565b308252818352858220549081156112d65760025495861561127a576007805493610ca185612bae565b9461012c82027ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffed48382040161124e57612710610cdf91048093612e66565b99875b82811061119657505050308652858752610d01898b8820541015612f85565b878784600654168c51928380927f3b19e84a0000000000000000000000000000000000000000000000000000000082525afa908115611141579188918a9796959493899161114b575b5090610da792918d5193849283927fa9059cbb000000000000000000000000000000000000000000000000000000009b8c855284016020909392919373ffffffffffffffffffffffffffffffffffffffff60408201951681520152565b03818a305af1908115611141578791611124575b50156110c857308652858752610dd6898b8820541015612f85565b301561109957305f525f8752895f2054898110611054578990305f525f8952038a5f205588600254036002555f8a518a81527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef893092a3855b8154811015610fd9578783610e4383612ad0565b5054168c51918280927f70a082310000000000000000000000000000000000000000000000000000000082528d309083015260249485915afa8015610fa0578990610faa575b610ea09150610e988489612b9a565b511115612e01565b8b8986888d8c8c610ef7610ec18a8d610eb882612ad0565b50541696612b9a565b51975197889687958694855284016020909392919373ffffffffffffffffffffffffffffffffffffffff60408201951681520152565b03925af1908115610fa0578991610f73575b5015610f185750600101610e2f565b8960156064928b8f51937f08c379a00000000000000000000000000000000000000000000000000000000085528401528201527f4173736574207472616e73666572206661696c656400000000000000000000006044820152fd5b610f9391508a3d8c11610f99575b610f8b81836129ce565b810190612de9565b8d610f09565b503d610f81565b8d513d8b823e3d90fd5b508981813d8311610fd2575b610fc081836129ce565b810103126106b557610ea09051610e89565b503d610fb6565b50918991868a89935f5b8754811015611024578085610ff9600193612ad0565b505416611006828c612b9a565b51905f52600c885261101c895f20918254612e66565b905501610fe3565b5084847fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca59288519485521692a280f35b8a517fe450d38c00000000000000000000000000000000000000000000000000000000815230818b019081526020810192909252604082018b90529081906060010390fd5b602488878c51917f96c6fd1e000000000000000000000000000000000000000000000000000000008352820152fd5b606488888c51917f08c379a0000000000000000000000000000000000000000000000000000000008352820152601360248201527f466565207472616e73666572206661696c6564000000000000000000000000006044820152fd5b61113b9150883d8a11610f9957610f8b81836129ce565b8b610dbb565b8b513d89823e3d90fd5b9280929495969798508391503d831161118f575b61116981836129ce565b8101031261118b5751838116810361118b578895949392918891610da7610d4a565b8680fd5b503d61115f565b8c8a8c6024896111a586612ad0565b5054169351809481937f70a0823100000000000000000000000000000000000000000000000000000000835230908301525afa908115611244578392918e918c9161120d575b50926104326111fc92600195612d72565b611206828b612b9a565b5201610ce2565b935050508a82813d831161123d575b61122681836129ce565b810103126106b55790518291908d906104326111eb565b503d61121c565b8e513d8c823e3d90fd5b60248860118c7f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b606486868a51917f08c379a0000000000000000000000000000000000000000000000000000000008352820152600c60248201527f4e6f206c697175696469747900000000000000000000000000000000000000006044820152fd5b606485858951917f08c379a0000000000000000000000000000000000000000000000000000000008352820152601c60248201527f5368617265206d7573742062652067726561746572207468616e2030000000006044820152fd5b8280fd5b82843461078a57807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261078a5761136e612e80565b92908151938285938401908452825180915260608401926020809101955b8281106113a75785806108de878783820360208501526128fa565b865115158552958101958795509381019360010161138c565b5050346101e357817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101e3576020906008549051908152f35b919050346113325760209160207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126107865780359067ffffffffffffffff82116114be5761145091369101612a27565b9073ffffffffffffffffffffffffffffffffffffffff9261147684600a54163314612c59565b845b6007548110156114ba57808561148f600193612ad0565b50541661149c8287612b9a565b51908852600c84526114b2858920918254612e66565b905501611478565b8580f35b8480fd5b5050346101e357817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101e35760209073ffffffffffffffffffffffffffffffffffffffff600a54169051908152f35b5050346101e35760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101e3578060209273ffffffffffffffffffffffffffffffffffffffff6115676128b4565b16815280845220549051908152f35b9050346113325760807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112611332576115af6128b4565b926115b86128d7565b6044356064359573ffffffffffffffffffffffffffffffffffffffff9687811681036106b55760026005541461193357600260055587841693888316928584146118d65784156118795788517f23b872dd00000000000000000000000000000000000000000000000000000000815260206080819052338a83019081523081830152604081018890528290819060600103818b895af1801561186f57916116679391879361184e575b50612cbe565b9787517f70a08231000000000000000000000000000000000000000000000000000000008152308882015260805181602481895afa80156117e2578a908890611818575b6116b792501015612e01565b61012c808a02908a8204148a1517156117ec576127106116d891048a612e66565b968851907fa9059cbb00000000000000000000000000000000000000000000000000000000825281806117348b876080519584016020909392919373ffffffffffffffffffffffffffffffffffffffff60408201951681520152565b03818a8a5af180156117e257936117b09795937fcd3829a3813dc3cdd188fd3d01dcf3268c16be2fdd2dd21d0665418816e460628b83958a9895829b966117c1575b508151938885528d6080518601521692a48352600c6080515261179d848420918254612e73565b90558152600c6080515220918254612e73565b905560016005555190815260805190f35b6117db906080513d60805111610f9957610f8b81836129ce565b505f611776565b89513d89823e3d90fd5b60248760118a7f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b50506080513d8111611847575b61182f81836129ce565b8160805191810103126106b557896116b791516116ab565b503d611825565b611868906080513d60805111610f9957610f8b81836129ce565b505f611661565b8a513d8a823e3d90fd5b60648860208b51917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602060248201527f416d6f756e74206d7573742062652067726561746572207468616e207a65726f6044820152fd5b60648860208b51917f08c379a0000000000000000000000000000000000000000000000000000000008352820152601a60248201527f43616e6e6f742073776170207468652073616d6520746f6b656e0000000000006044820152fd5b8587517f3ee5aeb5000000000000000000000000000000000000000000000000000000008152fd5b82843461078a57807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261078a5760075461199781612bae565b915b8181106119b5578351602080825281906108de90820186612a87565b8073ffffffffffffffffffffffffffffffffffffffff6119d6600193612ad0565b5054166119e38286612b9a565b5201611999565b5050346101e357817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101e3576020905161012c8152f35b9050346106b5576020907ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc9282843601126106b557611a626128b4565b91611a73611a6e612fea565b612b35565b6002546103e890818102918183041490151715611e0d576127109073ffffffffffffffffffffffffffffffffffffffff8095165f525f865204825f205410611db257600794600754611ac481612bae565b91611ace82612bae565b915f5b818110611d7957505085600a5416803b156106b5575f8091868851809481937ffe1101160000000000000000000000000000000000000000000000000000000083525af18015611d6f57611d5a575b5090889186600654166008549088600b5416813b15611d565788517f0325192d00000000000000000000000000000000000000000000000000000000815260c0818a01529486948694859387938593611b8f91611b8060c487018f612a87565b918683030160248701526128fa565b91306044850152306064850152608484015260a483015203925af18015611d4c57611d38575b505b8654811015611cfa5784611bca82612ad0565b50541684517f70a0823100000000000000000000000000000000000000000000000000000000815230858201528781602481855afa908115611cf0579088918b91611cbf575b5082611c7d938c52600c835281888d205588600a54168c89518096819582947fa9059cbb0000000000000000000000000000000000000000000000000000000084528c84016020909392919373ffffffffffffffffffffffffffffffffffffffff60408201951681520152565b03925af18015611cb5579060019291611c98575b5001611bb7565b611cae90883d8a11610f9957610f8b81836129ce565b505f611c91565b85513d8b823e3d90fd5b82819392503d8311611ce9575b611cd681836129ce565b810103126106b557518790611c7d611c10565b503d611ccc565b86513d8c823e3d90fd5b8351868152889033907f279b343370f587af7fb675ae7c8578e9c8abcc373236ad02c501a4771fe7a7b89080611d32818c0188612a87565b0390a280f35b611d419061298d565b61118b57865f611bb5565b85513d84823e3d90fd5b8580fd5b611d669192995061298d565b5f97905f611b20565b86513d5f823e3d90fd5b8088611d86600193612ad0565b505416611d938288612b9a565b5281611d9e82612ad0565b500154611dab8287612b9a565b5201611ad1565b8360649251917f08c379a0000000000000000000000000000000000000000000000000000000008352820152601160248201527f556e646572203525204c502073686172650000000000000000000000000000006044820152fd5b6011827f4e487b71000000000000000000000000000000000000000000000000000000005f525260245ffd5b82346106b5576020906101dc611e4e3661292d565b91612cbe565b9050346106b557817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126106b55780359067ffffffffffffffff82116106b557611ea291369101612a27565b9060243580151581036106b55773ffffffffffffffffffffffffffffffffffffffff92611ed484600a54163314612c59565b5f5b600754811015611f3c578085611eed600193612ad0565b505416611efa8285612b9a565b51908515611f20575f52600c602052611f17865f20918254612e73565b90555b01611ed6565b5f52600c602052611f35865f20918254612e66565b9055611f1a565b005b82346106b5575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126106b5576108de611f7861306b565b839291925193849384528060208501528301906128fa565b82346106b5575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126106b5576020905160128152f35b9050346106b557611fd93661292d565b9273ffffffffffffffffffffffffffffffffffffffff83929316805f526001602052855f20335f52602052855f2054917fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff830361203f575b602087610a768888886131b2565b8583106120d95781156120aa57331561207b57505f90815260016020908152868220338352815290869020918590039091558290610a76612031565b6024905f8851917f94280d62000000000000000000000000000000000000000000000000000000008352820152fd5b6024905f8851917fe602df05000000000000000000000000000000000000000000000000000000008352820152fd5b86517ffb8f41b2000000000000000000000000000000000000000000000000000000008152339181019182526020820193909352604081018690528291506060010390fd5b82346106b5575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126106b55760075461215981612bae565b905f5b818110612178578351602080825281906108de908201866128fa565b8060016121858193612ad0565b5001546121928286612b9a565b520161215c565b82346106b5575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126106b5576020906121d361306b565b509051908152f35b82346106b5575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126106b5576020906002549051908152f35b82346106b557807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126106b55761224e6128b4565b6024359033156122ed5773ffffffffffffffffffffffffffffffffffffffff169081156122be5760209350335f5260018452825f20825f52845280835f205582519081527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925843392a35160018152f35b6024845f8551917f94280d62000000000000000000000000000000000000000000000000000000008352820152fd5b6024845f8551917fe602df05000000000000000000000000000000000000000000000000000000008352820152fd5b82346106b5575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126106b5576108de90612357612bfd565b90519182916020835260208301906128fa565b82346106b557602090817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126106b5576123a46128b4565b916123b0611a6e612fea565b6123b861306b565b9490600754906123c782612bae565b965f5b838110612680575050505f905f905b80821061265f5750505f5b8651811015612618576123f78188612b9a565b51612405575b6001016123e4565b61248a6124128289612b9a565b518561241d84612ad0565b5054600654600b548a517f248391ff00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9182168a82019081529382166020850152604084019590955293948592918516918391829160600190565b03915afa91821561260e575f926125df575b5081156125835761251c8683836124b287612ad0565b50541684600a54165f8a8d51968795869485937f23b872dd0000000000000000000000000000000000000000000000000000000085523390850160409194939294606082019573ffffffffffffffffffffffffffffffffffffffff80921683521660208201520152565b03925af18015612579579060019493929161255c575b5061253c83612ad0565b5054165f52600c8652612553875f20918254612e73565b905590506123fd565b61257290883d8a11610f9957610f8b81836129ce565b508a612532565b88513d5f823e3d90fd5b606485878951917f08c379a0000000000000000000000000000000000000000000000000000000008352820152601b60248201527f496e76616c696420746f6b656e20616d6f756e7420746f2061646400000000006044820152fd5b9091508581813d8311612607575b6125f781836129ce565b810103126106b55751908961249c565b503d6125ed565b87513d5f823e3d90fd5b837fa95ad530009c6f929555e70a66aadbeae7231e45756c5b028ca77fbaa376e73e61265a8988612649878c613118565b5191829185835233958301906128fa565b0390a2005b9091612678600191612671858b612b9a565b5190612e73565b9201906123d9565b8061271061269c60016126938195612ad0565b50015486612d72565b04806126a88386612b9a565b51106126b6575b50016123ca565b6126c4906105a98386612b9a565b6126ce828c612b9a565b528a6126af565b82346106b5575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126106b5578051905f9260035460018160011c91600181168015612814575b60209485851082146127e857508387529081156127aa5750600114612750575b505050610af9826108de9403836129ce565b60035f9081529295507fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b82841061279757505050826108de94610af9928201019461273e565b805486850188015292860192810161277b565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016868501525050151560051b8301019250610af9826108de61273e565b6022907f4e487b71000000000000000000000000000000000000000000000000000000005f525260245ffd5b92607f169261271e565b346106b5575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126106b55760209073ffffffffffffffffffffffffffffffffffffffff600654168152f35b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f602060409481855280519182918282880152018686015e5f8582860101520116010190565b6004359073ffffffffffffffffffffffffffffffffffffffff821682036106b557565b6024359073ffffffffffffffffffffffffffffffffffffffff821682036106b557565b9081518082526020808093019301915f5b828110612919575050505090565b83518552938101939281019260010161290b565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc60609101126106b55773ffffffffffffffffffffffffffffffffffffffff9060043582811681036106b5579160243590811681036106b5579060443590565b67ffffffffffffffff81116129a157604052565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff8211176129a157604052565b67ffffffffffffffff81116129a15760051b60200190565b9080601f830112156106b5576020908235612a4181612a0f565b93612a4f60405195866129ce565b81855260208086019260051b8201019283116106b557602001905b828210612a78575050505090565b81358152908301908301612a6a565b9081518082526020808093019301915f5b828110612aa6575050505090565b835173ffffffffffffffffffffffffffffffffffffffff1685529381019392810192600101612a98565b600754811015612b085760075f5260011b7fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c68801905f90565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b15612b3c57565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f526562616c616e6365206e6f74206e65656465640000000000000000000000006044820152fd5b8051821015612b085760209160051b010190565b90612bb882612a0f565b612bc560405191826129ce565b8281527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0612bf38294612a0f565b0190602036910137565b600754612c0981612bae565b905f5b818110612c1857505090565b8073ffffffffffffffffffffffffffffffffffffffff612c39600193612ad0565b5054165f52600c60205260405f2054612c528286612b9a565b5201612c0c565b15612c6057565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f4f6e6c79205065726970686572790000000000000000000000000000000000006044820152fd5b6006546040517f248391ff00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff92831660048201529282166024840152604483019390935290916020918391168180606481015b03915afa908115612d67575f91612d38575090565b90506020813d602011612d5f575b81612d53602093836129ce565b810103126106b5575190565b3d9150612d46565b6040513d5f823e3d90fd5b81810292918115918404141715612d8557565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b8115612dbc570490565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b908160209103126106b5575180151581036106b55790565b15612e0857565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f496e73756666696369656e74204c6971756964697479000000000000000000006044820152fd5b91908203918211612d8557565b91908201809211612d8557565b612e8861306b565b919060075490612e9782612a0f565b91612ea560405193846129ce565b8083527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0612ed282612a0f565b01366020850137612ee281612bae565b945f5b828110612ef457505050509190565b612efe8183612b9a565b519061271091828102928184041490151715612d8557612f2085600193612db2565b612f2982612ad0565b50830154839181811115612f5e5790612f4191612e66565b612f4b838b612b9a565b52612f568288612b9a565b525b01612ee5565b90612f699250612e66565b612f73828a612b9a565b525f612f7f8288612b9a565b52612f58565b15612f8c57565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f496e73756666696369656e74206c6971756964697479000000000000000000006044820152fd5b612ff2612e80565b5f5b8151811015613039576130078184612b9a565b51151580613024575b61301c57600101612ff4565b505050600190565b5061302f8183612b9a565b5160085410613010565b5050505f90565b61304861306b565b506002548015613065576104326130629260095490612d72565b90565b50505f90565b600754905f61307983612bae565b925f9073ffffffffffffffffffffffffffffffffffffffff80600b5416905b8284106130a757505050509190565b909192936130e7600191836130bb88612ad0565b5054168581036130f1575f52600c60205260405f20546130db888b612b9a565b525b612671878a612b9a565b9401929190613098565b80613108915f52600c60205260405f2054906132bf565b613112888b612b9a565b526130dd565b73ffffffffffffffffffffffffffffffffffffffff16908115613182577fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6020826131665f94600254612e73565b60025584845283825260408420818154019055604051908152a3565b60246040517fec442f050000000000000000000000000000000000000000000000000000000081525f6004820152fd5b9173ffffffffffffffffffffffffffffffffffffffff80841692831561328f571692831561318257825f525f60205260405f2054908282106132375750817fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92602092855f525f84520360405f2055845f5260405f20818154019055604051908152a3565b6040517fe450d38c00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff919091166004820152602481019190915260448101829052606490fd5b60246040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081525f6004820152fd5b600654600b546040517f248391ff00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff938416600482015290831660248201526044810193909352602091839116818060648101612d2356fea2646970667358221220c8414810c36dc329497f0bf640c364c1d29c54d48070ba851498e68ef0072a6864736f6c63430008190033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x42F JUMPI PUSH2 0x3CB6 DUP1 CODESIZE SUB DUP1 SWAP2 PUSH2 0x1C DUP3 DUP6 PUSH2 0x8F4 JUMP JUMPDEST DUP4 CODECOPY DUP2 ADD PUSH1 0xA0 DUP3 DUP3 SUB SLT PUSH2 0x42F JUMPI PUSH2 0x33 DUP3 PUSH2 0x917 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MLOAD SWAP1 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x42F JUMPI DUP4 ADD SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x42F JUMPI DUP3 MLOAD SWAP3 PUSH2 0x63 DUP5 PUSH2 0x92B JUMP JUMPDEST SWAP4 PUSH2 0x71 PUSH1 0x40 MLOAD SWAP6 DUP7 PUSH2 0x8F4 JUMP JUMPDEST DUP1 DUP6 MSTORE PUSH1 0x20 DUP1 DUP7 ADD SWAP2 PUSH1 0x5 SHL DUP4 ADD ADD SWAP2 DUP5 DUP4 GT PUSH2 0x42F JUMPI PUSH1 0x20 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x8C1 JUMPI POP POP POP PUSH1 0x40 DUP5 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x42F JUMPI DUP5 ADD SWAP2 DUP1 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x42F JUMPI DUP3 MLOAD PUSH2 0xC3 DUP2 PUSH2 0x92B JUMP JUMPDEST SWAP4 PUSH2 0xD1 PUSH1 0x40 MLOAD SWAP6 DUP7 PUSH2 0x8F4 JUMP JUMPDEST DUP2 DUP6 MSTORE PUSH1 0x20 DUP1 DUP7 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x42F JUMPI PUSH1 0x20 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x8B1 JUMPI POP POP POP PUSH2 0x107 PUSH1 0x80 PUSH1 0x60 DUP7 ADD MLOAD SWAP6 ADD PUSH2 0x917 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x113 DUP2 PUSH2 0x8D9 JUMP JUMPDEST PUSH1 0x9 DUP2 MSTORE PUSH9 0x42616C756E69204C5 PUSH1 0xBC SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP1 PUSH2 0x136 DUP3 PUSH2 0x8D9 JUMP JUMPDEST PUSH1 0x9 DUP3 MSTORE PUSH9 0x42414C554E492D4C5 PUSH1 0xBC SHL PUSH1 0x20 DUP4 ADD MSTORE DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x48C JUMPI PUSH1 0x3 SLOAD SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x8A7 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x788 JUMPI DUP2 PUSH1 0x1F DUP5 SWAP4 GT PUSH2 0x839 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x7B1 JUMPI PUSH0 SWAP3 PUSH2 0x7A6 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x3 SSTORE JUMPDEST DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x48C JUMPI PUSH1 0x4 SLOAD SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x79C JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x788 JUMPI DUP2 PUSH1 0x1F DUP5 SWAP4 GT PUSH2 0x71A JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x696 JUMPI PUSH0 SWAP3 PUSH2 0x68B JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x4 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x5 SSTORE PUSH1 0xA DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x6 DUP1 SLOAD SWAP1 SWAP2 AND SWAP2 DUP4 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH8 0xDE0B6B3A7640000 PUSH1 0x9 SSTORE DUP3 MLOAD DUP3 MLOAD SUB PUSH2 0x63B JUMPI PUSH0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x51B JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x276 DUP3 DUP7 PUSH2 0x942 JUMP JUMPDEST MLOAD AND ISZERO PUSH2 0x4D6 JUMPI PUSH2 0x287 DUP2 DUP5 PUSH2 0x942 JUMP JUMPDEST MLOAD ISZERO PUSH2 0x4A0 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x29F DUP3 DUP7 PUSH2 0x942 JUMP JUMPDEST MLOAD AND PUSH2 0x2AB DUP3 DUP6 PUSH2 0x942 JUMP JUMPDEST MLOAD PUSH1 0x40 DUP1 MLOAD SWAP3 SWAP1 DUP4 ADD DUP1 DUP5 GT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 SWAP2 GT OR PUSH2 0x48C JUMPI PUSH1 0x40 DUP4 ADD PUSH1 0x40 MSTORE DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x7 SLOAD PUSH9 0x10000000000000000 DUP2 LT ISZERO PUSH2 0x48C JUMPI PUSH1 0x1 DUP2 ADD DUP1 PUSH1 0x7 SSTORE DUP2 LT ISZERO PUSH2 0x478 JUMPI PUSH1 0x7 PUSH0 MSTORE DUP2 MLOAD PUSH32 0xA66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C688 PUSH1 0x1 SWAP3 SWAP1 SWAP3 SHL SWAP2 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE PUSH1 0x20 SWAP1 SWAP3 ADD MLOAD PUSH32 0xA66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C689 SWAP1 SWAP2 ADD SSTORE PUSH2 0x379 DUP3 DUP7 PUSH2 0x942 JUMP JUMPDEST MLOAD AND PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x6 SLOAD AND PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE DUP2 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x44 DUP2 DUP7 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x43B JUMPI PUSH0 SWAP2 PUSH2 0x446 JUMPI JUMPDEST POP ISZERO PUSH2 0x3C7 JUMPI JUMPDEST POP POP PUSH1 0x1 ADD PUSH2 0x25B JUMP JUMPDEST PUSH0 SWAP2 PUSH1 0x44 PUSH1 0x20 SWAP3 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP4 DUP5 SWAP3 PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE DUP2 NOT PUSH1 0x24 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x43B JUMPI PUSH2 0x3FF JUMPI JUMPDEST DUP1 PUSH2 0x3BD JUMP JUMPDEST PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x433 JUMPI JUMPDEST DUP2 PUSH2 0x418 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x8F4 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x42F JUMPI MLOAD DUP1 ISZERO ISZERO SUB PUSH2 0x42F JUMPI PUSH0 PUSH2 0x3F9 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x40B JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x470 JUMPI JUMPDEST DUP2 PUSH2 0x461 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x8F4 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x42F JUMPI MLOAD PUSH0 PUSH2 0x3B6 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x454 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x125B9D985B1A59081DD95A59DA1D PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420617373657420616464726573730000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH1 0x8 DUP5 SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH4 0xBC06E81D PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x4 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x43B JUMPI PUSH0 SWAP2 PUSH2 0x601 JUMPI JUMPDEST POP PUSH1 0xB DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH0 SWAP1 DUP2 JUMPDEST DUP2 MLOAD DUP4 LT ISZERO PUSH2 0x5B3 JUMPI PUSH2 0x58A DUP4 DUP4 PUSH2 0x942 JUMP JUMPDEST MLOAD DUP2 ADD DUP1 SWAP2 GT PUSH2 0x59F JUMPI PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 PUSH2 0x577 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x2710 SUB PUSH2 0x5CA JUMPI PUSH1 0x40 MLOAD PUSH2 0x335F SWAP1 DUP2 PUSH2 0x957 DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x496E76616C69642077656967687473 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x633 JUMPI JUMPDEST DUP2 PUSH2 0x61C PUSH1 0x20 SWAP4 DUP4 PUSH2 0x8F4 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x42F JUMPI PUSH2 0x62D SWAP1 PUSH2 0x917 JUMP JUMPDEST DUP3 PUSH2 0x552 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x60F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41737365747320616E642077656967687473206C656E677468206D69736D6174 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0xC6D PUSH1 0xF3 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ADD MLOAD SWAP1 POP PUSH0 DUP1 PUSH2 0x1FB JUMP JUMPDEST PUSH1 0x4 PUSH0 SWAP1 DUP2 MSTORE PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B SWAP4 POP PUSH1 0x1F NOT DUP6 AND SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x702 JUMPI POP SWAP1 DUP5 PUSH1 0x1 SWAP6 SWAP5 SWAP4 SWAP3 LT PUSH2 0x6EA JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x4 SSTORE PUSH2 0x210 JUMP JUMPDEST ADD MLOAD PUSH0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE PUSH0 DUP1 DUP1 PUSH2 0x6DC JUMP JUMPDEST SWAP3 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH2 0x6C6 JUMP JUMPDEST PUSH1 0x4 PUSH0 MSTORE SWAP1 SWAP2 POP PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP6 LT PUSH2 0x77E JUMPI JUMPDEST SWAP1 PUSH1 0x1F DUP6 SWAP5 SWAP4 SWAP3 ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x770 JUMPI POP PUSH2 0x1E5 JUMP JUMPDEST PUSH0 DUP2 SSTORE DUP5 SWAP4 POP PUSH1 0x1 ADD PUSH2 0x763 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x755 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x1D1 JUMP JUMPDEST ADD MLOAD SWAP1 POP PUSH0 DUP1 PUSH2 0x199 JUMP JUMPDEST PUSH1 0x3 PUSH0 SWAP1 DUP2 MSTORE SWAP4 POP PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B SWAP2 SWAP1 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0x81E JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x806 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x3 SSTORE PUSH2 0x1AE JUMP JUMPDEST ADD MLOAD PUSH0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE PUSH0 DUP1 DUP1 PUSH2 0x7F8 JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x7DD JUMP JUMPDEST PUSH1 0x3 PUSH0 MSTORE SWAP1 SWAP2 POP PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP6 LT PUSH2 0x89D JUMPI JUMPDEST SWAP1 PUSH1 0x1F DUP6 SWAP5 SWAP4 SWAP3 ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x88F JUMPI POP PUSH2 0x183 JUMP JUMPDEST PUSH0 DUP2 SSTORE DUP5 SWAP4 POP PUSH1 0x1 ADD PUSH2 0x882 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x874 JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x16F JUMP JUMPDEST DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0xEC JUMP JUMPDEST PUSH1 0x20 DUP1 SWAP2 PUSH2 0x8CE DUP5 PUSH2 0x917 JUMP JUMPDEST DUP2 MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0x8D JUMP JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x48C JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT SWAP1 DUP3 LT OR PUSH2 0x48C JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x42F JUMPI JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x48C JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x478 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP INVALID PUSH1 0xA0 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 SWAP2 DUP3 CALLDATASIZE LT ISZERO PUSH2 0x15 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 SWAP3 PUSH0 CALLDATALOAD PUSH1 0xE0 SHR SWAP2 DUP3 PUSH4 0x1D22CCD EQ PUSH2 0x281E JUMPI POP DUP2 PUSH4 0x6FDDE03 EQ PUSH2 0x26D5 JUMPI DUP2 PUSH4 0x723C999 EQ PUSH2 0x236A JUMPI DUP2 PUSH4 0x902F1AC EQ PUSH2 0x231C JUMPI DUP2 PUSH4 0x95EA7B3 EQ PUSH2 0x2217 JUMPI DUP2 PUSH4 0x18160DDD EQ PUSH2 0x21DB JUMPI DUP2 PUSH4 0x1A686502 EQ PUSH2 0x2199 JUMPI DUP2 PUSH4 0x22ACB867 EQ PUSH2 0x211E JUMPI DUP2 PUSH4 0x23B872DD EQ PUSH2 0x1FC9 JUMPI DUP2 PUSH4 0x313CE567 EQ PUSH2 0x1F90 JUMPI DUP2 PUSH4 0x36BF6E39 EQ PUSH2 0x1F3E JUMPI DUP2 PUSH4 0x3DFF5B7F EQ PUSH2 0x1E54 JUMPI DUP2 PUSH4 0x4AA06652 EQ PUSH2 0x1E39 JUMPI DUP2 PUSH4 0x5568081A EQ PUSH2 0x1A25 JUMPI DUP2 PUSH4 0x67A6C440 EQ PUSH2 0x19EA JUMPI DUP2 PUSH4 0x67E4AC2C EQ PUSH2 0x195B JUMPI DUP2 PUSH4 0x6E81221C EQ PUSH2 0x1576 JUMPI DUP2 PUSH4 0x70A08231 EQ PUSH2 0x1515 JUMPI DUP2 PUSH4 0x77AACE1A EQ PUSH2 0x14C2 JUMPI DUP2 PUSH4 0x7E04795A EQ PUSH2 0x13FD JUMPI DUP2 PUSH4 0x7FEC8D38 EQ PUSH2 0x13C0 JUMPI DUP2 PUSH4 0x89AB3532 EQ PUSH2 0x1336 JUMPI DUP2 PUSH4 0x89AFCB44 EQ PUSH2 0xC17 JUMPI DUP2 PUSH4 0x8A77C8DC EQ PUSH2 0xBD3 JUMPI DUP2 PUSH4 0x95D89B41 EQ PUSH2 0xA7D JUMPI DUP2 PUSH4 0xA9059CBB EQ PUSH2 0xA2E JUMPI DUP2 PUSH4 0xB2B55D70 EQ PUSH2 0x802 JUMPI DUP2 PUSH4 0xC2EE3A08 EQ PUSH2 0x9F1 JUMPI DUP2 PUSH4 0xCDF456E1 EQ PUSH2 0x99E JUMPI DUP2 PUSH4 0xCF8FA764 EQ PUSH2 0x8E2 JUMPI DUP2 PUSH4 0xD14EF46D EQ PUSH2 0x864 JUMPI DUP2 PUSH4 0xD66BD524 EQ PUSH2 0x802 JUMPI DUP2 PUSH4 0xDD62ED3E EQ PUSH2 0x78D JUMPI DUP2 PUSH4 0xDE836EBD EQ PUSH2 0x1E7 JUMPI POP PUSH4 0xE73FAA2D EQ PUSH2 0x1A3 JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1E3 JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1E3 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x1DC PUSH2 0x3040 JUMP JUMPDEST SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST SWAP1 POP DUP3 CALLVALUE PUSH2 0x78A JUMPI DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x78A JUMPI PUSH2 0x220 PUSH2 0x28B4 JUMP JUMPDEST SWAP2 PUSH1 0x24 SWAP3 DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x786 JUMPI PUSH2 0x242 SWAP1 CALLDATASIZE SWAP1 DUP5 ADD PUSH2 0x2A27 JUMP JUMPDEST SWAP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 PUSH2 0x268 DUP5 PUSH1 0xA SLOAD AND CALLER EQ PUSH2 0x2C59 JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP6 DUP3 PUSH2 0x275 PUSH2 0x2BFD JUMP JUMPDEST SWAP8 PUSH1 0x7 SWAP9 PUSH1 0x7 SLOAD SWAP1 DUP1 MLOAD DUP3 SUB PUSH2 0x729 JUMPI DUP2 ISZERO PUSH2 0x6CC JUMPI SWAP1 DUP7 SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0x541 JUMPI POP POP POP DUP2 ISZERO PUSH2 0x4BF JUMPI DUP1 PUSH2 0x414 JUMPI POP SWAP4 JUMPDEST DUP5 ISZERO PUSH2 0x3B8 JUMPI SWAP1 DUP5 PUSH2 0x2E1 DUP11 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 CALLER DUP7 MSTORE PUSH1 0x20 SWAP12 DUP7 DUP14 SWAP8 DUP9 MSTORE DUP1 DUP11 DUP4 DUP3 KECCAK256 SLOAD SWAP5 PUSH2 0x2D4 DUP9 DUP3 PUSH2 0x3118 JUMP JUMPDEST AND SWAP9 DUP10 DUP3 MSTORE MSTORE KECCAK256 SLOAD PUSH2 0x2E66 JUMP JUMPDEST SUB PUSH2 0x35D JUMPI POP POP PUSH0 JUMPDEST DUP7 SLOAD DUP2 LT ISZERO PUSH2 0x32B JUMPI DUP1 DUP5 PUSH2 0x300 PUSH1 0x1 SWAP4 PUSH2 0x2AD0 JUMP JUMPDEST POP SLOAD AND PUSH2 0x30D DUP3 DUP10 PUSH2 0x2B9A JUMP JUMPDEST MLOAD SWAP1 PUSH0 MSTORE PUSH1 0xC DUP11 MSTORE PUSH2 0x323 DUP8 PUSH0 KECCAK256 SWAP2 DUP3 SLOAD PUSH2 0x2E73 JUMP JUMPDEST SWAP1 SSTORE ADD PUSH2 0x2EA JUMP JUMPDEST DUP8 DUP4 DUP7 DUP5 PUSH32 0xF6798A560793A54C3BCFE86A93CDE1E73087D944C0EA20544137D4121396885 DUP5 DUP4 MLOAD DUP6 DUP2 MSTORE LOG2 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 PUSH1 0xB PUSH1 0x64 SWAP3 DUP11 DUP9 MLOAD SWAP4 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP6 MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x4D696E74204661696C6564000000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 DUP4 PUSH1 0xD DUP5 PUSH1 0x20 DUP14 MLOAD SWAP4 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP6 MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x4D696E7420717479206973203000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH2 0x41C PUSH2 0x306B JUMP JUMPDEST POP SWAP2 DUP3 ISZERO PUSH2 0x43D JUMPI PUSH2 0x437 SWAP3 SWAP2 PUSH2 0x432 SWAP2 PUSH2 0x2D72 JUMP JUMPDEST PUSH2 0x2DB2 JUMP JUMPDEST SWAP4 PUSH2 0x2A7 JUMP JUMPDEST PUSH1 0x84 DUP6 PUSH1 0x26 DUP7 PUSH1 0x20 DUP16 MLOAD SWAP4 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP6 MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x546F74616C206C6971756964697479206D757374206265206772656174657220 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7468616E20300000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x84 DUP5 PUSH1 0x22 DUP6 PUSH1 0x20 DUP15 MLOAD SWAP4 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP6 MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x546F74616C2076616C7565206D7573742062652067726561746572207468616E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x2030000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 SWAP2 SWAP4 DUP10 PUSH2 0x54E DUP7 PUSH2 0x2AD0 JUMP JUMPDEST POP SLOAD AND DUP14 MLOAD SWAP1 PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP3 MSTORE ADDRESS DUP10 DUP4 ADD MSTORE PUSH1 0x20 SWAP2 DUP3 DUP2 DUP11 DUP2 DUP6 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x6C0 JUMPI DUP12 SWAP2 PUSH2 0x68F JUMPI JUMPDEST POP DUP1 ISZERO PUSH2 0x633 JUMPI PUSH2 0x5B0 SWAP1 PUSH2 0x5A9 DUP10 DUP8 PUSH2 0x2B9A JUMP JUMPDEST MLOAD SWAP1 PUSH2 0x2E66 JUMP JUMPDEST SWAP2 DUP3 ISZERO PUSH2 0x5D7 JUMPI POP SWAP2 PUSH2 0x5C8 PUSH2 0x5CE SWAP3 PUSH1 0x1 SWAP5 PUSH2 0x32BF JUMP JUMPDEST SWAP1 PUSH2 0x2E73 JUMP JUMPDEST SWAP5 ADD SWAP2 SWAP1 PUSH2 0x28F JUMP JUMPDEST DUP16 PUSH1 0x1D DUP11 PUSH1 0x64 SWAP4 DUP14 SWAP4 MLOAD SWAP4 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP6 MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E2030000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP16 DUP11 PUSH1 0x1E DUP12 DUP7 PUSH1 0x64 SWAP5 MLOAD SWAP4 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP6 MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x42616C616E6365206D7573742062652067726561746572207468616E20300000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 POP DUP3 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x6B9 JUMPI JUMPDEST PUSH2 0x6A6 DUP2 DUP4 PUSH2 0x29CE JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x6B5 JUMPI MLOAD PUSH0 PUSH2 0x594 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x69C JUMP JUMPDEST POP POP DUP15 MLOAD RETURNDATASIZE DUP12 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP PUSH1 0x64 DUP6 PUSH1 0x9 DUP7 PUSH1 0x20 DUP16 MLOAD SWAP4 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP6 MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x4E6F206173736574730000000000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP PUSH1 0x64 DUP6 PUSH1 0x17 DUP7 PUSH1 0x20 DUP16 MLOAD SWAP4 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP6 MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x496E76616C6964207265736572766573206C656E677468000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x1E3 JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1E3 JUMPI PUSH1 0x20 SWAP2 PUSH2 0x7C8 PUSH2 0x28B4 JUMP JUMPDEST DUP3 PUSH2 0x7D1 PUSH2 0x28D7 JUMP JUMPDEST SWAP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP4 AND DUP2 MSTORE PUSH1 0x1 DUP7 MSTORE KECCAK256 SWAP2 AND PUSH0 MSTORE DUP3 MSTORE DUP1 PUSH0 KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x1E3 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1E3 JUMPI DUP1 PUSH1 0x20 SWAP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x854 PUSH2 0x28B4 JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0xC DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP4 SWAP2 POP CALLVALUE PUSH2 0x1E3 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1E3 JUMPI CALLDATALOAD SWAP1 PUSH1 0x7 SLOAD DUP3 LT ISZERO PUSH2 0x78A JUMPI POP PUSH2 0x8AC SWAP1 PUSH2 0x2AD0 JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD SWAP2 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 RETURN JUMPDEST SUB SWAP1 RETURN JUMPDEST SWAP1 POP DUP3 CALLVALUE PUSH2 0x78A JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x78A JUMPI POP DUP1 CALLDATALOAD SWAP1 PUSH2 0x920 PUSH2 0x306B JUMP JUMPDEST DUP1 SWAP3 SWAP2 POP MLOAD DUP4 LT ISZERO PUSH2 0x941 JUMPI PUSH1 0x20 DUP5 PUSH2 0x939 DUP6 DUP6 PUSH2 0x2B9A JUMP JUMPDEST MLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x20 DUP6 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420617373657420696E64657800000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x1E3 JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1E3 JUMPI PUSH1 0x20 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xB SLOAD AND SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x1E3 JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1E3 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x9 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x1E3 JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1E3 JUMPI PUSH1 0x20 SWAP1 PUSH2 0xA76 PUSH2 0xA6C PUSH2 0x28B4 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x31B2 JUMP JUMPDEST MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST DUP4 DUP4 CALLVALUE PUSH2 0x1E3 JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1E3 JUMPI DUP1 MLOAD SWAP2 DUP1 SWAP4 DUP1 SLOAD SWAP2 PUSH1 0x1 SWAP1 DUP4 PUSH1 0x1 SHR SWAP3 PUSH1 0x1 DUP6 AND SWAP5 DUP6 ISZERO PUSH2 0xBC9 JUMPI JUMPDEST PUSH1 0x20 SWAP6 DUP7 DUP7 LT DUP2 EQ PUSH2 0xB9D JUMPI DUP6 DUP10 MSTORE SWAP1 DUP2 ISZERO PUSH2 0xB5B JUMPI POP PUSH1 0x1 EQ PUSH2 0xB03 JUMPI JUMPDEST PUSH2 0x8DE DUP8 DUP8 PUSH2 0xAF9 DUP3 DUP13 SUB DUP4 PUSH2 0x29CE JUMP JUMPDEST MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x286C JUMP JUMPDEST DUP2 MSTORE SWAP3 SWAP6 POP PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B JUMPDEST DUP3 DUP5 LT PUSH2 0xB48 JUMPI POP POP POP DUP3 PUSH2 0x8DE SWAP5 PUSH2 0xAF9 SWAP3 DUP3 ADD ADD SWAP5 DUP7 DUP1 PUSH2 0xAE8 JUMP JUMPDEST DUP1 SLOAD DUP7 DUP6 ADD DUP9 ADD MSTORE SWAP3 DUP7 ADD SWAP3 DUP2 ADD PUSH2 0xB2A JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND DUP9 DUP8 ADD MSTORE POP POP POP POP ISZERO ISZERO PUSH1 0x5 SHL DUP4 ADD ADD SWAP3 POP PUSH2 0xAF9 DUP3 PUSH2 0x8DE DUP7 DUP1 PUSH2 0xAE8 JUMP JUMPDEST PUSH1 0x24 DUP5 PUSH1 0x22 DUP6 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP4 MSTORE MSTORE REVERT JUMPDEST SWAP4 PUSH1 0x7F AND SWAP4 PUSH2 0xAC9 JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x1E3 JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1E3 JUMPI PUSH1 0x20 SWAP1 PUSH2 0xC0E PUSH2 0x2FEA JUMP JUMPDEST SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST DUP4 SWAP2 POP CALLVALUE PUSH2 0x1E3 JUMPI PUSH1 0x20 DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1332 JUMPI PUSH2 0xC52 PUSH2 0x28B4 JUMP JUMPDEST SWAP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP4 PUSH2 0xC78 DUP6 PUSH1 0xA SLOAD AND CALLER EQ PUSH2 0x2C59 JUMP JUMPDEST ADDRESS DUP3 MSTORE DUP2 DUP4 MSTORE DUP6 DUP3 KECCAK256 SLOAD SWAP1 DUP2 ISZERO PUSH2 0x12D6 JUMPI PUSH1 0x2 SLOAD SWAP6 DUP7 ISZERO PUSH2 0x127A JUMPI PUSH1 0x7 DUP1 SLOAD SWAP4 PUSH2 0xCA1 DUP6 PUSH2 0x2BAE JUMP JUMPDEST SWAP5 PUSH2 0x12C DUP3 MUL PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFED4 DUP4 DUP3 DIV ADD PUSH2 0x124E JUMPI PUSH2 0x2710 PUSH2 0xCDF SWAP2 DIV DUP1 SWAP4 PUSH2 0x2E66 JUMP JUMPDEST SWAP10 DUP8 JUMPDEST DUP3 DUP2 LT PUSH2 0x1196 JUMPI POP POP POP ADDRESS DUP7 MSTORE DUP6 DUP8 MSTORE PUSH2 0xD01 DUP10 DUP12 DUP9 KECCAK256 SLOAD LT ISZERO PUSH2 0x2F85 JUMP JUMPDEST DUP8 DUP8 DUP5 PUSH1 0x6 SLOAD AND DUP13 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH32 0x3B19E84A00000000000000000000000000000000000000000000000000000000 DUP3 MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x1141 JUMPI SWAP2 DUP9 SWAP2 DUP11 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 DUP10 SWAP2 PUSH2 0x114B JUMPI JUMPDEST POP SWAP1 PUSH2 0xDA7 SWAP3 SWAP2 DUP14 MLOAD SWAP4 DUP5 SWAP3 DUP4 SWAP3 PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 SWAP12 DUP13 DUP6 MSTORE DUP5 ADD PUSH1 0x20 SWAP1 SWAP4 SWAP3 SWAP2 SWAP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x40 DUP3 ADD SWAP6 AND DUP2 MSTORE ADD MSTORE JUMP JUMPDEST SUB DUP2 DUP11 ADDRESS GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x1141 JUMPI DUP8 SWAP2 PUSH2 0x1124 JUMPI JUMPDEST POP ISZERO PUSH2 0x10C8 JUMPI ADDRESS DUP7 MSTORE DUP6 DUP8 MSTORE PUSH2 0xDD6 DUP10 DUP12 DUP9 KECCAK256 SLOAD LT ISZERO PUSH2 0x2F85 JUMP JUMPDEST ADDRESS ISZERO PUSH2 0x1099 JUMPI ADDRESS PUSH0 MSTORE PUSH0 DUP8 MSTORE DUP10 PUSH0 KECCAK256 SLOAD DUP10 DUP2 LT PUSH2 0x1054 JUMPI DUP10 SWAP1 ADDRESS PUSH0 MSTORE PUSH0 DUP10 MSTORE SUB DUP11 PUSH0 KECCAK256 SSTORE DUP9 PUSH1 0x2 SLOAD SUB PUSH1 0x2 SSTORE PUSH0 DUP11 MLOAD DUP11 DUP2 MSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP10 ADDRESS SWAP3 LOG3 DUP6 JUMPDEST DUP2 SLOAD DUP2 LT ISZERO PUSH2 0xFD9 JUMPI DUP8 DUP4 PUSH2 0xE43 DUP4 PUSH2 0x2AD0 JUMP JUMPDEST POP SLOAD AND DUP13 MLOAD SWAP2 DUP3 DUP1 SWAP3 PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP3 MSTORE DUP14 ADDRESS SWAP1 DUP4 ADD MSTORE PUSH1 0x24 SWAP5 DUP6 SWAP2 GAS STATICCALL DUP1 ISZERO PUSH2 0xFA0 JUMPI DUP10 SWAP1 PUSH2 0xFAA JUMPI JUMPDEST PUSH2 0xEA0 SWAP2 POP PUSH2 0xE98 DUP5 DUP10 PUSH2 0x2B9A JUMP JUMPDEST MLOAD GT ISZERO PUSH2 0x2E01 JUMP JUMPDEST DUP12 DUP10 DUP7 DUP9 DUP14 DUP13 DUP13 PUSH2 0xEF7 PUSH2 0xEC1 DUP11 DUP14 PUSH2 0xEB8 DUP3 PUSH2 0x2AD0 JUMP JUMPDEST POP SLOAD AND SWAP7 PUSH2 0x2B9A JUMP JUMPDEST MLOAD SWAP8 MLOAD SWAP8 DUP9 SWAP7 DUP8 SWAP6 DUP7 SWAP5 DUP6 MSTORE DUP5 ADD PUSH1 0x20 SWAP1 SWAP4 SWAP3 SWAP2 SWAP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x40 DUP3 ADD SWAP6 AND DUP2 MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0xFA0 JUMPI DUP10 SWAP2 PUSH2 0xF73 JUMPI JUMPDEST POP ISZERO PUSH2 0xF18 JUMPI POP PUSH1 0x1 ADD PUSH2 0xE2F JUMP JUMPDEST DUP10 PUSH1 0x15 PUSH1 0x64 SWAP3 DUP12 DUP16 MLOAD SWAP4 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP6 MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x4173736574207472616E73666572206661696C65640000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH2 0xF93 SWAP2 POP DUP11 RETURNDATASIZE DUP13 GT PUSH2 0xF99 JUMPI JUMPDEST PUSH2 0xF8B DUP2 DUP4 PUSH2 0x29CE JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x2DE9 JUMP JUMPDEST DUP14 PUSH2 0xF09 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0xF81 JUMP JUMPDEST DUP14 MLOAD RETURNDATASIZE DUP12 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP DUP10 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0xFD2 JUMPI JUMPDEST PUSH2 0xFC0 DUP2 DUP4 PUSH2 0x29CE JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x6B5 JUMPI PUSH2 0xEA0 SWAP1 MLOAD PUSH2 0xE89 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0xFB6 JUMP JUMPDEST POP SWAP2 DUP10 SWAP2 DUP7 DUP11 DUP10 SWAP4 PUSH0 JUMPDEST DUP8 SLOAD DUP2 LT ISZERO PUSH2 0x1024 JUMPI DUP1 DUP6 PUSH2 0xFF9 PUSH1 0x1 SWAP4 PUSH2 0x2AD0 JUMP JUMPDEST POP SLOAD AND PUSH2 0x1006 DUP3 DUP13 PUSH2 0x2B9A JUMP JUMPDEST MLOAD SWAP1 PUSH0 MSTORE PUSH1 0xC DUP9 MSTORE PUSH2 0x101C DUP10 PUSH0 KECCAK256 SWAP2 DUP3 SLOAD PUSH2 0x2E66 JUMP JUMPDEST SWAP1 SSTORE ADD PUSH2 0xFE3 JUMP JUMPDEST POP DUP5 DUP5 PUSH32 0xCC16F5DBB4873280815C1EE09DBD06736CFFCC184412CF7A71A0FDB75D397CA5 SWAP3 DUP9 MLOAD SWAP5 DUP6 MSTORE AND SWAP3 LOG2 DUP1 RETURN JUMPDEST DUP11 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS DUP2 DUP12 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 DUP3 ADD DUP12 SWAP1 MSTORE SWAP1 DUP2 SWAP1 PUSH1 0x60 ADD SUB SWAP1 REVERT JUMPDEST PUSH1 0x24 DUP9 DUP8 DUP13 MLOAD SWAP2 PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 DUP9 DUP9 DUP13 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x466565207472616E73666572206661696C656400000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH2 0x113B SWAP2 POP DUP9 RETURNDATASIZE DUP11 GT PUSH2 0xF99 JUMPI PUSH2 0xF8B DUP2 DUP4 PUSH2 0x29CE JUMP JUMPDEST DUP12 PUSH2 0xDBB JUMP JUMPDEST DUP12 MLOAD RETURNDATASIZE DUP10 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP3 DUP1 SWAP3 SWAP5 SWAP6 SWAP7 SWAP8 SWAP9 POP DUP4 SWAP2 POP RETURNDATASIZE DUP4 GT PUSH2 0x118F JUMPI JUMPDEST PUSH2 0x1169 DUP2 DUP4 PUSH2 0x29CE JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x118B JUMPI MLOAD DUP4 DUP2 AND DUP2 SUB PUSH2 0x118B JUMPI DUP9 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 DUP9 SWAP2 PUSH2 0xDA7 PUSH2 0xD4A JUMP JUMPDEST DUP7 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x115F JUMP JUMPDEST DUP13 DUP11 DUP13 PUSH1 0x24 DUP10 PUSH2 0x11A5 DUP7 PUSH2 0x2AD0 JUMP JUMPDEST POP SLOAD AND SWAP4 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP4 MSTORE ADDRESS SWAP1 DUP4 ADD MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x1244 JUMPI DUP4 SWAP3 SWAP2 DUP15 SWAP2 DUP13 SWAP2 PUSH2 0x120D JUMPI JUMPDEST POP SWAP3 PUSH2 0x432 PUSH2 0x11FC SWAP3 PUSH1 0x1 SWAP6 PUSH2 0x2D72 JUMP JUMPDEST PUSH2 0x1206 DUP3 DUP12 PUSH2 0x2B9A JUMP JUMPDEST MSTORE ADD PUSH2 0xCE2 JUMP JUMPDEST SWAP4 POP POP POP DUP11 DUP3 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x123D JUMPI JUMPDEST PUSH2 0x1226 DUP2 DUP4 PUSH2 0x29CE JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x6B5 JUMPI SWAP1 MLOAD DUP3 SWAP2 SWAP1 DUP14 SWAP1 PUSH2 0x432 PUSH2 0x11EB JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x121C JUMP JUMPDEST DUP15 MLOAD RETURNDATASIZE DUP13 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x24 DUP9 PUSH1 0x11 DUP13 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP4 MSTORE MSTORE REVERT JUMPDEST PUSH1 0x64 DUP7 DUP7 DUP11 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F206C69717569646974790000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 DUP6 DUP6 DUP10 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5368617265206D7573742062652067726561746572207468616E203000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x78A JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x78A JUMPI PUSH2 0x136E PUSH2 0x2E80 JUMP JUMPDEST SWAP3 SWAP1 DUP2 MLOAD SWAP4 DUP3 DUP6 SWAP4 DUP5 ADD SWAP1 DUP5 MSTORE DUP3 MLOAD DUP1 SWAP2 MSTORE PUSH1 0x60 DUP5 ADD SWAP3 PUSH1 0x20 DUP1 SWAP2 ADD SWAP6 JUMPDEST DUP3 DUP2 LT PUSH2 0x13A7 JUMPI DUP6 DUP1 PUSH2 0x8DE DUP8 DUP8 DUP4 DUP3 SUB PUSH1 0x20 DUP6 ADD MSTORE PUSH2 0x28FA JUMP JUMPDEST DUP7 MLOAD ISZERO ISZERO DUP6 MSTORE SWAP6 DUP2 ADD SWAP6 DUP8 SWAP6 POP SWAP4 DUP2 ADD SWAP4 PUSH1 0x1 ADD PUSH2 0x138C JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x1E3 JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1E3 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x8 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x1332 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x786 JUMPI DUP1 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x14BE JUMPI PUSH2 0x1450 SWAP2 CALLDATASIZE SWAP2 ADD PUSH2 0x2A27 JUMP JUMPDEST SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 PUSH2 0x1476 DUP5 PUSH1 0xA SLOAD AND CALLER EQ PUSH2 0x2C59 JUMP JUMPDEST DUP5 JUMPDEST PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x14BA JUMPI DUP1 DUP6 PUSH2 0x148F PUSH1 0x1 SWAP4 PUSH2 0x2AD0 JUMP JUMPDEST POP SLOAD AND PUSH2 0x149C DUP3 DUP8 PUSH2 0x2B9A JUMP JUMPDEST MLOAD SWAP1 DUP9 MSTORE PUSH1 0xC DUP5 MSTORE PUSH2 0x14B2 DUP6 DUP10 KECCAK256 SWAP2 DUP3 SLOAD PUSH2 0x2E66 JUMP JUMPDEST SWAP1 SSTORE ADD PUSH2 0x1478 JUMP JUMPDEST DUP6 DUP1 RETURN JUMPDEST DUP5 DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x1E3 JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1E3 JUMPI PUSH1 0x20 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA SLOAD AND SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x1E3 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1E3 JUMPI DUP1 PUSH1 0x20 SWAP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x1567 PUSH2 0x28B4 JUMP JUMPDEST AND DUP2 MSTORE DUP1 DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x1332 JUMPI PUSH1 0x80 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1332 JUMPI PUSH2 0x15AF PUSH2 0x28B4 JUMP JUMPDEST SWAP3 PUSH2 0x15B8 PUSH2 0x28D7 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD PUSH1 0x64 CALLDATALOAD SWAP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP7 DUP8 DUP2 AND DUP2 SUB PUSH2 0x6B5 JUMPI PUSH1 0x2 PUSH1 0x5 SLOAD EQ PUSH2 0x1933 JUMPI PUSH1 0x2 PUSH1 0x5 SSTORE DUP8 DUP5 AND SWAP4 DUP9 DUP4 AND SWAP3 DUP6 DUP5 EQ PUSH2 0x18D6 JUMPI DUP5 ISZERO PUSH2 0x1879 JUMPI DUP9 MLOAD PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x80 DUP2 SWAP1 MSTORE CALLER DUP11 DUP4 ADD SWAP1 DUP2 MSTORE ADDRESS DUP2 DUP4 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP9 SWAP1 MSTORE DUP3 SWAP1 DUP2 SWAP1 PUSH1 0x60 ADD SUB DUP2 DUP12 DUP10 GAS CALL DUP1 ISZERO PUSH2 0x186F JUMPI SWAP2 PUSH2 0x1667 SWAP4 SWAP2 DUP8 SWAP4 PUSH2 0x184E JUMPI JUMPDEST POP PUSH2 0x2CBE JUMP JUMPDEST SWAP8 DUP8 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS DUP9 DUP3 ADD MSTORE PUSH1 0x80 MLOAD DUP2 PUSH1 0x24 DUP2 DUP10 GAS STATICCALL DUP1 ISZERO PUSH2 0x17E2 JUMPI DUP11 SWAP1 DUP9 SWAP1 PUSH2 0x1818 JUMPI JUMPDEST PUSH2 0x16B7 SWAP3 POP LT ISZERO PUSH2 0x2E01 JUMP JUMPDEST PUSH2 0x12C DUP1 DUP11 MUL SWAP1 DUP11 DUP3 DIV EQ DUP11 ISZERO OR ISZERO PUSH2 0x17EC JUMPI PUSH2 0x2710 PUSH2 0x16D8 SWAP2 DIV DUP11 PUSH2 0x2E66 JUMP JUMPDEST SWAP7 DUP9 MLOAD SWAP1 PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 DUP3 MSTORE DUP2 DUP1 PUSH2 0x1734 DUP12 DUP8 PUSH1 0x80 MLOAD SWAP6 DUP5 ADD PUSH1 0x20 SWAP1 SWAP4 SWAP3 SWAP2 SWAP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x40 DUP3 ADD SWAP6 AND DUP2 MSTORE ADD MSTORE JUMP JUMPDEST SUB DUP2 DUP11 DUP11 GAS CALL DUP1 ISZERO PUSH2 0x17E2 JUMPI SWAP4 PUSH2 0x17B0 SWAP8 SWAP6 SWAP4 PUSH32 0xCD3829A3813DC3CDD188FD3D01DCF3268C16BE2FDD2DD21D0665418816E46062 DUP12 DUP4 SWAP6 DUP11 SWAP9 SWAP6 DUP3 SWAP12 SWAP7 PUSH2 0x17C1 JUMPI JUMPDEST POP DUP2 MLOAD SWAP4 DUP9 DUP6 MSTORE DUP14 PUSH1 0x80 MLOAD DUP7 ADD MSTORE AND SWAP3 LOG4 DUP4 MSTORE PUSH1 0xC PUSH1 0x80 MLOAD MSTORE PUSH2 0x179D DUP5 DUP5 KECCAK256 SWAP2 DUP3 SLOAD PUSH2 0x2E73 JUMP JUMPDEST SWAP1 SSTORE DUP2 MSTORE PUSH1 0xC PUSH1 0x80 MLOAD MSTORE KECCAK256 SWAP2 DUP3 SLOAD PUSH2 0x2E73 JUMP JUMPDEST SWAP1 SSTORE PUSH1 0x1 PUSH1 0x5 SSTORE MLOAD SWAP1 DUP2 MSTORE PUSH1 0x80 MLOAD SWAP1 RETURN JUMPDEST PUSH2 0x17DB SWAP1 PUSH1 0x80 MLOAD RETURNDATASIZE PUSH1 0x80 MLOAD GT PUSH2 0xF99 JUMPI PUSH2 0xF8B DUP2 DUP4 PUSH2 0x29CE JUMP JUMPDEST POP PUSH0 PUSH2 0x1776 JUMP JUMPDEST DUP10 MLOAD RETURNDATASIZE DUP10 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x24 DUP8 PUSH1 0x11 DUP11 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP4 MSTORE MSTORE REVERT JUMPDEST POP POP PUSH1 0x80 MLOAD RETURNDATASIZE DUP2 GT PUSH2 0x1847 JUMPI JUMPDEST PUSH2 0x182F DUP2 DUP4 PUSH2 0x29CE JUMP JUMPDEST DUP2 PUSH1 0x80 MLOAD SWAP2 DUP2 ADD SUB SLT PUSH2 0x6B5 JUMPI DUP10 PUSH2 0x16B7 SWAP2 MLOAD PUSH2 0x16AB JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1825 JUMP JUMPDEST PUSH2 0x1868 SWAP1 PUSH1 0x80 MLOAD RETURNDATASIZE PUSH1 0x80 MLOAD GT PUSH2 0xF99 JUMPI PUSH2 0xF8B DUP2 DUP4 PUSH2 0x29CE JUMP JUMPDEST POP PUSH0 PUSH2 0x1661 JUMP JUMPDEST DUP11 MLOAD RETURNDATASIZE DUP11 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x64 DUP9 PUSH1 0x20 DUP12 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E207A65726F PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 DUP9 PUSH1 0x20 DUP12 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F742073776170207468652073616D6520746F6B656E000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP6 DUP8 MLOAD PUSH32 0x3EE5AEB500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x78A JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x78A JUMPI PUSH1 0x7 SLOAD PUSH2 0x1997 DUP2 PUSH2 0x2BAE JUMP JUMPDEST SWAP2 JUMPDEST DUP2 DUP2 LT PUSH2 0x19B5 JUMPI DUP4 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 SWAP1 PUSH2 0x8DE SWAP1 DUP3 ADD DUP7 PUSH2 0x2A87 JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x19D6 PUSH1 0x1 SWAP4 PUSH2 0x2AD0 JUMP JUMPDEST POP SLOAD AND PUSH2 0x19E3 DUP3 DUP7 PUSH2 0x2B9A JUMP JUMPDEST MSTORE ADD PUSH2 0x1999 JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x1E3 JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1E3 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH2 0x12C DUP2 MSTORE RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x6B5 JUMPI PUSH1 0x20 SWAP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC SWAP3 DUP3 DUP5 CALLDATASIZE ADD SLT PUSH2 0x6B5 JUMPI PUSH2 0x1A62 PUSH2 0x28B4 JUMP JUMPDEST SWAP2 PUSH2 0x1A73 PUSH2 0x1A6E PUSH2 0x2FEA JUMP JUMPDEST PUSH2 0x2B35 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x3E8 SWAP1 DUP2 DUP2 MUL SWAP2 DUP2 DUP4 DIV EQ SWAP1 ISZERO OR ISZERO PUSH2 0x1E0D JUMPI PUSH2 0x2710 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP6 AND PUSH0 MSTORE PUSH0 DUP7 MSTORE DIV DUP3 PUSH0 KECCAK256 SLOAD LT PUSH2 0x1DB2 JUMPI PUSH1 0x7 SWAP5 PUSH1 0x7 SLOAD PUSH2 0x1AC4 DUP2 PUSH2 0x2BAE JUMP JUMPDEST SWAP2 PUSH2 0x1ACE DUP3 PUSH2 0x2BAE JUMP JUMPDEST SWAP2 PUSH0 JUMPDEST DUP2 DUP2 LT PUSH2 0x1D79 JUMPI POP POP DUP6 PUSH1 0xA SLOAD AND DUP1 EXTCODESIZE ISZERO PUSH2 0x6B5 JUMPI PUSH0 DUP1 SWAP2 DUP7 DUP9 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH32 0xFE11011600000000000000000000000000000000000000000000000000000000 DUP4 MSTORE GAS CALL DUP1 ISZERO PUSH2 0x1D6F JUMPI PUSH2 0x1D5A JUMPI JUMPDEST POP SWAP1 DUP9 SWAP2 DUP7 PUSH1 0x6 SLOAD AND PUSH1 0x8 SLOAD SWAP1 DUP9 PUSH1 0xB SLOAD AND DUP2 EXTCODESIZE ISZERO PUSH2 0x1D56 JUMPI DUP9 MLOAD PUSH32 0x325192D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0xC0 DUP2 DUP11 ADD MSTORE SWAP5 DUP7 SWAP5 DUP7 SWAP5 DUP6 SWAP4 DUP8 SWAP4 DUP6 SWAP4 PUSH2 0x1B8F SWAP2 PUSH2 0x1B80 PUSH1 0xC4 DUP8 ADD DUP16 PUSH2 0x2A87 JUMP JUMPDEST SWAP2 DUP7 DUP4 SUB ADD PUSH1 0x24 DUP8 ADD MSTORE PUSH2 0x28FA JUMP JUMPDEST SWAP2 ADDRESS PUSH1 0x44 DUP6 ADD MSTORE ADDRESS PUSH1 0x64 DUP6 ADD MSTORE PUSH1 0x84 DUP5 ADD MSTORE PUSH1 0xA4 DUP4 ADD MSTORE SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x1D4C JUMPI PUSH2 0x1D38 JUMPI JUMPDEST POP JUMPDEST DUP7 SLOAD DUP2 LT ISZERO PUSH2 0x1CFA JUMPI DUP5 PUSH2 0x1BCA DUP3 PUSH2 0x2AD0 JUMP JUMPDEST POP SLOAD AND DUP5 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS DUP6 DUP3 ADD MSTORE DUP8 DUP2 PUSH1 0x24 DUP2 DUP6 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x1CF0 JUMPI SWAP1 DUP9 SWAP2 DUP12 SWAP2 PUSH2 0x1CBF JUMPI JUMPDEST POP DUP3 PUSH2 0x1C7D SWAP4 DUP13 MSTORE PUSH1 0xC DUP4 MSTORE DUP2 DUP9 DUP14 KECCAK256 SSTORE DUP9 PUSH1 0xA SLOAD AND DUP13 DUP10 MLOAD DUP1 SWAP7 DUP2 SWAP6 DUP3 SWAP5 PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 DUP5 MSTORE DUP13 DUP5 ADD PUSH1 0x20 SWAP1 SWAP4 SWAP3 SWAP2 SWAP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x40 DUP3 ADD SWAP6 AND DUP2 MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x1CB5 JUMPI SWAP1 PUSH1 0x1 SWAP3 SWAP2 PUSH2 0x1C98 JUMPI JUMPDEST POP ADD PUSH2 0x1BB7 JUMP JUMPDEST PUSH2 0x1CAE SWAP1 DUP9 RETURNDATASIZE DUP11 GT PUSH2 0xF99 JUMPI PUSH2 0xF8B DUP2 DUP4 PUSH2 0x29CE JUMP JUMPDEST POP PUSH0 PUSH2 0x1C91 JUMP JUMPDEST DUP6 MLOAD RETURNDATASIZE DUP12 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP3 DUP2 SWAP4 SWAP3 POP RETURNDATASIZE DUP4 GT PUSH2 0x1CE9 JUMPI JUMPDEST PUSH2 0x1CD6 DUP2 DUP4 PUSH2 0x29CE JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x6B5 JUMPI MLOAD DUP8 SWAP1 PUSH2 0x1C7D PUSH2 0x1C10 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1CCC JUMP JUMPDEST DUP7 MLOAD RETURNDATASIZE DUP13 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP4 MLOAD DUP7 DUP2 MSTORE DUP9 SWAP1 CALLER SWAP1 PUSH32 0x279B343370F587AF7FB675AE7C8578E9C8ABCC373236AD02C501A4771FE7A7B8 SWAP1 DUP1 PUSH2 0x1D32 DUP2 DUP13 ADD DUP9 PUSH2 0x2A87 JUMP JUMPDEST SUB SWAP1 LOG2 DUP1 RETURN JUMPDEST PUSH2 0x1D41 SWAP1 PUSH2 0x298D JUMP JUMPDEST PUSH2 0x118B JUMPI DUP7 PUSH0 PUSH2 0x1BB5 JUMP JUMPDEST DUP6 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP6 DUP1 REVERT JUMPDEST PUSH2 0x1D66 SWAP2 SWAP3 SWAP10 POP PUSH2 0x298D JUMP JUMPDEST PUSH0 SWAP8 SWAP1 PUSH0 PUSH2 0x1B20 JUMP JUMPDEST DUP7 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP1 DUP9 PUSH2 0x1D86 PUSH1 0x1 SWAP4 PUSH2 0x2AD0 JUMP JUMPDEST POP SLOAD AND PUSH2 0x1D93 DUP3 DUP9 PUSH2 0x2B9A JUMP JUMPDEST MSTORE DUP2 PUSH2 0x1D9E DUP3 PUSH2 0x2AD0 JUMP JUMPDEST POP ADD SLOAD PUSH2 0x1DAB DUP3 DUP8 PUSH2 0x2B9A JUMP JUMPDEST MSTORE ADD PUSH2 0x1AD1 JUMP JUMPDEST DUP4 PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E646572203525204C50207368617265000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x11 DUP3 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP3 CALLVALUE PUSH2 0x6B5 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x1DC PUSH2 0x1E4E CALLDATASIZE PUSH2 0x292D JUMP JUMPDEST SWAP2 PUSH2 0x2CBE JUMP JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x6B5 JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x6B5 JUMPI DUP1 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x6B5 JUMPI PUSH2 0x1EA2 SWAP2 CALLDATASIZE SWAP2 ADD PUSH2 0x2A27 JUMP JUMPDEST SWAP1 PUSH1 0x24 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x6B5 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 PUSH2 0x1ED4 DUP5 PUSH1 0xA SLOAD AND CALLER EQ PUSH2 0x2C59 JUMP JUMPDEST PUSH0 JUMPDEST PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x1F3C JUMPI DUP1 DUP6 PUSH2 0x1EED PUSH1 0x1 SWAP4 PUSH2 0x2AD0 JUMP JUMPDEST POP SLOAD AND PUSH2 0x1EFA DUP3 DUP6 PUSH2 0x2B9A JUMP JUMPDEST MLOAD SWAP1 DUP6 ISZERO PUSH2 0x1F20 JUMPI PUSH0 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH2 0x1F17 DUP7 PUSH0 KECCAK256 SWAP2 DUP3 SLOAD PUSH2 0x2E73 JUMP JUMPDEST SWAP1 SSTORE JUMPDEST ADD PUSH2 0x1ED6 JUMP JUMPDEST PUSH0 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH2 0x1F35 DUP7 PUSH0 KECCAK256 SWAP2 DUP3 SLOAD PUSH2 0x2E66 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x1F1A JUMP JUMPDEST STOP JUMPDEST DUP3 CALLVALUE PUSH2 0x6B5 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x6B5 JUMPI PUSH2 0x8DE PUSH2 0x1F78 PUSH2 0x306B JUMP JUMPDEST DUP4 SWAP3 SWAP2 SWAP3 MLOAD SWAP4 DUP5 SWAP4 DUP5 MSTORE DUP1 PUSH1 0x20 DUP6 ADD MSTORE DUP4 ADD SWAP1 PUSH2 0x28FA JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x6B5 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x6B5 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH1 0x12 DUP2 MSTORE RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x6B5 JUMPI PUSH2 0x1FD9 CALLDATASIZE PUSH2 0x292D JUMP JUMPDEST SWAP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 SWAP3 SWAP4 AND DUP1 PUSH0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE DUP6 PUSH0 KECCAK256 CALLER PUSH0 MSTORE PUSH1 0x20 MSTORE DUP6 PUSH0 KECCAK256 SLOAD SWAP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 SUB PUSH2 0x203F JUMPI JUMPDEST PUSH1 0x20 DUP8 PUSH2 0xA76 DUP9 DUP9 DUP9 PUSH2 0x31B2 JUMP JUMPDEST DUP6 DUP4 LT PUSH2 0x20D9 JUMPI DUP2 ISZERO PUSH2 0x20AA JUMPI CALLER ISZERO PUSH2 0x207B JUMPI POP PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE DUP7 DUP3 KECCAK256 CALLER DUP4 MSTORE DUP2 MSTORE SWAP1 DUP7 SWAP1 KECCAK256 SWAP2 DUP6 SWAP1 SUB SWAP1 SWAP2 SSTORE DUP3 SWAP1 PUSH2 0xA76 PUSH2 0x2031 JUMP JUMPDEST PUSH1 0x24 SWAP1 PUSH0 DUP9 MLOAD SWAP2 PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x24 SWAP1 PUSH0 DUP9 MLOAD SWAP2 PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST DUP7 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER SWAP2 DUP2 ADD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 DUP2 ADD DUP7 SWAP1 MSTORE DUP3 SWAP2 POP PUSH1 0x60 ADD SUB SWAP1 REVERT JUMPDEST DUP3 CALLVALUE PUSH2 0x6B5 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x6B5 JUMPI PUSH1 0x7 SLOAD PUSH2 0x2159 DUP2 PUSH2 0x2BAE JUMP JUMPDEST SWAP1 PUSH0 JUMPDEST DUP2 DUP2 LT PUSH2 0x2178 JUMPI DUP4 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 SWAP1 PUSH2 0x8DE SWAP1 DUP3 ADD DUP7 PUSH2 0x28FA JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH2 0x2185 DUP2 SWAP4 PUSH2 0x2AD0 JUMP JUMPDEST POP ADD SLOAD PUSH2 0x2192 DUP3 DUP7 PUSH2 0x2B9A JUMP JUMPDEST MSTORE ADD PUSH2 0x215C JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x6B5 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x6B5 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x21D3 PUSH2 0x306B JUMP JUMPDEST POP SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x6B5 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x6B5 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x2 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x6B5 JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x6B5 JUMPI PUSH2 0x224E PUSH2 0x28B4 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER ISZERO PUSH2 0x22ED JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 ISZERO PUSH2 0x22BE JUMPI PUSH1 0x20 SWAP4 POP CALLER PUSH0 MSTORE PUSH1 0x1 DUP5 MSTORE DUP3 PUSH0 KECCAK256 DUP3 PUSH0 MSTORE DUP5 MSTORE DUP1 DUP4 PUSH0 KECCAK256 SSTORE DUP3 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 CALLER SWAP3 LOG3 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x24 DUP5 PUSH0 DUP6 MLOAD SWAP2 PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x24 DUP5 PUSH0 DUP6 MLOAD SWAP2 PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST DUP3 CALLVALUE PUSH2 0x6B5 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x6B5 JUMPI PUSH2 0x8DE SWAP1 PUSH2 0x2357 PUSH2 0x2BFD JUMP JUMPDEST SWAP1 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x28FA JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x6B5 JUMPI PUSH1 0x20 SWAP1 DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x6B5 JUMPI PUSH2 0x23A4 PUSH2 0x28B4 JUMP JUMPDEST SWAP2 PUSH2 0x23B0 PUSH2 0x1A6E PUSH2 0x2FEA JUMP JUMPDEST PUSH2 0x23B8 PUSH2 0x306B JUMP JUMPDEST SWAP5 SWAP1 PUSH1 0x7 SLOAD SWAP1 PUSH2 0x23C7 DUP3 PUSH2 0x2BAE JUMP JUMPDEST SWAP7 PUSH0 JUMPDEST DUP4 DUP2 LT PUSH2 0x2680 JUMPI POP POP POP PUSH0 SWAP1 PUSH0 SWAP1 JUMPDEST DUP1 DUP3 LT PUSH2 0x265F JUMPI POP POP PUSH0 JUMPDEST DUP7 MLOAD DUP2 LT ISZERO PUSH2 0x2618 JUMPI PUSH2 0x23F7 DUP2 DUP9 PUSH2 0x2B9A JUMP JUMPDEST MLOAD PUSH2 0x2405 JUMPI JUMPDEST PUSH1 0x1 ADD PUSH2 0x23E4 JUMP JUMPDEST PUSH2 0x248A PUSH2 0x2412 DUP3 DUP10 PUSH2 0x2B9A JUMP JUMPDEST MLOAD DUP6 PUSH2 0x241D DUP5 PUSH2 0x2AD0 JUMP JUMPDEST POP SLOAD PUSH1 0x6 SLOAD PUSH1 0xB SLOAD DUP11 MLOAD PUSH32 0x248391FF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 AND DUP11 DUP3 ADD SWAP1 DUP2 MSTORE SWAP4 DUP3 AND PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x40 DUP5 ADD SWAP6 SWAP1 SWAP6 MSTORE SWAP4 SWAP5 DUP6 SWAP3 SWAP2 DUP6 AND SWAP2 DUP4 SWAP2 DUP3 SWAP2 PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x260E JUMPI PUSH0 SWAP3 PUSH2 0x25DF JUMPI JUMPDEST POP DUP2 ISZERO PUSH2 0x2583 JUMPI PUSH2 0x251C DUP7 DUP4 DUP4 PUSH2 0x24B2 DUP8 PUSH2 0x2AD0 JUMP JUMPDEST POP SLOAD AND DUP5 PUSH1 0xA SLOAD AND PUSH0 DUP11 DUP14 MLOAD SWAP7 DUP8 SWAP6 DUP7 SWAP5 DUP6 SWAP4 PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 DUP6 MSTORE CALLER SWAP1 DUP6 ADD PUSH1 0x40 SWAP2 SWAP5 SWAP4 SWAP3 SWAP5 PUSH1 0x60 DUP3 ADD SWAP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP3 AND DUP4 MSTORE AND PUSH1 0x20 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x2579 JUMPI SWAP1 PUSH1 0x1 SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0x255C JUMPI JUMPDEST POP PUSH2 0x253C DUP4 PUSH2 0x2AD0 JUMP JUMPDEST POP SLOAD AND PUSH0 MSTORE PUSH1 0xC DUP7 MSTORE PUSH2 0x2553 DUP8 PUSH0 KECCAK256 SWAP2 DUP3 SLOAD PUSH2 0x2E73 JUMP JUMPDEST SWAP1 SSTORE SWAP1 POP PUSH2 0x23FD JUMP JUMPDEST PUSH2 0x2572 SWAP1 DUP9 RETURNDATASIZE DUP11 GT PUSH2 0xF99 JUMPI PUSH2 0xF8B DUP2 DUP4 PUSH2 0x29CE JUMP JUMPDEST POP DUP11 PUSH2 0x2532 JUMP JUMPDEST DUP9 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x64 DUP6 DUP8 DUP10 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420746F6B656E20616D6F756E7420746F206164640000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 SWAP2 POP DUP6 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x2607 JUMPI JUMPDEST PUSH2 0x25F7 DUP2 DUP4 PUSH2 0x29CE JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x6B5 JUMPI MLOAD SWAP1 DUP10 PUSH2 0x249C JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x25ED JUMP JUMPDEST DUP8 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP4 PUSH32 0xA95AD530009C6F929555E70A66AADBEAE7231E45756C5B028CA77FBAA376E73E PUSH2 0x265A DUP10 DUP9 PUSH2 0x2649 DUP8 DUP13 PUSH2 0x3118 JUMP JUMPDEST MLOAD SWAP2 DUP3 SWAP2 DUP6 DUP4 MSTORE CALLER SWAP6 DUP4 ADD SWAP1 PUSH2 0x28FA JUMP JUMPDEST SUB SWAP1 LOG2 STOP JUMPDEST SWAP1 SWAP2 PUSH2 0x2678 PUSH1 0x1 SWAP2 PUSH2 0x2671 DUP6 DUP12 PUSH2 0x2B9A JUMP JUMPDEST MLOAD SWAP1 PUSH2 0x2E73 JUMP JUMPDEST SWAP3 ADD SWAP1 PUSH2 0x23D9 JUMP JUMPDEST DUP1 PUSH2 0x2710 PUSH2 0x269C PUSH1 0x1 PUSH2 0x2693 DUP2 SWAP6 PUSH2 0x2AD0 JUMP JUMPDEST POP ADD SLOAD DUP7 PUSH2 0x2D72 JUMP JUMPDEST DIV DUP1 PUSH2 0x26A8 DUP4 DUP7 PUSH2 0x2B9A JUMP JUMPDEST MLOAD LT PUSH2 0x26B6 JUMPI JUMPDEST POP ADD PUSH2 0x23CA JUMP JUMPDEST PUSH2 0x26C4 SWAP1 PUSH2 0x5A9 DUP4 DUP7 PUSH2 0x2B9A JUMP JUMPDEST PUSH2 0x26CE DUP3 DUP13 PUSH2 0x2B9A JUMP JUMPDEST MSTORE DUP11 PUSH2 0x26AF JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x6B5 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x6B5 JUMPI DUP1 MLOAD SWAP1 PUSH0 SWAP3 PUSH1 0x3 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 SHR SWAP2 PUSH1 0x1 DUP2 AND DUP1 ISZERO PUSH2 0x2814 JUMPI JUMPDEST PUSH1 0x20 SWAP5 DUP6 DUP6 LT DUP3 EQ PUSH2 0x27E8 JUMPI POP DUP4 DUP8 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x27AA JUMPI POP PUSH1 0x1 EQ PUSH2 0x2750 JUMPI JUMPDEST POP POP POP PUSH2 0xAF9 DUP3 PUSH2 0x8DE SWAP5 SUB DUP4 PUSH2 0x29CE JUMP JUMPDEST PUSH1 0x3 PUSH0 SWAP1 DUP2 MSTORE SWAP3 SWAP6 POP PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B JUMPDEST DUP3 DUP5 LT PUSH2 0x2797 JUMPI POP POP POP DUP3 PUSH2 0x8DE SWAP5 PUSH2 0xAF9 SWAP3 DUP3 ADD ADD SWAP5 PUSH2 0x273E JUMP JUMPDEST DUP1 SLOAD DUP7 DUP6 ADD DUP9 ADD MSTORE SWAP3 DUP7 ADD SWAP3 DUP2 ADD PUSH2 0x277B JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND DUP7 DUP6 ADD MSTORE POP POP ISZERO ISZERO PUSH1 0x5 SHL DUP4 ADD ADD SWAP3 POP PUSH2 0xAF9 DUP3 PUSH2 0x8DE PUSH2 0x273E JUMP JUMPDEST PUSH1 0x22 SWAP1 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP3 PUSH1 0x7F AND SWAP3 PUSH2 0x271E JUMP JUMPDEST CALLVALUE PUSH2 0x6B5 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x6B5 JUMPI PUSH1 0x20 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x6 SLOAD AND DUP2 MSTORE RETURN JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F PUSH1 0x20 PUSH1 0x40 SWAP5 DUP2 DUP6 MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP2 DUP3 DUP3 DUP9 ADD MSTORE ADD DUP7 DUP7 ADD MCOPY PUSH0 DUP6 DUP3 DUP7 ADD ADD MSTORE ADD AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x6B5 JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x6B5 JUMPI JUMP JUMPDEST SWAP1 DUP2 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP1 SWAP4 ADD SWAP4 ADD SWAP2 PUSH0 JUMPDEST DUP3 DUP2 LT PUSH2 0x2919 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x290B JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC PUSH1 0x60 SWAP2 ADD SLT PUSH2 0x6B5 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 PUSH1 0x4 CALLDATALOAD DUP3 DUP2 AND DUP2 SUB PUSH2 0x6B5 JUMPI SWAP2 PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 AND DUP2 SUB PUSH2 0x6B5 JUMPI SWAP1 PUSH1 0x44 CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x29A1 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP1 PUSH1 0x1F PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x29A1 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x29A1 JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x6B5 JUMPI PUSH1 0x20 SWAP1 DUP3 CALLDATALOAD PUSH2 0x2A41 DUP2 PUSH2 0x2A0F JUMP JUMPDEST SWAP4 PUSH2 0x2A4F PUSH1 0x40 MLOAD SWAP6 DUP7 PUSH2 0x29CE JUMP JUMPDEST DUP2 DUP6 MSTORE PUSH1 0x20 DUP1 DUP7 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x6B5 JUMPI PUSH1 0x20 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x2A78 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE SWAP1 DUP4 ADD SWAP1 DUP4 ADD PUSH2 0x2A6A JUMP JUMPDEST SWAP1 DUP2 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP1 SWAP4 ADD SWAP4 ADD SWAP2 PUSH0 JUMPDEST DUP3 DUP2 LT PUSH2 0x2AA6 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x2A98 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x2B08 JUMPI PUSH1 0x7 PUSH0 MSTORE PUSH1 0x1 SHL PUSH32 0xA66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C688 ADD SWAP1 PUSH0 SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ISZERO PUSH2 0x2B3C JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526562616C616E6365206E6F74206E6565646564000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x2B08 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x2BB8 DUP3 PUSH2 0x2A0F JUMP JUMPDEST PUSH2 0x2BC5 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x29CE JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH2 0x2BF3 DUP3 SWAP5 PUSH2 0x2A0F JUMP JUMPDEST ADD SWAP1 PUSH1 0x20 CALLDATASIZE SWAP2 ADD CALLDATACOPY JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x2C09 DUP2 PUSH2 0x2BAE JUMP JUMPDEST SWAP1 PUSH0 JUMPDEST DUP2 DUP2 LT PUSH2 0x2C18 JUMPI POP POP SWAP1 JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x2C39 PUSH1 0x1 SWAP4 PUSH2 0x2AD0 JUMP JUMPDEST POP SLOAD AND PUSH0 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SLOAD PUSH2 0x2C52 DUP3 DUP7 PUSH2 0x2B9A JUMP JUMPDEST MSTORE ADD PUSH2 0x2C0C JUMP JUMPDEST ISZERO PUSH2 0x2C60 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920506572697068657279000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH32 0x248391FF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP3 DUP3 AND PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x44 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP1 SWAP2 PUSH1 0x20 SWAP2 DUP4 SWAP2 AND DUP2 DUP1 PUSH1 0x64 DUP2 ADD JUMPDEST SUB SWAP2 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x2D67 JUMPI PUSH0 SWAP2 PUSH2 0x2D38 JUMPI POP SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x2D5F JUMPI JUMPDEST DUP2 PUSH2 0x2D53 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x29CE JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x6B5 JUMPI MLOAD SWAP1 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x2D46 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x2D85 JUMPI JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x2DBC JUMPI DIV SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x6B5 JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x6B5 JUMPI SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x2E08 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E74204C697175696469747900000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x2D85 JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x2D85 JUMPI JUMP JUMPDEST PUSH2 0x2E88 PUSH2 0x306B JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x7 SLOAD SWAP1 PUSH2 0x2E97 DUP3 PUSH2 0x2A0F JUMP JUMPDEST SWAP2 PUSH2 0x2EA5 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x29CE JUMP JUMPDEST DUP1 DUP4 MSTORE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH2 0x2ED2 DUP3 PUSH2 0x2A0F JUMP JUMPDEST ADD CALLDATASIZE PUSH1 0x20 DUP6 ADD CALLDATACOPY PUSH2 0x2EE2 DUP2 PUSH2 0x2BAE JUMP JUMPDEST SWAP5 PUSH0 JUMPDEST DUP3 DUP2 LT PUSH2 0x2EF4 JUMPI POP POP POP POP SWAP2 SWAP1 JUMP JUMPDEST PUSH2 0x2EFE DUP2 DUP4 PUSH2 0x2B9A JUMP JUMPDEST MLOAD SWAP1 PUSH2 0x2710 SWAP2 DUP3 DUP2 MUL SWAP3 DUP2 DUP5 DIV EQ SWAP1 ISZERO OR ISZERO PUSH2 0x2D85 JUMPI PUSH2 0x2F20 DUP6 PUSH1 0x1 SWAP4 PUSH2 0x2DB2 JUMP JUMPDEST PUSH2 0x2F29 DUP3 PUSH2 0x2AD0 JUMP JUMPDEST POP DUP4 ADD SLOAD DUP4 SWAP2 DUP2 DUP2 GT ISZERO PUSH2 0x2F5E JUMPI SWAP1 PUSH2 0x2F41 SWAP2 PUSH2 0x2E66 JUMP JUMPDEST PUSH2 0x2F4B DUP4 DUP12 PUSH2 0x2B9A JUMP JUMPDEST MSTORE PUSH2 0x2F56 DUP3 DUP9 PUSH2 0x2B9A JUMP JUMPDEST MSTORE JUMPDEST ADD PUSH2 0x2EE5 JUMP JUMPDEST SWAP1 PUSH2 0x2F69 SWAP3 POP PUSH2 0x2E66 JUMP JUMPDEST PUSH2 0x2F73 DUP3 DUP11 PUSH2 0x2B9A JUMP JUMPDEST MSTORE PUSH0 PUSH2 0x2F7F DUP3 DUP9 PUSH2 0x2B9A JUMP JUMPDEST MSTORE PUSH2 0x2F58 JUMP JUMPDEST ISZERO PUSH2 0x2F8C JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E74206C697175696469747900000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH2 0x2FF2 PUSH2 0x2E80 JUMP JUMPDEST PUSH0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x3039 JUMPI PUSH2 0x3007 DUP2 DUP5 PUSH2 0x2B9A JUMP JUMPDEST MLOAD ISZERO ISZERO DUP1 PUSH2 0x3024 JUMPI JUMPDEST PUSH2 0x301C JUMPI PUSH1 0x1 ADD PUSH2 0x2FF4 JUMP JUMPDEST POP POP POP PUSH1 0x1 SWAP1 JUMP JUMPDEST POP PUSH2 0x302F DUP2 DUP4 PUSH2 0x2B9A JUMP JUMPDEST MLOAD PUSH1 0x8 SLOAD LT PUSH2 0x3010 JUMP JUMPDEST POP POP POP PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x3048 PUSH2 0x306B JUMP JUMPDEST POP PUSH1 0x2 SLOAD DUP1 ISZERO PUSH2 0x3065 JUMPI PUSH2 0x432 PUSH2 0x3062 SWAP3 PUSH1 0x9 SLOAD SWAP1 PUSH2 0x2D72 JUMP JUMPDEST SWAP1 JUMP JUMPDEST POP POP PUSH0 SWAP1 JUMP JUMPDEST PUSH1 0x7 SLOAD SWAP1 PUSH0 PUSH2 0x3079 DUP4 PUSH2 0x2BAE JUMP JUMPDEST SWAP3 PUSH0 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 PUSH1 0xB SLOAD AND SWAP1 JUMPDEST DUP3 DUP5 LT PUSH2 0x30A7 JUMPI POP POP POP POP SWAP2 SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 PUSH2 0x30E7 PUSH1 0x1 SWAP2 DUP4 PUSH2 0x30BB DUP9 PUSH2 0x2AD0 JUMP JUMPDEST POP SLOAD AND DUP6 DUP2 SUB PUSH2 0x30F1 JUMPI PUSH0 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SLOAD PUSH2 0x30DB DUP9 DUP12 PUSH2 0x2B9A JUMP JUMPDEST MSTORE JUMPDEST PUSH2 0x2671 DUP8 DUP11 PUSH2 0x2B9A JUMP JUMPDEST SWAP5 ADD SWAP3 SWAP2 SWAP1 PUSH2 0x3098 JUMP JUMPDEST DUP1 PUSH2 0x3108 SWAP2 PUSH0 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SLOAD SWAP1 PUSH2 0x32BF JUMP JUMPDEST PUSH2 0x3112 DUP9 DUP12 PUSH2 0x2B9A JUMP JUMPDEST MSTORE PUSH2 0x30DD JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 ISZERO PUSH2 0x3182 JUMPI PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x20 DUP3 PUSH2 0x3166 PUSH0 SWAP5 PUSH1 0x2 SLOAD PUSH2 0x2E73 JUMP JUMPDEST PUSH1 0x2 SSTORE DUP5 DUP5 MSTORE DUP4 DUP3 MSTORE PUSH1 0x40 DUP5 KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x24 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP5 AND SWAP3 DUP4 ISZERO PUSH2 0x328F JUMPI AND SWAP3 DUP4 ISZERO PUSH2 0x3182 JUMPI DUP3 PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SLOAD SWAP1 DUP3 DUP3 LT PUSH2 0x3237 JUMPI POP DUP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 PUSH1 0x20 SWAP3 DUP6 PUSH0 MSTORE PUSH0 DUP5 MSTORE SUB PUSH1 0x40 PUSH0 KECCAK256 SSTORE DUP5 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x24 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x6 SLOAD PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH32 0x248391FF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP4 DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP1 DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x20 SWAP2 DUP4 SWAP2 AND DUP2 DUP1 PUSH1 0x64 DUP2 ADD PUSH2 0x2D23 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC8 COINBASE BASEFEE LT 0xC3 PUSH14 0xC329497F0BF640C364C1D29C54D4 DUP1 PUSH17 0xBA851498E68EF0072A6864736F6C634300 ADDMOD NOT STOP CALLER ","sourceMap":"1729:21398:15:-:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;1729:21398:15;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1729:21398:15;;;;-1:-1:-1;;;;;1729:21398:15;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;-1:-1:-1;;;1729:21398:15;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;1729:21398:15;;;;;;;-1:-1:-1;;;;;1729:21398:15;;;;1962:13:8;1729:21398:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1729:21398:15;;;;;;;;;;;;;1962:13:8;1729:21398:15;;;;;1962:13:8;1729:21398:15;;;;;-1:-1:-1;;;;;1729:21398:15;;;;1985:17:8;1729:21398:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1729:21398:15;;;;;;;;;;;;;1962:13:8;1729:21398:15;;;;;1985:17:8;1729:21398:15;;;;;2743:22;1729:21398;;-1:-1:-1;;;;;;1729:21398:15;;;-1:-1:-1;;;;;1729:21398:15;;;;;;;2772:45;1729:21398;;;;;;;;;;;;;;2830:4;1729:21398;;;;;;3694:33;1729:21398;;-1:-1:-1;3815:3:15;1729:21398;;3795:18;;;;;-1:-1:-1;;;;;3837:10:15;;;;:::i;:::-;1729:21398;;3837:24;1729:21398;;3904:11;;;;:::i;:::-;1729:21398;3904:15;1729:21398;;-1:-1:-1;;;;;3983:10:15;;;;:::i;:::-;1729:21398;;4003:11;;;;:::i;:::-;1729:21398;;;;;;;;-1:-1:-1;;;;;;;;1729:21398:15;;;;;;;;;;;;;;3965:51;;1729:21398;3949:10;1729:21398;;;;;;;;;;;3949:10;1729:21398;;;;;;3949:10;-1:-1:-1;1729:21398:15;;;;;;;;;;;;;;-1:-1:-1;;;;;1729:21398:15;;;-1:-1:-1;;;;;;1729:21398:15;;;;;;;3965:51;;;1729:21398;;;;;;4050:10;;;;:::i;:::-;1729:21398;;;;;;;2772:45;1729:21398;;;;;;;4074:51;;4098:4;1985:17:8;4074:51:15;;1729:21398;;;;;;;4074:51;1729:21398;4074:51;;;;;;;;;-1:-1:-1;4074:51:15;;;3815:3;4074:56;;4070:136;;3815:3;;;1729:21398;;3780:13;;4070:136;-1:-1:-1;1729:21398:15;;;;;;;;;;;;;;4143:53;;1985:17:8;4143:53:15;;1729:21398;;;;;;;4143:53;;;;;;;;4070:136;;;;4143:53;1729:21398;4143:53;;1729:21398;4143:53;;;;;;1729:21398;4143:53;;;:::i;:::-;;;1729:21398;;;;;;;;;;;4143:53;;;1729:21398;-1:-1:-1;1729:21398:15;;4143:53;;;-1:-1:-1;4143:53:15;;;1729:21398;;;-1:-1:-1;1729:21398:15;;;;;4074:51;;;1729:21398;4074:51;;1729:21398;4074:51;;;;;;1729:21398;4074:51;;;:::i;:::-;;;1729:21398;;;;;4074:51;;;;;;-1:-1:-1;4074:51:15;;1729:21398;;;;-1:-1:-1;1729:21398:15;;1985:17:8;1729:21398:15;;-1:-1:-1;1729:21398:15;;;;;-1:-1:-1;1729:21398:15;;1985:17:8;1729:21398:15;;-1:-1:-1;1729:21398:15;;;;-1:-1:-1;;;1729:21398:15;;;1985:17:8;1729:21398:15;;;;;;;;-1:-1:-1;;;1729:21398:15;;;;;;;;;;-1:-1:-1;;;1729:21398:15;;;1985:17:8;1729:21398:15;;;;;;;;;;;;;;;;3795:18;-1:-1:-1;2887:18:15;1729:21398;;;;;-1:-1:-1;;;2926:49:15;;1729:21398;;;;;1985:17:8;;1729:21398:15;;-1:-1:-1;;;;;1729:21398:15;2926:49;;;;;;;-1:-1:-1;2926:49:15;;;3775:438;-1:-1:-1;2914:61:15;1729:21398;;-1:-1:-1;;;;;;1729:21398:15;-1:-1:-1;;;;;1729:21398:15;;;;;;;;;;-1:-1:-1;;;3172:3:15;1729:21398;;3151:19;;;;;3201:11;;;;:::i;:::-;1729:21398;;;;;;;;;3186:26;3172:3;1729:21398;3136:13;;;1729:21398;;;;-1:-1:-1;1729:21398:15;;1985:17:8;1729:21398:15;;-1:-1:-1;1729:21398:15;3151:19;3249:5;3234:20;1729:21398;;;;;;;;;;;;;;-1:-1:-1;;;1729:21398:15;;;1985:17:8;1729:21398:15;;;;;;;;-1:-1:-1;;;1729:21398:15;;;;;;;2926:49;;;1729:21398;2926:49;;1729:21398;2926:49;;;;;;1729:21398;2926:49;;;:::i;:::-;;;1729:21398;;;;;;;:::i;:::-;2926:49;;;;;;-1:-1:-1;2926:49:15;;1729:21398;;;-1:-1:-1;;;1729:21398:15;;;1985:17:8;1729:21398:15;;;;;;;;;;;;;-1:-1:-1;;;1729:21398:15;;;;;;;;;;;-1:-1:-1;1729:21398:15;;;;;1985:17:8;-1:-1:-1;1729:21398:15;;;;;-1:-1:-1;;;1729:21398:15;;;;;;;;;;;;;;;;;;;;;;;;;;;1985:17:8;1729:21398:15;;;;;;;;;;1962:13:8;1729:21398:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1985:17:8;-1:-1:-1;1729:21398:15;;;-1:-1:-1;1729:21398:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1729:21398:15;;;;-1:-1:-1;1729:21398:15;;;;;;;-1:-1:-1;1729:21398:15;;;;;;;;-1:-1:-1;1729:21398:15;;1985:17:8;1729:21398:15;;-1:-1:-1;1729:21398:15;;;;;;;;;;;;-1:-1:-1;1729:21398:15;;;;;1962:13:8;-1:-1:-1;1729:21398:15;;;-1:-1:-1;;1729:21398:15;;;;-1:-1:-1;;1729:21398:15;;;;;;;;;;;;;;;;;;;;;;;;1962:13:8;1729:21398:15;;;;;;;;;;1962:13:8;1729:21398:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1962:13:8;-1:-1:-1;1729:21398:15;;;-1:-1:-1;1729:21398:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1729:21398:15;;;;-1:-1:-1;1729:21398:15;;;;;;;-1:-1:-1;1729:21398:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1729:21398:15;;;;;;;:::o;:::-;;;;;-1:-1:-1;;1729:21398:15;;;;-1:-1:-1;;;;;1729:21398:15;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;1729:21398:15;;;;;;:::o;:::-;-1:-1:-1;;;;;1729:21398:15;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":10420,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_address_25154":{"entryPoint":10455,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_addresst_addresst_uint256":{"entryPoint":10541,"id":null,"parameterSlots":1,"returnSlots":3},"abi_decode_array_uint256_dyn":{"entryPoint":10791,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_bool_fromMemory":{"entryPoint":11753,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_address_address_uint256":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_address_uint256":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_address_uint256_uint256":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_array_address_dyn":{"entryPoint":10887,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_array_uint256_dyn":{"entryPoint":10490,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string":{"entryPoint":10348,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_and_zero_memory_array_array_uint256_dyn":{"entryPoint":11182,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_array_uint256_dyn":{"entryPoint":10767,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_uint256":{"entryPoint":11891,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_uint256":{"entryPoint":11698,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_uint256":{"entryPoint":11634,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_uint256":{"entryPoint":11878,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":10702,"id":null,"parameterSlots":2,"returnSlots":0},"finalize_allocation_25149":{"entryPoint":10637,"id":null,"parameterSlots":1,"returnSlots":0},"fun_computeTotalValuation":{"entryPoint":12395,"id":3599,"parameterSlots":0,"returnSlots":2},"fun_convertTokenToBase":{"entryPoint":12991,"id":3916,"parameterSlots":2,"returnSlots":1},"fun_getAmountOut":{"entryPoint":11454,"id":3117,"parameterSlots":3,"returnSlots":1},"fun_getDeviation":{"entryPoint":11904,"id":3260,"parameterSlots":0,"returnSlots":2},"fun_getReserves":{"entryPoint":11261,"id":3401,"parameterSlots":0,"returnSlots":1},"fun_isRebalanceNeeded":{"entryPoint":12266,"id":4117,"parameterSlots":0,"returnSlots":1},"fun_mint":{"entryPoint":12568,"id":1491,"parameterSlots":2,"returnSlots":0},"fun_transfer":{"entryPoint":12722,"id":1381,"parameterSlots":3,"returnSlots":0},"fun_unitPrice":{"entryPoint":12352,"id":3355,"parameterSlots":0,"returnSlots":1},"memory_array_index_access_uint256_dyn":{"entryPoint":11162,"id":null,"parameterSlots":2,"returnSlots":1},"require_helper_stringliteral":{"entryPoint":12165,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_85d3":{"entryPoint":11777,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_e4fc":{"entryPoint":11061,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_e84c":{"entryPoint":11353,"id":null,"parameterSlots":1,"returnSlots":0},"storage_array_index_access_struct_AssetInfo__dyn":{"entryPoint":10960,"id":null,"parameterSlots":1,"returnSlots":2}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"60a0604081815260049182361015610015575f80fd5b5f925f3560e01c91826301d22ccd1461281e5750816306fdde03146126d55781630723c9991461236a5781630902f1ac1461231c578163095ea7b31461221757816318160ddd146121db5781631a6865021461219957816322acb8671461211e57816323b872dd14611fc9578163313ce56714611f9057816336bf6e3914611f3e5781633dff5b7f14611e545781634aa0665214611e395781635568081a14611a2557816367a6c440146119ea57816367e4ac2c1461195b5781636e81221c1461157657816370a082311461151557816377aace1a146114c25781637e04795a146113fd5781637fec8d38146113c057816389ab35321461133657816389afcb4414610c175781638a77c8dc14610bd357816395d89b4114610a7d578163a9059cbb14610a2e578163b2b55d7014610802578163c2ee3a08146109f1578163cdf456e11461099e578163cf8fa764146108e2578163d14ef46d14610864578163d66bd52414610802578163dd62ed3e1461078d578163de836ebd146101e7575063e73faa2d146101a3575f80fd5b346101e357817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101e3576020906101dc613040565b9051908152f35b5080fd5b9050823461078a57827ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261078a576102206128b4565b91602492833567ffffffffffffffff8111610786576102429036908401612a27565b9273ffffffffffffffffffffffffffffffffffffffff9261026884600a54163314612c59565b6002549582610275612bfd565b9760079860075490805182036107295781156106cc579086915b8183106105415750505081156104bf57806104145750935b84156103b85790846102e18a979695949333865260209b868d978852808a83822054946102d48882613118565b1698898252522054612e66565b0361035d5750505f5b865481101561032b578084610300600193612ad0565b50541661030d8289612b9a565b51905f52600c8a52610323875f20918254612e73565b9055016102ea565b878386847f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d4121396885848351858152a251908152f35b90600b6064928a8851937f08c379a00000000000000000000000000000000000000000000000000000000085528401528201527f4d696e74204661696c65640000000000000000000000000000000000000000006044820152fd5b606483600d8460208d51937f08c379a00000000000000000000000000000000000000000000000000000000085528401528201527f4d696e74207174792069732030000000000000000000000000000000000000006044820152fd5b61041c61306b565b5091821561043d57610437929161043291612d72565b612db2565b936102a7565b60848560268660208f51937f08c379a00000000000000000000000000000000000000000000000000000000085528401528201527f546f74616c206c6971756964697479206d75737420626520677265617465722060448201527f7468616e203000000000000000000000000000000000000000000000000000006064820152fd5b60848460228560208e51937f08c379a00000000000000000000000000000000000000000000000000000000085528401528201527f546f74616c2076616c7565206d7573742062652067726561746572207468616e60448201527f20300000000000000000000000000000000000000000000000000000000000006064820152fd5b9091938961054e86612ad0565b5054168d51907f70a08231000000000000000000000000000000000000000000000000000000008252308983015260209182818a81855afa9081156106c0578b9161068f575b508015610633576105b0906105a98987612b9a565b5190612e66565b9182156105d75750916105c86105ce926001946132bf565b90612e73565b9401919061028f565b8f601d8a6064938d9351937f08c379a00000000000000000000000000000000000000000000000000000000085528401528201527f416d6f756e74206d7573742062652067726561746572207468616e20300000006044820152fd5b8f8a601e8b8660649451937f08c379a00000000000000000000000000000000000000000000000000000000085528401528201527f42616c616e6365206d7573742062652067726561746572207468616e203000006044820152fd5b90508281813d83116106b9575b6106a681836129ce565b810103126106b557515f610594565b5f80fd5b503d61069c565b50508e513d8b823e3d90fd5b5060648560098660208f51937f08c379a00000000000000000000000000000000000000000000000000000000085528401528201527f4e6f2061737365747300000000000000000000000000000000000000000000006044820152fd5b5060648560178660208f51937f08c379a00000000000000000000000000000000000000000000000000000000085528401528201527f496e76616c6964207265736572766573206c656e6774680000000000000000006044820152fd5b8380fd5b80fd5b5050346101e357807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101e3576020916107c86128b4565b826107d16128d7565b9273ffffffffffffffffffffffffffffffffffffffff8093168152600186522091165f528252805f20549051908152f35b5050346101e35760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101e3578060209273ffffffffffffffffffffffffffffffffffffffff6108546128b4565b168152600c845220549051908152f35b839150346101e35760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101e357359060075482101561078a57506108ac90612ad0565b508054600190910154915173ffffffffffffffffffffffffffffffffffffffff90911681526020810191909152604090f35b0390f35b9050823461078a5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261078a575080359061092061306b565b8092915051831015610941576020846109398585612b9a565b519051908152f35b60649060208551917f08c379a0000000000000000000000000000000000000000000000000000000008352820152601360248201527f496e76616c696420617373657420696e646578000000000000000000000000006044820152fd5b5050346101e357817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101e35760209073ffffffffffffffffffffffffffffffffffffffff600b54169051908152f35b5050346101e357817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101e3576020906009549051908152f35b5050346101e357807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101e357602090610a76610a6c6128b4565b60243590336131b2565b5160018152f35b8383346101e357817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101e35780519180938054916001908360011c9260018516948515610bc9575b6020958686108114610b9d57858952908115610b5b5750600114610b03575b6108de8787610af9828c03836129ce565b519182918261286c565b81529295507f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5b828410610b4857505050826108de94610af992820101948680610ae8565b8054868501880152928601928101610b2a565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00168887015250505050151560051b8301019250610af9826108de8680610ae8565b6024846022857f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b93607f1693610ac9565b5050346101e357817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101e357602090610c0e612fea565b90519015158152f35b839150346101e3576020807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261133257610c526128b4565b9273ffffffffffffffffffffffffffffffffffffffff93610c7885600a54163314612c59565b308252818352858220549081156112d65760025495861561127a576007805493610ca185612bae565b9461012c82027ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffed48382040161124e57612710610cdf91048093612e66565b99875b82811061119657505050308652858752610d01898b8820541015612f85565b878784600654168c51928380927f3b19e84a0000000000000000000000000000000000000000000000000000000082525afa908115611141579188918a9796959493899161114b575b5090610da792918d5193849283927fa9059cbb000000000000000000000000000000000000000000000000000000009b8c855284016020909392919373ffffffffffffffffffffffffffffffffffffffff60408201951681520152565b03818a305af1908115611141578791611124575b50156110c857308652858752610dd6898b8820541015612f85565b301561109957305f525f8752895f2054898110611054578990305f525f8952038a5f205588600254036002555f8a518a81527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef893092a3855b8154811015610fd9578783610e4383612ad0565b5054168c51918280927f70a082310000000000000000000000000000000000000000000000000000000082528d309083015260249485915afa8015610fa0578990610faa575b610ea09150610e988489612b9a565b511115612e01565b8b8986888d8c8c610ef7610ec18a8d610eb882612ad0565b50541696612b9a565b51975197889687958694855284016020909392919373ffffffffffffffffffffffffffffffffffffffff60408201951681520152565b03925af1908115610fa0578991610f73575b5015610f185750600101610e2f565b8960156064928b8f51937f08c379a00000000000000000000000000000000000000000000000000000000085528401528201527f4173736574207472616e73666572206661696c656400000000000000000000006044820152fd5b610f9391508a3d8c11610f99575b610f8b81836129ce565b810190612de9565b8d610f09565b503d610f81565b8d513d8b823e3d90fd5b508981813d8311610fd2575b610fc081836129ce565b810103126106b557610ea09051610e89565b503d610fb6565b50918991868a89935f5b8754811015611024578085610ff9600193612ad0565b505416611006828c612b9a565b51905f52600c885261101c895f20918254612e66565b905501610fe3565b5084847fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca59288519485521692a280f35b8a517fe450d38c00000000000000000000000000000000000000000000000000000000815230818b019081526020810192909252604082018b90529081906060010390fd5b602488878c51917f96c6fd1e000000000000000000000000000000000000000000000000000000008352820152fd5b606488888c51917f08c379a0000000000000000000000000000000000000000000000000000000008352820152601360248201527f466565207472616e73666572206661696c6564000000000000000000000000006044820152fd5b61113b9150883d8a11610f9957610f8b81836129ce565b8b610dbb565b8b513d89823e3d90fd5b9280929495969798508391503d831161118f575b61116981836129ce565b8101031261118b5751838116810361118b578895949392918891610da7610d4a565b8680fd5b503d61115f565b8c8a8c6024896111a586612ad0565b5054169351809481937f70a0823100000000000000000000000000000000000000000000000000000000835230908301525afa908115611244578392918e918c9161120d575b50926104326111fc92600195612d72565b611206828b612b9a565b5201610ce2565b935050508a82813d831161123d575b61122681836129ce565b810103126106b55790518291908d906104326111eb565b503d61121c565b8e513d8c823e3d90fd5b60248860118c7f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b606486868a51917f08c379a0000000000000000000000000000000000000000000000000000000008352820152600c60248201527f4e6f206c697175696469747900000000000000000000000000000000000000006044820152fd5b606485858951917f08c379a0000000000000000000000000000000000000000000000000000000008352820152601c60248201527f5368617265206d7573742062652067726561746572207468616e2030000000006044820152fd5b8280fd5b82843461078a57807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261078a5761136e612e80565b92908151938285938401908452825180915260608401926020809101955b8281106113a75785806108de878783820360208501526128fa565b865115158552958101958795509381019360010161138c565b5050346101e357817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101e3576020906008549051908152f35b919050346113325760209160207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126107865780359067ffffffffffffffff82116114be5761145091369101612a27565b9073ffffffffffffffffffffffffffffffffffffffff9261147684600a54163314612c59565b845b6007548110156114ba57808561148f600193612ad0565b50541661149c8287612b9a565b51908852600c84526114b2858920918254612e66565b905501611478565b8580f35b8480fd5b5050346101e357817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101e35760209073ffffffffffffffffffffffffffffffffffffffff600a54169051908152f35b5050346101e35760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101e3578060209273ffffffffffffffffffffffffffffffffffffffff6115676128b4565b16815280845220549051908152f35b9050346113325760807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112611332576115af6128b4565b926115b86128d7565b6044356064359573ffffffffffffffffffffffffffffffffffffffff9687811681036106b55760026005541461193357600260055587841693888316928584146118d65784156118795788517f23b872dd00000000000000000000000000000000000000000000000000000000815260206080819052338a83019081523081830152604081018890528290819060600103818b895af1801561186f57916116679391879361184e575b50612cbe565b9787517f70a08231000000000000000000000000000000000000000000000000000000008152308882015260805181602481895afa80156117e2578a908890611818575b6116b792501015612e01565b61012c808a02908a8204148a1517156117ec576127106116d891048a612e66565b968851907fa9059cbb00000000000000000000000000000000000000000000000000000000825281806117348b876080519584016020909392919373ffffffffffffffffffffffffffffffffffffffff60408201951681520152565b03818a8a5af180156117e257936117b09795937fcd3829a3813dc3cdd188fd3d01dcf3268c16be2fdd2dd21d0665418816e460628b83958a9895829b966117c1575b508151938885528d6080518601521692a48352600c6080515261179d848420918254612e73565b90558152600c6080515220918254612e73565b905560016005555190815260805190f35b6117db906080513d60805111610f9957610f8b81836129ce565b505f611776565b89513d89823e3d90fd5b60248760118a7f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b50506080513d8111611847575b61182f81836129ce565b8160805191810103126106b557896116b791516116ab565b503d611825565b611868906080513d60805111610f9957610f8b81836129ce565b505f611661565b8a513d8a823e3d90fd5b60648860208b51917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602060248201527f416d6f756e74206d7573742062652067726561746572207468616e207a65726f6044820152fd5b60648860208b51917f08c379a0000000000000000000000000000000000000000000000000000000008352820152601a60248201527f43616e6e6f742073776170207468652073616d6520746f6b656e0000000000006044820152fd5b8587517f3ee5aeb5000000000000000000000000000000000000000000000000000000008152fd5b82843461078a57807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261078a5760075461199781612bae565b915b8181106119b5578351602080825281906108de90820186612a87565b8073ffffffffffffffffffffffffffffffffffffffff6119d6600193612ad0565b5054166119e38286612b9a565b5201611999565b5050346101e357817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101e3576020905161012c8152f35b9050346106b5576020907ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc9282843601126106b557611a626128b4565b91611a73611a6e612fea565b612b35565b6002546103e890818102918183041490151715611e0d576127109073ffffffffffffffffffffffffffffffffffffffff8095165f525f865204825f205410611db257600794600754611ac481612bae565b91611ace82612bae565b915f5b818110611d7957505085600a5416803b156106b5575f8091868851809481937ffe1101160000000000000000000000000000000000000000000000000000000083525af18015611d6f57611d5a575b5090889186600654166008549088600b5416813b15611d565788517f0325192d00000000000000000000000000000000000000000000000000000000815260c0818a01529486948694859387938593611b8f91611b8060c487018f612a87565b918683030160248701526128fa565b91306044850152306064850152608484015260a483015203925af18015611d4c57611d38575b505b8654811015611cfa5784611bca82612ad0565b50541684517f70a0823100000000000000000000000000000000000000000000000000000000815230858201528781602481855afa908115611cf0579088918b91611cbf575b5082611c7d938c52600c835281888d205588600a54168c89518096819582947fa9059cbb0000000000000000000000000000000000000000000000000000000084528c84016020909392919373ffffffffffffffffffffffffffffffffffffffff60408201951681520152565b03925af18015611cb5579060019291611c98575b5001611bb7565b611cae90883d8a11610f9957610f8b81836129ce565b505f611c91565b85513d8b823e3d90fd5b82819392503d8311611ce9575b611cd681836129ce565b810103126106b557518790611c7d611c10565b503d611ccc565b86513d8c823e3d90fd5b8351868152889033907f279b343370f587af7fb675ae7c8578e9c8abcc373236ad02c501a4771fe7a7b89080611d32818c0188612a87565b0390a280f35b611d419061298d565b61118b57865f611bb5565b85513d84823e3d90fd5b8580fd5b611d669192995061298d565b5f97905f611b20565b86513d5f823e3d90fd5b8088611d86600193612ad0565b505416611d938288612b9a565b5281611d9e82612ad0565b500154611dab8287612b9a565b5201611ad1565b8360649251917f08c379a0000000000000000000000000000000000000000000000000000000008352820152601160248201527f556e646572203525204c502073686172650000000000000000000000000000006044820152fd5b6011827f4e487b71000000000000000000000000000000000000000000000000000000005f525260245ffd5b82346106b5576020906101dc611e4e3661292d565b91612cbe565b9050346106b557817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126106b55780359067ffffffffffffffff82116106b557611ea291369101612a27565b9060243580151581036106b55773ffffffffffffffffffffffffffffffffffffffff92611ed484600a54163314612c59565b5f5b600754811015611f3c578085611eed600193612ad0565b505416611efa8285612b9a565b51908515611f20575f52600c602052611f17865f20918254612e73565b90555b01611ed6565b5f52600c602052611f35865f20918254612e66565b9055611f1a565b005b82346106b5575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126106b5576108de611f7861306b565b839291925193849384528060208501528301906128fa565b82346106b5575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126106b5576020905160128152f35b9050346106b557611fd93661292d565b9273ffffffffffffffffffffffffffffffffffffffff83929316805f526001602052855f20335f52602052855f2054917fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff830361203f575b602087610a768888886131b2565b8583106120d95781156120aa57331561207b57505f90815260016020908152868220338352815290869020918590039091558290610a76612031565b6024905f8851917f94280d62000000000000000000000000000000000000000000000000000000008352820152fd5b6024905f8851917fe602df05000000000000000000000000000000000000000000000000000000008352820152fd5b86517ffb8f41b2000000000000000000000000000000000000000000000000000000008152339181019182526020820193909352604081018690528291506060010390fd5b82346106b5575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126106b55760075461215981612bae565b905f5b818110612178578351602080825281906108de908201866128fa565b8060016121858193612ad0565b5001546121928286612b9a565b520161215c565b82346106b5575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126106b5576020906121d361306b565b509051908152f35b82346106b5575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126106b5576020906002549051908152f35b82346106b557807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126106b55761224e6128b4565b6024359033156122ed5773ffffffffffffffffffffffffffffffffffffffff169081156122be5760209350335f5260018452825f20825f52845280835f205582519081527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925843392a35160018152f35b6024845f8551917f94280d62000000000000000000000000000000000000000000000000000000008352820152fd5b6024845f8551917fe602df05000000000000000000000000000000000000000000000000000000008352820152fd5b82346106b5575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126106b5576108de90612357612bfd565b90519182916020835260208301906128fa565b82346106b557602090817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126106b5576123a46128b4565b916123b0611a6e612fea565b6123b861306b565b9490600754906123c782612bae565b965f5b838110612680575050505f905f905b80821061265f5750505f5b8651811015612618576123f78188612b9a565b51612405575b6001016123e4565b61248a6124128289612b9a565b518561241d84612ad0565b5054600654600b548a517f248391ff00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9182168a82019081529382166020850152604084019590955293948592918516918391829160600190565b03915afa91821561260e575f926125df575b5081156125835761251c8683836124b287612ad0565b50541684600a54165f8a8d51968795869485937f23b872dd0000000000000000000000000000000000000000000000000000000085523390850160409194939294606082019573ffffffffffffffffffffffffffffffffffffffff80921683521660208201520152565b03925af18015612579579060019493929161255c575b5061253c83612ad0565b5054165f52600c8652612553875f20918254612e73565b905590506123fd565b61257290883d8a11610f9957610f8b81836129ce565b508a612532565b88513d5f823e3d90fd5b606485878951917f08c379a0000000000000000000000000000000000000000000000000000000008352820152601b60248201527f496e76616c696420746f6b656e20616d6f756e7420746f2061646400000000006044820152fd5b9091508581813d8311612607575b6125f781836129ce565b810103126106b55751908961249c565b503d6125ed565b87513d5f823e3d90fd5b837fa95ad530009c6f929555e70a66aadbeae7231e45756c5b028ca77fbaa376e73e61265a8988612649878c613118565b5191829185835233958301906128fa565b0390a2005b9091612678600191612671858b612b9a565b5190612e73565b9201906123d9565b8061271061269c60016126938195612ad0565b50015486612d72565b04806126a88386612b9a565b51106126b6575b50016123ca565b6126c4906105a98386612b9a565b6126ce828c612b9a565b528a6126af565b82346106b5575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126106b5578051905f9260035460018160011c91600181168015612814575b60209485851082146127e857508387529081156127aa5750600114612750575b505050610af9826108de9403836129ce565b60035f9081529295507fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b82841061279757505050826108de94610af9928201019461273e565b805486850188015292860192810161277b565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016868501525050151560051b8301019250610af9826108de61273e565b6022907f4e487b71000000000000000000000000000000000000000000000000000000005f525260245ffd5b92607f169261271e565b346106b5575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126106b55760209073ffffffffffffffffffffffffffffffffffffffff600654168152f35b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f602060409481855280519182918282880152018686015e5f8582860101520116010190565b6004359073ffffffffffffffffffffffffffffffffffffffff821682036106b557565b6024359073ffffffffffffffffffffffffffffffffffffffff821682036106b557565b9081518082526020808093019301915f5b828110612919575050505090565b83518552938101939281019260010161290b565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc60609101126106b55773ffffffffffffffffffffffffffffffffffffffff9060043582811681036106b5579160243590811681036106b5579060443590565b67ffffffffffffffff81116129a157604052565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff8211176129a157604052565b67ffffffffffffffff81116129a15760051b60200190565b9080601f830112156106b5576020908235612a4181612a0f565b93612a4f60405195866129ce565b81855260208086019260051b8201019283116106b557602001905b828210612a78575050505090565b81358152908301908301612a6a565b9081518082526020808093019301915f5b828110612aa6575050505090565b835173ffffffffffffffffffffffffffffffffffffffff1685529381019392810192600101612a98565b600754811015612b085760075f5260011b7fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c68801905f90565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b15612b3c57565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f526562616c616e6365206e6f74206e65656465640000000000000000000000006044820152fd5b8051821015612b085760209160051b010190565b90612bb882612a0f565b612bc560405191826129ce565b8281527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0612bf38294612a0f565b0190602036910137565b600754612c0981612bae565b905f5b818110612c1857505090565b8073ffffffffffffffffffffffffffffffffffffffff612c39600193612ad0565b5054165f52600c60205260405f2054612c528286612b9a565b5201612c0c565b15612c6057565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f4f6e6c79205065726970686572790000000000000000000000000000000000006044820152fd5b6006546040517f248391ff00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff92831660048201529282166024840152604483019390935290916020918391168180606481015b03915afa908115612d67575f91612d38575090565b90506020813d602011612d5f575b81612d53602093836129ce565b810103126106b5575190565b3d9150612d46565b6040513d5f823e3d90fd5b81810292918115918404141715612d8557565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b8115612dbc570490565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b908160209103126106b5575180151581036106b55790565b15612e0857565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f496e73756666696369656e74204c6971756964697479000000000000000000006044820152fd5b91908203918211612d8557565b91908201809211612d8557565b612e8861306b565b919060075490612e9782612a0f565b91612ea560405193846129ce565b8083527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0612ed282612a0f565b01366020850137612ee281612bae565b945f5b828110612ef457505050509190565b612efe8183612b9a565b519061271091828102928184041490151715612d8557612f2085600193612db2565b612f2982612ad0565b50830154839181811115612f5e5790612f4191612e66565b612f4b838b612b9a565b52612f568288612b9a565b525b01612ee5565b90612f699250612e66565b612f73828a612b9a565b525f612f7f8288612b9a565b52612f58565b15612f8c57565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f496e73756666696369656e74206c6971756964697479000000000000000000006044820152fd5b612ff2612e80565b5f5b8151811015613039576130078184612b9a565b51151580613024575b61301c57600101612ff4565b505050600190565b5061302f8183612b9a565b5160085410613010565b5050505f90565b61304861306b565b506002548015613065576104326130629260095490612d72565b90565b50505f90565b600754905f61307983612bae565b925f9073ffffffffffffffffffffffffffffffffffffffff80600b5416905b8284106130a757505050509190565b909192936130e7600191836130bb88612ad0565b5054168581036130f1575f52600c60205260405f20546130db888b612b9a565b525b612671878a612b9a565b9401929190613098565b80613108915f52600c60205260405f2054906132bf565b613112888b612b9a565b526130dd565b73ffffffffffffffffffffffffffffffffffffffff16908115613182577fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6020826131665f94600254612e73565b60025584845283825260408420818154019055604051908152a3565b60246040517fec442f050000000000000000000000000000000000000000000000000000000081525f6004820152fd5b9173ffffffffffffffffffffffffffffffffffffffff80841692831561328f571692831561318257825f525f60205260405f2054908282106132375750817fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92602092855f525f84520360405f2055845f5260405f20818154019055604051908152a3565b6040517fe450d38c00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff919091166004820152602481019190915260448101829052606490fd5b60246040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081525f6004820152fd5b600654600b546040517f248391ff00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff938416600482015290831660248201526044810193909352602091839116818060648101612d2356fea2646970667358221220c8414810c36dc329497f0bf640c364c1d29c54d48070ba851498e68ef0072a6864736f6c63430008190033","opcodes":"PUSH1 0xA0 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 SWAP2 DUP3 CALLDATASIZE LT ISZERO PUSH2 0x15 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 SWAP3 PUSH0 CALLDATALOAD PUSH1 0xE0 SHR SWAP2 DUP3 PUSH4 0x1D22CCD EQ PUSH2 0x281E JUMPI POP DUP2 PUSH4 0x6FDDE03 EQ PUSH2 0x26D5 JUMPI DUP2 PUSH4 0x723C999 EQ PUSH2 0x236A JUMPI DUP2 PUSH4 0x902F1AC EQ PUSH2 0x231C JUMPI DUP2 PUSH4 0x95EA7B3 EQ PUSH2 0x2217 JUMPI DUP2 PUSH4 0x18160DDD EQ PUSH2 0x21DB JUMPI DUP2 PUSH4 0x1A686502 EQ PUSH2 0x2199 JUMPI DUP2 PUSH4 0x22ACB867 EQ PUSH2 0x211E JUMPI DUP2 PUSH4 0x23B872DD EQ PUSH2 0x1FC9 JUMPI DUP2 PUSH4 0x313CE567 EQ PUSH2 0x1F90 JUMPI DUP2 PUSH4 0x36BF6E39 EQ PUSH2 0x1F3E JUMPI DUP2 PUSH4 0x3DFF5B7F EQ PUSH2 0x1E54 JUMPI DUP2 PUSH4 0x4AA06652 EQ PUSH2 0x1E39 JUMPI DUP2 PUSH4 0x5568081A EQ PUSH2 0x1A25 JUMPI DUP2 PUSH4 0x67A6C440 EQ PUSH2 0x19EA JUMPI DUP2 PUSH4 0x67E4AC2C EQ PUSH2 0x195B JUMPI DUP2 PUSH4 0x6E81221C EQ PUSH2 0x1576 JUMPI DUP2 PUSH4 0x70A08231 EQ PUSH2 0x1515 JUMPI DUP2 PUSH4 0x77AACE1A EQ PUSH2 0x14C2 JUMPI DUP2 PUSH4 0x7E04795A EQ PUSH2 0x13FD JUMPI DUP2 PUSH4 0x7FEC8D38 EQ PUSH2 0x13C0 JUMPI DUP2 PUSH4 0x89AB3532 EQ PUSH2 0x1336 JUMPI DUP2 PUSH4 0x89AFCB44 EQ PUSH2 0xC17 JUMPI DUP2 PUSH4 0x8A77C8DC EQ PUSH2 0xBD3 JUMPI DUP2 PUSH4 0x95D89B41 EQ PUSH2 0xA7D JUMPI DUP2 PUSH4 0xA9059CBB EQ PUSH2 0xA2E JUMPI DUP2 PUSH4 0xB2B55D70 EQ PUSH2 0x802 JUMPI DUP2 PUSH4 0xC2EE3A08 EQ PUSH2 0x9F1 JUMPI DUP2 PUSH4 0xCDF456E1 EQ PUSH2 0x99E JUMPI DUP2 PUSH4 0xCF8FA764 EQ PUSH2 0x8E2 JUMPI DUP2 PUSH4 0xD14EF46D EQ PUSH2 0x864 JUMPI DUP2 PUSH4 0xD66BD524 EQ PUSH2 0x802 JUMPI DUP2 PUSH4 0xDD62ED3E EQ PUSH2 0x78D JUMPI DUP2 PUSH4 0xDE836EBD EQ PUSH2 0x1E7 JUMPI POP PUSH4 0xE73FAA2D EQ PUSH2 0x1A3 JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1E3 JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1E3 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x1DC PUSH2 0x3040 JUMP JUMPDEST SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST SWAP1 POP DUP3 CALLVALUE PUSH2 0x78A JUMPI DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x78A JUMPI PUSH2 0x220 PUSH2 0x28B4 JUMP JUMPDEST SWAP2 PUSH1 0x24 SWAP3 DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x786 JUMPI PUSH2 0x242 SWAP1 CALLDATASIZE SWAP1 DUP5 ADD PUSH2 0x2A27 JUMP JUMPDEST SWAP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 PUSH2 0x268 DUP5 PUSH1 0xA SLOAD AND CALLER EQ PUSH2 0x2C59 JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP6 DUP3 PUSH2 0x275 PUSH2 0x2BFD JUMP JUMPDEST SWAP8 PUSH1 0x7 SWAP9 PUSH1 0x7 SLOAD SWAP1 DUP1 MLOAD DUP3 SUB PUSH2 0x729 JUMPI DUP2 ISZERO PUSH2 0x6CC JUMPI SWAP1 DUP7 SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0x541 JUMPI POP POP POP DUP2 ISZERO PUSH2 0x4BF JUMPI DUP1 PUSH2 0x414 JUMPI POP SWAP4 JUMPDEST DUP5 ISZERO PUSH2 0x3B8 JUMPI SWAP1 DUP5 PUSH2 0x2E1 DUP11 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 CALLER DUP7 MSTORE PUSH1 0x20 SWAP12 DUP7 DUP14 SWAP8 DUP9 MSTORE DUP1 DUP11 DUP4 DUP3 KECCAK256 SLOAD SWAP5 PUSH2 0x2D4 DUP9 DUP3 PUSH2 0x3118 JUMP JUMPDEST AND SWAP9 DUP10 DUP3 MSTORE MSTORE KECCAK256 SLOAD PUSH2 0x2E66 JUMP JUMPDEST SUB PUSH2 0x35D JUMPI POP POP PUSH0 JUMPDEST DUP7 SLOAD DUP2 LT ISZERO PUSH2 0x32B JUMPI DUP1 DUP5 PUSH2 0x300 PUSH1 0x1 SWAP4 PUSH2 0x2AD0 JUMP JUMPDEST POP SLOAD AND PUSH2 0x30D DUP3 DUP10 PUSH2 0x2B9A JUMP JUMPDEST MLOAD SWAP1 PUSH0 MSTORE PUSH1 0xC DUP11 MSTORE PUSH2 0x323 DUP8 PUSH0 KECCAK256 SWAP2 DUP3 SLOAD PUSH2 0x2E73 JUMP JUMPDEST SWAP1 SSTORE ADD PUSH2 0x2EA JUMP JUMPDEST DUP8 DUP4 DUP7 DUP5 PUSH32 0xF6798A560793A54C3BCFE86A93CDE1E73087D944C0EA20544137D4121396885 DUP5 DUP4 MLOAD DUP6 DUP2 MSTORE LOG2 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 PUSH1 0xB PUSH1 0x64 SWAP3 DUP11 DUP9 MLOAD SWAP4 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP6 MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x4D696E74204661696C6564000000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 DUP4 PUSH1 0xD DUP5 PUSH1 0x20 DUP14 MLOAD SWAP4 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP6 MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x4D696E7420717479206973203000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH2 0x41C PUSH2 0x306B JUMP JUMPDEST POP SWAP2 DUP3 ISZERO PUSH2 0x43D JUMPI PUSH2 0x437 SWAP3 SWAP2 PUSH2 0x432 SWAP2 PUSH2 0x2D72 JUMP JUMPDEST PUSH2 0x2DB2 JUMP JUMPDEST SWAP4 PUSH2 0x2A7 JUMP JUMPDEST PUSH1 0x84 DUP6 PUSH1 0x26 DUP7 PUSH1 0x20 DUP16 MLOAD SWAP4 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP6 MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x546F74616C206C6971756964697479206D757374206265206772656174657220 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7468616E20300000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x84 DUP5 PUSH1 0x22 DUP6 PUSH1 0x20 DUP15 MLOAD SWAP4 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP6 MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x546F74616C2076616C7565206D7573742062652067726561746572207468616E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x2030000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 SWAP2 SWAP4 DUP10 PUSH2 0x54E DUP7 PUSH2 0x2AD0 JUMP JUMPDEST POP SLOAD AND DUP14 MLOAD SWAP1 PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP3 MSTORE ADDRESS DUP10 DUP4 ADD MSTORE PUSH1 0x20 SWAP2 DUP3 DUP2 DUP11 DUP2 DUP6 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x6C0 JUMPI DUP12 SWAP2 PUSH2 0x68F JUMPI JUMPDEST POP DUP1 ISZERO PUSH2 0x633 JUMPI PUSH2 0x5B0 SWAP1 PUSH2 0x5A9 DUP10 DUP8 PUSH2 0x2B9A JUMP JUMPDEST MLOAD SWAP1 PUSH2 0x2E66 JUMP JUMPDEST SWAP2 DUP3 ISZERO PUSH2 0x5D7 JUMPI POP SWAP2 PUSH2 0x5C8 PUSH2 0x5CE SWAP3 PUSH1 0x1 SWAP5 PUSH2 0x32BF JUMP JUMPDEST SWAP1 PUSH2 0x2E73 JUMP JUMPDEST SWAP5 ADD SWAP2 SWAP1 PUSH2 0x28F JUMP JUMPDEST DUP16 PUSH1 0x1D DUP11 PUSH1 0x64 SWAP4 DUP14 SWAP4 MLOAD SWAP4 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP6 MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E2030000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP16 DUP11 PUSH1 0x1E DUP12 DUP7 PUSH1 0x64 SWAP5 MLOAD SWAP4 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP6 MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x42616C616E6365206D7573742062652067726561746572207468616E20300000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 POP DUP3 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x6B9 JUMPI JUMPDEST PUSH2 0x6A6 DUP2 DUP4 PUSH2 0x29CE JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x6B5 JUMPI MLOAD PUSH0 PUSH2 0x594 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x69C JUMP JUMPDEST POP POP DUP15 MLOAD RETURNDATASIZE DUP12 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP PUSH1 0x64 DUP6 PUSH1 0x9 DUP7 PUSH1 0x20 DUP16 MLOAD SWAP4 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP6 MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x4E6F206173736574730000000000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP PUSH1 0x64 DUP6 PUSH1 0x17 DUP7 PUSH1 0x20 DUP16 MLOAD SWAP4 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP6 MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x496E76616C6964207265736572766573206C656E677468000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x1E3 JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1E3 JUMPI PUSH1 0x20 SWAP2 PUSH2 0x7C8 PUSH2 0x28B4 JUMP JUMPDEST DUP3 PUSH2 0x7D1 PUSH2 0x28D7 JUMP JUMPDEST SWAP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP4 AND DUP2 MSTORE PUSH1 0x1 DUP7 MSTORE KECCAK256 SWAP2 AND PUSH0 MSTORE DUP3 MSTORE DUP1 PUSH0 KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x1E3 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1E3 JUMPI DUP1 PUSH1 0x20 SWAP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x854 PUSH2 0x28B4 JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0xC DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP4 SWAP2 POP CALLVALUE PUSH2 0x1E3 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1E3 JUMPI CALLDATALOAD SWAP1 PUSH1 0x7 SLOAD DUP3 LT ISZERO PUSH2 0x78A JUMPI POP PUSH2 0x8AC SWAP1 PUSH2 0x2AD0 JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD SWAP2 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 RETURN JUMPDEST SUB SWAP1 RETURN JUMPDEST SWAP1 POP DUP3 CALLVALUE PUSH2 0x78A JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x78A JUMPI POP DUP1 CALLDATALOAD SWAP1 PUSH2 0x920 PUSH2 0x306B JUMP JUMPDEST DUP1 SWAP3 SWAP2 POP MLOAD DUP4 LT ISZERO PUSH2 0x941 JUMPI PUSH1 0x20 DUP5 PUSH2 0x939 DUP6 DUP6 PUSH2 0x2B9A JUMP JUMPDEST MLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x20 DUP6 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420617373657420696E64657800000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x1E3 JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1E3 JUMPI PUSH1 0x20 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xB SLOAD AND SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x1E3 JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1E3 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x9 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x1E3 JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1E3 JUMPI PUSH1 0x20 SWAP1 PUSH2 0xA76 PUSH2 0xA6C PUSH2 0x28B4 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x31B2 JUMP JUMPDEST MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST DUP4 DUP4 CALLVALUE PUSH2 0x1E3 JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1E3 JUMPI DUP1 MLOAD SWAP2 DUP1 SWAP4 DUP1 SLOAD SWAP2 PUSH1 0x1 SWAP1 DUP4 PUSH1 0x1 SHR SWAP3 PUSH1 0x1 DUP6 AND SWAP5 DUP6 ISZERO PUSH2 0xBC9 JUMPI JUMPDEST PUSH1 0x20 SWAP6 DUP7 DUP7 LT DUP2 EQ PUSH2 0xB9D JUMPI DUP6 DUP10 MSTORE SWAP1 DUP2 ISZERO PUSH2 0xB5B JUMPI POP PUSH1 0x1 EQ PUSH2 0xB03 JUMPI JUMPDEST PUSH2 0x8DE DUP8 DUP8 PUSH2 0xAF9 DUP3 DUP13 SUB DUP4 PUSH2 0x29CE JUMP JUMPDEST MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x286C JUMP JUMPDEST DUP2 MSTORE SWAP3 SWAP6 POP PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B JUMPDEST DUP3 DUP5 LT PUSH2 0xB48 JUMPI POP POP POP DUP3 PUSH2 0x8DE SWAP5 PUSH2 0xAF9 SWAP3 DUP3 ADD ADD SWAP5 DUP7 DUP1 PUSH2 0xAE8 JUMP JUMPDEST DUP1 SLOAD DUP7 DUP6 ADD DUP9 ADD MSTORE SWAP3 DUP7 ADD SWAP3 DUP2 ADD PUSH2 0xB2A JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND DUP9 DUP8 ADD MSTORE POP POP POP POP ISZERO ISZERO PUSH1 0x5 SHL DUP4 ADD ADD SWAP3 POP PUSH2 0xAF9 DUP3 PUSH2 0x8DE DUP7 DUP1 PUSH2 0xAE8 JUMP JUMPDEST PUSH1 0x24 DUP5 PUSH1 0x22 DUP6 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP4 MSTORE MSTORE REVERT JUMPDEST SWAP4 PUSH1 0x7F AND SWAP4 PUSH2 0xAC9 JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x1E3 JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1E3 JUMPI PUSH1 0x20 SWAP1 PUSH2 0xC0E PUSH2 0x2FEA JUMP JUMPDEST SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST DUP4 SWAP2 POP CALLVALUE PUSH2 0x1E3 JUMPI PUSH1 0x20 DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1332 JUMPI PUSH2 0xC52 PUSH2 0x28B4 JUMP JUMPDEST SWAP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP4 PUSH2 0xC78 DUP6 PUSH1 0xA SLOAD AND CALLER EQ PUSH2 0x2C59 JUMP JUMPDEST ADDRESS DUP3 MSTORE DUP2 DUP4 MSTORE DUP6 DUP3 KECCAK256 SLOAD SWAP1 DUP2 ISZERO PUSH2 0x12D6 JUMPI PUSH1 0x2 SLOAD SWAP6 DUP7 ISZERO PUSH2 0x127A JUMPI PUSH1 0x7 DUP1 SLOAD SWAP4 PUSH2 0xCA1 DUP6 PUSH2 0x2BAE JUMP JUMPDEST SWAP5 PUSH2 0x12C DUP3 MUL PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFED4 DUP4 DUP3 DIV ADD PUSH2 0x124E JUMPI PUSH2 0x2710 PUSH2 0xCDF SWAP2 DIV DUP1 SWAP4 PUSH2 0x2E66 JUMP JUMPDEST SWAP10 DUP8 JUMPDEST DUP3 DUP2 LT PUSH2 0x1196 JUMPI POP POP POP ADDRESS DUP7 MSTORE DUP6 DUP8 MSTORE PUSH2 0xD01 DUP10 DUP12 DUP9 KECCAK256 SLOAD LT ISZERO PUSH2 0x2F85 JUMP JUMPDEST DUP8 DUP8 DUP5 PUSH1 0x6 SLOAD AND DUP13 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH32 0x3B19E84A00000000000000000000000000000000000000000000000000000000 DUP3 MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x1141 JUMPI SWAP2 DUP9 SWAP2 DUP11 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 DUP10 SWAP2 PUSH2 0x114B JUMPI JUMPDEST POP SWAP1 PUSH2 0xDA7 SWAP3 SWAP2 DUP14 MLOAD SWAP4 DUP5 SWAP3 DUP4 SWAP3 PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 SWAP12 DUP13 DUP6 MSTORE DUP5 ADD PUSH1 0x20 SWAP1 SWAP4 SWAP3 SWAP2 SWAP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x40 DUP3 ADD SWAP6 AND DUP2 MSTORE ADD MSTORE JUMP JUMPDEST SUB DUP2 DUP11 ADDRESS GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x1141 JUMPI DUP8 SWAP2 PUSH2 0x1124 JUMPI JUMPDEST POP ISZERO PUSH2 0x10C8 JUMPI ADDRESS DUP7 MSTORE DUP6 DUP8 MSTORE PUSH2 0xDD6 DUP10 DUP12 DUP9 KECCAK256 SLOAD LT ISZERO PUSH2 0x2F85 JUMP JUMPDEST ADDRESS ISZERO PUSH2 0x1099 JUMPI ADDRESS PUSH0 MSTORE PUSH0 DUP8 MSTORE DUP10 PUSH0 KECCAK256 SLOAD DUP10 DUP2 LT PUSH2 0x1054 JUMPI DUP10 SWAP1 ADDRESS PUSH0 MSTORE PUSH0 DUP10 MSTORE SUB DUP11 PUSH0 KECCAK256 SSTORE DUP9 PUSH1 0x2 SLOAD SUB PUSH1 0x2 SSTORE PUSH0 DUP11 MLOAD DUP11 DUP2 MSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP10 ADDRESS SWAP3 LOG3 DUP6 JUMPDEST DUP2 SLOAD DUP2 LT ISZERO PUSH2 0xFD9 JUMPI DUP8 DUP4 PUSH2 0xE43 DUP4 PUSH2 0x2AD0 JUMP JUMPDEST POP SLOAD AND DUP13 MLOAD SWAP2 DUP3 DUP1 SWAP3 PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP3 MSTORE DUP14 ADDRESS SWAP1 DUP4 ADD MSTORE PUSH1 0x24 SWAP5 DUP6 SWAP2 GAS STATICCALL DUP1 ISZERO PUSH2 0xFA0 JUMPI DUP10 SWAP1 PUSH2 0xFAA JUMPI JUMPDEST PUSH2 0xEA0 SWAP2 POP PUSH2 0xE98 DUP5 DUP10 PUSH2 0x2B9A JUMP JUMPDEST MLOAD GT ISZERO PUSH2 0x2E01 JUMP JUMPDEST DUP12 DUP10 DUP7 DUP9 DUP14 DUP13 DUP13 PUSH2 0xEF7 PUSH2 0xEC1 DUP11 DUP14 PUSH2 0xEB8 DUP3 PUSH2 0x2AD0 JUMP JUMPDEST POP SLOAD AND SWAP7 PUSH2 0x2B9A JUMP JUMPDEST MLOAD SWAP8 MLOAD SWAP8 DUP9 SWAP7 DUP8 SWAP6 DUP7 SWAP5 DUP6 MSTORE DUP5 ADD PUSH1 0x20 SWAP1 SWAP4 SWAP3 SWAP2 SWAP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x40 DUP3 ADD SWAP6 AND DUP2 MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0xFA0 JUMPI DUP10 SWAP2 PUSH2 0xF73 JUMPI JUMPDEST POP ISZERO PUSH2 0xF18 JUMPI POP PUSH1 0x1 ADD PUSH2 0xE2F JUMP JUMPDEST DUP10 PUSH1 0x15 PUSH1 0x64 SWAP3 DUP12 DUP16 MLOAD SWAP4 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP6 MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x4173736574207472616E73666572206661696C65640000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH2 0xF93 SWAP2 POP DUP11 RETURNDATASIZE DUP13 GT PUSH2 0xF99 JUMPI JUMPDEST PUSH2 0xF8B DUP2 DUP4 PUSH2 0x29CE JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x2DE9 JUMP JUMPDEST DUP14 PUSH2 0xF09 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0xF81 JUMP JUMPDEST DUP14 MLOAD RETURNDATASIZE DUP12 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP DUP10 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0xFD2 JUMPI JUMPDEST PUSH2 0xFC0 DUP2 DUP4 PUSH2 0x29CE JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x6B5 JUMPI PUSH2 0xEA0 SWAP1 MLOAD PUSH2 0xE89 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0xFB6 JUMP JUMPDEST POP SWAP2 DUP10 SWAP2 DUP7 DUP11 DUP10 SWAP4 PUSH0 JUMPDEST DUP8 SLOAD DUP2 LT ISZERO PUSH2 0x1024 JUMPI DUP1 DUP6 PUSH2 0xFF9 PUSH1 0x1 SWAP4 PUSH2 0x2AD0 JUMP JUMPDEST POP SLOAD AND PUSH2 0x1006 DUP3 DUP13 PUSH2 0x2B9A JUMP JUMPDEST MLOAD SWAP1 PUSH0 MSTORE PUSH1 0xC DUP9 MSTORE PUSH2 0x101C DUP10 PUSH0 KECCAK256 SWAP2 DUP3 SLOAD PUSH2 0x2E66 JUMP JUMPDEST SWAP1 SSTORE ADD PUSH2 0xFE3 JUMP JUMPDEST POP DUP5 DUP5 PUSH32 0xCC16F5DBB4873280815C1EE09DBD06736CFFCC184412CF7A71A0FDB75D397CA5 SWAP3 DUP9 MLOAD SWAP5 DUP6 MSTORE AND SWAP3 LOG2 DUP1 RETURN JUMPDEST DUP11 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS DUP2 DUP12 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 DUP3 ADD DUP12 SWAP1 MSTORE SWAP1 DUP2 SWAP1 PUSH1 0x60 ADD SUB SWAP1 REVERT JUMPDEST PUSH1 0x24 DUP9 DUP8 DUP13 MLOAD SWAP2 PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 DUP9 DUP9 DUP13 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x466565207472616E73666572206661696C656400000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH2 0x113B SWAP2 POP DUP9 RETURNDATASIZE DUP11 GT PUSH2 0xF99 JUMPI PUSH2 0xF8B DUP2 DUP4 PUSH2 0x29CE JUMP JUMPDEST DUP12 PUSH2 0xDBB JUMP JUMPDEST DUP12 MLOAD RETURNDATASIZE DUP10 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP3 DUP1 SWAP3 SWAP5 SWAP6 SWAP7 SWAP8 SWAP9 POP DUP4 SWAP2 POP RETURNDATASIZE DUP4 GT PUSH2 0x118F JUMPI JUMPDEST PUSH2 0x1169 DUP2 DUP4 PUSH2 0x29CE JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x118B JUMPI MLOAD DUP4 DUP2 AND DUP2 SUB PUSH2 0x118B JUMPI DUP9 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 DUP9 SWAP2 PUSH2 0xDA7 PUSH2 0xD4A JUMP JUMPDEST DUP7 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x115F JUMP JUMPDEST DUP13 DUP11 DUP13 PUSH1 0x24 DUP10 PUSH2 0x11A5 DUP7 PUSH2 0x2AD0 JUMP JUMPDEST POP SLOAD AND SWAP4 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP4 MSTORE ADDRESS SWAP1 DUP4 ADD MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x1244 JUMPI DUP4 SWAP3 SWAP2 DUP15 SWAP2 DUP13 SWAP2 PUSH2 0x120D JUMPI JUMPDEST POP SWAP3 PUSH2 0x432 PUSH2 0x11FC SWAP3 PUSH1 0x1 SWAP6 PUSH2 0x2D72 JUMP JUMPDEST PUSH2 0x1206 DUP3 DUP12 PUSH2 0x2B9A JUMP JUMPDEST MSTORE ADD PUSH2 0xCE2 JUMP JUMPDEST SWAP4 POP POP POP DUP11 DUP3 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x123D JUMPI JUMPDEST PUSH2 0x1226 DUP2 DUP4 PUSH2 0x29CE JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x6B5 JUMPI SWAP1 MLOAD DUP3 SWAP2 SWAP1 DUP14 SWAP1 PUSH2 0x432 PUSH2 0x11EB JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x121C JUMP JUMPDEST DUP15 MLOAD RETURNDATASIZE DUP13 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x24 DUP9 PUSH1 0x11 DUP13 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP4 MSTORE MSTORE REVERT JUMPDEST PUSH1 0x64 DUP7 DUP7 DUP11 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F206C69717569646974790000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 DUP6 DUP6 DUP10 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5368617265206D7573742062652067726561746572207468616E203000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x78A JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x78A JUMPI PUSH2 0x136E PUSH2 0x2E80 JUMP JUMPDEST SWAP3 SWAP1 DUP2 MLOAD SWAP4 DUP3 DUP6 SWAP4 DUP5 ADD SWAP1 DUP5 MSTORE DUP3 MLOAD DUP1 SWAP2 MSTORE PUSH1 0x60 DUP5 ADD SWAP3 PUSH1 0x20 DUP1 SWAP2 ADD SWAP6 JUMPDEST DUP3 DUP2 LT PUSH2 0x13A7 JUMPI DUP6 DUP1 PUSH2 0x8DE DUP8 DUP8 DUP4 DUP3 SUB PUSH1 0x20 DUP6 ADD MSTORE PUSH2 0x28FA JUMP JUMPDEST DUP7 MLOAD ISZERO ISZERO DUP6 MSTORE SWAP6 DUP2 ADD SWAP6 DUP8 SWAP6 POP SWAP4 DUP2 ADD SWAP4 PUSH1 0x1 ADD PUSH2 0x138C JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x1E3 JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1E3 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x8 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x1332 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x786 JUMPI DUP1 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x14BE JUMPI PUSH2 0x1450 SWAP2 CALLDATASIZE SWAP2 ADD PUSH2 0x2A27 JUMP JUMPDEST SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 PUSH2 0x1476 DUP5 PUSH1 0xA SLOAD AND CALLER EQ PUSH2 0x2C59 JUMP JUMPDEST DUP5 JUMPDEST PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x14BA JUMPI DUP1 DUP6 PUSH2 0x148F PUSH1 0x1 SWAP4 PUSH2 0x2AD0 JUMP JUMPDEST POP SLOAD AND PUSH2 0x149C DUP3 DUP8 PUSH2 0x2B9A JUMP JUMPDEST MLOAD SWAP1 DUP9 MSTORE PUSH1 0xC DUP5 MSTORE PUSH2 0x14B2 DUP6 DUP10 KECCAK256 SWAP2 DUP3 SLOAD PUSH2 0x2E66 JUMP JUMPDEST SWAP1 SSTORE ADD PUSH2 0x1478 JUMP JUMPDEST DUP6 DUP1 RETURN JUMPDEST DUP5 DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x1E3 JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1E3 JUMPI PUSH1 0x20 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA SLOAD AND SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x1E3 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1E3 JUMPI DUP1 PUSH1 0x20 SWAP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x1567 PUSH2 0x28B4 JUMP JUMPDEST AND DUP2 MSTORE DUP1 DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x1332 JUMPI PUSH1 0x80 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1332 JUMPI PUSH2 0x15AF PUSH2 0x28B4 JUMP JUMPDEST SWAP3 PUSH2 0x15B8 PUSH2 0x28D7 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD PUSH1 0x64 CALLDATALOAD SWAP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP7 DUP8 DUP2 AND DUP2 SUB PUSH2 0x6B5 JUMPI PUSH1 0x2 PUSH1 0x5 SLOAD EQ PUSH2 0x1933 JUMPI PUSH1 0x2 PUSH1 0x5 SSTORE DUP8 DUP5 AND SWAP4 DUP9 DUP4 AND SWAP3 DUP6 DUP5 EQ PUSH2 0x18D6 JUMPI DUP5 ISZERO PUSH2 0x1879 JUMPI DUP9 MLOAD PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x80 DUP2 SWAP1 MSTORE CALLER DUP11 DUP4 ADD SWAP1 DUP2 MSTORE ADDRESS DUP2 DUP4 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP9 SWAP1 MSTORE DUP3 SWAP1 DUP2 SWAP1 PUSH1 0x60 ADD SUB DUP2 DUP12 DUP10 GAS CALL DUP1 ISZERO PUSH2 0x186F JUMPI SWAP2 PUSH2 0x1667 SWAP4 SWAP2 DUP8 SWAP4 PUSH2 0x184E JUMPI JUMPDEST POP PUSH2 0x2CBE JUMP JUMPDEST SWAP8 DUP8 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS DUP9 DUP3 ADD MSTORE PUSH1 0x80 MLOAD DUP2 PUSH1 0x24 DUP2 DUP10 GAS STATICCALL DUP1 ISZERO PUSH2 0x17E2 JUMPI DUP11 SWAP1 DUP9 SWAP1 PUSH2 0x1818 JUMPI JUMPDEST PUSH2 0x16B7 SWAP3 POP LT ISZERO PUSH2 0x2E01 JUMP JUMPDEST PUSH2 0x12C DUP1 DUP11 MUL SWAP1 DUP11 DUP3 DIV EQ DUP11 ISZERO OR ISZERO PUSH2 0x17EC JUMPI PUSH2 0x2710 PUSH2 0x16D8 SWAP2 DIV DUP11 PUSH2 0x2E66 JUMP JUMPDEST SWAP7 DUP9 MLOAD SWAP1 PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 DUP3 MSTORE DUP2 DUP1 PUSH2 0x1734 DUP12 DUP8 PUSH1 0x80 MLOAD SWAP6 DUP5 ADD PUSH1 0x20 SWAP1 SWAP4 SWAP3 SWAP2 SWAP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x40 DUP3 ADD SWAP6 AND DUP2 MSTORE ADD MSTORE JUMP JUMPDEST SUB DUP2 DUP11 DUP11 GAS CALL DUP1 ISZERO PUSH2 0x17E2 JUMPI SWAP4 PUSH2 0x17B0 SWAP8 SWAP6 SWAP4 PUSH32 0xCD3829A3813DC3CDD188FD3D01DCF3268C16BE2FDD2DD21D0665418816E46062 DUP12 DUP4 SWAP6 DUP11 SWAP9 SWAP6 DUP3 SWAP12 SWAP7 PUSH2 0x17C1 JUMPI JUMPDEST POP DUP2 MLOAD SWAP4 DUP9 DUP6 MSTORE DUP14 PUSH1 0x80 MLOAD DUP7 ADD MSTORE AND SWAP3 LOG4 DUP4 MSTORE PUSH1 0xC PUSH1 0x80 MLOAD MSTORE PUSH2 0x179D DUP5 DUP5 KECCAK256 SWAP2 DUP3 SLOAD PUSH2 0x2E73 JUMP JUMPDEST SWAP1 SSTORE DUP2 MSTORE PUSH1 0xC PUSH1 0x80 MLOAD MSTORE KECCAK256 SWAP2 DUP3 SLOAD PUSH2 0x2E73 JUMP JUMPDEST SWAP1 SSTORE PUSH1 0x1 PUSH1 0x5 SSTORE MLOAD SWAP1 DUP2 MSTORE PUSH1 0x80 MLOAD SWAP1 RETURN JUMPDEST PUSH2 0x17DB SWAP1 PUSH1 0x80 MLOAD RETURNDATASIZE PUSH1 0x80 MLOAD GT PUSH2 0xF99 JUMPI PUSH2 0xF8B DUP2 DUP4 PUSH2 0x29CE JUMP JUMPDEST POP PUSH0 PUSH2 0x1776 JUMP JUMPDEST DUP10 MLOAD RETURNDATASIZE DUP10 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x24 DUP8 PUSH1 0x11 DUP11 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP4 MSTORE MSTORE REVERT JUMPDEST POP POP PUSH1 0x80 MLOAD RETURNDATASIZE DUP2 GT PUSH2 0x1847 JUMPI JUMPDEST PUSH2 0x182F DUP2 DUP4 PUSH2 0x29CE JUMP JUMPDEST DUP2 PUSH1 0x80 MLOAD SWAP2 DUP2 ADD SUB SLT PUSH2 0x6B5 JUMPI DUP10 PUSH2 0x16B7 SWAP2 MLOAD PUSH2 0x16AB JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1825 JUMP JUMPDEST PUSH2 0x1868 SWAP1 PUSH1 0x80 MLOAD RETURNDATASIZE PUSH1 0x80 MLOAD GT PUSH2 0xF99 JUMPI PUSH2 0xF8B DUP2 DUP4 PUSH2 0x29CE JUMP JUMPDEST POP PUSH0 PUSH2 0x1661 JUMP JUMPDEST DUP11 MLOAD RETURNDATASIZE DUP11 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x64 DUP9 PUSH1 0x20 DUP12 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E207A65726F PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 DUP9 PUSH1 0x20 DUP12 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F742073776170207468652073616D6520746F6B656E000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP6 DUP8 MLOAD PUSH32 0x3EE5AEB500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x78A JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x78A JUMPI PUSH1 0x7 SLOAD PUSH2 0x1997 DUP2 PUSH2 0x2BAE JUMP JUMPDEST SWAP2 JUMPDEST DUP2 DUP2 LT PUSH2 0x19B5 JUMPI DUP4 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 SWAP1 PUSH2 0x8DE SWAP1 DUP3 ADD DUP7 PUSH2 0x2A87 JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x19D6 PUSH1 0x1 SWAP4 PUSH2 0x2AD0 JUMP JUMPDEST POP SLOAD AND PUSH2 0x19E3 DUP3 DUP7 PUSH2 0x2B9A JUMP JUMPDEST MSTORE ADD PUSH2 0x1999 JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x1E3 JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1E3 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH2 0x12C DUP2 MSTORE RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x6B5 JUMPI PUSH1 0x20 SWAP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC SWAP3 DUP3 DUP5 CALLDATASIZE ADD SLT PUSH2 0x6B5 JUMPI PUSH2 0x1A62 PUSH2 0x28B4 JUMP JUMPDEST SWAP2 PUSH2 0x1A73 PUSH2 0x1A6E PUSH2 0x2FEA JUMP JUMPDEST PUSH2 0x2B35 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x3E8 SWAP1 DUP2 DUP2 MUL SWAP2 DUP2 DUP4 DIV EQ SWAP1 ISZERO OR ISZERO PUSH2 0x1E0D JUMPI PUSH2 0x2710 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP6 AND PUSH0 MSTORE PUSH0 DUP7 MSTORE DIV DUP3 PUSH0 KECCAK256 SLOAD LT PUSH2 0x1DB2 JUMPI PUSH1 0x7 SWAP5 PUSH1 0x7 SLOAD PUSH2 0x1AC4 DUP2 PUSH2 0x2BAE JUMP JUMPDEST SWAP2 PUSH2 0x1ACE DUP3 PUSH2 0x2BAE JUMP JUMPDEST SWAP2 PUSH0 JUMPDEST DUP2 DUP2 LT PUSH2 0x1D79 JUMPI POP POP DUP6 PUSH1 0xA SLOAD AND DUP1 EXTCODESIZE ISZERO PUSH2 0x6B5 JUMPI PUSH0 DUP1 SWAP2 DUP7 DUP9 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH32 0xFE11011600000000000000000000000000000000000000000000000000000000 DUP4 MSTORE GAS CALL DUP1 ISZERO PUSH2 0x1D6F JUMPI PUSH2 0x1D5A JUMPI JUMPDEST POP SWAP1 DUP9 SWAP2 DUP7 PUSH1 0x6 SLOAD AND PUSH1 0x8 SLOAD SWAP1 DUP9 PUSH1 0xB SLOAD AND DUP2 EXTCODESIZE ISZERO PUSH2 0x1D56 JUMPI DUP9 MLOAD PUSH32 0x325192D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0xC0 DUP2 DUP11 ADD MSTORE SWAP5 DUP7 SWAP5 DUP7 SWAP5 DUP6 SWAP4 DUP8 SWAP4 DUP6 SWAP4 PUSH2 0x1B8F SWAP2 PUSH2 0x1B80 PUSH1 0xC4 DUP8 ADD DUP16 PUSH2 0x2A87 JUMP JUMPDEST SWAP2 DUP7 DUP4 SUB ADD PUSH1 0x24 DUP8 ADD MSTORE PUSH2 0x28FA JUMP JUMPDEST SWAP2 ADDRESS PUSH1 0x44 DUP6 ADD MSTORE ADDRESS PUSH1 0x64 DUP6 ADD MSTORE PUSH1 0x84 DUP5 ADD MSTORE PUSH1 0xA4 DUP4 ADD MSTORE SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x1D4C JUMPI PUSH2 0x1D38 JUMPI JUMPDEST POP JUMPDEST DUP7 SLOAD DUP2 LT ISZERO PUSH2 0x1CFA JUMPI DUP5 PUSH2 0x1BCA DUP3 PUSH2 0x2AD0 JUMP JUMPDEST POP SLOAD AND DUP5 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS DUP6 DUP3 ADD MSTORE DUP8 DUP2 PUSH1 0x24 DUP2 DUP6 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x1CF0 JUMPI SWAP1 DUP9 SWAP2 DUP12 SWAP2 PUSH2 0x1CBF JUMPI JUMPDEST POP DUP3 PUSH2 0x1C7D SWAP4 DUP13 MSTORE PUSH1 0xC DUP4 MSTORE DUP2 DUP9 DUP14 KECCAK256 SSTORE DUP9 PUSH1 0xA SLOAD AND DUP13 DUP10 MLOAD DUP1 SWAP7 DUP2 SWAP6 DUP3 SWAP5 PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 DUP5 MSTORE DUP13 DUP5 ADD PUSH1 0x20 SWAP1 SWAP4 SWAP3 SWAP2 SWAP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x40 DUP3 ADD SWAP6 AND DUP2 MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x1CB5 JUMPI SWAP1 PUSH1 0x1 SWAP3 SWAP2 PUSH2 0x1C98 JUMPI JUMPDEST POP ADD PUSH2 0x1BB7 JUMP JUMPDEST PUSH2 0x1CAE SWAP1 DUP9 RETURNDATASIZE DUP11 GT PUSH2 0xF99 JUMPI PUSH2 0xF8B DUP2 DUP4 PUSH2 0x29CE JUMP JUMPDEST POP PUSH0 PUSH2 0x1C91 JUMP JUMPDEST DUP6 MLOAD RETURNDATASIZE DUP12 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP3 DUP2 SWAP4 SWAP3 POP RETURNDATASIZE DUP4 GT PUSH2 0x1CE9 JUMPI JUMPDEST PUSH2 0x1CD6 DUP2 DUP4 PUSH2 0x29CE JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x6B5 JUMPI MLOAD DUP8 SWAP1 PUSH2 0x1C7D PUSH2 0x1C10 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1CCC JUMP JUMPDEST DUP7 MLOAD RETURNDATASIZE DUP13 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP4 MLOAD DUP7 DUP2 MSTORE DUP9 SWAP1 CALLER SWAP1 PUSH32 0x279B343370F587AF7FB675AE7C8578E9C8ABCC373236AD02C501A4771FE7A7B8 SWAP1 DUP1 PUSH2 0x1D32 DUP2 DUP13 ADD DUP9 PUSH2 0x2A87 JUMP JUMPDEST SUB SWAP1 LOG2 DUP1 RETURN JUMPDEST PUSH2 0x1D41 SWAP1 PUSH2 0x298D JUMP JUMPDEST PUSH2 0x118B JUMPI DUP7 PUSH0 PUSH2 0x1BB5 JUMP JUMPDEST DUP6 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP6 DUP1 REVERT JUMPDEST PUSH2 0x1D66 SWAP2 SWAP3 SWAP10 POP PUSH2 0x298D JUMP JUMPDEST PUSH0 SWAP8 SWAP1 PUSH0 PUSH2 0x1B20 JUMP JUMPDEST DUP7 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP1 DUP9 PUSH2 0x1D86 PUSH1 0x1 SWAP4 PUSH2 0x2AD0 JUMP JUMPDEST POP SLOAD AND PUSH2 0x1D93 DUP3 DUP9 PUSH2 0x2B9A JUMP JUMPDEST MSTORE DUP2 PUSH2 0x1D9E DUP3 PUSH2 0x2AD0 JUMP JUMPDEST POP ADD SLOAD PUSH2 0x1DAB DUP3 DUP8 PUSH2 0x2B9A JUMP JUMPDEST MSTORE ADD PUSH2 0x1AD1 JUMP JUMPDEST DUP4 PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E646572203525204C50207368617265000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x11 DUP3 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP3 CALLVALUE PUSH2 0x6B5 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x1DC PUSH2 0x1E4E CALLDATASIZE PUSH2 0x292D JUMP JUMPDEST SWAP2 PUSH2 0x2CBE JUMP JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x6B5 JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x6B5 JUMPI DUP1 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x6B5 JUMPI PUSH2 0x1EA2 SWAP2 CALLDATASIZE SWAP2 ADD PUSH2 0x2A27 JUMP JUMPDEST SWAP1 PUSH1 0x24 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x6B5 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 PUSH2 0x1ED4 DUP5 PUSH1 0xA SLOAD AND CALLER EQ PUSH2 0x2C59 JUMP JUMPDEST PUSH0 JUMPDEST PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x1F3C JUMPI DUP1 DUP6 PUSH2 0x1EED PUSH1 0x1 SWAP4 PUSH2 0x2AD0 JUMP JUMPDEST POP SLOAD AND PUSH2 0x1EFA DUP3 DUP6 PUSH2 0x2B9A JUMP JUMPDEST MLOAD SWAP1 DUP6 ISZERO PUSH2 0x1F20 JUMPI PUSH0 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH2 0x1F17 DUP7 PUSH0 KECCAK256 SWAP2 DUP3 SLOAD PUSH2 0x2E73 JUMP JUMPDEST SWAP1 SSTORE JUMPDEST ADD PUSH2 0x1ED6 JUMP JUMPDEST PUSH0 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH2 0x1F35 DUP7 PUSH0 KECCAK256 SWAP2 DUP3 SLOAD PUSH2 0x2E66 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x1F1A JUMP JUMPDEST STOP JUMPDEST DUP3 CALLVALUE PUSH2 0x6B5 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x6B5 JUMPI PUSH2 0x8DE PUSH2 0x1F78 PUSH2 0x306B JUMP JUMPDEST DUP4 SWAP3 SWAP2 SWAP3 MLOAD SWAP4 DUP5 SWAP4 DUP5 MSTORE DUP1 PUSH1 0x20 DUP6 ADD MSTORE DUP4 ADD SWAP1 PUSH2 0x28FA JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x6B5 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x6B5 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH1 0x12 DUP2 MSTORE RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x6B5 JUMPI PUSH2 0x1FD9 CALLDATASIZE PUSH2 0x292D JUMP JUMPDEST SWAP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 SWAP3 SWAP4 AND DUP1 PUSH0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE DUP6 PUSH0 KECCAK256 CALLER PUSH0 MSTORE PUSH1 0x20 MSTORE DUP6 PUSH0 KECCAK256 SLOAD SWAP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 SUB PUSH2 0x203F JUMPI JUMPDEST PUSH1 0x20 DUP8 PUSH2 0xA76 DUP9 DUP9 DUP9 PUSH2 0x31B2 JUMP JUMPDEST DUP6 DUP4 LT PUSH2 0x20D9 JUMPI DUP2 ISZERO PUSH2 0x20AA JUMPI CALLER ISZERO PUSH2 0x207B JUMPI POP PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE DUP7 DUP3 KECCAK256 CALLER DUP4 MSTORE DUP2 MSTORE SWAP1 DUP7 SWAP1 KECCAK256 SWAP2 DUP6 SWAP1 SUB SWAP1 SWAP2 SSTORE DUP3 SWAP1 PUSH2 0xA76 PUSH2 0x2031 JUMP JUMPDEST PUSH1 0x24 SWAP1 PUSH0 DUP9 MLOAD SWAP2 PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x24 SWAP1 PUSH0 DUP9 MLOAD SWAP2 PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST DUP7 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER SWAP2 DUP2 ADD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 DUP2 ADD DUP7 SWAP1 MSTORE DUP3 SWAP2 POP PUSH1 0x60 ADD SUB SWAP1 REVERT JUMPDEST DUP3 CALLVALUE PUSH2 0x6B5 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x6B5 JUMPI PUSH1 0x7 SLOAD PUSH2 0x2159 DUP2 PUSH2 0x2BAE JUMP JUMPDEST SWAP1 PUSH0 JUMPDEST DUP2 DUP2 LT PUSH2 0x2178 JUMPI DUP4 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 SWAP1 PUSH2 0x8DE SWAP1 DUP3 ADD DUP7 PUSH2 0x28FA JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH2 0x2185 DUP2 SWAP4 PUSH2 0x2AD0 JUMP JUMPDEST POP ADD SLOAD PUSH2 0x2192 DUP3 DUP7 PUSH2 0x2B9A JUMP JUMPDEST MSTORE ADD PUSH2 0x215C JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x6B5 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x6B5 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x21D3 PUSH2 0x306B JUMP JUMPDEST POP SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x6B5 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x6B5 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x2 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x6B5 JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x6B5 JUMPI PUSH2 0x224E PUSH2 0x28B4 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER ISZERO PUSH2 0x22ED JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 ISZERO PUSH2 0x22BE JUMPI PUSH1 0x20 SWAP4 POP CALLER PUSH0 MSTORE PUSH1 0x1 DUP5 MSTORE DUP3 PUSH0 KECCAK256 DUP3 PUSH0 MSTORE DUP5 MSTORE DUP1 DUP4 PUSH0 KECCAK256 SSTORE DUP3 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 CALLER SWAP3 LOG3 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x24 DUP5 PUSH0 DUP6 MLOAD SWAP2 PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x24 DUP5 PUSH0 DUP6 MLOAD SWAP2 PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST DUP3 CALLVALUE PUSH2 0x6B5 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x6B5 JUMPI PUSH2 0x8DE SWAP1 PUSH2 0x2357 PUSH2 0x2BFD JUMP JUMPDEST SWAP1 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x28FA JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x6B5 JUMPI PUSH1 0x20 SWAP1 DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x6B5 JUMPI PUSH2 0x23A4 PUSH2 0x28B4 JUMP JUMPDEST SWAP2 PUSH2 0x23B0 PUSH2 0x1A6E PUSH2 0x2FEA JUMP JUMPDEST PUSH2 0x23B8 PUSH2 0x306B JUMP JUMPDEST SWAP5 SWAP1 PUSH1 0x7 SLOAD SWAP1 PUSH2 0x23C7 DUP3 PUSH2 0x2BAE JUMP JUMPDEST SWAP7 PUSH0 JUMPDEST DUP4 DUP2 LT PUSH2 0x2680 JUMPI POP POP POP PUSH0 SWAP1 PUSH0 SWAP1 JUMPDEST DUP1 DUP3 LT PUSH2 0x265F JUMPI POP POP PUSH0 JUMPDEST DUP7 MLOAD DUP2 LT ISZERO PUSH2 0x2618 JUMPI PUSH2 0x23F7 DUP2 DUP9 PUSH2 0x2B9A JUMP JUMPDEST MLOAD PUSH2 0x2405 JUMPI JUMPDEST PUSH1 0x1 ADD PUSH2 0x23E4 JUMP JUMPDEST PUSH2 0x248A PUSH2 0x2412 DUP3 DUP10 PUSH2 0x2B9A JUMP JUMPDEST MLOAD DUP6 PUSH2 0x241D DUP5 PUSH2 0x2AD0 JUMP JUMPDEST POP SLOAD PUSH1 0x6 SLOAD PUSH1 0xB SLOAD DUP11 MLOAD PUSH32 0x248391FF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 AND DUP11 DUP3 ADD SWAP1 DUP2 MSTORE SWAP4 DUP3 AND PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x40 DUP5 ADD SWAP6 SWAP1 SWAP6 MSTORE SWAP4 SWAP5 DUP6 SWAP3 SWAP2 DUP6 AND SWAP2 DUP4 SWAP2 DUP3 SWAP2 PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x260E JUMPI PUSH0 SWAP3 PUSH2 0x25DF JUMPI JUMPDEST POP DUP2 ISZERO PUSH2 0x2583 JUMPI PUSH2 0x251C DUP7 DUP4 DUP4 PUSH2 0x24B2 DUP8 PUSH2 0x2AD0 JUMP JUMPDEST POP SLOAD AND DUP5 PUSH1 0xA SLOAD AND PUSH0 DUP11 DUP14 MLOAD SWAP7 DUP8 SWAP6 DUP7 SWAP5 DUP6 SWAP4 PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 DUP6 MSTORE CALLER SWAP1 DUP6 ADD PUSH1 0x40 SWAP2 SWAP5 SWAP4 SWAP3 SWAP5 PUSH1 0x60 DUP3 ADD SWAP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP3 AND DUP4 MSTORE AND PUSH1 0x20 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x2579 JUMPI SWAP1 PUSH1 0x1 SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0x255C JUMPI JUMPDEST POP PUSH2 0x253C DUP4 PUSH2 0x2AD0 JUMP JUMPDEST POP SLOAD AND PUSH0 MSTORE PUSH1 0xC DUP7 MSTORE PUSH2 0x2553 DUP8 PUSH0 KECCAK256 SWAP2 DUP3 SLOAD PUSH2 0x2E73 JUMP JUMPDEST SWAP1 SSTORE SWAP1 POP PUSH2 0x23FD JUMP JUMPDEST PUSH2 0x2572 SWAP1 DUP9 RETURNDATASIZE DUP11 GT PUSH2 0xF99 JUMPI PUSH2 0xF8B DUP2 DUP4 PUSH2 0x29CE JUMP JUMPDEST POP DUP11 PUSH2 0x2532 JUMP JUMPDEST DUP9 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x64 DUP6 DUP8 DUP10 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420746F6B656E20616D6F756E7420746F206164640000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 SWAP2 POP DUP6 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x2607 JUMPI JUMPDEST PUSH2 0x25F7 DUP2 DUP4 PUSH2 0x29CE JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x6B5 JUMPI MLOAD SWAP1 DUP10 PUSH2 0x249C JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x25ED JUMP JUMPDEST DUP8 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP4 PUSH32 0xA95AD530009C6F929555E70A66AADBEAE7231E45756C5B028CA77FBAA376E73E PUSH2 0x265A DUP10 DUP9 PUSH2 0x2649 DUP8 DUP13 PUSH2 0x3118 JUMP JUMPDEST MLOAD SWAP2 DUP3 SWAP2 DUP6 DUP4 MSTORE CALLER SWAP6 DUP4 ADD SWAP1 PUSH2 0x28FA JUMP JUMPDEST SUB SWAP1 LOG2 STOP JUMPDEST SWAP1 SWAP2 PUSH2 0x2678 PUSH1 0x1 SWAP2 PUSH2 0x2671 DUP6 DUP12 PUSH2 0x2B9A JUMP JUMPDEST MLOAD SWAP1 PUSH2 0x2E73 JUMP JUMPDEST SWAP3 ADD SWAP1 PUSH2 0x23D9 JUMP JUMPDEST DUP1 PUSH2 0x2710 PUSH2 0x269C PUSH1 0x1 PUSH2 0x2693 DUP2 SWAP6 PUSH2 0x2AD0 JUMP JUMPDEST POP ADD SLOAD DUP7 PUSH2 0x2D72 JUMP JUMPDEST DIV DUP1 PUSH2 0x26A8 DUP4 DUP7 PUSH2 0x2B9A JUMP JUMPDEST MLOAD LT PUSH2 0x26B6 JUMPI JUMPDEST POP ADD PUSH2 0x23CA JUMP JUMPDEST PUSH2 0x26C4 SWAP1 PUSH2 0x5A9 DUP4 DUP7 PUSH2 0x2B9A JUMP JUMPDEST PUSH2 0x26CE DUP3 DUP13 PUSH2 0x2B9A JUMP JUMPDEST MSTORE DUP11 PUSH2 0x26AF JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x6B5 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x6B5 JUMPI DUP1 MLOAD SWAP1 PUSH0 SWAP3 PUSH1 0x3 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 SHR SWAP2 PUSH1 0x1 DUP2 AND DUP1 ISZERO PUSH2 0x2814 JUMPI JUMPDEST PUSH1 0x20 SWAP5 DUP6 DUP6 LT DUP3 EQ PUSH2 0x27E8 JUMPI POP DUP4 DUP8 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x27AA JUMPI POP PUSH1 0x1 EQ PUSH2 0x2750 JUMPI JUMPDEST POP POP POP PUSH2 0xAF9 DUP3 PUSH2 0x8DE SWAP5 SUB DUP4 PUSH2 0x29CE JUMP JUMPDEST PUSH1 0x3 PUSH0 SWAP1 DUP2 MSTORE SWAP3 SWAP6 POP PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B JUMPDEST DUP3 DUP5 LT PUSH2 0x2797 JUMPI POP POP POP DUP3 PUSH2 0x8DE SWAP5 PUSH2 0xAF9 SWAP3 DUP3 ADD ADD SWAP5 PUSH2 0x273E JUMP JUMPDEST DUP1 SLOAD DUP7 DUP6 ADD DUP9 ADD MSTORE SWAP3 DUP7 ADD SWAP3 DUP2 ADD PUSH2 0x277B JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND DUP7 DUP6 ADD MSTORE POP POP ISZERO ISZERO PUSH1 0x5 SHL DUP4 ADD ADD SWAP3 POP PUSH2 0xAF9 DUP3 PUSH2 0x8DE PUSH2 0x273E JUMP JUMPDEST PUSH1 0x22 SWAP1 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP3 PUSH1 0x7F AND SWAP3 PUSH2 0x271E JUMP JUMPDEST CALLVALUE PUSH2 0x6B5 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x6B5 JUMPI PUSH1 0x20 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x6 SLOAD AND DUP2 MSTORE RETURN JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F PUSH1 0x20 PUSH1 0x40 SWAP5 DUP2 DUP6 MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP2 DUP3 DUP3 DUP9 ADD MSTORE ADD DUP7 DUP7 ADD MCOPY PUSH0 DUP6 DUP3 DUP7 ADD ADD MSTORE ADD AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x6B5 JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x6B5 JUMPI JUMP JUMPDEST SWAP1 DUP2 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP1 SWAP4 ADD SWAP4 ADD SWAP2 PUSH0 JUMPDEST DUP3 DUP2 LT PUSH2 0x2919 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x290B JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC PUSH1 0x60 SWAP2 ADD SLT PUSH2 0x6B5 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 PUSH1 0x4 CALLDATALOAD DUP3 DUP2 AND DUP2 SUB PUSH2 0x6B5 JUMPI SWAP2 PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 AND DUP2 SUB PUSH2 0x6B5 JUMPI SWAP1 PUSH1 0x44 CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x29A1 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP1 PUSH1 0x1F PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x29A1 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x29A1 JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x6B5 JUMPI PUSH1 0x20 SWAP1 DUP3 CALLDATALOAD PUSH2 0x2A41 DUP2 PUSH2 0x2A0F JUMP JUMPDEST SWAP4 PUSH2 0x2A4F PUSH1 0x40 MLOAD SWAP6 DUP7 PUSH2 0x29CE JUMP JUMPDEST DUP2 DUP6 MSTORE PUSH1 0x20 DUP1 DUP7 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x6B5 JUMPI PUSH1 0x20 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x2A78 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE SWAP1 DUP4 ADD SWAP1 DUP4 ADD PUSH2 0x2A6A JUMP JUMPDEST SWAP1 DUP2 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP1 SWAP4 ADD SWAP4 ADD SWAP2 PUSH0 JUMPDEST DUP3 DUP2 LT PUSH2 0x2AA6 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x2A98 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x2B08 JUMPI PUSH1 0x7 PUSH0 MSTORE PUSH1 0x1 SHL PUSH32 0xA66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C688 ADD SWAP1 PUSH0 SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ISZERO PUSH2 0x2B3C JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526562616C616E6365206E6F74206E6565646564000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x2B08 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x2BB8 DUP3 PUSH2 0x2A0F JUMP JUMPDEST PUSH2 0x2BC5 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x29CE JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH2 0x2BF3 DUP3 SWAP5 PUSH2 0x2A0F JUMP JUMPDEST ADD SWAP1 PUSH1 0x20 CALLDATASIZE SWAP2 ADD CALLDATACOPY JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x2C09 DUP2 PUSH2 0x2BAE JUMP JUMPDEST SWAP1 PUSH0 JUMPDEST DUP2 DUP2 LT PUSH2 0x2C18 JUMPI POP POP SWAP1 JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x2C39 PUSH1 0x1 SWAP4 PUSH2 0x2AD0 JUMP JUMPDEST POP SLOAD AND PUSH0 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SLOAD PUSH2 0x2C52 DUP3 DUP7 PUSH2 0x2B9A JUMP JUMPDEST MSTORE ADD PUSH2 0x2C0C JUMP JUMPDEST ISZERO PUSH2 0x2C60 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920506572697068657279000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH32 0x248391FF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP3 DUP3 AND PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x44 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP1 SWAP2 PUSH1 0x20 SWAP2 DUP4 SWAP2 AND DUP2 DUP1 PUSH1 0x64 DUP2 ADD JUMPDEST SUB SWAP2 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x2D67 JUMPI PUSH0 SWAP2 PUSH2 0x2D38 JUMPI POP SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x2D5F JUMPI JUMPDEST DUP2 PUSH2 0x2D53 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x29CE JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x6B5 JUMPI MLOAD SWAP1 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x2D46 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x2D85 JUMPI JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x2DBC JUMPI DIV SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x6B5 JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x6B5 JUMPI SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x2E08 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E74204C697175696469747900000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x2D85 JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x2D85 JUMPI JUMP JUMPDEST PUSH2 0x2E88 PUSH2 0x306B JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x7 SLOAD SWAP1 PUSH2 0x2E97 DUP3 PUSH2 0x2A0F JUMP JUMPDEST SWAP2 PUSH2 0x2EA5 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x29CE JUMP JUMPDEST DUP1 DUP4 MSTORE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH2 0x2ED2 DUP3 PUSH2 0x2A0F JUMP JUMPDEST ADD CALLDATASIZE PUSH1 0x20 DUP6 ADD CALLDATACOPY PUSH2 0x2EE2 DUP2 PUSH2 0x2BAE JUMP JUMPDEST SWAP5 PUSH0 JUMPDEST DUP3 DUP2 LT PUSH2 0x2EF4 JUMPI POP POP POP POP SWAP2 SWAP1 JUMP JUMPDEST PUSH2 0x2EFE DUP2 DUP4 PUSH2 0x2B9A JUMP JUMPDEST MLOAD SWAP1 PUSH2 0x2710 SWAP2 DUP3 DUP2 MUL SWAP3 DUP2 DUP5 DIV EQ SWAP1 ISZERO OR ISZERO PUSH2 0x2D85 JUMPI PUSH2 0x2F20 DUP6 PUSH1 0x1 SWAP4 PUSH2 0x2DB2 JUMP JUMPDEST PUSH2 0x2F29 DUP3 PUSH2 0x2AD0 JUMP JUMPDEST POP DUP4 ADD SLOAD DUP4 SWAP2 DUP2 DUP2 GT ISZERO PUSH2 0x2F5E JUMPI SWAP1 PUSH2 0x2F41 SWAP2 PUSH2 0x2E66 JUMP JUMPDEST PUSH2 0x2F4B DUP4 DUP12 PUSH2 0x2B9A JUMP JUMPDEST MSTORE PUSH2 0x2F56 DUP3 DUP9 PUSH2 0x2B9A JUMP JUMPDEST MSTORE JUMPDEST ADD PUSH2 0x2EE5 JUMP JUMPDEST SWAP1 PUSH2 0x2F69 SWAP3 POP PUSH2 0x2E66 JUMP JUMPDEST PUSH2 0x2F73 DUP3 DUP11 PUSH2 0x2B9A JUMP JUMPDEST MSTORE PUSH0 PUSH2 0x2F7F DUP3 DUP9 PUSH2 0x2B9A JUMP JUMPDEST MSTORE PUSH2 0x2F58 JUMP JUMPDEST ISZERO PUSH2 0x2F8C JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E74206C697175696469747900000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH2 0x2FF2 PUSH2 0x2E80 JUMP JUMPDEST PUSH0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x3039 JUMPI PUSH2 0x3007 DUP2 DUP5 PUSH2 0x2B9A JUMP JUMPDEST MLOAD ISZERO ISZERO DUP1 PUSH2 0x3024 JUMPI JUMPDEST PUSH2 0x301C JUMPI PUSH1 0x1 ADD PUSH2 0x2FF4 JUMP JUMPDEST POP POP POP PUSH1 0x1 SWAP1 JUMP JUMPDEST POP PUSH2 0x302F DUP2 DUP4 PUSH2 0x2B9A JUMP JUMPDEST MLOAD PUSH1 0x8 SLOAD LT PUSH2 0x3010 JUMP JUMPDEST POP POP POP PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x3048 PUSH2 0x306B JUMP JUMPDEST POP PUSH1 0x2 SLOAD DUP1 ISZERO PUSH2 0x3065 JUMPI PUSH2 0x432 PUSH2 0x3062 SWAP3 PUSH1 0x9 SLOAD SWAP1 PUSH2 0x2D72 JUMP JUMPDEST SWAP1 JUMP JUMPDEST POP POP PUSH0 SWAP1 JUMP JUMPDEST PUSH1 0x7 SLOAD SWAP1 PUSH0 PUSH2 0x3079 DUP4 PUSH2 0x2BAE JUMP JUMPDEST SWAP3 PUSH0 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 PUSH1 0xB SLOAD AND SWAP1 JUMPDEST DUP3 DUP5 LT PUSH2 0x30A7 JUMPI POP POP POP POP SWAP2 SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 PUSH2 0x30E7 PUSH1 0x1 SWAP2 DUP4 PUSH2 0x30BB DUP9 PUSH2 0x2AD0 JUMP JUMPDEST POP SLOAD AND DUP6 DUP2 SUB PUSH2 0x30F1 JUMPI PUSH0 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SLOAD PUSH2 0x30DB DUP9 DUP12 PUSH2 0x2B9A JUMP JUMPDEST MSTORE JUMPDEST PUSH2 0x2671 DUP8 DUP11 PUSH2 0x2B9A JUMP JUMPDEST SWAP5 ADD SWAP3 SWAP2 SWAP1 PUSH2 0x3098 JUMP JUMPDEST DUP1 PUSH2 0x3108 SWAP2 PUSH0 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SLOAD SWAP1 PUSH2 0x32BF JUMP JUMPDEST PUSH2 0x3112 DUP9 DUP12 PUSH2 0x2B9A JUMP JUMPDEST MSTORE PUSH2 0x30DD JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 ISZERO PUSH2 0x3182 JUMPI PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x20 DUP3 PUSH2 0x3166 PUSH0 SWAP5 PUSH1 0x2 SLOAD PUSH2 0x2E73 JUMP JUMPDEST PUSH1 0x2 SSTORE DUP5 DUP5 MSTORE DUP4 DUP3 MSTORE PUSH1 0x40 DUP5 KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x24 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP5 AND SWAP3 DUP4 ISZERO PUSH2 0x328F JUMPI AND SWAP3 DUP4 ISZERO PUSH2 0x3182 JUMPI DUP3 PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SLOAD SWAP1 DUP3 DUP3 LT PUSH2 0x3237 JUMPI POP DUP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 PUSH1 0x20 SWAP3 DUP6 PUSH0 MSTORE PUSH0 DUP5 MSTORE SUB PUSH1 0x40 PUSH0 KECCAK256 SSTORE DUP5 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x24 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x6 SLOAD PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH32 0x248391FF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP4 DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP1 DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x20 SWAP2 DUP4 SWAP2 AND DUP2 DUP1 PUSH1 0x64 DUP2 ADD PUSH2 0x2D23 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC8 COINBASE BASEFEE LT 0xC3 PUSH14 0xC329497F0BF640C364C1D29C54D4 DUP1 PUSH17 0xBA851498E68EF0072A6864736F6C634300 ADDMOD NOT STOP CALLER ","sourceMap":"1729:21398:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;3318:50;1729:21398;3340:9;1729:21398;;3326:10;:23;3318:50;:::i;:::-;3222:12:8;1729:21398:15;7533:22;;7593:13;;:::i;:::-;7623:10;;1729:21398;7623:10;1729:21398;;;;7623:37;;1729:21398;;7703:21;;1729:21398;;7752:13;;7747:450;7767:21;;;;;;8213:14;;;;;1729:21398;;8302:16;;;8329:19;8298:275;;8587:11;;1729:21398;;3326:10;;8704:18;3326:10;;;;;;;1729:21398;;;;;;;;;;;;;;;8676:6;;;;;:::i;:::-;1729:21398;;;;;;;;8704:18;:::i;:::-;8737:11;1729:21398;;21917:13;;1729:21398;21955:3;1729:21398;;21932:21;;;;;21985:13;;;1729:21398;21985:13;;:::i;:::-;1729:21398;;;22034:10;;;;:::i;:::-;1729:21398;;;;22067:8;1729:21398;;22067:29;1729:21398;;;;;;22067:29;:::i;:::-;1729:21398;;;21917:13;;21932:21;;;;;8817:16;1729:21398;;;;;;8817:16;1729:21398;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8298:275;8400:24;;:::i;:::-;8441:18;;;;1729:21398;;8520:45;8521:26;;;;;:::i;:::-;8520:45;:::i;:::-;8298:275;;;1729:21398;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7790:3;7820:13;;;;;;;:::i;:::-;1729:21398;;;;;7872:38;1729:21398;7872:38;;7904:4;7872:38;;;1729:21398;;7872:38;;;;;;;;;;;;;;;;;7790:3;7927:17;;;1729:21398;;8005:28;8021:12;;;;;:::i;:::-;1729:21398;8005:28;;:::i;:::-;8050:10;;;1729:21398;;8123:34;;;8166:23;8123:34;1729:21398;8123:34;;:::i;:::-;8166:23;;:::i;:::-;7790:3;1729:21398;7752:13;;;;1729:21398;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7872:38;;;;;;;;;;;;;;;;:::i;:::-;;;1729:21398;;;;;7872:38;;;1729:21398;;;;7872:38;;;;;;-1:-1:-1;;1729:21398:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;3952:11:8;1729:21398:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;2015:43;1729:21398;;;;;;;;;;;;;;;;;;;;;;;;;;1824:29;1729:21398;1824:29;;;;;;;;;:::i;:::-;-1:-1:-1;1729:21398:15;;;1824:29;;;1729:21398;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13586:24;;;:::i;:::-;1729:21398;;;;;13625:33;;1729:21398;;;;13696:25;;;;;:::i;:::-;1729:21398;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1984:24;1729:21398;;;;;;;;;;;;;;;;;;;;;;;1885:18;1729:21398;;;;;;;;;;;;;;;;;;;;;;3754:5:8;1729:21398:15;;:::i;:::-;;;735:10:12;;3754:5:8;:::i;:::-;1729:21398:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;-1:-1:-1;1729:21398:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;1729:21398:15;;;;;;;;-1:-1:-1;1729:21398:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;3318:50;1729:21398;3340:9;1729:21398;;3326:10;:23;3318:50;:::i;:::-;9944:4;1729:21398;;;;;;;;;9967:9;;;1729:21398;;3222:12:8;1729:21398:15;10068:15;;;1729:21398;;10148:10;;1729:21398;10134:32;;;;:::i;:::-;1976:3;;1729:21398;;;;;;;;;10214:5;10250:11;1729:21398;;10250:11;;;:::i;:::-;10275:13;;10290:21;;;;;;9944:4;;;;1729:21398;;;;;10484:76;1729:21398;;;;;10492:41;;10484:76;:::i;:::-;1729:21398;;;10626:10;1729:21398;;;;10626:24;;;;1729:21398;10626:24;;;;;;;;;;;;;;;;;;;;;;10270:206;1729:21398;;10595:61;1729:21398;;;;;;;;;;10595:61;;;;;;1729:21398;;;;;;;;;;;;;;;;;10595:61;;9944:4;;;10595:61;;;;;;;;;;;10270:206;1729:21398;;;;9944:4;1729:21398;;;;;10722:76;1729:21398;;;;;10730:41;;10722:76;:::i;:::-;9944:4;8317:21:8;8313:89;;9944:4:15;1729:21398;;;;;;;;;6603:19:8;;;6599:115;;9944:4:15;;;1729:21398;;;;;;;;;;;3222:12:8;1729:21398:15;;3222:12:8;1729:21398:15;;;;;;;7346:25:8;9944:4:15;;7346:25:8;;10854:13:15;10892:3;1729:21398;;10869:21;;;;;10921:13;;;;;:::i;:::-;1729:21398;;;;;10914:52;;;;1729:21398;10914:52;;9944:4;;10914:52;;;1729:21398;;10914:52;;;;;;;;;;;;;10892:3;10906:101;10970:10;;;;;;:::i;:::-;1729:21398;-1:-1:-1;10914:66:15;10906:101;:::i;:::-;11051:13;;;;;;;11044:52;11085:10;11051:13;;;;;:::i;:::-;1729:21398;;;11085:10;;:::i;:::-;1729:21398;;;11044:52;;;;;;;;;;;1729:21398;;;;;;;;;;;;;;;;;11044:52;;;;;;;;;;;;;;10892:3;1729:21398;;;;10892:3;1729:21398;;10854:13;;1729:21398;;;;;;;;;;;;;;;;;;;;;;;;11044:52;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;1729:21398;;;;;;;;;10914:52;;;;;;;;;;;;;;;:::i;:::-;;;1729:21398;;;;10906:101;1729:21398;;10914:52;;;;;;;10869:21;;;;;;;;;1729:21398;21955:3;1729:21398;;21932:21;;;;;21985:13;;;1729:21398;21985:13;;:::i;:::-;1729:21398;;;22034:10;;;;:::i;:::-;1729:21398;;;;22110:8;1729:21398;;22110:29;1729:21398;;;;;;22110:29;:::i;:::-;1729:21398;;;21917:13;;21932:21;;;;11220:23;21932:21;;1729:21398;;;;;11220:23;;1729:21398;;6599:115:8;1729:21398:15;;6649:50:8;;;9944:4:15;6649:50:8;;;1729:21398:15;;;;;;;;;;;;;;;;;;;;;6649:50:8;;;8313:89;1729:21398:15;;;;;8361:30:8;;;;;;1729:21398:15;8361:30:8;1729:21398:15;;;;;;;;;;;;;;;;;;;;;;;;10595:61;;;;;;;;;;;;;;:::i;:::-;;;;;1729:21398;;;;;;;;;10626:24;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;1729:21398;;;;;;;;;;;;10626:24;;;;;;;;10595:61;10626:24;;1729:21398;;;;10626:24;;;;;10313:3;10357:13;;;1729:21398;10357:13;;;;:::i;:::-;1729:21398;;;;;10350:52;;;;1729:21398;10350:52;;9944:4;10350:52;;;1729:21398;10350:52;;;;;;;;;;;;;;;;10313:3;10425:28;;;10424:44;10425:28;1729:21398;10425:28;;:::i;10424:44::-;10411:57;;;;:::i;:::-;1729:21398;;10275:13;;10350:52;;;;;;;;;;;;;;;;;;:::i;:::-;;;1729:21398;;;;;;;;-1:-1:-1;1729:21398:15;;10425:28;10350:52;;;;;;;;1729:21398;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;1729:21398:15;;;;;;;;;;;;;;;;;;;;;;;1858:22;1729:21398;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;3318:50;1729:21398;3340:9;1729:21398;;3326:10;:23;3318:50;:::i;:::-;22569:13;22607:3;22588:10;1729:21398;22584:21;;;;;22637:13;;;1729:21398;22637:13;;:::i;:::-;1729:21398;;;22686:10;;;;:::i;:::-;1729:21398;;;;22705:8;1729:21398;;22705:29;1729:21398;;;;;;22705:29;:::i;:::-;1729:21398;;;22569:13;;22584:21;;1729:21398;;;;;;;;;;;;;;;;;;;;;;1908:24;1729:21398;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;1755:1:13;2558:7;1729:21398:15;2558:18:13;2554:86;;1755:1;2558:7;1729:21398:15;;;;;;;;6289:20;;;;1729:21398;;6355:10;;1729:21398;;;;;6467:65;;1729:21398;;;;;6498:10;6467:65;;;1729:21398;;;6518:4;1729:21398;;;;;;;;;;;;;;;;6467:65;;;;;;;;;;;6615:40;6467:65;;;;;;1729:21398;6615:40;;:::i;:::-;1729:21398;;;;6719:40;;6518:4;6719:40;;;1729:21398;;;6719:40;1729:21398;6719:40;;;;;;;;;;;;;;1729:21398;6711:93;6719:58;;;;6711:93;:::i;:::-;1976:3;1729:21398;;;;;;;;;;;;;;6879:5;6908:20;1729:21398;;6908:20;;:::i;:::-;1729:21398;;;6978:42;1729:21398;6978:42;;1729:21398;;6978:42;1729:21398;;;;6978:42;;;1729:21398;;;;;;;;;;;;;;;;;6978:42;;;;;;;;;;;;7129:27;6978:42;;;7034:50;6978:42;;;;;;;;;;;1729:21398;;;;;;;;;;;;;;;7034:50;;1729:21398;;7093:8;1729:21398;;;7093:29;1729:21398;;;;;;7093:29;:::i;:::-;1729:21398;;;;7093:8;1729:21398;;;;;;;7129:27;:::i;:::-;1729:21398;;;2558:7:13;1729:21398:15;;;;;;;;;6978:42;;1729:21398;;;6978:42;1729:21398;;6978:42;;;;;;;:::i;:::-;;;;;;1729:21398;;;;;;;;;;;;;;;;;;;6719:40;-1:-1:-1;;1729:21398:15;;6719:40;;;;;;;;;;:::i;:::-;1729:21398;;;6719:40;;;1729:21398;;;;;6711:93;1729:21398;;6719:40;;;;;;;6467:65;;1729:21398;;;6467:65;1729:21398;;6467:65;;;;;;;:::i;:::-;;;;;;1729:21398;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2554:86:13;1729:21398:15;;;2599:30:13;;;;1729:21398:15;;;;;;;;;;;;;15722:10;1729:21398;15708:32;;;:::i;:::-;15752:13;15767:21;;;;;;1729:21398;;;;;;;;;;;;;;:::i;15790:3::-;15816:13;1729:21398;15816:13;1729:21398;15816:13;;:::i;:::-;1729:21398;;;15804:31;;;;:::i;:::-;1729:21398;;15752:13;;1729:21398;;;;;;;;;;;;;;;;1976:3;1729:21398;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12022:19;12014:52;12022:19;;:::i;:::-;12014:52;:::i;:::-;3222:12:8;1729:21398:15;12116:4;1729:21398;;;;;;;;;;;;;;;12124:5;1729:21398;;;;;;;;;;;;;;;12144:37;1729:21398;;17637:10;1729:21398;17637:10;1729:21398;17623:32;;;:::i;:::-;17689;;;;:::i;:::-;17733:13;1729:21398;17748:21;;;;;;1729:21398;;;17897:9;1729:21398;;17874:50;;;;;1729:21398;;;;;;17874:50;;;;1729:21398;17874:50;;;;;;;;;;17728:138;1729:21398;;;;;17933:10;1729:21398;;18001:7;1729:21398;;;18010:9;1729:21398;;17933:87;;;;;1729:21398;;;17933:87;;1729:21398;17933:87;;;1729:21398;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;17979:4;;1729:21398;;;;17979:4;1729:21398;;;;;;;;;;;;17933:87;;;;;;;;;;17728:138;22217:13;22255:3;1729:21398;;22232:21;;;;;22285:13;;;;:::i;:::-;1729:21398;;;;;;22334:38;;17979:4;22334:38;;;1729:21398;22334:38;;1729:21398;22334:38;;;;;;;;;;;;;;;;22255:3;1729:21398;;22418:45;1729:21398;;;22381:8;1729:21398;;;;;;;;17897:9;1729:21398;;;;;22418:45;;;;;;1729:21398;22418:45;;;;;1729:21398;;;;;;;;;;;;;;;;;22418:45;;;;;;;;;;1729:21398;22418:45;;;;22255:3;;1729:21398;22217:13;;22418:45;;;;;;;;;;;;;:::i;:::-;;;;;;1729:21398;;;;;;;;;22334:38;;;;;;;;;;;;;;;;:::i;:::-;;;1729:21398;;;;;;;22418:45;22334:38;;;;;;;;1729:21398;;;;;;;;;22232:21;1729:21398;;;;;22232:21;;18090:10;;18071:38;;1729:21398;;;;;22232:21;1729:21398;:::i;:::-;18071:38;;;1729:21398;;17933:87;;;;:::i;:::-;1729:21398;;17933:87;;;;;1729:21398;;;;;;;;;17933:87;1729:21398;;;17874:50;;;;;;;:::i;:::-;1729:21398;17874:50;;;;;;1729:21398;;;;;;;;;17771:3;17797:13;;;1729:21398;17797:13;;:::i;:::-;1729:21398;;;17785:31;;;;:::i;:::-;1729:21398;17838:13;;;;:::i;:::-;:20;;1729:21398;17825:33;;;;:::i;:::-;1729:21398;;17733:13;;1729:21398;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3318:50;1729:21398;3340:9;1729:21398;;3326:10;:23;3318:50;:::i;:::-;1729:21398;21955:3;21936:10;1729:21398;21932:21;;;;;21985:13;;;1729:21398;21985:13;;:::i;:::-;1729:21398;;;22034:10;;;;:::i;:::-;1729:21398;;22053:86;;;;1729:21398;;22067:8;1729:21398;;22067:29;1729:21398;;;;;;22067:29;:::i;:::-;1729:21398;;22053:86;1729:21398;21917:13;;22053:86;1729:21398;;22110:8;1729:21398;;22110:29;1729:21398;;;;;;22110:29;:::i;:::-;1729:21398;;22053:86;;21932:21;1729:21398;;;;;;;;;;;;;;14121:24;;:::i;:::-;1729:21398;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;3075:2:8;1729:21398:15;;;;;;;;;;;;:::i;:::-;;;;;;;;;;3952:11:8;1729:21398:15;;;;;735:10:12;1729:21398:15;;;;;;;;10828:37:8;10848:17;10828:37;;10824:310;;1729:21398:15;;5249:5:8;;;;;;:::i;10824:310::-;10885:24;;;10881:130;;10061:19;;10057:89;;735:10:12;10159:21:8;10155:90;;-1:-1:-1;1729:21398:15;;;;3952:11:8;1729:21398:15;;;;;;;735:10:12;1729:21398:15;;;;;;;;;;;;;;;;;5249:5:8;10824:310;;10155:90;1729:21398:15;;;;;10203:31:8;;;;;;1729:21398:15;10203:31:8;10057:89;1729:21398:15;;;;;10103:32:8;;;;;;1729:21398:15;10103:32:8;10881:130;1729:21398:15;;10936:60:8;;;735:10:12;10936:60:8;;;1729:21398:15;;;;;;;;;;;;;;;;;;-1:-1:-1;1729:21398:15;;6649:50:8;;;1729:21398:15;;;;;;;;;;;;16147:10;1729:21398;16133:32;;;:::i;:::-;16177:13;1729:21398;16192:21;;;;;;1729:21398;;;;;;;;;;;;;;:::i;16215:3::-;16242:13;1729:21398;16242:13;;;;:::i;:::-;:20;;1729:21398;16229:33;;;;:::i;:::-;1729:21398;;16177:13;;1729:21398;;;;;;;;;;;;;14389:24;;;:::i;:::-;1729:21398;;;;;;;;;;;;;;;;;;;;;3222:12:8;1729:21398:15;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;735:10:12;;10061:19:8;10057:89;;1729:21398:15;;10159:21:8;;;10155:90;;1729:21398:15;735:10:12;;;1729:21398:15;;9105:4:8;1729:21398:15;;;;;;;;;;;;;;;;;;;;10333:31:8;735:10:12;;10333:31:8;;1729:21398:15;9105:4:8;1729:21398:15;;;10155:90:8;1729:21398:15;;;;;10203:31:8;;;;;;1729:21398:15;10203:31:8;10057:89;1729:21398:15;;;;;10103:32:8;;;;;;1729:21398:15;10103:32:8;1729:21398:15;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;4671:19;4663:52;4671:19;;:::i;4663:52::-;4778:24;;:::i;:::-;1729:21398;;19141:10;1729:21398;19127:32;;;;:::i;:::-;19171:13;1729:21398;19186:21;;;;;;4987:43;;;1729:21398;18486:13;1729:21398;18481:103;18501:21;;;;;;5110:13;;1729:21398;5150:3;1729:21398;;5125:23;;;;;5168:15;;;;:::i;:::-;1729:21398;5164:96;;5150:3;1729:21398;;5110:13;;5164:96;20515:48;5234:15;;;;:::i;:::-;1729:21398;19854:17;;;;:::i;:::-;-1:-1:-1;1729:21398:15;20515:10;1729:21398;20534:9;1729:21398;;;;20515:48;;1729:21398;;;;20515:48;;;1729:21398;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20515:48;;;;;;;;;;1729:21398;20515:48;;;5164:96;19906:15;;;1729:21398;;19960:80;19967:17;;;;;;:::i;:::-;1729:21398;;;;20017:9;1729:21398;;;;;;19960:80;;;;;;;1729:21398;19960:80;;20005:10;19960:80;;;1729:21398;;;;;;;;;;;;;;;;;;;;;;;;19960:80;;;;;;;;;;1729:21398;19960:80;;;;;;5164:96;20056:17;;;;:::i;:::-;1729:21398;;;;;20047:8;1729:21398;;20047:48;1729:21398;;;;;;20047:48;:::i;:::-;1729:21398;;5164:96;;;;19960:80;;;;;;;;;;;;;:::i;:::-;;;;;;1729:21398;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20515:48;;;;;;;;;;;;;;;;;:::i;:::-;;;1729:21398;;;;;20515:48;;;;;;;;;;1729:21398;;;;;;;;;5125:23;;5325:43;1729:21398;5125:23;;5291:19;5125:23;;5291:19;:::i;:::-;1729:21398;;;;;;;5343:10;1729:21398;;;;;:::i;:::-;5325:43;;;1729:21398;18524:3;18561:15;;18538:38;1729:21398;18561:15;;;;;:::i;:::-;1729:21398;18538:38;;:::i;:::-;18524:3;1729:21398;18486:13;;;19209:3;19267:13;19291:5;19250:37;1729:21398;19267:13;;;;:::i;:::-;:20;;1729:21398;19250:37;;:::i;:::-;1729:21398;19309:13;;;;;:::i;:::-;1729:21398;19309:31;19305:107;;19209:3;;1729:21398;19171:13;;19305:107;19371:31;19389:13;;;;;:::i;19371:31::-;19353:49;;;;:::i;:::-;1729:21398;19305:107;;;1729:21398;;;;;;;;;;;;;;;;;2151:5:8;1729:21398:15;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1729:21398:15;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2151:5:8;1729:21398:15;;;;;;-1:-1:-1;1729:21398:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1729:21398:15;;;;;;;;-1:-1:-1;1729:21398:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1782:37;1729:21398;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;-1:-1:-1;1729:21398:15;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1729:21398:15;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;19141:10;1729:21398;;;;;;19141:10;-1:-1:-1;1729:21398:15;;;;;;-1:-1:-1;1729:21398:15;:::o;:::-;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;:::o;14926:274::-;15038:10;1729:21398;15024:32;;;:::i;:::-;15068:13;15080:1;15083:21;;;;;;15178:16;;14926:274;:::o;15106:3::-;15144:13;1729:21398;15144:13;1729:21398;15144:13;;:::i;:::-;1729:21398;;;15080:1;1729:21398;15135:8;1729:21398;;;15080:1;1729:21398;;15120:44;;;;:::i;:::-;1729:21398;;15068:13;;1729:21398;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;11632:170;11750:10;1729:21398;;;;11750:46;;1729:21398;;;;11750:46;;;1729:21398;;;;;;;;;;;;;;;;;11750:46;;1729:21398;;;;;;;;11750:46;;;;;;;;;;-1:-1:-1;11750:46:15;;;11743:53;11632:170;:::o;11750:46::-;;;;;;;;;;;;;;;;;:::i;:::-;;;1729:21398;;;;;11632:170;:::o;11750:46::-;;;-1:-1:-1;11750:46:15;;;1729:21398;;;-1:-1:-1;1729:21398:15;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;12518:772::-;12673:24;;:::i;:::-;1729:21398;;12724:10;1729:21398;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;12804:24;;;:::i;:::-;12842:13;-1:-1:-1;12857:13:15;;;;;;13253:31;;;;;12518:772;:::o;12872:3::-;12911:13;;;;:::i;:::-;1729:21398;12927:5;;1729:21398;;;;;;;;;;;;;;;12910:32;;1729:21398;12910:32;;:::i;:::-;12974:13;;;:::i;:::-;-1:-1:-1;12974:20:15;;1729:21398;;;13009:28;;;;;;13066;;;;:::i;:::-;13050:44;;;;:::i;:::-;1729:21398;13105:20;;;;:::i;:::-;1729:21398;13005:233;1729:21398;12842:13;;13005:233;13168:28;;;;;:::i;:::-;13152:44;;;;:::i;:::-;1729:21398;-1:-1:-1;13207:21:15;;;;:::i;:::-;1729:21398;13005:233;;1729:21398;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;22816:308;22937:14;;:::i;:::-;22975:1;23001:3;1729:21398;;22978:21;;;;;23019:13;;;;:::i;:::-;1729:21398;;;23019:40;;;23001:3;23015:78;;1729:21398;;22963:13;;23015:78;23072:11;;;1729:21398;23072:11;:::o;23019:40::-;23036:13;;;;;:::i;:::-;1729:21398;23052:7;1729:21398;-1:-1:-1;23019:40:15;;22978:21;;;;22975:1;22816:308;:::o;14550:252::-;14633:24;;:::i;:::-;1729:21398;3222:12:8;1729:21398:15;14710:16;;14706:47;;14767:14;14766:30;1729:21398;14778:3;1729:21398;14767:14;;:::i;14766:30::-;14550:252;:::o;14706:47::-;14737:8;;-1:-1:-1;14737:8:15;:::o;16523:641::-;16660:10;1729:21398;;;16697:24;1729:21398;16697:24;:::i;:::-;16733:13;1729:21398;;;;16853:9;1729:21398;;16728:389;16748:13;;;;;;17123:35;;;;;16523:641;:::o;16763:3::-;16799:13;;;;17078:31;1729:21398;16799:13;;;;;:::i;:::-;-1:-1:-1;1729:21398:15;;16835:27;;;;;1729:21398;;16892:8;1729:21398;;;;;;16876:40;;;;:::i;:::-;1729:21398;16830:240;17096:13;;;;:::i;17078:31::-;16763:3;1729:21398;16733:13;;;;;16830:240;1729:21398;16963:61;1729:21398;;;16999:8;1729:21398;;;;;;16963:61;;:::i;:::-;17035:25;;;;:::i;:::-;1729:21398;16830:240;;7721:208:8;1729:21398:15;;7791:21:8;;;7787:91;;7346:25;1729:21398:15;;6496:21:8;6906:425;1729:21398:15;6496:21:8;1729:21398:15;6496:21:8;:::i;:::-;;1729:21398:15;;;;;;;;;;;;;;;;;;;;;7346:25:8;7721:208::o;7787:91::-;1729:21398:15;;;7835:32:8;;;7810:1;7835:32;;;1729:21398:15;7835:32:8;5656:300;;1729:21398:15;;;;5739:18:8;;;5735:86;;1729:21398:15;5834:16:8;;;5830:86;;1729:21398:15;6356:540:8;1729:21398:15;6356:540:8;1729:21398:15;;;6356:540:8;1729:21398:15;;6603:19:8;;;;6599:115;;1729:21398:15;;7346:25:8;1729:21398:15;;;;6356:540:8;1729:21398:15;6356:540:8;1729:21398:15;;;;6356:540:8;1729:21398:15;;;6356:540:8;1729:21398:15;;6356:540:8;1729:21398:15;;;;;;;;;;;;7346:25:8;5656:300::o;6599:115::-;1729:21398:15;;6649:50:8;;;1729:21398:15;;;;;6649:50:8;;;1729:21398:15;;;;;;;;;;;;;;;;6649:50:8;5735:86;1729:21398:15;;;5780:30:8;;;5755:1;5780:30;;;1729:21398:15;5780:30:8;21466:217:15;21604:10;1729:21398;21634:9;1729:21398;;;;21604:48;;1729:21398;;;;21604:48;;;1729:21398;;;;;;;;;;;;;;;21604:48;;1729:21398;;;;;;;;21604:48;1729:21398"},"gasEstimates":{"creation":{"codeDepositCost":"2630200","executionCost":"infinite","totalCost":"infinite"},"external":{"ONE()":"2872","SWAP_FEE_BPS()":"480","allowance(address,address)":"3240","approve(address,uint256)":"24386","assetInfos(uint256)":"9402","assetLiquidity(uint256)":"infinite","balanceOf(address)":"2776","baseAsset()":"2900","burn(address)":"infinite","computeTotalValuation()":"infinite","decimals()":"368","decreaseReserves(uint256[])":"infinite","getAmountOut(address,address,uint256)":"infinite","getAssetReserve(address)":"2974","getAssets()":"infinite","getDeviation()":"infinite","getReserves()":"infinite","getWeights()":"infinite","isRebalanceNeeded()":"infinite","liquidity()":"infinite","mint(address,uint256[])":"infinite","name()":"infinite","performRebalanceIfNeeded(address)":"infinite","periphery()":"2680","rebalanceWeights(address)":"infinite","rebalancer()":"2268","reserves(address)":"3084","swap(address,address,uint256,address)":"infinite","symbol()":"infinite","totalSupply()":"2386","transfer(address,uint256)":"51289","transferFrom(address,address,uint256)":"75576","trigger()":"2718","unitPrice()":"infinite","updateReserves(uint256[],bool)":"infinite"},"internal":{"_calculateAmountsToAdd(uint256,uint256[] memory)":"infinite","_calculateTotalAddedLiquidity(uint256[] memory)":"infinite","_computeTotalValuation()":"infinite","_convertBaseToToken(address,uint256)":"infinite","_convertTokenToBase(address,uint256)":"infinite","_performRebalanceIfNeeded()":"infinite","_transferAndCalculateLiquidity(uint256,uint256)":"infinite","_updateReserves(uint256[] memory,bool)":"infinite","_updateReservesAndTransfer()":"infinite","initializeAssets(address[] memory,uint256[] memory)":"infinite","max(uint8,uint8)":"infinite","min(uint8,uint8)":"infinite"}},"methodIdentifiers":{"ONE()":"c2ee3a08","SWAP_FEE_BPS()":"67a6c440","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","assetInfos(uint256)":"d14ef46d","assetLiquidity(uint256)":"cf8fa764","balanceOf(address)":"70a08231","baseAsset()":"cdf456e1","burn(address)":"89afcb44","computeTotalValuation()":"36bf6e39","decimals()":"313ce567","decreaseReserves(uint256[])":"7e04795a","getAmountOut(address,address,uint256)":"4aa06652","getAssetReserve(address)":"b2b55d70","getAssets()":"67e4ac2c","getDeviation()":"89ab3532","getReserves()":"0902f1ac","getWeights()":"22acb867","isRebalanceNeeded()":"8a77c8dc","liquidity()":"1a686502","mint(address,uint256[])":"de836ebd","name()":"06fdde03","performRebalanceIfNeeded(address)":"5568081a","periphery()":"77aace1a","rebalanceWeights(address)":"0723c999","rebalancer()":"01d22ccd","reserves(address)":"d66bd524","swap(address,address,uint256,address)":"6e81221c","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","trigger()":"7fec8d38","unitPrice()":"e73faa2d","updateReserves(uint256[],bool)":"3dff5b7f"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_rebalancer\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"_assets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_weights\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"_trigger\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_periphery\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"sharesBurned\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"sharesMinted\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"by\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"}],\"name\":\"RebalancePerformed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromToken\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"amountsAdded\",\"type\":\"uint256[]\"}],\"name\":\"WeightsRebalanced\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ONE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SWAP_FEE_BPS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"assetInfos\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assetIndex\",\"type\":\"uint256\"}],\"name\":\"assetLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseAsset\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"computeTotalValuation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalVal\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"valuations\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"decreaseReserves\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"toToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"getAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getAssetReserve\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAssets\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDeviation\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"directions\",\"type\":\"bool[]\"},{\"internalType\":\"uint256[]\",\"name\":\"deviations\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReserves\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getWeights\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isRebalanceNeeded\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"}],\"name\":\"performRebalanceIfNeeded\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"periphery\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"rebalanceWeights\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rebalancer\",\"outputs\":[{\"internalType\":\"contract IBaluniV1Rebalancer\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"reserves\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"toToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"trigger\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unitPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bool\",\"name\":\"increase\",\"type\":\"bool\"}],\"name\":\"updateReserves\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"assetLiquidity(uint256)\":{\"details\":\"Returns the liquidity of a specific asset in the pool.\",\"params\":{\"assetIndex\":\"The index of the asset.\"},\"returns\":{\"_0\":\"The liquidity of the asset.\"}},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(address)\":{\"details\":\"Burns the pool tokens and transfers the underlying assets to the specified address.\",\"params\":{\"to\":\"The address to transfer the underlying assets to.\"}},\"computeTotalValuation()\":{\"details\":\"Computes the total valuation of the pool and returns the total valuation and an array of individual valuations.\",\"returns\":{\"totalVal\":\"The total valuation of the pool.\",\"valuations\":\"An array of individual valuations.\"}},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"getAmountOut(address,address,uint256)\":{\"details\":\"Calculates the amount of `toToken` that will be received when swapping `fromToken` for `toToken`.\",\"params\":{\"amount\":\"The amount of `fromToken` being swapped.\",\"fromToken\":\"The address of the token being swapped from.\",\"toToken\":\"The address of the token being swapped to.\"},\"returns\":{\"_0\":\"The amount of `toToken` that will be received.\"}},\"getAssetReserve(address)\":{\"details\":\"Returns the reserve amount of the specified asset.\",\"params\":{\"asset\":\"The address of the asset.\"},\"returns\":{\"_0\":\"The reserve amount of the asset.\"}},\"getAssets()\":{\"details\":\"Retrieves the list of assets in the pool.\",\"returns\":{\"_0\":\"An array of addresses representing the assets.\"}},\"getDeviation()\":{\"details\":\"Returns the deviation between the current weights and target weights of the assets in the pool.\",\"returns\":{\"directions\":\"An array of boolean values indicating whether the current weight is higher (true) or lower (false) than the target weight.\"}},\"getReserves()\":{\"details\":\"Returns an array of reserves for each asset in the pool.\",\"returns\":{\"_0\":\"An array of reserves.\"}},\"getWeights()\":{\"details\":\"Retrieves the list of weights associated with the assets in the pool.\",\"returns\":{\"_0\":\"An array of uint256 values representing the weights.\"}},\"liquidity()\":{\"details\":\"Returns the total liquidity of the pool.\",\"returns\":{\"_0\":\"The total liquidity of the pool.\"}},\"mint(address,uint256[])\":{\"details\":\"Mints new tokens and adds them to the specified address.\",\"params\":{\"to\":\"The address to which the new tokens will be minted.\"},\"returns\":{\"_0\":\"The amount of tokens minted.\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"performRebalanceIfNeeded(address)\":{\"details\":\"Performs rebalance if needed based on the LP share of the sender.\",\"params\":{\"_sender\":\"The address of the sender.\"}},\"rebalanceWeights(address)\":{\"details\":\"Rebalances the weights of the pool by calculating the amounts to add for each token, transferring the calculated amounts from the user to the pool, minting the total added liquidity, updating the reserves, and emitting an event to indicate the rebalancing of weights.\",\"params\":{\"receiver\":\"The address to receive the minted liquidity tokens.\"}},\"swap(address,address,uint256,address)\":{\"details\":\"Swaps `amount` of `fromToken` to `toToken` and transfers the received amount to `receiver`. Requirements: - `fromToken` and `toToken` must be different tokens. - `amount` must be greater than zero. - Sufficient liquidity of `toToken` must be available in the contract. Emits a `Swap` event with the details of the swap. Updates the reserves after the swap.\",\"params\":{\"amount\":\"The amount of `fromToken` to swap.\",\"fromToken\":\"The address of the token to swap from.\",\"receiver\":\"The address to receive the swapped tokens.\",\"toToken\":\"The address of the token to swap to.\"},\"returns\":{\"_0\":\"The amount of `toToken` received after the swap.\"}},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"unitPrice()\":{\"details\":\"Returns the unit price of the pool.\",\"returns\":{\"_0\":\"The unit price of the pool.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"burn(address)\":{\"notice\":\"This function can only be called by the periphery contract.The pool tokens must have a balance greater than 0.The total supply of pool tokens must be greater than 0.The function calculates the amounts of each underlying asset to transfer based on the share of pool tokens being burned.A fee is deducted from the share of pool tokens being burned and transferred to the treasury address.The function checks if the pool has sufficient liquidity before performing any transfers.If any transfer fails, the function reverts the entire operation.After the transfers, the function updates the reserves of the pool.Emits a `Burn` event with the address and share of pool tokens burned.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BaluniV1Pool.sol\":\"BaluniV1Pool\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":80000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"./IERC20.sol\\\";\\nimport {IERC20Metadata} from \\\"./extensions/IERC20Metadata.sol\\\";\\nimport {Context} from \\\"../../utils/Context.sol\\\";\\nimport {IERC20Errors} from \\\"../../interfaces/draft-IERC6093.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n */\\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\\n    mapping(address account => uint256) private _balances;\\n\\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `value`.\\n     */\\n    function transfer(address to, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `value`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `value`.\\n     */\\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, value);\\n        _transfer(from, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _transfer(address from, address to, uint256 value) internal {\\n        if (from == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        if (to == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\\n     * this function.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _update(address from, address to, uint256 value) internal virtual {\\n        if (from == address(0)) {\\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\\n            _totalSupply += value;\\n        } else {\\n            uint256 fromBalance = _balances[from];\\n            if (fromBalance < value) {\\n                revert ERC20InsufficientBalance(from, fromBalance, value);\\n            }\\n            unchecked {\\n                // Overflow not possible: value <= fromBalance <= totalSupply.\\n                _balances[from] = fromBalance - value;\\n            }\\n        }\\n\\n        if (to == address(0)) {\\n            unchecked {\\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\\n                _totalSupply -= value;\\n            }\\n        } else {\\n            unchecked {\\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\\n                _balances[to] += value;\\n            }\\n        }\\n\\n        emit Transfer(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\\n     * Relies on the `_update` mechanism\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _mint(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(address(0), account, value);\\n    }\\n\\n    /**\\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\\n     * Relies on the `_update` mechanism.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead\\n     */\\n    function _burn(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        _update(account, address(0), value);\\n    }\\n\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     *\\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\\n     */\\n    function _approve(address owner, address spender, uint256 value) internal {\\n        _approve(owner, spender, value, true);\\n    }\\n\\n    /**\\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\\n     *\\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\\n     * `Approval` event during `transferFrom` operations.\\n     *\\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\\n     * true using the following override:\\n     * ```\\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\\n     *     super._approve(owner, spender, value, true);\\n     * }\\n     * ```\\n     *\\n     * Requirements are the same as {_approve}.\\n     */\\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\\n        if (owner == address(0)) {\\n            revert ERC20InvalidApprover(address(0));\\n        }\\n        if (spender == address(0)) {\\n            revert ERC20InvalidSpender(address(0));\\n        }\\n        _allowances[owner][spender] = value;\\n        if (emitEvent) {\\n            emit Approval(owner, spender, value);\\n        }\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\\n     *\\n     * Does not update the allowance value in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Does not emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            if (currentAllowance < value) {\\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\\n            }\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - value, false);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant NOT_ENTERED = 1;\\n    uint256 private constant ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    /**\\n     * @dev Unauthorized reentrant call.\\n     */\\n    error ReentrancyGuardReentrantCall();\\n\\n    constructor() {\\n        _status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\\n        if (_status == ENTERED) {\\n            revert ReentrancyGuardReentrantCall();\\n        }\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Returns true if the reentrancy guard is currently set to \\\"entered\\\", which indicates there is a\\n     * `nonReentrant` function in the call stack.\\n     */\\n    function _reentrancyGuardEntered() internal view returns (bool) {\\n        return _status == ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236\",\"license\":\"MIT\"},\"contracts/BaluniV1Pool.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n/**\\r\\n *  __                  __                      __\\r\\n * /  |                /  |                    /  |\\r\\n * $$ |____    ______  $$ | __    __  _______  $$/\\r\\n * $$      \\\\  /      \\\\ $$ |/  |  /  |/       \\\\ /  |\\r\\n * $$$$$$$  | $$$$$$  |$$ |$$ |  $$ |$$$$$$$  |$$ |\\r\\n * $$ |  $$ | /    $$ |$$ |$$ |  $$ |$$ |  $$ |$$ |\\r\\n * $$ |__$$ |/$$$$$$$ |$$ |$$ \\\\__$$ |$$ |  $$ |$$ |\\r\\n * $$    $$/ $$    $$ |$$ |$$    $$/ $$ |  $$ |$$ |\\r\\n * $$$$$$$/   $$$$$$$/ $$/  $$$$$$/  $$/   $$/ $$/\\r\\n *\\r\\n *\\r\\n *                  ,-\\\"\\\"\\\"\\\"-.\\r\\n *                ,'      _ `.\\r\\n *               /       )_)  \\\\\\r\\n *              :              :\\r\\n *              \\\\              /\\r\\n *               \\\\            /\\r\\n *                `.        ,'\\r\\n *                  `.    ,'\\r\\n *                    `.,'\\r\\n *                     /\\\\`.   ,-._\\r\\n *                         `-'    \\\\__\\r\\n *                              .\\r\\n *               s                \\\\\\r\\n *                                \\\\\\\\\\r\\n *                                 \\\\\\\\\\r\\n *                                  >\\\\/7\\r\\n *                              _.-(6'  \\\\\\r\\n *                             (=___._/` \\\\\\r\\n *                                  )  \\\\ |\\r\\n *                                 /   / |\\r\\n *                                /    > /\\r\\n *                               j    < _\\\\\\r\\n *                           _.-' :      ``.\\r\\n *                           \\\\ r=._\\\\        `.\\r\\n */\\r\\nimport './interfaces/IBaluniV1Rebalancer.sol';\\r\\nimport './interfaces/IBaluniV1Router.sol';\\r\\nimport './interfaces/IBaluniV1PoolPeriphery.sol';\\r\\nimport '@openzeppelin/contracts/token/ERC20/ERC20.sol';\\r\\nimport '@openzeppelin/contracts/utils/ReentrancyGuard.sol';\\r\\n\\r\\ncontract BaluniV1Pool is ERC20, ReentrancyGuard {\\r\\n  IBaluniV1Rebalancer public rebalancer;\\r\\n  AssetInfo[] public assetInfos;\\r\\n  uint256 public trigger;\\r\\n  uint256 public ONE;\\r\\n  address public periphery;\\r\\n  uint256 public constant SWAP_FEE_BPS = 300;\\r\\n  address public baseAsset;\\r\\n\\r\\n  mapping(address => uint256) public reserves;\\r\\n\\r\\n  struct AssetInfo {\\r\\n    address asset;\\r\\n    uint256 weight;\\r\\n  }\\r\\n\\r\\n  event RebalancePerformed(address indexed by, address[] assets);\\r\\n  event WeightsRebalanced(address indexed user, uint256[] amountsAdded);\\r\\n  event Burn(address indexed user, uint256 sharesBurned);\\r\\n  event Mint(address indexed to, uint256 sharesMinted);\\r\\n  event Swap(\\r\\n    address indexed user,\\r\\n    address indexed fromToken,\\r\\n    address indexed toToken,\\r\\n    uint256 amountIn,\\r\\n    uint256 amountOut\\r\\n  );\\r\\n\\r\\n  constructor(\\r\\n    address _rebalancer,\\r\\n    address[] memory _assets,\\r\\n    uint256[] memory _weights,\\r\\n    uint256 _trigger,\\r\\n    address _periphery\\r\\n  ) ERC20('Baluni LP', 'BALUNI-LP') {\\r\\n    periphery = _periphery;\\r\\n    rebalancer = IBaluniV1Rebalancer(_rebalancer);\\r\\n    ONE = 1e18;\\r\\n\\r\\n    initializeAssets(_assets, _weights);\\r\\n\\r\\n    trigger = _trigger;\\r\\n\\r\\n    baseAsset = IBaluniV1Rebalancer(_rebalancer).getUSDCAddress();\\r\\n    //baseAsset = IBaluniV1Rebalancer(_rebalancer).getWNATIVEAddress();\\r\\n\\r\\n    // ensure the sum o weight equal 10000\\r\\n    uint256 totalWeight = 0;\\r\\n    for (uint256 i = 0; i < _weights.length; i++) {\\r\\n      totalWeight += _weights[i];\\r\\n    }\\r\\n    require(totalWeight == 10000, 'Invalid weights');\\r\\n  }\\r\\n\\r\\n  modifier onlyPeriphery() {\\r\\n    require(msg.sender == periphery, 'Only Periphery');\\r\\n    _;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Initializes the assets and their weights for the pool.\\r\\n   * @param _assets The array of asset addresses.\\r\\n   * @param _weights The array of weights corresponding to each asset.\\r\\n   */\\r\\n  function initializeAssets(address[] memory _assets, uint256[] memory _weights) internal {\\r\\n    require(_assets.length == _weights.length, 'Assets and weights length mismatch');\\r\\n\\r\\n    for (uint256 i = 0; i < _assets.length; i++) {\\r\\n      require(_assets[i] != address(0), 'Invalid asset address');\\r\\n      require(_weights[i] > 0, 'Invalid weight');\\r\\n\\r\\n      assetInfos.push(AssetInfo({asset: _assets[i], weight: _weights[i]}));\\r\\n\\r\\n      IERC20 asset = IERC20(_assets[i]);\\r\\n      if (asset.allowance(address(this), address(rebalancer)) == 0) {\\r\\n        asset.approve(address(rebalancer), type(uint256).max);\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Rebalances the weights of the pool by calculating the amounts to add for each token,\\r\\n   * transferring the calculated amounts from the user to the pool, minting the total added liquidity,\\r\\n   * updating the reserves, and emitting an event to indicate the rebalancing of weights.\\r\\n   * @param receiver The address to receive the minted liquidity tokens.\\r\\n   */\\r\\n  function rebalanceWeights(address receiver) external {\\r\\n    require(isRebalanceNeeded(), 'Rebalance not needed');\\r\\n    (uint256 totalValuation, uint256[] memory valuations) = _computeTotalValuation();\\r\\n\\r\\n    uint256[] memory amountsToAdd = _calculateAmountsToAdd(totalValuation, valuations);\\r\\n\\r\\n    // Calculate total added liquidity before minting\\r\\n    uint256 totalAddedLiquidity = _calculateTotalAddedLiquidity(amountsToAdd);\\r\\n\\r\\n    // Transfer the calculated amounts from the user to the pool\\r\\n    for (uint256 i = 0; i < amountsToAdd.length; i++) {\\r\\n      if (amountsToAdd[i] > 0) {\\r\\n        _transferAndCalculateLiquidity(i, amountsToAdd[i]);\\r\\n      }\\r\\n    }\\r\\n\\r\\n    _mint(receiver, totalAddedLiquidity);\\r\\n\\r\\n    emit WeightsRebalanced(msg.sender, amountsToAdd);\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Swaps `amount` of `fromToken` to `toToken` and transfers the received amount to `receiver`.\\r\\n   *\\r\\n   * Requirements:\\r\\n   * - `fromToken` and `toToken` must be different tokens.\\r\\n   * - `amount` must be greater than zero.\\r\\n   * - Sufficient liquidity of `toToken` must be available in the contract.\\r\\n   *\\r\\n   * Emits a `Swap` event with the details of the swap.\\r\\n   *\\r\\n   * Updates the reserves after the swap.\\r\\n   *\\r\\n   * @param fromToken The address of the token to swap from.\\r\\n   * @param toToken The address of the token to swap to.\\r\\n   * @param amount The amount of `fromToken` to swap.\\r\\n   * @param receiver The address to receive the swapped tokens.\\r\\n   * @return The amount of `toToken` received after the swap.\\r\\n   */\\r\\n  function swap(\\r\\n    address fromToken,\\r\\n    address toToken,\\r\\n    uint256 amount,\\r\\n    address receiver\\r\\n  ) external nonReentrant returns (uint256) {\\r\\n    require(fromToken != toToken, 'Cannot swap the same token');\\r\\n    require(amount > 0, 'Amount must be greater than zero');\\r\\n\\r\\n    // Transfer fromToken from sender to this contract\\r\\n    IERC20(fromToken).transferFrom(msg.sender, address(this), amount);\\r\\n\\r\\n    // Get the amount of toToken to be received\\r\\n    uint256 receivedAmount = getAmountOut(fromToken, toToken, amount);\\r\\n\\r\\n    // Check if there is sufficient liquidity\\r\\n    require(IERC20(toToken).balanceOf(address(this)) >= receivedAmount, 'Insufficient Liquidity');\\r\\n\\r\\n    // apply fee\\r\\n    uint256 fee = (receivedAmount * SWAP_FEE_BPS) / 10000;\\r\\n    uint256 toSend = receivedAmount - fee;\\r\\n\\r\\n    // Transfer toToken to the receiver\\r\\n    IERC20(toToken).transfer(receiver, toSend);\\r\\n\\r\\n    emit Swap(receiver, fromToken, toToken, amount, toSend);\\r\\n\\r\\n    reserves[fromToken] += amount;\\r\\n    reserves[toToken] += toSend;\\r\\n\\r\\n    return receivedAmount;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Mints new tokens and adds them to the specified address.\\r\\n   * @param to The address to which the new tokens will be minted.\\r\\n   * @return The amount of tokens minted.\\r\\n   */\\r\\n  function mint(address to, uint256[] memory amounts) external onlyPeriphery returns (uint256) {\\r\\n    uint256 totalSupply = totalSupply();\\r\\n    uint256 totalValue = 0;\\r\\n\\r\\n    uint256[] memory _reserves = getReserves();\\r\\n\\r\\n    require(assetInfos.length == _reserves.length, 'Invalid reserves length');\\r\\n    require(assetInfos.length > 0, 'No assets');\\r\\n\\r\\n    for (uint256 i = 0; i < assetInfos.length; i++) {\\r\\n      address asset = assetInfos[i].asset;\\r\\n      uint256 actualBalance = IERC20(asset).balanceOf(address(this));\\r\\n      require(actualBalance > 0, 'Balance must be greater than 0');\\r\\n      uint256 amount = actualBalance - _reserves[i];\\r\\n      require(amount > 0, 'Amount must be greater than 0');\\r\\n      uint256 valuation = _convertTokenToBase(asset, amount);\\r\\n      totalValue += valuation;\\r\\n    }\\r\\n\\r\\n    require(totalValue > 0, 'Total value must be greater than 0');\\r\\n\\r\\n    uint256 toMint;\\r\\n\\r\\n    if (totalSupply == 0) {\\r\\n      toMint = totalValue;\\r\\n    } else {\\r\\n      (uint256 totalLiquidity, ) = _computeTotalValuation();\\r\\n      require(totalLiquidity > 0, 'Total liquidity must be greater than 0');\\r\\n      toMint = ((totalValue) * totalSupply) / totalLiquidity;\\r\\n    }\\r\\n    require(toMint != 0, 'Mint qty is 0');\\r\\n    uint256 b4 = balanceOf(msg.sender);\\r\\n\\r\\n    _mint(to, toMint);\\r\\n\\r\\n    uint256 b = balanceOf(to) - b4;\\r\\n    require(b == toMint, 'Mint Failed');\\r\\n\\r\\n    _updateReserves(amounts, true);\\r\\n\\r\\n    emit Mint(to, toMint);\\r\\n\\r\\n    return toMint;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Burns the pool tokens and transfers the underlying assets to the specified address.\\r\\n   * @param to The address to transfer the underlying assets to.\\r\\n   * @notice This function can only be called by the periphery contract.\\r\\n   * @notice The pool tokens must have a balance greater than 0.\\r\\n   * @notice The total supply of pool tokens must be greater than 0.\\r\\n   * @notice The function calculates the amounts of each underlying asset to transfer based on the share of pool tokens being burned.\\r\\n   * @notice A fee is deducted from the share of pool tokens being burned and transferred to the treasury address.\\r\\n   * @notice The function checks if the pool has sufficient liquidity before performing any transfers.\\r\\n   * @notice If any transfer fails, the function reverts the entire operation.\\r\\n   * @notice After the transfers, the function updates the reserves of the pool.\\r\\n   * @notice Emits a `Burn` event with the address and share of pool tokens burned.\\r\\n   */\\r\\n  function burn(address to) external onlyPeriphery {\\r\\n    uint256 share = balanceOf(address(this));\\r\\n\\r\\n    require(share > 0, 'Share must be greater than 0');\\r\\n    uint256 totalSupply = totalSupply();\\r\\n\\r\\n    require(totalSupply > 0, 'No liquidity');\\r\\n    uint256[] memory amounts = new uint256[](assetInfos.length);\\r\\n\\r\\n    uint256 fee = (share * SWAP_FEE_BPS) / 10000;\\r\\n    uint256 shareAfterFee = share - fee;\\r\\n\\r\\n    for (uint256 i = 0; i < assetInfos.length; i++) {\\r\\n      uint256 assetBalance = IERC20(assetInfos[i].asset).balanceOf(address(this));\\r\\n      amounts[i] = (assetBalance * shareAfterFee) / totalSupply;\\r\\n    }\\r\\n\\r\\n    require(balanceOf(address(this)) >= shareAfterFee, 'Insufficient liquidity');\\r\\n\\r\\n    bool feeTransferSuccess = IERC20(address(this)).transfer(rebalancer.getTreasury(), fee);\\r\\n    require(feeTransferSuccess, 'Fee transfer failed');\\r\\n\\r\\n    require(balanceOf(address(this)) >= shareAfterFee, 'Insufficient liquidity');\\r\\n    _burn(address(this), shareAfterFee);\\r\\n\\r\\n    for (uint256 i = 0; i < assetInfos.length; i++) {\\r\\n      require(IERC20(assetInfos[i].asset).balanceOf(address(this)) >= amounts[i], 'Insufficient Liquidity');\\r\\n      bool assetTransferSuccess = IERC20(assetInfos[i].asset).transfer(to, amounts[i]);\\r\\n      require(assetTransferSuccess, 'Asset transfer failed');\\r\\n    }\\r\\n\\r\\n    _updateReserves(amounts, false);\\r\\n\\r\\n    emit Burn(to, shareAfterFee);\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Calculates the amount of `toToken` that will be received when swapping `fromToken` for `toToken`.\\r\\n   * @param fromToken The address of the token being swapped from.\\r\\n   * @param toToken The address of the token being swapped to.\\r\\n   * @param amount The amount of `fromToken` being swapped.\\r\\n   * @return The amount of `toToken` that will be received.\\r\\n   */\\r\\n  function getAmountOut(address fromToken, address toToken, uint256 amount) public view returns (uint256) {\\r\\n    return rebalancer.convert(fromToken, toToken, amount);\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Performs rebalance if needed based on the LP share of the sender.\\r\\n   * @param _sender The address of the sender.\\r\\n   */\\r\\n  function performRebalanceIfNeeded(address _sender) external {\\r\\n    require(isRebalanceNeeded(), 'Rebalance not needed');\\r\\n    uint256 requiredBalance = (totalSupply() * 1000) / 10000;\\r\\n    require(balanceOf(_sender) >= requiredBalance, 'Under 5% LP share');\\r\\n    _performRebalanceIfNeeded();\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Returns the deviation between the current weights and target weights of the assets in the pool.\\r\\n   * @return directions An array of boolean values indicating whether the current weight is higher (true) or lower (false) than the target weight.\\r\\n   */\\r\\n  function getDeviation() public view returns (bool[] memory directions, uint256[] memory deviations) {\\r\\n    (uint256 totVal, uint256[] memory valuations) = _computeTotalValuation();\\r\\n    uint256 numAssets = assetInfos.length;\\r\\n\\r\\n    directions = new bool[](numAssets);\\r\\n    deviations = new uint256[](numAssets);\\r\\n\\r\\n    for (uint256 i = 0; i < numAssets; i++) {\\r\\n      uint256 currentWeight = (valuations[i] * 10000) / totVal;\\r\\n      uint256 targetWeight = assetInfos[i].weight;\\r\\n\\r\\n      if (currentWeight > targetWeight) {\\r\\n        deviations[i] = currentWeight - targetWeight;\\r\\n        directions[i] = true;\\r\\n      } else {\\r\\n        deviations[i] = targetWeight - currentWeight;\\r\\n        directions[i] = false;\\r\\n      }\\r\\n    }\\r\\n\\r\\n    return (directions, deviations);\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Returns the liquidity of a specific asset in the pool.\\r\\n   * @param assetIndex The index of the asset.\\r\\n   * @return The liquidity of the asset.\\r\\n   */\\r\\n  function assetLiquidity(uint256 assetIndex) external view returns (uint256) {\\r\\n    (, uint256[] memory usdValuations) = _computeTotalValuation();\\r\\n    require(assetIndex < usdValuations.length, 'Invalid asset index');\\r\\n    return usdValuations[assetIndex];\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Computes the total valuation of the pool and returns the total valuation and an array of individual valuations.\\r\\n   * @return totalVal The total valuation of the pool.\\r\\n   * @return valuations An array of individual valuations.\\r\\n   */\\r\\n  function computeTotalValuation() external view returns (uint256 totalVal, uint256[] memory valuations) {\\r\\n    (totalVal, valuations) = _computeTotalValuation();\\r\\n    return (totalVal, valuations);\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Returns the total liquidity of the pool.\\r\\n   * @return The total liquidity of the pool.\\r\\n   */\\r\\n  function liquidity() external view returns (uint256) {\\r\\n    (uint256 totalVal, ) = _computeTotalValuation();\\r\\n    return totalVal;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Returns the unit price of the pool.\\r\\n   * @return The unit price of the pool.\\r\\n   */\\r\\n  function unitPrice() external view returns (uint256) {\\r\\n    (uint256 totalVal, ) = _computeTotalValuation();\\r\\n    uint256 totalSupply = totalSupply();\\r\\n    if (totalSupply == 0) {\\r\\n      return 0;\\r\\n    }\\r\\n    return (totalVal * ONE) / totalSupply;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Returns an array of reserves for each asset in the pool.\\r\\n   * @return An array of reserves.\\r\\n   */\\r\\n  function getReserves() public view returns (uint256[] memory) {\\r\\n    uint256[] memory _reserves = new uint256[](assetInfos.length);\\r\\n    for (uint256 i = 0; i < assetInfos.length; i++) {\\r\\n      _reserves[i] = reserves[assetInfos[i].asset];\\r\\n    }\\r\\n    return _reserves;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Returns the reserve amount of the specified asset.\\r\\n   * @param asset The address of the asset.\\r\\n   * @return The reserve amount of the asset.\\r\\n   */\\r\\n  function getAssetReserve(address asset) public view returns (uint256) {\\r\\n    return reserves[asset];\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Retrieves the list of assets in the pool.\\r\\n   * @return An array of addresses representing the assets.\\r\\n   */\\r\\n  function getAssets() external view returns (address[] memory) {\\r\\n    address[] memory assets = new address[](assetInfos.length);\\r\\n    for (uint256 i = 0; i < assetInfos.length; i++) {\\r\\n      assets[i] = assetInfos[i].asset;\\r\\n    }\\r\\n    return assets;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Retrieves the list of weights associated with the assets in the pool.\\r\\n   * @return An array of uint256 values representing the weights.\\r\\n   */\\r\\n  function getWeights() external view returns (uint256[] memory) {\\r\\n    uint256[] memory weights = new uint256[](assetInfos.length);\\r\\n    for (uint256 i = 0; i < assetInfos.length; i++) {\\r\\n      weights[i] = assetInfos[i].weight;\\r\\n    }\\r\\n    return weights;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Computes the total valuation of the assets in the pool.\\r\\n   * @return totalValuation The total valuation of the assets.\\r\\n   * @return valuations An array of valuations for each asset in the pool.\\r\\n   */\\r\\n  function _computeTotalValuation() internal view returns (uint256 totalValuation, uint256[] memory valuations) {\\r\\n    uint256 numAssets = assetInfos.length;\\r\\n    valuations = new uint256[](numAssets);\\r\\n    for (uint256 i = 0; i < numAssets; i++) {\\r\\n      IERC20 asset = IERC20(assetInfos[i].asset);\\r\\n\\r\\n      if ((address(asset) == baseAsset)) {\\r\\n        valuations[i] = reserves[address(asset)];\\r\\n      } else {\\r\\n        uint256 valuation = _convertTokenToBase(address(asset), reserves[address(asset)]);\\r\\n        valuations[i] = valuation;\\r\\n      }\\r\\n      totalValuation += valuations[i];\\r\\n    }\\r\\n    return (totalValuation, valuations);\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Performs rebalance if needed.\\r\\n   * This function retrieves the assets and weights from the `assetInfos` array,\\r\\n   * and calls the `rebalance` function of the `rebalancer` contract with the retrieved values.\\r\\n   * It emits a `RebalancePerformed` event after the rebalance is performed.\\r\\n   * @notice This function should only be called internally.\\r\\n   */\\r\\n  function _performRebalanceIfNeeded() internal {\\r\\n    address[] memory assets = new address[](assetInfos.length);\\r\\n    uint256[] memory weights = new uint256[](assetInfos.length);\\r\\n    for (uint256 i = 0; i < assetInfos.length; i++) {\\r\\n      assets[i] = assetInfos[i].asset;\\r\\n      weights[i] = assetInfos[i].weight;\\r\\n    }\\r\\n\\r\\n    IBaluniV1PoolPeriphery(periphery).transferToPool();\\r\\n\\r\\n    rebalancer.rebalance(assets, weights, address(this), address(this), trigger, baseAsset);\\r\\n\\r\\n    _updateReservesAndTransfer();\\r\\n\\r\\n    emit RebalancePerformed(msg.sender, assets);\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Calculates the total added liquidity based on the amounts to add.\\r\\n   * @param amountsToAdd An array of amounts to add for each asset.\\r\\n   * @return totalAddedLiquidity The total added liquidity.\\r\\n   */\\r\\n  function _calculateTotalAddedLiquidity(\\r\\n    uint256[] memory amountsToAdd\\r\\n  ) internal view returns (uint256 totalAddedLiquidity) {\\r\\n    for (uint256 i = 0; i < assetInfos.length; i++) {\\r\\n      totalAddedLiquidity += amountsToAdd[i];\\r\\n    }\\r\\n    return totalAddedLiquidity;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Calculates the amounts to add to each asset based on the total valuation and current valuations.\\r\\n   * @param totalValuation The total valuation of the pool.\\r\\n   * @param valuations An array of current valuations for each asset.\\r\\n   * @return amountsToAdd An array of amounts to add to each asset.\\r\\n   */\\r\\n  function _calculateAmountsToAdd(\\r\\n    uint256 totalValuation,\\r\\n    uint256[] memory valuations\\r\\n  ) internal view returns (uint256[] memory amountsToAdd) {\\r\\n    amountsToAdd = new uint256[](assetInfos.length);\\r\\n    for (uint256 i = 0; i < assetInfos.length; i++) {\\r\\n      uint256 targetValuation = (totalValuation * assetInfos[i].weight) / 10000;\\r\\n      if (valuations[i] < targetValuation) {\\r\\n        amountsToAdd[i] = targetValuation - valuations[i];\\r\\n      }\\r\\n    }\\r\\n    return amountsToAdd;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Internal function to transfer tokens from the caller to the contract and calculate the liquidity.\\r\\n   * @param index The index of the asset in the assetInfos array.\\r\\n   * @param amountToAdd The amount of native tokens to add as liquidity.\\r\\n   */\\r\\n  function _transferAndCalculateLiquidity(uint256 index, uint256 amountToAdd) internal {\\r\\n    uint256 tokenAmount = _convertBaseToToken(assetInfos[index].asset, amountToAdd);\\r\\n    require(tokenAmount > 0, 'Invalid token amount to add');\\r\\n    IERC20(assetInfos[index].asset).transferFrom(msg.sender, periphery, tokenAmount);\\r\\n    reserves[assetInfos[index].asset] += tokenAmount;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Converts the specified amount of native token to the corresponding token amount.\\r\\n   * @param fromToken The address of the native token to convert from.\\r\\n   * @param amount The amount of native token to convert.\\r\\n   * @return The corresponding token amount.\\r\\n   */\\r\\n  function _convertBaseToToken(address fromToken, uint256 amount) internal view returns (uint256) {\\r\\n    uint256 tokenAmount = rebalancer.convert(baseAsset, fromToken, amount);\\r\\n    return tokenAmount;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Returns the maximum of two uint8 values.\\r\\n   * @param a The first uint8 value.\\r\\n   * @param b The second uint8 value.\\r\\n   * @return The maximum value between a and b.\\r\\n   */\\r\\n  function max(uint8 a, uint8 b) private pure returns (uint8) {\\r\\n    return a >= b ? a : b;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Returns the minimum of two uint8 values.\\r\\n   * @param a The first uint8 value.\\r\\n   * @param b The second uint8 value.\\r\\n   * @return The minimum value between a and b.\\r\\n   */\\r\\n  function min(uint8 a, uint8 b) private pure returns (uint8) {\\r\\n    return a <= b ? a : b;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Converts the specified token to the native token using the rebalancer contract.\\r\\n   * @param fromToken The address of the token to convert from.\\r\\n   * @param amount The amount of tokens to convert.\\r\\n   * @return scaledAmount The converted amount of tokens.\\r\\n   */\\r\\n  function _convertTokenToBase(address fromToken, uint256 amount) internal view returns (uint256 scaledAmount) {\\r\\n    uint256 tokenAmount = rebalancer.convert(fromToken, baseAsset, amount);\\r\\n    return tokenAmount;\\r\\n  }\\r\\n\\r\\n  function updateReserves(uint256[] memory amounts, bool increase) external onlyPeriphery {\\r\\n    _updateReserves(amounts, increase);\\r\\n  }\\r\\n\\r\\n  function _updateReserves(uint256[] memory amounts, bool increase) internal {\\r\\n    for (uint256 i = 0; i < assetInfos.length; i++) {\\r\\n      address asset = assetInfos[i].asset;\\r\\n      uint256 newReserve = amounts[i];\\r\\n      if (increase) reserves[asset] += newReserve;\\r\\n      else reserves[asset] -= newReserve;\\r\\n    }\\r\\n  }\\r\\n\\r\\n  function _updateReservesAndTransfer() internal {\\r\\n    for (uint256 i = 0; i < assetInfos.length; i++) {\\r\\n      address asset = assetInfos[i].asset;\\r\\n      uint256 newReserve = IERC20(asset).balanceOf(address(this));\\r\\n      reserves[asset] = newReserve;\\r\\n      IERC20(asset).transfer(periphery, newReserve);\\r\\n    }\\r\\n  }\\r\\n\\r\\n  function decreaseReserves(uint256[] memory amounts) external onlyPeriphery {\\r\\n    for (uint256 i = 0; i < assetInfos.length; i++) {\\r\\n      address asset = assetInfos[i].asset;\\r\\n      uint256 newReserve = amounts[i];\\r\\n      reserves[asset] -= newReserve;\\r\\n    }\\r\\n  }\\r\\n\\r\\n  // return true if one of the deviation overcome the trigger\\r\\n  function isRebalanceNeeded() public view returns (bool) {\\r\\n    (bool[] memory directions, uint256[] memory deviations) = getDeviation();\\r\\n    for (uint256 i = 0; i < deviations.length; i++) {\\r\\n      if (directions[i] && deviations[i] > trigger) {\\r\\n        return true;\\r\\n      }\\r\\n    }\\r\\n    return false;\\r\\n  }\\r\\n}\\r\\n\",\"keccak256\":\"0x03841ebedd05a1c5511333b0c0abdaf03a68c4466d72bd118f2b307421fd922e\",\"license\":\"GNU AGPLv3\"},\"contracts/interfaces/IBaluniV1PoolPeriphery.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n\\r\\ninterface IBaluniV1PoolPeriphery {\\r\\n  function transferToPool() external;\\r\\n}\\r\\n\",\"keccak256\":\"0x2038c4f88590e309e5cade98801a59427b120d6f762251e550a865444b3853f0\",\"license\":\"GNU AGPLv3\"},\"contracts/interfaces/IBaluniV1Rebalancer.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\nimport '@openzeppelin/contracts/token/ERC20/IERC20.sol';\\r\\nimport '@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol';\\r\\n\\r\\ninterface IBaluniV1Rebalancer {\\r\\n  enum RebalanceType {\\r\\n    Overweight,\\r\\n    Underweight,\\r\\n    NoRebalance\\r\\n  }\\r\\n\\r\\n  struct RebalanceVars {\\r\\n    uint256 len;\\r\\n    uint256 totalValue;\\r\\n    uint256 finalUsdBalance;\\r\\n    uint256 overweightVaultsLength;\\r\\n    uint256 underweightVaultsLength;\\r\\n    uint256 totalActiveWeight;\\r\\n    uint256 amountOut;\\r\\n    uint256[] overweightVaults;\\r\\n    uint256[] overweightAmounts;\\r\\n    uint256[] underweightVaults;\\r\\n    uint256[] underweightAmounts;\\r\\n    uint256[] balances;\\r\\n  }\\r\\n\\r\\n  function checkRebalance(\\r\\n    address[] calldata assets,\\r\\n    uint256[] calldata weights,\\r\\n    uint256 limit,\\r\\n    address sender,\\r\\n    address baseAsset\\r\\n  ) external view returns (RebalanceVars memory);\\r\\n\\r\\n  function rebalance(\\r\\n    address[] calldata assets,\\r\\n    uint256[] calldata weights,\\r\\n    address sender,\\r\\n    address receiver,\\r\\n    uint256 limit,\\r\\n    address baseAsset\\r\\n  ) external;\\r\\n\\r\\n  function getBaluniRouter() external view returns (address);\\r\\n\\r\\n  function getRate(IERC20 srcToken, IERC20 dstToken, bool useWrappers) external view returns (uint256 weightedRate);\\r\\n\\r\\n  function getTreasury() external view returns (address);\\r\\n\\r\\n  function getUSDCAddress() external view returns (address);\\r\\n\\r\\n  function getWNATIVEAddress() external view returns (address);\\r\\n\\r\\n  function getRateToEth(IERC20 srcToken, bool useWrappers) external view returns (uint256 weightedRate);\\r\\n\\r\\n  function convert(address fromToken, address toToken, uint256 amount) external view returns (uint256);\\r\\n}\\r\\n\",\"keccak256\":\"0xba7ce07f4e65e878d1fc969e563b7cfa6fd60435612061d972a1f19d52cb059d\",\"license\":\"GNU AGPLv3\"},\"contracts/interfaces/IBaluniV1Router.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n\\r\\ninterface IBaluniV1Router {\\r\\n  function getAgentAddress(address _user) external view returns (address);\\r\\n\\r\\n  function getBpsFee() external view returns (uint256);\\r\\n\\r\\n  function tokenValuation(uint256 amount, address token) external view returns (uint256);\\r\\n\\r\\n  function getTreasury() external view returns (address);\\r\\n\\r\\n  function getUnitPrice() external view returns (uint256);\\r\\n}\\r\\n\",\"keccak256\":\"0xf36b22a54937a493f80d2f850b96d6ee735c3d7d54d3be369d76d03b72467096\",\"license\":\"GNU AGPLv3\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1159,"contract":"contracts/BaluniV1Pool.sol:BaluniV1Pool","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":1165,"contract":"contracts/BaluniV1Pool.sol:BaluniV1Pool","label":"_allowances","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":1167,"contract":"contracts/BaluniV1Pool.sol:BaluniV1Pool","label":"_totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":1169,"contract":"contracts/BaluniV1Pool.sol:BaluniV1Pool","label":"_name","offset":0,"slot":"3","type":"t_string_storage"},{"astId":1171,"contract":"contracts/BaluniV1Pool.sol:BaluniV1Pool","label":"_symbol","offset":0,"slot":"4","type":"t_string_storage"},{"astId":2049,"contract":"contracts/BaluniV1Pool.sol:BaluniV1Pool","label":"_status","offset":0,"slot":"5","type":"t_uint256"},{"astId":2231,"contract":"contracts/BaluniV1Pool.sol:BaluniV1Pool","label":"rebalancer","offset":0,"slot":"6","type":"t_contract(IBaluniV1Rebalancer)5766"},{"astId":2235,"contract":"contracts/BaluniV1Pool.sol:BaluniV1Pool","label":"assetInfos","offset":0,"slot":"7","type":"t_array(t_struct(AssetInfo)2255_storage)dyn_storage"},{"astId":2237,"contract":"contracts/BaluniV1Pool.sol:BaluniV1Pool","label":"trigger","offset":0,"slot":"8","type":"t_uint256"},{"astId":2239,"contract":"contracts/BaluniV1Pool.sol:BaluniV1Pool","label":"ONE","offset":0,"slot":"9","type":"t_uint256"},{"astId":2241,"contract":"contracts/BaluniV1Pool.sol:BaluniV1Pool","label":"periphery","offset":0,"slot":"10","type":"t_address"},{"astId":2246,"contract":"contracts/BaluniV1Pool.sol:BaluniV1Pool","label":"baseAsset","offset":0,"slot":"11","type":"t_address"},{"astId":2250,"contract":"contracts/BaluniV1Pool.sol:BaluniV1Pool","label":"reserves","offset":0,"slot":"12","type":"t_mapping(t_address,t_uint256)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_struct(AssetInfo)2255_storage)dyn_storage":{"base":"t_struct(AssetInfo)2255_storage","encoding":"dynamic_array","label":"struct BaluniV1Pool.AssetInfo[]","numberOfBytes":"32"},"t_contract(IBaluniV1Rebalancer)5766":{"encoding":"inplace","label":"contract IBaluniV1Rebalancer","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_struct(AssetInfo)2255_storage":{"encoding":"inplace","label":"struct BaluniV1Pool.AssetInfo","members":[{"astId":2252,"contract":"contracts/BaluniV1Pool.sol:BaluniV1Pool","label":"asset","offset":0,"slot":"0","type":"t_address"},{"astId":2254,"contract":"contracts/BaluniV1Pool.sol:BaluniV1Pool","label":"weight","offset":0,"slot":"1","type":"t_uint256"}],"numberOfBytes":"64"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{"burn(address)":{"notice":"This function can only be called by the periphery contract.The pool tokens must have a balance greater than 0.The total supply of pool tokens must be greater than 0.The function calculates the amounts of each underlying asset to transfer based on the share of pool tokens being burned.A fee is deducted from the share of pool tokens being burned and transferred to the treasury address.The function checks if the pool has sufficient liquidity before performing any transfers.If any transfer fails, the function reverts the entire operation.After the transfers, the function updates the reserves of the pool.Emits a `Burn` event with the address and share of pool tokens burned."}},"version":1}}},"contracts/BaluniV1PoolFactory.sol":{"BaluniV1PoolFactory":{"abi":[{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"},{"inputs":[{"internalType":"address","name":"implementation","type":"address"}],"name":"ERC1967InvalidImplementation","type":"error"},{"inputs":[],"name":"ERC1967NonPayable","type":"error"},{"inputs":[],"name":"FailedInnerCall","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[],"name":"UUPSUnauthorizedCallContext","type":"error"},{"inputs":[{"internalType":"bytes32","name":"slot","type":"bytes32"}],"name":"UUPSUnsupportedProxiableUUID","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"pool","type":"address"},{"indexed":false,"internalType":"address[]","name":"assets","type":"address[]"},{"indexed":false,"internalType":"address","name":"rebalancer","type":"address"}],"name":"PoolCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"inputs":[],"name":"UPGRADE_INTERFACE_VERSION","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"allPools","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_newPeriphery","type":"address"}],"name":"changePeriphery","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"assets","type":"address[]"},{"internalType":"uint256[]","name":"weights","type":"uint256[]"},{"internalType":"uint256","name":"trigger","type":"uint256"}],"name":"createPool","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getAllPools","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"}],"name":"getPool","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"poolAddress","type":"address"}],"name":"getPoolAssets","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"asset1","type":"address"},{"internalType":"address","name":"asset2","type":"address"}],"name":"getPoolByAssets","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"getPoolsByAsset","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getPoolsCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_rebalancer","type":"address"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"periphery","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_pool","type":"address"}],"name":"poolExist","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"rebalancer","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_rebalancer","type":"address"},{"internalType":"uint64","name":"_version","type":"uint64"}],"name":"reinitialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"upgradeToAndCall","outputs":[],"stateMutability":"payable","type":"function"}],"devdoc":{"errors":{"AddressEmptyCode(address)":[{"details":"There's no code at `target` (it is not a contract)."}],"ERC1967InvalidImplementation(address)":[{"details":"The `implementation` of the proxy is invalid."}],"ERC1967NonPayable()":[{"details":"An upgrade function sees `msg.value > 0` that may be lost."}],"FailedInnerCall()":[{"details":"A call to an address target failed. The target may have reverted."}],"InvalidInitialization()":[{"details":"The contract is already initialized."}],"NotInitializing()":[{"details":"The contract is not initializing."}],"OwnableInvalidOwner(address)":[{"details":"The owner is not a valid owner account. (eg. `address(0)`)"}],"OwnableUnauthorizedAccount(address)":[{"details":"The caller account is not authorized to perform an operation."}],"UUPSUnauthorizedCallContext()":[{"details":"The call is from an unauthorized context."}],"UUPSUnsupportedProxiableUUID(bytes32)":[{"details":"The storage `slot` is unsupported as a UUID."}]},"events":{"Initialized(uint64)":{"details":"Triggered when the contract has been initialized or reinitialized."},"Upgraded(address)":{"details":"Emitted when the implementation is upgraded."}},"kind":"dev","methods":{"changePeriphery(address)":{"details":"Changes the address of the periphery contract.","params":{"_newPeriphery":"The new address of the periphery contract."}},"createPool(address[],uint256[],uint256)":{"details":"Creates a new BaluniV1Pool contract and registers it in the factory.","params":{"assets":"The array of asset addresses to be included in the pool.","trigger":"The trigger value for rebalancing the pool.","weights":"The array of weights corresponding to each asset in the pool."},"returns":{"_0":"The address of the newly created pool."}},"getAllPools()":{"details":"Retrieves all the pools created by the factory.","returns":{"_0":"An array of pool addresses."}},"getPoolAssets(address)":{"details":"Retrieves the assets of a specific pool.","params":{"poolAddress":"The address of the pool."},"returns":{"_0":"An array of asset addresses."}},"getPoolByAssets(address,address)":{"details":"Retrieves the pool address based on the given assets.","params":{"asset1":"The address of the first asset.","asset2":"The address of the second asset."},"returns":{"_0":"The address of the pool."}},"getPoolsByAsset(address)":{"details":"Returns an array of pool addresses that contain the specified token.","params":{"token":"The address of the token to search for."},"returns":{"_0":"An array of pool addresses."}},"getPoolsCount()":{"details":"Retrieves the number of pools created by the factory.","returns":{"_0":"The count of pools."}},"owner()":{"details":"Returns the address of the current owner."},"proxiableUUID()":{"details":"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"upgradeToAndCall(address,bytes)":{"custom:oz-upgrades-unsafe-allow-reachable":"delegatecall","details":"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60a0806040523460295730608052615928908161002e8239608051818181610b990152610cb20152f35b5f80fdfe60806040818152600480361015610014575f80fd5b5f3560e01c92836301d22ccd146116c8575082632d5e94a714610add5782633069873b1461106757826341d1de9714610ffe5782634276b97b14610f395782634f1ef28614610c0e57826352d1902d14610b53578263531aa03e14610add578263715018a614610a2157826377aace1a146109cf57826389345efb146109835782638da5cb5b146109125782638f2248bc14610793578263ad3cb1cc146106a6578263b4340e6a146104b6578263b4ac68601461047b578263c4d66de81461028a57508163d88ff1f4146101cb57508063e9b31cff146101495763f2fde38b146100fc575f80fd5b346101455760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261014557610143610136611716565b61013e611ad3565b611a12565b005b5f80fd5b346101455760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101455773ffffffffffffffffffffffffffffffffffffffff610195611716565b61019d611ad3565b167fffffffffffffffffffffffff000000000000000000000000000000000000000060035416176003555f80f35b34610145575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101455780515f8054808352818052602080840194927f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56392915b82821061025d576102598686610247828b038361175c565b51918291602083526020830190611842565b0390f35b835473ffffffffffffffffffffffffffffffffffffffff168752958601956001938401939091019061022f565b346101455760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610145576102c1611716565b907ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0091825460ff81861c16159267ffffffffffffffff821680159081610473575b6001149081610469575b159081610460575b50610439575090818360017fffffffffffffffffffffffffffffffffffffffffffffffff000000000000000073ffffffffffffffffffffffffffffffffffffffff9516178655610404575b50610368611b43565b610370611b43565b610378611b43565b61038133611a12565b167fffffffffffffffffffffffff000000000000000000000000000000000000000060025416176002556103b157005b7fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d291817fffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff602093541690555160018152a1005b7fffffffffffffffffffffffffffffffffffffffffffffff00000000000000000016680100000000000000011784558561035f565b85517ff92ee8a9000000000000000000000000000000000000000000000000000000008152fd5b90501587610314565b303b15915061030c565b859150610302565b5034610145575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610145576020905f549051908152f35b346101455760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610145576104ed611716565b905f54916104fa836119c3565b925f925f9073ffffffffffffffffffffffffffffffffffffffff8094165b83831061056d575b5050505061052d826119c3565b925f5b83811061054c5785516020808252819061025990820188611842565b808361055a600193856118c5565b511661056682886118c5565b5201610530565b8461057d849794989695986117e2565b90549060031b1c16908851977f67e4ac2c0000000000000000000000000000000000000000000000000000000089525f898581865afa98891561069c575f99610678575b505f5b895181101561066a5782876105d9838d6118c5565b5116146105e8576001016105c4565b50939190949597506105fa82896118c5565b527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811461063e57600101945b86518614610639576001019192610518565b610520565b6011827f4e487b71000000000000000000000000000000000000000000000000000000005f525260245ffd5b509396915093949650610627565b6106959199503d805f833e61068d818361175c565b8101906118d9565b978a6105c1565b8a513d5f823e3d90fd5b9034610145575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610145578051918183019083821067ffffffffffffffff831117610767575081526005825260208201917f352e302e3000000000000000000000000000000000000000000000000000000083527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8351948593602085525180918160208701528686015e5f85828601015201168101030190f35b6041907f4e487b71000000000000000000000000000000000000000000000000000000005f525260245ffd5b903461014557807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610145576107ca611716565b916024359267ffffffffffffffff90818516809503610145577ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00928354928660ff85881c16918215610905575b50506108de577fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d260208787877fffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff68010000000000000000847fffffffffffffffffffffffffffffffffffffffffffffff0000000000000000008b73ffffffffffffffffffffffffffffffffffffffff8c167fffffffffffffffffffffffff0000000000000000000000000000000000000000600254161760025516171716905551908152a1005b84517ff92ee8a9000000000000000000000000000000000000000000000000000000008152fd5b8516101590508688610817565b5034610145575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101455760209073ffffffffffffffffffffffffffffffffffffffff7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930054169051908152f35b50346101455760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610145576020906109c66109c1611716565b611970565b90519015158152f35b5034610145575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101455760209073ffffffffffffffffffffffffffffffffffffffff600354169051908152f35b34610145575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261014557610a57611ad3565b5f73ffffffffffffffffffffffffffffffffffffffff7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c1993008054907fffffffffffffffffffffffff000000000000000000000000000000000000000082169055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b503461014557807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261014557602090610b17611716565b610b1f611739565b73ffffffffffffffffffffffffffffffffffffffff8092165f526001845281835f2091165f528352815f2054169051908152f35b9034610145575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101455773ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000163003610be857602090517f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc8152f35b517fe07c8dba000000000000000000000000000000000000000000000000000000008152fd5b817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261014557610c3f611716565b602492833567ffffffffffffffff811161014557366023820112156101455780840135610c6b8161188b565b93610c788451958661175c565b818552602091828601933689838301011161014557815f928a86930187378701015273ffffffffffffffffffffffffffffffffffffffff807f000000000000000000000000000000000000000000000000000000000000000016803014908115610f0b575b50610ee357610cea611ad3565b81169484517f52d1902d000000000000000000000000000000000000000000000000000000008152838189818a5afa5f9181610eb4575b50610d5557505050505051917f4c9c8ce3000000000000000000000000000000000000000000000000000000008352820152fd5b9087878794938b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc91828103610e875750853b15610e5a5750817fffffffffffffffffffffffff00000000000000000000000000000000000000008254161790558451907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b5f80a2825115610e275750505f6101439581925190845af4913d15610e1d573d610e0f610e068261188b565b9251928361175c565b81525f81943d92013e611b9c565b5060609250611b9c565b9450945050505034610e3557005b7fb398979f000000000000000000000000000000000000000000000000000000008152fd5b83838851917f4c9c8ce3000000000000000000000000000000000000000000000000000000008352820152fd5b84908851917faa1d49a4000000000000000000000000000000000000000000000000000000008352820152fd5b9091508481813d8311610edc575b610ecc818361175c565b810103126101455751908a610d21565b503d610ec2565b8685517fe07c8dba000000000000000000000000000000000000000000000000000000008152fd5b9050817f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5416141589610cdd565b346101455760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610145575f73ffffffffffffffffffffffffffffffffffffffff610f86611716565b168351928380927f67e4ac2c0000000000000000000000000000000000000000000000000000000082525afa908115610ff45791610259925f92610fd8575b5051918291602083526020830190611842565b610fed9192503d805f833e61068d818361175c565b9083610fc5565b82513d5f823e3d90fd5b346101455760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101455735905f548210156101455773ffffffffffffffffffffffffffffffffffffffff6110586020936117e2565b92905490519260031b1c168152f35b346101455760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101455767ffffffffffffffff918135838111610145573660238201121561014557808301359360246110c4866117ca565b926110d18551948561175c565b868452602096828886019160051b83010191368311610145578301905b82821061169c575050508035828111610145573660238201121561014557808601359061111a826117ca565b906111278751928361175c565b8282528882019260051b81018401908336831161014557858b9201905b83821061168d575050505060449173ffffffffffffffffffffffffffffffffffffffff9485600354169081156116325760019485895111156115d8578851855103611557575f865b61141a575b5050866002541693895194613cb680870193878510908511176113ef5790869594939291611c3d8739825260a08d8301528c6111d060a084018c611842565b8381038d8501529151808352910193905f888f5b8383106113d857505050604435606084015250506080015203905ff080156113ce578316955f54680100000000000000008110156113a3579061123082848a9897969594015f556117e2565b81549060031b908689831b921b1916179055815f905b611298575b505050507f93de7d9de9f3e05ba87a0170fcbb71af623439caf5e5079587b9d38c5da9b0d19161128a9160025416855192839287845287840190611842565b90888301520390a251908152f35b909192939495865182101561139b57508281018082116113705783929190835b6112ca575b5082018896959493611246565b879391929351811015611367578190876112e4858b6118c5565b51165f52818c52895f20886112f9838c6118c5565b51165f528c52895f207fffffffffffffffffffffffff0000000000000000000000000000000000000000908c8282541617905588611337838c6118c5565b51165f52828d528a5f208961134c878d6118c5565b51165f528d528b8b5f209182541617905501819392916112b8565b929190926112bd565b846011847f4e487b71000000000000000000000000000000000000000000000000000000005f52525ffd5b95949361124b565b836041837f4e487b71000000000000000000000000000000000000000000000000000000005f52525ffd5b85513d5f823e3d90fd5b84518852899850968701969093019201888f6111e4565b8860418e7f4e487b71000000000000000000000000000000000000000000000000000000005f52525ffd5b89518110156115525786810180821161152757879291908b8f8c8f875b61144a575b50505050508201909161118c565b90919293949596845186101561151a57508461147a918361146b89886118c5565b51165f528d85525f20946118c5565b51165f5252898c5f205416611499578792919083018b8f8c8f87611437565b8b517f08c379a0000000000000000000000000000000000000000000000000000000008152808e018f90526021818b01527f506f6f6c20616c72656164792065786973747320666f72207468697320706169818501527f72000000000000000000000000000000000000000000000000000000000000006064820152608490fd5b969594509083929161143c565b8860118e7f4e487b71000000000000000000000000000000000000000000000000000000005f52525ffd5b611191565b60848b6022898f8e51937f08c379a00000000000000000000000000000000000000000000000000000000085528401528201527f41737365747320616e642077656967687473206c656e677468206d69736d617460448201527f63680000000000000000000000000000000000000000000000000000000000006064820152fd5b60648b8d89818e51937f08c379a00000000000000000000000000000000000000000000000000000000085528401528201527f4174206c656173742074776f20617373657473206172652072657175697265646044820152fd5b60648a6011888e8d51937f08c379a00000000000000000000000000000000000000000000000000000000085528401528201527f506572697068657279206e6f74207365740000000000000000000000000000006044820152fd5b81358152908201908201611144565b813573ffffffffffffffffffffffffffffffffffffffff811681036101455781529088019088016110ee565b34610145575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101455760209073ffffffffffffffffffffffffffffffffffffffff600254168152f35b6004359073ffffffffffffffffffffffffffffffffffffffff8216820361014557565b6024359073ffffffffffffffffffffffffffffffffffffffff8216820361014557565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff82111761179d57604052565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b67ffffffffffffffff811161179d5760051b60200190565b5f54811015611815575f80527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56301905f90565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b9081518082526020808093019301915f5b828110611861575050505090565b835173ffffffffffffffffffffffffffffffffffffffff1685529381019392810192600101611853565b67ffffffffffffffff811161179d57601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b80518210156118155760209160051b010190565b60209081818403126101455780519067ffffffffffffffff821161014557019180601f8401121561014557825161190f816117ca565b9361191d604051958661175c565b818552838086019260051b820101928311610145578301905b828210611944575050505090565b815173ffffffffffffffffffffffffffffffffffffffff81168103610145578152908301908301611936565b5f905f54915b828110611984575050505f90565b61198d816117e2565b9073ffffffffffffffffffffffffffffffffffffffff90548185169260031b1c16146119bb57600101611976565b505050600190565b906119cd826117ca565b6119da604051918261175c565b8281527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0611a0882946117ca565b0190602036910137565b73ffffffffffffffffffffffffffffffffffffffff809116908115611aa3577f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300805490837fffffffffffffffffffffffff00000000000000000000000000000000000000008316179055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e05f80a3565b60246040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081525f6004820152fd5b73ffffffffffffffffffffffffffffffffffffffff7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930054163303611b1357565b60246040517f118cdaa7000000000000000000000000000000000000000000000000000000008152336004820152fd5b60ff7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a005460401c1615611b7257565b60046040517fd7e6bcf8000000000000000000000000000000000000000000000000000000008152fd5b90611bdb5750805115611bb157805190602001fd5b60046040517f1425ea42000000000000000000000000000000000000000000000000000000008152fd5b81511580611c33575b611bec575090565b60249073ffffffffffffffffffffffffffffffffffffffff604051917f9996b315000000000000000000000000000000000000000000000000000000008352166004820152fd5b50803b15611be456fe6080806040523461042f57613cb6803803809161001c82856108f4565b8339810160a08282031261042f5761003382610917565b60208301519091906001600160401b03811161042f5783019181601f8401121561042f578251926100638461092b565b9361007160405195866108f4565b80855260208086019160051b8301019184831161042f57602001905b8282106108c15750505060408401516001600160401b03811161042f5784019180601f8401121561042f5782516100c38161092b565b936100d160405195866108f4565b81855260208086019260051b82010192831161042f57602001905b8282106108b157505050610107608060608601519501610917565b604051610113816108d9565b6009815268042616c756e69204c560bc1b602082015260405190610136826108d9565b6009825268042414c554e492d4c560bc1b60208301528051906001600160401b03821161048c5760035490600182811c921680156108a7575b60208310146107885781601f849311610839575b50602090601f83116001146107b1575f926107a6575b50508160011b915f199060031b1c1916176003555b8051906001600160401b03821161048c5760045490600182811c9216801561079c575b60208310146107885781601f84931161071a575b50602090601f8311600114610696575f9261068b575b50508160011b915f199060031b1c1916176004555b6001600555600a80546001600160a01b03199081166001600160a01b039384161790915560068054909116918316919091179055670de0b6b3a7640000600955825182510361063b575f5b835181101561051b576001600160a01b036102768286610942565b5116156104d6576102878184610942565b51156104a0576001600160a01b0361029f8286610942565b51166102ab8285610942565b5160408051929083018084116001600160401b039091111761048c5760408301604052825260208201526007546801000000000000000081101561048c5760018101806007558110156104785760075f5281517fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c68860019290921b91820180546001600160a01b039283166001600160a01b03199091161790556020909201517fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c689909101556103798286610942565b511660018060a01b0360065416604051636eb1769f60e11b8152306004820152816024820152602081604481865afa90811561043b575f91610446575b50156103c7575b505060010161025b565b5f916044602092604051948593849263095ea7b360e01b84526004840152811960248401525af1801561043b576103ff575b806103bd565b6020813d602011610433575b81610418602093836108f4565b8101031261042f57518015150361042f575f6103f9565b5f80fd5b3d915061040b565b6040513d5f823e3d90fd5b90506020813d602011610470575b81610461602093836108f4565b8101031261042f57515f6103b6565b3d9150610454565b634e487b7160e01b5f52603260045260245ffd5b634e487b7160e01b5f52604160045260245ffd5b60405162461bcd60e51b815260206004820152600e60248201526d125b9d985b1a59081dd95a59da1d60921b6044820152606490fd5b60405162461bcd60e51b815260206004820152601560248201527f496e76616c6964206173736574206164647265737300000000000000000000006044820152606490fd5b50600884905560405163bc06e81d60e01b815290602090829060049082906001600160a01b03165afa90811561043b575f91610601575b50600b80546001600160a01b0319166001600160a01b03929092169190911790555f90815b81518310156105b35761058a8383610942565b51810180911161059f57600190920191610577565b634e487b7160e01b5f52601160045260245ffd5b612710036105ca5760405161335f90816109578239f35b60405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964207765696768747360881b6044820152606490fd5b90506020813d602011610633575b8161061c602093836108f4565b8101031261042f5761062d90610917565b82610552565b3d915061060f565b60405162461bcd60e51b815260206004820152602260248201527f41737365747320616e642077656967687473206c656e677468206d69736d61746044820152610c6d60f31b6064820152608490fd5b015190505f806101fb565b60045f9081527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b9350601f198516905b81811061070257509084600195949392106106ea575b505050811b01600455610210565b01515f1960f88460031b161c191690555f80806106dc565b929360206001819287860151815501950193016106c6565b60045f529091507f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b601f840160051c8101916020851061077e575b90601f859493920160051c01905b81811061077057506101e5565b5f8155849350600101610763565b9091508190610755565b634e487b7160e01b5f52602260045260245ffd5b91607f16916101d1565b015190505f80610199565b60035f90815293507fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b91905b601f198416851061081e576001945083601f19811610610806575b505050811b016003556101ae565b01515f1960f88460031b161c191690555f80806107f8565b818101518355602094850194600190930192909101906107dd565b60035f529091507fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b601f840160051c8101916020851061089d575b90601f859493920160051c01905b81811061088f5750610183565b5f8155849350600101610882565b9091508190610874565b91607f169161016f565b81518152602091820191016100ec565b602080916108ce84610917565b81520191019061008d565b604081019081106001600160401b0382111761048c57604052565b601f909101601f19168101906001600160401b0382119082101761048c57604052565b51906001600160a01b038216820361042f57565b6001600160401b03811161048c5760051b60200190565b80518210156104785760209160051b01019056fe60a0604081815260049182361015610015575f80fd5b5f925f3560e01c91826301d22ccd1461281e5750816306fdde03146126d55781630723c9991461236a5781630902f1ac1461231c578163095ea7b31461221757816318160ddd146121db5781631a6865021461219957816322acb8671461211e57816323b872dd14611fc9578163313ce56714611f9057816336bf6e3914611f3e5781633dff5b7f14611e545781634aa0665214611e395781635568081a14611a2557816367a6c440146119ea57816367e4ac2c1461195b5781636e81221c1461157657816370a082311461151557816377aace1a146114c25781637e04795a146113fd5781637fec8d38146113c057816389ab35321461133657816389afcb4414610c175781638a77c8dc14610bd357816395d89b4114610a7d578163a9059cbb14610a2e578163b2b55d7014610802578163c2ee3a08146109f1578163cdf456e11461099e578163cf8fa764146108e2578163d14ef46d14610864578163d66bd52414610802578163dd62ed3e1461078d578163de836ebd146101e7575063e73faa2d146101a3575f80fd5b346101e357817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101e3576020906101dc613040565b9051908152f35b5080fd5b9050823461078a57827ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261078a576102206128b4565b91602492833567ffffffffffffffff8111610786576102429036908401612a27565b9273ffffffffffffffffffffffffffffffffffffffff9261026884600a54163314612c59565b6002549582610275612bfd565b9760079860075490805182036107295781156106cc579086915b8183106105415750505081156104bf57806104145750935b84156103b85790846102e18a979695949333865260209b868d978852808a83822054946102d48882613118565b1698898252522054612e66565b0361035d5750505f5b865481101561032b578084610300600193612ad0565b50541661030d8289612b9a565b51905f52600c8a52610323875f20918254612e73565b9055016102ea565b878386847f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d4121396885848351858152a251908152f35b90600b6064928a8851937f08c379a00000000000000000000000000000000000000000000000000000000085528401528201527f4d696e74204661696c65640000000000000000000000000000000000000000006044820152fd5b606483600d8460208d51937f08c379a00000000000000000000000000000000000000000000000000000000085528401528201527f4d696e74207174792069732030000000000000000000000000000000000000006044820152fd5b61041c61306b565b5091821561043d57610437929161043291612d72565b612db2565b936102a7565b60848560268660208f51937f08c379a00000000000000000000000000000000000000000000000000000000085528401528201527f546f74616c206c6971756964697479206d75737420626520677265617465722060448201527f7468616e203000000000000000000000000000000000000000000000000000006064820152fd5b60848460228560208e51937f08c379a00000000000000000000000000000000000000000000000000000000085528401528201527f546f74616c2076616c7565206d7573742062652067726561746572207468616e60448201527f20300000000000000000000000000000000000000000000000000000000000006064820152fd5b9091938961054e86612ad0565b5054168d51907f70a08231000000000000000000000000000000000000000000000000000000008252308983015260209182818a81855afa9081156106c0578b9161068f575b508015610633576105b0906105a98987612b9a565b5190612e66565b9182156105d75750916105c86105ce926001946132bf565b90612e73565b9401919061028f565b8f601d8a6064938d9351937f08c379a00000000000000000000000000000000000000000000000000000000085528401528201527f416d6f756e74206d7573742062652067726561746572207468616e20300000006044820152fd5b8f8a601e8b8660649451937f08c379a00000000000000000000000000000000000000000000000000000000085528401528201527f42616c616e6365206d7573742062652067726561746572207468616e203000006044820152fd5b90508281813d83116106b9575b6106a681836129ce565b810103126106b557515f610594565b5f80fd5b503d61069c565b50508e513d8b823e3d90fd5b5060648560098660208f51937f08c379a00000000000000000000000000000000000000000000000000000000085528401528201527f4e6f2061737365747300000000000000000000000000000000000000000000006044820152fd5b5060648560178660208f51937f08c379a00000000000000000000000000000000000000000000000000000000085528401528201527f496e76616c6964207265736572766573206c656e6774680000000000000000006044820152fd5b8380fd5b80fd5b5050346101e357807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101e3576020916107c86128b4565b826107d16128d7565b9273ffffffffffffffffffffffffffffffffffffffff8093168152600186522091165f528252805f20549051908152f35b5050346101e35760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101e3578060209273ffffffffffffffffffffffffffffffffffffffff6108546128b4565b168152600c845220549051908152f35b839150346101e35760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101e357359060075482101561078a57506108ac90612ad0565b508054600190910154915173ffffffffffffffffffffffffffffffffffffffff90911681526020810191909152604090f35b0390f35b9050823461078a5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261078a575080359061092061306b565b8092915051831015610941576020846109398585612b9a565b519051908152f35b60649060208551917f08c379a0000000000000000000000000000000000000000000000000000000008352820152601360248201527f496e76616c696420617373657420696e646578000000000000000000000000006044820152fd5b5050346101e357817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101e35760209073ffffffffffffffffffffffffffffffffffffffff600b54169051908152f35b5050346101e357817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101e3576020906009549051908152f35b5050346101e357807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101e357602090610a76610a6c6128b4565b60243590336131b2565b5160018152f35b8383346101e357817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101e35780519180938054916001908360011c9260018516948515610bc9575b6020958686108114610b9d57858952908115610b5b5750600114610b03575b6108de8787610af9828c03836129ce565b519182918261286c565b81529295507f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5b828410610b4857505050826108de94610af992820101948680610ae8565b8054868501880152928601928101610b2a565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00168887015250505050151560051b8301019250610af9826108de8680610ae8565b6024846022857f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b93607f1693610ac9565b5050346101e357817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101e357602090610c0e612fea565b90519015158152f35b839150346101e3576020807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261133257610c526128b4565b9273ffffffffffffffffffffffffffffffffffffffff93610c7885600a54163314612c59565b308252818352858220549081156112d65760025495861561127a576007805493610ca185612bae565b9461012c82027ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffed48382040161124e57612710610cdf91048093612e66565b99875b82811061119657505050308652858752610d01898b8820541015612f85565b878784600654168c51928380927f3b19e84a0000000000000000000000000000000000000000000000000000000082525afa908115611141579188918a9796959493899161114b575b5090610da792918d5193849283927fa9059cbb000000000000000000000000000000000000000000000000000000009b8c855284016020909392919373ffffffffffffffffffffffffffffffffffffffff60408201951681520152565b03818a305af1908115611141578791611124575b50156110c857308652858752610dd6898b8820541015612f85565b301561109957305f525f8752895f2054898110611054578990305f525f8952038a5f205588600254036002555f8a518a81527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef893092a3855b8154811015610fd9578783610e4383612ad0565b5054168c51918280927f70a082310000000000000000000000000000000000000000000000000000000082528d309083015260249485915afa8015610fa0578990610faa575b610ea09150610e988489612b9a565b511115612e01565b8b8986888d8c8c610ef7610ec18a8d610eb882612ad0565b50541696612b9a565b51975197889687958694855284016020909392919373ffffffffffffffffffffffffffffffffffffffff60408201951681520152565b03925af1908115610fa0578991610f73575b5015610f185750600101610e2f565b8960156064928b8f51937f08c379a00000000000000000000000000000000000000000000000000000000085528401528201527f4173736574207472616e73666572206661696c656400000000000000000000006044820152fd5b610f9391508a3d8c11610f99575b610f8b81836129ce565b810190612de9565b8d610f09565b503d610f81565b8d513d8b823e3d90fd5b508981813d8311610fd2575b610fc081836129ce565b810103126106b557610ea09051610e89565b503d610fb6565b50918991868a89935f5b8754811015611024578085610ff9600193612ad0565b505416611006828c612b9a565b51905f52600c885261101c895f20918254612e66565b905501610fe3565b5084847fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca59288519485521692a280f35b8a517fe450d38c00000000000000000000000000000000000000000000000000000000815230818b019081526020810192909252604082018b90529081906060010390fd5b602488878c51917f96c6fd1e000000000000000000000000000000000000000000000000000000008352820152fd5b606488888c51917f08c379a0000000000000000000000000000000000000000000000000000000008352820152601360248201527f466565207472616e73666572206661696c6564000000000000000000000000006044820152fd5b61113b9150883d8a11610f9957610f8b81836129ce565b8b610dbb565b8b513d89823e3d90fd5b9280929495969798508391503d831161118f575b61116981836129ce565b8101031261118b5751838116810361118b578895949392918891610da7610d4a565b8680fd5b503d61115f565b8c8a8c6024896111a586612ad0565b5054169351809481937f70a0823100000000000000000000000000000000000000000000000000000000835230908301525afa908115611244578392918e918c9161120d575b50926104326111fc92600195612d72565b611206828b612b9a565b5201610ce2565b935050508a82813d831161123d575b61122681836129ce565b810103126106b55790518291908d906104326111eb565b503d61121c565b8e513d8c823e3d90fd5b60248860118c7f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b606486868a51917f08c379a0000000000000000000000000000000000000000000000000000000008352820152600c60248201527f4e6f206c697175696469747900000000000000000000000000000000000000006044820152fd5b606485858951917f08c379a0000000000000000000000000000000000000000000000000000000008352820152601c60248201527f5368617265206d7573742062652067726561746572207468616e2030000000006044820152fd5b8280fd5b82843461078a57807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261078a5761136e612e80565b92908151938285938401908452825180915260608401926020809101955b8281106113a75785806108de878783820360208501526128fa565b865115158552958101958795509381019360010161138c565b5050346101e357817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101e3576020906008549051908152f35b919050346113325760209160207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126107865780359067ffffffffffffffff82116114be5761145091369101612a27565b9073ffffffffffffffffffffffffffffffffffffffff9261147684600a54163314612c59565b845b6007548110156114ba57808561148f600193612ad0565b50541661149c8287612b9a565b51908852600c84526114b2858920918254612e66565b905501611478565b8580f35b8480fd5b5050346101e357817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101e35760209073ffffffffffffffffffffffffffffffffffffffff600a54169051908152f35b5050346101e35760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101e3578060209273ffffffffffffffffffffffffffffffffffffffff6115676128b4565b16815280845220549051908152f35b9050346113325760807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112611332576115af6128b4565b926115b86128d7565b6044356064359573ffffffffffffffffffffffffffffffffffffffff9687811681036106b55760026005541461193357600260055587841693888316928584146118d65784156118795788517f23b872dd00000000000000000000000000000000000000000000000000000000815260206080819052338a83019081523081830152604081018890528290819060600103818b895af1801561186f57916116679391879361184e575b50612cbe565b9787517f70a08231000000000000000000000000000000000000000000000000000000008152308882015260805181602481895afa80156117e2578a908890611818575b6116b792501015612e01565b61012c808a02908a8204148a1517156117ec576127106116d891048a612e66565b968851907fa9059cbb00000000000000000000000000000000000000000000000000000000825281806117348b876080519584016020909392919373ffffffffffffffffffffffffffffffffffffffff60408201951681520152565b03818a8a5af180156117e257936117b09795937fcd3829a3813dc3cdd188fd3d01dcf3268c16be2fdd2dd21d0665418816e460628b83958a9895829b966117c1575b508151938885528d6080518601521692a48352600c6080515261179d848420918254612e73565b90558152600c6080515220918254612e73565b905560016005555190815260805190f35b6117db906080513d60805111610f9957610f8b81836129ce565b505f611776565b89513d89823e3d90fd5b60248760118a7f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b50506080513d8111611847575b61182f81836129ce565b8160805191810103126106b557896116b791516116ab565b503d611825565b611868906080513d60805111610f9957610f8b81836129ce565b505f611661565b8a513d8a823e3d90fd5b60648860208b51917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602060248201527f416d6f756e74206d7573742062652067726561746572207468616e207a65726f6044820152fd5b60648860208b51917f08c379a0000000000000000000000000000000000000000000000000000000008352820152601a60248201527f43616e6e6f742073776170207468652073616d6520746f6b656e0000000000006044820152fd5b8587517f3ee5aeb5000000000000000000000000000000000000000000000000000000008152fd5b82843461078a57807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261078a5760075461199781612bae565b915b8181106119b5578351602080825281906108de90820186612a87565b8073ffffffffffffffffffffffffffffffffffffffff6119d6600193612ad0565b5054166119e38286612b9a565b5201611999565b5050346101e357817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101e3576020905161012c8152f35b9050346106b5576020907ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc9282843601126106b557611a626128b4565b91611a73611a6e612fea565b612b35565b6002546103e890818102918183041490151715611e0d576127109073ffffffffffffffffffffffffffffffffffffffff8095165f525f865204825f205410611db257600794600754611ac481612bae565b91611ace82612bae565b915f5b818110611d7957505085600a5416803b156106b5575f8091868851809481937ffe1101160000000000000000000000000000000000000000000000000000000083525af18015611d6f57611d5a575b5090889186600654166008549088600b5416813b15611d565788517f0325192d00000000000000000000000000000000000000000000000000000000815260c0818a01529486948694859387938593611b8f91611b8060c487018f612a87565b918683030160248701526128fa565b91306044850152306064850152608484015260a483015203925af18015611d4c57611d38575b505b8654811015611cfa5784611bca82612ad0565b50541684517f70a0823100000000000000000000000000000000000000000000000000000000815230858201528781602481855afa908115611cf0579088918b91611cbf575b5082611c7d938c52600c835281888d205588600a54168c89518096819582947fa9059cbb0000000000000000000000000000000000000000000000000000000084528c84016020909392919373ffffffffffffffffffffffffffffffffffffffff60408201951681520152565b03925af18015611cb5579060019291611c98575b5001611bb7565b611cae90883d8a11610f9957610f8b81836129ce565b505f611c91565b85513d8b823e3d90fd5b82819392503d8311611ce9575b611cd681836129ce565b810103126106b557518790611c7d611c10565b503d611ccc565b86513d8c823e3d90fd5b8351868152889033907f279b343370f587af7fb675ae7c8578e9c8abcc373236ad02c501a4771fe7a7b89080611d32818c0188612a87565b0390a280f35b611d419061298d565b61118b57865f611bb5565b85513d84823e3d90fd5b8580fd5b611d669192995061298d565b5f97905f611b20565b86513d5f823e3d90fd5b8088611d86600193612ad0565b505416611d938288612b9a565b5281611d9e82612ad0565b500154611dab8287612b9a565b5201611ad1565b8360649251917f08c379a0000000000000000000000000000000000000000000000000000000008352820152601160248201527f556e646572203525204c502073686172650000000000000000000000000000006044820152fd5b6011827f4e487b71000000000000000000000000000000000000000000000000000000005f525260245ffd5b82346106b5576020906101dc611e4e3661292d565b91612cbe565b9050346106b557817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126106b55780359067ffffffffffffffff82116106b557611ea291369101612a27565b9060243580151581036106b55773ffffffffffffffffffffffffffffffffffffffff92611ed484600a54163314612c59565b5f5b600754811015611f3c578085611eed600193612ad0565b505416611efa8285612b9a565b51908515611f20575f52600c602052611f17865f20918254612e73565b90555b01611ed6565b5f52600c602052611f35865f20918254612e66565b9055611f1a565b005b82346106b5575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126106b5576108de611f7861306b565b839291925193849384528060208501528301906128fa565b82346106b5575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126106b5576020905160128152f35b9050346106b557611fd93661292d565b9273ffffffffffffffffffffffffffffffffffffffff83929316805f526001602052855f20335f52602052855f2054917fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff830361203f575b602087610a768888886131b2565b8583106120d95781156120aa57331561207b57505f90815260016020908152868220338352815290869020918590039091558290610a76612031565b6024905f8851917f94280d62000000000000000000000000000000000000000000000000000000008352820152fd5b6024905f8851917fe602df05000000000000000000000000000000000000000000000000000000008352820152fd5b86517ffb8f41b2000000000000000000000000000000000000000000000000000000008152339181019182526020820193909352604081018690528291506060010390fd5b82346106b5575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126106b55760075461215981612bae565b905f5b818110612178578351602080825281906108de908201866128fa565b8060016121858193612ad0565b5001546121928286612b9a565b520161215c565b82346106b5575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126106b5576020906121d361306b565b509051908152f35b82346106b5575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126106b5576020906002549051908152f35b82346106b557807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126106b55761224e6128b4565b6024359033156122ed5773ffffffffffffffffffffffffffffffffffffffff169081156122be5760209350335f5260018452825f20825f52845280835f205582519081527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925843392a35160018152f35b6024845f8551917f94280d62000000000000000000000000000000000000000000000000000000008352820152fd5b6024845f8551917fe602df05000000000000000000000000000000000000000000000000000000008352820152fd5b82346106b5575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126106b5576108de90612357612bfd565b90519182916020835260208301906128fa565b82346106b557602090817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126106b5576123a46128b4565b916123b0611a6e612fea565b6123b861306b565b9490600754906123c782612bae565b965f5b838110612680575050505f905f905b80821061265f5750505f5b8651811015612618576123f78188612b9a565b51612405575b6001016123e4565b61248a6124128289612b9a565b518561241d84612ad0565b5054600654600b548a517f248391ff00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9182168a82019081529382166020850152604084019590955293948592918516918391829160600190565b03915afa91821561260e575f926125df575b5081156125835761251c8683836124b287612ad0565b50541684600a54165f8a8d51968795869485937f23b872dd0000000000000000000000000000000000000000000000000000000085523390850160409194939294606082019573ffffffffffffffffffffffffffffffffffffffff80921683521660208201520152565b03925af18015612579579060019493929161255c575b5061253c83612ad0565b5054165f52600c8652612553875f20918254612e73565b905590506123fd565b61257290883d8a11610f9957610f8b81836129ce565b508a612532565b88513d5f823e3d90fd5b606485878951917f08c379a0000000000000000000000000000000000000000000000000000000008352820152601b60248201527f496e76616c696420746f6b656e20616d6f756e7420746f2061646400000000006044820152fd5b9091508581813d8311612607575b6125f781836129ce565b810103126106b55751908961249c565b503d6125ed565b87513d5f823e3d90fd5b837fa95ad530009c6f929555e70a66aadbeae7231e45756c5b028ca77fbaa376e73e61265a8988612649878c613118565b5191829185835233958301906128fa565b0390a2005b9091612678600191612671858b612b9a565b5190612e73565b9201906123d9565b8061271061269c60016126938195612ad0565b50015486612d72565b04806126a88386612b9a565b51106126b6575b50016123ca565b6126c4906105a98386612b9a565b6126ce828c612b9a565b528a6126af565b82346106b5575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126106b5578051905f9260035460018160011c91600181168015612814575b60209485851082146127e857508387529081156127aa5750600114612750575b505050610af9826108de9403836129ce565b60035f9081529295507fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b82841061279757505050826108de94610af9928201019461273e565b805486850188015292860192810161277b565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016868501525050151560051b8301019250610af9826108de61273e565b6022907f4e487b71000000000000000000000000000000000000000000000000000000005f525260245ffd5b92607f169261271e565b346106b5575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126106b55760209073ffffffffffffffffffffffffffffffffffffffff600654168152f35b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f602060409481855280519182918282880152018686015e5f8582860101520116010190565b6004359073ffffffffffffffffffffffffffffffffffffffff821682036106b557565b6024359073ffffffffffffffffffffffffffffffffffffffff821682036106b557565b9081518082526020808093019301915f5b828110612919575050505090565b83518552938101939281019260010161290b565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc60609101126106b55773ffffffffffffffffffffffffffffffffffffffff9060043582811681036106b5579160243590811681036106b5579060443590565b67ffffffffffffffff81116129a157604052565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff8211176129a157604052565b67ffffffffffffffff81116129a15760051b60200190565b9080601f830112156106b5576020908235612a4181612a0f565b93612a4f60405195866129ce565b81855260208086019260051b8201019283116106b557602001905b828210612a78575050505090565b81358152908301908301612a6a565b9081518082526020808093019301915f5b828110612aa6575050505090565b835173ffffffffffffffffffffffffffffffffffffffff1685529381019392810192600101612a98565b600754811015612b085760075f5260011b7fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c68801905f90565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b15612b3c57565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f526562616c616e6365206e6f74206e65656465640000000000000000000000006044820152fd5b8051821015612b085760209160051b010190565b90612bb882612a0f565b612bc560405191826129ce565b8281527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0612bf38294612a0f565b0190602036910137565b600754612c0981612bae565b905f5b818110612c1857505090565b8073ffffffffffffffffffffffffffffffffffffffff612c39600193612ad0565b5054165f52600c60205260405f2054612c528286612b9a565b5201612c0c565b15612c6057565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f4f6e6c79205065726970686572790000000000000000000000000000000000006044820152fd5b6006546040517f248391ff00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff92831660048201529282166024840152604483019390935290916020918391168180606481015b03915afa908115612d67575f91612d38575090565b90506020813d602011612d5f575b81612d53602093836129ce565b810103126106b5575190565b3d9150612d46565b6040513d5f823e3d90fd5b81810292918115918404141715612d8557565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b8115612dbc570490565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b908160209103126106b5575180151581036106b55790565b15612e0857565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f496e73756666696369656e74204c6971756964697479000000000000000000006044820152fd5b91908203918211612d8557565b91908201809211612d8557565b612e8861306b565b919060075490612e9782612a0f565b91612ea560405193846129ce565b8083527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0612ed282612a0f565b01366020850137612ee281612bae565b945f5b828110612ef457505050509190565b612efe8183612b9a565b519061271091828102928184041490151715612d8557612f2085600193612db2565b612f2982612ad0565b50830154839181811115612f5e5790612f4191612e66565b612f4b838b612b9a565b52612f568288612b9a565b525b01612ee5565b90612f699250612e66565b612f73828a612b9a565b525f612f7f8288612b9a565b52612f58565b15612f8c57565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f496e73756666696369656e74206c6971756964697479000000000000000000006044820152fd5b612ff2612e80565b5f5b8151811015613039576130078184612b9a565b51151580613024575b61301c57600101612ff4565b505050600190565b5061302f8183612b9a565b5160085410613010565b5050505f90565b61304861306b565b506002548015613065576104326130629260095490612d72565b90565b50505f90565b600754905f61307983612bae565b925f9073ffffffffffffffffffffffffffffffffffffffff80600b5416905b8284106130a757505050509190565b909192936130e7600191836130bb88612ad0565b5054168581036130f1575f52600c60205260405f20546130db888b612b9a565b525b612671878a612b9a565b9401929190613098565b80613108915f52600c60205260405f2054906132bf565b613112888b612b9a565b526130dd565b73ffffffffffffffffffffffffffffffffffffffff16908115613182577fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6020826131665f94600254612e73565b60025584845283825260408420818154019055604051908152a3565b60246040517fec442f050000000000000000000000000000000000000000000000000000000081525f6004820152fd5b9173ffffffffffffffffffffffffffffffffffffffff80841692831561328f571692831561318257825f525f60205260405f2054908282106132375750817fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92602092855f525f84520360405f2055845f5260405f20818154019055604051908152a3565b6040517fe450d38c00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff919091166004820152602481019190915260448101829052606490fd5b60246040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081525f6004820152fd5b600654600b546040517f248391ff00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff938416600482015290831660248201526044810193909352602091839116818060648101612d2356fea2646970667358221220c8414810c36dc329497f0bf640c364c1d29c54d48070ba851498e68ef0072a6864736f6c63430008190033a264697066735822122032f0f8300fd07f3d450f8e04567efaf833e1f6903e7062539755a2a77ccca51664736f6c63430008190033","opcodes":"PUSH1 0xA0 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x29 JUMPI ADDRESS PUSH1 0x80 MSTORE PUSH2 0x5928 SWAP1 DUP2 PUSH2 0x2E DUP3 CODECOPY PUSH1 0x80 MLOAD DUP2 DUP2 DUP2 PUSH2 0xB99 ADD MSTORE PUSH2 0xCB2 ADD MSTORE RETURN JUMPDEST PUSH0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 DUP1 CALLDATASIZE LT ISZERO PUSH2 0x14 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR SWAP3 DUP4 PUSH4 0x1D22CCD EQ PUSH2 0x16C8 JUMPI POP DUP3 PUSH4 0x2D5E94A7 EQ PUSH2 0xADD JUMPI DUP3 PUSH4 0x3069873B EQ PUSH2 0x1067 JUMPI DUP3 PUSH4 0x41D1DE97 EQ PUSH2 0xFFE JUMPI DUP3 PUSH4 0x4276B97B EQ PUSH2 0xF39 JUMPI DUP3 PUSH4 0x4F1EF286 EQ PUSH2 0xC0E JUMPI DUP3 PUSH4 0x52D1902D EQ PUSH2 0xB53 JUMPI DUP3 PUSH4 0x531AA03E EQ PUSH2 0xADD JUMPI DUP3 PUSH4 0x715018A6 EQ PUSH2 0xA21 JUMPI DUP3 PUSH4 0x77AACE1A EQ PUSH2 0x9CF JUMPI DUP3 PUSH4 0x89345EFB EQ PUSH2 0x983 JUMPI DUP3 PUSH4 0x8DA5CB5B EQ PUSH2 0x912 JUMPI DUP3 PUSH4 0x8F2248BC EQ PUSH2 0x793 JUMPI DUP3 PUSH4 0xAD3CB1CC EQ PUSH2 0x6A6 JUMPI DUP3 PUSH4 0xB4340E6A EQ PUSH2 0x4B6 JUMPI DUP3 PUSH4 0xB4AC6860 EQ PUSH2 0x47B JUMPI DUP3 PUSH4 0xC4D66DE8 EQ PUSH2 0x28A JUMPI POP DUP2 PUSH4 0xD88FF1F4 EQ PUSH2 0x1CB JUMPI POP DUP1 PUSH4 0xE9B31CFF EQ PUSH2 0x149 JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0xFC JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x145 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x145 JUMPI PUSH2 0x143 PUSH2 0x136 PUSH2 0x1716 JUMP JUMPDEST PUSH2 0x13E PUSH2 0x1AD3 JUMP JUMPDEST PUSH2 0x1A12 JUMP JUMPDEST STOP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x145 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x145 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x195 PUSH2 0x1716 JUMP JUMPDEST PUSH2 0x19D PUSH2 0x1AD3 JUMP JUMPDEST AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 PUSH1 0x3 SLOAD AND OR PUSH1 0x3 SSTORE PUSH0 DUP1 RETURN JUMPDEST CALLVALUE PUSH2 0x145 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x145 JUMPI DUP1 MLOAD PUSH0 DUP1 SLOAD DUP1 DUP4 MSTORE DUP2 DUP1 MSTORE PUSH1 0x20 DUP1 DUP5 ADD SWAP5 SWAP3 PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563 SWAP3 SWAP2 JUMPDEST DUP3 DUP3 LT PUSH2 0x25D JUMPI PUSH2 0x259 DUP7 DUP7 PUSH2 0x247 DUP3 DUP12 SUB DUP4 PUSH2 0x175C JUMP JUMPDEST MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x1842 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST DUP4 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 MSTORE SWAP6 DUP7 ADD SWAP6 PUSH1 0x1 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x22F JUMP JUMPDEST CALLVALUE PUSH2 0x145 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x145 JUMPI PUSH2 0x2C1 PUSH2 0x1716 JUMP JUMPDEST SWAP1 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP2 DUP3 SLOAD PUSH1 0xFF DUP2 DUP7 SHR AND ISZERO SWAP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND DUP1 ISZERO SWAP1 DUP2 PUSH2 0x473 JUMPI JUMPDEST PUSH1 0x1 EQ SWAP1 DUP2 PUSH2 0x469 JUMPI JUMPDEST ISZERO SWAP1 DUP2 PUSH2 0x460 JUMPI JUMPDEST POP PUSH2 0x439 JUMPI POP SWAP1 DUP2 DUP4 PUSH1 0x1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP6 AND OR DUP7 SSTORE PUSH2 0x404 JUMPI JUMPDEST POP PUSH2 0x368 PUSH2 0x1B43 JUMP JUMPDEST PUSH2 0x370 PUSH2 0x1B43 JUMP JUMPDEST PUSH2 0x378 PUSH2 0x1B43 JUMP JUMPDEST PUSH2 0x381 CALLER PUSH2 0x1A12 JUMP JUMPDEST AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 PUSH1 0x2 SLOAD AND OR PUSH1 0x2 SSTORE PUSH2 0x3B1 JUMPI STOP JUMPDEST PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP2 DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFF PUSH1 0x20 SWAP4 SLOAD AND SWAP1 SSTORE MLOAD PUSH1 0x1 DUP2 MSTORE LOG1 STOP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000 AND PUSH9 0x10000000000000001 OR DUP5 SSTORE DUP6 PUSH2 0x35F JUMP JUMPDEST DUP6 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST SWAP1 POP ISZERO DUP8 PUSH2 0x314 JUMP JUMPDEST ADDRESS EXTCODESIZE ISZERO SWAP2 POP PUSH2 0x30C JUMP JUMPDEST DUP6 SWAP2 POP PUSH2 0x302 JUMP JUMPDEST POP CALLVALUE PUSH2 0x145 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x145 JUMPI PUSH1 0x20 SWAP1 PUSH0 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x145 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x145 JUMPI PUSH2 0x4ED PUSH2 0x1716 JUMP JUMPDEST SWAP1 PUSH0 SLOAD SWAP2 PUSH2 0x4FA DUP4 PUSH2 0x19C3 JUMP JUMPDEST SWAP3 PUSH0 SWAP3 PUSH0 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP5 AND JUMPDEST DUP4 DUP4 LT PUSH2 0x56D JUMPI JUMPDEST POP POP POP POP PUSH2 0x52D DUP3 PUSH2 0x19C3 JUMP JUMPDEST SWAP3 PUSH0 JUMPDEST DUP4 DUP2 LT PUSH2 0x54C JUMPI DUP6 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 SWAP1 PUSH2 0x259 SWAP1 DUP3 ADD DUP9 PUSH2 0x1842 JUMP JUMPDEST DUP1 DUP4 PUSH2 0x55A PUSH1 0x1 SWAP4 DUP6 PUSH2 0x18C5 JUMP JUMPDEST MLOAD AND PUSH2 0x566 DUP3 DUP9 PUSH2 0x18C5 JUMP JUMPDEST MSTORE ADD PUSH2 0x530 JUMP JUMPDEST DUP5 PUSH2 0x57D DUP5 SWAP8 SWAP5 SWAP9 SWAP7 SWAP6 SWAP9 PUSH2 0x17E2 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND SWAP1 DUP9 MLOAD SWAP8 PUSH32 0x67E4AC2C00000000000000000000000000000000000000000000000000000000 DUP10 MSTORE PUSH0 DUP10 DUP6 DUP2 DUP7 GAS STATICCALL SWAP9 DUP10 ISZERO PUSH2 0x69C JUMPI PUSH0 SWAP10 PUSH2 0x678 JUMPI JUMPDEST POP PUSH0 JUMPDEST DUP10 MLOAD DUP2 LT ISZERO PUSH2 0x66A JUMPI DUP3 DUP8 PUSH2 0x5D9 DUP4 DUP14 PUSH2 0x18C5 JUMP JUMPDEST MLOAD AND EQ PUSH2 0x5E8 JUMPI PUSH1 0x1 ADD PUSH2 0x5C4 JUMP JUMPDEST POP SWAP4 SWAP2 SWAP1 SWAP5 SWAP6 SWAP8 POP PUSH2 0x5FA DUP3 DUP10 PUSH2 0x18C5 JUMP JUMPDEST MSTORE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x63E JUMPI PUSH1 0x1 ADD SWAP5 JUMPDEST DUP7 MLOAD DUP7 EQ PUSH2 0x639 JUMPI PUSH1 0x1 ADD SWAP2 SWAP3 PUSH2 0x518 JUMP JUMPDEST PUSH2 0x520 JUMP JUMPDEST PUSH1 0x11 DUP3 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP4 SWAP7 SWAP2 POP SWAP4 SWAP5 SWAP7 POP PUSH2 0x627 JUMP JUMPDEST PUSH2 0x695 SWAP2 SWAP10 POP RETURNDATASIZE DUP1 PUSH0 DUP4 RETURNDATACOPY PUSH2 0x68D DUP2 DUP4 PUSH2 0x175C JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x18D9 JUMP JUMPDEST SWAP8 DUP11 PUSH2 0x5C1 JUMP JUMPDEST DUP11 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 CALLVALUE PUSH2 0x145 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x145 JUMPI DUP1 MLOAD SWAP2 DUP2 DUP4 ADD SWAP1 DUP4 DUP3 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT OR PUSH2 0x767 JUMPI POP DUP2 MSTORE PUSH1 0x5 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 PUSH32 0x352E302E30000000000000000000000000000000000000000000000000000000 DUP4 MSTORE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP4 MLOAD SWAP5 DUP6 SWAP4 PUSH1 0x20 DUP6 MSTORE MLOAD DUP1 SWAP2 DUP2 PUSH1 0x20 DUP8 ADD MSTORE DUP7 DUP7 ADD MCOPY PUSH0 DUP6 DUP3 DUP7 ADD ADD MSTORE ADD AND DUP2 ADD SUB ADD SWAP1 RETURN JUMPDEST PUSH1 0x41 SWAP1 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP1 CALLVALUE PUSH2 0x145 JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x145 JUMPI PUSH2 0x7CA PUSH2 0x1716 JUMP JUMPDEST SWAP2 PUSH1 0x24 CALLDATALOAD SWAP3 PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 DUP2 DUP6 AND DUP1 SWAP6 SUB PUSH2 0x145 JUMPI PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP3 DUP4 SLOAD SWAP3 DUP7 PUSH1 0xFF DUP6 DUP9 SHR AND SWAP2 DUP3 ISZERO PUSH2 0x905 JUMPI JUMPDEST POP POP PUSH2 0x8DE JUMPI PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x20 DUP8 DUP8 DUP8 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFF PUSH9 0x10000000000000000 DUP5 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP13 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 PUSH1 0x2 SLOAD AND OR PUSH1 0x2 SSTORE AND OR OR AND SWAP1 SSTORE MLOAD SWAP1 DUP2 MSTORE LOG1 STOP JUMPDEST DUP5 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP6 AND LT ISZERO SWAP1 POP DUP7 DUP9 PUSH2 0x817 JUMP JUMPDEST POP CALLVALUE PUSH2 0x145 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x145 JUMPI PUSH1 0x20 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD AND SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x145 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x145 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x9C6 PUSH2 0x9C1 PUSH2 0x1716 JUMP JUMPDEST PUSH2 0x1970 JUMP JUMPDEST SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x145 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x145 JUMPI PUSH1 0x20 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x3 SLOAD AND SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x145 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x145 JUMPI PUSH2 0xA57 PUSH2 0x1AD3 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 DUP1 SLOAD SWAP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP3 AND SWAP1 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 STOP JUMPDEST POP CALLVALUE PUSH2 0x145 JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x145 JUMPI PUSH1 0x20 SWAP1 PUSH2 0xB17 PUSH2 0x1716 JUMP JUMPDEST PUSH2 0xB1F PUSH2 0x1739 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP3 AND PUSH0 MSTORE PUSH1 0x1 DUP5 MSTORE DUP2 DUP4 PUSH0 KECCAK256 SWAP2 AND PUSH0 MSTORE DUP4 MSTORE DUP2 PUSH0 KECCAK256 SLOAD AND SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 CALLVALUE PUSH2 0x145 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x145 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND ADDRESS SUB PUSH2 0xBE8 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP2 MSTORE RETURN JUMPDEST MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x145 JUMPI PUSH2 0xC3F PUSH2 0x1716 JUMP JUMPDEST PUSH1 0x24 SWAP3 DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x145 JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x145 JUMPI DUP1 DUP5 ADD CALLDATALOAD PUSH2 0xC6B DUP2 PUSH2 0x188B JUMP JUMPDEST SWAP4 PUSH2 0xC78 DUP5 MLOAD SWAP6 DUP7 PUSH2 0x175C JUMP JUMPDEST DUP2 DUP6 MSTORE PUSH1 0x20 SWAP2 DUP3 DUP7 ADD SWAP4 CALLDATASIZE DUP10 DUP4 DUP4 ADD ADD GT PUSH2 0x145 JUMPI DUP2 PUSH0 SWAP3 DUP11 DUP7 SWAP4 ADD DUP8 CALLDATACOPY DUP8 ADD ADD MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 PUSH32 0x0 AND DUP1 ADDRESS EQ SWAP1 DUP2 ISZERO PUSH2 0xF0B JUMPI JUMPDEST POP PUSH2 0xEE3 JUMPI PUSH2 0xCEA PUSH2 0x1AD3 JUMP JUMPDEST DUP2 AND SWAP5 DUP5 MLOAD PUSH32 0x52D1902D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE DUP4 DUP2 DUP10 DUP2 DUP11 GAS STATICCALL PUSH0 SWAP2 DUP2 PUSH2 0xEB4 JUMPI JUMPDEST POP PUSH2 0xD55 JUMPI POP POP POP POP POP MLOAD SWAP2 PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 DUP8 DUP8 DUP8 SWAP5 SWAP4 DUP12 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SWAP2 DUP3 DUP2 SUB PUSH2 0xE87 JUMPI POP DUP6 EXTCODESIZE ISZERO PUSH2 0xE5A JUMPI POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP3 SLOAD AND OR SWAP1 SSTORE DUP5 MLOAD SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH0 DUP1 LOG2 DUP3 MLOAD ISZERO PUSH2 0xE27 JUMPI POP POP PUSH0 PUSH2 0x143 SWAP6 DUP2 SWAP3 MLOAD SWAP1 DUP5 GAS DELEGATECALL SWAP2 RETURNDATASIZE ISZERO PUSH2 0xE1D JUMPI RETURNDATASIZE PUSH2 0xE0F PUSH2 0xE06 DUP3 PUSH2 0x188B JUMP JUMPDEST SWAP3 MLOAD SWAP3 DUP4 PUSH2 0x175C JUMP JUMPDEST DUP2 MSTORE PUSH0 DUP2 SWAP5 RETURNDATASIZE SWAP3 ADD RETURNDATACOPY PUSH2 0x1B9C JUMP JUMPDEST POP PUSH1 0x60 SWAP3 POP PUSH2 0x1B9C JUMP JUMPDEST SWAP5 POP SWAP5 POP POP POP POP CALLVALUE PUSH2 0xE35 JUMPI STOP JUMPDEST PUSH32 0xB398979F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP4 DUP4 DUP9 MLOAD SWAP2 PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST DUP5 SWAP1 DUP9 MLOAD SWAP2 PUSH32 0xAA1D49A400000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 SWAP2 POP DUP5 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0xEDC JUMPI JUMPDEST PUSH2 0xECC DUP2 DUP4 PUSH2 0x175C JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x145 JUMPI MLOAD SWAP1 DUP11 PUSH2 0xD21 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0xEC2 JUMP JUMPDEST DUP7 DUP6 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST SWAP1 POP DUP2 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD AND EQ ISZERO DUP10 PUSH2 0xCDD JUMP JUMPDEST CALLVALUE PUSH2 0x145 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x145 JUMPI PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0xF86 PUSH2 0x1716 JUMP JUMPDEST AND DUP4 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH32 0x67E4AC2C00000000000000000000000000000000000000000000000000000000 DUP3 MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xFF4 JUMPI SWAP2 PUSH2 0x259 SWAP3 PUSH0 SWAP3 PUSH2 0xFD8 JUMPI JUMPDEST POP MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x1842 JUMP JUMPDEST PUSH2 0xFED SWAP2 SWAP3 POP RETURNDATASIZE DUP1 PUSH0 DUP4 RETURNDATACOPY PUSH2 0x68D DUP2 DUP4 PUSH2 0x175C JUMP JUMPDEST SWAP1 DUP4 PUSH2 0xFC5 JUMP JUMPDEST DUP3 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x145 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x145 JUMPI CALLDATALOAD SWAP1 PUSH0 SLOAD DUP3 LT ISZERO PUSH2 0x145 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x1058 PUSH1 0x20 SWAP4 PUSH2 0x17E2 JUMP JUMPDEST SWAP3 SWAP1 SLOAD SWAP1 MLOAD SWAP3 PUSH1 0x3 SHL SHR AND DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x145 JUMPI PUSH1 0x60 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x145 JUMPI PUSH8 0xFFFFFFFFFFFFFFFF SWAP2 DUP2 CALLDATALOAD DUP4 DUP2 GT PUSH2 0x145 JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x145 JUMPI DUP1 DUP4 ADD CALLDATALOAD SWAP4 PUSH1 0x24 PUSH2 0x10C4 DUP7 PUSH2 0x17CA JUMP JUMPDEST SWAP3 PUSH2 0x10D1 DUP6 MLOAD SWAP5 DUP6 PUSH2 0x175C JUMP JUMPDEST DUP7 DUP5 MSTORE PUSH1 0x20 SWAP7 DUP3 DUP9 DUP7 ADD SWAP2 PUSH1 0x5 SHL DUP4 ADD ADD SWAP2 CALLDATASIZE DUP4 GT PUSH2 0x145 JUMPI DUP4 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x169C JUMPI POP POP POP DUP1 CALLDATALOAD DUP3 DUP2 GT PUSH2 0x145 JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x145 JUMPI DUP1 DUP7 ADD CALLDATALOAD SWAP1 PUSH2 0x111A DUP3 PUSH2 0x17CA JUMP JUMPDEST SWAP1 PUSH2 0x1127 DUP8 MLOAD SWAP3 DUP4 PUSH2 0x175C JUMP JUMPDEST DUP3 DUP3 MSTORE DUP9 DUP3 ADD SWAP3 PUSH1 0x5 SHL DUP2 ADD DUP5 ADD SWAP1 DUP4 CALLDATASIZE DUP4 GT PUSH2 0x145 JUMPI DUP6 DUP12 SWAP3 ADD SWAP1 JUMPDEST DUP4 DUP3 LT PUSH2 0x168D JUMPI POP POP POP POP PUSH1 0x44 SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP5 DUP6 PUSH1 0x3 SLOAD AND SWAP1 DUP2 ISZERO PUSH2 0x1632 JUMPI PUSH1 0x1 SWAP5 DUP6 DUP10 MLOAD GT ISZERO PUSH2 0x15D8 JUMPI DUP9 MLOAD DUP6 MLOAD SUB PUSH2 0x1557 JUMPI PUSH0 DUP7 JUMPDEST PUSH2 0x141A JUMPI JUMPDEST POP POP DUP7 PUSH1 0x2 SLOAD AND SWAP4 DUP10 MLOAD SWAP5 PUSH2 0x3CB6 DUP1 DUP8 ADD SWAP4 DUP8 DUP6 LT SWAP1 DUP6 GT OR PUSH2 0x13EF JUMPI SWAP1 DUP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0x1C3D DUP8 CODECOPY DUP3 MSTORE PUSH1 0xA0 DUP14 DUP4 ADD MSTORE DUP13 PUSH2 0x11D0 PUSH1 0xA0 DUP5 ADD DUP13 PUSH2 0x1842 JUMP JUMPDEST DUP4 DUP2 SUB DUP14 DUP6 ADD MSTORE SWAP2 MLOAD DUP1 DUP4 MSTORE SWAP2 ADD SWAP4 SWAP1 PUSH0 DUP9 DUP16 JUMPDEST DUP4 DUP4 LT PUSH2 0x13D8 JUMPI POP POP POP PUSH1 0x44 CALLDATALOAD PUSH1 0x60 DUP5 ADD MSTORE POP POP PUSH1 0x80 ADD MSTORE SUB SWAP1 PUSH0 CREATE DUP1 ISZERO PUSH2 0x13CE JUMPI DUP4 AND SWAP6 PUSH0 SLOAD PUSH9 0x10000000000000000 DUP2 LT ISZERO PUSH2 0x13A3 JUMPI SWAP1 PUSH2 0x1230 DUP3 DUP5 DUP11 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 ADD PUSH0 SSTORE PUSH2 0x17E2 JUMP JUMPDEST DUP2 SLOAD SWAP1 PUSH1 0x3 SHL SWAP1 DUP7 DUP10 DUP4 SHL SWAP3 SHL NOT AND OR SWAP1 SSTORE DUP2 PUSH0 SWAP1 JUMPDEST PUSH2 0x1298 JUMPI JUMPDEST POP POP POP POP PUSH32 0x93DE7D9DE9F3E05BA87A0170FCBB71AF623439CAF5E5079587B9D38C5DA9B0D1 SWAP2 PUSH2 0x128A SWAP2 PUSH1 0x2 SLOAD AND DUP6 MLOAD SWAP3 DUP4 SWAP3 DUP8 DUP5 MSTORE DUP8 DUP5 ADD SWAP1 PUSH2 0x1842 JUMP JUMPDEST SWAP1 DUP9 DUP4 ADD MSTORE SUB SWAP1 LOG2 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 DUP7 MLOAD DUP3 LT ISZERO PUSH2 0x139B JUMPI POP DUP3 DUP2 ADD DUP1 DUP3 GT PUSH2 0x1370 JUMPI DUP4 SWAP3 SWAP2 SWAP1 DUP4 JUMPDEST PUSH2 0x12CA JUMPI JUMPDEST POP DUP3 ADD DUP9 SWAP7 SWAP6 SWAP5 SWAP4 PUSH2 0x1246 JUMP JUMPDEST DUP8 SWAP4 SWAP2 SWAP3 SWAP4 MLOAD DUP2 LT ISZERO PUSH2 0x1367 JUMPI DUP2 SWAP1 DUP8 PUSH2 0x12E4 DUP6 DUP12 PUSH2 0x18C5 JUMP JUMPDEST MLOAD AND PUSH0 MSTORE DUP2 DUP13 MSTORE DUP10 PUSH0 KECCAK256 DUP9 PUSH2 0x12F9 DUP4 DUP13 PUSH2 0x18C5 JUMP JUMPDEST MLOAD AND PUSH0 MSTORE DUP13 MSTORE DUP10 PUSH0 KECCAK256 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 SWAP1 DUP13 DUP3 DUP3 SLOAD AND OR SWAP1 SSTORE DUP9 PUSH2 0x1337 DUP4 DUP13 PUSH2 0x18C5 JUMP JUMPDEST MLOAD AND PUSH0 MSTORE DUP3 DUP14 MSTORE DUP11 PUSH0 KECCAK256 DUP10 PUSH2 0x134C DUP8 DUP14 PUSH2 0x18C5 JUMP JUMPDEST MLOAD AND PUSH0 MSTORE DUP14 MSTORE DUP12 DUP12 PUSH0 KECCAK256 SWAP2 DUP3 SLOAD AND OR SWAP1 SSTORE ADD DUP2 SWAP4 SWAP3 SWAP2 PUSH2 0x12B8 JUMP JUMPDEST SWAP3 SWAP2 SWAP1 SWAP3 PUSH2 0x12BD JUMP JUMPDEST DUP5 PUSH1 0x11 DUP5 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE MSTORE PUSH0 REVERT JUMPDEST SWAP6 SWAP5 SWAP4 PUSH2 0x124B JUMP JUMPDEST DUP4 PUSH1 0x41 DUP4 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE MSTORE PUSH0 REVERT JUMPDEST DUP6 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP5 MLOAD DUP9 MSTORE DUP10 SWAP9 POP SWAP7 DUP8 ADD SWAP7 SWAP1 SWAP4 ADD SWAP3 ADD DUP9 DUP16 PUSH2 0x11E4 JUMP JUMPDEST DUP9 PUSH1 0x41 DUP15 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE MSTORE PUSH0 REVERT JUMPDEST DUP10 MLOAD DUP2 LT ISZERO PUSH2 0x1552 JUMPI DUP7 DUP2 ADD DUP1 DUP3 GT PUSH2 0x1527 JUMPI DUP8 SWAP3 SWAP2 SWAP1 DUP12 DUP16 DUP13 DUP16 DUP8 JUMPDEST PUSH2 0x144A JUMPI JUMPDEST POP POP POP POP POP DUP3 ADD SWAP1 SWAP2 PUSH2 0x118C JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 DUP5 MLOAD DUP7 LT ISZERO PUSH2 0x151A JUMPI POP DUP5 PUSH2 0x147A SWAP2 DUP4 PUSH2 0x146B DUP10 DUP9 PUSH2 0x18C5 JUMP JUMPDEST MLOAD AND PUSH0 MSTORE DUP14 DUP6 MSTORE PUSH0 KECCAK256 SWAP5 PUSH2 0x18C5 JUMP JUMPDEST MLOAD AND PUSH0 MSTORE MSTORE DUP10 DUP13 PUSH0 KECCAK256 SLOAD AND PUSH2 0x1499 JUMPI DUP8 SWAP3 SWAP2 SWAP1 DUP4 ADD DUP12 DUP16 DUP13 DUP16 DUP8 PUSH2 0x1437 JUMP JUMPDEST DUP12 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE DUP1 DUP15 ADD DUP16 SWAP1 MSTORE PUSH1 0x21 DUP2 DUP12 ADD MSTORE PUSH32 0x506F6F6C20616C72656164792065786973747320666F72207468697320706169 DUP2 DUP6 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP7 SWAP6 SWAP5 POP SWAP1 DUP4 SWAP3 SWAP2 PUSH2 0x143C JUMP JUMPDEST DUP9 PUSH1 0x11 DUP15 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE MSTORE PUSH0 REVERT JUMPDEST PUSH2 0x1191 JUMP JUMPDEST PUSH1 0x84 DUP12 PUSH1 0x22 DUP10 DUP16 DUP15 MLOAD SWAP4 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP6 MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x41737365747320616E642077656967687473206C656E677468206D69736D6174 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6368000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 DUP12 DUP14 DUP10 DUP2 DUP15 MLOAD SWAP4 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP6 MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x4174206C656173742074776F2061737365747320617265207265717569726564 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 DUP11 PUSH1 0x11 DUP9 DUP15 DUP14 MLOAD SWAP4 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP6 MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x506572697068657279206E6F7420736574000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE SWAP1 DUP3 ADD SWAP1 DUP3 ADD PUSH2 0x1144 JUMP JUMPDEST DUP2 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 SUB PUSH2 0x145 JUMPI DUP2 MSTORE SWAP1 DUP9 ADD SWAP1 DUP9 ADD PUSH2 0x10EE JUMP JUMPDEST CALLVALUE PUSH2 0x145 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x145 JUMPI PUSH1 0x20 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x2 SLOAD AND DUP2 MSTORE RETURN JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x145 JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x145 JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x1F PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x179D JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x179D JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH0 SLOAD DUP2 LT ISZERO PUSH2 0x1815 JUMPI PUSH0 DUP1 MSTORE PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563 ADD SWAP1 PUSH0 SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP1 DUP2 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP1 SWAP4 ADD SWAP4 ADD SWAP2 PUSH0 JUMPDEST DUP3 DUP2 LT PUSH2 0x1861 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x1853 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x179D JUMPI PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x1815 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 DUP2 DUP5 SUB SLT PUSH2 0x145 JUMPI DUP1 MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x145 JUMPI ADD SWAP2 DUP1 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x145 JUMPI DUP3 MLOAD PUSH2 0x190F DUP2 PUSH2 0x17CA JUMP JUMPDEST SWAP4 PUSH2 0x191D PUSH1 0x40 MLOAD SWAP6 DUP7 PUSH2 0x175C JUMP JUMPDEST DUP2 DUP6 MSTORE DUP4 DUP1 DUP7 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x145 JUMPI DUP4 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x1944 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP2 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 SUB PUSH2 0x145 JUMPI DUP2 MSTORE SWAP1 DUP4 ADD SWAP1 DUP4 ADD PUSH2 0x1936 JUMP JUMPDEST PUSH0 SWAP1 PUSH0 SLOAD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH2 0x1984 JUMPI POP POP POP PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x198D DUP2 PUSH2 0x17E2 JUMP JUMPDEST SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SLOAD DUP2 DUP6 AND SWAP3 PUSH1 0x3 SHL SHR AND EQ PUSH2 0x19BB JUMPI PUSH1 0x1 ADD PUSH2 0x1976 JUMP JUMPDEST POP POP POP PUSH1 0x1 SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x19CD DUP3 PUSH2 0x17CA JUMP JUMPDEST PUSH2 0x19DA PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x175C JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH2 0x1A08 DUP3 SWAP5 PUSH2 0x17CA JUMP JUMPDEST ADD SWAP1 PUSH1 0x20 CALLDATASIZE SWAP2 ADD CALLDATACOPY JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP2 AND SWAP1 DUP2 ISZERO PUSH2 0x1AA3 JUMPI PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 DUP1 SLOAD SWAP1 DUP4 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP4 AND OR SWAP1 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH0 DUP1 LOG3 JUMP JUMPDEST PUSH1 0x24 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD AND CALLER SUB PUSH2 0x1B13 JUMPI JUMP JUMPDEST PUSH1 0x24 PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0xFF PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SLOAD PUSH1 0x40 SHR AND ISZERO PUSH2 0x1B72 JUMPI JUMP JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0xD7E6BCF800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST SWAP1 PUSH2 0x1BDB JUMPI POP DUP1 MLOAD ISZERO PUSH2 0x1BB1 JUMPI DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP2 MLOAD ISZERO DUP1 PUSH2 0x1C33 JUMPI JUMPDEST PUSH2 0x1BEC JUMPI POP SWAP1 JUMP JUMPDEST PUSH1 0x24 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x40 MLOAD SWAP2 PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP4 MSTORE AND PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST POP DUP1 EXTCODESIZE ISZERO PUSH2 0x1BE4 JUMP INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x42F JUMPI PUSH2 0x3CB6 DUP1 CODESIZE SUB DUP1 SWAP2 PUSH2 0x1C DUP3 DUP6 PUSH2 0x8F4 JUMP JUMPDEST DUP4 CODECOPY DUP2 ADD PUSH1 0xA0 DUP3 DUP3 SUB SLT PUSH2 0x42F JUMPI PUSH2 0x33 DUP3 PUSH2 0x917 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MLOAD SWAP1 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x42F JUMPI DUP4 ADD SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x42F JUMPI DUP3 MLOAD SWAP3 PUSH2 0x63 DUP5 PUSH2 0x92B JUMP JUMPDEST SWAP4 PUSH2 0x71 PUSH1 0x40 MLOAD SWAP6 DUP7 PUSH2 0x8F4 JUMP JUMPDEST DUP1 DUP6 MSTORE PUSH1 0x20 DUP1 DUP7 ADD SWAP2 PUSH1 0x5 SHL DUP4 ADD ADD SWAP2 DUP5 DUP4 GT PUSH2 0x42F JUMPI PUSH1 0x20 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x8C1 JUMPI POP POP POP PUSH1 0x40 DUP5 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x42F JUMPI DUP5 ADD SWAP2 DUP1 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x42F JUMPI DUP3 MLOAD PUSH2 0xC3 DUP2 PUSH2 0x92B JUMP JUMPDEST SWAP4 PUSH2 0xD1 PUSH1 0x40 MLOAD SWAP6 DUP7 PUSH2 0x8F4 JUMP JUMPDEST DUP2 DUP6 MSTORE PUSH1 0x20 DUP1 DUP7 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x42F JUMPI PUSH1 0x20 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x8B1 JUMPI POP POP POP PUSH2 0x107 PUSH1 0x80 PUSH1 0x60 DUP7 ADD MLOAD SWAP6 ADD PUSH2 0x917 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x113 DUP2 PUSH2 0x8D9 JUMP JUMPDEST PUSH1 0x9 DUP2 MSTORE PUSH9 0x42616C756E69204C5 PUSH1 0xBC SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP1 PUSH2 0x136 DUP3 PUSH2 0x8D9 JUMP JUMPDEST PUSH1 0x9 DUP3 MSTORE PUSH9 0x42414C554E492D4C5 PUSH1 0xBC SHL PUSH1 0x20 DUP4 ADD MSTORE DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x48C JUMPI PUSH1 0x3 SLOAD SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x8A7 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x788 JUMPI DUP2 PUSH1 0x1F DUP5 SWAP4 GT PUSH2 0x839 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x7B1 JUMPI PUSH0 SWAP3 PUSH2 0x7A6 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x3 SSTORE JUMPDEST DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x48C JUMPI PUSH1 0x4 SLOAD SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x79C JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x788 JUMPI DUP2 PUSH1 0x1F DUP5 SWAP4 GT PUSH2 0x71A JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x696 JUMPI PUSH0 SWAP3 PUSH2 0x68B JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x4 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x5 SSTORE PUSH1 0xA DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x6 DUP1 SLOAD SWAP1 SWAP2 AND SWAP2 DUP4 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH8 0xDE0B6B3A7640000 PUSH1 0x9 SSTORE DUP3 MLOAD DUP3 MLOAD SUB PUSH2 0x63B JUMPI PUSH0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x51B JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x276 DUP3 DUP7 PUSH2 0x942 JUMP JUMPDEST MLOAD AND ISZERO PUSH2 0x4D6 JUMPI PUSH2 0x287 DUP2 DUP5 PUSH2 0x942 JUMP JUMPDEST MLOAD ISZERO PUSH2 0x4A0 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x29F DUP3 DUP7 PUSH2 0x942 JUMP JUMPDEST MLOAD AND PUSH2 0x2AB DUP3 DUP6 PUSH2 0x942 JUMP JUMPDEST MLOAD PUSH1 0x40 DUP1 MLOAD SWAP3 SWAP1 DUP4 ADD DUP1 DUP5 GT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 SWAP2 GT OR PUSH2 0x48C JUMPI PUSH1 0x40 DUP4 ADD PUSH1 0x40 MSTORE DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x7 SLOAD PUSH9 0x10000000000000000 DUP2 LT ISZERO PUSH2 0x48C JUMPI PUSH1 0x1 DUP2 ADD DUP1 PUSH1 0x7 SSTORE DUP2 LT ISZERO PUSH2 0x478 JUMPI PUSH1 0x7 PUSH0 MSTORE DUP2 MLOAD PUSH32 0xA66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C688 PUSH1 0x1 SWAP3 SWAP1 SWAP3 SHL SWAP2 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE PUSH1 0x20 SWAP1 SWAP3 ADD MLOAD PUSH32 0xA66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C689 SWAP1 SWAP2 ADD SSTORE PUSH2 0x379 DUP3 DUP7 PUSH2 0x942 JUMP JUMPDEST MLOAD AND PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x6 SLOAD AND PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE DUP2 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x44 DUP2 DUP7 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x43B JUMPI PUSH0 SWAP2 PUSH2 0x446 JUMPI JUMPDEST POP ISZERO PUSH2 0x3C7 JUMPI JUMPDEST POP POP PUSH1 0x1 ADD PUSH2 0x25B JUMP JUMPDEST PUSH0 SWAP2 PUSH1 0x44 PUSH1 0x20 SWAP3 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP4 DUP5 SWAP3 PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE DUP2 NOT PUSH1 0x24 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x43B JUMPI PUSH2 0x3FF JUMPI JUMPDEST DUP1 PUSH2 0x3BD JUMP JUMPDEST PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x433 JUMPI JUMPDEST DUP2 PUSH2 0x418 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x8F4 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x42F JUMPI MLOAD DUP1 ISZERO ISZERO SUB PUSH2 0x42F JUMPI PUSH0 PUSH2 0x3F9 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x40B JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x470 JUMPI JUMPDEST DUP2 PUSH2 0x461 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x8F4 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x42F JUMPI MLOAD PUSH0 PUSH2 0x3B6 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x454 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x125B9D985B1A59081DD95A59DA1D PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420617373657420616464726573730000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH1 0x8 DUP5 SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH4 0xBC06E81D PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x4 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x43B JUMPI PUSH0 SWAP2 PUSH2 0x601 JUMPI JUMPDEST POP PUSH1 0xB DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH0 SWAP1 DUP2 JUMPDEST DUP2 MLOAD DUP4 LT ISZERO PUSH2 0x5B3 JUMPI PUSH2 0x58A DUP4 DUP4 PUSH2 0x942 JUMP JUMPDEST MLOAD DUP2 ADD DUP1 SWAP2 GT PUSH2 0x59F JUMPI PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 PUSH2 0x577 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x2710 SUB PUSH2 0x5CA JUMPI PUSH1 0x40 MLOAD PUSH2 0x335F SWAP1 DUP2 PUSH2 0x957 DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x496E76616C69642077656967687473 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x633 JUMPI JUMPDEST DUP2 PUSH2 0x61C PUSH1 0x20 SWAP4 DUP4 PUSH2 0x8F4 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x42F JUMPI PUSH2 0x62D SWAP1 PUSH2 0x917 JUMP JUMPDEST DUP3 PUSH2 0x552 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x60F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41737365747320616E642077656967687473206C656E677468206D69736D6174 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0xC6D PUSH1 0xF3 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ADD MLOAD SWAP1 POP PUSH0 DUP1 PUSH2 0x1FB JUMP JUMPDEST PUSH1 0x4 PUSH0 SWAP1 DUP2 MSTORE PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B SWAP4 POP PUSH1 0x1F NOT DUP6 AND SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x702 JUMPI POP SWAP1 DUP5 PUSH1 0x1 SWAP6 SWAP5 SWAP4 SWAP3 LT PUSH2 0x6EA JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x4 SSTORE PUSH2 0x210 JUMP JUMPDEST ADD MLOAD PUSH0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE PUSH0 DUP1 DUP1 PUSH2 0x6DC JUMP JUMPDEST SWAP3 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH2 0x6C6 JUMP JUMPDEST PUSH1 0x4 PUSH0 MSTORE SWAP1 SWAP2 POP PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP6 LT PUSH2 0x77E JUMPI JUMPDEST SWAP1 PUSH1 0x1F DUP6 SWAP5 SWAP4 SWAP3 ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x770 JUMPI POP PUSH2 0x1E5 JUMP JUMPDEST PUSH0 DUP2 SSTORE DUP5 SWAP4 POP PUSH1 0x1 ADD PUSH2 0x763 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x755 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x1D1 JUMP JUMPDEST ADD MLOAD SWAP1 POP PUSH0 DUP1 PUSH2 0x199 JUMP JUMPDEST PUSH1 0x3 PUSH0 SWAP1 DUP2 MSTORE SWAP4 POP PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B SWAP2 SWAP1 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0x81E JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x806 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x3 SSTORE PUSH2 0x1AE JUMP JUMPDEST ADD MLOAD PUSH0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE PUSH0 DUP1 DUP1 PUSH2 0x7F8 JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x7DD JUMP JUMPDEST PUSH1 0x3 PUSH0 MSTORE SWAP1 SWAP2 POP PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP6 LT PUSH2 0x89D JUMPI JUMPDEST SWAP1 PUSH1 0x1F DUP6 SWAP5 SWAP4 SWAP3 ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x88F JUMPI POP PUSH2 0x183 JUMP JUMPDEST PUSH0 DUP2 SSTORE DUP5 SWAP4 POP PUSH1 0x1 ADD PUSH2 0x882 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x874 JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x16F JUMP JUMPDEST DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0xEC JUMP JUMPDEST PUSH1 0x20 DUP1 SWAP2 PUSH2 0x8CE DUP5 PUSH2 0x917 JUMP JUMPDEST DUP2 MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0x8D JUMP JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x48C JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT SWAP1 DUP3 LT OR PUSH2 0x48C JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x42F JUMPI JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x48C JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x478 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP INVALID PUSH1 0xA0 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 SWAP2 DUP3 CALLDATASIZE LT ISZERO PUSH2 0x15 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 SWAP3 PUSH0 CALLDATALOAD PUSH1 0xE0 SHR SWAP2 DUP3 PUSH4 0x1D22CCD EQ PUSH2 0x281E JUMPI POP DUP2 PUSH4 0x6FDDE03 EQ PUSH2 0x26D5 JUMPI DUP2 PUSH4 0x723C999 EQ PUSH2 0x236A JUMPI DUP2 PUSH4 0x902F1AC EQ PUSH2 0x231C JUMPI DUP2 PUSH4 0x95EA7B3 EQ PUSH2 0x2217 JUMPI DUP2 PUSH4 0x18160DDD EQ PUSH2 0x21DB JUMPI DUP2 PUSH4 0x1A686502 EQ PUSH2 0x2199 JUMPI DUP2 PUSH4 0x22ACB867 EQ PUSH2 0x211E JUMPI DUP2 PUSH4 0x23B872DD EQ PUSH2 0x1FC9 JUMPI DUP2 PUSH4 0x313CE567 EQ PUSH2 0x1F90 JUMPI DUP2 PUSH4 0x36BF6E39 EQ PUSH2 0x1F3E JUMPI DUP2 PUSH4 0x3DFF5B7F EQ PUSH2 0x1E54 JUMPI DUP2 PUSH4 0x4AA06652 EQ PUSH2 0x1E39 JUMPI DUP2 PUSH4 0x5568081A EQ PUSH2 0x1A25 JUMPI DUP2 PUSH4 0x67A6C440 EQ PUSH2 0x19EA JUMPI DUP2 PUSH4 0x67E4AC2C EQ PUSH2 0x195B JUMPI DUP2 PUSH4 0x6E81221C EQ PUSH2 0x1576 JUMPI DUP2 PUSH4 0x70A08231 EQ PUSH2 0x1515 JUMPI DUP2 PUSH4 0x77AACE1A EQ PUSH2 0x14C2 JUMPI DUP2 PUSH4 0x7E04795A EQ PUSH2 0x13FD JUMPI DUP2 PUSH4 0x7FEC8D38 EQ PUSH2 0x13C0 JUMPI DUP2 PUSH4 0x89AB3532 EQ PUSH2 0x1336 JUMPI DUP2 PUSH4 0x89AFCB44 EQ PUSH2 0xC17 JUMPI DUP2 PUSH4 0x8A77C8DC EQ PUSH2 0xBD3 JUMPI DUP2 PUSH4 0x95D89B41 EQ PUSH2 0xA7D JUMPI DUP2 PUSH4 0xA9059CBB EQ PUSH2 0xA2E JUMPI DUP2 PUSH4 0xB2B55D70 EQ PUSH2 0x802 JUMPI DUP2 PUSH4 0xC2EE3A08 EQ PUSH2 0x9F1 JUMPI DUP2 PUSH4 0xCDF456E1 EQ PUSH2 0x99E JUMPI DUP2 PUSH4 0xCF8FA764 EQ PUSH2 0x8E2 JUMPI DUP2 PUSH4 0xD14EF46D EQ PUSH2 0x864 JUMPI DUP2 PUSH4 0xD66BD524 EQ PUSH2 0x802 JUMPI DUP2 PUSH4 0xDD62ED3E EQ PUSH2 0x78D JUMPI DUP2 PUSH4 0xDE836EBD EQ PUSH2 0x1E7 JUMPI POP PUSH4 0xE73FAA2D EQ PUSH2 0x1A3 JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1E3 JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1E3 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x1DC PUSH2 0x3040 JUMP JUMPDEST SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST SWAP1 POP DUP3 CALLVALUE PUSH2 0x78A JUMPI DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x78A JUMPI PUSH2 0x220 PUSH2 0x28B4 JUMP JUMPDEST SWAP2 PUSH1 0x24 SWAP3 DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x786 JUMPI PUSH2 0x242 SWAP1 CALLDATASIZE SWAP1 DUP5 ADD PUSH2 0x2A27 JUMP JUMPDEST SWAP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 PUSH2 0x268 DUP5 PUSH1 0xA SLOAD AND CALLER EQ PUSH2 0x2C59 JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP6 DUP3 PUSH2 0x275 PUSH2 0x2BFD JUMP JUMPDEST SWAP8 PUSH1 0x7 SWAP9 PUSH1 0x7 SLOAD SWAP1 DUP1 MLOAD DUP3 SUB PUSH2 0x729 JUMPI DUP2 ISZERO PUSH2 0x6CC JUMPI SWAP1 DUP7 SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0x541 JUMPI POP POP POP DUP2 ISZERO PUSH2 0x4BF JUMPI DUP1 PUSH2 0x414 JUMPI POP SWAP4 JUMPDEST DUP5 ISZERO PUSH2 0x3B8 JUMPI SWAP1 DUP5 PUSH2 0x2E1 DUP11 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 CALLER DUP7 MSTORE PUSH1 0x20 SWAP12 DUP7 DUP14 SWAP8 DUP9 MSTORE DUP1 DUP11 DUP4 DUP3 KECCAK256 SLOAD SWAP5 PUSH2 0x2D4 DUP9 DUP3 PUSH2 0x3118 JUMP JUMPDEST AND SWAP9 DUP10 DUP3 MSTORE MSTORE KECCAK256 SLOAD PUSH2 0x2E66 JUMP JUMPDEST SUB PUSH2 0x35D JUMPI POP POP PUSH0 JUMPDEST DUP7 SLOAD DUP2 LT ISZERO PUSH2 0x32B JUMPI DUP1 DUP5 PUSH2 0x300 PUSH1 0x1 SWAP4 PUSH2 0x2AD0 JUMP JUMPDEST POP SLOAD AND PUSH2 0x30D DUP3 DUP10 PUSH2 0x2B9A JUMP JUMPDEST MLOAD SWAP1 PUSH0 MSTORE PUSH1 0xC DUP11 MSTORE PUSH2 0x323 DUP8 PUSH0 KECCAK256 SWAP2 DUP3 SLOAD PUSH2 0x2E73 JUMP JUMPDEST SWAP1 SSTORE ADD PUSH2 0x2EA JUMP JUMPDEST DUP8 DUP4 DUP7 DUP5 PUSH32 0xF6798A560793A54C3BCFE86A93CDE1E73087D944C0EA20544137D4121396885 DUP5 DUP4 MLOAD DUP6 DUP2 MSTORE LOG2 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 PUSH1 0xB PUSH1 0x64 SWAP3 DUP11 DUP9 MLOAD SWAP4 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP6 MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x4D696E74204661696C6564000000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 DUP4 PUSH1 0xD DUP5 PUSH1 0x20 DUP14 MLOAD SWAP4 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP6 MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x4D696E7420717479206973203000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH2 0x41C PUSH2 0x306B JUMP JUMPDEST POP SWAP2 DUP3 ISZERO PUSH2 0x43D JUMPI PUSH2 0x437 SWAP3 SWAP2 PUSH2 0x432 SWAP2 PUSH2 0x2D72 JUMP JUMPDEST PUSH2 0x2DB2 JUMP JUMPDEST SWAP4 PUSH2 0x2A7 JUMP JUMPDEST PUSH1 0x84 DUP6 PUSH1 0x26 DUP7 PUSH1 0x20 DUP16 MLOAD SWAP4 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP6 MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x546F74616C206C6971756964697479206D757374206265206772656174657220 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7468616E20300000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x84 DUP5 PUSH1 0x22 DUP6 PUSH1 0x20 DUP15 MLOAD SWAP4 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP6 MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x546F74616C2076616C7565206D7573742062652067726561746572207468616E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x2030000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 SWAP2 SWAP4 DUP10 PUSH2 0x54E DUP7 PUSH2 0x2AD0 JUMP JUMPDEST POP SLOAD AND DUP14 MLOAD SWAP1 PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP3 MSTORE ADDRESS DUP10 DUP4 ADD MSTORE PUSH1 0x20 SWAP2 DUP3 DUP2 DUP11 DUP2 DUP6 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x6C0 JUMPI DUP12 SWAP2 PUSH2 0x68F JUMPI JUMPDEST POP DUP1 ISZERO PUSH2 0x633 JUMPI PUSH2 0x5B0 SWAP1 PUSH2 0x5A9 DUP10 DUP8 PUSH2 0x2B9A JUMP JUMPDEST MLOAD SWAP1 PUSH2 0x2E66 JUMP JUMPDEST SWAP2 DUP3 ISZERO PUSH2 0x5D7 JUMPI POP SWAP2 PUSH2 0x5C8 PUSH2 0x5CE SWAP3 PUSH1 0x1 SWAP5 PUSH2 0x32BF JUMP JUMPDEST SWAP1 PUSH2 0x2E73 JUMP JUMPDEST SWAP5 ADD SWAP2 SWAP1 PUSH2 0x28F JUMP JUMPDEST DUP16 PUSH1 0x1D DUP11 PUSH1 0x64 SWAP4 DUP14 SWAP4 MLOAD SWAP4 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP6 MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E2030000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP16 DUP11 PUSH1 0x1E DUP12 DUP7 PUSH1 0x64 SWAP5 MLOAD SWAP4 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP6 MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x42616C616E6365206D7573742062652067726561746572207468616E20300000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 POP DUP3 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x6B9 JUMPI JUMPDEST PUSH2 0x6A6 DUP2 DUP4 PUSH2 0x29CE JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x6B5 JUMPI MLOAD PUSH0 PUSH2 0x594 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x69C JUMP JUMPDEST POP POP DUP15 MLOAD RETURNDATASIZE DUP12 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP PUSH1 0x64 DUP6 PUSH1 0x9 DUP7 PUSH1 0x20 DUP16 MLOAD SWAP4 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP6 MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x4E6F206173736574730000000000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP PUSH1 0x64 DUP6 PUSH1 0x17 DUP7 PUSH1 0x20 DUP16 MLOAD SWAP4 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP6 MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x496E76616C6964207265736572766573206C656E677468000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x1E3 JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1E3 JUMPI PUSH1 0x20 SWAP2 PUSH2 0x7C8 PUSH2 0x28B4 JUMP JUMPDEST DUP3 PUSH2 0x7D1 PUSH2 0x28D7 JUMP JUMPDEST SWAP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP4 AND DUP2 MSTORE PUSH1 0x1 DUP7 MSTORE KECCAK256 SWAP2 AND PUSH0 MSTORE DUP3 MSTORE DUP1 PUSH0 KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x1E3 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1E3 JUMPI DUP1 PUSH1 0x20 SWAP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x854 PUSH2 0x28B4 JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0xC DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP4 SWAP2 POP CALLVALUE PUSH2 0x1E3 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1E3 JUMPI CALLDATALOAD SWAP1 PUSH1 0x7 SLOAD DUP3 LT ISZERO PUSH2 0x78A JUMPI POP PUSH2 0x8AC SWAP1 PUSH2 0x2AD0 JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD SWAP2 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 RETURN JUMPDEST SUB SWAP1 RETURN JUMPDEST SWAP1 POP DUP3 CALLVALUE PUSH2 0x78A JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x78A JUMPI POP DUP1 CALLDATALOAD SWAP1 PUSH2 0x920 PUSH2 0x306B JUMP JUMPDEST DUP1 SWAP3 SWAP2 POP MLOAD DUP4 LT ISZERO PUSH2 0x941 JUMPI PUSH1 0x20 DUP5 PUSH2 0x939 DUP6 DUP6 PUSH2 0x2B9A JUMP JUMPDEST MLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x20 DUP6 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420617373657420696E64657800000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x1E3 JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1E3 JUMPI PUSH1 0x20 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xB SLOAD AND SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x1E3 JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1E3 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x9 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x1E3 JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1E3 JUMPI PUSH1 0x20 SWAP1 PUSH2 0xA76 PUSH2 0xA6C PUSH2 0x28B4 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x31B2 JUMP JUMPDEST MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST DUP4 DUP4 CALLVALUE PUSH2 0x1E3 JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1E3 JUMPI DUP1 MLOAD SWAP2 DUP1 SWAP4 DUP1 SLOAD SWAP2 PUSH1 0x1 SWAP1 DUP4 PUSH1 0x1 SHR SWAP3 PUSH1 0x1 DUP6 AND SWAP5 DUP6 ISZERO PUSH2 0xBC9 JUMPI JUMPDEST PUSH1 0x20 SWAP6 DUP7 DUP7 LT DUP2 EQ PUSH2 0xB9D JUMPI DUP6 DUP10 MSTORE SWAP1 DUP2 ISZERO PUSH2 0xB5B JUMPI POP PUSH1 0x1 EQ PUSH2 0xB03 JUMPI JUMPDEST PUSH2 0x8DE DUP8 DUP8 PUSH2 0xAF9 DUP3 DUP13 SUB DUP4 PUSH2 0x29CE JUMP JUMPDEST MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x286C JUMP JUMPDEST DUP2 MSTORE SWAP3 SWAP6 POP PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B JUMPDEST DUP3 DUP5 LT PUSH2 0xB48 JUMPI POP POP POP DUP3 PUSH2 0x8DE SWAP5 PUSH2 0xAF9 SWAP3 DUP3 ADD ADD SWAP5 DUP7 DUP1 PUSH2 0xAE8 JUMP JUMPDEST DUP1 SLOAD DUP7 DUP6 ADD DUP9 ADD MSTORE SWAP3 DUP7 ADD SWAP3 DUP2 ADD PUSH2 0xB2A JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND DUP9 DUP8 ADD MSTORE POP POP POP POP ISZERO ISZERO PUSH1 0x5 SHL DUP4 ADD ADD SWAP3 POP PUSH2 0xAF9 DUP3 PUSH2 0x8DE DUP7 DUP1 PUSH2 0xAE8 JUMP JUMPDEST PUSH1 0x24 DUP5 PUSH1 0x22 DUP6 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP4 MSTORE MSTORE REVERT JUMPDEST SWAP4 PUSH1 0x7F AND SWAP4 PUSH2 0xAC9 JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x1E3 JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1E3 JUMPI PUSH1 0x20 SWAP1 PUSH2 0xC0E PUSH2 0x2FEA JUMP JUMPDEST SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST DUP4 SWAP2 POP CALLVALUE PUSH2 0x1E3 JUMPI PUSH1 0x20 DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1332 JUMPI PUSH2 0xC52 PUSH2 0x28B4 JUMP JUMPDEST SWAP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP4 PUSH2 0xC78 DUP6 PUSH1 0xA SLOAD AND CALLER EQ PUSH2 0x2C59 JUMP JUMPDEST ADDRESS DUP3 MSTORE DUP2 DUP4 MSTORE DUP6 DUP3 KECCAK256 SLOAD SWAP1 DUP2 ISZERO PUSH2 0x12D6 JUMPI PUSH1 0x2 SLOAD SWAP6 DUP7 ISZERO PUSH2 0x127A JUMPI PUSH1 0x7 DUP1 SLOAD SWAP4 PUSH2 0xCA1 DUP6 PUSH2 0x2BAE JUMP JUMPDEST SWAP5 PUSH2 0x12C DUP3 MUL PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFED4 DUP4 DUP3 DIV ADD PUSH2 0x124E JUMPI PUSH2 0x2710 PUSH2 0xCDF SWAP2 DIV DUP1 SWAP4 PUSH2 0x2E66 JUMP JUMPDEST SWAP10 DUP8 JUMPDEST DUP3 DUP2 LT PUSH2 0x1196 JUMPI POP POP POP ADDRESS DUP7 MSTORE DUP6 DUP8 MSTORE PUSH2 0xD01 DUP10 DUP12 DUP9 KECCAK256 SLOAD LT ISZERO PUSH2 0x2F85 JUMP JUMPDEST DUP8 DUP8 DUP5 PUSH1 0x6 SLOAD AND DUP13 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH32 0x3B19E84A00000000000000000000000000000000000000000000000000000000 DUP3 MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x1141 JUMPI SWAP2 DUP9 SWAP2 DUP11 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 DUP10 SWAP2 PUSH2 0x114B JUMPI JUMPDEST POP SWAP1 PUSH2 0xDA7 SWAP3 SWAP2 DUP14 MLOAD SWAP4 DUP5 SWAP3 DUP4 SWAP3 PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 SWAP12 DUP13 DUP6 MSTORE DUP5 ADD PUSH1 0x20 SWAP1 SWAP4 SWAP3 SWAP2 SWAP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x40 DUP3 ADD SWAP6 AND DUP2 MSTORE ADD MSTORE JUMP JUMPDEST SUB DUP2 DUP11 ADDRESS GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x1141 JUMPI DUP8 SWAP2 PUSH2 0x1124 JUMPI JUMPDEST POP ISZERO PUSH2 0x10C8 JUMPI ADDRESS DUP7 MSTORE DUP6 DUP8 MSTORE PUSH2 0xDD6 DUP10 DUP12 DUP9 KECCAK256 SLOAD LT ISZERO PUSH2 0x2F85 JUMP JUMPDEST ADDRESS ISZERO PUSH2 0x1099 JUMPI ADDRESS PUSH0 MSTORE PUSH0 DUP8 MSTORE DUP10 PUSH0 KECCAK256 SLOAD DUP10 DUP2 LT PUSH2 0x1054 JUMPI DUP10 SWAP1 ADDRESS PUSH0 MSTORE PUSH0 DUP10 MSTORE SUB DUP11 PUSH0 KECCAK256 SSTORE DUP9 PUSH1 0x2 SLOAD SUB PUSH1 0x2 SSTORE PUSH0 DUP11 MLOAD DUP11 DUP2 MSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP10 ADDRESS SWAP3 LOG3 DUP6 JUMPDEST DUP2 SLOAD DUP2 LT ISZERO PUSH2 0xFD9 JUMPI DUP8 DUP4 PUSH2 0xE43 DUP4 PUSH2 0x2AD0 JUMP JUMPDEST POP SLOAD AND DUP13 MLOAD SWAP2 DUP3 DUP1 SWAP3 PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP3 MSTORE DUP14 ADDRESS SWAP1 DUP4 ADD MSTORE PUSH1 0x24 SWAP5 DUP6 SWAP2 GAS STATICCALL DUP1 ISZERO PUSH2 0xFA0 JUMPI DUP10 SWAP1 PUSH2 0xFAA JUMPI JUMPDEST PUSH2 0xEA0 SWAP2 POP PUSH2 0xE98 DUP5 DUP10 PUSH2 0x2B9A JUMP JUMPDEST MLOAD GT ISZERO PUSH2 0x2E01 JUMP JUMPDEST DUP12 DUP10 DUP7 DUP9 DUP14 DUP13 DUP13 PUSH2 0xEF7 PUSH2 0xEC1 DUP11 DUP14 PUSH2 0xEB8 DUP3 PUSH2 0x2AD0 JUMP JUMPDEST POP SLOAD AND SWAP7 PUSH2 0x2B9A JUMP JUMPDEST MLOAD SWAP8 MLOAD SWAP8 DUP9 SWAP7 DUP8 SWAP6 DUP7 SWAP5 DUP6 MSTORE DUP5 ADD PUSH1 0x20 SWAP1 SWAP4 SWAP3 SWAP2 SWAP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x40 DUP3 ADD SWAP6 AND DUP2 MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0xFA0 JUMPI DUP10 SWAP2 PUSH2 0xF73 JUMPI JUMPDEST POP ISZERO PUSH2 0xF18 JUMPI POP PUSH1 0x1 ADD PUSH2 0xE2F JUMP JUMPDEST DUP10 PUSH1 0x15 PUSH1 0x64 SWAP3 DUP12 DUP16 MLOAD SWAP4 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP6 MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x4173736574207472616E73666572206661696C65640000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH2 0xF93 SWAP2 POP DUP11 RETURNDATASIZE DUP13 GT PUSH2 0xF99 JUMPI JUMPDEST PUSH2 0xF8B DUP2 DUP4 PUSH2 0x29CE JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x2DE9 JUMP JUMPDEST DUP14 PUSH2 0xF09 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0xF81 JUMP JUMPDEST DUP14 MLOAD RETURNDATASIZE DUP12 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP DUP10 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0xFD2 JUMPI JUMPDEST PUSH2 0xFC0 DUP2 DUP4 PUSH2 0x29CE JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x6B5 JUMPI PUSH2 0xEA0 SWAP1 MLOAD PUSH2 0xE89 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0xFB6 JUMP JUMPDEST POP SWAP2 DUP10 SWAP2 DUP7 DUP11 DUP10 SWAP4 PUSH0 JUMPDEST DUP8 SLOAD DUP2 LT ISZERO PUSH2 0x1024 JUMPI DUP1 DUP6 PUSH2 0xFF9 PUSH1 0x1 SWAP4 PUSH2 0x2AD0 JUMP JUMPDEST POP SLOAD AND PUSH2 0x1006 DUP3 DUP13 PUSH2 0x2B9A JUMP JUMPDEST MLOAD SWAP1 PUSH0 MSTORE PUSH1 0xC DUP9 MSTORE PUSH2 0x101C DUP10 PUSH0 KECCAK256 SWAP2 DUP3 SLOAD PUSH2 0x2E66 JUMP JUMPDEST SWAP1 SSTORE ADD PUSH2 0xFE3 JUMP JUMPDEST POP DUP5 DUP5 PUSH32 0xCC16F5DBB4873280815C1EE09DBD06736CFFCC184412CF7A71A0FDB75D397CA5 SWAP3 DUP9 MLOAD SWAP5 DUP6 MSTORE AND SWAP3 LOG2 DUP1 RETURN JUMPDEST DUP11 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS DUP2 DUP12 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 DUP3 ADD DUP12 SWAP1 MSTORE SWAP1 DUP2 SWAP1 PUSH1 0x60 ADD SUB SWAP1 REVERT JUMPDEST PUSH1 0x24 DUP9 DUP8 DUP13 MLOAD SWAP2 PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 DUP9 DUP9 DUP13 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x466565207472616E73666572206661696C656400000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH2 0x113B SWAP2 POP DUP9 RETURNDATASIZE DUP11 GT PUSH2 0xF99 JUMPI PUSH2 0xF8B DUP2 DUP4 PUSH2 0x29CE JUMP JUMPDEST DUP12 PUSH2 0xDBB JUMP JUMPDEST DUP12 MLOAD RETURNDATASIZE DUP10 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP3 DUP1 SWAP3 SWAP5 SWAP6 SWAP7 SWAP8 SWAP9 POP DUP4 SWAP2 POP RETURNDATASIZE DUP4 GT PUSH2 0x118F JUMPI JUMPDEST PUSH2 0x1169 DUP2 DUP4 PUSH2 0x29CE JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x118B JUMPI MLOAD DUP4 DUP2 AND DUP2 SUB PUSH2 0x118B JUMPI DUP9 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 DUP9 SWAP2 PUSH2 0xDA7 PUSH2 0xD4A JUMP JUMPDEST DUP7 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x115F JUMP JUMPDEST DUP13 DUP11 DUP13 PUSH1 0x24 DUP10 PUSH2 0x11A5 DUP7 PUSH2 0x2AD0 JUMP JUMPDEST POP SLOAD AND SWAP4 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP4 MSTORE ADDRESS SWAP1 DUP4 ADD MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x1244 JUMPI DUP4 SWAP3 SWAP2 DUP15 SWAP2 DUP13 SWAP2 PUSH2 0x120D JUMPI JUMPDEST POP SWAP3 PUSH2 0x432 PUSH2 0x11FC SWAP3 PUSH1 0x1 SWAP6 PUSH2 0x2D72 JUMP JUMPDEST PUSH2 0x1206 DUP3 DUP12 PUSH2 0x2B9A JUMP JUMPDEST MSTORE ADD PUSH2 0xCE2 JUMP JUMPDEST SWAP4 POP POP POP DUP11 DUP3 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x123D JUMPI JUMPDEST PUSH2 0x1226 DUP2 DUP4 PUSH2 0x29CE JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x6B5 JUMPI SWAP1 MLOAD DUP3 SWAP2 SWAP1 DUP14 SWAP1 PUSH2 0x432 PUSH2 0x11EB JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x121C JUMP JUMPDEST DUP15 MLOAD RETURNDATASIZE DUP13 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x24 DUP9 PUSH1 0x11 DUP13 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP4 MSTORE MSTORE REVERT JUMPDEST PUSH1 0x64 DUP7 DUP7 DUP11 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F206C69717569646974790000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 DUP6 DUP6 DUP10 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5368617265206D7573742062652067726561746572207468616E203000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x78A JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x78A JUMPI PUSH2 0x136E PUSH2 0x2E80 JUMP JUMPDEST SWAP3 SWAP1 DUP2 MLOAD SWAP4 DUP3 DUP6 SWAP4 DUP5 ADD SWAP1 DUP5 MSTORE DUP3 MLOAD DUP1 SWAP2 MSTORE PUSH1 0x60 DUP5 ADD SWAP3 PUSH1 0x20 DUP1 SWAP2 ADD SWAP6 JUMPDEST DUP3 DUP2 LT PUSH2 0x13A7 JUMPI DUP6 DUP1 PUSH2 0x8DE DUP8 DUP8 DUP4 DUP3 SUB PUSH1 0x20 DUP6 ADD MSTORE PUSH2 0x28FA JUMP JUMPDEST DUP7 MLOAD ISZERO ISZERO DUP6 MSTORE SWAP6 DUP2 ADD SWAP6 DUP8 SWAP6 POP SWAP4 DUP2 ADD SWAP4 PUSH1 0x1 ADD PUSH2 0x138C JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x1E3 JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1E3 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x8 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x1332 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x786 JUMPI DUP1 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x14BE JUMPI PUSH2 0x1450 SWAP2 CALLDATASIZE SWAP2 ADD PUSH2 0x2A27 JUMP JUMPDEST SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 PUSH2 0x1476 DUP5 PUSH1 0xA SLOAD AND CALLER EQ PUSH2 0x2C59 JUMP JUMPDEST DUP5 JUMPDEST PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x14BA JUMPI DUP1 DUP6 PUSH2 0x148F PUSH1 0x1 SWAP4 PUSH2 0x2AD0 JUMP JUMPDEST POP SLOAD AND PUSH2 0x149C DUP3 DUP8 PUSH2 0x2B9A JUMP JUMPDEST MLOAD SWAP1 DUP9 MSTORE PUSH1 0xC DUP5 MSTORE PUSH2 0x14B2 DUP6 DUP10 KECCAK256 SWAP2 DUP3 SLOAD PUSH2 0x2E66 JUMP JUMPDEST SWAP1 SSTORE ADD PUSH2 0x1478 JUMP JUMPDEST DUP6 DUP1 RETURN JUMPDEST DUP5 DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x1E3 JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1E3 JUMPI PUSH1 0x20 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA SLOAD AND SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x1E3 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1E3 JUMPI DUP1 PUSH1 0x20 SWAP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x1567 PUSH2 0x28B4 JUMP JUMPDEST AND DUP2 MSTORE DUP1 DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x1332 JUMPI PUSH1 0x80 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1332 JUMPI PUSH2 0x15AF PUSH2 0x28B4 JUMP JUMPDEST SWAP3 PUSH2 0x15B8 PUSH2 0x28D7 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD PUSH1 0x64 CALLDATALOAD SWAP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP7 DUP8 DUP2 AND DUP2 SUB PUSH2 0x6B5 JUMPI PUSH1 0x2 PUSH1 0x5 SLOAD EQ PUSH2 0x1933 JUMPI PUSH1 0x2 PUSH1 0x5 SSTORE DUP8 DUP5 AND SWAP4 DUP9 DUP4 AND SWAP3 DUP6 DUP5 EQ PUSH2 0x18D6 JUMPI DUP5 ISZERO PUSH2 0x1879 JUMPI DUP9 MLOAD PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x80 DUP2 SWAP1 MSTORE CALLER DUP11 DUP4 ADD SWAP1 DUP2 MSTORE ADDRESS DUP2 DUP4 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP9 SWAP1 MSTORE DUP3 SWAP1 DUP2 SWAP1 PUSH1 0x60 ADD SUB DUP2 DUP12 DUP10 GAS CALL DUP1 ISZERO PUSH2 0x186F JUMPI SWAP2 PUSH2 0x1667 SWAP4 SWAP2 DUP8 SWAP4 PUSH2 0x184E JUMPI JUMPDEST POP PUSH2 0x2CBE JUMP JUMPDEST SWAP8 DUP8 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS DUP9 DUP3 ADD MSTORE PUSH1 0x80 MLOAD DUP2 PUSH1 0x24 DUP2 DUP10 GAS STATICCALL DUP1 ISZERO PUSH2 0x17E2 JUMPI DUP11 SWAP1 DUP9 SWAP1 PUSH2 0x1818 JUMPI JUMPDEST PUSH2 0x16B7 SWAP3 POP LT ISZERO PUSH2 0x2E01 JUMP JUMPDEST PUSH2 0x12C DUP1 DUP11 MUL SWAP1 DUP11 DUP3 DIV EQ DUP11 ISZERO OR ISZERO PUSH2 0x17EC JUMPI PUSH2 0x2710 PUSH2 0x16D8 SWAP2 DIV DUP11 PUSH2 0x2E66 JUMP JUMPDEST SWAP7 DUP9 MLOAD SWAP1 PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 DUP3 MSTORE DUP2 DUP1 PUSH2 0x1734 DUP12 DUP8 PUSH1 0x80 MLOAD SWAP6 DUP5 ADD PUSH1 0x20 SWAP1 SWAP4 SWAP3 SWAP2 SWAP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x40 DUP3 ADD SWAP6 AND DUP2 MSTORE ADD MSTORE JUMP JUMPDEST SUB DUP2 DUP11 DUP11 GAS CALL DUP1 ISZERO PUSH2 0x17E2 JUMPI SWAP4 PUSH2 0x17B0 SWAP8 SWAP6 SWAP4 PUSH32 0xCD3829A3813DC3CDD188FD3D01DCF3268C16BE2FDD2DD21D0665418816E46062 DUP12 DUP4 SWAP6 DUP11 SWAP9 SWAP6 DUP3 SWAP12 SWAP7 PUSH2 0x17C1 JUMPI JUMPDEST POP DUP2 MLOAD SWAP4 DUP9 DUP6 MSTORE DUP14 PUSH1 0x80 MLOAD DUP7 ADD MSTORE AND SWAP3 LOG4 DUP4 MSTORE PUSH1 0xC PUSH1 0x80 MLOAD MSTORE PUSH2 0x179D DUP5 DUP5 KECCAK256 SWAP2 DUP3 SLOAD PUSH2 0x2E73 JUMP JUMPDEST SWAP1 SSTORE DUP2 MSTORE PUSH1 0xC PUSH1 0x80 MLOAD MSTORE KECCAK256 SWAP2 DUP3 SLOAD PUSH2 0x2E73 JUMP JUMPDEST SWAP1 SSTORE PUSH1 0x1 PUSH1 0x5 SSTORE MLOAD SWAP1 DUP2 MSTORE PUSH1 0x80 MLOAD SWAP1 RETURN JUMPDEST PUSH2 0x17DB SWAP1 PUSH1 0x80 MLOAD RETURNDATASIZE PUSH1 0x80 MLOAD GT PUSH2 0xF99 JUMPI PUSH2 0xF8B DUP2 DUP4 PUSH2 0x29CE JUMP JUMPDEST POP PUSH0 PUSH2 0x1776 JUMP JUMPDEST DUP10 MLOAD RETURNDATASIZE DUP10 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x24 DUP8 PUSH1 0x11 DUP11 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP4 MSTORE MSTORE REVERT JUMPDEST POP POP PUSH1 0x80 MLOAD RETURNDATASIZE DUP2 GT PUSH2 0x1847 JUMPI JUMPDEST PUSH2 0x182F DUP2 DUP4 PUSH2 0x29CE JUMP JUMPDEST DUP2 PUSH1 0x80 MLOAD SWAP2 DUP2 ADD SUB SLT PUSH2 0x6B5 JUMPI DUP10 PUSH2 0x16B7 SWAP2 MLOAD PUSH2 0x16AB JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1825 JUMP JUMPDEST PUSH2 0x1868 SWAP1 PUSH1 0x80 MLOAD RETURNDATASIZE PUSH1 0x80 MLOAD GT PUSH2 0xF99 JUMPI PUSH2 0xF8B DUP2 DUP4 PUSH2 0x29CE JUMP JUMPDEST POP PUSH0 PUSH2 0x1661 JUMP JUMPDEST DUP11 MLOAD RETURNDATASIZE DUP11 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x64 DUP9 PUSH1 0x20 DUP12 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E207A65726F PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 DUP9 PUSH1 0x20 DUP12 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F742073776170207468652073616D6520746F6B656E000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP6 DUP8 MLOAD PUSH32 0x3EE5AEB500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x78A JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x78A JUMPI PUSH1 0x7 SLOAD PUSH2 0x1997 DUP2 PUSH2 0x2BAE JUMP JUMPDEST SWAP2 JUMPDEST DUP2 DUP2 LT PUSH2 0x19B5 JUMPI DUP4 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 SWAP1 PUSH2 0x8DE SWAP1 DUP3 ADD DUP7 PUSH2 0x2A87 JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x19D6 PUSH1 0x1 SWAP4 PUSH2 0x2AD0 JUMP JUMPDEST POP SLOAD AND PUSH2 0x19E3 DUP3 DUP7 PUSH2 0x2B9A JUMP JUMPDEST MSTORE ADD PUSH2 0x1999 JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x1E3 JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1E3 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH2 0x12C DUP2 MSTORE RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x6B5 JUMPI PUSH1 0x20 SWAP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC SWAP3 DUP3 DUP5 CALLDATASIZE ADD SLT PUSH2 0x6B5 JUMPI PUSH2 0x1A62 PUSH2 0x28B4 JUMP JUMPDEST SWAP2 PUSH2 0x1A73 PUSH2 0x1A6E PUSH2 0x2FEA JUMP JUMPDEST PUSH2 0x2B35 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x3E8 SWAP1 DUP2 DUP2 MUL SWAP2 DUP2 DUP4 DIV EQ SWAP1 ISZERO OR ISZERO PUSH2 0x1E0D JUMPI PUSH2 0x2710 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP6 AND PUSH0 MSTORE PUSH0 DUP7 MSTORE DIV DUP3 PUSH0 KECCAK256 SLOAD LT PUSH2 0x1DB2 JUMPI PUSH1 0x7 SWAP5 PUSH1 0x7 SLOAD PUSH2 0x1AC4 DUP2 PUSH2 0x2BAE JUMP JUMPDEST SWAP2 PUSH2 0x1ACE DUP3 PUSH2 0x2BAE JUMP JUMPDEST SWAP2 PUSH0 JUMPDEST DUP2 DUP2 LT PUSH2 0x1D79 JUMPI POP POP DUP6 PUSH1 0xA SLOAD AND DUP1 EXTCODESIZE ISZERO PUSH2 0x6B5 JUMPI PUSH0 DUP1 SWAP2 DUP7 DUP9 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH32 0xFE11011600000000000000000000000000000000000000000000000000000000 DUP4 MSTORE GAS CALL DUP1 ISZERO PUSH2 0x1D6F JUMPI PUSH2 0x1D5A JUMPI JUMPDEST POP SWAP1 DUP9 SWAP2 DUP7 PUSH1 0x6 SLOAD AND PUSH1 0x8 SLOAD SWAP1 DUP9 PUSH1 0xB SLOAD AND DUP2 EXTCODESIZE ISZERO PUSH2 0x1D56 JUMPI DUP9 MLOAD PUSH32 0x325192D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0xC0 DUP2 DUP11 ADD MSTORE SWAP5 DUP7 SWAP5 DUP7 SWAP5 DUP6 SWAP4 DUP8 SWAP4 DUP6 SWAP4 PUSH2 0x1B8F SWAP2 PUSH2 0x1B80 PUSH1 0xC4 DUP8 ADD DUP16 PUSH2 0x2A87 JUMP JUMPDEST SWAP2 DUP7 DUP4 SUB ADD PUSH1 0x24 DUP8 ADD MSTORE PUSH2 0x28FA JUMP JUMPDEST SWAP2 ADDRESS PUSH1 0x44 DUP6 ADD MSTORE ADDRESS PUSH1 0x64 DUP6 ADD MSTORE PUSH1 0x84 DUP5 ADD MSTORE PUSH1 0xA4 DUP4 ADD MSTORE SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x1D4C JUMPI PUSH2 0x1D38 JUMPI JUMPDEST POP JUMPDEST DUP7 SLOAD DUP2 LT ISZERO PUSH2 0x1CFA JUMPI DUP5 PUSH2 0x1BCA DUP3 PUSH2 0x2AD0 JUMP JUMPDEST POP SLOAD AND DUP5 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS DUP6 DUP3 ADD MSTORE DUP8 DUP2 PUSH1 0x24 DUP2 DUP6 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x1CF0 JUMPI SWAP1 DUP9 SWAP2 DUP12 SWAP2 PUSH2 0x1CBF JUMPI JUMPDEST POP DUP3 PUSH2 0x1C7D SWAP4 DUP13 MSTORE PUSH1 0xC DUP4 MSTORE DUP2 DUP9 DUP14 KECCAK256 SSTORE DUP9 PUSH1 0xA SLOAD AND DUP13 DUP10 MLOAD DUP1 SWAP7 DUP2 SWAP6 DUP3 SWAP5 PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 DUP5 MSTORE DUP13 DUP5 ADD PUSH1 0x20 SWAP1 SWAP4 SWAP3 SWAP2 SWAP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x40 DUP3 ADD SWAP6 AND DUP2 MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x1CB5 JUMPI SWAP1 PUSH1 0x1 SWAP3 SWAP2 PUSH2 0x1C98 JUMPI JUMPDEST POP ADD PUSH2 0x1BB7 JUMP JUMPDEST PUSH2 0x1CAE SWAP1 DUP9 RETURNDATASIZE DUP11 GT PUSH2 0xF99 JUMPI PUSH2 0xF8B DUP2 DUP4 PUSH2 0x29CE JUMP JUMPDEST POP PUSH0 PUSH2 0x1C91 JUMP JUMPDEST DUP6 MLOAD RETURNDATASIZE DUP12 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP3 DUP2 SWAP4 SWAP3 POP RETURNDATASIZE DUP4 GT PUSH2 0x1CE9 JUMPI JUMPDEST PUSH2 0x1CD6 DUP2 DUP4 PUSH2 0x29CE JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x6B5 JUMPI MLOAD DUP8 SWAP1 PUSH2 0x1C7D PUSH2 0x1C10 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1CCC JUMP JUMPDEST DUP7 MLOAD RETURNDATASIZE DUP13 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP4 MLOAD DUP7 DUP2 MSTORE DUP9 SWAP1 CALLER SWAP1 PUSH32 0x279B343370F587AF7FB675AE7C8578E9C8ABCC373236AD02C501A4771FE7A7B8 SWAP1 DUP1 PUSH2 0x1D32 DUP2 DUP13 ADD DUP9 PUSH2 0x2A87 JUMP JUMPDEST SUB SWAP1 LOG2 DUP1 RETURN JUMPDEST PUSH2 0x1D41 SWAP1 PUSH2 0x298D JUMP JUMPDEST PUSH2 0x118B JUMPI DUP7 PUSH0 PUSH2 0x1BB5 JUMP JUMPDEST DUP6 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP6 DUP1 REVERT JUMPDEST PUSH2 0x1D66 SWAP2 SWAP3 SWAP10 POP PUSH2 0x298D JUMP JUMPDEST PUSH0 SWAP8 SWAP1 PUSH0 PUSH2 0x1B20 JUMP JUMPDEST DUP7 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP1 DUP9 PUSH2 0x1D86 PUSH1 0x1 SWAP4 PUSH2 0x2AD0 JUMP JUMPDEST POP SLOAD AND PUSH2 0x1D93 DUP3 DUP9 PUSH2 0x2B9A JUMP JUMPDEST MSTORE DUP2 PUSH2 0x1D9E DUP3 PUSH2 0x2AD0 JUMP JUMPDEST POP ADD SLOAD PUSH2 0x1DAB DUP3 DUP8 PUSH2 0x2B9A JUMP JUMPDEST MSTORE ADD PUSH2 0x1AD1 JUMP JUMPDEST DUP4 PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E646572203525204C50207368617265000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x11 DUP3 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP3 CALLVALUE PUSH2 0x6B5 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x1DC PUSH2 0x1E4E CALLDATASIZE PUSH2 0x292D JUMP JUMPDEST SWAP2 PUSH2 0x2CBE JUMP JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x6B5 JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x6B5 JUMPI DUP1 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x6B5 JUMPI PUSH2 0x1EA2 SWAP2 CALLDATASIZE SWAP2 ADD PUSH2 0x2A27 JUMP JUMPDEST SWAP1 PUSH1 0x24 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x6B5 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 PUSH2 0x1ED4 DUP5 PUSH1 0xA SLOAD AND CALLER EQ PUSH2 0x2C59 JUMP JUMPDEST PUSH0 JUMPDEST PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x1F3C JUMPI DUP1 DUP6 PUSH2 0x1EED PUSH1 0x1 SWAP4 PUSH2 0x2AD0 JUMP JUMPDEST POP SLOAD AND PUSH2 0x1EFA DUP3 DUP6 PUSH2 0x2B9A JUMP JUMPDEST MLOAD SWAP1 DUP6 ISZERO PUSH2 0x1F20 JUMPI PUSH0 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH2 0x1F17 DUP7 PUSH0 KECCAK256 SWAP2 DUP3 SLOAD PUSH2 0x2E73 JUMP JUMPDEST SWAP1 SSTORE JUMPDEST ADD PUSH2 0x1ED6 JUMP JUMPDEST PUSH0 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH2 0x1F35 DUP7 PUSH0 KECCAK256 SWAP2 DUP3 SLOAD PUSH2 0x2E66 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x1F1A JUMP JUMPDEST STOP JUMPDEST DUP3 CALLVALUE PUSH2 0x6B5 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x6B5 JUMPI PUSH2 0x8DE PUSH2 0x1F78 PUSH2 0x306B JUMP JUMPDEST DUP4 SWAP3 SWAP2 SWAP3 MLOAD SWAP4 DUP5 SWAP4 DUP5 MSTORE DUP1 PUSH1 0x20 DUP6 ADD MSTORE DUP4 ADD SWAP1 PUSH2 0x28FA JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x6B5 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x6B5 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH1 0x12 DUP2 MSTORE RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x6B5 JUMPI PUSH2 0x1FD9 CALLDATASIZE PUSH2 0x292D JUMP JUMPDEST SWAP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 SWAP3 SWAP4 AND DUP1 PUSH0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE DUP6 PUSH0 KECCAK256 CALLER PUSH0 MSTORE PUSH1 0x20 MSTORE DUP6 PUSH0 KECCAK256 SLOAD SWAP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 SUB PUSH2 0x203F JUMPI JUMPDEST PUSH1 0x20 DUP8 PUSH2 0xA76 DUP9 DUP9 DUP9 PUSH2 0x31B2 JUMP JUMPDEST DUP6 DUP4 LT PUSH2 0x20D9 JUMPI DUP2 ISZERO PUSH2 0x20AA JUMPI CALLER ISZERO PUSH2 0x207B JUMPI POP PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE DUP7 DUP3 KECCAK256 CALLER DUP4 MSTORE DUP2 MSTORE SWAP1 DUP7 SWAP1 KECCAK256 SWAP2 DUP6 SWAP1 SUB SWAP1 SWAP2 SSTORE DUP3 SWAP1 PUSH2 0xA76 PUSH2 0x2031 JUMP JUMPDEST PUSH1 0x24 SWAP1 PUSH0 DUP9 MLOAD SWAP2 PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x24 SWAP1 PUSH0 DUP9 MLOAD SWAP2 PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST DUP7 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER SWAP2 DUP2 ADD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 DUP2 ADD DUP7 SWAP1 MSTORE DUP3 SWAP2 POP PUSH1 0x60 ADD SUB SWAP1 REVERT JUMPDEST DUP3 CALLVALUE PUSH2 0x6B5 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x6B5 JUMPI PUSH1 0x7 SLOAD PUSH2 0x2159 DUP2 PUSH2 0x2BAE JUMP JUMPDEST SWAP1 PUSH0 JUMPDEST DUP2 DUP2 LT PUSH2 0x2178 JUMPI DUP4 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 SWAP1 PUSH2 0x8DE SWAP1 DUP3 ADD DUP7 PUSH2 0x28FA JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH2 0x2185 DUP2 SWAP4 PUSH2 0x2AD0 JUMP JUMPDEST POP ADD SLOAD PUSH2 0x2192 DUP3 DUP7 PUSH2 0x2B9A JUMP JUMPDEST MSTORE ADD PUSH2 0x215C JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x6B5 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x6B5 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x21D3 PUSH2 0x306B JUMP JUMPDEST POP SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x6B5 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x6B5 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x2 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x6B5 JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x6B5 JUMPI PUSH2 0x224E PUSH2 0x28B4 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER ISZERO PUSH2 0x22ED JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 ISZERO PUSH2 0x22BE JUMPI PUSH1 0x20 SWAP4 POP CALLER PUSH0 MSTORE PUSH1 0x1 DUP5 MSTORE DUP3 PUSH0 KECCAK256 DUP3 PUSH0 MSTORE DUP5 MSTORE DUP1 DUP4 PUSH0 KECCAK256 SSTORE DUP3 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 CALLER SWAP3 LOG3 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x24 DUP5 PUSH0 DUP6 MLOAD SWAP2 PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x24 DUP5 PUSH0 DUP6 MLOAD SWAP2 PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST DUP3 CALLVALUE PUSH2 0x6B5 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x6B5 JUMPI PUSH2 0x8DE SWAP1 PUSH2 0x2357 PUSH2 0x2BFD JUMP JUMPDEST SWAP1 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x28FA JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x6B5 JUMPI PUSH1 0x20 SWAP1 DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x6B5 JUMPI PUSH2 0x23A4 PUSH2 0x28B4 JUMP JUMPDEST SWAP2 PUSH2 0x23B0 PUSH2 0x1A6E PUSH2 0x2FEA JUMP JUMPDEST PUSH2 0x23B8 PUSH2 0x306B JUMP JUMPDEST SWAP5 SWAP1 PUSH1 0x7 SLOAD SWAP1 PUSH2 0x23C7 DUP3 PUSH2 0x2BAE JUMP JUMPDEST SWAP7 PUSH0 JUMPDEST DUP4 DUP2 LT PUSH2 0x2680 JUMPI POP POP POP PUSH0 SWAP1 PUSH0 SWAP1 JUMPDEST DUP1 DUP3 LT PUSH2 0x265F JUMPI POP POP PUSH0 JUMPDEST DUP7 MLOAD DUP2 LT ISZERO PUSH2 0x2618 JUMPI PUSH2 0x23F7 DUP2 DUP9 PUSH2 0x2B9A JUMP JUMPDEST MLOAD PUSH2 0x2405 JUMPI JUMPDEST PUSH1 0x1 ADD PUSH2 0x23E4 JUMP JUMPDEST PUSH2 0x248A PUSH2 0x2412 DUP3 DUP10 PUSH2 0x2B9A JUMP JUMPDEST MLOAD DUP6 PUSH2 0x241D DUP5 PUSH2 0x2AD0 JUMP JUMPDEST POP SLOAD PUSH1 0x6 SLOAD PUSH1 0xB SLOAD DUP11 MLOAD PUSH32 0x248391FF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 AND DUP11 DUP3 ADD SWAP1 DUP2 MSTORE SWAP4 DUP3 AND PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x40 DUP5 ADD SWAP6 SWAP1 SWAP6 MSTORE SWAP4 SWAP5 DUP6 SWAP3 SWAP2 DUP6 AND SWAP2 DUP4 SWAP2 DUP3 SWAP2 PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x260E JUMPI PUSH0 SWAP3 PUSH2 0x25DF JUMPI JUMPDEST POP DUP2 ISZERO PUSH2 0x2583 JUMPI PUSH2 0x251C DUP7 DUP4 DUP4 PUSH2 0x24B2 DUP8 PUSH2 0x2AD0 JUMP JUMPDEST POP SLOAD AND DUP5 PUSH1 0xA SLOAD AND PUSH0 DUP11 DUP14 MLOAD SWAP7 DUP8 SWAP6 DUP7 SWAP5 DUP6 SWAP4 PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 DUP6 MSTORE CALLER SWAP1 DUP6 ADD PUSH1 0x40 SWAP2 SWAP5 SWAP4 SWAP3 SWAP5 PUSH1 0x60 DUP3 ADD SWAP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP3 AND DUP4 MSTORE AND PUSH1 0x20 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x2579 JUMPI SWAP1 PUSH1 0x1 SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0x255C JUMPI JUMPDEST POP PUSH2 0x253C DUP4 PUSH2 0x2AD0 JUMP JUMPDEST POP SLOAD AND PUSH0 MSTORE PUSH1 0xC DUP7 MSTORE PUSH2 0x2553 DUP8 PUSH0 KECCAK256 SWAP2 DUP3 SLOAD PUSH2 0x2E73 JUMP JUMPDEST SWAP1 SSTORE SWAP1 POP PUSH2 0x23FD JUMP JUMPDEST PUSH2 0x2572 SWAP1 DUP9 RETURNDATASIZE DUP11 GT PUSH2 0xF99 JUMPI PUSH2 0xF8B DUP2 DUP4 PUSH2 0x29CE JUMP JUMPDEST POP DUP11 PUSH2 0x2532 JUMP JUMPDEST DUP9 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x64 DUP6 DUP8 DUP10 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420746F6B656E20616D6F756E7420746F206164640000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 SWAP2 POP DUP6 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x2607 JUMPI JUMPDEST PUSH2 0x25F7 DUP2 DUP4 PUSH2 0x29CE JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x6B5 JUMPI MLOAD SWAP1 DUP10 PUSH2 0x249C JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x25ED JUMP JUMPDEST DUP8 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP4 PUSH32 0xA95AD530009C6F929555E70A66AADBEAE7231E45756C5B028CA77FBAA376E73E PUSH2 0x265A DUP10 DUP9 PUSH2 0x2649 DUP8 DUP13 PUSH2 0x3118 JUMP JUMPDEST MLOAD SWAP2 DUP3 SWAP2 DUP6 DUP4 MSTORE CALLER SWAP6 DUP4 ADD SWAP1 PUSH2 0x28FA JUMP JUMPDEST SUB SWAP1 LOG2 STOP JUMPDEST SWAP1 SWAP2 PUSH2 0x2678 PUSH1 0x1 SWAP2 PUSH2 0x2671 DUP6 DUP12 PUSH2 0x2B9A JUMP JUMPDEST MLOAD SWAP1 PUSH2 0x2E73 JUMP JUMPDEST SWAP3 ADD SWAP1 PUSH2 0x23D9 JUMP JUMPDEST DUP1 PUSH2 0x2710 PUSH2 0x269C PUSH1 0x1 PUSH2 0x2693 DUP2 SWAP6 PUSH2 0x2AD0 JUMP JUMPDEST POP ADD SLOAD DUP7 PUSH2 0x2D72 JUMP JUMPDEST DIV DUP1 PUSH2 0x26A8 DUP4 DUP7 PUSH2 0x2B9A JUMP JUMPDEST MLOAD LT PUSH2 0x26B6 JUMPI JUMPDEST POP ADD PUSH2 0x23CA JUMP JUMPDEST PUSH2 0x26C4 SWAP1 PUSH2 0x5A9 DUP4 DUP7 PUSH2 0x2B9A JUMP JUMPDEST PUSH2 0x26CE DUP3 DUP13 PUSH2 0x2B9A JUMP JUMPDEST MSTORE DUP11 PUSH2 0x26AF JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x6B5 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x6B5 JUMPI DUP1 MLOAD SWAP1 PUSH0 SWAP3 PUSH1 0x3 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 SHR SWAP2 PUSH1 0x1 DUP2 AND DUP1 ISZERO PUSH2 0x2814 JUMPI JUMPDEST PUSH1 0x20 SWAP5 DUP6 DUP6 LT DUP3 EQ PUSH2 0x27E8 JUMPI POP DUP4 DUP8 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x27AA JUMPI POP PUSH1 0x1 EQ PUSH2 0x2750 JUMPI JUMPDEST POP POP POP PUSH2 0xAF9 DUP3 PUSH2 0x8DE SWAP5 SUB DUP4 PUSH2 0x29CE JUMP JUMPDEST PUSH1 0x3 PUSH0 SWAP1 DUP2 MSTORE SWAP3 SWAP6 POP PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B JUMPDEST DUP3 DUP5 LT PUSH2 0x2797 JUMPI POP POP POP DUP3 PUSH2 0x8DE SWAP5 PUSH2 0xAF9 SWAP3 DUP3 ADD ADD SWAP5 PUSH2 0x273E JUMP JUMPDEST DUP1 SLOAD DUP7 DUP6 ADD DUP9 ADD MSTORE SWAP3 DUP7 ADD SWAP3 DUP2 ADD PUSH2 0x277B JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND DUP7 DUP6 ADD MSTORE POP POP ISZERO ISZERO PUSH1 0x5 SHL DUP4 ADD ADD SWAP3 POP PUSH2 0xAF9 DUP3 PUSH2 0x8DE PUSH2 0x273E JUMP JUMPDEST PUSH1 0x22 SWAP1 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP3 PUSH1 0x7F AND SWAP3 PUSH2 0x271E JUMP JUMPDEST CALLVALUE PUSH2 0x6B5 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x6B5 JUMPI PUSH1 0x20 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x6 SLOAD AND DUP2 MSTORE RETURN JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F PUSH1 0x20 PUSH1 0x40 SWAP5 DUP2 DUP6 MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP2 DUP3 DUP3 DUP9 ADD MSTORE ADD DUP7 DUP7 ADD MCOPY PUSH0 DUP6 DUP3 DUP7 ADD ADD MSTORE ADD AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x6B5 JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x6B5 JUMPI JUMP JUMPDEST SWAP1 DUP2 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP1 SWAP4 ADD SWAP4 ADD SWAP2 PUSH0 JUMPDEST DUP3 DUP2 LT PUSH2 0x2919 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x290B JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC PUSH1 0x60 SWAP2 ADD SLT PUSH2 0x6B5 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 PUSH1 0x4 CALLDATALOAD DUP3 DUP2 AND DUP2 SUB PUSH2 0x6B5 JUMPI SWAP2 PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 AND DUP2 SUB PUSH2 0x6B5 JUMPI SWAP1 PUSH1 0x44 CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x29A1 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP1 PUSH1 0x1F PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x29A1 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x29A1 JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x6B5 JUMPI PUSH1 0x20 SWAP1 DUP3 CALLDATALOAD PUSH2 0x2A41 DUP2 PUSH2 0x2A0F JUMP JUMPDEST SWAP4 PUSH2 0x2A4F PUSH1 0x40 MLOAD SWAP6 DUP7 PUSH2 0x29CE JUMP JUMPDEST DUP2 DUP6 MSTORE PUSH1 0x20 DUP1 DUP7 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x6B5 JUMPI PUSH1 0x20 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x2A78 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE SWAP1 DUP4 ADD SWAP1 DUP4 ADD PUSH2 0x2A6A JUMP JUMPDEST SWAP1 DUP2 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP1 SWAP4 ADD SWAP4 ADD SWAP2 PUSH0 JUMPDEST DUP3 DUP2 LT PUSH2 0x2AA6 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x2A98 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x2B08 JUMPI PUSH1 0x7 PUSH0 MSTORE PUSH1 0x1 SHL PUSH32 0xA66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C688 ADD SWAP1 PUSH0 SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ISZERO PUSH2 0x2B3C JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526562616C616E6365206E6F74206E6565646564000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x2B08 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x2BB8 DUP3 PUSH2 0x2A0F JUMP JUMPDEST PUSH2 0x2BC5 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x29CE JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH2 0x2BF3 DUP3 SWAP5 PUSH2 0x2A0F JUMP JUMPDEST ADD SWAP1 PUSH1 0x20 CALLDATASIZE SWAP2 ADD CALLDATACOPY JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x2C09 DUP2 PUSH2 0x2BAE JUMP JUMPDEST SWAP1 PUSH0 JUMPDEST DUP2 DUP2 LT PUSH2 0x2C18 JUMPI POP POP SWAP1 JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x2C39 PUSH1 0x1 SWAP4 PUSH2 0x2AD0 JUMP JUMPDEST POP SLOAD AND PUSH0 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SLOAD PUSH2 0x2C52 DUP3 DUP7 PUSH2 0x2B9A JUMP JUMPDEST MSTORE ADD PUSH2 0x2C0C JUMP JUMPDEST ISZERO PUSH2 0x2C60 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920506572697068657279000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH32 0x248391FF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP3 DUP3 AND PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x44 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP1 SWAP2 PUSH1 0x20 SWAP2 DUP4 SWAP2 AND DUP2 DUP1 PUSH1 0x64 DUP2 ADD JUMPDEST SUB SWAP2 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x2D67 JUMPI PUSH0 SWAP2 PUSH2 0x2D38 JUMPI POP SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x2D5F JUMPI JUMPDEST DUP2 PUSH2 0x2D53 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x29CE JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x6B5 JUMPI MLOAD SWAP1 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x2D46 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x2D85 JUMPI JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x2DBC JUMPI DIV SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x6B5 JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x6B5 JUMPI SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x2E08 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E74204C697175696469747900000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x2D85 JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x2D85 JUMPI JUMP JUMPDEST PUSH2 0x2E88 PUSH2 0x306B JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x7 SLOAD SWAP1 PUSH2 0x2E97 DUP3 PUSH2 0x2A0F JUMP JUMPDEST SWAP2 PUSH2 0x2EA5 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x29CE JUMP JUMPDEST DUP1 DUP4 MSTORE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH2 0x2ED2 DUP3 PUSH2 0x2A0F JUMP JUMPDEST ADD CALLDATASIZE PUSH1 0x20 DUP6 ADD CALLDATACOPY PUSH2 0x2EE2 DUP2 PUSH2 0x2BAE JUMP JUMPDEST SWAP5 PUSH0 JUMPDEST DUP3 DUP2 LT PUSH2 0x2EF4 JUMPI POP POP POP POP SWAP2 SWAP1 JUMP JUMPDEST PUSH2 0x2EFE DUP2 DUP4 PUSH2 0x2B9A JUMP JUMPDEST MLOAD SWAP1 PUSH2 0x2710 SWAP2 DUP3 DUP2 MUL SWAP3 DUP2 DUP5 DIV EQ SWAP1 ISZERO OR ISZERO PUSH2 0x2D85 JUMPI PUSH2 0x2F20 DUP6 PUSH1 0x1 SWAP4 PUSH2 0x2DB2 JUMP JUMPDEST PUSH2 0x2F29 DUP3 PUSH2 0x2AD0 JUMP JUMPDEST POP DUP4 ADD SLOAD DUP4 SWAP2 DUP2 DUP2 GT ISZERO PUSH2 0x2F5E JUMPI SWAP1 PUSH2 0x2F41 SWAP2 PUSH2 0x2E66 JUMP JUMPDEST PUSH2 0x2F4B DUP4 DUP12 PUSH2 0x2B9A JUMP JUMPDEST MSTORE PUSH2 0x2F56 DUP3 DUP9 PUSH2 0x2B9A JUMP JUMPDEST MSTORE JUMPDEST ADD PUSH2 0x2EE5 JUMP JUMPDEST SWAP1 PUSH2 0x2F69 SWAP3 POP PUSH2 0x2E66 JUMP JUMPDEST PUSH2 0x2F73 DUP3 DUP11 PUSH2 0x2B9A JUMP JUMPDEST MSTORE PUSH0 PUSH2 0x2F7F DUP3 DUP9 PUSH2 0x2B9A JUMP JUMPDEST MSTORE PUSH2 0x2F58 JUMP JUMPDEST ISZERO PUSH2 0x2F8C JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E74206C697175696469747900000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH2 0x2FF2 PUSH2 0x2E80 JUMP JUMPDEST PUSH0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x3039 JUMPI PUSH2 0x3007 DUP2 DUP5 PUSH2 0x2B9A JUMP JUMPDEST MLOAD ISZERO ISZERO DUP1 PUSH2 0x3024 JUMPI JUMPDEST PUSH2 0x301C JUMPI PUSH1 0x1 ADD PUSH2 0x2FF4 JUMP JUMPDEST POP POP POP PUSH1 0x1 SWAP1 JUMP JUMPDEST POP PUSH2 0x302F DUP2 DUP4 PUSH2 0x2B9A JUMP JUMPDEST MLOAD PUSH1 0x8 SLOAD LT PUSH2 0x3010 JUMP JUMPDEST POP POP POP PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x3048 PUSH2 0x306B JUMP JUMPDEST POP PUSH1 0x2 SLOAD DUP1 ISZERO PUSH2 0x3065 JUMPI PUSH2 0x432 PUSH2 0x3062 SWAP3 PUSH1 0x9 SLOAD SWAP1 PUSH2 0x2D72 JUMP JUMPDEST SWAP1 JUMP JUMPDEST POP POP PUSH0 SWAP1 JUMP JUMPDEST PUSH1 0x7 SLOAD SWAP1 PUSH0 PUSH2 0x3079 DUP4 PUSH2 0x2BAE JUMP JUMPDEST SWAP3 PUSH0 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 PUSH1 0xB SLOAD AND SWAP1 JUMPDEST DUP3 DUP5 LT PUSH2 0x30A7 JUMPI POP POP POP POP SWAP2 SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 PUSH2 0x30E7 PUSH1 0x1 SWAP2 DUP4 PUSH2 0x30BB DUP9 PUSH2 0x2AD0 JUMP JUMPDEST POP SLOAD AND DUP6 DUP2 SUB PUSH2 0x30F1 JUMPI PUSH0 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SLOAD PUSH2 0x30DB DUP9 DUP12 PUSH2 0x2B9A JUMP JUMPDEST MSTORE JUMPDEST PUSH2 0x2671 DUP8 DUP11 PUSH2 0x2B9A JUMP JUMPDEST SWAP5 ADD SWAP3 SWAP2 SWAP1 PUSH2 0x3098 JUMP JUMPDEST DUP1 PUSH2 0x3108 SWAP2 PUSH0 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SLOAD SWAP1 PUSH2 0x32BF JUMP JUMPDEST PUSH2 0x3112 DUP9 DUP12 PUSH2 0x2B9A JUMP JUMPDEST MSTORE PUSH2 0x30DD JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 ISZERO PUSH2 0x3182 JUMPI PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x20 DUP3 PUSH2 0x3166 PUSH0 SWAP5 PUSH1 0x2 SLOAD PUSH2 0x2E73 JUMP JUMPDEST PUSH1 0x2 SSTORE DUP5 DUP5 MSTORE DUP4 DUP3 MSTORE PUSH1 0x40 DUP5 KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x24 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP5 AND SWAP3 DUP4 ISZERO PUSH2 0x328F JUMPI AND SWAP3 DUP4 ISZERO PUSH2 0x3182 JUMPI DUP3 PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SLOAD SWAP1 DUP3 DUP3 LT PUSH2 0x3237 JUMPI POP DUP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 PUSH1 0x20 SWAP3 DUP6 PUSH0 MSTORE PUSH0 DUP5 MSTORE SUB PUSH1 0x40 PUSH0 KECCAK256 SSTORE DUP5 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x24 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x6 SLOAD PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH32 0x248391FF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP4 DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP1 DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x20 SWAP2 DUP4 SWAP2 AND DUP2 DUP1 PUSH1 0x64 DUP2 ADD PUSH2 0x2D23 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC8 COINBASE BASEFEE LT 0xC3 PUSH14 0xC329497F0BF640C364C1D29C54D4 DUP1 PUSH17 0xBA851498E68EF0072A6864736F6C634300 ADDMOD NOT STOP CALLER LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ORIGIN CREATE 0xF8 ADDRESS 0xF 0xD0 PUSH32 0x3D450F8E04567EFAF833E1F6903E7062539755A2A77CCCA51664736F6C634300 ADDMOD NOT STOP CALLER ","sourceMap":"1731:4713:16:-:0;;;;;;;1171:4:2;1163:13;;1731:4713:16;;;;;;1163:13:2;1731:4713:16;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":5945,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_address_13183":{"entryPoint":5910,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_array_address_dyn_fromMemory":{"entryPoint":6361,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_array_address_dyn":{"entryPoint":6210,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_and_zero_memory_array_array_address_dyn":{"entryPoint":6595,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_array_address_dyn":{"entryPoint":6090,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_bytes":{"entryPoint":6283,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":5980,"id":null,"parameterSlots":2,"returnSlots":0},"fun_checkInitializing":{"entryPoint":6979,"id":370,"parameterSlots":0,"returnSlots":0},"fun_checkOwner":{"entryPoint":6867,"id":122,"parameterSlots":0,"returnSlots":0},"fun_poolExist":{"entryPoint":6512,"id":4609,"parameterSlots":1,"returnSlots":1},"fun_transferOwnership_inner":{"entryPoint":6674,"id":null,"parameterSlots":1,"returnSlots":0},"fun_verifyCallResultFromTarget":{"entryPoint":7068,"id":1967,"parameterSlots":3,"returnSlots":1},"memory_array_index_access_address_dyn":{"entryPoint":6341,"id":null,"parameterSlots":2,"returnSlots":1},"storage_array_index_access_address_dyn":{"entryPoint":6114,"id":null,"parameterSlots":1,"returnSlots":2}},"generatedSources":[],"immutableReferences":{"468":[{"length":32,"start":2969},{"length":32,"start":3250}]},"linkReferences":{},"object":"60806040818152600480361015610014575f80fd5b5f3560e01c92836301d22ccd146116c8575082632d5e94a714610add5782633069873b1461106757826341d1de9714610ffe5782634276b97b14610f395782634f1ef28614610c0e57826352d1902d14610b53578263531aa03e14610add578263715018a614610a2157826377aace1a146109cf57826389345efb146109835782638da5cb5b146109125782638f2248bc14610793578263ad3cb1cc146106a6578263b4340e6a146104b6578263b4ac68601461047b578263c4d66de81461028a57508163d88ff1f4146101cb57508063e9b31cff146101495763f2fde38b146100fc575f80fd5b346101455760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261014557610143610136611716565b61013e611ad3565b611a12565b005b5f80fd5b346101455760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101455773ffffffffffffffffffffffffffffffffffffffff610195611716565b61019d611ad3565b167fffffffffffffffffffffffff000000000000000000000000000000000000000060035416176003555f80f35b34610145575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101455780515f8054808352818052602080840194927f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56392915b82821061025d576102598686610247828b038361175c565b51918291602083526020830190611842565b0390f35b835473ffffffffffffffffffffffffffffffffffffffff168752958601956001938401939091019061022f565b346101455760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610145576102c1611716565b907ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0091825460ff81861c16159267ffffffffffffffff821680159081610473575b6001149081610469575b159081610460575b50610439575090818360017fffffffffffffffffffffffffffffffffffffffffffffffff000000000000000073ffffffffffffffffffffffffffffffffffffffff9516178655610404575b50610368611b43565b610370611b43565b610378611b43565b61038133611a12565b167fffffffffffffffffffffffff000000000000000000000000000000000000000060025416176002556103b157005b7fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d291817fffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff602093541690555160018152a1005b7fffffffffffffffffffffffffffffffffffffffffffffff00000000000000000016680100000000000000011784558561035f565b85517ff92ee8a9000000000000000000000000000000000000000000000000000000008152fd5b90501587610314565b303b15915061030c565b859150610302565b5034610145575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610145576020905f549051908152f35b346101455760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610145576104ed611716565b905f54916104fa836119c3565b925f925f9073ffffffffffffffffffffffffffffffffffffffff8094165b83831061056d575b5050505061052d826119c3565b925f5b83811061054c5785516020808252819061025990820188611842565b808361055a600193856118c5565b511661056682886118c5565b5201610530565b8461057d849794989695986117e2565b90549060031b1c16908851977f67e4ac2c0000000000000000000000000000000000000000000000000000000089525f898581865afa98891561069c575f99610678575b505f5b895181101561066a5782876105d9838d6118c5565b5116146105e8576001016105c4565b50939190949597506105fa82896118c5565b527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811461063e57600101945b86518614610639576001019192610518565b610520565b6011827f4e487b71000000000000000000000000000000000000000000000000000000005f525260245ffd5b509396915093949650610627565b6106959199503d805f833e61068d818361175c565b8101906118d9565b978a6105c1565b8a513d5f823e3d90fd5b9034610145575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610145578051918183019083821067ffffffffffffffff831117610767575081526005825260208201917f352e302e3000000000000000000000000000000000000000000000000000000083527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8351948593602085525180918160208701528686015e5f85828601015201168101030190f35b6041907f4e487b71000000000000000000000000000000000000000000000000000000005f525260245ffd5b903461014557807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610145576107ca611716565b916024359267ffffffffffffffff90818516809503610145577ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00928354928660ff85881c16918215610905575b50506108de577fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d260208787877fffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff68010000000000000000847fffffffffffffffffffffffffffffffffffffffffffffff0000000000000000008b73ffffffffffffffffffffffffffffffffffffffff8c167fffffffffffffffffffffffff0000000000000000000000000000000000000000600254161760025516171716905551908152a1005b84517ff92ee8a9000000000000000000000000000000000000000000000000000000008152fd5b8516101590508688610817565b5034610145575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101455760209073ffffffffffffffffffffffffffffffffffffffff7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930054169051908152f35b50346101455760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610145576020906109c66109c1611716565b611970565b90519015158152f35b5034610145575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101455760209073ffffffffffffffffffffffffffffffffffffffff600354169051908152f35b34610145575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261014557610a57611ad3565b5f73ffffffffffffffffffffffffffffffffffffffff7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c1993008054907fffffffffffffffffffffffff000000000000000000000000000000000000000082169055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b503461014557807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261014557602090610b17611716565b610b1f611739565b73ffffffffffffffffffffffffffffffffffffffff8092165f526001845281835f2091165f528352815f2054169051908152f35b9034610145575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101455773ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000163003610be857602090517f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc8152f35b517fe07c8dba000000000000000000000000000000000000000000000000000000008152fd5b817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261014557610c3f611716565b602492833567ffffffffffffffff811161014557366023820112156101455780840135610c6b8161188b565b93610c788451958661175c565b818552602091828601933689838301011161014557815f928a86930187378701015273ffffffffffffffffffffffffffffffffffffffff807f000000000000000000000000000000000000000000000000000000000000000016803014908115610f0b575b50610ee357610cea611ad3565b81169484517f52d1902d000000000000000000000000000000000000000000000000000000008152838189818a5afa5f9181610eb4575b50610d5557505050505051917f4c9c8ce3000000000000000000000000000000000000000000000000000000008352820152fd5b9087878794938b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc91828103610e875750853b15610e5a5750817fffffffffffffffffffffffff00000000000000000000000000000000000000008254161790558451907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b5f80a2825115610e275750505f6101439581925190845af4913d15610e1d573d610e0f610e068261188b565b9251928361175c565b81525f81943d92013e611b9c565b5060609250611b9c565b9450945050505034610e3557005b7fb398979f000000000000000000000000000000000000000000000000000000008152fd5b83838851917f4c9c8ce3000000000000000000000000000000000000000000000000000000008352820152fd5b84908851917faa1d49a4000000000000000000000000000000000000000000000000000000008352820152fd5b9091508481813d8311610edc575b610ecc818361175c565b810103126101455751908a610d21565b503d610ec2565b8685517fe07c8dba000000000000000000000000000000000000000000000000000000008152fd5b9050817f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5416141589610cdd565b346101455760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610145575f73ffffffffffffffffffffffffffffffffffffffff610f86611716565b168351928380927f67e4ac2c0000000000000000000000000000000000000000000000000000000082525afa908115610ff45791610259925f92610fd8575b5051918291602083526020830190611842565b610fed9192503d805f833e61068d818361175c565b9083610fc5565b82513d5f823e3d90fd5b346101455760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101455735905f548210156101455773ffffffffffffffffffffffffffffffffffffffff6110586020936117e2565b92905490519260031b1c168152f35b346101455760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101455767ffffffffffffffff918135838111610145573660238201121561014557808301359360246110c4866117ca565b926110d18551948561175c565b868452602096828886019160051b83010191368311610145578301905b82821061169c575050508035828111610145573660238201121561014557808601359061111a826117ca565b906111278751928361175c565b8282528882019260051b81018401908336831161014557858b9201905b83821061168d575050505060449173ffffffffffffffffffffffffffffffffffffffff9485600354169081156116325760019485895111156115d8578851855103611557575f865b61141a575b5050866002541693895194613cb680870193878510908511176113ef5790869594939291611c3d8739825260a08d8301528c6111d060a084018c611842565b8381038d8501529151808352910193905f888f5b8383106113d857505050604435606084015250506080015203905ff080156113ce578316955f54680100000000000000008110156113a3579061123082848a9897969594015f556117e2565b81549060031b908689831b921b1916179055815f905b611298575b505050507f93de7d9de9f3e05ba87a0170fcbb71af623439caf5e5079587b9d38c5da9b0d19161128a9160025416855192839287845287840190611842565b90888301520390a251908152f35b909192939495865182101561139b57508281018082116113705783929190835b6112ca575b5082018896959493611246565b879391929351811015611367578190876112e4858b6118c5565b51165f52818c52895f20886112f9838c6118c5565b51165f528c52895f207fffffffffffffffffffffffff0000000000000000000000000000000000000000908c8282541617905588611337838c6118c5565b51165f52828d528a5f208961134c878d6118c5565b51165f528d528b8b5f209182541617905501819392916112b8565b929190926112bd565b846011847f4e487b71000000000000000000000000000000000000000000000000000000005f52525ffd5b95949361124b565b836041837f4e487b71000000000000000000000000000000000000000000000000000000005f52525ffd5b85513d5f823e3d90fd5b84518852899850968701969093019201888f6111e4565b8860418e7f4e487b71000000000000000000000000000000000000000000000000000000005f52525ffd5b89518110156115525786810180821161152757879291908b8f8c8f875b61144a575b50505050508201909161118c565b90919293949596845186101561151a57508461147a918361146b89886118c5565b51165f528d85525f20946118c5565b51165f5252898c5f205416611499578792919083018b8f8c8f87611437565b8b517f08c379a0000000000000000000000000000000000000000000000000000000008152808e018f90526021818b01527f506f6f6c20616c72656164792065786973747320666f72207468697320706169818501527f72000000000000000000000000000000000000000000000000000000000000006064820152608490fd5b969594509083929161143c565b8860118e7f4e487b71000000000000000000000000000000000000000000000000000000005f52525ffd5b611191565b60848b6022898f8e51937f08c379a00000000000000000000000000000000000000000000000000000000085528401528201527f41737365747320616e642077656967687473206c656e677468206d69736d617460448201527f63680000000000000000000000000000000000000000000000000000000000006064820152fd5b60648b8d89818e51937f08c379a00000000000000000000000000000000000000000000000000000000085528401528201527f4174206c656173742074776f20617373657473206172652072657175697265646044820152fd5b60648a6011888e8d51937f08c379a00000000000000000000000000000000000000000000000000000000085528401528201527f506572697068657279206e6f74207365740000000000000000000000000000006044820152fd5b81358152908201908201611144565b813573ffffffffffffffffffffffffffffffffffffffff811681036101455781529088019088016110ee565b34610145575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101455760209073ffffffffffffffffffffffffffffffffffffffff600254168152f35b6004359073ffffffffffffffffffffffffffffffffffffffff8216820361014557565b6024359073ffffffffffffffffffffffffffffffffffffffff8216820361014557565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff82111761179d57604052565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b67ffffffffffffffff811161179d5760051b60200190565b5f54811015611815575f80527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56301905f90565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b9081518082526020808093019301915f5b828110611861575050505090565b835173ffffffffffffffffffffffffffffffffffffffff1685529381019392810192600101611853565b67ffffffffffffffff811161179d57601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b80518210156118155760209160051b010190565b60209081818403126101455780519067ffffffffffffffff821161014557019180601f8401121561014557825161190f816117ca565b9361191d604051958661175c565b818552838086019260051b820101928311610145578301905b828210611944575050505090565b815173ffffffffffffffffffffffffffffffffffffffff81168103610145578152908301908301611936565b5f905f54915b828110611984575050505f90565b61198d816117e2565b9073ffffffffffffffffffffffffffffffffffffffff90548185169260031b1c16146119bb57600101611976565b505050600190565b906119cd826117ca565b6119da604051918261175c565b8281527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0611a0882946117ca565b0190602036910137565b73ffffffffffffffffffffffffffffffffffffffff809116908115611aa3577f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300805490837fffffffffffffffffffffffff00000000000000000000000000000000000000008316179055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e05f80a3565b60246040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081525f6004820152fd5b73ffffffffffffffffffffffffffffffffffffffff7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930054163303611b1357565b60246040517f118cdaa7000000000000000000000000000000000000000000000000000000008152336004820152fd5b60ff7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a005460401c1615611b7257565b60046040517fd7e6bcf8000000000000000000000000000000000000000000000000000000008152fd5b90611bdb5750805115611bb157805190602001fd5b60046040517f1425ea42000000000000000000000000000000000000000000000000000000008152fd5b81511580611c33575b611bec575090565b60249073ffffffffffffffffffffffffffffffffffffffff604051917f9996b315000000000000000000000000000000000000000000000000000000008352166004820152fd5b50803b15611be456fe6080806040523461042f57613cb6803803809161001c82856108f4565b8339810160a08282031261042f5761003382610917565b60208301519091906001600160401b03811161042f5783019181601f8401121561042f578251926100638461092b565b9361007160405195866108f4565b80855260208086019160051b8301019184831161042f57602001905b8282106108c15750505060408401516001600160401b03811161042f5784019180601f8401121561042f5782516100c38161092b565b936100d160405195866108f4565b81855260208086019260051b82010192831161042f57602001905b8282106108b157505050610107608060608601519501610917565b604051610113816108d9565b6009815268042616c756e69204c560bc1b602082015260405190610136826108d9565b6009825268042414c554e492d4c560bc1b60208301528051906001600160401b03821161048c5760035490600182811c921680156108a7575b60208310146107885781601f849311610839575b50602090601f83116001146107b1575f926107a6575b50508160011b915f199060031b1c1916176003555b8051906001600160401b03821161048c5760045490600182811c9216801561079c575b60208310146107885781601f84931161071a575b50602090601f8311600114610696575f9261068b575b50508160011b915f199060031b1c1916176004555b6001600555600a80546001600160a01b03199081166001600160a01b039384161790915560068054909116918316919091179055670de0b6b3a7640000600955825182510361063b575f5b835181101561051b576001600160a01b036102768286610942565b5116156104d6576102878184610942565b51156104a0576001600160a01b0361029f8286610942565b51166102ab8285610942565b5160408051929083018084116001600160401b039091111761048c5760408301604052825260208201526007546801000000000000000081101561048c5760018101806007558110156104785760075f5281517fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c68860019290921b91820180546001600160a01b039283166001600160a01b03199091161790556020909201517fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c689909101556103798286610942565b511660018060a01b0360065416604051636eb1769f60e11b8152306004820152816024820152602081604481865afa90811561043b575f91610446575b50156103c7575b505060010161025b565b5f916044602092604051948593849263095ea7b360e01b84526004840152811960248401525af1801561043b576103ff575b806103bd565b6020813d602011610433575b81610418602093836108f4565b8101031261042f57518015150361042f575f6103f9565b5f80fd5b3d915061040b565b6040513d5f823e3d90fd5b90506020813d602011610470575b81610461602093836108f4565b8101031261042f57515f6103b6565b3d9150610454565b634e487b7160e01b5f52603260045260245ffd5b634e487b7160e01b5f52604160045260245ffd5b60405162461bcd60e51b815260206004820152600e60248201526d125b9d985b1a59081dd95a59da1d60921b6044820152606490fd5b60405162461bcd60e51b815260206004820152601560248201527f496e76616c6964206173736574206164647265737300000000000000000000006044820152606490fd5b50600884905560405163bc06e81d60e01b815290602090829060049082906001600160a01b03165afa90811561043b575f91610601575b50600b80546001600160a01b0319166001600160a01b03929092169190911790555f90815b81518310156105b35761058a8383610942565b51810180911161059f57600190920191610577565b634e487b7160e01b5f52601160045260245ffd5b612710036105ca5760405161335f90816109578239f35b60405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964207765696768747360881b6044820152606490fd5b90506020813d602011610633575b8161061c602093836108f4565b8101031261042f5761062d90610917565b82610552565b3d915061060f565b60405162461bcd60e51b815260206004820152602260248201527f41737365747320616e642077656967687473206c656e677468206d69736d61746044820152610c6d60f31b6064820152608490fd5b015190505f806101fb565b60045f9081527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b9350601f198516905b81811061070257509084600195949392106106ea575b505050811b01600455610210565b01515f1960f88460031b161c191690555f80806106dc565b929360206001819287860151815501950193016106c6565b60045f529091507f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b601f840160051c8101916020851061077e575b90601f859493920160051c01905b81811061077057506101e5565b5f8155849350600101610763565b9091508190610755565b634e487b7160e01b5f52602260045260245ffd5b91607f16916101d1565b015190505f80610199565b60035f90815293507fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b91905b601f198416851061081e576001945083601f19811610610806575b505050811b016003556101ae565b01515f1960f88460031b161c191690555f80806107f8565b818101518355602094850194600190930192909101906107dd565b60035f529091507fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b601f840160051c8101916020851061089d575b90601f859493920160051c01905b81811061088f5750610183565b5f8155849350600101610882565b9091508190610874565b91607f169161016f565b81518152602091820191016100ec565b602080916108ce84610917565b81520191019061008d565b604081019081106001600160401b0382111761048c57604052565b601f909101601f19168101906001600160401b0382119082101761048c57604052565b51906001600160a01b038216820361042f57565b6001600160401b03811161048c5760051b60200190565b80518210156104785760209160051b01019056fe60a0604081815260049182361015610015575f80fd5b5f925f3560e01c91826301d22ccd1461281e5750816306fdde03146126d55781630723c9991461236a5781630902f1ac1461231c578163095ea7b31461221757816318160ddd146121db5781631a6865021461219957816322acb8671461211e57816323b872dd14611fc9578163313ce56714611f9057816336bf6e3914611f3e5781633dff5b7f14611e545781634aa0665214611e395781635568081a14611a2557816367a6c440146119ea57816367e4ac2c1461195b5781636e81221c1461157657816370a082311461151557816377aace1a146114c25781637e04795a146113fd5781637fec8d38146113c057816389ab35321461133657816389afcb4414610c175781638a77c8dc14610bd357816395d89b4114610a7d578163a9059cbb14610a2e578163b2b55d7014610802578163c2ee3a08146109f1578163cdf456e11461099e578163cf8fa764146108e2578163d14ef46d14610864578163d66bd52414610802578163dd62ed3e1461078d578163de836ebd146101e7575063e73faa2d146101a3575f80fd5b346101e357817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101e3576020906101dc613040565b9051908152f35b5080fd5b9050823461078a57827ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261078a576102206128b4565b91602492833567ffffffffffffffff8111610786576102429036908401612a27565b9273ffffffffffffffffffffffffffffffffffffffff9261026884600a54163314612c59565b6002549582610275612bfd565b9760079860075490805182036107295781156106cc579086915b8183106105415750505081156104bf57806104145750935b84156103b85790846102e18a979695949333865260209b868d978852808a83822054946102d48882613118565b1698898252522054612e66565b0361035d5750505f5b865481101561032b578084610300600193612ad0565b50541661030d8289612b9a565b51905f52600c8a52610323875f20918254612e73565b9055016102ea565b878386847f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d4121396885848351858152a251908152f35b90600b6064928a8851937f08c379a00000000000000000000000000000000000000000000000000000000085528401528201527f4d696e74204661696c65640000000000000000000000000000000000000000006044820152fd5b606483600d8460208d51937f08c379a00000000000000000000000000000000000000000000000000000000085528401528201527f4d696e74207174792069732030000000000000000000000000000000000000006044820152fd5b61041c61306b565b5091821561043d57610437929161043291612d72565b612db2565b936102a7565b60848560268660208f51937f08c379a00000000000000000000000000000000000000000000000000000000085528401528201527f546f74616c206c6971756964697479206d75737420626520677265617465722060448201527f7468616e203000000000000000000000000000000000000000000000000000006064820152fd5b60848460228560208e51937f08c379a00000000000000000000000000000000000000000000000000000000085528401528201527f546f74616c2076616c7565206d7573742062652067726561746572207468616e60448201527f20300000000000000000000000000000000000000000000000000000000000006064820152fd5b9091938961054e86612ad0565b5054168d51907f70a08231000000000000000000000000000000000000000000000000000000008252308983015260209182818a81855afa9081156106c0578b9161068f575b508015610633576105b0906105a98987612b9a565b5190612e66565b9182156105d75750916105c86105ce926001946132bf565b90612e73565b9401919061028f565b8f601d8a6064938d9351937f08c379a00000000000000000000000000000000000000000000000000000000085528401528201527f416d6f756e74206d7573742062652067726561746572207468616e20300000006044820152fd5b8f8a601e8b8660649451937f08c379a00000000000000000000000000000000000000000000000000000000085528401528201527f42616c616e6365206d7573742062652067726561746572207468616e203000006044820152fd5b90508281813d83116106b9575b6106a681836129ce565b810103126106b557515f610594565b5f80fd5b503d61069c565b50508e513d8b823e3d90fd5b5060648560098660208f51937f08c379a00000000000000000000000000000000000000000000000000000000085528401528201527f4e6f2061737365747300000000000000000000000000000000000000000000006044820152fd5b5060648560178660208f51937f08c379a00000000000000000000000000000000000000000000000000000000085528401528201527f496e76616c6964207265736572766573206c656e6774680000000000000000006044820152fd5b8380fd5b80fd5b5050346101e357807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101e3576020916107c86128b4565b826107d16128d7565b9273ffffffffffffffffffffffffffffffffffffffff8093168152600186522091165f528252805f20549051908152f35b5050346101e35760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101e3578060209273ffffffffffffffffffffffffffffffffffffffff6108546128b4565b168152600c845220549051908152f35b839150346101e35760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101e357359060075482101561078a57506108ac90612ad0565b508054600190910154915173ffffffffffffffffffffffffffffffffffffffff90911681526020810191909152604090f35b0390f35b9050823461078a5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261078a575080359061092061306b565b8092915051831015610941576020846109398585612b9a565b519051908152f35b60649060208551917f08c379a0000000000000000000000000000000000000000000000000000000008352820152601360248201527f496e76616c696420617373657420696e646578000000000000000000000000006044820152fd5b5050346101e357817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101e35760209073ffffffffffffffffffffffffffffffffffffffff600b54169051908152f35b5050346101e357817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101e3576020906009549051908152f35b5050346101e357807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101e357602090610a76610a6c6128b4565b60243590336131b2565b5160018152f35b8383346101e357817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101e35780519180938054916001908360011c9260018516948515610bc9575b6020958686108114610b9d57858952908115610b5b5750600114610b03575b6108de8787610af9828c03836129ce565b519182918261286c565b81529295507f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5b828410610b4857505050826108de94610af992820101948680610ae8565b8054868501880152928601928101610b2a565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00168887015250505050151560051b8301019250610af9826108de8680610ae8565b6024846022857f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b93607f1693610ac9565b5050346101e357817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101e357602090610c0e612fea565b90519015158152f35b839150346101e3576020807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261133257610c526128b4565b9273ffffffffffffffffffffffffffffffffffffffff93610c7885600a54163314612c59565b308252818352858220549081156112d65760025495861561127a576007805493610ca185612bae565b9461012c82027ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffed48382040161124e57612710610cdf91048093612e66565b99875b82811061119657505050308652858752610d01898b8820541015612f85565b878784600654168c51928380927f3b19e84a0000000000000000000000000000000000000000000000000000000082525afa908115611141579188918a9796959493899161114b575b5090610da792918d5193849283927fa9059cbb000000000000000000000000000000000000000000000000000000009b8c855284016020909392919373ffffffffffffffffffffffffffffffffffffffff60408201951681520152565b03818a305af1908115611141578791611124575b50156110c857308652858752610dd6898b8820541015612f85565b301561109957305f525f8752895f2054898110611054578990305f525f8952038a5f205588600254036002555f8a518a81527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef893092a3855b8154811015610fd9578783610e4383612ad0565b5054168c51918280927f70a082310000000000000000000000000000000000000000000000000000000082528d309083015260249485915afa8015610fa0578990610faa575b610ea09150610e988489612b9a565b511115612e01565b8b8986888d8c8c610ef7610ec18a8d610eb882612ad0565b50541696612b9a565b51975197889687958694855284016020909392919373ffffffffffffffffffffffffffffffffffffffff60408201951681520152565b03925af1908115610fa0578991610f73575b5015610f185750600101610e2f565b8960156064928b8f51937f08c379a00000000000000000000000000000000000000000000000000000000085528401528201527f4173736574207472616e73666572206661696c656400000000000000000000006044820152fd5b610f9391508a3d8c11610f99575b610f8b81836129ce565b810190612de9565b8d610f09565b503d610f81565b8d513d8b823e3d90fd5b508981813d8311610fd2575b610fc081836129ce565b810103126106b557610ea09051610e89565b503d610fb6565b50918991868a89935f5b8754811015611024578085610ff9600193612ad0565b505416611006828c612b9a565b51905f52600c885261101c895f20918254612e66565b905501610fe3565b5084847fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca59288519485521692a280f35b8a517fe450d38c00000000000000000000000000000000000000000000000000000000815230818b019081526020810192909252604082018b90529081906060010390fd5b602488878c51917f96c6fd1e000000000000000000000000000000000000000000000000000000008352820152fd5b606488888c51917f08c379a0000000000000000000000000000000000000000000000000000000008352820152601360248201527f466565207472616e73666572206661696c6564000000000000000000000000006044820152fd5b61113b9150883d8a11610f9957610f8b81836129ce565b8b610dbb565b8b513d89823e3d90fd5b9280929495969798508391503d831161118f575b61116981836129ce565b8101031261118b5751838116810361118b578895949392918891610da7610d4a565b8680fd5b503d61115f565b8c8a8c6024896111a586612ad0565b5054169351809481937f70a0823100000000000000000000000000000000000000000000000000000000835230908301525afa908115611244578392918e918c9161120d575b50926104326111fc92600195612d72565b611206828b612b9a565b5201610ce2565b935050508a82813d831161123d575b61122681836129ce565b810103126106b55790518291908d906104326111eb565b503d61121c565b8e513d8c823e3d90fd5b60248860118c7f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b606486868a51917f08c379a0000000000000000000000000000000000000000000000000000000008352820152600c60248201527f4e6f206c697175696469747900000000000000000000000000000000000000006044820152fd5b606485858951917f08c379a0000000000000000000000000000000000000000000000000000000008352820152601c60248201527f5368617265206d7573742062652067726561746572207468616e2030000000006044820152fd5b8280fd5b82843461078a57807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261078a5761136e612e80565b92908151938285938401908452825180915260608401926020809101955b8281106113a75785806108de878783820360208501526128fa565b865115158552958101958795509381019360010161138c565b5050346101e357817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101e3576020906008549051908152f35b919050346113325760209160207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126107865780359067ffffffffffffffff82116114be5761145091369101612a27565b9073ffffffffffffffffffffffffffffffffffffffff9261147684600a54163314612c59565b845b6007548110156114ba57808561148f600193612ad0565b50541661149c8287612b9a565b51908852600c84526114b2858920918254612e66565b905501611478565b8580f35b8480fd5b5050346101e357817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101e35760209073ffffffffffffffffffffffffffffffffffffffff600a54169051908152f35b5050346101e35760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101e3578060209273ffffffffffffffffffffffffffffffffffffffff6115676128b4565b16815280845220549051908152f35b9050346113325760807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112611332576115af6128b4565b926115b86128d7565b6044356064359573ffffffffffffffffffffffffffffffffffffffff9687811681036106b55760026005541461193357600260055587841693888316928584146118d65784156118795788517f23b872dd00000000000000000000000000000000000000000000000000000000815260206080819052338a83019081523081830152604081018890528290819060600103818b895af1801561186f57916116679391879361184e575b50612cbe565b9787517f70a08231000000000000000000000000000000000000000000000000000000008152308882015260805181602481895afa80156117e2578a908890611818575b6116b792501015612e01565b61012c808a02908a8204148a1517156117ec576127106116d891048a612e66565b968851907fa9059cbb00000000000000000000000000000000000000000000000000000000825281806117348b876080519584016020909392919373ffffffffffffffffffffffffffffffffffffffff60408201951681520152565b03818a8a5af180156117e257936117b09795937fcd3829a3813dc3cdd188fd3d01dcf3268c16be2fdd2dd21d0665418816e460628b83958a9895829b966117c1575b508151938885528d6080518601521692a48352600c6080515261179d848420918254612e73565b90558152600c6080515220918254612e73565b905560016005555190815260805190f35b6117db906080513d60805111610f9957610f8b81836129ce565b505f611776565b89513d89823e3d90fd5b60248760118a7f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b50506080513d8111611847575b61182f81836129ce565b8160805191810103126106b557896116b791516116ab565b503d611825565b611868906080513d60805111610f9957610f8b81836129ce565b505f611661565b8a513d8a823e3d90fd5b60648860208b51917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602060248201527f416d6f756e74206d7573742062652067726561746572207468616e207a65726f6044820152fd5b60648860208b51917f08c379a0000000000000000000000000000000000000000000000000000000008352820152601a60248201527f43616e6e6f742073776170207468652073616d6520746f6b656e0000000000006044820152fd5b8587517f3ee5aeb5000000000000000000000000000000000000000000000000000000008152fd5b82843461078a57807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261078a5760075461199781612bae565b915b8181106119b5578351602080825281906108de90820186612a87565b8073ffffffffffffffffffffffffffffffffffffffff6119d6600193612ad0565b5054166119e38286612b9a565b5201611999565b5050346101e357817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101e3576020905161012c8152f35b9050346106b5576020907ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc9282843601126106b557611a626128b4565b91611a73611a6e612fea565b612b35565b6002546103e890818102918183041490151715611e0d576127109073ffffffffffffffffffffffffffffffffffffffff8095165f525f865204825f205410611db257600794600754611ac481612bae565b91611ace82612bae565b915f5b818110611d7957505085600a5416803b156106b5575f8091868851809481937ffe1101160000000000000000000000000000000000000000000000000000000083525af18015611d6f57611d5a575b5090889186600654166008549088600b5416813b15611d565788517f0325192d00000000000000000000000000000000000000000000000000000000815260c0818a01529486948694859387938593611b8f91611b8060c487018f612a87565b918683030160248701526128fa565b91306044850152306064850152608484015260a483015203925af18015611d4c57611d38575b505b8654811015611cfa5784611bca82612ad0565b50541684517f70a0823100000000000000000000000000000000000000000000000000000000815230858201528781602481855afa908115611cf0579088918b91611cbf575b5082611c7d938c52600c835281888d205588600a54168c89518096819582947fa9059cbb0000000000000000000000000000000000000000000000000000000084528c84016020909392919373ffffffffffffffffffffffffffffffffffffffff60408201951681520152565b03925af18015611cb5579060019291611c98575b5001611bb7565b611cae90883d8a11610f9957610f8b81836129ce565b505f611c91565b85513d8b823e3d90fd5b82819392503d8311611ce9575b611cd681836129ce565b810103126106b557518790611c7d611c10565b503d611ccc565b86513d8c823e3d90fd5b8351868152889033907f279b343370f587af7fb675ae7c8578e9c8abcc373236ad02c501a4771fe7a7b89080611d32818c0188612a87565b0390a280f35b611d419061298d565b61118b57865f611bb5565b85513d84823e3d90fd5b8580fd5b611d669192995061298d565b5f97905f611b20565b86513d5f823e3d90fd5b8088611d86600193612ad0565b505416611d938288612b9a565b5281611d9e82612ad0565b500154611dab8287612b9a565b5201611ad1565b8360649251917f08c379a0000000000000000000000000000000000000000000000000000000008352820152601160248201527f556e646572203525204c502073686172650000000000000000000000000000006044820152fd5b6011827f4e487b71000000000000000000000000000000000000000000000000000000005f525260245ffd5b82346106b5576020906101dc611e4e3661292d565b91612cbe565b9050346106b557817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126106b55780359067ffffffffffffffff82116106b557611ea291369101612a27565b9060243580151581036106b55773ffffffffffffffffffffffffffffffffffffffff92611ed484600a54163314612c59565b5f5b600754811015611f3c578085611eed600193612ad0565b505416611efa8285612b9a565b51908515611f20575f52600c602052611f17865f20918254612e73565b90555b01611ed6565b5f52600c602052611f35865f20918254612e66565b9055611f1a565b005b82346106b5575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126106b5576108de611f7861306b565b839291925193849384528060208501528301906128fa565b82346106b5575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126106b5576020905160128152f35b9050346106b557611fd93661292d565b9273ffffffffffffffffffffffffffffffffffffffff83929316805f526001602052855f20335f52602052855f2054917fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff830361203f575b602087610a768888886131b2565b8583106120d95781156120aa57331561207b57505f90815260016020908152868220338352815290869020918590039091558290610a76612031565b6024905f8851917f94280d62000000000000000000000000000000000000000000000000000000008352820152fd5b6024905f8851917fe602df05000000000000000000000000000000000000000000000000000000008352820152fd5b86517ffb8f41b2000000000000000000000000000000000000000000000000000000008152339181019182526020820193909352604081018690528291506060010390fd5b82346106b5575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126106b55760075461215981612bae565b905f5b818110612178578351602080825281906108de908201866128fa565b8060016121858193612ad0565b5001546121928286612b9a565b520161215c565b82346106b5575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126106b5576020906121d361306b565b509051908152f35b82346106b5575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126106b5576020906002549051908152f35b82346106b557807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126106b55761224e6128b4565b6024359033156122ed5773ffffffffffffffffffffffffffffffffffffffff169081156122be5760209350335f5260018452825f20825f52845280835f205582519081527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925843392a35160018152f35b6024845f8551917f94280d62000000000000000000000000000000000000000000000000000000008352820152fd5b6024845f8551917fe602df05000000000000000000000000000000000000000000000000000000008352820152fd5b82346106b5575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126106b5576108de90612357612bfd565b90519182916020835260208301906128fa565b82346106b557602090817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126106b5576123a46128b4565b916123b0611a6e612fea565b6123b861306b565b9490600754906123c782612bae565b965f5b838110612680575050505f905f905b80821061265f5750505f5b8651811015612618576123f78188612b9a565b51612405575b6001016123e4565b61248a6124128289612b9a565b518561241d84612ad0565b5054600654600b548a517f248391ff00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9182168a82019081529382166020850152604084019590955293948592918516918391829160600190565b03915afa91821561260e575f926125df575b5081156125835761251c8683836124b287612ad0565b50541684600a54165f8a8d51968795869485937f23b872dd0000000000000000000000000000000000000000000000000000000085523390850160409194939294606082019573ffffffffffffffffffffffffffffffffffffffff80921683521660208201520152565b03925af18015612579579060019493929161255c575b5061253c83612ad0565b5054165f52600c8652612553875f20918254612e73565b905590506123fd565b61257290883d8a11610f9957610f8b81836129ce565b508a612532565b88513d5f823e3d90fd5b606485878951917f08c379a0000000000000000000000000000000000000000000000000000000008352820152601b60248201527f496e76616c696420746f6b656e20616d6f756e7420746f2061646400000000006044820152fd5b9091508581813d8311612607575b6125f781836129ce565b810103126106b55751908961249c565b503d6125ed565b87513d5f823e3d90fd5b837fa95ad530009c6f929555e70a66aadbeae7231e45756c5b028ca77fbaa376e73e61265a8988612649878c613118565b5191829185835233958301906128fa565b0390a2005b9091612678600191612671858b612b9a565b5190612e73565b9201906123d9565b8061271061269c60016126938195612ad0565b50015486612d72565b04806126a88386612b9a565b51106126b6575b50016123ca565b6126c4906105a98386612b9a565b6126ce828c612b9a565b528a6126af565b82346106b5575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126106b5578051905f9260035460018160011c91600181168015612814575b60209485851082146127e857508387529081156127aa5750600114612750575b505050610af9826108de9403836129ce565b60035f9081529295507fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b82841061279757505050826108de94610af9928201019461273e565b805486850188015292860192810161277b565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016868501525050151560051b8301019250610af9826108de61273e565b6022907f4e487b71000000000000000000000000000000000000000000000000000000005f525260245ffd5b92607f169261271e565b346106b5575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126106b55760209073ffffffffffffffffffffffffffffffffffffffff600654168152f35b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f602060409481855280519182918282880152018686015e5f8582860101520116010190565b6004359073ffffffffffffffffffffffffffffffffffffffff821682036106b557565b6024359073ffffffffffffffffffffffffffffffffffffffff821682036106b557565b9081518082526020808093019301915f5b828110612919575050505090565b83518552938101939281019260010161290b565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc60609101126106b55773ffffffffffffffffffffffffffffffffffffffff9060043582811681036106b5579160243590811681036106b5579060443590565b67ffffffffffffffff81116129a157604052565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff8211176129a157604052565b67ffffffffffffffff81116129a15760051b60200190565b9080601f830112156106b5576020908235612a4181612a0f565b93612a4f60405195866129ce565b81855260208086019260051b8201019283116106b557602001905b828210612a78575050505090565b81358152908301908301612a6a565b9081518082526020808093019301915f5b828110612aa6575050505090565b835173ffffffffffffffffffffffffffffffffffffffff1685529381019392810192600101612a98565b600754811015612b085760075f5260011b7fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c68801905f90565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b15612b3c57565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f526562616c616e6365206e6f74206e65656465640000000000000000000000006044820152fd5b8051821015612b085760209160051b010190565b90612bb882612a0f565b612bc560405191826129ce565b8281527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0612bf38294612a0f565b0190602036910137565b600754612c0981612bae565b905f5b818110612c1857505090565b8073ffffffffffffffffffffffffffffffffffffffff612c39600193612ad0565b5054165f52600c60205260405f2054612c528286612b9a565b5201612c0c565b15612c6057565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f4f6e6c79205065726970686572790000000000000000000000000000000000006044820152fd5b6006546040517f248391ff00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff92831660048201529282166024840152604483019390935290916020918391168180606481015b03915afa908115612d67575f91612d38575090565b90506020813d602011612d5f575b81612d53602093836129ce565b810103126106b5575190565b3d9150612d46565b6040513d5f823e3d90fd5b81810292918115918404141715612d8557565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b8115612dbc570490565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b908160209103126106b5575180151581036106b55790565b15612e0857565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f496e73756666696369656e74204c6971756964697479000000000000000000006044820152fd5b91908203918211612d8557565b91908201809211612d8557565b612e8861306b565b919060075490612e9782612a0f565b91612ea560405193846129ce565b8083527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0612ed282612a0f565b01366020850137612ee281612bae565b945f5b828110612ef457505050509190565b612efe8183612b9a565b519061271091828102928184041490151715612d8557612f2085600193612db2565b612f2982612ad0565b50830154839181811115612f5e5790612f4191612e66565b612f4b838b612b9a565b52612f568288612b9a565b525b01612ee5565b90612f699250612e66565b612f73828a612b9a565b525f612f7f8288612b9a565b52612f58565b15612f8c57565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f496e73756666696369656e74206c6971756964697479000000000000000000006044820152fd5b612ff2612e80565b5f5b8151811015613039576130078184612b9a565b51151580613024575b61301c57600101612ff4565b505050600190565b5061302f8183612b9a565b5160085410613010565b5050505f90565b61304861306b565b506002548015613065576104326130629260095490612d72565b90565b50505f90565b600754905f61307983612bae565b925f9073ffffffffffffffffffffffffffffffffffffffff80600b5416905b8284106130a757505050509190565b909192936130e7600191836130bb88612ad0565b5054168581036130f1575f52600c60205260405f20546130db888b612b9a565b525b612671878a612b9a565b9401929190613098565b80613108915f52600c60205260405f2054906132bf565b613112888b612b9a565b526130dd565b73ffffffffffffffffffffffffffffffffffffffff16908115613182577fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6020826131665f94600254612e73565b60025584845283825260408420818154019055604051908152a3565b60246040517fec442f050000000000000000000000000000000000000000000000000000000081525f6004820152fd5b9173ffffffffffffffffffffffffffffffffffffffff80841692831561328f571692831561318257825f525f60205260405f2054908282106132375750817fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92602092855f525f84520360405f2055845f5260405f20818154019055604051908152a3565b6040517fe450d38c00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff919091166004820152602481019190915260448101829052606490fd5b60246040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081525f6004820152fd5b600654600b546040517f248391ff00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff938416600482015290831660248201526044810193909352602091839116818060648101612d2356fea2646970667358221220c8414810c36dc329497f0bf640c364c1d29c54d48070ba851498e68ef0072a6864736f6c63430008190033a264697066735822122032f0f8300fd07f3d450f8e04567efaf833e1f6903e7062539755a2a77ccca51664736f6c63430008190033","opcodes":"PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 DUP1 CALLDATASIZE LT ISZERO PUSH2 0x14 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR SWAP3 DUP4 PUSH4 0x1D22CCD EQ PUSH2 0x16C8 JUMPI POP DUP3 PUSH4 0x2D5E94A7 EQ PUSH2 0xADD JUMPI DUP3 PUSH4 0x3069873B EQ PUSH2 0x1067 JUMPI DUP3 PUSH4 0x41D1DE97 EQ PUSH2 0xFFE JUMPI DUP3 PUSH4 0x4276B97B EQ PUSH2 0xF39 JUMPI DUP3 PUSH4 0x4F1EF286 EQ PUSH2 0xC0E JUMPI DUP3 PUSH4 0x52D1902D EQ PUSH2 0xB53 JUMPI DUP3 PUSH4 0x531AA03E EQ PUSH2 0xADD JUMPI DUP3 PUSH4 0x715018A6 EQ PUSH2 0xA21 JUMPI DUP3 PUSH4 0x77AACE1A EQ PUSH2 0x9CF JUMPI DUP3 PUSH4 0x89345EFB EQ PUSH2 0x983 JUMPI DUP3 PUSH4 0x8DA5CB5B EQ PUSH2 0x912 JUMPI DUP3 PUSH4 0x8F2248BC EQ PUSH2 0x793 JUMPI DUP3 PUSH4 0xAD3CB1CC EQ PUSH2 0x6A6 JUMPI DUP3 PUSH4 0xB4340E6A EQ PUSH2 0x4B6 JUMPI DUP3 PUSH4 0xB4AC6860 EQ PUSH2 0x47B JUMPI DUP3 PUSH4 0xC4D66DE8 EQ PUSH2 0x28A JUMPI POP DUP2 PUSH4 0xD88FF1F4 EQ PUSH2 0x1CB JUMPI POP DUP1 PUSH4 0xE9B31CFF EQ PUSH2 0x149 JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0xFC JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x145 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x145 JUMPI PUSH2 0x143 PUSH2 0x136 PUSH2 0x1716 JUMP JUMPDEST PUSH2 0x13E PUSH2 0x1AD3 JUMP JUMPDEST PUSH2 0x1A12 JUMP JUMPDEST STOP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x145 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x145 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x195 PUSH2 0x1716 JUMP JUMPDEST PUSH2 0x19D PUSH2 0x1AD3 JUMP JUMPDEST AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 PUSH1 0x3 SLOAD AND OR PUSH1 0x3 SSTORE PUSH0 DUP1 RETURN JUMPDEST CALLVALUE PUSH2 0x145 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x145 JUMPI DUP1 MLOAD PUSH0 DUP1 SLOAD DUP1 DUP4 MSTORE DUP2 DUP1 MSTORE PUSH1 0x20 DUP1 DUP5 ADD SWAP5 SWAP3 PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563 SWAP3 SWAP2 JUMPDEST DUP3 DUP3 LT PUSH2 0x25D JUMPI PUSH2 0x259 DUP7 DUP7 PUSH2 0x247 DUP3 DUP12 SUB DUP4 PUSH2 0x175C JUMP JUMPDEST MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x1842 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST DUP4 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 MSTORE SWAP6 DUP7 ADD SWAP6 PUSH1 0x1 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x22F JUMP JUMPDEST CALLVALUE PUSH2 0x145 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x145 JUMPI PUSH2 0x2C1 PUSH2 0x1716 JUMP JUMPDEST SWAP1 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP2 DUP3 SLOAD PUSH1 0xFF DUP2 DUP7 SHR AND ISZERO SWAP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND DUP1 ISZERO SWAP1 DUP2 PUSH2 0x473 JUMPI JUMPDEST PUSH1 0x1 EQ SWAP1 DUP2 PUSH2 0x469 JUMPI JUMPDEST ISZERO SWAP1 DUP2 PUSH2 0x460 JUMPI JUMPDEST POP PUSH2 0x439 JUMPI POP SWAP1 DUP2 DUP4 PUSH1 0x1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP6 AND OR DUP7 SSTORE PUSH2 0x404 JUMPI JUMPDEST POP PUSH2 0x368 PUSH2 0x1B43 JUMP JUMPDEST PUSH2 0x370 PUSH2 0x1B43 JUMP JUMPDEST PUSH2 0x378 PUSH2 0x1B43 JUMP JUMPDEST PUSH2 0x381 CALLER PUSH2 0x1A12 JUMP JUMPDEST AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 PUSH1 0x2 SLOAD AND OR PUSH1 0x2 SSTORE PUSH2 0x3B1 JUMPI STOP JUMPDEST PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP2 DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFF PUSH1 0x20 SWAP4 SLOAD AND SWAP1 SSTORE MLOAD PUSH1 0x1 DUP2 MSTORE LOG1 STOP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000 AND PUSH9 0x10000000000000001 OR DUP5 SSTORE DUP6 PUSH2 0x35F JUMP JUMPDEST DUP6 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST SWAP1 POP ISZERO DUP8 PUSH2 0x314 JUMP JUMPDEST ADDRESS EXTCODESIZE ISZERO SWAP2 POP PUSH2 0x30C JUMP JUMPDEST DUP6 SWAP2 POP PUSH2 0x302 JUMP JUMPDEST POP CALLVALUE PUSH2 0x145 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x145 JUMPI PUSH1 0x20 SWAP1 PUSH0 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x145 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x145 JUMPI PUSH2 0x4ED PUSH2 0x1716 JUMP JUMPDEST SWAP1 PUSH0 SLOAD SWAP2 PUSH2 0x4FA DUP4 PUSH2 0x19C3 JUMP JUMPDEST SWAP3 PUSH0 SWAP3 PUSH0 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP5 AND JUMPDEST DUP4 DUP4 LT PUSH2 0x56D JUMPI JUMPDEST POP POP POP POP PUSH2 0x52D DUP3 PUSH2 0x19C3 JUMP JUMPDEST SWAP3 PUSH0 JUMPDEST DUP4 DUP2 LT PUSH2 0x54C JUMPI DUP6 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 SWAP1 PUSH2 0x259 SWAP1 DUP3 ADD DUP9 PUSH2 0x1842 JUMP JUMPDEST DUP1 DUP4 PUSH2 0x55A PUSH1 0x1 SWAP4 DUP6 PUSH2 0x18C5 JUMP JUMPDEST MLOAD AND PUSH2 0x566 DUP3 DUP9 PUSH2 0x18C5 JUMP JUMPDEST MSTORE ADD PUSH2 0x530 JUMP JUMPDEST DUP5 PUSH2 0x57D DUP5 SWAP8 SWAP5 SWAP9 SWAP7 SWAP6 SWAP9 PUSH2 0x17E2 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND SWAP1 DUP9 MLOAD SWAP8 PUSH32 0x67E4AC2C00000000000000000000000000000000000000000000000000000000 DUP10 MSTORE PUSH0 DUP10 DUP6 DUP2 DUP7 GAS STATICCALL SWAP9 DUP10 ISZERO PUSH2 0x69C JUMPI PUSH0 SWAP10 PUSH2 0x678 JUMPI JUMPDEST POP PUSH0 JUMPDEST DUP10 MLOAD DUP2 LT ISZERO PUSH2 0x66A JUMPI DUP3 DUP8 PUSH2 0x5D9 DUP4 DUP14 PUSH2 0x18C5 JUMP JUMPDEST MLOAD AND EQ PUSH2 0x5E8 JUMPI PUSH1 0x1 ADD PUSH2 0x5C4 JUMP JUMPDEST POP SWAP4 SWAP2 SWAP1 SWAP5 SWAP6 SWAP8 POP PUSH2 0x5FA DUP3 DUP10 PUSH2 0x18C5 JUMP JUMPDEST MSTORE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x63E JUMPI PUSH1 0x1 ADD SWAP5 JUMPDEST DUP7 MLOAD DUP7 EQ PUSH2 0x639 JUMPI PUSH1 0x1 ADD SWAP2 SWAP3 PUSH2 0x518 JUMP JUMPDEST PUSH2 0x520 JUMP JUMPDEST PUSH1 0x11 DUP3 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP4 SWAP7 SWAP2 POP SWAP4 SWAP5 SWAP7 POP PUSH2 0x627 JUMP JUMPDEST PUSH2 0x695 SWAP2 SWAP10 POP RETURNDATASIZE DUP1 PUSH0 DUP4 RETURNDATACOPY PUSH2 0x68D DUP2 DUP4 PUSH2 0x175C JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x18D9 JUMP JUMPDEST SWAP8 DUP11 PUSH2 0x5C1 JUMP JUMPDEST DUP11 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 CALLVALUE PUSH2 0x145 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x145 JUMPI DUP1 MLOAD SWAP2 DUP2 DUP4 ADD SWAP1 DUP4 DUP3 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT OR PUSH2 0x767 JUMPI POP DUP2 MSTORE PUSH1 0x5 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 PUSH32 0x352E302E30000000000000000000000000000000000000000000000000000000 DUP4 MSTORE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP4 MLOAD SWAP5 DUP6 SWAP4 PUSH1 0x20 DUP6 MSTORE MLOAD DUP1 SWAP2 DUP2 PUSH1 0x20 DUP8 ADD MSTORE DUP7 DUP7 ADD MCOPY PUSH0 DUP6 DUP3 DUP7 ADD ADD MSTORE ADD AND DUP2 ADD SUB ADD SWAP1 RETURN JUMPDEST PUSH1 0x41 SWAP1 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP1 CALLVALUE PUSH2 0x145 JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x145 JUMPI PUSH2 0x7CA PUSH2 0x1716 JUMP JUMPDEST SWAP2 PUSH1 0x24 CALLDATALOAD SWAP3 PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 DUP2 DUP6 AND DUP1 SWAP6 SUB PUSH2 0x145 JUMPI PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP3 DUP4 SLOAD SWAP3 DUP7 PUSH1 0xFF DUP6 DUP9 SHR AND SWAP2 DUP3 ISZERO PUSH2 0x905 JUMPI JUMPDEST POP POP PUSH2 0x8DE JUMPI PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x20 DUP8 DUP8 DUP8 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFF PUSH9 0x10000000000000000 DUP5 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP13 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 PUSH1 0x2 SLOAD AND OR PUSH1 0x2 SSTORE AND OR OR AND SWAP1 SSTORE MLOAD SWAP1 DUP2 MSTORE LOG1 STOP JUMPDEST DUP5 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP6 AND LT ISZERO SWAP1 POP DUP7 DUP9 PUSH2 0x817 JUMP JUMPDEST POP CALLVALUE PUSH2 0x145 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x145 JUMPI PUSH1 0x20 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD AND SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x145 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x145 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x9C6 PUSH2 0x9C1 PUSH2 0x1716 JUMP JUMPDEST PUSH2 0x1970 JUMP JUMPDEST SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x145 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x145 JUMPI PUSH1 0x20 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x3 SLOAD AND SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x145 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x145 JUMPI PUSH2 0xA57 PUSH2 0x1AD3 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 DUP1 SLOAD SWAP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP3 AND SWAP1 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 STOP JUMPDEST POP CALLVALUE PUSH2 0x145 JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x145 JUMPI PUSH1 0x20 SWAP1 PUSH2 0xB17 PUSH2 0x1716 JUMP JUMPDEST PUSH2 0xB1F PUSH2 0x1739 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP3 AND PUSH0 MSTORE PUSH1 0x1 DUP5 MSTORE DUP2 DUP4 PUSH0 KECCAK256 SWAP2 AND PUSH0 MSTORE DUP4 MSTORE DUP2 PUSH0 KECCAK256 SLOAD AND SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 CALLVALUE PUSH2 0x145 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x145 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND ADDRESS SUB PUSH2 0xBE8 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP2 MSTORE RETURN JUMPDEST MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x145 JUMPI PUSH2 0xC3F PUSH2 0x1716 JUMP JUMPDEST PUSH1 0x24 SWAP3 DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x145 JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x145 JUMPI DUP1 DUP5 ADD CALLDATALOAD PUSH2 0xC6B DUP2 PUSH2 0x188B JUMP JUMPDEST SWAP4 PUSH2 0xC78 DUP5 MLOAD SWAP6 DUP7 PUSH2 0x175C JUMP JUMPDEST DUP2 DUP6 MSTORE PUSH1 0x20 SWAP2 DUP3 DUP7 ADD SWAP4 CALLDATASIZE DUP10 DUP4 DUP4 ADD ADD GT PUSH2 0x145 JUMPI DUP2 PUSH0 SWAP3 DUP11 DUP7 SWAP4 ADD DUP8 CALLDATACOPY DUP8 ADD ADD MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 PUSH32 0x0 AND DUP1 ADDRESS EQ SWAP1 DUP2 ISZERO PUSH2 0xF0B JUMPI JUMPDEST POP PUSH2 0xEE3 JUMPI PUSH2 0xCEA PUSH2 0x1AD3 JUMP JUMPDEST DUP2 AND SWAP5 DUP5 MLOAD PUSH32 0x52D1902D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE DUP4 DUP2 DUP10 DUP2 DUP11 GAS STATICCALL PUSH0 SWAP2 DUP2 PUSH2 0xEB4 JUMPI JUMPDEST POP PUSH2 0xD55 JUMPI POP POP POP POP POP MLOAD SWAP2 PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 DUP8 DUP8 DUP8 SWAP5 SWAP4 DUP12 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SWAP2 DUP3 DUP2 SUB PUSH2 0xE87 JUMPI POP DUP6 EXTCODESIZE ISZERO PUSH2 0xE5A JUMPI POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP3 SLOAD AND OR SWAP1 SSTORE DUP5 MLOAD SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH0 DUP1 LOG2 DUP3 MLOAD ISZERO PUSH2 0xE27 JUMPI POP POP PUSH0 PUSH2 0x143 SWAP6 DUP2 SWAP3 MLOAD SWAP1 DUP5 GAS DELEGATECALL SWAP2 RETURNDATASIZE ISZERO PUSH2 0xE1D JUMPI RETURNDATASIZE PUSH2 0xE0F PUSH2 0xE06 DUP3 PUSH2 0x188B JUMP JUMPDEST SWAP3 MLOAD SWAP3 DUP4 PUSH2 0x175C JUMP JUMPDEST DUP2 MSTORE PUSH0 DUP2 SWAP5 RETURNDATASIZE SWAP3 ADD RETURNDATACOPY PUSH2 0x1B9C JUMP JUMPDEST POP PUSH1 0x60 SWAP3 POP PUSH2 0x1B9C JUMP JUMPDEST SWAP5 POP SWAP5 POP POP POP POP CALLVALUE PUSH2 0xE35 JUMPI STOP JUMPDEST PUSH32 0xB398979F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP4 DUP4 DUP9 MLOAD SWAP2 PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST DUP5 SWAP1 DUP9 MLOAD SWAP2 PUSH32 0xAA1D49A400000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 SWAP2 POP DUP5 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0xEDC JUMPI JUMPDEST PUSH2 0xECC DUP2 DUP4 PUSH2 0x175C JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x145 JUMPI MLOAD SWAP1 DUP11 PUSH2 0xD21 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0xEC2 JUMP JUMPDEST DUP7 DUP6 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST SWAP1 POP DUP2 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD AND EQ ISZERO DUP10 PUSH2 0xCDD JUMP JUMPDEST CALLVALUE PUSH2 0x145 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x145 JUMPI PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0xF86 PUSH2 0x1716 JUMP JUMPDEST AND DUP4 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH32 0x67E4AC2C00000000000000000000000000000000000000000000000000000000 DUP3 MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xFF4 JUMPI SWAP2 PUSH2 0x259 SWAP3 PUSH0 SWAP3 PUSH2 0xFD8 JUMPI JUMPDEST POP MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x1842 JUMP JUMPDEST PUSH2 0xFED SWAP2 SWAP3 POP RETURNDATASIZE DUP1 PUSH0 DUP4 RETURNDATACOPY PUSH2 0x68D DUP2 DUP4 PUSH2 0x175C JUMP JUMPDEST SWAP1 DUP4 PUSH2 0xFC5 JUMP JUMPDEST DUP3 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x145 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x145 JUMPI CALLDATALOAD SWAP1 PUSH0 SLOAD DUP3 LT ISZERO PUSH2 0x145 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x1058 PUSH1 0x20 SWAP4 PUSH2 0x17E2 JUMP JUMPDEST SWAP3 SWAP1 SLOAD SWAP1 MLOAD SWAP3 PUSH1 0x3 SHL SHR AND DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x145 JUMPI PUSH1 0x60 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x145 JUMPI PUSH8 0xFFFFFFFFFFFFFFFF SWAP2 DUP2 CALLDATALOAD DUP4 DUP2 GT PUSH2 0x145 JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x145 JUMPI DUP1 DUP4 ADD CALLDATALOAD SWAP4 PUSH1 0x24 PUSH2 0x10C4 DUP7 PUSH2 0x17CA JUMP JUMPDEST SWAP3 PUSH2 0x10D1 DUP6 MLOAD SWAP5 DUP6 PUSH2 0x175C JUMP JUMPDEST DUP7 DUP5 MSTORE PUSH1 0x20 SWAP7 DUP3 DUP9 DUP7 ADD SWAP2 PUSH1 0x5 SHL DUP4 ADD ADD SWAP2 CALLDATASIZE DUP4 GT PUSH2 0x145 JUMPI DUP4 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x169C JUMPI POP POP POP DUP1 CALLDATALOAD DUP3 DUP2 GT PUSH2 0x145 JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x145 JUMPI DUP1 DUP7 ADD CALLDATALOAD SWAP1 PUSH2 0x111A DUP3 PUSH2 0x17CA JUMP JUMPDEST SWAP1 PUSH2 0x1127 DUP8 MLOAD SWAP3 DUP4 PUSH2 0x175C JUMP JUMPDEST DUP3 DUP3 MSTORE DUP9 DUP3 ADD SWAP3 PUSH1 0x5 SHL DUP2 ADD DUP5 ADD SWAP1 DUP4 CALLDATASIZE DUP4 GT PUSH2 0x145 JUMPI DUP6 DUP12 SWAP3 ADD SWAP1 JUMPDEST DUP4 DUP3 LT PUSH2 0x168D JUMPI POP POP POP POP PUSH1 0x44 SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP5 DUP6 PUSH1 0x3 SLOAD AND SWAP1 DUP2 ISZERO PUSH2 0x1632 JUMPI PUSH1 0x1 SWAP5 DUP6 DUP10 MLOAD GT ISZERO PUSH2 0x15D8 JUMPI DUP9 MLOAD DUP6 MLOAD SUB PUSH2 0x1557 JUMPI PUSH0 DUP7 JUMPDEST PUSH2 0x141A JUMPI JUMPDEST POP POP DUP7 PUSH1 0x2 SLOAD AND SWAP4 DUP10 MLOAD SWAP5 PUSH2 0x3CB6 DUP1 DUP8 ADD SWAP4 DUP8 DUP6 LT SWAP1 DUP6 GT OR PUSH2 0x13EF JUMPI SWAP1 DUP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0x1C3D DUP8 CODECOPY DUP3 MSTORE PUSH1 0xA0 DUP14 DUP4 ADD MSTORE DUP13 PUSH2 0x11D0 PUSH1 0xA0 DUP5 ADD DUP13 PUSH2 0x1842 JUMP JUMPDEST DUP4 DUP2 SUB DUP14 DUP6 ADD MSTORE SWAP2 MLOAD DUP1 DUP4 MSTORE SWAP2 ADD SWAP4 SWAP1 PUSH0 DUP9 DUP16 JUMPDEST DUP4 DUP4 LT PUSH2 0x13D8 JUMPI POP POP POP PUSH1 0x44 CALLDATALOAD PUSH1 0x60 DUP5 ADD MSTORE POP POP PUSH1 0x80 ADD MSTORE SUB SWAP1 PUSH0 CREATE DUP1 ISZERO PUSH2 0x13CE JUMPI DUP4 AND SWAP6 PUSH0 SLOAD PUSH9 0x10000000000000000 DUP2 LT ISZERO PUSH2 0x13A3 JUMPI SWAP1 PUSH2 0x1230 DUP3 DUP5 DUP11 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 ADD PUSH0 SSTORE PUSH2 0x17E2 JUMP JUMPDEST DUP2 SLOAD SWAP1 PUSH1 0x3 SHL SWAP1 DUP7 DUP10 DUP4 SHL SWAP3 SHL NOT AND OR SWAP1 SSTORE DUP2 PUSH0 SWAP1 JUMPDEST PUSH2 0x1298 JUMPI JUMPDEST POP POP POP POP PUSH32 0x93DE7D9DE9F3E05BA87A0170FCBB71AF623439CAF5E5079587B9D38C5DA9B0D1 SWAP2 PUSH2 0x128A SWAP2 PUSH1 0x2 SLOAD AND DUP6 MLOAD SWAP3 DUP4 SWAP3 DUP8 DUP5 MSTORE DUP8 DUP5 ADD SWAP1 PUSH2 0x1842 JUMP JUMPDEST SWAP1 DUP9 DUP4 ADD MSTORE SUB SWAP1 LOG2 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 DUP7 MLOAD DUP3 LT ISZERO PUSH2 0x139B JUMPI POP DUP3 DUP2 ADD DUP1 DUP3 GT PUSH2 0x1370 JUMPI DUP4 SWAP3 SWAP2 SWAP1 DUP4 JUMPDEST PUSH2 0x12CA JUMPI JUMPDEST POP DUP3 ADD DUP9 SWAP7 SWAP6 SWAP5 SWAP4 PUSH2 0x1246 JUMP JUMPDEST DUP8 SWAP4 SWAP2 SWAP3 SWAP4 MLOAD DUP2 LT ISZERO PUSH2 0x1367 JUMPI DUP2 SWAP1 DUP8 PUSH2 0x12E4 DUP6 DUP12 PUSH2 0x18C5 JUMP JUMPDEST MLOAD AND PUSH0 MSTORE DUP2 DUP13 MSTORE DUP10 PUSH0 KECCAK256 DUP9 PUSH2 0x12F9 DUP4 DUP13 PUSH2 0x18C5 JUMP JUMPDEST MLOAD AND PUSH0 MSTORE DUP13 MSTORE DUP10 PUSH0 KECCAK256 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 SWAP1 DUP13 DUP3 DUP3 SLOAD AND OR SWAP1 SSTORE DUP9 PUSH2 0x1337 DUP4 DUP13 PUSH2 0x18C5 JUMP JUMPDEST MLOAD AND PUSH0 MSTORE DUP3 DUP14 MSTORE DUP11 PUSH0 KECCAK256 DUP10 PUSH2 0x134C DUP8 DUP14 PUSH2 0x18C5 JUMP JUMPDEST MLOAD AND PUSH0 MSTORE DUP14 MSTORE DUP12 DUP12 PUSH0 KECCAK256 SWAP2 DUP3 SLOAD AND OR SWAP1 SSTORE ADD DUP2 SWAP4 SWAP3 SWAP2 PUSH2 0x12B8 JUMP JUMPDEST SWAP3 SWAP2 SWAP1 SWAP3 PUSH2 0x12BD JUMP JUMPDEST DUP5 PUSH1 0x11 DUP5 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE MSTORE PUSH0 REVERT JUMPDEST SWAP6 SWAP5 SWAP4 PUSH2 0x124B JUMP JUMPDEST DUP4 PUSH1 0x41 DUP4 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE MSTORE PUSH0 REVERT JUMPDEST DUP6 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP5 MLOAD DUP9 MSTORE DUP10 SWAP9 POP SWAP7 DUP8 ADD SWAP7 SWAP1 SWAP4 ADD SWAP3 ADD DUP9 DUP16 PUSH2 0x11E4 JUMP JUMPDEST DUP9 PUSH1 0x41 DUP15 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE MSTORE PUSH0 REVERT JUMPDEST DUP10 MLOAD DUP2 LT ISZERO PUSH2 0x1552 JUMPI DUP7 DUP2 ADD DUP1 DUP3 GT PUSH2 0x1527 JUMPI DUP8 SWAP3 SWAP2 SWAP1 DUP12 DUP16 DUP13 DUP16 DUP8 JUMPDEST PUSH2 0x144A JUMPI JUMPDEST POP POP POP POP POP DUP3 ADD SWAP1 SWAP2 PUSH2 0x118C JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 DUP5 MLOAD DUP7 LT ISZERO PUSH2 0x151A JUMPI POP DUP5 PUSH2 0x147A SWAP2 DUP4 PUSH2 0x146B DUP10 DUP9 PUSH2 0x18C5 JUMP JUMPDEST MLOAD AND PUSH0 MSTORE DUP14 DUP6 MSTORE PUSH0 KECCAK256 SWAP5 PUSH2 0x18C5 JUMP JUMPDEST MLOAD AND PUSH0 MSTORE MSTORE DUP10 DUP13 PUSH0 KECCAK256 SLOAD AND PUSH2 0x1499 JUMPI DUP8 SWAP3 SWAP2 SWAP1 DUP4 ADD DUP12 DUP16 DUP13 DUP16 DUP8 PUSH2 0x1437 JUMP JUMPDEST DUP12 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE DUP1 DUP15 ADD DUP16 SWAP1 MSTORE PUSH1 0x21 DUP2 DUP12 ADD MSTORE PUSH32 0x506F6F6C20616C72656164792065786973747320666F72207468697320706169 DUP2 DUP6 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP7 SWAP6 SWAP5 POP SWAP1 DUP4 SWAP3 SWAP2 PUSH2 0x143C JUMP JUMPDEST DUP9 PUSH1 0x11 DUP15 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE MSTORE PUSH0 REVERT JUMPDEST PUSH2 0x1191 JUMP JUMPDEST PUSH1 0x84 DUP12 PUSH1 0x22 DUP10 DUP16 DUP15 MLOAD SWAP4 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP6 MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x41737365747320616E642077656967687473206C656E677468206D69736D6174 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6368000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 DUP12 DUP14 DUP10 DUP2 DUP15 MLOAD SWAP4 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP6 MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x4174206C656173742074776F2061737365747320617265207265717569726564 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 DUP11 PUSH1 0x11 DUP9 DUP15 DUP14 MLOAD SWAP4 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP6 MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x506572697068657279206E6F7420736574000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE SWAP1 DUP3 ADD SWAP1 DUP3 ADD PUSH2 0x1144 JUMP JUMPDEST DUP2 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 SUB PUSH2 0x145 JUMPI DUP2 MSTORE SWAP1 DUP9 ADD SWAP1 DUP9 ADD PUSH2 0x10EE JUMP JUMPDEST CALLVALUE PUSH2 0x145 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x145 JUMPI PUSH1 0x20 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x2 SLOAD AND DUP2 MSTORE RETURN JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x145 JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x145 JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x1F PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x179D JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x179D JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH0 SLOAD DUP2 LT ISZERO PUSH2 0x1815 JUMPI PUSH0 DUP1 MSTORE PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563 ADD SWAP1 PUSH0 SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP1 DUP2 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP1 SWAP4 ADD SWAP4 ADD SWAP2 PUSH0 JUMPDEST DUP3 DUP2 LT PUSH2 0x1861 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x1853 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x179D JUMPI PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x1815 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 DUP2 DUP5 SUB SLT PUSH2 0x145 JUMPI DUP1 MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x145 JUMPI ADD SWAP2 DUP1 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x145 JUMPI DUP3 MLOAD PUSH2 0x190F DUP2 PUSH2 0x17CA JUMP JUMPDEST SWAP4 PUSH2 0x191D PUSH1 0x40 MLOAD SWAP6 DUP7 PUSH2 0x175C JUMP JUMPDEST DUP2 DUP6 MSTORE DUP4 DUP1 DUP7 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x145 JUMPI DUP4 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x1944 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP2 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 SUB PUSH2 0x145 JUMPI DUP2 MSTORE SWAP1 DUP4 ADD SWAP1 DUP4 ADD PUSH2 0x1936 JUMP JUMPDEST PUSH0 SWAP1 PUSH0 SLOAD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH2 0x1984 JUMPI POP POP POP PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x198D DUP2 PUSH2 0x17E2 JUMP JUMPDEST SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SLOAD DUP2 DUP6 AND SWAP3 PUSH1 0x3 SHL SHR AND EQ PUSH2 0x19BB JUMPI PUSH1 0x1 ADD PUSH2 0x1976 JUMP JUMPDEST POP POP POP PUSH1 0x1 SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x19CD DUP3 PUSH2 0x17CA JUMP JUMPDEST PUSH2 0x19DA PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x175C JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH2 0x1A08 DUP3 SWAP5 PUSH2 0x17CA JUMP JUMPDEST ADD SWAP1 PUSH1 0x20 CALLDATASIZE SWAP2 ADD CALLDATACOPY JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP2 AND SWAP1 DUP2 ISZERO PUSH2 0x1AA3 JUMPI PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 DUP1 SLOAD SWAP1 DUP4 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP4 AND OR SWAP1 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH0 DUP1 LOG3 JUMP JUMPDEST PUSH1 0x24 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD AND CALLER SUB PUSH2 0x1B13 JUMPI JUMP JUMPDEST PUSH1 0x24 PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0xFF PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SLOAD PUSH1 0x40 SHR AND ISZERO PUSH2 0x1B72 JUMPI JUMP JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0xD7E6BCF800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST SWAP1 PUSH2 0x1BDB JUMPI POP DUP1 MLOAD ISZERO PUSH2 0x1BB1 JUMPI DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP2 MLOAD ISZERO DUP1 PUSH2 0x1C33 JUMPI JUMPDEST PUSH2 0x1BEC JUMPI POP SWAP1 JUMP JUMPDEST PUSH1 0x24 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x40 MLOAD SWAP2 PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP4 MSTORE AND PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST POP DUP1 EXTCODESIZE ISZERO PUSH2 0x1BE4 JUMP INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x42F JUMPI PUSH2 0x3CB6 DUP1 CODESIZE SUB DUP1 SWAP2 PUSH2 0x1C DUP3 DUP6 PUSH2 0x8F4 JUMP JUMPDEST DUP4 CODECOPY DUP2 ADD PUSH1 0xA0 DUP3 DUP3 SUB SLT PUSH2 0x42F JUMPI PUSH2 0x33 DUP3 PUSH2 0x917 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MLOAD SWAP1 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x42F JUMPI DUP4 ADD SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x42F JUMPI DUP3 MLOAD SWAP3 PUSH2 0x63 DUP5 PUSH2 0x92B JUMP JUMPDEST SWAP4 PUSH2 0x71 PUSH1 0x40 MLOAD SWAP6 DUP7 PUSH2 0x8F4 JUMP JUMPDEST DUP1 DUP6 MSTORE PUSH1 0x20 DUP1 DUP7 ADD SWAP2 PUSH1 0x5 SHL DUP4 ADD ADD SWAP2 DUP5 DUP4 GT PUSH2 0x42F JUMPI PUSH1 0x20 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x8C1 JUMPI POP POP POP PUSH1 0x40 DUP5 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x42F JUMPI DUP5 ADD SWAP2 DUP1 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x42F JUMPI DUP3 MLOAD PUSH2 0xC3 DUP2 PUSH2 0x92B JUMP JUMPDEST SWAP4 PUSH2 0xD1 PUSH1 0x40 MLOAD SWAP6 DUP7 PUSH2 0x8F4 JUMP JUMPDEST DUP2 DUP6 MSTORE PUSH1 0x20 DUP1 DUP7 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x42F JUMPI PUSH1 0x20 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x8B1 JUMPI POP POP POP PUSH2 0x107 PUSH1 0x80 PUSH1 0x60 DUP7 ADD MLOAD SWAP6 ADD PUSH2 0x917 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x113 DUP2 PUSH2 0x8D9 JUMP JUMPDEST PUSH1 0x9 DUP2 MSTORE PUSH9 0x42616C756E69204C5 PUSH1 0xBC SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP1 PUSH2 0x136 DUP3 PUSH2 0x8D9 JUMP JUMPDEST PUSH1 0x9 DUP3 MSTORE PUSH9 0x42414C554E492D4C5 PUSH1 0xBC SHL PUSH1 0x20 DUP4 ADD MSTORE DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x48C JUMPI PUSH1 0x3 SLOAD SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x8A7 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x788 JUMPI DUP2 PUSH1 0x1F DUP5 SWAP4 GT PUSH2 0x839 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x7B1 JUMPI PUSH0 SWAP3 PUSH2 0x7A6 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x3 SSTORE JUMPDEST DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x48C JUMPI PUSH1 0x4 SLOAD SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x79C JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x788 JUMPI DUP2 PUSH1 0x1F DUP5 SWAP4 GT PUSH2 0x71A JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x696 JUMPI PUSH0 SWAP3 PUSH2 0x68B JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x4 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x5 SSTORE PUSH1 0xA DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x6 DUP1 SLOAD SWAP1 SWAP2 AND SWAP2 DUP4 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH8 0xDE0B6B3A7640000 PUSH1 0x9 SSTORE DUP3 MLOAD DUP3 MLOAD SUB PUSH2 0x63B JUMPI PUSH0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x51B JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x276 DUP3 DUP7 PUSH2 0x942 JUMP JUMPDEST MLOAD AND ISZERO PUSH2 0x4D6 JUMPI PUSH2 0x287 DUP2 DUP5 PUSH2 0x942 JUMP JUMPDEST MLOAD ISZERO PUSH2 0x4A0 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x29F DUP3 DUP7 PUSH2 0x942 JUMP JUMPDEST MLOAD AND PUSH2 0x2AB DUP3 DUP6 PUSH2 0x942 JUMP JUMPDEST MLOAD PUSH1 0x40 DUP1 MLOAD SWAP3 SWAP1 DUP4 ADD DUP1 DUP5 GT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 SWAP2 GT OR PUSH2 0x48C JUMPI PUSH1 0x40 DUP4 ADD PUSH1 0x40 MSTORE DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x7 SLOAD PUSH9 0x10000000000000000 DUP2 LT ISZERO PUSH2 0x48C JUMPI PUSH1 0x1 DUP2 ADD DUP1 PUSH1 0x7 SSTORE DUP2 LT ISZERO PUSH2 0x478 JUMPI PUSH1 0x7 PUSH0 MSTORE DUP2 MLOAD PUSH32 0xA66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C688 PUSH1 0x1 SWAP3 SWAP1 SWAP3 SHL SWAP2 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE PUSH1 0x20 SWAP1 SWAP3 ADD MLOAD PUSH32 0xA66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C689 SWAP1 SWAP2 ADD SSTORE PUSH2 0x379 DUP3 DUP7 PUSH2 0x942 JUMP JUMPDEST MLOAD AND PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x6 SLOAD AND PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE DUP2 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x44 DUP2 DUP7 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x43B JUMPI PUSH0 SWAP2 PUSH2 0x446 JUMPI JUMPDEST POP ISZERO PUSH2 0x3C7 JUMPI JUMPDEST POP POP PUSH1 0x1 ADD PUSH2 0x25B JUMP JUMPDEST PUSH0 SWAP2 PUSH1 0x44 PUSH1 0x20 SWAP3 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP4 DUP5 SWAP3 PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE DUP2 NOT PUSH1 0x24 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x43B JUMPI PUSH2 0x3FF JUMPI JUMPDEST DUP1 PUSH2 0x3BD JUMP JUMPDEST PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x433 JUMPI JUMPDEST DUP2 PUSH2 0x418 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x8F4 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x42F JUMPI MLOAD DUP1 ISZERO ISZERO SUB PUSH2 0x42F JUMPI PUSH0 PUSH2 0x3F9 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x40B JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x470 JUMPI JUMPDEST DUP2 PUSH2 0x461 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x8F4 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x42F JUMPI MLOAD PUSH0 PUSH2 0x3B6 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x454 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x125B9D985B1A59081DD95A59DA1D PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420617373657420616464726573730000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH1 0x8 DUP5 SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH4 0xBC06E81D PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x4 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x43B JUMPI PUSH0 SWAP2 PUSH2 0x601 JUMPI JUMPDEST POP PUSH1 0xB DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH0 SWAP1 DUP2 JUMPDEST DUP2 MLOAD DUP4 LT ISZERO PUSH2 0x5B3 JUMPI PUSH2 0x58A DUP4 DUP4 PUSH2 0x942 JUMP JUMPDEST MLOAD DUP2 ADD DUP1 SWAP2 GT PUSH2 0x59F JUMPI PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 PUSH2 0x577 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x2710 SUB PUSH2 0x5CA JUMPI PUSH1 0x40 MLOAD PUSH2 0x335F SWAP1 DUP2 PUSH2 0x957 DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x496E76616C69642077656967687473 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x633 JUMPI JUMPDEST DUP2 PUSH2 0x61C PUSH1 0x20 SWAP4 DUP4 PUSH2 0x8F4 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x42F JUMPI PUSH2 0x62D SWAP1 PUSH2 0x917 JUMP JUMPDEST DUP3 PUSH2 0x552 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x60F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41737365747320616E642077656967687473206C656E677468206D69736D6174 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0xC6D PUSH1 0xF3 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ADD MLOAD SWAP1 POP PUSH0 DUP1 PUSH2 0x1FB JUMP JUMPDEST PUSH1 0x4 PUSH0 SWAP1 DUP2 MSTORE PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B SWAP4 POP PUSH1 0x1F NOT DUP6 AND SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x702 JUMPI POP SWAP1 DUP5 PUSH1 0x1 SWAP6 SWAP5 SWAP4 SWAP3 LT PUSH2 0x6EA JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x4 SSTORE PUSH2 0x210 JUMP JUMPDEST ADD MLOAD PUSH0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE PUSH0 DUP1 DUP1 PUSH2 0x6DC JUMP JUMPDEST SWAP3 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH2 0x6C6 JUMP JUMPDEST PUSH1 0x4 PUSH0 MSTORE SWAP1 SWAP2 POP PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP6 LT PUSH2 0x77E JUMPI JUMPDEST SWAP1 PUSH1 0x1F DUP6 SWAP5 SWAP4 SWAP3 ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x770 JUMPI POP PUSH2 0x1E5 JUMP JUMPDEST PUSH0 DUP2 SSTORE DUP5 SWAP4 POP PUSH1 0x1 ADD PUSH2 0x763 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x755 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x1D1 JUMP JUMPDEST ADD MLOAD SWAP1 POP PUSH0 DUP1 PUSH2 0x199 JUMP JUMPDEST PUSH1 0x3 PUSH0 SWAP1 DUP2 MSTORE SWAP4 POP PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B SWAP2 SWAP1 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0x81E JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x806 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x3 SSTORE PUSH2 0x1AE JUMP JUMPDEST ADD MLOAD PUSH0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE PUSH0 DUP1 DUP1 PUSH2 0x7F8 JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x7DD JUMP JUMPDEST PUSH1 0x3 PUSH0 MSTORE SWAP1 SWAP2 POP PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP6 LT PUSH2 0x89D JUMPI JUMPDEST SWAP1 PUSH1 0x1F DUP6 SWAP5 SWAP4 SWAP3 ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x88F JUMPI POP PUSH2 0x183 JUMP JUMPDEST PUSH0 DUP2 SSTORE DUP5 SWAP4 POP PUSH1 0x1 ADD PUSH2 0x882 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x874 JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x16F JUMP JUMPDEST DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0xEC JUMP JUMPDEST PUSH1 0x20 DUP1 SWAP2 PUSH2 0x8CE DUP5 PUSH2 0x917 JUMP JUMPDEST DUP2 MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0x8D JUMP JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x48C JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT SWAP1 DUP3 LT OR PUSH2 0x48C JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x42F JUMPI JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x48C JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x478 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP INVALID PUSH1 0xA0 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 SWAP2 DUP3 CALLDATASIZE LT ISZERO PUSH2 0x15 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 SWAP3 PUSH0 CALLDATALOAD PUSH1 0xE0 SHR SWAP2 DUP3 PUSH4 0x1D22CCD EQ PUSH2 0x281E JUMPI POP DUP2 PUSH4 0x6FDDE03 EQ PUSH2 0x26D5 JUMPI DUP2 PUSH4 0x723C999 EQ PUSH2 0x236A JUMPI DUP2 PUSH4 0x902F1AC EQ PUSH2 0x231C JUMPI DUP2 PUSH4 0x95EA7B3 EQ PUSH2 0x2217 JUMPI DUP2 PUSH4 0x18160DDD EQ PUSH2 0x21DB JUMPI DUP2 PUSH4 0x1A686502 EQ PUSH2 0x2199 JUMPI DUP2 PUSH4 0x22ACB867 EQ PUSH2 0x211E JUMPI DUP2 PUSH4 0x23B872DD EQ PUSH2 0x1FC9 JUMPI DUP2 PUSH4 0x313CE567 EQ PUSH2 0x1F90 JUMPI DUP2 PUSH4 0x36BF6E39 EQ PUSH2 0x1F3E JUMPI DUP2 PUSH4 0x3DFF5B7F EQ PUSH2 0x1E54 JUMPI DUP2 PUSH4 0x4AA06652 EQ PUSH2 0x1E39 JUMPI DUP2 PUSH4 0x5568081A EQ PUSH2 0x1A25 JUMPI DUP2 PUSH4 0x67A6C440 EQ PUSH2 0x19EA JUMPI DUP2 PUSH4 0x67E4AC2C EQ PUSH2 0x195B JUMPI DUP2 PUSH4 0x6E81221C EQ PUSH2 0x1576 JUMPI DUP2 PUSH4 0x70A08231 EQ PUSH2 0x1515 JUMPI DUP2 PUSH4 0x77AACE1A EQ PUSH2 0x14C2 JUMPI DUP2 PUSH4 0x7E04795A EQ PUSH2 0x13FD JUMPI DUP2 PUSH4 0x7FEC8D38 EQ PUSH2 0x13C0 JUMPI DUP2 PUSH4 0x89AB3532 EQ PUSH2 0x1336 JUMPI DUP2 PUSH4 0x89AFCB44 EQ PUSH2 0xC17 JUMPI DUP2 PUSH4 0x8A77C8DC EQ PUSH2 0xBD3 JUMPI DUP2 PUSH4 0x95D89B41 EQ PUSH2 0xA7D JUMPI DUP2 PUSH4 0xA9059CBB EQ PUSH2 0xA2E JUMPI DUP2 PUSH4 0xB2B55D70 EQ PUSH2 0x802 JUMPI DUP2 PUSH4 0xC2EE3A08 EQ PUSH2 0x9F1 JUMPI DUP2 PUSH4 0xCDF456E1 EQ PUSH2 0x99E JUMPI DUP2 PUSH4 0xCF8FA764 EQ PUSH2 0x8E2 JUMPI DUP2 PUSH4 0xD14EF46D EQ PUSH2 0x864 JUMPI DUP2 PUSH4 0xD66BD524 EQ PUSH2 0x802 JUMPI DUP2 PUSH4 0xDD62ED3E EQ PUSH2 0x78D JUMPI DUP2 PUSH4 0xDE836EBD EQ PUSH2 0x1E7 JUMPI POP PUSH4 0xE73FAA2D EQ PUSH2 0x1A3 JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1E3 JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1E3 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x1DC PUSH2 0x3040 JUMP JUMPDEST SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST SWAP1 POP DUP3 CALLVALUE PUSH2 0x78A JUMPI DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x78A JUMPI PUSH2 0x220 PUSH2 0x28B4 JUMP JUMPDEST SWAP2 PUSH1 0x24 SWAP3 DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x786 JUMPI PUSH2 0x242 SWAP1 CALLDATASIZE SWAP1 DUP5 ADD PUSH2 0x2A27 JUMP JUMPDEST SWAP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 PUSH2 0x268 DUP5 PUSH1 0xA SLOAD AND CALLER EQ PUSH2 0x2C59 JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP6 DUP3 PUSH2 0x275 PUSH2 0x2BFD JUMP JUMPDEST SWAP8 PUSH1 0x7 SWAP9 PUSH1 0x7 SLOAD SWAP1 DUP1 MLOAD DUP3 SUB PUSH2 0x729 JUMPI DUP2 ISZERO PUSH2 0x6CC JUMPI SWAP1 DUP7 SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0x541 JUMPI POP POP POP DUP2 ISZERO PUSH2 0x4BF JUMPI DUP1 PUSH2 0x414 JUMPI POP SWAP4 JUMPDEST DUP5 ISZERO PUSH2 0x3B8 JUMPI SWAP1 DUP5 PUSH2 0x2E1 DUP11 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 CALLER DUP7 MSTORE PUSH1 0x20 SWAP12 DUP7 DUP14 SWAP8 DUP9 MSTORE DUP1 DUP11 DUP4 DUP3 KECCAK256 SLOAD SWAP5 PUSH2 0x2D4 DUP9 DUP3 PUSH2 0x3118 JUMP JUMPDEST AND SWAP9 DUP10 DUP3 MSTORE MSTORE KECCAK256 SLOAD PUSH2 0x2E66 JUMP JUMPDEST SUB PUSH2 0x35D JUMPI POP POP PUSH0 JUMPDEST DUP7 SLOAD DUP2 LT ISZERO PUSH2 0x32B JUMPI DUP1 DUP5 PUSH2 0x300 PUSH1 0x1 SWAP4 PUSH2 0x2AD0 JUMP JUMPDEST POP SLOAD AND PUSH2 0x30D DUP3 DUP10 PUSH2 0x2B9A JUMP JUMPDEST MLOAD SWAP1 PUSH0 MSTORE PUSH1 0xC DUP11 MSTORE PUSH2 0x323 DUP8 PUSH0 KECCAK256 SWAP2 DUP3 SLOAD PUSH2 0x2E73 JUMP JUMPDEST SWAP1 SSTORE ADD PUSH2 0x2EA JUMP JUMPDEST DUP8 DUP4 DUP7 DUP5 PUSH32 0xF6798A560793A54C3BCFE86A93CDE1E73087D944C0EA20544137D4121396885 DUP5 DUP4 MLOAD DUP6 DUP2 MSTORE LOG2 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 PUSH1 0xB PUSH1 0x64 SWAP3 DUP11 DUP9 MLOAD SWAP4 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP6 MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x4D696E74204661696C6564000000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 DUP4 PUSH1 0xD DUP5 PUSH1 0x20 DUP14 MLOAD SWAP4 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP6 MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x4D696E7420717479206973203000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH2 0x41C PUSH2 0x306B JUMP JUMPDEST POP SWAP2 DUP3 ISZERO PUSH2 0x43D JUMPI PUSH2 0x437 SWAP3 SWAP2 PUSH2 0x432 SWAP2 PUSH2 0x2D72 JUMP JUMPDEST PUSH2 0x2DB2 JUMP JUMPDEST SWAP4 PUSH2 0x2A7 JUMP JUMPDEST PUSH1 0x84 DUP6 PUSH1 0x26 DUP7 PUSH1 0x20 DUP16 MLOAD SWAP4 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP6 MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x546F74616C206C6971756964697479206D757374206265206772656174657220 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7468616E20300000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x84 DUP5 PUSH1 0x22 DUP6 PUSH1 0x20 DUP15 MLOAD SWAP4 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP6 MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x546F74616C2076616C7565206D7573742062652067726561746572207468616E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x2030000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 SWAP2 SWAP4 DUP10 PUSH2 0x54E DUP7 PUSH2 0x2AD0 JUMP JUMPDEST POP SLOAD AND DUP14 MLOAD SWAP1 PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP3 MSTORE ADDRESS DUP10 DUP4 ADD MSTORE PUSH1 0x20 SWAP2 DUP3 DUP2 DUP11 DUP2 DUP6 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x6C0 JUMPI DUP12 SWAP2 PUSH2 0x68F JUMPI JUMPDEST POP DUP1 ISZERO PUSH2 0x633 JUMPI PUSH2 0x5B0 SWAP1 PUSH2 0x5A9 DUP10 DUP8 PUSH2 0x2B9A JUMP JUMPDEST MLOAD SWAP1 PUSH2 0x2E66 JUMP JUMPDEST SWAP2 DUP3 ISZERO PUSH2 0x5D7 JUMPI POP SWAP2 PUSH2 0x5C8 PUSH2 0x5CE SWAP3 PUSH1 0x1 SWAP5 PUSH2 0x32BF JUMP JUMPDEST SWAP1 PUSH2 0x2E73 JUMP JUMPDEST SWAP5 ADD SWAP2 SWAP1 PUSH2 0x28F JUMP JUMPDEST DUP16 PUSH1 0x1D DUP11 PUSH1 0x64 SWAP4 DUP14 SWAP4 MLOAD SWAP4 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP6 MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E2030000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP16 DUP11 PUSH1 0x1E DUP12 DUP7 PUSH1 0x64 SWAP5 MLOAD SWAP4 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP6 MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x42616C616E6365206D7573742062652067726561746572207468616E20300000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 POP DUP3 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x6B9 JUMPI JUMPDEST PUSH2 0x6A6 DUP2 DUP4 PUSH2 0x29CE JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x6B5 JUMPI MLOAD PUSH0 PUSH2 0x594 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x69C JUMP JUMPDEST POP POP DUP15 MLOAD RETURNDATASIZE DUP12 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP PUSH1 0x64 DUP6 PUSH1 0x9 DUP7 PUSH1 0x20 DUP16 MLOAD SWAP4 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP6 MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x4E6F206173736574730000000000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP PUSH1 0x64 DUP6 PUSH1 0x17 DUP7 PUSH1 0x20 DUP16 MLOAD SWAP4 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP6 MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x496E76616C6964207265736572766573206C656E677468000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x1E3 JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1E3 JUMPI PUSH1 0x20 SWAP2 PUSH2 0x7C8 PUSH2 0x28B4 JUMP JUMPDEST DUP3 PUSH2 0x7D1 PUSH2 0x28D7 JUMP JUMPDEST SWAP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP4 AND DUP2 MSTORE PUSH1 0x1 DUP7 MSTORE KECCAK256 SWAP2 AND PUSH0 MSTORE DUP3 MSTORE DUP1 PUSH0 KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x1E3 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1E3 JUMPI DUP1 PUSH1 0x20 SWAP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x854 PUSH2 0x28B4 JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0xC DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP4 SWAP2 POP CALLVALUE PUSH2 0x1E3 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1E3 JUMPI CALLDATALOAD SWAP1 PUSH1 0x7 SLOAD DUP3 LT ISZERO PUSH2 0x78A JUMPI POP PUSH2 0x8AC SWAP1 PUSH2 0x2AD0 JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD SWAP2 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 RETURN JUMPDEST SUB SWAP1 RETURN JUMPDEST SWAP1 POP DUP3 CALLVALUE PUSH2 0x78A JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x78A JUMPI POP DUP1 CALLDATALOAD SWAP1 PUSH2 0x920 PUSH2 0x306B JUMP JUMPDEST DUP1 SWAP3 SWAP2 POP MLOAD DUP4 LT ISZERO PUSH2 0x941 JUMPI PUSH1 0x20 DUP5 PUSH2 0x939 DUP6 DUP6 PUSH2 0x2B9A JUMP JUMPDEST MLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x20 DUP6 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420617373657420696E64657800000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x1E3 JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1E3 JUMPI PUSH1 0x20 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xB SLOAD AND SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x1E3 JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1E3 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x9 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x1E3 JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1E3 JUMPI PUSH1 0x20 SWAP1 PUSH2 0xA76 PUSH2 0xA6C PUSH2 0x28B4 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x31B2 JUMP JUMPDEST MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST DUP4 DUP4 CALLVALUE PUSH2 0x1E3 JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1E3 JUMPI DUP1 MLOAD SWAP2 DUP1 SWAP4 DUP1 SLOAD SWAP2 PUSH1 0x1 SWAP1 DUP4 PUSH1 0x1 SHR SWAP3 PUSH1 0x1 DUP6 AND SWAP5 DUP6 ISZERO PUSH2 0xBC9 JUMPI JUMPDEST PUSH1 0x20 SWAP6 DUP7 DUP7 LT DUP2 EQ PUSH2 0xB9D JUMPI DUP6 DUP10 MSTORE SWAP1 DUP2 ISZERO PUSH2 0xB5B JUMPI POP PUSH1 0x1 EQ PUSH2 0xB03 JUMPI JUMPDEST PUSH2 0x8DE DUP8 DUP8 PUSH2 0xAF9 DUP3 DUP13 SUB DUP4 PUSH2 0x29CE JUMP JUMPDEST MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x286C JUMP JUMPDEST DUP2 MSTORE SWAP3 SWAP6 POP PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B JUMPDEST DUP3 DUP5 LT PUSH2 0xB48 JUMPI POP POP POP DUP3 PUSH2 0x8DE SWAP5 PUSH2 0xAF9 SWAP3 DUP3 ADD ADD SWAP5 DUP7 DUP1 PUSH2 0xAE8 JUMP JUMPDEST DUP1 SLOAD DUP7 DUP6 ADD DUP9 ADD MSTORE SWAP3 DUP7 ADD SWAP3 DUP2 ADD PUSH2 0xB2A JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND DUP9 DUP8 ADD MSTORE POP POP POP POP ISZERO ISZERO PUSH1 0x5 SHL DUP4 ADD ADD SWAP3 POP PUSH2 0xAF9 DUP3 PUSH2 0x8DE DUP7 DUP1 PUSH2 0xAE8 JUMP JUMPDEST PUSH1 0x24 DUP5 PUSH1 0x22 DUP6 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP4 MSTORE MSTORE REVERT JUMPDEST SWAP4 PUSH1 0x7F AND SWAP4 PUSH2 0xAC9 JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x1E3 JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1E3 JUMPI PUSH1 0x20 SWAP1 PUSH2 0xC0E PUSH2 0x2FEA JUMP JUMPDEST SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST DUP4 SWAP2 POP CALLVALUE PUSH2 0x1E3 JUMPI PUSH1 0x20 DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1332 JUMPI PUSH2 0xC52 PUSH2 0x28B4 JUMP JUMPDEST SWAP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP4 PUSH2 0xC78 DUP6 PUSH1 0xA SLOAD AND CALLER EQ PUSH2 0x2C59 JUMP JUMPDEST ADDRESS DUP3 MSTORE DUP2 DUP4 MSTORE DUP6 DUP3 KECCAK256 SLOAD SWAP1 DUP2 ISZERO PUSH2 0x12D6 JUMPI PUSH1 0x2 SLOAD SWAP6 DUP7 ISZERO PUSH2 0x127A JUMPI PUSH1 0x7 DUP1 SLOAD SWAP4 PUSH2 0xCA1 DUP6 PUSH2 0x2BAE JUMP JUMPDEST SWAP5 PUSH2 0x12C DUP3 MUL PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFED4 DUP4 DUP3 DIV ADD PUSH2 0x124E JUMPI PUSH2 0x2710 PUSH2 0xCDF SWAP2 DIV DUP1 SWAP4 PUSH2 0x2E66 JUMP JUMPDEST SWAP10 DUP8 JUMPDEST DUP3 DUP2 LT PUSH2 0x1196 JUMPI POP POP POP ADDRESS DUP7 MSTORE DUP6 DUP8 MSTORE PUSH2 0xD01 DUP10 DUP12 DUP9 KECCAK256 SLOAD LT ISZERO PUSH2 0x2F85 JUMP JUMPDEST DUP8 DUP8 DUP5 PUSH1 0x6 SLOAD AND DUP13 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH32 0x3B19E84A00000000000000000000000000000000000000000000000000000000 DUP3 MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x1141 JUMPI SWAP2 DUP9 SWAP2 DUP11 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 DUP10 SWAP2 PUSH2 0x114B JUMPI JUMPDEST POP SWAP1 PUSH2 0xDA7 SWAP3 SWAP2 DUP14 MLOAD SWAP4 DUP5 SWAP3 DUP4 SWAP3 PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 SWAP12 DUP13 DUP6 MSTORE DUP5 ADD PUSH1 0x20 SWAP1 SWAP4 SWAP3 SWAP2 SWAP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x40 DUP3 ADD SWAP6 AND DUP2 MSTORE ADD MSTORE JUMP JUMPDEST SUB DUP2 DUP11 ADDRESS GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x1141 JUMPI DUP8 SWAP2 PUSH2 0x1124 JUMPI JUMPDEST POP ISZERO PUSH2 0x10C8 JUMPI ADDRESS DUP7 MSTORE DUP6 DUP8 MSTORE PUSH2 0xDD6 DUP10 DUP12 DUP9 KECCAK256 SLOAD LT ISZERO PUSH2 0x2F85 JUMP JUMPDEST ADDRESS ISZERO PUSH2 0x1099 JUMPI ADDRESS PUSH0 MSTORE PUSH0 DUP8 MSTORE DUP10 PUSH0 KECCAK256 SLOAD DUP10 DUP2 LT PUSH2 0x1054 JUMPI DUP10 SWAP1 ADDRESS PUSH0 MSTORE PUSH0 DUP10 MSTORE SUB DUP11 PUSH0 KECCAK256 SSTORE DUP9 PUSH1 0x2 SLOAD SUB PUSH1 0x2 SSTORE PUSH0 DUP11 MLOAD DUP11 DUP2 MSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP10 ADDRESS SWAP3 LOG3 DUP6 JUMPDEST DUP2 SLOAD DUP2 LT ISZERO PUSH2 0xFD9 JUMPI DUP8 DUP4 PUSH2 0xE43 DUP4 PUSH2 0x2AD0 JUMP JUMPDEST POP SLOAD AND DUP13 MLOAD SWAP2 DUP3 DUP1 SWAP3 PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP3 MSTORE DUP14 ADDRESS SWAP1 DUP4 ADD MSTORE PUSH1 0x24 SWAP5 DUP6 SWAP2 GAS STATICCALL DUP1 ISZERO PUSH2 0xFA0 JUMPI DUP10 SWAP1 PUSH2 0xFAA JUMPI JUMPDEST PUSH2 0xEA0 SWAP2 POP PUSH2 0xE98 DUP5 DUP10 PUSH2 0x2B9A JUMP JUMPDEST MLOAD GT ISZERO PUSH2 0x2E01 JUMP JUMPDEST DUP12 DUP10 DUP7 DUP9 DUP14 DUP13 DUP13 PUSH2 0xEF7 PUSH2 0xEC1 DUP11 DUP14 PUSH2 0xEB8 DUP3 PUSH2 0x2AD0 JUMP JUMPDEST POP SLOAD AND SWAP7 PUSH2 0x2B9A JUMP JUMPDEST MLOAD SWAP8 MLOAD SWAP8 DUP9 SWAP7 DUP8 SWAP6 DUP7 SWAP5 DUP6 MSTORE DUP5 ADD PUSH1 0x20 SWAP1 SWAP4 SWAP3 SWAP2 SWAP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x40 DUP3 ADD SWAP6 AND DUP2 MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0xFA0 JUMPI DUP10 SWAP2 PUSH2 0xF73 JUMPI JUMPDEST POP ISZERO PUSH2 0xF18 JUMPI POP PUSH1 0x1 ADD PUSH2 0xE2F JUMP JUMPDEST DUP10 PUSH1 0x15 PUSH1 0x64 SWAP3 DUP12 DUP16 MLOAD SWAP4 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP6 MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x4173736574207472616E73666572206661696C65640000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH2 0xF93 SWAP2 POP DUP11 RETURNDATASIZE DUP13 GT PUSH2 0xF99 JUMPI JUMPDEST PUSH2 0xF8B DUP2 DUP4 PUSH2 0x29CE JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x2DE9 JUMP JUMPDEST DUP14 PUSH2 0xF09 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0xF81 JUMP JUMPDEST DUP14 MLOAD RETURNDATASIZE DUP12 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP DUP10 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0xFD2 JUMPI JUMPDEST PUSH2 0xFC0 DUP2 DUP4 PUSH2 0x29CE JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x6B5 JUMPI PUSH2 0xEA0 SWAP1 MLOAD PUSH2 0xE89 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0xFB6 JUMP JUMPDEST POP SWAP2 DUP10 SWAP2 DUP7 DUP11 DUP10 SWAP4 PUSH0 JUMPDEST DUP8 SLOAD DUP2 LT ISZERO PUSH2 0x1024 JUMPI DUP1 DUP6 PUSH2 0xFF9 PUSH1 0x1 SWAP4 PUSH2 0x2AD0 JUMP JUMPDEST POP SLOAD AND PUSH2 0x1006 DUP3 DUP13 PUSH2 0x2B9A JUMP JUMPDEST MLOAD SWAP1 PUSH0 MSTORE PUSH1 0xC DUP9 MSTORE PUSH2 0x101C DUP10 PUSH0 KECCAK256 SWAP2 DUP3 SLOAD PUSH2 0x2E66 JUMP JUMPDEST SWAP1 SSTORE ADD PUSH2 0xFE3 JUMP JUMPDEST POP DUP5 DUP5 PUSH32 0xCC16F5DBB4873280815C1EE09DBD06736CFFCC184412CF7A71A0FDB75D397CA5 SWAP3 DUP9 MLOAD SWAP5 DUP6 MSTORE AND SWAP3 LOG2 DUP1 RETURN JUMPDEST DUP11 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS DUP2 DUP12 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 DUP3 ADD DUP12 SWAP1 MSTORE SWAP1 DUP2 SWAP1 PUSH1 0x60 ADD SUB SWAP1 REVERT JUMPDEST PUSH1 0x24 DUP9 DUP8 DUP13 MLOAD SWAP2 PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 DUP9 DUP9 DUP13 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x466565207472616E73666572206661696C656400000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH2 0x113B SWAP2 POP DUP9 RETURNDATASIZE DUP11 GT PUSH2 0xF99 JUMPI PUSH2 0xF8B DUP2 DUP4 PUSH2 0x29CE JUMP JUMPDEST DUP12 PUSH2 0xDBB JUMP JUMPDEST DUP12 MLOAD RETURNDATASIZE DUP10 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP3 DUP1 SWAP3 SWAP5 SWAP6 SWAP7 SWAP8 SWAP9 POP DUP4 SWAP2 POP RETURNDATASIZE DUP4 GT PUSH2 0x118F JUMPI JUMPDEST PUSH2 0x1169 DUP2 DUP4 PUSH2 0x29CE JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x118B JUMPI MLOAD DUP4 DUP2 AND DUP2 SUB PUSH2 0x118B JUMPI DUP9 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 DUP9 SWAP2 PUSH2 0xDA7 PUSH2 0xD4A JUMP JUMPDEST DUP7 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x115F JUMP JUMPDEST DUP13 DUP11 DUP13 PUSH1 0x24 DUP10 PUSH2 0x11A5 DUP7 PUSH2 0x2AD0 JUMP JUMPDEST POP SLOAD AND SWAP4 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP4 MSTORE ADDRESS SWAP1 DUP4 ADD MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x1244 JUMPI DUP4 SWAP3 SWAP2 DUP15 SWAP2 DUP13 SWAP2 PUSH2 0x120D JUMPI JUMPDEST POP SWAP3 PUSH2 0x432 PUSH2 0x11FC SWAP3 PUSH1 0x1 SWAP6 PUSH2 0x2D72 JUMP JUMPDEST PUSH2 0x1206 DUP3 DUP12 PUSH2 0x2B9A JUMP JUMPDEST MSTORE ADD PUSH2 0xCE2 JUMP JUMPDEST SWAP4 POP POP POP DUP11 DUP3 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x123D JUMPI JUMPDEST PUSH2 0x1226 DUP2 DUP4 PUSH2 0x29CE JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x6B5 JUMPI SWAP1 MLOAD DUP3 SWAP2 SWAP1 DUP14 SWAP1 PUSH2 0x432 PUSH2 0x11EB JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x121C JUMP JUMPDEST DUP15 MLOAD RETURNDATASIZE DUP13 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x24 DUP9 PUSH1 0x11 DUP13 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP4 MSTORE MSTORE REVERT JUMPDEST PUSH1 0x64 DUP7 DUP7 DUP11 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F206C69717569646974790000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 DUP6 DUP6 DUP10 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5368617265206D7573742062652067726561746572207468616E203000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x78A JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x78A JUMPI PUSH2 0x136E PUSH2 0x2E80 JUMP JUMPDEST SWAP3 SWAP1 DUP2 MLOAD SWAP4 DUP3 DUP6 SWAP4 DUP5 ADD SWAP1 DUP5 MSTORE DUP3 MLOAD DUP1 SWAP2 MSTORE PUSH1 0x60 DUP5 ADD SWAP3 PUSH1 0x20 DUP1 SWAP2 ADD SWAP6 JUMPDEST DUP3 DUP2 LT PUSH2 0x13A7 JUMPI DUP6 DUP1 PUSH2 0x8DE DUP8 DUP8 DUP4 DUP3 SUB PUSH1 0x20 DUP6 ADD MSTORE PUSH2 0x28FA JUMP JUMPDEST DUP7 MLOAD ISZERO ISZERO DUP6 MSTORE SWAP6 DUP2 ADD SWAP6 DUP8 SWAP6 POP SWAP4 DUP2 ADD SWAP4 PUSH1 0x1 ADD PUSH2 0x138C JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x1E3 JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1E3 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x8 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x1332 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x786 JUMPI DUP1 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x14BE JUMPI PUSH2 0x1450 SWAP2 CALLDATASIZE SWAP2 ADD PUSH2 0x2A27 JUMP JUMPDEST SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 PUSH2 0x1476 DUP5 PUSH1 0xA SLOAD AND CALLER EQ PUSH2 0x2C59 JUMP JUMPDEST DUP5 JUMPDEST PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x14BA JUMPI DUP1 DUP6 PUSH2 0x148F PUSH1 0x1 SWAP4 PUSH2 0x2AD0 JUMP JUMPDEST POP SLOAD AND PUSH2 0x149C DUP3 DUP8 PUSH2 0x2B9A JUMP JUMPDEST MLOAD SWAP1 DUP9 MSTORE PUSH1 0xC DUP5 MSTORE PUSH2 0x14B2 DUP6 DUP10 KECCAK256 SWAP2 DUP3 SLOAD PUSH2 0x2E66 JUMP JUMPDEST SWAP1 SSTORE ADD PUSH2 0x1478 JUMP JUMPDEST DUP6 DUP1 RETURN JUMPDEST DUP5 DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x1E3 JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1E3 JUMPI PUSH1 0x20 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA SLOAD AND SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x1E3 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1E3 JUMPI DUP1 PUSH1 0x20 SWAP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x1567 PUSH2 0x28B4 JUMP JUMPDEST AND DUP2 MSTORE DUP1 DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x1332 JUMPI PUSH1 0x80 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1332 JUMPI PUSH2 0x15AF PUSH2 0x28B4 JUMP JUMPDEST SWAP3 PUSH2 0x15B8 PUSH2 0x28D7 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD PUSH1 0x64 CALLDATALOAD SWAP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP7 DUP8 DUP2 AND DUP2 SUB PUSH2 0x6B5 JUMPI PUSH1 0x2 PUSH1 0x5 SLOAD EQ PUSH2 0x1933 JUMPI PUSH1 0x2 PUSH1 0x5 SSTORE DUP8 DUP5 AND SWAP4 DUP9 DUP4 AND SWAP3 DUP6 DUP5 EQ PUSH2 0x18D6 JUMPI DUP5 ISZERO PUSH2 0x1879 JUMPI DUP9 MLOAD PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x80 DUP2 SWAP1 MSTORE CALLER DUP11 DUP4 ADD SWAP1 DUP2 MSTORE ADDRESS DUP2 DUP4 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP9 SWAP1 MSTORE DUP3 SWAP1 DUP2 SWAP1 PUSH1 0x60 ADD SUB DUP2 DUP12 DUP10 GAS CALL DUP1 ISZERO PUSH2 0x186F JUMPI SWAP2 PUSH2 0x1667 SWAP4 SWAP2 DUP8 SWAP4 PUSH2 0x184E JUMPI JUMPDEST POP PUSH2 0x2CBE JUMP JUMPDEST SWAP8 DUP8 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS DUP9 DUP3 ADD MSTORE PUSH1 0x80 MLOAD DUP2 PUSH1 0x24 DUP2 DUP10 GAS STATICCALL DUP1 ISZERO PUSH2 0x17E2 JUMPI DUP11 SWAP1 DUP9 SWAP1 PUSH2 0x1818 JUMPI JUMPDEST PUSH2 0x16B7 SWAP3 POP LT ISZERO PUSH2 0x2E01 JUMP JUMPDEST PUSH2 0x12C DUP1 DUP11 MUL SWAP1 DUP11 DUP3 DIV EQ DUP11 ISZERO OR ISZERO PUSH2 0x17EC JUMPI PUSH2 0x2710 PUSH2 0x16D8 SWAP2 DIV DUP11 PUSH2 0x2E66 JUMP JUMPDEST SWAP7 DUP9 MLOAD SWAP1 PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 DUP3 MSTORE DUP2 DUP1 PUSH2 0x1734 DUP12 DUP8 PUSH1 0x80 MLOAD SWAP6 DUP5 ADD PUSH1 0x20 SWAP1 SWAP4 SWAP3 SWAP2 SWAP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x40 DUP3 ADD SWAP6 AND DUP2 MSTORE ADD MSTORE JUMP JUMPDEST SUB DUP2 DUP11 DUP11 GAS CALL DUP1 ISZERO PUSH2 0x17E2 JUMPI SWAP4 PUSH2 0x17B0 SWAP8 SWAP6 SWAP4 PUSH32 0xCD3829A3813DC3CDD188FD3D01DCF3268C16BE2FDD2DD21D0665418816E46062 DUP12 DUP4 SWAP6 DUP11 SWAP9 SWAP6 DUP3 SWAP12 SWAP7 PUSH2 0x17C1 JUMPI JUMPDEST POP DUP2 MLOAD SWAP4 DUP9 DUP6 MSTORE DUP14 PUSH1 0x80 MLOAD DUP7 ADD MSTORE AND SWAP3 LOG4 DUP4 MSTORE PUSH1 0xC PUSH1 0x80 MLOAD MSTORE PUSH2 0x179D DUP5 DUP5 KECCAK256 SWAP2 DUP3 SLOAD PUSH2 0x2E73 JUMP JUMPDEST SWAP1 SSTORE DUP2 MSTORE PUSH1 0xC PUSH1 0x80 MLOAD MSTORE KECCAK256 SWAP2 DUP3 SLOAD PUSH2 0x2E73 JUMP JUMPDEST SWAP1 SSTORE PUSH1 0x1 PUSH1 0x5 SSTORE MLOAD SWAP1 DUP2 MSTORE PUSH1 0x80 MLOAD SWAP1 RETURN JUMPDEST PUSH2 0x17DB SWAP1 PUSH1 0x80 MLOAD RETURNDATASIZE PUSH1 0x80 MLOAD GT PUSH2 0xF99 JUMPI PUSH2 0xF8B DUP2 DUP4 PUSH2 0x29CE JUMP JUMPDEST POP PUSH0 PUSH2 0x1776 JUMP JUMPDEST DUP10 MLOAD RETURNDATASIZE DUP10 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x24 DUP8 PUSH1 0x11 DUP11 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP4 MSTORE MSTORE REVERT JUMPDEST POP POP PUSH1 0x80 MLOAD RETURNDATASIZE DUP2 GT PUSH2 0x1847 JUMPI JUMPDEST PUSH2 0x182F DUP2 DUP4 PUSH2 0x29CE JUMP JUMPDEST DUP2 PUSH1 0x80 MLOAD SWAP2 DUP2 ADD SUB SLT PUSH2 0x6B5 JUMPI DUP10 PUSH2 0x16B7 SWAP2 MLOAD PUSH2 0x16AB JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1825 JUMP JUMPDEST PUSH2 0x1868 SWAP1 PUSH1 0x80 MLOAD RETURNDATASIZE PUSH1 0x80 MLOAD GT PUSH2 0xF99 JUMPI PUSH2 0xF8B DUP2 DUP4 PUSH2 0x29CE JUMP JUMPDEST POP PUSH0 PUSH2 0x1661 JUMP JUMPDEST DUP11 MLOAD RETURNDATASIZE DUP11 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x64 DUP9 PUSH1 0x20 DUP12 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E207A65726F PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 DUP9 PUSH1 0x20 DUP12 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F742073776170207468652073616D6520746F6B656E000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP6 DUP8 MLOAD PUSH32 0x3EE5AEB500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x78A JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x78A JUMPI PUSH1 0x7 SLOAD PUSH2 0x1997 DUP2 PUSH2 0x2BAE JUMP JUMPDEST SWAP2 JUMPDEST DUP2 DUP2 LT PUSH2 0x19B5 JUMPI DUP4 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 SWAP1 PUSH2 0x8DE SWAP1 DUP3 ADD DUP7 PUSH2 0x2A87 JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x19D6 PUSH1 0x1 SWAP4 PUSH2 0x2AD0 JUMP JUMPDEST POP SLOAD AND PUSH2 0x19E3 DUP3 DUP7 PUSH2 0x2B9A JUMP JUMPDEST MSTORE ADD PUSH2 0x1999 JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x1E3 JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1E3 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH2 0x12C DUP2 MSTORE RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x6B5 JUMPI PUSH1 0x20 SWAP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC SWAP3 DUP3 DUP5 CALLDATASIZE ADD SLT PUSH2 0x6B5 JUMPI PUSH2 0x1A62 PUSH2 0x28B4 JUMP JUMPDEST SWAP2 PUSH2 0x1A73 PUSH2 0x1A6E PUSH2 0x2FEA JUMP JUMPDEST PUSH2 0x2B35 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x3E8 SWAP1 DUP2 DUP2 MUL SWAP2 DUP2 DUP4 DIV EQ SWAP1 ISZERO OR ISZERO PUSH2 0x1E0D JUMPI PUSH2 0x2710 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP6 AND PUSH0 MSTORE PUSH0 DUP7 MSTORE DIV DUP3 PUSH0 KECCAK256 SLOAD LT PUSH2 0x1DB2 JUMPI PUSH1 0x7 SWAP5 PUSH1 0x7 SLOAD PUSH2 0x1AC4 DUP2 PUSH2 0x2BAE JUMP JUMPDEST SWAP2 PUSH2 0x1ACE DUP3 PUSH2 0x2BAE JUMP JUMPDEST SWAP2 PUSH0 JUMPDEST DUP2 DUP2 LT PUSH2 0x1D79 JUMPI POP POP DUP6 PUSH1 0xA SLOAD AND DUP1 EXTCODESIZE ISZERO PUSH2 0x6B5 JUMPI PUSH0 DUP1 SWAP2 DUP7 DUP9 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH32 0xFE11011600000000000000000000000000000000000000000000000000000000 DUP4 MSTORE GAS CALL DUP1 ISZERO PUSH2 0x1D6F JUMPI PUSH2 0x1D5A JUMPI JUMPDEST POP SWAP1 DUP9 SWAP2 DUP7 PUSH1 0x6 SLOAD AND PUSH1 0x8 SLOAD SWAP1 DUP9 PUSH1 0xB SLOAD AND DUP2 EXTCODESIZE ISZERO PUSH2 0x1D56 JUMPI DUP9 MLOAD PUSH32 0x325192D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0xC0 DUP2 DUP11 ADD MSTORE SWAP5 DUP7 SWAP5 DUP7 SWAP5 DUP6 SWAP4 DUP8 SWAP4 DUP6 SWAP4 PUSH2 0x1B8F SWAP2 PUSH2 0x1B80 PUSH1 0xC4 DUP8 ADD DUP16 PUSH2 0x2A87 JUMP JUMPDEST SWAP2 DUP7 DUP4 SUB ADD PUSH1 0x24 DUP8 ADD MSTORE PUSH2 0x28FA JUMP JUMPDEST SWAP2 ADDRESS PUSH1 0x44 DUP6 ADD MSTORE ADDRESS PUSH1 0x64 DUP6 ADD MSTORE PUSH1 0x84 DUP5 ADD MSTORE PUSH1 0xA4 DUP4 ADD MSTORE SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x1D4C JUMPI PUSH2 0x1D38 JUMPI JUMPDEST POP JUMPDEST DUP7 SLOAD DUP2 LT ISZERO PUSH2 0x1CFA JUMPI DUP5 PUSH2 0x1BCA DUP3 PUSH2 0x2AD0 JUMP JUMPDEST POP SLOAD AND DUP5 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS DUP6 DUP3 ADD MSTORE DUP8 DUP2 PUSH1 0x24 DUP2 DUP6 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x1CF0 JUMPI SWAP1 DUP9 SWAP2 DUP12 SWAP2 PUSH2 0x1CBF JUMPI JUMPDEST POP DUP3 PUSH2 0x1C7D SWAP4 DUP13 MSTORE PUSH1 0xC DUP4 MSTORE DUP2 DUP9 DUP14 KECCAK256 SSTORE DUP9 PUSH1 0xA SLOAD AND DUP13 DUP10 MLOAD DUP1 SWAP7 DUP2 SWAP6 DUP3 SWAP5 PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 DUP5 MSTORE DUP13 DUP5 ADD PUSH1 0x20 SWAP1 SWAP4 SWAP3 SWAP2 SWAP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x40 DUP3 ADD SWAP6 AND DUP2 MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x1CB5 JUMPI SWAP1 PUSH1 0x1 SWAP3 SWAP2 PUSH2 0x1C98 JUMPI JUMPDEST POP ADD PUSH2 0x1BB7 JUMP JUMPDEST PUSH2 0x1CAE SWAP1 DUP9 RETURNDATASIZE DUP11 GT PUSH2 0xF99 JUMPI PUSH2 0xF8B DUP2 DUP4 PUSH2 0x29CE JUMP JUMPDEST POP PUSH0 PUSH2 0x1C91 JUMP JUMPDEST DUP6 MLOAD RETURNDATASIZE DUP12 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP3 DUP2 SWAP4 SWAP3 POP RETURNDATASIZE DUP4 GT PUSH2 0x1CE9 JUMPI JUMPDEST PUSH2 0x1CD6 DUP2 DUP4 PUSH2 0x29CE JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x6B5 JUMPI MLOAD DUP8 SWAP1 PUSH2 0x1C7D PUSH2 0x1C10 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1CCC JUMP JUMPDEST DUP7 MLOAD RETURNDATASIZE DUP13 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP4 MLOAD DUP7 DUP2 MSTORE DUP9 SWAP1 CALLER SWAP1 PUSH32 0x279B343370F587AF7FB675AE7C8578E9C8ABCC373236AD02C501A4771FE7A7B8 SWAP1 DUP1 PUSH2 0x1D32 DUP2 DUP13 ADD DUP9 PUSH2 0x2A87 JUMP JUMPDEST SUB SWAP1 LOG2 DUP1 RETURN JUMPDEST PUSH2 0x1D41 SWAP1 PUSH2 0x298D JUMP JUMPDEST PUSH2 0x118B JUMPI DUP7 PUSH0 PUSH2 0x1BB5 JUMP JUMPDEST DUP6 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP6 DUP1 REVERT JUMPDEST PUSH2 0x1D66 SWAP2 SWAP3 SWAP10 POP PUSH2 0x298D JUMP JUMPDEST PUSH0 SWAP8 SWAP1 PUSH0 PUSH2 0x1B20 JUMP JUMPDEST DUP7 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP1 DUP9 PUSH2 0x1D86 PUSH1 0x1 SWAP4 PUSH2 0x2AD0 JUMP JUMPDEST POP SLOAD AND PUSH2 0x1D93 DUP3 DUP9 PUSH2 0x2B9A JUMP JUMPDEST MSTORE DUP2 PUSH2 0x1D9E DUP3 PUSH2 0x2AD0 JUMP JUMPDEST POP ADD SLOAD PUSH2 0x1DAB DUP3 DUP8 PUSH2 0x2B9A JUMP JUMPDEST MSTORE ADD PUSH2 0x1AD1 JUMP JUMPDEST DUP4 PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E646572203525204C50207368617265000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x11 DUP3 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP3 CALLVALUE PUSH2 0x6B5 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x1DC PUSH2 0x1E4E CALLDATASIZE PUSH2 0x292D JUMP JUMPDEST SWAP2 PUSH2 0x2CBE JUMP JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x6B5 JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x6B5 JUMPI DUP1 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x6B5 JUMPI PUSH2 0x1EA2 SWAP2 CALLDATASIZE SWAP2 ADD PUSH2 0x2A27 JUMP JUMPDEST SWAP1 PUSH1 0x24 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x6B5 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 PUSH2 0x1ED4 DUP5 PUSH1 0xA SLOAD AND CALLER EQ PUSH2 0x2C59 JUMP JUMPDEST PUSH0 JUMPDEST PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x1F3C JUMPI DUP1 DUP6 PUSH2 0x1EED PUSH1 0x1 SWAP4 PUSH2 0x2AD0 JUMP JUMPDEST POP SLOAD AND PUSH2 0x1EFA DUP3 DUP6 PUSH2 0x2B9A JUMP JUMPDEST MLOAD SWAP1 DUP6 ISZERO PUSH2 0x1F20 JUMPI PUSH0 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH2 0x1F17 DUP7 PUSH0 KECCAK256 SWAP2 DUP3 SLOAD PUSH2 0x2E73 JUMP JUMPDEST SWAP1 SSTORE JUMPDEST ADD PUSH2 0x1ED6 JUMP JUMPDEST PUSH0 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH2 0x1F35 DUP7 PUSH0 KECCAK256 SWAP2 DUP3 SLOAD PUSH2 0x2E66 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x1F1A JUMP JUMPDEST STOP JUMPDEST DUP3 CALLVALUE PUSH2 0x6B5 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x6B5 JUMPI PUSH2 0x8DE PUSH2 0x1F78 PUSH2 0x306B JUMP JUMPDEST DUP4 SWAP3 SWAP2 SWAP3 MLOAD SWAP4 DUP5 SWAP4 DUP5 MSTORE DUP1 PUSH1 0x20 DUP6 ADD MSTORE DUP4 ADD SWAP1 PUSH2 0x28FA JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x6B5 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x6B5 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH1 0x12 DUP2 MSTORE RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x6B5 JUMPI PUSH2 0x1FD9 CALLDATASIZE PUSH2 0x292D JUMP JUMPDEST SWAP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 SWAP3 SWAP4 AND DUP1 PUSH0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE DUP6 PUSH0 KECCAK256 CALLER PUSH0 MSTORE PUSH1 0x20 MSTORE DUP6 PUSH0 KECCAK256 SLOAD SWAP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 SUB PUSH2 0x203F JUMPI JUMPDEST PUSH1 0x20 DUP8 PUSH2 0xA76 DUP9 DUP9 DUP9 PUSH2 0x31B2 JUMP JUMPDEST DUP6 DUP4 LT PUSH2 0x20D9 JUMPI DUP2 ISZERO PUSH2 0x20AA JUMPI CALLER ISZERO PUSH2 0x207B JUMPI POP PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE DUP7 DUP3 KECCAK256 CALLER DUP4 MSTORE DUP2 MSTORE SWAP1 DUP7 SWAP1 KECCAK256 SWAP2 DUP6 SWAP1 SUB SWAP1 SWAP2 SSTORE DUP3 SWAP1 PUSH2 0xA76 PUSH2 0x2031 JUMP JUMPDEST PUSH1 0x24 SWAP1 PUSH0 DUP9 MLOAD SWAP2 PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x24 SWAP1 PUSH0 DUP9 MLOAD SWAP2 PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST DUP7 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER SWAP2 DUP2 ADD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 DUP2 ADD DUP7 SWAP1 MSTORE DUP3 SWAP2 POP PUSH1 0x60 ADD SUB SWAP1 REVERT JUMPDEST DUP3 CALLVALUE PUSH2 0x6B5 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x6B5 JUMPI PUSH1 0x7 SLOAD PUSH2 0x2159 DUP2 PUSH2 0x2BAE JUMP JUMPDEST SWAP1 PUSH0 JUMPDEST DUP2 DUP2 LT PUSH2 0x2178 JUMPI DUP4 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 SWAP1 PUSH2 0x8DE SWAP1 DUP3 ADD DUP7 PUSH2 0x28FA JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH2 0x2185 DUP2 SWAP4 PUSH2 0x2AD0 JUMP JUMPDEST POP ADD SLOAD PUSH2 0x2192 DUP3 DUP7 PUSH2 0x2B9A JUMP JUMPDEST MSTORE ADD PUSH2 0x215C JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x6B5 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x6B5 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x21D3 PUSH2 0x306B JUMP JUMPDEST POP SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x6B5 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x6B5 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x2 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x6B5 JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x6B5 JUMPI PUSH2 0x224E PUSH2 0x28B4 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER ISZERO PUSH2 0x22ED JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 ISZERO PUSH2 0x22BE JUMPI PUSH1 0x20 SWAP4 POP CALLER PUSH0 MSTORE PUSH1 0x1 DUP5 MSTORE DUP3 PUSH0 KECCAK256 DUP3 PUSH0 MSTORE DUP5 MSTORE DUP1 DUP4 PUSH0 KECCAK256 SSTORE DUP3 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 CALLER SWAP3 LOG3 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x24 DUP5 PUSH0 DUP6 MLOAD SWAP2 PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x24 DUP5 PUSH0 DUP6 MLOAD SWAP2 PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST DUP3 CALLVALUE PUSH2 0x6B5 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x6B5 JUMPI PUSH2 0x8DE SWAP1 PUSH2 0x2357 PUSH2 0x2BFD JUMP JUMPDEST SWAP1 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x28FA JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x6B5 JUMPI PUSH1 0x20 SWAP1 DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x6B5 JUMPI PUSH2 0x23A4 PUSH2 0x28B4 JUMP JUMPDEST SWAP2 PUSH2 0x23B0 PUSH2 0x1A6E PUSH2 0x2FEA JUMP JUMPDEST PUSH2 0x23B8 PUSH2 0x306B JUMP JUMPDEST SWAP5 SWAP1 PUSH1 0x7 SLOAD SWAP1 PUSH2 0x23C7 DUP3 PUSH2 0x2BAE JUMP JUMPDEST SWAP7 PUSH0 JUMPDEST DUP4 DUP2 LT PUSH2 0x2680 JUMPI POP POP POP PUSH0 SWAP1 PUSH0 SWAP1 JUMPDEST DUP1 DUP3 LT PUSH2 0x265F JUMPI POP POP PUSH0 JUMPDEST DUP7 MLOAD DUP2 LT ISZERO PUSH2 0x2618 JUMPI PUSH2 0x23F7 DUP2 DUP9 PUSH2 0x2B9A JUMP JUMPDEST MLOAD PUSH2 0x2405 JUMPI JUMPDEST PUSH1 0x1 ADD PUSH2 0x23E4 JUMP JUMPDEST PUSH2 0x248A PUSH2 0x2412 DUP3 DUP10 PUSH2 0x2B9A JUMP JUMPDEST MLOAD DUP6 PUSH2 0x241D DUP5 PUSH2 0x2AD0 JUMP JUMPDEST POP SLOAD PUSH1 0x6 SLOAD PUSH1 0xB SLOAD DUP11 MLOAD PUSH32 0x248391FF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 AND DUP11 DUP3 ADD SWAP1 DUP2 MSTORE SWAP4 DUP3 AND PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x40 DUP5 ADD SWAP6 SWAP1 SWAP6 MSTORE SWAP4 SWAP5 DUP6 SWAP3 SWAP2 DUP6 AND SWAP2 DUP4 SWAP2 DUP3 SWAP2 PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x260E JUMPI PUSH0 SWAP3 PUSH2 0x25DF JUMPI JUMPDEST POP DUP2 ISZERO PUSH2 0x2583 JUMPI PUSH2 0x251C DUP7 DUP4 DUP4 PUSH2 0x24B2 DUP8 PUSH2 0x2AD0 JUMP JUMPDEST POP SLOAD AND DUP5 PUSH1 0xA SLOAD AND PUSH0 DUP11 DUP14 MLOAD SWAP7 DUP8 SWAP6 DUP7 SWAP5 DUP6 SWAP4 PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 DUP6 MSTORE CALLER SWAP1 DUP6 ADD PUSH1 0x40 SWAP2 SWAP5 SWAP4 SWAP3 SWAP5 PUSH1 0x60 DUP3 ADD SWAP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP3 AND DUP4 MSTORE AND PUSH1 0x20 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x2579 JUMPI SWAP1 PUSH1 0x1 SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0x255C JUMPI JUMPDEST POP PUSH2 0x253C DUP4 PUSH2 0x2AD0 JUMP JUMPDEST POP SLOAD AND PUSH0 MSTORE PUSH1 0xC DUP7 MSTORE PUSH2 0x2553 DUP8 PUSH0 KECCAK256 SWAP2 DUP3 SLOAD PUSH2 0x2E73 JUMP JUMPDEST SWAP1 SSTORE SWAP1 POP PUSH2 0x23FD JUMP JUMPDEST PUSH2 0x2572 SWAP1 DUP9 RETURNDATASIZE DUP11 GT PUSH2 0xF99 JUMPI PUSH2 0xF8B DUP2 DUP4 PUSH2 0x29CE JUMP JUMPDEST POP DUP11 PUSH2 0x2532 JUMP JUMPDEST DUP9 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x64 DUP6 DUP8 DUP10 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420746F6B656E20616D6F756E7420746F206164640000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 SWAP2 POP DUP6 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x2607 JUMPI JUMPDEST PUSH2 0x25F7 DUP2 DUP4 PUSH2 0x29CE JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x6B5 JUMPI MLOAD SWAP1 DUP10 PUSH2 0x249C JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x25ED JUMP JUMPDEST DUP8 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP4 PUSH32 0xA95AD530009C6F929555E70A66AADBEAE7231E45756C5B028CA77FBAA376E73E PUSH2 0x265A DUP10 DUP9 PUSH2 0x2649 DUP8 DUP13 PUSH2 0x3118 JUMP JUMPDEST MLOAD SWAP2 DUP3 SWAP2 DUP6 DUP4 MSTORE CALLER SWAP6 DUP4 ADD SWAP1 PUSH2 0x28FA JUMP JUMPDEST SUB SWAP1 LOG2 STOP JUMPDEST SWAP1 SWAP2 PUSH2 0x2678 PUSH1 0x1 SWAP2 PUSH2 0x2671 DUP6 DUP12 PUSH2 0x2B9A JUMP JUMPDEST MLOAD SWAP1 PUSH2 0x2E73 JUMP JUMPDEST SWAP3 ADD SWAP1 PUSH2 0x23D9 JUMP JUMPDEST DUP1 PUSH2 0x2710 PUSH2 0x269C PUSH1 0x1 PUSH2 0x2693 DUP2 SWAP6 PUSH2 0x2AD0 JUMP JUMPDEST POP ADD SLOAD DUP7 PUSH2 0x2D72 JUMP JUMPDEST DIV DUP1 PUSH2 0x26A8 DUP4 DUP7 PUSH2 0x2B9A JUMP JUMPDEST MLOAD LT PUSH2 0x26B6 JUMPI JUMPDEST POP ADD PUSH2 0x23CA JUMP JUMPDEST PUSH2 0x26C4 SWAP1 PUSH2 0x5A9 DUP4 DUP7 PUSH2 0x2B9A JUMP JUMPDEST PUSH2 0x26CE DUP3 DUP13 PUSH2 0x2B9A JUMP JUMPDEST MSTORE DUP11 PUSH2 0x26AF JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x6B5 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x6B5 JUMPI DUP1 MLOAD SWAP1 PUSH0 SWAP3 PUSH1 0x3 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 SHR SWAP2 PUSH1 0x1 DUP2 AND DUP1 ISZERO PUSH2 0x2814 JUMPI JUMPDEST PUSH1 0x20 SWAP5 DUP6 DUP6 LT DUP3 EQ PUSH2 0x27E8 JUMPI POP DUP4 DUP8 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x27AA JUMPI POP PUSH1 0x1 EQ PUSH2 0x2750 JUMPI JUMPDEST POP POP POP PUSH2 0xAF9 DUP3 PUSH2 0x8DE SWAP5 SUB DUP4 PUSH2 0x29CE JUMP JUMPDEST PUSH1 0x3 PUSH0 SWAP1 DUP2 MSTORE SWAP3 SWAP6 POP PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B JUMPDEST DUP3 DUP5 LT PUSH2 0x2797 JUMPI POP POP POP DUP3 PUSH2 0x8DE SWAP5 PUSH2 0xAF9 SWAP3 DUP3 ADD ADD SWAP5 PUSH2 0x273E JUMP JUMPDEST DUP1 SLOAD DUP7 DUP6 ADD DUP9 ADD MSTORE SWAP3 DUP7 ADD SWAP3 DUP2 ADD PUSH2 0x277B JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND DUP7 DUP6 ADD MSTORE POP POP ISZERO ISZERO PUSH1 0x5 SHL DUP4 ADD ADD SWAP3 POP PUSH2 0xAF9 DUP3 PUSH2 0x8DE PUSH2 0x273E JUMP JUMPDEST PUSH1 0x22 SWAP1 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP3 PUSH1 0x7F AND SWAP3 PUSH2 0x271E JUMP JUMPDEST CALLVALUE PUSH2 0x6B5 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x6B5 JUMPI PUSH1 0x20 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x6 SLOAD AND DUP2 MSTORE RETURN JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F PUSH1 0x20 PUSH1 0x40 SWAP5 DUP2 DUP6 MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP2 DUP3 DUP3 DUP9 ADD MSTORE ADD DUP7 DUP7 ADD MCOPY PUSH0 DUP6 DUP3 DUP7 ADD ADD MSTORE ADD AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x6B5 JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x6B5 JUMPI JUMP JUMPDEST SWAP1 DUP2 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP1 SWAP4 ADD SWAP4 ADD SWAP2 PUSH0 JUMPDEST DUP3 DUP2 LT PUSH2 0x2919 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x290B JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC PUSH1 0x60 SWAP2 ADD SLT PUSH2 0x6B5 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 PUSH1 0x4 CALLDATALOAD DUP3 DUP2 AND DUP2 SUB PUSH2 0x6B5 JUMPI SWAP2 PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 AND DUP2 SUB PUSH2 0x6B5 JUMPI SWAP1 PUSH1 0x44 CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x29A1 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP1 PUSH1 0x1F PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x29A1 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x29A1 JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x6B5 JUMPI PUSH1 0x20 SWAP1 DUP3 CALLDATALOAD PUSH2 0x2A41 DUP2 PUSH2 0x2A0F JUMP JUMPDEST SWAP4 PUSH2 0x2A4F PUSH1 0x40 MLOAD SWAP6 DUP7 PUSH2 0x29CE JUMP JUMPDEST DUP2 DUP6 MSTORE PUSH1 0x20 DUP1 DUP7 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x6B5 JUMPI PUSH1 0x20 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x2A78 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE SWAP1 DUP4 ADD SWAP1 DUP4 ADD PUSH2 0x2A6A JUMP JUMPDEST SWAP1 DUP2 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP1 SWAP4 ADD SWAP4 ADD SWAP2 PUSH0 JUMPDEST DUP3 DUP2 LT PUSH2 0x2AA6 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x2A98 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x2B08 JUMPI PUSH1 0x7 PUSH0 MSTORE PUSH1 0x1 SHL PUSH32 0xA66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C688 ADD SWAP1 PUSH0 SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ISZERO PUSH2 0x2B3C JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526562616C616E6365206E6F74206E6565646564000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x2B08 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x2BB8 DUP3 PUSH2 0x2A0F JUMP JUMPDEST PUSH2 0x2BC5 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x29CE JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH2 0x2BF3 DUP3 SWAP5 PUSH2 0x2A0F JUMP JUMPDEST ADD SWAP1 PUSH1 0x20 CALLDATASIZE SWAP2 ADD CALLDATACOPY JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x2C09 DUP2 PUSH2 0x2BAE JUMP JUMPDEST SWAP1 PUSH0 JUMPDEST DUP2 DUP2 LT PUSH2 0x2C18 JUMPI POP POP SWAP1 JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x2C39 PUSH1 0x1 SWAP4 PUSH2 0x2AD0 JUMP JUMPDEST POP SLOAD AND PUSH0 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SLOAD PUSH2 0x2C52 DUP3 DUP7 PUSH2 0x2B9A JUMP JUMPDEST MSTORE ADD PUSH2 0x2C0C JUMP JUMPDEST ISZERO PUSH2 0x2C60 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920506572697068657279000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH32 0x248391FF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP3 DUP3 AND PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x44 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP1 SWAP2 PUSH1 0x20 SWAP2 DUP4 SWAP2 AND DUP2 DUP1 PUSH1 0x64 DUP2 ADD JUMPDEST SUB SWAP2 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x2D67 JUMPI PUSH0 SWAP2 PUSH2 0x2D38 JUMPI POP SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x2D5F JUMPI JUMPDEST DUP2 PUSH2 0x2D53 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x29CE JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x6B5 JUMPI MLOAD SWAP1 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x2D46 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x2D85 JUMPI JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x2DBC JUMPI DIV SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x6B5 JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x6B5 JUMPI SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x2E08 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E74204C697175696469747900000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x2D85 JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x2D85 JUMPI JUMP JUMPDEST PUSH2 0x2E88 PUSH2 0x306B JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x7 SLOAD SWAP1 PUSH2 0x2E97 DUP3 PUSH2 0x2A0F JUMP JUMPDEST SWAP2 PUSH2 0x2EA5 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x29CE JUMP JUMPDEST DUP1 DUP4 MSTORE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH2 0x2ED2 DUP3 PUSH2 0x2A0F JUMP JUMPDEST ADD CALLDATASIZE PUSH1 0x20 DUP6 ADD CALLDATACOPY PUSH2 0x2EE2 DUP2 PUSH2 0x2BAE JUMP JUMPDEST SWAP5 PUSH0 JUMPDEST DUP3 DUP2 LT PUSH2 0x2EF4 JUMPI POP POP POP POP SWAP2 SWAP1 JUMP JUMPDEST PUSH2 0x2EFE DUP2 DUP4 PUSH2 0x2B9A JUMP JUMPDEST MLOAD SWAP1 PUSH2 0x2710 SWAP2 DUP3 DUP2 MUL SWAP3 DUP2 DUP5 DIV EQ SWAP1 ISZERO OR ISZERO PUSH2 0x2D85 JUMPI PUSH2 0x2F20 DUP6 PUSH1 0x1 SWAP4 PUSH2 0x2DB2 JUMP JUMPDEST PUSH2 0x2F29 DUP3 PUSH2 0x2AD0 JUMP JUMPDEST POP DUP4 ADD SLOAD DUP4 SWAP2 DUP2 DUP2 GT ISZERO PUSH2 0x2F5E JUMPI SWAP1 PUSH2 0x2F41 SWAP2 PUSH2 0x2E66 JUMP JUMPDEST PUSH2 0x2F4B DUP4 DUP12 PUSH2 0x2B9A JUMP JUMPDEST MSTORE PUSH2 0x2F56 DUP3 DUP9 PUSH2 0x2B9A JUMP JUMPDEST MSTORE JUMPDEST ADD PUSH2 0x2EE5 JUMP JUMPDEST SWAP1 PUSH2 0x2F69 SWAP3 POP PUSH2 0x2E66 JUMP JUMPDEST PUSH2 0x2F73 DUP3 DUP11 PUSH2 0x2B9A JUMP JUMPDEST MSTORE PUSH0 PUSH2 0x2F7F DUP3 DUP9 PUSH2 0x2B9A JUMP JUMPDEST MSTORE PUSH2 0x2F58 JUMP JUMPDEST ISZERO PUSH2 0x2F8C JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E74206C697175696469747900000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH2 0x2FF2 PUSH2 0x2E80 JUMP JUMPDEST PUSH0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x3039 JUMPI PUSH2 0x3007 DUP2 DUP5 PUSH2 0x2B9A JUMP JUMPDEST MLOAD ISZERO ISZERO DUP1 PUSH2 0x3024 JUMPI JUMPDEST PUSH2 0x301C JUMPI PUSH1 0x1 ADD PUSH2 0x2FF4 JUMP JUMPDEST POP POP POP PUSH1 0x1 SWAP1 JUMP JUMPDEST POP PUSH2 0x302F DUP2 DUP4 PUSH2 0x2B9A JUMP JUMPDEST MLOAD PUSH1 0x8 SLOAD LT PUSH2 0x3010 JUMP JUMPDEST POP POP POP PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x3048 PUSH2 0x306B JUMP JUMPDEST POP PUSH1 0x2 SLOAD DUP1 ISZERO PUSH2 0x3065 JUMPI PUSH2 0x432 PUSH2 0x3062 SWAP3 PUSH1 0x9 SLOAD SWAP1 PUSH2 0x2D72 JUMP JUMPDEST SWAP1 JUMP JUMPDEST POP POP PUSH0 SWAP1 JUMP JUMPDEST PUSH1 0x7 SLOAD SWAP1 PUSH0 PUSH2 0x3079 DUP4 PUSH2 0x2BAE JUMP JUMPDEST SWAP3 PUSH0 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 PUSH1 0xB SLOAD AND SWAP1 JUMPDEST DUP3 DUP5 LT PUSH2 0x30A7 JUMPI POP POP POP POP SWAP2 SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 PUSH2 0x30E7 PUSH1 0x1 SWAP2 DUP4 PUSH2 0x30BB DUP9 PUSH2 0x2AD0 JUMP JUMPDEST POP SLOAD AND DUP6 DUP2 SUB PUSH2 0x30F1 JUMPI PUSH0 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SLOAD PUSH2 0x30DB DUP9 DUP12 PUSH2 0x2B9A JUMP JUMPDEST MSTORE JUMPDEST PUSH2 0x2671 DUP8 DUP11 PUSH2 0x2B9A JUMP JUMPDEST SWAP5 ADD SWAP3 SWAP2 SWAP1 PUSH2 0x3098 JUMP JUMPDEST DUP1 PUSH2 0x3108 SWAP2 PUSH0 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SLOAD SWAP1 PUSH2 0x32BF JUMP JUMPDEST PUSH2 0x3112 DUP9 DUP12 PUSH2 0x2B9A JUMP JUMPDEST MSTORE PUSH2 0x30DD JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 ISZERO PUSH2 0x3182 JUMPI PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x20 DUP3 PUSH2 0x3166 PUSH0 SWAP5 PUSH1 0x2 SLOAD PUSH2 0x2E73 JUMP JUMPDEST PUSH1 0x2 SSTORE DUP5 DUP5 MSTORE DUP4 DUP3 MSTORE PUSH1 0x40 DUP5 KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x24 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP5 AND SWAP3 DUP4 ISZERO PUSH2 0x328F JUMPI AND SWAP3 DUP4 ISZERO PUSH2 0x3182 JUMPI DUP3 PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SLOAD SWAP1 DUP3 DUP3 LT PUSH2 0x3237 JUMPI POP DUP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 PUSH1 0x20 SWAP3 DUP6 PUSH0 MSTORE PUSH0 DUP5 MSTORE SUB PUSH1 0x40 PUSH0 KECCAK256 SSTORE DUP5 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x24 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x6 SLOAD PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH32 0x248391FF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP4 DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP1 DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x20 SWAP2 DUP4 SWAP2 AND DUP2 DUP1 PUSH1 0x64 DUP2 ADD PUSH2 0x2D23 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC8 COINBASE BASEFEE LT 0xC3 PUSH14 0xC329497F0BF640C364C1D29C54D4 DUP1 PUSH17 0xBA851498E68EF0072A6864736F6C634300 ADDMOD NOT STOP CALLER LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ORIGIN CREATE 0xF8 ADDRESS 0xF 0xD0 PUSH32 0x3D450F8E04567EFAF833E1F6903E7062539755A2A77CCCA51664736F6C634300 ADDMOD NOT STOP CALLER ","sourceMap":"1731:4713:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2357:1:0;1731:4713:16;;:::i;:::-;2303:62:0;;:::i;:::-;2357:1;:::i;:::-;1731:4713:16;;;;;;;;;;;;;;;;;;;:::i;:::-;2303:62:0;;:::i;:::-;1731:4713:16;;6195:25;1731:4713;;;6195:25;1731:4713;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8837:64:1;;1731:4713:16;;;;;;;;4301:16:1;1731:4713:16;;;;4726:16:1;;:34;;;;1731:4713:16;4805:1:1;4790:16;:50;;;;1731:4713:16;4855:13:1;:30;;;;1731:4713:16;4851:91:1;;;1731:4713:16;;;;4805:1:1;1731:4713:16;;;;;;;4979:67:1;;1731:4713:16;6893:76:1;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;6961:1;2176:10:16;6961:1:1;:::i;:::-;1731:4713:16;;2194:24;1731:4713;;;2194:24;1731:4713;5066:101:1;;1731:4713:16;5066:101:1;5142:14;1731:4713:16;;;;;;;;;;4805:1:1;1731:4713:16;;5142:14:1;1731:4713:16;4979:67:1;1731:4713:16;;;;;;4979:67:1;;;4851:91;1731:4713:16;;4908:23:1;;;;4855:30;4872:13;;;4855:30;;;4790:50;4818:4;4810:25;:30;;-1:-1:-1;4790:50:1;;4726:34;;;-1:-1:-1;4726:34:1;;1731:4713:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;5338:30;;;;:::i;:::-;5375:17;1731:4713;5406:13;1731:4713;;;;;;5421:19;;;;;;5401:411;5846:20;;;;;;;:::i;:::-;5878:13;1731:4713;5893:9;;;;;;1731:4713;;;;;;;;;;;;;;:::i;5904:3::-;5930:8;;;1731:4713;5930:8;;;:::i;:::-;1731:4713;;5918:20;;;;:::i;:::-;1731:4713;;5878:13;;5442:3;5489:11;;;;;;;;;;:::i;:::-;1731:4713;;;;;;;;;;5536:16;1731:4713;5536:16;;1731:4713;5536:16;;;;;;;;;;;1731:4713;5536:16;;;5442:3;5568:13;1731:4713;5602:3;1731:4713;;5583:17;;;;;5622:9;;;;;;:::i;:::-;1731:4713;;5622:18;5618:115;;1731:4713;;5568:13;;5618:115;5655:28;;;;;;;;;;;;:::i;:::-;1731:4713;;;;;;;;5716:5;5563:179;1731:4713;;5756:21;;5752:53;;1731:4713;;5406:13;;;;5752:53;5790:5;;1731:4713;;;;;;;;;;5583:17;;;;;;;;;;;;5536:16;;;;;;;1731:4713;5536:16;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;1731:4713;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;8837:64:1;1731:4713:16;;;;;;;;;;6431:44:1;;;;;1731:4713:16;6427:105:1;;;;6656:20;1731:4713:16;;;;;;;;;;;;;2328:24;1731:4713;;;2328:24;1731:4713;;;;;;;;;;;6656:20:1;1731:4713:16;6427:105:1;1731:4713:16;;6498:23:1;;;;6431:44;1731:4713:16;;6450:25:1;;;-1:-1:-1;6431:44:1;;;;1731:4713:16;;;;;;;;;;;;;;;1280:65:0;1731:4713:16;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;1948:24;1731:4713;;;;;;;;;;;;;;;;;;;2303:62:0;;:::i;:::-;1731:4713:16;;1280:65:0;1731:4713:16;;;;;;;;;3975:40:0;;;;1731:4713:16;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;1849:62;1731:4713;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5111:6:2;1731:4713:16;5102:4:2;5094:23;5090:145;;1731:4713:16;;;1327:66:6;1731:4713:16;;;5090:145:2;1731:4713:16;5195:29:2;;;;1731:4713:16;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4688:6:2;;1731:4713:16;4679:4:2;;4671:23;:120;;;;;1731:4713:16;4654:251:2;;;2303:62:0;;:::i;:::-;1731:4713:16;;;;;;6151:52:2;;;;;;;;;1731:4713:16;;6151:52:2;;;1731:4713:16;-1:-1:-1;6147:437:2;;1731:4713:16;;;;;;6513:60:2;;;;;;1731:4713:16;6513:60:2;6147:437;1327:66:6;;;;;;;;6245:40:2;;;;6241:120;;2263:29:6;;;:34;2259:119;;1731:4713:16;;;;;;;;;;;2922:27:6;;1731:4713:16;2922:27:6;;1731:4713:16;;2964:15:6;:11;;4255:25:11;;1731:4713:16;4297:55:11;4255:25;;;;;;;;;1731:4713:16;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;4297:55:11;:::i;1731:4713:16:-;-1:-1:-1;1731:4713:16;;-1:-1:-1;4297:55:11;:::i;2960:148:6:-;6648:9;;;;;;;;6644:70;;1731:4713:16;6644:70:6;6684:19;;;;2259:119;1731:4713:16;;;;2320:47:6;;;;;;1731:4713:16;2320:47:6;6241:120:2;1731:4713:16;;;;6312:34:2;;;;;;1731:4713:16;6312:34:2;6151:52;;;;;;;;;;;;;;;;;:::i;:::-;;;1731:4713:16;;;;;6151:52:2;;;;;;;;;4654:251;1731:4713:16;;;4865:29:2;;;;4671:120;1731:4713:16;;;1327:66:6;1731:4713:16;;4749:42:2;;4671:120;;;1731:4713:16;;;;;;;;;;;;;;;:::i;:::-;;;;4632:16;;;;1731:4713;4632:16;;;;;;;;;;1731:4713;4632:16;1731:4713;4632:16;;;1731:4713;;;;;;;;;;;;;;:::i;4632:16::-;;;;;;;1731:4713;4632:16;;;;;;:::i;:::-;;;;;;1731:4713;;;;;;;;;;;;;;;;;;;;;;;;1819:25;;;;;1731:4713;1819:25;1731:4713;1819:25;;:::i;:::-;1731:4713;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2956:9;1731:4713;;2956:23;;;1731:4713;;;;;;;3016:17;1731:4713;;;;;;;3085:31;1731:4713;;;3169:13;1731:4713;;;3164:227;1731:4713;;;3439:10;1731:4713;;;;;3422:65;;;;;;;;;;;;;;;;;;;;;;;;;1731:4713;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1731:4713:16;;;;;;-1:-1:-1;;1731:4713:16;;;3422:65;;-1:-1:-1;3422:65:16;;;;;1731:4713;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;2956:9;1731:4713;;;;;;;;;;;;;3581:13;1731:4713;3576:226;1731:4713;;;3576:226;1731:4713;;;;3815:44;1731:4713;;;3439:10;1731:4713;;;;;;;;;;;;;;;:::i;:::-;;;;;;3815:44;;;1731:4713;;;;;3615:3;1731:4713;;;;;;;;3596:17;;;;;1731:4713;;;;;;;;;3634:17;;;;;1731:4713;;;3629:166;3615:3;;1731:4713;3581:13;;;;;;;3672:3;1731:4713;;;;;;3653:17;;;;;3696:9;;;;;;;:::i;:::-;1731:4713;;;;;;;;;;3707:9;;;;;:::i;:::-;1731:4713;;;;;;;;;;;;;;;;;;;3750:9;;;;;:::i;:::-;1731:4713;;;;;;;;;;3761:9;;;;;:::i;:::-;1731:4713;;;;;;;;;;;;;;;;;;3634:17;;;;;;3653;;;;;;;1731:4713;;;;;;;;;;3596:17;;;;;;1731:4713;;;;;;;;;;3422:65;1731:4713;;;;;;;;;;;;;;;;-1:-1:-1;1731:4713:16;;;;;;;;;;;;;3422:65;1731:4713;;;;;;;;;3203:3;1731:4713;;3184:17;;;;;1731:4713;;;;;;;;3222:17;;;;;;;;;1731:4713;;;3217:167;3203:3;;;;;;1731:4713;3169:13;;;;3260:3;1731:4713;;;;;;;;;3241:17;;;;;3300:9;;3311;3300;;;;;;:::i;:::-;1731:4713;;;;;;;;;3311:9;;:::i;:::-;1731:4713;;;;;;;;;;;;;3260:3;;3222:17;;1731:4713;;3222:17;;;;3260:3;3222:17;;1731:4713;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3241:17;;;;;;;;;;;1731:4713;;;;;;;;;;3184:17;;;1731:4713;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1918:25;1731:4713;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1731:4713:16;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;6232:209;6314:1;1731:4713;6314:1;1731:4713;6297:120;6317:19;;;;;;6423:12;;;6314:1;6232:209;:::o;6338:3::-;6356:11;;;:::i;:::-;1731:4713;;;;;;;;;;;;6356:20;6352:58;;1731:4713;;6302:13;;6352:58;6389:11;;;1731:4713;6389:11;:::o;1731:4713::-;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;:::o;3405:215:0:-;1731:4713:16;;;;3489:22:0;;;3485:91;;1280:65;1731:4713:16;;;;;;;;;;;3975:40:0;-1:-1:-1;3975:40:0;;3405:215::o;3485:91::-;1731:4713:16;;;3534:31:0;;;3509:1;3534:31;;;1731:4713:16;3534:31:0;2658:162;1731:4713:16;1280:65:0;1731:4713:16;;966:10:3;2717:23:0;2713:101;;2658:162::o;2713:101::-;1731:4713:16;;;2763:40:0;;;966:10:3;2763:40:0;;;1731:4713:16;2763:40:0;7084:141:1;1731:4713:16;8837:64:1;1731:4713:16;;;;7150:18:1;7146:73;;7084:141::o;7146:73::-;7191:17;1731:4713:16;;7191:17:1;;;;4625:582:11;;4797:8;;-1:-1:-1;1731:4713:16;;5874:21:11;:17;;6046:142;;;;;;5870:383;6225:17;1731:4713:16;;6225:17:11;;;;4793:408;1731:4713:16;;5045:22:11;:49;;;4793:408;5041:119;;5173:17;;:::o;5041:119::-;1731:4713:16;;;;;5121:24:11;;;;1731:4713:16;5121:24:11;;;1731:4713:16;5121:24:11;5045:49;5071:18;;;:23;5045:49;"},"gasEstimates":{"creation":{"codeDepositCost":"4564800","executionCost":"infinite","totalCost":"infinite"},"external":{"UPGRADE_INTERFACE_VERSION()":"645","allPools(uint256)":"6647","changePeriphery(address)":"26971","createPool(address[],uint256[],uint256)":"infinite","getAllPools()":"infinite","getPool(address,address)":"2681","getPoolAssets(address)":"infinite","getPoolByAssets(address,address)":"2549","getPoolsByAsset(address)":"infinite","getPoolsCount()":"2593","initialize(address)":"infinite","owner()":"2512","periphery()":"2468","poolExist(address)":"infinite","proxiableUUID()":"infinite","rebalancer()":"2257","reinitialize(address,uint64)":"50108","renounceOwnership()":"28197","transferOwnership(address)":"28560","upgradeToAndCall(address,bytes)":"infinite"},"internal":{"_authorizeUpgrade(address)":"infinite"}},"methodIdentifiers":{"UPGRADE_INTERFACE_VERSION()":"ad3cb1cc","allPools(uint256)":"41d1de97","changePeriphery(address)":"e9b31cff","createPool(address[],uint256[],uint256)":"3069873b","getAllPools()":"d88ff1f4","getPool(address,address)":"531aa03e","getPoolAssets(address)":"4276b97b","getPoolByAssets(address,address)":"2d5e94a7","getPoolsByAsset(address)":"b4340e6a","getPoolsCount()":"b4ac6860","initialize(address)":"c4d66de8","owner()":"8da5cb5b","periphery()":"77aace1a","poolExist(address)":"89345efb","proxiableUUID()":"52d1902d","rebalancer()":"01d22ccd","reinitialize(address,uint64)":"8f2248bc","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b","upgradeToAndCall(address,bytes)":"4f1ef286"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"rebalancer\",\"type\":\"address\"}],\"name\":\"PoolCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allPools\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newPeriphery\",\"type\":\"address\"}],\"name\":\"changePeriphery\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"weights\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"trigger\",\"type\":\"uint256\"}],\"name\":\"createPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllPools\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"getPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"poolAddress\",\"type\":\"address\"}],\"name\":\"getPoolAssets\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"asset2\",\"type\":\"address\"}],\"name\":\"getPoolByAssets\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getPoolsByAsset\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPoolsCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_rebalancer\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"periphery\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_pool\",\"type\":\"address\"}],\"name\":\"poolExist\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rebalancer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_rebalancer\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"_version\",\"type\":\"uint64\"}],\"name\":\"reinitialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"changePeriphery(address)\":{\"details\":\"Changes the address of the periphery contract.\",\"params\":{\"_newPeriphery\":\"The new address of the periphery contract.\"}},\"createPool(address[],uint256[],uint256)\":{\"details\":\"Creates a new BaluniV1Pool contract and registers it in the factory.\",\"params\":{\"assets\":\"The array of asset addresses to be included in the pool.\",\"trigger\":\"The trigger value for rebalancing the pool.\",\"weights\":\"The array of weights corresponding to each asset in the pool.\"},\"returns\":{\"_0\":\"The address of the newly created pool.\"}},\"getAllPools()\":{\"details\":\"Retrieves all the pools created by the factory.\",\"returns\":{\"_0\":\"An array of pool addresses.\"}},\"getPoolAssets(address)\":{\"details\":\"Retrieves the assets of a specific pool.\",\"params\":{\"poolAddress\":\"The address of the pool.\"},\"returns\":{\"_0\":\"An array of asset addresses.\"}},\"getPoolByAssets(address,address)\":{\"details\":\"Retrieves the pool address based on the given assets.\",\"params\":{\"asset1\":\"The address of the first asset.\",\"asset2\":\"The address of the second asset.\"},\"returns\":{\"_0\":\"The address of the pool.\"}},\"getPoolsByAsset(address)\":{\"details\":\"Returns an array of pool addresses that contain the specified token.\",\"params\":{\"token\":\"The address of the token to search for.\"},\"returns\":{\"_0\":\"An array of pool addresses.\"}},\"getPoolsCount()\":{\"details\":\"Retrieves the number of pools created by the factory.\",\"returns\":{\"_0\":\"The count of pools.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BaluniV1PoolFactory.sol\":\"BaluniV1PoolFactory\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":80000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {ContextUpgradeable} from \\\"../utils/ContextUpgradeable.sol\\\";\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\\n    /// @custom:storage-location erc7201:openzeppelin.storage.Ownable\\n    struct OwnableStorage {\\n        address _owner;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.Ownable\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant OwnableStorageLocation = 0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300;\\n\\n    function _getOwnableStorage() private pure returns (OwnableStorage storage $) {\\n        assembly {\\n            $.slot := OwnableStorageLocation\\n        }\\n    }\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    function __Ownable_init(address initialOwner) internal onlyInitializing {\\n        __Ownable_init_unchained(initialOwner);\\n    }\\n\\n    function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        OwnableStorage storage $ = _getOwnableStorage();\\n        return $._owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        OwnableStorage storage $ = _getOwnableStorage();\\n        address oldOwner = $._owner;\\n        $._owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Storage of the initializable contract.\\n     *\\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\\n     * when using with upgradeable contracts.\\n     *\\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\\n     */\\n    struct InitializableStorage {\\n        /**\\n         * @dev Indicates that the contract has been initialized.\\n         */\\n        uint64 _initialized;\\n        /**\\n         * @dev Indicates that the contract is in the process of being initialized.\\n         */\\n        bool _initializing;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.Initializable\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\\n\\n    /**\\n     * @dev The contract is already initialized.\\n     */\\n    error InvalidInitialization();\\n\\n    /**\\n     * @dev The contract is not initializing.\\n     */\\n    error NotInitializing();\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint64 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\\n     * production.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        // Cache values to avoid duplicated sloads\\n        bool isTopLevelCall = !$._initializing;\\n        uint64 initialized = $._initialized;\\n\\n        // Allowed calls:\\n        // - initialSetup: the contract is not in the initializing state and no previous version was\\n        //                 initialized\\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\\n        //                 current contract is just being deployed\\n        bool initialSetup = initialized == 0 && isTopLevelCall;\\n        bool construction = initialized == 1 && address(this).code.length == 0;\\n\\n        if (!initialSetup && !construction) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = 1;\\n        if (isTopLevelCall) {\\n            $._initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            $._initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint64 version) {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing || $._initialized >= version) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = version;\\n        $._initializing = true;\\n        _;\\n        $._initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        _checkInitializing();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\\n     */\\n    function _checkInitializing() internal view virtual {\\n        if (!_isInitializing()) {\\n            revert NotInitializing();\\n        }\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing) {\\n            revert InvalidInitialization();\\n        }\\n        if ($._initialized != type(uint64).max) {\\n            $._initialized = type(uint64).max;\\n            emit Initialized(type(uint64).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint64) {\\n        return _getInitializableStorage()._initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _getInitializableStorage()._initializing;\\n    }\\n\\n    /**\\n     * @dev Returns a pointer to the storage namespace.\\n     */\\n    // solhint-disable-next-line var-name-mixedcase\\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\\n        assembly {\\n            $.slot := INITIALIZABLE_STORAGE\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/UUPSUpgradeable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC1822Proxiable} from \\\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\\\";\\nimport {ERC1967Utils} from \\\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\\\";\\nimport {Initializable} from \\\"./Initializable.sol\\\";\\n\\n/**\\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\\n *\\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\\n * `UUPSUpgradeable` with a custom implementation of upgrades.\\n *\\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\\n */\\nabstract contract UUPSUpgradeable is Initializable, IERC1822Proxiable {\\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable\\n    address private immutable __self = address(this);\\n\\n    /**\\n     * @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\\n     * and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\\n     * while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\\n     * If the getter returns `\\\"5.0.0\\\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\\n     * be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\\n     * during an upgrade.\\n     */\\n    string public constant UPGRADE_INTERFACE_VERSION = \\\"5.0.0\\\";\\n\\n    /**\\n     * @dev The call is from an unauthorized context.\\n     */\\n    error UUPSUnauthorizedCallContext();\\n\\n    /**\\n     * @dev The storage `slot` is unsupported as a UUID.\\n     */\\n    error UUPSUnsupportedProxiableUUID(bytes32 slot);\\n\\n    /**\\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\\n     * a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\\n     * function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\\n     * fail.\\n     */\\n    modifier onlyProxy() {\\n        _checkProxy();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\\n     * callable on the implementing contract but not through proxies.\\n     */\\n    modifier notDelegated() {\\n        _checkNotDelegated();\\n        _;\\n    }\\n\\n    function __UUPSUpgradeable_init() internal onlyInitializing {\\n    }\\n\\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\\n    }\\n    /**\\n     * @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\\n     */\\n    function proxiableUUID() external view virtual notDelegated returns (bytes32) {\\n        return ERC1967Utils.IMPLEMENTATION_SLOT;\\n    }\\n\\n    /**\\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\\n     * encoded in `data`.\\n     *\\n     * Calls {_authorizeUpgrade}.\\n     *\\n     * Emits an {Upgraded} event.\\n     *\\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\\n     */\\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {\\n        _authorizeUpgrade(newImplementation);\\n        _upgradeToAndCallUUPS(newImplementation, data);\\n    }\\n\\n    /**\\n     * @dev Reverts if the execution is not performed via delegatecall or the execution\\n     * context is not of a proxy with an ERC1967-compliant implementation pointing to self.\\n     * See {_onlyProxy}.\\n     */\\n    function _checkProxy() internal view virtual {\\n        if (\\n            address(this) == __self || // Must be called through delegatecall\\n            ERC1967Utils.getImplementation() != __self // Must be called through an active proxy\\n        ) {\\n            revert UUPSUnauthorizedCallContext();\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts if the execution is performed via delegatecall.\\n     * See {notDelegated}.\\n     */\\n    function _checkNotDelegated() internal view virtual {\\n        if (address(this) != __self) {\\n            // Must not be called through delegatecall\\n            revert UUPSUnauthorizedCallContext();\\n        }\\n    }\\n\\n    /**\\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\\n     * {upgradeToAndCall}.\\n     *\\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\\n     *\\n     * ```solidity\\n     * function _authorizeUpgrade(address) internal onlyOwner {}\\n     * ```\\n     */\\n    function _authorizeUpgrade(address newImplementation) internal virtual;\\n\\n    /**\\n     * @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\\n     *\\n     * As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\\n     * is expected to be the implementation slot in ERC1967.\\n     *\\n     * Emits an {IERC1967-Upgraded} event.\\n     */\\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {\\n        try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\\n            if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {\\n                revert UUPSUnsupportedProxiableUUID(slot);\\n            }\\n            ERC1967Utils.upgradeToAndCall(newImplementation, data);\\n        } catch {\\n            // The implementation is not UUPS\\n            revert ERC1967Utils.ERC1967InvalidImplementation(newImplementation);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x3f13b947637c4969c0644cab4ef399cdc4b67f101463b8775c5a43b118558e53\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC1822.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\\n * proxy whose upgrades are fully controlled by the current implementation.\\n */\\ninterface IERC1822Proxiable {\\n    /**\\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\\n     * address.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy.\\n     */\\n    function proxiableUUID() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/ERC1967/ERC1967Utils.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IBeacon} from \\\"../beacon/IBeacon.sol\\\";\\nimport {Address} from \\\"../../utils/Address.sol\\\";\\nimport {StorageSlot} from \\\"../../utils/StorageSlot.sol\\\";\\n\\n/**\\n * @dev This abstract contract provides getters and event emitting update functions for\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\\n */\\nlibrary ERC1967Utils {\\n    // We re-declare ERC-1967 events here because they can't be used directly from IERC1967.\\n    // This will be fixed in Solidity 0.8.21. At that point we should remove these events.\\n    /**\\n     * @dev Emitted when the implementation is upgraded.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Emitted when the admin account has changed.\\n     */\\n    event AdminChanged(address previousAdmin, address newAdmin);\\n\\n    /**\\n     * @dev Emitted when the beacon is changed.\\n     */\\n    event BeaconUpgraded(address indexed beacon);\\n\\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /**\\n     * @dev The `implementation` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidImplementation(address implementation);\\n\\n    /**\\n     * @dev The `admin` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidAdmin(address admin);\\n\\n    /**\\n     * @dev The `beacon` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidBeacon(address beacon);\\n\\n    /**\\n     * @dev An upgrade function sees `msg.value > 0` that may be lost.\\n     */\\n    error ERC1967NonPayable();\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function getImplementation() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 implementation slot.\\n     */\\n    function _setImplementation(address newImplementation) private {\\n        if (newImplementation.code.length == 0) {\\n            revert ERC1967InvalidImplementation(newImplementation);\\n        }\\n        StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation;\\n    }\\n\\n    /**\\n     * @dev Performs implementation upgrade with additional setup call if data is nonempty.\\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\\n     * to avoid stuck value in the contract.\\n     *\\n     * Emits an {IERC1967-Upgraded} event.\\n     */\\n    function upgradeToAndCall(address newImplementation, bytes memory data) internal {\\n        _setImplementation(newImplementation);\\n        emit Upgraded(newImplementation);\\n\\n        if (data.length > 0) {\\n            Address.functionDelegateCall(newImplementation, data);\\n        } else {\\n            _checkNonPayable();\\n        }\\n    }\\n\\n    /**\\n     * @dev Storage slot with the admin of the contract.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n\\n    /**\\n     * @dev Returns the current admin.\\n     *\\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using\\n     * the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\\n     */\\n    function getAdmin() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(ADMIN_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 admin slot.\\n     */\\n    function _setAdmin(address newAdmin) private {\\n        if (newAdmin == address(0)) {\\n            revert ERC1967InvalidAdmin(address(0));\\n        }\\n        StorageSlot.getAddressSlot(ADMIN_SLOT).value = newAdmin;\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {IERC1967-AdminChanged} event.\\n     */\\n    function changeAdmin(address newAdmin) internal {\\n        emit AdminChanged(getAdmin(), newAdmin);\\n        _setAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.beacon\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\\n\\n    /**\\n     * @dev Returns the current beacon.\\n     */\\n    function getBeacon() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(BEACON_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\\n     */\\n    function _setBeacon(address newBeacon) private {\\n        if (newBeacon.code.length == 0) {\\n            revert ERC1967InvalidBeacon(newBeacon);\\n        }\\n\\n        StorageSlot.getAddressSlot(BEACON_SLOT).value = newBeacon;\\n\\n        address beaconImplementation = IBeacon(newBeacon).implementation();\\n        if (beaconImplementation.code.length == 0) {\\n            revert ERC1967InvalidImplementation(beaconImplementation);\\n        }\\n    }\\n\\n    /**\\n     * @dev Change the beacon and trigger a setup call if data is nonempty.\\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\\n     * to avoid stuck value in the contract.\\n     *\\n     * Emits an {IERC1967-BeaconUpgraded} event.\\n     *\\n     * CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\\n     * it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\\n     * efficiency.\\n     */\\n    function upgradeBeaconToAndCall(address newBeacon, bytes memory data) internal {\\n        _setBeacon(newBeacon);\\n        emit BeaconUpgraded(newBeacon);\\n\\n        if (data.length > 0) {\\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\\n        } else {\\n            _checkNonPayable();\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\\n     * if an upgrade doesn't perform an initialization call.\\n     */\\n    function _checkNonPayable() private {\\n        if (msg.value > 0) {\\n            revert ERC1967NonPayable();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeacon {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {UpgradeableBeacon} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"./IERC20.sol\\\";\\nimport {IERC20Metadata} from \\\"./extensions/IERC20Metadata.sol\\\";\\nimport {Context} from \\\"../../utils/Context.sol\\\";\\nimport {IERC20Errors} from \\\"../../interfaces/draft-IERC6093.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n */\\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\\n    mapping(address account => uint256) private _balances;\\n\\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `value`.\\n     */\\n    function transfer(address to, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `value`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `value`.\\n     */\\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, value);\\n        _transfer(from, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _transfer(address from, address to, uint256 value) internal {\\n        if (from == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        if (to == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\\n     * this function.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _update(address from, address to, uint256 value) internal virtual {\\n        if (from == address(0)) {\\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\\n            _totalSupply += value;\\n        } else {\\n            uint256 fromBalance = _balances[from];\\n            if (fromBalance < value) {\\n                revert ERC20InsufficientBalance(from, fromBalance, value);\\n            }\\n            unchecked {\\n                // Overflow not possible: value <= fromBalance <= totalSupply.\\n                _balances[from] = fromBalance - value;\\n            }\\n        }\\n\\n        if (to == address(0)) {\\n            unchecked {\\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\\n                _totalSupply -= value;\\n            }\\n        } else {\\n            unchecked {\\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\\n                _balances[to] += value;\\n            }\\n        }\\n\\n        emit Transfer(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\\n     * Relies on the `_update` mechanism\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _mint(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(address(0), account, value);\\n    }\\n\\n    /**\\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\\n     * Relies on the `_update` mechanism.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead\\n     */\\n    function _burn(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        _update(account, address(0), value);\\n    }\\n\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     *\\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\\n     */\\n    function _approve(address owner, address spender, uint256 value) internal {\\n        _approve(owner, spender, value, true);\\n    }\\n\\n    /**\\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\\n     *\\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\\n     * `Approval` event during `transferFrom` operations.\\n     *\\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\\n     * true using the following override:\\n     * ```\\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\\n     *     super._approve(owner, spender, value, true);\\n     * }\\n     * ```\\n     *\\n     * Requirements are the same as {_approve}.\\n     */\\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\\n        if (owner == address(0)) {\\n            revert ERC20InvalidApprover(address(0));\\n        }\\n        if (spender == address(0)) {\\n            revert ERC20InvalidSpender(address(0));\\n        }\\n        _allowances[owner][spender] = value;\\n        if (emitEvent) {\\n            emit Approval(owner, spender, value);\\n        }\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\\n     *\\n     * Does not update the allowance value in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Does not emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            if (currentAllowance < value) {\\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\\n            }\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - value, false);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev The ETH balance of the account is not enough to perform the operation.\\n     */\\n    error AddressInsufficientBalance(address account);\\n\\n    /**\\n     * @dev There's no code at `target` (it is not a contract).\\n     */\\n    error AddressEmptyCode(address target);\\n\\n    /**\\n     * @dev A call to an address target failed. The target may have reverted.\\n     */\\n    error FailedInnerCall();\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        if (address(this).balance < amount) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        if (!success) {\\n            revert FailedInnerCall();\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason or custom error, it is bubbled\\n     * up by this function (like regular Solidity function calls). However, if\\n     * the call reverted with no returned reason, this function reverts with a\\n     * {FailedInnerCall} error.\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        if (address(this).balance < value) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\\n     * unsuccessful call.\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata\\n    ) internal view returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            // only check if target is a contract if the call was successful and the return data is empty\\n            // otherwise we already know that it was a contract\\n            if (returndata.length == 0 && target.code.length == 0) {\\n                revert AddressEmptyCode(target);\\n            }\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\\n     * revert reason or with a default {FailedInnerCall} error.\\n     */\\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\\n     */\\n    function _revert(bytes memory returndata) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert FailedInnerCall();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant NOT_ENTERED = 1;\\n    uint256 private constant ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    /**\\n     * @dev Unauthorized reentrant call.\\n     */\\n    error ReentrancyGuardReentrantCall();\\n\\n    constructor() {\\n        _status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\\n        if (_status == ENTERED) {\\n            revert ReentrancyGuardReentrantCall();\\n        }\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Returns true if the reentrancy guard is currently set to \\\"entered\\\", which indicates there is a\\n     * `nonReentrant` function in the call stack.\\n     */\\n    function _reentrancyGuardEntered() internal view returns (bool) {\\n        return _status == ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```solidity\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(newImplementation.code.length > 0);\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    struct StringSlot {\\n        string value;\\n    }\\n\\n    struct BytesSlot {\\n        bytes value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\\n     */\\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\\n     */\\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\\n     */\\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\\n     */\\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\"},\"contracts/BaluniV1Pool.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n/**\\r\\n *  __                  __                      __\\r\\n * /  |                /  |                    /  |\\r\\n * $$ |____    ______  $$ | __    __  _______  $$/\\r\\n * $$      \\\\  /      \\\\ $$ |/  |  /  |/       \\\\ /  |\\r\\n * $$$$$$$  | $$$$$$  |$$ |$$ |  $$ |$$$$$$$  |$$ |\\r\\n * $$ |  $$ | /    $$ |$$ |$$ |  $$ |$$ |  $$ |$$ |\\r\\n * $$ |__$$ |/$$$$$$$ |$$ |$$ \\\\__$$ |$$ |  $$ |$$ |\\r\\n * $$    $$/ $$    $$ |$$ |$$    $$/ $$ |  $$ |$$ |\\r\\n * $$$$$$$/   $$$$$$$/ $$/  $$$$$$/  $$/   $$/ $$/\\r\\n *\\r\\n *\\r\\n *                  ,-\\\"\\\"\\\"\\\"-.\\r\\n *                ,'      _ `.\\r\\n *               /       )_)  \\\\\\r\\n *              :              :\\r\\n *              \\\\              /\\r\\n *               \\\\            /\\r\\n *                `.        ,'\\r\\n *                  `.    ,'\\r\\n *                    `.,'\\r\\n *                     /\\\\`.   ,-._\\r\\n *                         `-'    \\\\__\\r\\n *                              .\\r\\n *               s                \\\\\\r\\n *                                \\\\\\\\\\r\\n *                                 \\\\\\\\\\r\\n *                                  >\\\\/7\\r\\n *                              _.-(6'  \\\\\\r\\n *                             (=___._/` \\\\\\r\\n *                                  )  \\\\ |\\r\\n *                                 /   / |\\r\\n *                                /    > /\\r\\n *                               j    < _\\\\\\r\\n *                           _.-' :      ``.\\r\\n *                           \\\\ r=._\\\\        `.\\r\\n */\\r\\nimport './interfaces/IBaluniV1Rebalancer.sol';\\r\\nimport './interfaces/IBaluniV1Router.sol';\\r\\nimport './interfaces/IBaluniV1PoolPeriphery.sol';\\r\\nimport '@openzeppelin/contracts/token/ERC20/ERC20.sol';\\r\\nimport '@openzeppelin/contracts/utils/ReentrancyGuard.sol';\\r\\n\\r\\ncontract BaluniV1Pool is ERC20, ReentrancyGuard {\\r\\n  IBaluniV1Rebalancer public rebalancer;\\r\\n  AssetInfo[] public assetInfos;\\r\\n  uint256 public trigger;\\r\\n  uint256 public ONE;\\r\\n  address public periphery;\\r\\n  uint256 public constant SWAP_FEE_BPS = 300;\\r\\n  address public baseAsset;\\r\\n\\r\\n  mapping(address => uint256) public reserves;\\r\\n\\r\\n  struct AssetInfo {\\r\\n    address asset;\\r\\n    uint256 weight;\\r\\n  }\\r\\n\\r\\n  event RebalancePerformed(address indexed by, address[] assets);\\r\\n  event WeightsRebalanced(address indexed user, uint256[] amountsAdded);\\r\\n  event Burn(address indexed user, uint256 sharesBurned);\\r\\n  event Mint(address indexed to, uint256 sharesMinted);\\r\\n  event Swap(\\r\\n    address indexed user,\\r\\n    address indexed fromToken,\\r\\n    address indexed toToken,\\r\\n    uint256 amountIn,\\r\\n    uint256 amountOut\\r\\n  );\\r\\n\\r\\n  constructor(\\r\\n    address _rebalancer,\\r\\n    address[] memory _assets,\\r\\n    uint256[] memory _weights,\\r\\n    uint256 _trigger,\\r\\n    address _periphery\\r\\n  ) ERC20('Baluni LP', 'BALUNI-LP') {\\r\\n    periphery = _periphery;\\r\\n    rebalancer = IBaluniV1Rebalancer(_rebalancer);\\r\\n    ONE = 1e18;\\r\\n\\r\\n    initializeAssets(_assets, _weights);\\r\\n\\r\\n    trigger = _trigger;\\r\\n\\r\\n    baseAsset = IBaluniV1Rebalancer(_rebalancer).getUSDCAddress();\\r\\n    //baseAsset = IBaluniV1Rebalancer(_rebalancer).getWNATIVEAddress();\\r\\n\\r\\n    // ensure the sum o weight equal 10000\\r\\n    uint256 totalWeight = 0;\\r\\n    for (uint256 i = 0; i < _weights.length; i++) {\\r\\n      totalWeight += _weights[i];\\r\\n    }\\r\\n    require(totalWeight == 10000, 'Invalid weights');\\r\\n  }\\r\\n\\r\\n  modifier onlyPeriphery() {\\r\\n    require(msg.sender == periphery, 'Only Periphery');\\r\\n    _;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Initializes the assets and their weights for the pool.\\r\\n   * @param _assets The array of asset addresses.\\r\\n   * @param _weights The array of weights corresponding to each asset.\\r\\n   */\\r\\n  function initializeAssets(address[] memory _assets, uint256[] memory _weights) internal {\\r\\n    require(_assets.length == _weights.length, 'Assets and weights length mismatch');\\r\\n\\r\\n    for (uint256 i = 0; i < _assets.length; i++) {\\r\\n      require(_assets[i] != address(0), 'Invalid asset address');\\r\\n      require(_weights[i] > 0, 'Invalid weight');\\r\\n\\r\\n      assetInfos.push(AssetInfo({asset: _assets[i], weight: _weights[i]}));\\r\\n\\r\\n      IERC20 asset = IERC20(_assets[i]);\\r\\n      if (asset.allowance(address(this), address(rebalancer)) == 0) {\\r\\n        asset.approve(address(rebalancer), type(uint256).max);\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Rebalances the weights of the pool by calculating the amounts to add for each token,\\r\\n   * transferring the calculated amounts from the user to the pool, minting the total added liquidity,\\r\\n   * updating the reserves, and emitting an event to indicate the rebalancing of weights.\\r\\n   * @param receiver The address to receive the minted liquidity tokens.\\r\\n   */\\r\\n  function rebalanceWeights(address receiver) external {\\r\\n    require(isRebalanceNeeded(), 'Rebalance not needed');\\r\\n    (uint256 totalValuation, uint256[] memory valuations) = _computeTotalValuation();\\r\\n\\r\\n    uint256[] memory amountsToAdd = _calculateAmountsToAdd(totalValuation, valuations);\\r\\n\\r\\n    // Calculate total added liquidity before minting\\r\\n    uint256 totalAddedLiquidity = _calculateTotalAddedLiquidity(amountsToAdd);\\r\\n\\r\\n    // Transfer the calculated amounts from the user to the pool\\r\\n    for (uint256 i = 0; i < amountsToAdd.length; i++) {\\r\\n      if (amountsToAdd[i] > 0) {\\r\\n        _transferAndCalculateLiquidity(i, amountsToAdd[i]);\\r\\n      }\\r\\n    }\\r\\n\\r\\n    _mint(receiver, totalAddedLiquidity);\\r\\n\\r\\n    emit WeightsRebalanced(msg.sender, amountsToAdd);\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Swaps `amount` of `fromToken` to `toToken` and transfers the received amount to `receiver`.\\r\\n   *\\r\\n   * Requirements:\\r\\n   * - `fromToken` and `toToken` must be different tokens.\\r\\n   * - `amount` must be greater than zero.\\r\\n   * - Sufficient liquidity of `toToken` must be available in the contract.\\r\\n   *\\r\\n   * Emits a `Swap` event with the details of the swap.\\r\\n   *\\r\\n   * Updates the reserves after the swap.\\r\\n   *\\r\\n   * @param fromToken The address of the token to swap from.\\r\\n   * @param toToken The address of the token to swap to.\\r\\n   * @param amount The amount of `fromToken` to swap.\\r\\n   * @param receiver The address to receive the swapped tokens.\\r\\n   * @return The amount of `toToken` received after the swap.\\r\\n   */\\r\\n  function swap(\\r\\n    address fromToken,\\r\\n    address toToken,\\r\\n    uint256 amount,\\r\\n    address receiver\\r\\n  ) external nonReentrant returns (uint256) {\\r\\n    require(fromToken != toToken, 'Cannot swap the same token');\\r\\n    require(amount > 0, 'Amount must be greater than zero');\\r\\n\\r\\n    // Transfer fromToken from sender to this contract\\r\\n    IERC20(fromToken).transferFrom(msg.sender, address(this), amount);\\r\\n\\r\\n    // Get the amount of toToken to be received\\r\\n    uint256 receivedAmount = getAmountOut(fromToken, toToken, amount);\\r\\n\\r\\n    // Check if there is sufficient liquidity\\r\\n    require(IERC20(toToken).balanceOf(address(this)) >= receivedAmount, 'Insufficient Liquidity');\\r\\n\\r\\n    // apply fee\\r\\n    uint256 fee = (receivedAmount * SWAP_FEE_BPS) / 10000;\\r\\n    uint256 toSend = receivedAmount - fee;\\r\\n\\r\\n    // Transfer toToken to the receiver\\r\\n    IERC20(toToken).transfer(receiver, toSend);\\r\\n\\r\\n    emit Swap(receiver, fromToken, toToken, amount, toSend);\\r\\n\\r\\n    reserves[fromToken] += amount;\\r\\n    reserves[toToken] += toSend;\\r\\n\\r\\n    return receivedAmount;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Mints new tokens and adds them to the specified address.\\r\\n   * @param to The address to which the new tokens will be minted.\\r\\n   * @return The amount of tokens minted.\\r\\n   */\\r\\n  function mint(address to, uint256[] memory amounts) external onlyPeriphery returns (uint256) {\\r\\n    uint256 totalSupply = totalSupply();\\r\\n    uint256 totalValue = 0;\\r\\n\\r\\n    uint256[] memory _reserves = getReserves();\\r\\n\\r\\n    require(assetInfos.length == _reserves.length, 'Invalid reserves length');\\r\\n    require(assetInfos.length > 0, 'No assets');\\r\\n\\r\\n    for (uint256 i = 0; i < assetInfos.length; i++) {\\r\\n      address asset = assetInfos[i].asset;\\r\\n      uint256 actualBalance = IERC20(asset).balanceOf(address(this));\\r\\n      require(actualBalance > 0, 'Balance must be greater than 0');\\r\\n      uint256 amount = actualBalance - _reserves[i];\\r\\n      require(amount > 0, 'Amount must be greater than 0');\\r\\n      uint256 valuation = _convertTokenToBase(asset, amount);\\r\\n      totalValue += valuation;\\r\\n    }\\r\\n\\r\\n    require(totalValue > 0, 'Total value must be greater than 0');\\r\\n\\r\\n    uint256 toMint;\\r\\n\\r\\n    if (totalSupply == 0) {\\r\\n      toMint = totalValue;\\r\\n    } else {\\r\\n      (uint256 totalLiquidity, ) = _computeTotalValuation();\\r\\n      require(totalLiquidity > 0, 'Total liquidity must be greater than 0');\\r\\n      toMint = ((totalValue) * totalSupply) / totalLiquidity;\\r\\n    }\\r\\n    require(toMint != 0, 'Mint qty is 0');\\r\\n    uint256 b4 = balanceOf(msg.sender);\\r\\n\\r\\n    _mint(to, toMint);\\r\\n\\r\\n    uint256 b = balanceOf(to) - b4;\\r\\n    require(b == toMint, 'Mint Failed');\\r\\n\\r\\n    _updateReserves(amounts, true);\\r\\n\\r\\n    emit Mint(to, toMint);\\r\\n\\r\\n    return toMint;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Burns the pool tokens and transfers the underlying assets to the specified address.\\r\\n   * @param to The address to transfer the underlying assets to.\\r\\n   * @notice This function can only be called by the periphery contract.\\r\\n   * @notice The pool tokens must have a balance greater than 0.\\r\\n   * @notice The total supply of pool tokens must be greater than 0.\\r\\n   * @notice The function calculates the amounts of each underlying asset to transfer based on the share of pool tokens being burned.\\r\\n   * @notice A fee is deducted from the share of pool tokens being burned and transferred to the treasury address.\\r\\n   * @notice The function checks if the pool has sufficient liquidity before performing any transfers.\\r\\n   * @notice If any transfer fails, the function reverts the entire operation.\\r\\n   * @notice After the transfers, the function updates the reserves of the pool.\\r\\n   * @notice Emits a `Burn` event with the address and share of pool tokens burned.\\r\\n   */\\r\\n  function burn(address to) external onlyPeriphery {\\r\\n    uint256 share = balanceOf(address(this));\\r\\n\\r\\n    require(share > 0, 'Share must be greater than 0');\\r\\n    uint256 totalSupply = totalSupply();\\r\\n\\r\\n    require(totalSupply > 0, 'No liquidity');\\r\\n    uint256[] memory amounts = new uint256[](assetInfos.length);\\r\\n\\r\\n    uint256 fee = (share * SWAP_FEE_BPS) / 10000;\\r\\n    uint256 shareAfterFee = share - fee;\\r\\n\\r\\n    for (uint256 i = 0; i < assetInfos.length; i++) {\\r\\n      uint256 assetBalance = IERC20(assetInfos[i].asset).balanceOf(address(this));\\r\\n      amounts[i] = (assetBalance * shareAfterFee) / totalSupply;\\r\\n    }\\r\\n\\r\\n    require(balanceOf(address(this)) >= shareAfterFee, 'Insufficient liquidity');\\r\\n\\r\\n    bool feeTransferSuccess = IERC20(address(this)).transfer(rebalancer.getTreasury(), fee);\\r\\n    require(feeTransferSuccess, 'Fee transfer failed');\\r\\n\\r\\n    require(balanceOf(address(this)) >= shareAfterFee, 'Insufficient liquidity');\\r\\n    _burn(address(this), shareAfterFee);\\r\\n\\r\\n    for (uint256 i = 0; i < assetInfos.length; i++) {\\r\\n      require(IERC20(assetInfos[i].asset).balanceOf(address(this)) >= amounts[i], 'Insufficient Liquidity');\\r\\n      bool assetTransferSuccess = IERC20(assetInfos[i].asset).transfer(to, amounts[i]);\\r\\n      require(assetTransferSuccess, 'Asset transfer failed');\\r\\n    }\\r\\n\\r\\n    _updateReserves(amounts, false);\\r\\n\\r\\n    emit Burn(to, shareAfterFee);\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Calculates the amount of `toToken` that will be received when swapping `fromToken` for `toToken`.\\r\\n   * @param fromToken The address of the token being swapped from.\\r\\n   * @param toToken The address of the token being swapped to.\\r\\n   * @param amount The amount of `fromToken` being swapped.\\r\\n   * @return The amount of `toToken` that will be received.\\r\\n   */\\r\\n  function getAmountOut(address fromToken, address toToken, uint256 amount) public view returns (uint256) {\\r\\n    return rebalancer.convert(fromToken, toToken, amount);\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Performs rebalance if needed based on the LP share of the sender.\\r\\n   * @param _sender The address of the sender.\\r\\n   */\\r\\n  function performRebalanceIfNeeded(address _sender) external {\\r\\n    require(isRebalanceNeeded(), 'Rebalance not needed');\\r\\n    uint256 requiredBalance = (totalSupply() * 1000) / 10000;\\r\\n    require(balanceOf(_sender) >= requiredBalance, 'Under 5% LP share');\\r\\n    _performRebalanceIfNeeded();\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Returns the deviation between the current weights and target weights of the assets in the pool.\\r\\n   * @return directions An array of boolean values indicating whether the current weight is higher (true) or lower (false) than the target weight.\\r\\n   */\\r\\n  function getDeviation() public view returns (bool[] memory directions, uint256[] memory deviations) {\\r\\n    (uint256 totVal, uint256[] memory valuations) = _computeTotalValuation();\\r\\n    uint256 numAssets = assetInfos.length;\\r\\n\\r\\n    directions = new bool[](numAssets);\\r\\n    deviations = new uint256[](numAssets);\\r\\n\\r\\n    for (uint256 i = 0; i < numAssets; i++) {\\r\\n      uint256 currentWeight = (valuations[i] * 10000) / totVal;\\r\\n      uint256 targetWeight = assetInfos[i].weight;\\r\\n\\r\\n      if (currentWeight > targetWeight) {\\r\\n        deviations[i] = currentWeight - targetWeight;\\r\\n        directions[i] = true;\\r\\n      } else {\\r\\n        deviations[i] = targetWeight - currentWeight;\\r\\n        directions[i] = false;\\r\\n      }\\r\\n    }\\r\\n\\r\\n    return (directions, deviations);\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Returns the liquidity of a specific asset in the pool.\\r\\n   * @param assetIndex The index of the asset.\\r\\n   * @return The liquidity of the asset.\\r\\n   */\\r\\n  function assetLiquidity(uint256 assetIndex) external view returns (uint256) {\\r\\n    (, uint256[] memory usdValuations) = _computeTotalValuation();\\r\\n    require(assetIndex < usdValuations.length, 'Invalid asset index');\\r\\n    return usdValuations[assetIndex];\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Computes the total valuation of the pool and returns the total valuation and an array of individual valuations.\\r\\n   * @return totalVal The total valuation of the pool.\\r\\n   * @return valuations An array of individual valuations.\\r\\n   */\\r\\n  function computeTotalValuation() external view returns (uint256 totalVal, uint256[] memory valuations) {\\r\\n    (totalVal, valuations) = _computeTotalValuation();\\r\\n    return (totalVal, valuations);\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Returns the total liquidity of the pool.\\r\\n   * @return The total liquidity of the pool.\\r\\n   */\\r\\n  function liquidity() external view returns (uint256) {\\r\\n    (uint256 totalVal, ) = _computeTotalValuation();\\r\\n    return totalVal;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Returns the unit price of the pool.\\r\\n   * @return The unit price of the pool.\\r\\n   */\\r\\n  function unitPrice() external view returns (uint256) {\\r\\n    (uint256 totalVal, ) = _computeTotalValuation();\\r\\n    uint256 totalSupply = totalSupply();\\r\\n    if (totalSupply == 0) {\\r\\n      return 0;\\r\\n    }\\r\\n    return (totalVal * ONE) / totalSupply;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Returns an array of reserves for each asset in the pool.\\r\\n   * @return An array of reserves.\\r\\n   */\\r\\n  function getReserves() public view returns (uint256[] memory) {\\r\\n    uint256[] memory _reserves = new uint256[](assetInfos.length);\\r\\n    for (uint256 i = 0; i < assetInfos.length; i++) {\\r\\n      _reserves[i] = reserves[assetInfos[i].asset];\\r\\n    }\\r\\n    return _reserves;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Returns the reserve amount of the specified asset.\\r\\n   * @param asset The address of the asset.\\r\\n   * @return The reserve amount of the asset.\\r\\n   */\\r\\n  function getAssetReserve(address asset) public view returns (uint256) {\\r\\n    return reserves[asset];\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Retrieves the list of assets in the pool.\\r\\n   * @return An array of addresses representing the assets.\\r\\n   */\\r\\n  function getAssets() external view returns (address[] memory) {\\r\\n    address[] memory assets = new address[](assetInfos.length);\\r\\n    for (uint256 i = 0; i < assetInfos.length; i++) {\\r\\n      assets[i] = assetInfos[i].asset;\\r\\n    }\\r\\n    return assets;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Retrieves the list of weights associated with the assets in the pool.\\r\\n   * @return An array of uint256 values representing the weights.\\r\\n   */\\r\\n  function getWeights() external view returns (uint256[] memory) {\\r\\n    uint256[] memory weights = new uint256[](assetInfos.length);\\r\\n    for (uint256 i = 0; i < assetInfos.length; i++) {\\r\\n      weights[i] = assetInfos[i].weight;\\r\\n    }\\r\\n    return weights;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Computes the total valuation of the assets in the pool.\\r\\n   * @return totalValuation The total valuation of the assets.\\r\\n   * @return valuations An array of valuations for each asset in the pool.\\r\\n   */\\r\\n  function _computeTotalValuation() internal view returns (uint256 totalValuation, uint256[] memory valuations) {\\r\\n    uint256 numAssets = assetInfos.length;\\r\\n    valuations = new uint256[](numAssets);\\r\\n    for (uint256 i = 0; i < numAssets; i++) {\\r\\n      IERC20 asset = IERC20(assetInfos[i].asset);\\r\\n\\r\\n      if ((address(asset) == baseAsset)) {\\r\\n        valuations[i] = reserves[address(asset)];\\r\\n      } else {\\r\\n        uint256 valuation = _convertTokenToBase(address(asset), reserves[address(asset)]);\\r\\n        valuations[i] = valuation;\\r\\n      }\\r\\n      totalValuation += valuations[i];\\r\\n    }\\r\\n    return (totalValuation, valuations);\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Performs rebalance if needed.\\r\\n   * This function retrieves the assets and weights from the `assetInfos` array,\\r\\n   * and calls the `rebalance` function of the `rebalancer` contract with the retrieved values.\\r\\n   * It emits a `RebalancePerformed` event after the rebalance is performed.\\r\\n   * @notice This function should only be called internally.\\r\\n   */\\r\\n  function _performRebalanceIfNeeded() internal {\\r\\n    address[] memory assets = new address[](assetInfos.length);\\r\\n    uint256[] memory weights = new uint256[](assetInfos.length);\\r\\n    for (uint256 i = 0; i < assetInfos.length; i++) {\\r\\n      assets[i] = assetInfos[i].asset;\\r\\n      weights[i] = assetInfos[i].weight;\\r\\n    }\\r\\n\\r\\n    IBaluniV1PoolPeriphery(periphery).transferToPool();\\r\\n\\r\\n    rebalancer.rebalance(assets, weights, address(this), address(this), trigger, baseAsset);\\r\\n\\r\\n    _updateReservesAndTransfer();\\r\\n\\r\\n    emit RebalancePerformed(msg.sender, assets);\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Calculates the total added liquidity based on the amounts to add.\\r\\n   * @param amountsToAdd An array of amounts to add for each asset.\\r\\n   * @return totalAddedLiquidity The total added liquidity.\\r\\n   */\\r\\n  function _calculateTotalAddedLiquidity(\\r\\n    uint256[] memory amountsToAdd\\r\\n  ) internal view returns (uint256 totalAddedLiquidity) {\\r\\n    for (uint256 i = 0; i < assetInfos.length; i++) {\\r\\n      totalAddedLiquidity += amountsToAdd[i];\\r\\n    }\\r\\n    return totalAddedLiquidity;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Calculates the amounts to add to each asset based on the total valuation and current valuations.\\r\\n   * @param totalValuation The total valuation of the pool.\\r\\n   * @param valuations An array of current valuations for each asset.\\r\\n   * @return amountsToAdd An array of amounts to add to each asset.\\r\\n   */\\r\\n  function _calculateAmountsToAdd(\\r\\n    uint256 totalValuation,\\r\\n    uint256[] memory valuations\\r\\n  ) internal view returns (uint256[] memory amountsToAdd) {\\r\\n    amountsToAdd = new uint256[](assetInfos.length);\\r\\n    for (uint256 i = 0; i < assetInfos.length; i++) {\\r\\n      uint256 targetValuation = (totalValuation * assetInfos[i].weight) / 10000;\\r\\n      if (valuations[i] < targetValuation) {\\r\\n        amountsToAdd[i] = targetValuation - valuations[i];\\r\\n      }\\r\\n    }\\r\\n    return amountsToAdd;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Internal function to transfer tokens from the caller to the contract and calculate the liquidity.\\r\\n   * @param index The index of the asset in the assetInfos array.\\r\\n   * @param amountToAdd The amount of native tokens to add as liquidity.\\r\\n   */\\r\\n  function _transferAndCalculateLiquidity(uint256 index, uint256 amountToAdd) internal {\\r\\n    uint256 tokenAmount = _convertBaseToToken(assetInfos[index].asset, amountToAdd);\\r\\n    require(tokenAmount > 0, 'Invalid token amount to add');\\r\\n    IERC20(assetInfos[index].asset).transferFrom(msg.sender, periphery, tokenAmount);\\r\\n    reserves[assetInfos[index].asset] += tokenAmount;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Converts the specified amount of native token to the corresponding token amount.\\r\\n   * @param fromToken The address of the native token to convert from.\\r\\n   * @param amount The amount of native token to convert.\\r\\n   * @return The corresponding token amount.\\r\\n   */\\r\\n  function _convertBaseToToken(address fromToken, uint256 amount) internal view returns (uint256) {\\r\\n    uint256 tokenAmount = rebalancer.convert(baseAsset, fromToken, amount);\\r\\n    return tokenAmount;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Returns the maximum of two uint8 values.\\r\\n   * @param a The first uint8 value.\\r\\n   * @param b The second uint8 value.\\r\\n   * @return The maximum value between a and b.\\r\\n   */\\r\\n  function max(uint8 a, uint8 b) private pure returns (uint8) {\\r\\n    return a >= b ? a : b;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Returns the minimum of two uint8 values.\\r\\n   * @param a The first uint8 value.\\r\\n   * @param b The second uint8 value.\\r\\n   * @return The minimum value between a and b.\\r\\n   */\\r\\n  function min(uint8 a, uint8 b) private pure returns (uint8) {\\r\\n    return a <= b ? a : b;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Converts the specified token to the native token using the rebalancer contract.\\r\\n   * @param fromToken The address of the token to convert from.\\r\\n   * @param amount The amount of tokens to convert.\\r\\n   * @return scaledAmount The converted amount of tokens.\\r\\n   */\\r\\n  function _convertTokenToBase(address fromToken, uint256 amount) internal view returns (uint256 scaledAmount) {\\r\\n    uint256 tokenAmount = rebalancer.convert(fromToken, baseAsset, amount);\\r\\n    return tokenAmount;\\r\\n  }\\r\\n\\r\\n  function updateReserves(uint256[] memory amounts, bool increase) external onlyPeriphery {\\r\\n    _updateReserves(amounts, increase);\\r\\n  }\\r\\n\\r\\n  function _updateReserves(uint256[] memory amounts, bool increase) internal {\\r\\n    for (uint256 i = 0; i < assetInfos.length; i++) {\\r\\n      address asset = assetInfos[i].asset;\\r\\n      uint256 newReserve = amounts[i];\\r\\n      if (increase) reserves[asset] += newReserve;\\r\\n      else reserves[asset] -= newReserve;\\r\\n    }\\r\\n  }\\r\\n\\r\\n  function _updateReservesAndTransfer() internal {\\r\\n    for (uint256 i = 0; i < assetInfos.length; i++) {\\r\\n      address asset = assetInfos[i].asset;\\r\\n      uint256 newReserve = IERC20(asset).balanceOf(address(this));\\r\\n      reserves[asset] = newReserve;\\r\\n      IERC20(asset).transfer(periphery, newReserve);\\r\\n    }\\r\\n  }\\r\\n\\r\\n  function decreaseReserves(uint256[] memory amounts) external onlyPeriphery {\\r\\n    for (uint256 i = 0; i < assetInfos.length; i++) {\\r\\n      address asset = assetInfos[i].asset;\\r\\n      uint256 newReserve = amounts[i];\\r\\n      reserves[asset] -= newReserve;\\r\\n    }\\r\\n  }\\r\\n\\r\\n  // return true if one of the deviation overcome the trigger\\r\\n  function isRebalanceNeeded() public view returns (bool) {\\r\\n    (bool[] memory directions, uint256[] memory deviations) = getDeviation();\\r\\n    for (uint256 i = 0; i < deviations.length; i++) {\\r\\n      if (directions[i] && deviations[i] > trigger) {\\r\\n        return true;\\r\\n      }\\r\\n    }\\r\\n    return false;\\r\\n  }\\r\\n}\\r\\n\",\"keccak256\":\"0x03841ebedd05a1c5511333b0c0abdaf03a68c4466d72bd118f2b307421fd922e\",\"license\":\"GNU AGPLv3\"},\"contracts/BaluniV1PoolFactory.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n/**\\r\\n *  __                  __                      __\\r\\n * /  |                /  |                    /  |\\r\\n * $$ |____    ______  $$ | __    __  _______  $$/\\r\\n * $$      \\\\  /      \\\\ $$ |/  |  /  |/       \\\\ /  |\\r\\n * $$$$$$$  | $$$$$$  |$$ |$$ |  $$ |$$$$$$$  |$$ |\\r\\n * $$ |  $$ | /    $$ |$$ |$$ |  $$ |$$ |  $$ |$$ |\\r\\n * $$ |__$$ |/$$$$$$$ |$$ |$$ \\\\__$$ |$$ |  $$ |$$ |\\r\\n * $$    $$/ $$    $$ |$$ |$$    $$/ $$ |  $$ |$$ |\\r\\n * $$$$$$$/   $$$$$$$/ $$/  $$$$$$/  $$/   $$/ $$/\\r\\n *\\r\\n *\\r\\n *                  ,-\\\"\\\"\\\"\\\"-.\\r\\n *                ,'      _ `.\\r\\n *               /       )_)  \\\\\\r\\n *              :              :\\r\\n *              \\\\              /\\r\\n *               \\\\            /\\r\\n *                `.        ,'\\r\\n *                  `.    ,'\\r\\n *                    `.,'\\r\\n *                     /\\\\`.   ,-._\\r\\n *                         `-'    \\\\__\\r\\n *                              .\\r\\n *               s                \\\\\\r\\n *                                \\\\\\\\\\r\\n *                                 \\\\\\\\\\r\\n *                                  >\\\\/7\\r\\n *                              _.-(6'  \\\\\\r\\n *                             (=___._/` \\\\\\r\\n *                                  )  \\\\ |\\r\\n *                                 /   / |\\r\\n *                                /    > /\\r\\n *                               j    < _\\\\\\r\\n *                           _.-' :      ``.\\r\\n *                           \\\\ r=._\\\\        `.\\r\\n */\\r\\nimport './BaluniV1Pool.sol';\\r\\nimport '@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol';\\r\\nimport '@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol';\\r\\nimport '@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol';\\r\\n\\r\\ncontract BaluniV1PoolFactory is Initializable, UUPSUpgradeable, OwnableUpgradeable {\\r\\n  address[] public allPools;\\r\\n  mapping(address => mapping(address => address)) public getPool;\\r\\n\\r\\n  address public rebalancer;\\r\\n  address public periphery;\\r\\n\\r\\n  event PoolCreated(address indexed pool, address[] assets, address rebalancer);\\r\\n\\r\\n  function initialize(address _rebalancer) public initializer {\\r\\n    __UUPSUpgradeable_init();\\r\\n    __Ownable_init(msg.sender);\\r\\n    rebalancer = _rebalancer;\\r\\n  }\\r\\n\\r\\n  function reinitialize(address _rebalancer, uint64 _version) public reinitializer(_version) {\\r\\n    rebalancer = _rebalancer;\\r\\n  }\\r\\n\\r\\n  function _authorizeUpgrade(address newImplementation) internal override onlyOwner {}\\r\\n\\r\\n  /**\\r\\n   * @dev Creates a new BaluniV1Pool contract and registers it in the factory.\\r\\n   * @param assets The array of asset addresses to be included in the pool.\\r\\n   * @param weights The array of weights corresponding to each asset in the pool.\\r\\n   * @param trigger The trigger value for rebalancing the pool.\\r\\n   * @return The address of the newly created pool.\\r\\n   */\\r\\n  function createPool(address[] memory assets, uint256[] memory weights, uint256 trigger) external returns (address) {\\r\\n    require(periphery != address(0), 'Periphery not set');\\r\\n    require(assets.length > 1, 'At least two assets are required');\\r\\n    require(assets.length == weights.length, 'Assets and weights length mismatch');\\r\\n\\r\\n    for (uint256 i = 0; i < assets.length; i++) {\\r\\n      for (uint256 j = i + 1; j < assets.length; j++) {\\r\\n        require(address(getPool[assets[i]][assets[j]]) == address(0), 'Pool already exists for this pair');\\r\\n      }\\r\\n    }\\r\\n\\r\\n    BaluniV1Pool newPool = new BaluniV1Pool(rebalancer, assets, weights, trigger, periphery);\\r\\n\\r\\n    address poolAddress = address(newPool);\\r\\n\\r\\n    allPools.push(poolAddress);\\r\\n    for (uint256 i = 0; i < assets.length; i++) {\\r\\n      for (uint256 j = i + 1; j < assets.length; j++) {\\r\\n        getPool[assets[i]][assets[j]] = poolAddress;\\r\\n        getPool[assets[j]][assets[i]] = poolAddress;\\r\\n      }\\r\\n    }\\r\\n\\r\\n    emit PoolCreated(poolAddress, assets, rebalancer);\\r\\n\\r\\n    return poolAddress;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Retrieves all the pools created by the factory.\\r\\n   * @return An array of pool addresses.\\r\\n   */\\r\\n  function getAllPools() external view returns (address[] memory) {\\r\\n    return allPools;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Retrieves the number of pools created by the factory.\\r\\n   * @return The count of pools.\\r\\n   */\\r\\n  function getPoolsCount() external view returns (uint256) {\\r\\n    return allPools.length;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Retrieves the assets of a specific pool.\\r\\n   * @param poolAddress The address of the pool.\\r\\n   * @return An array of asset addresses.\\r\\n   */\\r\\n  function getPoolAssets(address poolAddress) external view returns (address[] memory) {\\r\\n    BaluniV1Pool pool = BaluniV1Pool(poolAddress);\\r\\n    return pool.getAssets();\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Retrieves the pool address based on the given assets.\\r\\n   * @param asset1 The address of the first asset.\\r\\n   * @param asset2 The address of the second asset.\\r\\n   * @return The address of the pool.\\r\\n   */\\r\\n  function getPoolByAssets(address asset1, address asset2) external view returns (address) {\\r\\n    return address(getPool[asset1][asset2]);\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Returns an array of pool addresses that contain the specified token.\\r\\n   * @param token The address of the token to search for.\\r\\n   * @return An array of pool addresses.\\r\\n   */\\r\\n  function getPoolsByAsset(address token) external view returns (address[] memory) {\\r\\n    address[] memory pools = new address[](allPools.length);\\r\\n    uint256 count = 0;\\r\\n\\r\\n    for (uint256 i = 0; i < allPools.length; i++) {\\r\\n      BaluniV1Pool pool = BaluniV1Pool(allPools[i]);\\r\\n      address[] memory assets = pool.getAssets();\\r\\n\\r\\n      for (uint256 j = 0; j < assets.length; j++) {\\r\\n        if (assets[j] == token) {\\r\\n          pools[count] = address(pool);\\r\\n          count++;\\r\\n          break;\\r\\n        }\\r\\n      }\\r\\n\\r\\n      if (count == pools.length) {\\r\\n        break;\\r\\n      }\\r\\n    }\\r\\n\\r\\n    address[] memory result = new address[](count);\\r\\n    for (uint256 i = 0; i < count; i++) {\\r\\n      result[i] = pools[i];\\r\\n    }\\r\\n\\r\\n    return result;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Changes the address of the periphery contract.\\r\\n   * @param _newPeriphery The new address of the periphery contract.\\r\\n   */\\r\\n  function changePeriphery(address _newPeriphery) external onlyOwner {\\r\\n    periphery = _newPeriphery;\\r\\n  }\\r\\n\\r\\n  function poolExist(address _pool) external returns (bool) {\\r\\n    for (uint256 i = 0; i < allPools.length; i++) {\\r\\n      if (allPools[i] == _pool) {\\r\\n        return true;\\r\\n      }\\r\\n    }\\r\\n    return false;\\r\\n  }\\r\\n}\\r\\n\",\"keccak256\":\"0x88816f43f20b4d031251469faa8dac51d022df766b579e8404388ca0ec91d93f\",\"license\":\"GNU AGPLv3\"},\"contracts/interfaces/IBaluniV1PoolPeriphery.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n\\r\\ninterface IBaluniV1PoolPeriphery {\\r\\n  function transferToPool() external;\\r\\n}\\r\\n\",\"keccak256\":\"0x2038c4f88590e309e5cade98801a59427b120d6f762251e550a865444b3853f0\",\"license\":\"GNU AGPLv3\"},\"contracts/interfaces/IBaluniV1Rebalancer.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\nimport '@openzeppelin/contracts/token/ERC20/IERC20.sol';\\r\\nimport '@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol';\\r\\n\\r\\ninterface IBaluniV1Rebalancer {\\r\\n  enum RebalanceType {\\r\\n    Overweight,\\r\\n    Underweight,\\r\\n    NoRebalance\\r\\n  }\\r\\n\\r\\n  struct RebalanceVars {\\r\\n    uint256 len;\\r\\n    uint256 totalValue;\\r\\n    uint256 finalUsdBalance;\\r\\n    uint256 overweightVaultsLength;\\r\\n    uint256 underweightVaultsLength;\\r\\n    uint256 totalActiveWeight;\\r\\n    uint256 amountOut;\\r\\n    uint256[] overweightVaults;\\r\\n    uint256[] overweightAmounts;\\r\\n    uint256[] underweightVaults;\\r\\n    uint256[] underweightAmounts;\\r\\n    uint256[] balances;\\r\\n  }\\r\\n\\r\\n  function checkRebalance(\\r\\n    address[] calldata assets,\\r\\n    uint256[] calldata weights,\\r\\n    uint256 limit,\\r\\n    address sender,\\r\\n    address baseAsset\\r\\n  ) external view returns (RebalanceVars memory);\\r\\n\\r\\n  function rebalance(\\r\\n    address[] calldata assets,\\r\\n    uint256[] calldata weights,\\r\\n    address sender,\\r\\n    address receiver,\\r\\n    uint256 limit,\\r\\n    address baseAsset\\r\\n  ) external;\\r\\n\\r\\n  function getBaluniRouter() external view returns (address);\\r\\n\\r\\n  function getRate(IERC20 srcToken, IERC20 dstToken, bool useWrappers) external view returns (uint256 weightedRate);\\r\\n\\r\\n  function getTreasury() external view returns (address);\\r\\n\\r\\n  function getUSDCAddress() external view returns (address);\\r\\n\\r\\n  function getWNATIVEAddress() external view returns (address);\\r\\n\\r\\n  function getRateToEth(IERC20 srcToken, bool useWrappers) external view returns (uint256 weightedRate);\\r\\n\\r\\n  function convert(address fromToken, address toToken, uint256 amount) external view returns (uint256);\\r\\n}\\r\\n\",\"keccak256\":\"0xba7ce07f4e65e878d1fc969e563b7cfa6fd60435612061d972a1f19d52cb059d\",\"license\":\"GNU AGPLv3\"},\"contracts/interfaces/IBaluniV1Router.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n\\r\\ninterface IBaluniV1Router {\\r\\n  function getAgentAddress(address _user) external view returns (address);\\r\\n\\r\\n  function getBpsFee() external view returns (uint256);\\r\\n\\r\\n  function tokenValuation(uint256 amount, address token) external view returns (uint256);\\r\\n\\r\\n  function getTreasury() external view returns (address);\\r\\n\\r\\n  function getUnitPrice() external view returns (uint256);\\r\\n}\\r\\n\",\"keccak256\":\"0xf36b22a54937a493f80d2f850b96d6ee735c3d7d54d3be369d76d03b72467096\",\"license\":\"GNU AGPLv3\"}},\"version\":1}","storageLayout":{"storage":[{"astId":4133,"contract":"contracts/BaluniV1PoolFactory.sol:BaluniV1PoolFactory","label":"allPools","offset":0,"slot":"0","type":"t_array(t_address)dyn_storage"},{"astId":4139,"contract":"contracts/BaluniV1PoolFactory.sol:BaluniV1PoolFactory","label":"getPool","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_address))"},{"astId":4141,"contract":"contracts/BaluniV1PoolFactory.sol:BaluniV1PoolFactory","label":"rebalancer","offset":0,"slot":"2","type":"t_address"},{"astId":4143,"contract":"contracts/BaluniV1PoolFactory.sol:BaluniV1PoolFactory","label":"periphery","offset":0,"slot":"3","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_address)dyn_storage":{"base":"t_address","encoding":"dynamic_array","label":"address[]","numberOfBytes":"32"},"t_mapping(t_address,t_address)":{"encoding":"mapping","key":"t_address","label":"mapping(address => address)","numberOfBytes":"32","value":"t_address"},"t_mapping(t_address,t_mapping(t_address,t_address))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => address))","numberOfBytes":"32","value":"t_mapping(t_address,t_address)"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/BaluniV1PoolPeriphery.sol":{"BaluniV1PoolPeriphery":{"abi":[{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"},{"inputs":[{"internalType":"address","name":"implementation","type":"address"}],"name":"ERC1967InvalidImplementation","type":"error"},{"inputs":[],"name":"ERC1967NonPayable","type":"error"},{"inputs":[],"name":"FailedInnerCall","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[],"name":"UUPSUnauthorizedCallContext","type":"error"},{"inputs":[{"internalType":"bytes32","name":"slot","type":"bytes32"}],"name":"UUPSUnsupportedProxiableUUID","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"inputs":[],"name":"UPGRADE_INTERFACE_VERSION","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"address","name":"poolAddress","type":"address"},{"internalType":"address","name":"receiver","type":"address"}],"name":"addLiquidity","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"fromTokens","type":"address[]"},{"internalType":"address[]","name":"toTokens","type":"address[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"address[]","name":"receivers","type":"address[]"}],"name":"batchSwap","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_poolFactory","type":"address"}],"name":"changePoolFactory","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"fromToken","type":"address"},{"internalType":"address","name":"toToken","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"getAmountOut","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"getPoolsContainingToken","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getVersion","outputs":[{"internalType":"uint64","name":"","type":"uint64"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_poolFactory","type":"address"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"poolAddress","type":"address"}],"name":"performRebalanceIfNeeded","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"poolFactory","outputs":[{"internalType":"contract IBaluniV1PoolFactory","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_poolFactory","type":"address"},{"internalType":"uint64","name":"version","type":"uint64"}],"name":"reinitialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"share","type":"uint256"},{"internalType":"address","name":"poolAddress","type":"address"},{"internalType":"address","name":"receiver","type":"address"}],"name":"removeLiquidity","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"fromToken","type":"address"},{"internalType":"address","name":"toToken","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"receiver","type":"address"}],"name":"smartSwap","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"fromToken","type":"address"},{"internalType":"address","name":"toToken","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"receiver","type":"address"}],"name":"swap","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"transferToPool","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"upgradeToAndCall","outputs":[],"stateMutability":"payable","type":"function"}],"devdoc":{"details":"This contract serves as the periphery contract for interacting with BaluniV1Pool contracts. It provides functions for swapping tokens, adding liquidity, removing liquidity, and getting the amount out for a given swap.","errors":{"AddressEmptyCode(address)":[{"details":"There's no code at `target` (it is not a contract)."}],"ERC1967InvalidImplementation(address)":[{"details":"The `implementation` of the proxy is invalid."}],"ERC1967NonPayable()":[{"details":"An upgrade function sees `msg.value > 0` that may be lost."}],"FailedInnerCall()":[{"details":"A call to an address target failed. The target may have reverted."}],"InvalidInitialization()":[{"details":"The contract is already initialized."}],"NotInitializing()":[{"details":"The contract is not initializing."}],"OwnableInvalidOwner(address)":[{"details":"The owner is not a valid owner account. (eg. `address(0)`)"}],"OwnableUnauthorizedAccount(address)":[{"details":"The caller account is not authorized to perform an operation."}],"UUPSUnauthorizedCallContext()":[{"details":"The call is from an unauthorized context."}],"UUPSUnsupportedProxiableUUID(bytes32)":[{"details":"The storage `slot` is unsupported as a UUID."}]},"events":{"Initialized(uint64)":{"details":"Triggered when the contract has been initialized or reinitialized."},"Upgraded(address)":{"details":"Emitted when the implementation is upgraded."}},"kind":"dev","methods":{"addLiquidity(uint256[],address,address)":{"details":"Adds liquidity to a BaluniV1Pool.","params":{"amounts":"An array of amounts for each asset to add as liquidity."}},"batchSwap(address[],address[],uint256[],address[])":{"details":"Performs batch swaps between multiple token pairs.","params":{"amounts":"An array of amounts representing the amounts to swap.","fromTokens":"An array of addresses representing the tokens to swap from.","receivers":"An array of addresses representing the receivers of the swapped tokens.","toTokens":"An array of addresses representing the tokens to swap to."},"returns":{"_0":"An array of amounts representing the amounts of tokens received after the swaps."}},"changePoolFactory(address)":{"details":"Changes the address of the pool factory contract. Can only be called by the contract owner.","params":{"_poolFactory":"The new address of the pool factory contract."}},"getAmountOut(address,address,uint256)":{"details":"Gets the amount of tokens received after a swap in a BaluniV1Pool.","params":{"amount":"The amount of tokens to swap.","fromToken":"The address of the token to swap from.","toToken":"The address of the token to swap to."},"returns":{"_0":"The amount of tokens received after the swap."}},"getPoolsContainingToken(address)":{"details":"Returns an array of pool addresses that contain the given token.","params":{"token":"The address of the token to search for."},"returns":{"_0":"An array of pool addresses."}},"getVersion()":{"details":"Returns the version of the contract.","returns":{"_0":"The version string."}},"initialize(address)":{"details":"Initializes the contract by setting the pool factory address.","params":{"_poolFactory":"The address of the BaluniV1PoolFactory contract."}},"owner()":{"details":"Returns the address of the current owner."},"performRebalanceIfNeeded(address)":{"details":"Performs rebalance if needed for the given tokens.","params":{"poolAddress":"The address of the token pool to rebalance."}},"proxiableUUID()":{"details":"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."},"reinitialize(address,uint64)":{"details":"Initializes the contract by setting the pool factory address.","params":{"_poolFactory":"The address of the BaluniV1PoolFactory contract."}},"removeLiquidity(uint256,address,address)":{"details":"Removes liquidity from a BaluniV1Pool.","params":{"poolAddress":"The address of the BaluniV1Pool.","share":"The amount of liquidity tokens to remove."}},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"swap(address,address,uint256,address)":{"details":"Swaps tokens in a BaluniV1Pool.","params":{"amount":"The amount of tokens to swap.","fromToken":"The address of the token to swap from.","toToken":"The address of the token to swap to."},"returns":{"_0":"The amount of tokens received after the swap."}},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"upgradeToAndCall(address,bytes)":{"custom:oz-upgrades-unsafe-allow-reachable":"delegatecall","details":"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."}},"title":"BaluniV1PoolPeriphery","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60a0806040523460295730608052612d5c908161002e823960805181818161219f01526122c00152f35b5f80fdfe6080806040526004361015610012575f80fd5b5f905f3560e01c9081630d8e6e2c14612705575080634219dc40146126b55780634aa06652146125235780634f1ef2861461221957806352d1902d1461215a5780635568081a146120a95780636e81221c14611e04578063715018a614611d4657806372591be514611cc65780637442eca6146116325780638da5cb5b146115c15780638f2248bc1461146b578063ad3cb1cc1461137c578063ae3cce1c1461127d578063c4d66de814611089578063e74e9b0614610a63578063ec0cd2eb14610846578063f2fde38b146107fb578063f31abcc4146103ec5763fe110116146100fa575f80fd5b346103e957807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103e95773ffffffffffffffffffffffffffffffffffffffff8082541660405180917f89345efb00000000000000000000000000000000000000000000000000000000825233600483015281602460209485935afa9081156102f95784916103b4575b5015610356578290604051927f0902f1ac0000000000000000000000000000000000000000000000000000000084528284600481335afa93841561034b578394610304575b506040517f67e4ac2c0000000000000000000000000000000000000000000000000000000081528381600481335afa9081156102f95784916102d7575b50835b81518110156102d357808461027685610226899587612a29565b5116610232848b612a29565b516040517fa9059cbb000000000000000000000000000000000000000000000000000000008152336004820152602481019190915294859283919082906044820190565b03925af180156102c85761028f575b600191500161020c565b8482813d83116102c1575b6102a481836127e3565b810103126102bd576102b7600192612982565b50610285565b8580fd5b503d61029a565b6040513d88823e3d90fd5b8480f35b6102f391503d8086833e6102eb81836127e3565b8101906129a7565b5f610209565b6040513d86823e3d90fd5b9093503d8084833e61031681836127e3565b8101828282031261034757815167ffffffffffffffff81116103435761033c9201612a6a565b925f6101cc565b8480fd5b8380fd5b6040513d85823e3d90fd5b606490604051907f08c379a00000000000000000000000000000000000000000000000000000000082526004820152600a60248201527f4f6e6c7920506f6f6c73000000000000000000000000000000000000000000006044820152fd5b90508181813d83116103e2575b6103cb81836127e3565b81010312610347576103dc90612982565b5f610187565b503d6103c1565b80fd5b50346103e95760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103e95760043590610428612789565b916104316127ac565b811561079d576040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815233600482015230602482015260209473ffffffffffffffffffffffffffffffffffffffff8082169490929091908781604481895afa90811561070357908391889161076c575b501061070e576040517f70a082310000000000000000000000000000000000000000000000000000000081523360048201528781602481895afa9081156107035790839188916106ce575b5010610670576040517f23b872dd00000000000000000000000000000000000000000000000000000000815233600482015273ffffffffffffffffffffffffffffffffffffffff9190911660248201526044810191909152858160648188885af1908115610665578591610630575b50156105d257839450823b156105cd57602484928360405195869485937f89afcb440000000000000000000000000000000000000000000000000000000085521660048401525af180156105c2576105b25750f35b6105bb906127cf565b6103e95780f35b6040513d84823e3d90fd5b505050fd5b606485604051907f08c379a00000000000000000000000000000000000000000000000000000000082526004820152600f60248201527f5472616e73666572206661696c656400000000000000000000000000000000006044820152fd5b90508581813d831161065e575b61064781836127e3565b810103126103435761065890612982565b5f61055d565b503d61063d565b6040513d87823e3d90fd5b606487604051907f08c379a00000000000000000000000000000000000000000000000000000000082526004820152601460248201527f496e73756666696369656e742062616c616e63650000000000000000000000006044820152fd5b809250898092503d83116106fc575b6106e781836127e3565b810103126106f8578290515f6104ee565b5f80fd5b503d6106dd565b6040513d89823e3d90fd5b606487604051907f08c379a00000000000000000000000000000000000000000000000000000000082526004820152601660248201527f496e73756666696369656e7420616c6c6f77616e6365000000000000000000006044820152fd5b809250898092503d8311610796575b61078581836127e3565b810103126106f8578290515f6104a3565b503d61077b565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5368617265206d7573742062652067726561746572207468616e207a65726f006044820152fd5b50346103e95760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103e957610843610836612766565b61083e612bbd565b612afc565b80f35b50346103e95760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103e95760043567ffffffffffffffff8111610a5f576108969036906004016128cb565b90916108a0612789565b916108a96127ac565b9273ffffffffffffffffffffffffffffffffffffffff809116604051907f67e4ac2c0000000000000000000000000000000000000000000000000000000082528482600481845afa918215610665578592610a43575b50845b82518110156109d357836109168285612a29565b511661097461092683888c612acb565b6040517f23b872dd00000000000000000000000000000000000000000000000000000000815233600482015230602482015290356044820152916020918291849182908c9082906064820190565b03925af180156109c85761098d575b5050600101610902565b81813d83116109c1575b6109a181836127e3565b810103126109bd57906109b5600192612982565b50905f610983565b8680fd5b503d610997565b6040513d8a823e3d90fd5b6040517f6a6278420000000000000000000000000000000000000000000000000000000081528785166004820152869060208160248185885af180156105c257610a1b575080f35b602090813d8311610a3c575b610a3181836127e3565b810103126106f85780f35b503d610a27565b610a589192503d8087833e6102eb81836127e3565b905f6108ff565b5080fd5b50346103e95760807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103e95767ffffffffffffffff60043581811161108557610ab49036906004016128cb565b909160243581811161034357610ace9036906004016128cb565b916044358181116109bd57610ae79036906004016128cb565b909160643590811161108157610b019036906004016128cb565b9285871480611078575b8061106f575b1561101157610b258799979896959861298f565b97610b33604051998a6127e3565b8989527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0610b608b61298f565b013660208b013787995b808b10610bb7578989604051918291602083016020845282518091526020604085019301915b818110610b9e575050500390f35b8251845285945060209384019390920191600101610b90565b8a896020610c5973ffffffffffffffffffffffffffffffffffffffff839f8d9f9e9c9d8188610c0092610bfb8f610c05968f91610bf392612acb565b35151561291d565b612acb565b612adb565b16610c11858b8a612acb565b6040517f23b872dd0000000000000000000000000000000000000000000000000000000081523360048201523060248201529035604482015293849283919082906064820190565b03925af1908115610ed15782848b8f938e95610f9a575b50610c0083610ca5610c00610d0698966020989673ffffffffffffffffffffffffffffffffffffffff610cac97541697612acb565b948a612acb565b6040517f2d5e94a700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9384166004820152921660248301529092839190829081906044820190565b03915afa908115610ed15782848e8c938495610f2c575b50610d46610c00602094610daa9473ffffffffffffffffffffffffffffffffffffffff94612acb565b16610d52868c8b612acb565b6040517f095ea7b300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff871660048201529035602482015293849283919082906044820190565b03925af18015610f2157848e8592610edc575b610dc79350612acb565b610dd090612adb565b90610ddc838c87612acb565b610de590612adb565b610df0848a89612acb565b3590610dfd858c8b612acb565b610e0690612adb565b6040517f6e81221c00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff95861660048201529185166024830152604482019290925290831660648201529116816084818c5a94602095f1908115610ed1578991610e99575b5090600191610e8b828d612a29565b52019a509896959798610b6a565b919850506020813d602011610ec9575b81610eb6602093836127e3565b810103126106f857518b97906001610e7c565b3d9150610ea9565b6040513d8b823e3d90fd5b5050506020813d602011610f19575b81610ef8602093836127e3565b81010312610f155782848e610f0f610dc794612982565b50610dbd565b8980fd5b3d9150610eeb565b6040513d8c823e3d90fd5b9450505050506020813d602011610f92575b81610f4b602093836127e3565b81010312610f8e57886020610daa73ffffffffffffffffffffffffffffffffffffffff8f94610c008789610f81610d46946128fc565b9894509450945050610d1d565b8880fd5b3d9150610f3e565b9450505050506020813d602011611009575b81610fb9602093836127e3565b81010312610f8e5760208a8d610cac610c0086610ca58f828b73ffffffffffffffffffffffffffffffffffffffff610c0093610ff7610d069d612982565b50975050969850505050939550610c70565b3d9150610fac565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f496e70757420617272617973206c656e677468206d69736d61746368000000006044820152fd5b50838314610b11565b50828614610b0b565b8780fd5b8280fd5b50346103e95760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103e9576110c1612766565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0090815460ff8160401c16159167ffffffffffffffff821680159081611275575b600114908161126b575b159081611262575b5061123857818360017fffffffffffffffffffffffffffffffffffffffffffffffff000000000000000073ffffffffffffffffffffffffffffffffffffffff9516178655611203575b50611166612c2d565b61116e612c2d565b611176612c2d565b61117f33612afc565b167fffffffffffffffffffffffff00000000000000000000000000000000000000008454161783556111af575080f35b7fffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff81541690557fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2602060405160018152a180f35b7fffffffffffffffffffffffffffffffffffffffffffffff00000000000000000016680100000000000000011784555f61115d565b60046040517ff92ee8a9000000000000000000000000000000000000000000000000000000008152fd5b9050155f611114565b303b15915061110c565b849150611102565b50346103e9576020807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610a5f576112b6612766565b73ffffffffffffffffffffffffffffffffffffffff9280846024818354169460405195869384927fb4340e6a0000000000000000000000000000000000000000000000000000000084521660048301525afa91821561136f578192611353575b506040519280840190808552835180925280604086019401925b82811061133d5785850386f35b8351871685529381019392810192600101611330565b6113689192503d8084833e6102eb81836127e3565b905f611316565b50604051903d90823e3d90fd5b50346103e957807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103e957604051604081019080821067ffffffffffffffff83111761143e576040918252600581527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f602083017f352e302e3000000000000000000000000000000000000000000000000000000081528451958694602086525180928160208801528787015e85828601015201168101030190f35b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b50346103e95760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103e9576114a3612766565b6024359067ffffffffffffffff91828116809103610347577ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054938260ff8660401c169182156115b4575b5050611238577fffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff68010000000000000000837fffffffffffffffffffffffffffffffffffffffffffffff0000000000000000007fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29773ffffffffffffffffffffffffffffffffffffffff602098167fffffffffffffffffffffffff00000000000000000000000000000000000000005f5416175f55161717169055604051908152a180f35b861610159050825f6114ef565b50346103e957807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103e957602073ffffffffffffffffffffffffffffffffffffffff7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c1993005416604051908152f35b50346103e95760246116433661285e565b6116528295949392151561291d565b8573ffffffffffffffffffffffffffffffffffffffff815416604051958680927fb4340e6a00000000000000000000000000000000000000000000000000000000825273ffffffffffffffffffffffffffffffffffffffff881660048301525afa9384156102c8578694611caa575b5090939185908190815b8651841015611a045773ffffffffffffffffffffffffffffffffffffffff6116f38589612a29565b511697604051957f89ab35320000000000000000000000000000000000000000000000000000000087528a876004818d5afa9687156119f9578b9761192a575b506004949596978b8b604051978880927f36bf6e390000000000000000000000000000000000000000000000000000000082525afa95861561191f578c966118d8575b508b5b8c8a518210156118c457602460408e8151928380927fd14ef46d0000000000000000000000000000000000000000000000000000000082528760048301525afa9182156118b85791611850575b5073ffffffffffffffffffffffffffffffffffffffff808816915116146117f0575b600101611779565b6117fa8188612a29565b51611805828c612a29565b51151580611847575b611819575b506117e8565b97509350600173ffffffffffffffffffffffffffffffffffffffff61183e8a8d612a29565b51169490611813565b5088811161180e565b90506040813d6040116118b0575b8161186b604093836127e3565b810103126118ac57604051906040820182811067ffffffffffffffff82111761143e5760405261189a816128fc565b8252602080910151908201525f6117c6565b8d80fd5b3d915061185e565b604051903d90823e3d90fd5b50929a509750956001019493506116cb9050565b9095503d808d833e6118ea81836127e3565b810160408282031261191b57602082015167ffffffffffffffff81116118ac576119149201612a6a565b945f611776565b8c80fd5b6040513d8e823e3d90fd5b949596503d94858c823e61193e86826127e3565b60408187810103126119f55780519567ffffffffffffffff968781116118ac57820191818101601f840112156118ac5782519260209061197d8561298f565b9461198b60405196876127e3565b808652828087019160051b8301019185850183116119ef5783809101915b8383106119d757505050508101519788116118ac576004976119ce9282019101612a6a565b50969594611733565b81906119e284612982565b81520191019083906119a9565b50508f80fd5b8b80fd5b6040513d8d823e3d90fd5b888686928a73ffffffffffffffffffffffffffffffffffffffff821615611c4c576040517f23b872dd000000000000000000000000000000000000000000000000000000008152336004820152306024820152604481018490526020816064818873ffffffffffffffffffffffffffffffffffffffff8c165af1801561066557611c13575b506040517f095ea7b300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8316600482015260248101849052602081806044810103818873ffffffffffffffffffffffffffffffffffffffff8c165af1801561066557611bbb575b506040517f6e81221c00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9687166004820152908616602482015260448101929092529284166064820152929091602091849160849183918691165af19081156118b85790611b88575b602090604051908152f35b506020813d602011611bb3575b81611ba2602093836127e3565b810103126106f85760209051611b7d565b3d9150611b95565b6020813d602011611c0b575b81611bd4602093836127e3565b81010312610343579373ffffffffffffffffffffffffffffffffffffffff819697611c00602097612982565b509796955050611b02565b3d9150611bc7565b6020813d602011611c44575b81611c2c602093836127e3565b8101031261034357611c3d90612982565b5086611a89565b3d9150611c1f565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f4e6f207375697461626c6520706f6f6c20666f756e64000000000000000000006044820152fd5b611cbf9194503d8088833e6102eb81836127e3565b925f6116c1565b50346103e95760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103e95773ffffffffffffffffffffffffffffffffffffffff611d13612766565b611d1b612bbd565b167fffffffffffffffffffffffff00000000000000000000000000000000000000005f5416175f5580f35b50346103e957807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103e957611d7d612bbd565b5f73ffffffffffffffffffffffffffffffffffffffff7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c1993008054907fffffffffffffffffffffffff000000000000000000000000000000000000000082169055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b50346103e957611e133661285e565b91611e2282959495151561291d565b83546040517f2d5e94a700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8781166004830152838116602483015260209791939290919088908590604490829086165afa938415610703578794612072575b506040517f23b872dd000000000000000000000000000000000000000000000000000000008152336004820152306024820152604481018690528282169089816064818c865af18015610ed15761203e575b506040517f095ea7b300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8616600482015260248101879052908990829060449082908c905af180156109c857918996959493918993611ffc575b506040517f6e81221c00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9182166004820152938116602485015260448401959095529590931660648201529384926084928492165af19182156118b85791611fcf575b50604051908152f35b90508181813d8311611ff5575b611fe681836127e3565b810103126106f857515f611fc6565b503d611fdc565b878193959697989294503d8311612037575b61201881836127e3565b81010312611081579187916120308a97969594612982565b505f611f51565b503d61200e565b8981813d831161206b575b61205381836127e3565b81010312610f8e5761206490612982565b505f611ee5565b503d612049565b9093508781813d83116120a2575b61208a81836127e3565b810103126109bd5761209b906128fc565b925f611e93565b503d612080565b50346106f85760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126106f85773ffffffffffffffffffffffffffffffffffffffff6120f6612766565b16803b156106f8575f80916024604051809481937f5568081a0000000000000000000000000000000000000000000000000000000083523360048401525af1801561214f57612143575080f35b61214d91506127cf565b005b6040513d5f823e3d90fd5b346106f8575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126106f85773ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001630036121ef5760206040517f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc8152f35b60046040517fe07c8dba000000000000000000000000000000000000000000000000000000008152fd5b60407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126106f85761224b612766565b602490813567ffffffffffffffff81116106f857366023820112156106f857806004013561227881612824565b9261228660405194856127e3565b81845260209182850193368783830101116106f857815f928886930187378601015273ffffffffffffffffffffffffffffffffffffffff807f0000000000000000000000000000000000000000000000000000000000000000168030149081156124f5575b506121ef576122f8612bbd565b8116936040517f52d1902d0000000000000000000000000000000000000000000000000000000081528381600481895afa5f91816124c6575b50612366578686604051907f4c9c8ce30000000000000000000000000000000000000000000000000000000082526004820152fd5b8590877f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc918281036124985750843b156124695750817fffffffffffffffffffffffff0000000000000000000000000000000000000000825416179055604051907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b5f80a281511561243557505f61214d9481925190845af4903d1561242c573d61241081612824565b9061241e60405192836127e3565b81525f81943d92013e612c86565b60609250612c86565b93505050503461244157005b807fb398979f0000000000000000000000000000000000000000000000000000000060049252fd5b82604051907f4c9c8ce30000000000000000000000000000000000000000000000000000000082526004820152fd5b604051907faa1d49a40000000000000000000000000000000000000000000000000000000082526004820152fd5b9091508481813d83116124ee575b6124de81836127e3565b810103126106f857519088612331565b503d6124d4565b9050817f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc54161415876122eb565b346106f85760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126106f85761255a612766565b612562612789565b5f546040517f2d5e94a700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff84811660048301528381166024830152602094919285908490604490829085165afa90811561214f5785935f92612678575b506040517f4aa0665200000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff938416600482015294909216602485015260448035908501528391829081606481015b0392165afa90811561214f575f9161264b5750604051908152f35b90508181813d8311612671575b61266281836127e3565b810103126106f8575182611fc6565b503d612658565b8481959293503d83116126ae575b61269081836127e3565b810103126106f857612630936126a686946128fc565b9190946125d1565b503d612686565b346106f8575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126106f857602073ffffffffffffffffffffffffffffffffffffffff5f5416604051908152f35b346106f8575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126106f85760209067ffffffffffffffff7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0054168152f35b6004359073ffffffffffffffffffffffffffffffffffffffff821682036106f857565b6024359073ffffffffffffffffffffffffffffffffffffffff821682036106f857565b6044359073ffffffffffffffffffffffffffffffffffffffff821682036106f857565b67ffffffffffffffff811161143e57604052565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff82111761143e57604052565b67ffffffffffffffff811161143e57601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc60809101126106f85773ffffffffffffffffffffffffffffffffffffffff9060043582811681036106f8579160243581811681036106f857916044359160643590811681036106f85790565b9181601f840112156106f85782359167ffffffffffffffff83116106f8576020808501948460051b0101116106f857565b519073ffffffffffffffffffffffffffffffffffffffff821682036106f857565b1561292457565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602060248201527f416d6f756e74206d7573742062652067726561746572207468616e207a65726f6044820152fd5b519081151582036106f857565b67ffffffffffffffff811161143e5760051b60200190565b60209081818403126106f85780519067ffffffffffffffff82116106f857019180601f840112156106f85782516129dd8161298f565b936129eb60405195866127e3565b818552838086019260051b8201019283116106f8578301905b828210612a12575050505090565b838091612a1e846128fc565b815201910190612a04565b8051821015612a3d5760209160051b010190565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b9080601f830112156106f857815190602091612a858161298f565b93612a9360405195866127e3565b81855260208086019260051b8201019283116106f857602001905b828210612abc575050505090565b81518152908301908301612aae565b9190811015612a3d5760051b0190565b3573ffffffffffffffffffffffffffffffffffffffff811681036106f85790565b73ffffffffffffffffffffffffffffffffffffffff809116908115612b8d577f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300805490837fffffffffffffffffffffffff00000000000000000000000000000000000000008316179055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e05f80a3565b60246040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081525f6004820152fd5b73ffffffffffffffffffffffffffffffffffffffff7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930054163303612bfd57565b60246040517f118cdaa7000000000000000000000000000000000000000000000000000000008152336004820152fd5b60ff7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a005460401c1615612c5c57565b60046040517fd7e6bcf8000000000000000000000000000000000000000000000000000000008152fd5b90612cc55750805115612c9b57805190602001fd5b60046040517f1425ea42000000000000000000000000000000000000000000000000000000008152fd5b81511580612d1d575b612cd6575090565b60249073ffffffffffffffffffffffffffffffffffffffff604051917f9996b315000000000000000000000000000000000000000000000000000000008352166004820152fd5b50803b15612cce56fea26469706673582212205f5b16526737d6f82f2bcddcdd47e57ddd2d559420000ae02510437afcb8c56364736f6c63430008190033","opcodes":"PUSH1 0xA0 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x29 JUMPI ADDRESS PUSH1 0x80 MSTORE PUSH2 0x2D5C SWAP1 DUP2 PUSH2 0x2E DUP3 CODECOPY PUSH1 0x80 MLOAD DUP2 DUP2 DUP2 PUSH2 0x219F ADD MSTORE PUSH2 0x22C0 ADD MSTORE RETURN JUMPDEST PUSH0 DUP1 REVERT INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 SWAP1 PUSH0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0xD8E6E2C EQ PUSH2 0x2705 JUMPI POP DUP1 PUSH4 0x4219DC40 EQ PUSH2 0x26B5 JUMPI DUP1 PUSH4 0x4AA06652 EQ PUSH2 0x2523 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x2219 JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x215A JUMPI DUP1 PUSH4 0x5568081A EQ PUSH2 0x20A9 JUMPI DUP1 PUSH4 0x6E81221C EQ PUSH2 0x1E04 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1D46 JUMPI DUP1 PUSH4 0x72591BE5 EQ PUSH2 0x1CC6 JUMPI DUP1 PUSH4 0x7442ECA6 EQ PUSH2 0x1632 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x15C1 JUMPI DUP1 PUSH4 0x8F2248BC EQ PUSH2 0x146B JUMPI DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0x137C JUMPI DUP1 PUSH4 0xAE3CCE1C EQ PUSH2 0x127D JUMPI DUP1 PUSH4 0xC4D66DE8 EQ PUSH2 0x1089 JUMPI DUP1 PUSH4 0xE74E9B06 EQ PUSH2 0xA63 JUMPI DUP1 PUSH4 0xEC0CD2EB EQ PUSH2 0x846 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x7FB JUMPI DUP1 PUSH4 0xF31ABCC4 EQ PUSH2 0x3EC JUMPI PUSH4 0xFE110116 EQ PUSH2 0xFA JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x3E9 JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x3E9 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP3 SLOAD AND PUSH1 0x40 MLOAD DUP1 SWAP2 PUSH32 0x89345EFB00000000000000000000000000000000000000000000000000000000 DUP3 MSTORE CALLER PUSH1 0x4 DUP4 ADD MSTORE DUP2 PUSH1 0x24 PUSH1 0x20 SWAP5 DUP6 SWAP4 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x2F9 JUMPI DUP5 SWAP2 PUSH2 0x3B4 JUMPI JUMPDEST POP ISZERO PUSH2 0x356 JUMPI DUP3 SWAP1 PUSH1 0x40 MLOAD SWAP3 PUSH32 0x902F1AC00000000000000000000000000000000000000000000000000000000 DUP5 MSTORE DUP3 DUP5 PUSH1 0x4 DUP2 CALLER GAS STATICCALL SWAP4 DUP5 ISZERO PUSH2 0x34B JUMPI DUP4 SWAP5 PUSH2 0x304 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD PUSH32 0x67E4AC2C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE DUP4 DUP2 PUSH1 0x4 DUP2 CALLER GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x2F9 JUMPI DUP5 SWAP2 PUSH2 0x2D7 JUMPI JUMPDEST POP DUP4 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x2D3 JUMPI DUP1 DUP5 PUSH2 0x276 DUP6 PUSH2 0x226 DUP10 SWAP6 DUP8 PUSH2 0x2A29 JUMP JUMPDEST MLOAD AND PUSH2 0x232 DUP5 DUP12 PUSH2 0x2A29 JUMP JUMPDEST MLOAD PUSH1 0x40 MLOAD PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP5 DUP6 SWAP3 DUP4 SWAP2 SWAP1 DUP3 SWAP1 PUSH1 0x44 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x2C8 JUMPI PUSH2 0x28F JUMPI JUMPDEST PUSH1 0x1 SWAP2 POP ADD PUSH2 0x20C JUMP JUMPDEST DUP5 DUP3 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x2C1 JUMPI JUMPDEST PUSH2 0x2A4 DUP2 DUP4 PUSH2 0x27E3 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x2BD JUMPI PUSH2 0x2B7 PUSH1 0x1 SWAP3 PUSH2 0x2982 JUMP JUMPDEST POP PUSH2 0x285 JUMP JUMPDEST DUP6 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x29A JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP9 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP5 DUP1 RETURN JUMPDEST PUSH2 0x2F3 SWAP2 POP RETURNDATASIZE DUP1 DUP7 DUP4 RETURNDATACOPY PUSH2 0x2EB DUP2 DUP4 PUSH2 0x27E3 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x29A7 JUMP JUMPDEST PUSH0 PUSH2 0x209 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP7 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 SWAP4 POP RETURNDATASIZE DUP1 DUP5 DUP4 RETURNDATACOPY PUSH2 0x316 DUP2 DUP4 PUSH2 0x27E3 JUMP JUMPDEST DUP2 ADD DUP3 DUP3 DUP3 SUB SLT PUSH2 0x347 JUMPI DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x343 JUMPI PUSH2 0x33C SWAP3 ADD PUSH2 0x2A6A JUMP JUMPDEST SWAP3 PUSH0 PUSH2 0x1CC JUMP JUMPDEST DUP5 DUP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP6 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920506F6F6C7300000000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 POP DUP2 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x3E2 JUMPI JUMPDEST PUSH2 0x3CB DUP2 DUP4 PUSH2 0x27E3 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x347 JUMPI PUSH2 0x3DC SWAP1 PUSH2 0x2982 JUMP JUMPDEST PUSH0 PUSH2 0x187 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x3C1 JUMP JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x3E9 JUMPI PUSH1 0x60 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x3E9 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH2 0x428 PUSH2 0x2789 JUMP JUMPDEST SWAP2 PUSH2 0x431 PUSH2 0x27AC JUMP JUMPDEST DUP2 ISZERO PUSH2 0x79D JUMPI PUSH1 0x40 MLOAD PUSH32 0xDD62ED3E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x20 SWAP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP3 AND SWAP5 SWAP1 SWAP3 SWAP1 SWAP2 SWAP1 DUP8 DUP2 PUSH1 0x44 DUP2 DUP10 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x703 JUMPI SWAP1 DUP4 SWAP2 DUP9 SWAP2 PUSH2 0x76C JUMPI JUMPDEST POP LT PUSH2 0x70E JUMPI PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE DUP8 DUP2 PUSH1 0x24 DUP2 DUP10 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x703 JUMPI SWAP1 DUP4 SWAP2 DUP9 SWAP2 PUSH2 0x6CE JUMPI JUMPDEST POP LT PUSH2 0x670 JUMPI PUSH1 0x40 MLOAD PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 SWAP1 SWAP2 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP6 DUP2 PUSH1 0x64 DUP2 DUP9 DUP9 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x665 JUMPI DUP6 SWAP2 PUSH2 0x630 JUMPI JUMPDEST POP ISZERO PUSH2 0x5D2 JUMPI DUP4 SWAP5 POP DUP3 EXTCODESIZE ISZERO PUSH2 0x5CD JUMPI PUSH1 0x24 DUP5 SWAP3 DUP4 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP5 DUP6 SWAP4 PUSH32 0x89AFCB4400000000000000000000000000000000000000000000000000000000 DUP6 MSTORE AND PUSH1 0x4 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x5C2 JUMPI PUSH2 0x5B2 JUMPI POP RETURN JUMPDEST PUSH2 0x5BB SWAP1 PUSH2 0x27CF JUMP JUMPDEST PUSH2 0x3E9 JUMPI DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP POP POP REVERT JUMPDEST PUSH1 0x64 DUP6 PUSH1 0x40 MLOAD SWAP1 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E73666572206661696C65640000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 POP DUP6 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x65E JUMPI JUMPDEST PUSH2 0x647 DUP2 DUP4 PUSH2 0x27E3 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x343 JUMPI PUSH2 0x658 SWAP1 PUSH2 0x2982 JUMP JUMPDEST PUSH0 PUSH2 0x55D JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x63D JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP8 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x64 DUP8 PUSH1 0x40 MLOAD SWAP1 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E742062616C616E6365000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP1 SWAP3 POP DUP10 DUP1 SWAP3 POP RETURNDATASIZE DUP4 GT PUSH2 0x6FC JUMPI JUMPDEST PUSH2 0x6E7 DUP2 DUP4 PUSH2 0x27E3 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x6F8 JUMPI DUP3 SWAP1 MLOAD PUSH0 PUSH2 0x4EE JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x6DD JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP10 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x64 DUP8 PUSH1 0x40 MLOAD SWAP1 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E7420616C6C6F77616E636500000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP1 SWAP3 POP DUP10 DUP1 SWAP3 POP RETURNDATASIZE DUP4 GT PUSH2 0x796 JUMPI JUMPDEST PUSH2 0x785 DUP2 DUP4 PUSH2 0x27E3 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x6F8 JUMPI DUP3 SWAP1 MLOAD PUSH0 PUSH2 0x4A3 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x77B JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5368617265206D7573742062652067726561746572207468616E207A65726F00 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP CALLVALUE PUSH2 0x3E9 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x3E9 JUMPI PUSH2 0x843 PUSH2 0x836 PUSH2 0x2766 JUMP JUMPDEST PUSH2 0x83E PUSH2 0x2BBD JUMP JUMPDEST PUSH2 0x2AFC JUMP JUMPDEST DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x3E9 JUMPI PUSH1 0x60 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x3E9 JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xA5F JUMPI PUSH2 0x896 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x28CB JUMP JUMPDEST SWAP1 SWAP2 PUSH2 0x8A0 PUSH2 0x2789 JUMP JUMPDEST SWAP2 PUSH2 0x8A9 PUSH2 0x27AC JUMP JUMPDEST SWAP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP2 AND PUSH1 0x40 MLOAD SWAP1 PUSH32 0x67E4AC2C00000000000000000000000000000000000000000000000000000000 DUP3 MSTORE DUP5 DUP3 PUSH1 0x4 DUP2 DUP5 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x665 JUMPI DUP6 SWAP3 PUSH2 0xA43 JUMPI JUMPDEST POP DUP5 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x9D3 JUMPI DUP4 PUSH2 0x916 DUP3 DUP6 PUSH2 0x2A29 JUMP JUMPDEST MLOAD AND PUSH2 0x974 PUSH2 0x926 DUP4 DUP9 DUP13 PUSH2 0x2ACB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE SWAP1 CALLDATALOAD PUSH1 0x44 DUP3 ADD MSTORE SWAP2 PUSH1 0x20 SWAP2 DUP3 SWAP2 DUP5 SWAP2 DUP3 SWAP1 DUP13 SWAP1 DUP3 SWAP1 PUSH1 0x64 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x9C8 JUMPI PUSH2 0x98D JUMPI JUMPDEST POP POP PUSH1 0x1 ADD PUSH2 0x902 JUMP JUMPDEST DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x9C1 JUMPI JUMPDEST PUSH2 0x9A1 DUP2 DUP4 PUSH2 0x27E3 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x9BD JUMPI SWAP1 PUSH2 0x9B5 PUSH1 0x1 SWAP3 PUSH2 0x2982 JUMP JUMPDEST POP SWAP1 PUSH0 PUSH2 0x983 JUMP JUMPDEST DUP7 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x997 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP11 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x6A62784200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE DUP8 DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE DUP7 SWAP1 PUSH1 0x20 DUP2 PUSH1 0x24 DUP2 DUP6 DUP9 GAS CALL DUP1 ISZERO PUSH2 0x5C2 JUMPI PUSH2 0xA1B JUMPI POP DUP1 RETURN JUMPDEST PUSH1 0x20 SWAP1 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0xA3C JUMPI JUMPDEST PUSH2 0xA31 DUP2 DUP4 PUSH2 0x27E3 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x6F8 JUMPI DUP1 RETURN JUMPDEST POP RETURNDATASIZE PUSH2 0xA27 JUMP JUMPDEST PUSH2 0xA58 SWAP2 SWAP3 POP RETURNDATASIZE DUP1 DUP8 DUP4 RETURNDATACOPY PUSH2 0x2EB DUP2 DUP4 PUSH2 0x27E3 JUMP JUMPDEST SWAP1 PUSH0 PUSH2 0x8FF JUMP JUMPDEST POP DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x3E9 JUMPI PUSH1 0x80 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x3E9 JUMPI PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x4 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x1085 JUMPI PUSH2 0xAB4 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x28CB JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x24 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x343 JUMPI PUSH2 0xACE SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x28CB JUMP JUMPDEST SWAP2 PUSH1 0x44 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x9BD JUMPI PUSH2 0xAE7 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x28CB JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x64 CALLDATALOAD SWAP1 DUP2 GT PUSH2 0x1081 JUMPI PUSH2 0xB01 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x28CB JUMP JUMPDEST SWAP3 DUP6 DUP8 EQ DUP1 PUSH2 0x1078 JUMPI JUMPDEST DUP1 PUSH2 0x106F JUMPI JUMPDEST ISZERO PUSH2 0x1011 JUMPI PUSH2 0xB25 DUP8 SWAP10 SWAP8 SWAP9 SWAP7 SWAP6 SWAP9 PUSH2 0x298F JUMP JUMPDEST SWAP8 PUSH2 0xB33 PUSH1 0x40 MLOAD SWAP10 DUP11 PUSH2 0x27E3 JUMP JUMPDEST DUP10 DUP10 MSTORE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH2 0xB60 DUP12 PUSH2 0x298F JUMP JUMPDEST ADD CALLDATASIZE PUSH1 0x20 DUP12 ADD CALLDATACOPY DUP8 SWAP10 JUMPDEST DUP1 DUP12 LT PUSH2 0xBB7 JUMPI DUP10 DUP10 PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP5 MSTORE DUP3 MLOAD DUP1 SWAP2 MSTORE PUSH1 0x20 PUSH1 0x40 DUP6 ADD SWAP4 ADD SWAP2 JUMPDEST DUP2 DUP2 LT PUSH2 0xB9E JUMPI POP POP POP SUB SWAP1 RETURN JUMPDEST DUP3 MLOAD DUP5 MSTORE DUP6 SWAP5 POP PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0xB90 JUMP JUMPDEST DUP11 DUP10 PUSH1 0x20 PUSH2 0xC59 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 SWAP16 DUP14 SWAP16 SWAP15 SWAP13 SWAP14 DUP2 DUP9 PUSH2 0xC00 SWAP3 PUSH2 0xBFB DUP16 PUSH2 0xC05 SWAP7 DUP16 SWAP2 PUSH2 0xBF3 SWAP3 PUSH2 0x2ACB JUMP JUMPDEST CALLDATALOAD ISZERO ISZERO PUSH2 0x291D JUMP JUMPDEST PUSH2 0x2ACB JUMP JUMPDEST PUSH2 0x2ADB JUMP JUMPDEST AND PUSH2 0xC11 DUP6 DUP12 DUP11 PUSH2 0x2ACB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE SWAP1 CALLDATALOAD PUSH1 0x44 DUP3 ADD MSTORE SWAP4 DUP5 SWAP3 DUP4 SWAP2 SWAP1 DUP3 SWAP1 PUSH1 0x64 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0xED1 JUMPI DUP3 DUP5 DUP12 DUP16 SWAP4 DUP15 SWAP6 PUSH2 0xF9A JUMPI JUMPDEST POP PUSH2 0xC00 DUP4 PUSH2 0xCA5 PUSH2 0xC00 PUSH2 0xD06 SWAP9 SWAP7 PUSH1 0x20 SWAP9 SWAP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0xCAC SWAP8 SLOAD AND SWAP8 PUSH2 0x2ACB JUMP JUMPDEST SWAP5 DUP11 PUSH2 0x2ACB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x2D5E94A700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP4 DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP3 AND PUSH1 0x24 DUP4 ADD MSTORE SWAP1 SWAP3 DUP4 SWAP2 SWAP1 DUP3 SWAP1 DUP2 SWAP1 PUSH1 0x44 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xED1 JUMPI DUP3 DUP5 DUP15 DUP13 SWAP4 DUP5 SWAP6 PUSH2 0xF2C JUMPI JUMPDEST POP PUSH2 0xD46 PUSH2 0xC00 PUSH1 0x20 SWAP5 PUSH2 0xDAA SWAP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP5 PUSH2 0x2ACB JUMP JUMPDEST AND PUSH2 0xD52 DUP7 DUP13 DUP12 PUSH2 0x2ACB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x95EA7B300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP1 CALLDATALOAD PUSH1 0x24 DUP3 ADD MSTORE SWAP4 DUP5 SWAP3 DUP4 SWAP2 SWAP1 DUP3 SWAP1 PUSH1 0x44 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0xF21 JUMPI DUP5 DUP15 DUP6 SWAP3 PUSH2 0xEDC JUMPI JUMPDEST PUSH2 0xDC7 SWAP4 POP PUSH2 0x2ACB JUMP JUMPDEST PUSH2 0xDD0 SWAP1 PUSH2 0x2ADB JUMP JUMPDEST SWAP1 PUSH2 0xDDC DUP4 DUP13 DUP8 PUSH2 0x2ACB JUMP JUMPDEST PUSH2 0xDE5 SWAP1 PUSH2 0x2ADB JUMP JUMPDEST PUSH2 0xDF0 DUP5 DUP11 DUP10 PUSH2 0x2ACB JUMP JUMPDEST CALLDATALOAD SWAP1 PUSH2 0xDFD DUP6 DUP13 DUP12 PUSH2 0x2ACB JUMP JUMPDEST PUSH2 0xE06 SWAP1 PUSH2 0x2ADB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x6E81221C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP6 DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP2 DUP6 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP4 AND PUSH1 0x64 DUP3 ADD MSTORE SWAP2 AND DUP2 PUSH1 0x84 DUP2 DUP13 GAS SWAP5 PUSH1 0x20 SWAP6 CALL SWAP1 DUP2 ISZERO PUSH2 0xED1 JUMPI DUP10 SWAP2 PUSH2 0xE99 JUMPI JUMPDEST POP SWAP1 PUSH1 0x1 SWAP2 PUSH2 0xE8B DUP3 DUP14 PUSH2 0x2A29 JUMP JUMPDEST MSTORE ADD SWAP11 POP SWAP9 SWAP7 SWAP6 SWAP8 SWAP9 PUSH2 0xB6A JUMP JUMPDEST SWAP2 SWAP9 POP POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xEC9 JUMPI JUMPDEST DUP2 PUSH2 0xEB6 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x27E3 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x6F8 JUMPI MLOAD DUP12 SWAP8 SWAP1 PUSH1 0x1 PUSH2 0xE7C JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xEA9 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP12 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP POP POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xF19 JUMPI JUMPDEST DUP2 PUSH2 0xEF8 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x27E3 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xF15 JUMPI DUP3 DUP5 DUP15 PUSH2 0xF0F PUSH2 0xDC7 SWAP5 PUSH2 0x2982 JUMP JUMPDEST POP PUSH2 0xDBD JUMP JUMPDEST DUP10 DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xEEB JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP13 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP5 POP POP POP POP POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xF92 JUMPI JUMPDEST DUP2 PUSH2 0xF4B PUSH1 0x20 SWAP4 DUP4 PUSH2 0x27E3 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xF8E JUMPI DUP9 PUSH1 0x20 PUSH2 0xDAA PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP16 SWAP5 PUSH2 0xC00 DUP8 DUP10 PUSH2 0xF81 PUSH2 0xD46 SWAP5 PUSH2 0x28FC JUMP JUMPDEST SWAP9 SWAP5 POP SWAP5 POP SWAP5 POP POP PUSH2 0xD1D JUMP JUMPDEST DUP9 DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xF3E JUMP JUMPDEST SWAP5 POP POP POP POP POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1009 JUMPI JUMPDEST DUP2 PUSH2 0xFB9 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x27E3 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xF8E JUMPI PUSH1 0x20 DUP11 DUP14 PUSH2 0xCAC PUSH2 0xC00 DUP7 PUSH2 0xCA5 DUP16 DUP3 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0xC00 SWAP4 PUSH2 0xFF7 PUSH2 0xD06 SWAP14 PUSH2 0x2982 JUMP JUMPDEST POP SWAP8 POP POP SWAP7 SWAP9 POP POP POP POP SWAP4 SWAP6 POP PUSH2 0xC70 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xFAC JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E70757420617272617973206C656E677468206D69736D6174636800000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP DUP4 DUP4 EQ PUSH2 0xB11 JUMP JUMPDEST POP DUP3 DUP7 EQ PUSH2 0xB0B JUMP JUMPDEST DUP8 DUP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x3E9 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x3E9 JUMPI PUSH2 0x10C1 PUSH2 0x2766 JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP1 DUP2 SLOAD PUSH1 0xFF DUP2 PUSH1 0x40 SHR AND ISZERO SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND DUP1 ISZERO SWAP1 DUP2 PUSH2 0x1275 JUMPI JUMPDEST PUSH1 0x1 EQ SWAP1 DUP2 PUSH2 0x126B JUMPI JUMPDEST ISZERO SWAP1 DUP2 PUSH2 0x1262 JUMPI JUMPDEST POP PUSH2 0x1238 JUMPI DUP2 DUP4 PUSH1 0x1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP6 AND OR DUP7 SSTORE PUSH2 0x1203 JUMPI JUMPDEST POP PUSH2 0x1166 PUSH2 0x2C2D JUMP JUMPDEST PUSH2 0x116E PUSH2 0x2C2D JUMP JUMPDEST PUSH2 0x1176 PUSH2 0x2C2D JUMP JUMPDEST PUSH2 0x117F CALLER PUSH2 0x2AFC JUMP JUMPDEST AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP5 SLOAD AND OR DUP4 SSTORE PUSH2 0x11AF JUMPI POP DUP1 RETURN JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFF DUP2 SLOAD AND SWAP1 SSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000 AND PUSH9 0x10000000000000001 OR DUP5 SSTORE PUSH0 PUSH2 0x115D JUMP JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST SWAP1 POP ISZERO PUSH0 PUSH2 0x1114 JUMP JUMPDEST ADDRESS EXTCODESIZE ISZERO SWAP2 POP PUSH2 0x110C JUMP JUMPDEST DUP5 SWAP2 POP PUSH2 0x1102 JUMP JUMPDEST POP CALLVALUE PUSH2 0x3E9 JUMPI PUSH1 0x20 DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0xA5F JUMPI PUSH2 0x12B6 PUSH2 0x2766 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 DUP1 DUP5 PUSH1 0x24 DUP2 DUP4 SLOAD AND SWAP5 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP4 DUP5 SWAP3 PUSH32 0xB4340E6A00000000000000000000000000000000000000000000000000000000 DUP5 MSTORE AND PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x136F JUMPI DUP2 SWAP3 PUSH2 0x1353 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP3 DUP1 DUP5 ADD SWAP1 DUP1 DUP6 MSTORE DUP4 MLOAD DUP1 SWAP3 MSTORE DUP1 PUSH1 0x40 DUP7 ADD SWAP5 ADD SWAP3 JUMPDEST DUP3 DUP2 LT PUSH2 0x133D JUMPI DUP6 DUP6 SUB DUP7 RETURN JUMPDEST DUP4 MLOAD DUP8 AND DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x1330 JUMP JUMPDEST PUSH2 0x1368 SWAP2 SWAP3 POP RETURNDATASIZE DUP1 DUP5 DUP4 RETURNDATACOPY PUSH2 0x2EB DUP2 DUP4 PUSH2 0x27E3 JUMP JUMPDEST SWAP1 PUSH0 PUSH2 0x1316 JUMP JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x3E9 JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x3E9 JUMPI PUSH1 0x40 MLOAD PUSH1 0x40 DUP2 ADD SWAP1 DUP1 DUP3 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT OR PUSH2 0x143E JUMPI PUSH1 0x40 SWAP2 DUP3 MSTORE PUSH1 0x5 DUP2 MSTORE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F PUSH1 0x20 DUP4 ADD PUSH32 0x352E302E30000000000000000000000000000000000000000000000000000000 DUP2 MSTORE DUP5 MLOAD SWAP6 DUP7 SWAP5 PUSH1 0x20 DUP7 MSTORE MLOAD DUP1 SWAP3 DUP2 PUSH1 0x20 DUP9 ADD MSTORE DUP8 DUP8 ADD MCOPY DUP6 DUP3 DUP7 ADD ADD MSTORE ADD AND DUP2 ADD SUB ADD SWAP1 RETURN JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP CALLVALUE PUSH2 0x3E9 JUMPI PUSH1 0x40 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x3E9 JUMPI PUSH2 0x14A3 PUSH2 0x2766 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF SWAP2 DUP3 DUP2 AND DUP1 SWAP2 SUB PUSH2 0x347 JUMPI PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 DUP1 SLOAD SWAP4 DUP3 PUSH1 0xFF DUP7 PUSH1 0x40 SHR AND SWAP2 DUP3 ISZERO PUSH2 0x15B4 JUMPI JUMPDEST POP POP PUSH2 0x1238 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFF PUSH9 0x10000000000000000 DUP4 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000 PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x20 SWAP9 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 PUSH0 SLOAD AND OR PUSH0 SSTORE AND OR OR AND SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST DUP7 AND LT ISZERO SWAP1 POP DUP3 PUSH0 PUSH2 0x14EF JUMP JUMPDEST POP CALLVALUE PUSH2 0x3E9 JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x3E9 JUMPI PUSH1 0x20 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x3E9 JUMPI PUSH1 0x24 PUSH2 0x1643 CALLDATASIZE PUSH2 0x285E JUMP JUMPDEST PUSH2 0x1652 DUP3 SWAP6 SWAP5 SWAP4 SWAP3 ISZERO ISZERO PUSH2 0x291D JUMP JUMPDEST DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 SLOAD AND PUSH1 0x40 MLOAD SWAP6 DUP7 DUP1 SWAP3 PUSH32 0xB4340E6A00000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP9 AND PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL SWAP4 DUP5 ISZERO PUSH2 0x2C8 JUMPI DUP7 SWAP5 PUSH2 0x1CAA JUMPI JUMPDEST POP SWAP1 SWAP4 SWAP2 DUP6 SWAP1 DUP2 SWAP1 DUP2 JUMPDEST DUP7 MLOAD DUP5 LT ISZERO PUSH2 0x1A04 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x16F3 DUP6 DUP10 PUSH2 0x2A29 JUMP JUMPDEST MLOAD AND SWAP8 PUSH1 0x40 MLOAD SWAP6 PUSH32 0x89AB353200000000000000000000000000000000000000000000000000000000 DUP8 MSTORE DUP11 DUP8 PUSH1 0x4 DUP2 DUP14 GAS STATICCALL SWAP7 DUP8 ISZERO PUSH2 0x19F9 JUMPI DUP12 SWAP8 PUSH2 0x192A JUMPI JUMPDEST POP PUSH1 0x4 SWAP5 SWAP6 SWAP7 SWAP8 DUP12 DUP12 PUSH1 0x40 MLOAD SWAP8 DUP9 DUP1 SWAP3 PUSH32 0x36BF6E3900000000000000000000000000000000000000000000000000000000 DUP3 MSTORE GAS STATICCALL SWAP6 DUP7 ISZERO PUSH2 0x191F JUMPI DUP13 SWAP7 PUSH2 0x18D8 JUMPI JUMPDEST POP DUP12 JUMPDEST DUP13 DUP11 MLOAD DUP3 LT ISZERO PUSH2 0x18C4 JUMPI PUSH1 0x24 PUSH1 0x40 DUP15 DUP2 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH32 0xD14EF46D00000000000000000000000000000000000000000000000000000000 DUP3 MSTORE DUP8 PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x18B8 JUMPI SWAP2 PUSH2 0x1850 JUMPI JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP9 AND SWAP2 MLOAD AND EQ PUSH2 0x17F0 JUMPI JUMPDEST PUSH1 0x1 ADD PUSH2 0x1779 JUMP JUMPDEST PUSH2 0x17FA DUP2 DUP9 PUSH2 0x2A29 JUMP JUMPDEST MLOAD PUSH2 0x1805 DUP3 DUP13 PUSH2 0x2A29 JUMP JUMPDEST MLOAD ISZERO ISZERO DUP1 PUSH2 0x1847 JUMPI JUMPDEST PUSH2 0x1819 JUMPI JUMPDEST POP PUSH2 0x17E8 JUMP JUMPDEST SWAP8 POP SWAP4 POP PUSH1 0x1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x183E DUP11 DUP14 PUSH2 0x2A29 JUMP JUMPDEST MLOAD AND SWAP5 SWAP1 PUSH2 0x1813 JUMP JUMPDEST POP DUP9 DUP2 GT PUSH2 0x180E JUMP JUMPDEST SWAP1 POP PUSH1 0x40 DUP2 RETURNDATASIZE PUSH1 0x40 GT PUSH2 0x18B0 JUMPI JUMPDEST DUP2 PUSH2 0x186B PUSH1 0x40 SWAP4 DUP4 PUSH2 0x27E3 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x18AC JUMPI PUSH1 0x40 MLOAD SWAP1 PUSH1 0x40 DUP3 ADD DUP3 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x143E JUMPI PUSH1 0x40 MSTORE PUSH2 0x189A DUP2 PUSH2 0x28FC JUMP JUMPDEST DUP3 MSTORE PUSH1 0x20 DUP1 SWAP2 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH0 PUSH2 0x17C6 JUMP JUMPDEST DUP14 DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x185E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP SWAP3 SWAP11 POP SWAP8 POP SWAP6 PUSH1 0x1 ADD SWAP5 SWAP4 POP PUSH2 0x16CB SWAP1 POP JUMP JUMPDEST SWAP1 SWAP6 POP RETURNDATASIZE DUP1 DUP14 DUP4 RETURNDATACOPY PUSH2 0x18EA DUP2 DUP4 PUSH2 0x27E3 JUMP JUMPDEST DUP2 ADD PUSH1 0x40 DUP3 DUP3 SUB SLT PUSH2 0x191B JUMPI PUSH1 0x20 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x18AC JUMPI PUSH2 0x1914 SWAP3 ADD PUSH2 0x2A6A JUMP JUMPDEST SWAP5 PUSH0 PUSH2 0x1776 JUMP JUMPDEST DUP13 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP15 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP5 SWAP6 SWAP7 POP RETURNDATASIZE SWAP5 DUP6 DUP13 DUP3 RETURNDATACOPY PUSH2 0x193E DUP7 DUP3 PUSH2 0x27E3 JUMP JUMPDEST PUSH1 0x40 DUP2 DUP8 DUP2 ADD SUB SLT PUSH2 0x19F5 JUMPI DUP1 MLOAD SWAP6 PUSH8 0xFFFFFFFFFFFFFFFF SWAP7 DUP8 DUP2 GT PUSH2 0x18AC JUMPI DUP3 ADD SWAP2 DUP2 DUP2 ADD PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x18AC JUMPI DUP3 MLOAD SWAP3 PUSH1 0x20 SWAP1 PUSH2 0x197D DUP6 PUSH2 0x298F JUMP JUMPDEST SWAP5 PUSH2 0x198B PUSH1 0x40 MLOAD SWAP7 DUP8 PUSH2 0x27E3 JUMP JUMPDEST DUP1 DUP7 MSTORE DUP3 DUP1 DUP8 ADD SWAP2 PUSH1 0x5 SHL DUP4 ADD ADD SWAP2 DUP6 DUP6 ADD DUP4 GT PUSH2 0x19EF JUMPI DUP4 DUP1 SWAP2 ADD SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x19D7 JUMPI POP POP POP POP DUP2 ADD MLOAD SWAP8 DUP9 GT PUSH2 0x18AC JUMPI PUSH1 0x4 SWAP8 PUSH2 0x19CE SWAP3 DUP3 ADD SWAP2 ADD PUSH2 0x2A6A JUMP JUMPDEST POP SWAP7 SWAP6 SWAP5 PUSH2 0x1733 JUMP JUMPDEST DUP2 SWAP1 PUSH2 0x19E2 DUP5 PUSH2 0x2982 JUMP JUMPDEST DUP2 MSTORE ADD SWAP2 ADD SWAP1 DUP4 SWAP1 PUSH2 0x19A9 JUMP JUMPDEST POP POP DUP16 DUP1 REVERT JUMPDEST DUP12 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP14 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP9 DUP7 DUP7 SWAP3 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND ISZERO PUSH2 0x1C4C JUMPI PUSH1 0x40 MLOAD PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x20 DUP2 PUSH1 0x64 DUP2 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP13 AND GAS CALL DUP1 ISZERO PUSH2 0x665 JUMPI PUSH2 0x1C13 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD PUSH32 0x95EA7B300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x20 DUP2 DUP1 PUSH1 0x44 DUP2 ADD SUB DUP2 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP13 AND GAS CALL DUP1 ISZERO PUSH2 0x665 JUMPI PUSH2 0x1BBB JUMPI JUMPDEST POP PUSH1 0x40 MLOAD PUSH32 0x6E81221C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP7 DUP8 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP1 DUP7 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP3 DUP5 AND PUSH1 0x64 DUP3 ADD MSTORE SWAP3 SWAP1 SWAP2 PUSH1 0x20 SWAP2 DUP5 SWAP2 PUSH1 0x84 SWAP2 DUP4 SWAP2 DUP7 SWAP2 AND GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x18B8 JUMPI SWAP1 PUSH2 0x1B88 JUMPI JUMPDEST PUSH1 0x20 SWAP1 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1BB3 JUMPI JUMPDEST DUP2 PUSH2 0x1BA2 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x27E3 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x6F8 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH2 0x1B7D JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x1B95 JUMP JUMPDEST PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1C0B JUMPI JUMPDEST DUP2 PUSH2 0x1BD4 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x27E3 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x343 JUMPI SWAP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 SWAP7 SWAP8 PUSH2 0x1C00 PUSH1 0x20 SWAP8 PUSH2 0x2982 JUMP JUMPDEST POP SWAP8 SWAP7 SWAP6 POP POP PUSH2 0x1B02 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x1BC7 JUMP JUMPDEST PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1C44 JUMPI JUMPDEST DUP2 PUSH2 0x1C2C PUSH1 0x20 SWAP4 DUP4 PUSH2 0x27E3 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x343 JUMPI PUSH2 0x1C3D SWAP1 PUSH2 0x2982 JUMP JUMPDEST POP DUP7 PUSH2 0x1A89 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x1C1F JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F207375697461626C6520706F6F6C20666F756E6400000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH2 0x1CBF SWAP2 SWAP5 POP RETURNDATASIZE DUP1 DUP9 DUP4 RETURNDATACOPY PUSH2 0x2EB DUP2 DUP4 PUSH2 0x27E3 JUMP JUMPDEST SWAP3 PUSH0 PUSH2 0x16C1 JUMP JUMPDEST POP CALLVALUE PUSH2 0x3E9 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x3E9 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x1D13 PUSH2 0x2766 JUMP JUMPDEST PUSH2 0x1D1B PUSH2 0x2BBD JUMP JUMPDEST AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 PUSH0 SLOAD AND OR PUSH0 SSTORE DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x3E9 JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x3E9 JUMPI PUSH2 0x1D7D PUSH2 0x2BBD JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 DUP1 SLOAD SWAP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP3 AND SWAP1 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x3E9 JUMPI PUSH2 0x1E13 CALLDATASIZE PUSH2 0x285E JUMP JUMPDEST SWAP2 PUSH2 0x1E22 DUP3 SWAP6 SWAP5 SWAP6 ISZERO ISZERO PUSH2 0x291D JUMP JUMPDEST DUP4 SLOAD PUSH1 0x40 MLOAD PUSH32 0x2D5E94A700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP4 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x20 SWAP8 SWAP2 SWAP4 SWAP3 SWAP1 SWAP2 SWAP1 DUP9 SWAP1 DUP6 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 DUP7 AND GAS STATICCALL SWAP4 DUP5 ISZERO PUSH2 0x703 JUMPI DUP8 SWAP5 PUSH2 0x2072 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP7 SWAP1 MSTORE DUP3 DUP3 AND SWAP1 DUP10 DUP2 PUSH1 0x64 DUP2 DUP13 DUP7 GAS CALL DUP1 ISZERO PUSH2 0xED1 JUMPI PUSH2 0x203E JUMPI JUMPDEST POP PUSH1 0x40 MLOAD PUSH32 0x95EA7B300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP8 SWAP1 MSTORE SWAP1 DUP10 SWAP1 DUP3 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 DUP13 SWAP1 GAS CALL DUP1 ISZERO PUSH2 0x9C8 JUMPI SWAP2 DUP10 SWAP7 SWAP6 SWAP5 SWAP4 SWAP2 DUP10 SWAP4 PUSH2 0x1FFC JUMPI JUMPDEST POP PUSH1 0x40 MLOAD PUSH32 0x6E81221C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP4 DUP2 AND PUSH1 0x24 DUP6 ADD MSTORE PUSH1 0x44 DUP5 ADD SWAP6 SWAP1 SWAP6 MSTORE SWAP6 SWAP1 SWAP4 AND PUSH1 0x64 DUP3 ADD MSTORE SWAP4 DUP5 SWAP3 PUSH1 0x84 SWAP3 DUP5 SWAP3 AND GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x18B8 JUMPI SWAP2 PUSH2 0x1FCF JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 POP DUP2 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x1FF5 JUMPI JUMPDEST PUSH2 0x1FE6 DUP2 DUP4 PUSH2 0x27E3 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x6F8 JUMPI MLOAD PUSH0 PUSH2 0x1FC6 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1FDC JUMP JUMPDEST DUP8 DUP2 SWAP4 SWAP6 SWAP7 SWAP8 SWAP9 SWAP3 SWAP5 POP RETURNDATASIZE DUP4 GT PUSH2 0x2037 JUMPI JUMPDEST PUSH2 0x2018 DUP2 DUP4 PUSH2 0x27E3 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1081 JUMPI SWAP2 DUP8 SWAP2 PUSH2 0x2030 DUP11 SWAP8 SWAP7 SWAP6 SWAP5 PUSH2 0x2982 JUMP JUMPDEST POP PUSH0 PUSH2 0x1F51 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x200E JUMP JUMPDEST DUP10 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x206B JUMPI JUMPDEST PUSH2 0x2053 DUP2 DUP4 PUSH2 0x27E3 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xF8E JUMPI PUSH2 0x2064 SWAP1 PUSH2 0x2982 JUMP JUMPDEST POP PUSH0 PUSH2 0x1EE5 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x2049 JUMP JUMPDEST SWAP1 SWAP4 POP DUP8 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x20A2 JUMPI JUMPDEST PUSH2 0x208A DUP2 DUP4 PUSH2 0x27E3 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x9BD JUMPI PUSH2 0x209B SWAP1 PUSH2 0x28FC JUMP JUMPDEST SWAP3 PUSH0 PUSH2 0x1E93 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x2080 JUMP JUMPDEST POP CALLVALUE PUSH2 0x6F8 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x6F8 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x20F6 PUSH2 0x2766 JUMP JUMPDEST AND DUP1 EXTCODESIZE ISZERO PUSH2 0x6F8 JUMPI PUSH0 DUP1 SWAP2 PUSH1 0x24 PUSH1 0x40 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH32 0x5568081A00000000000000000000000000000000000000000000000000000000 DUP4 MSTORE CALLER PUSH1 0x4 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x214F JUMPI PUSH2 0x2143 JUMPI POP DUP1 RETURN JUMPDEST PUSH2 0x214D SWAP2 POP PUSH2 0x27CF JUMP JUMPDEST STOP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x6F8 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x6F8 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND ADDRESS SUB PUSH2 0x21EF JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP2 MSTORE RETURN JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST PUSH1 0x40 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x6F8 JUMPI PUSH2 0x224B PUSH2 0x2766 JUMP JUMPDEST PUSH1 0x24 SWAP1 DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x6F8 JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x6F8 JUMPI DUP1 PUSH1 0x4 ADD CALLDATALOAD PUSH2 0x2278 DUP2 PUSH2 0x2824 JUMP JUMPDEST SWAP3 PUSH2 0x2286 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x27E3 JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 SWAP2 DUP3 DUP6 ADD SWAP4 CALLDATASIZE DUP8 DUP4 DUP4 ADD ADD GT PUSH2 0x6F8 JUMPI DUP2 PUSH0 SWAP3 DUP9 DUP7 SWAP4 ADD DUP8 CALLDATACOPY DUP7 ADD ADD MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 PUSH32 0x0 AND DUP1 ADDRESS EQ SWAP1 DUP2 ISZERO PUSH2 0x24F5 JUMPI JUMPDEST POP PUSH2 0x21EF JUMPI PUSH2 0x22F8 PUSH2 0x2BBD JUMP JUMPDEST DUP2 AND SWAP4 PUSH1 0x40 MLOAD PUSH32 0x52D1902D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE DUP4 DUP2 PUSH1 0x4 DUP2 DUP10 GAS STATICCALL PUSH0 SWAP2 DUP2 PUSH2 0x24C6 JUMPI JUMPDEST POP PUSH2 0x2366 JUMPI DUP7 DUP7 PUSH1 0x40 MLOAD SWAP1 PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST DUP6 SWAP1 DUP8 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SWAP2 DUP3 DUP2 SUB PUSH2 0x2498 JUMPI POP DUP5 EXTCODESIZE ISZERO PUSH2 0x2469 JUMPI POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH0 DUP1 LOG2 DUP2 MLOAD ISZERO PUSH2 0x2435 JUMPI POP PUSH0 PUSH2 0x214D SWAP5 DUP2 SWAP3 MLOAD SWAP1 DUP5 GAS DELEGATECALL SWAP1 RETURNDATASIZE ISZERO PUSH2 0x242C JUMPI RETURNDATASIZE PUSH2 0x2410 DUP2 PUSH2 0x2824 JUMP JUMPDEST SWAP1 PUSH2 0x241E PUSH1 0x40 MLOAD SWAP3 DUP4 PUSH2 0x27E3 JUMP JUMPDEST DUP2 MSTORE PUSH0 DUP2 SWAP5 RETURNDATASIZE SWAP3 ADD RETURNDATACOPY PUSH2 0x2C86 JUMP JUMPDEST PUSH1 0x60 SWAP3 POP PUSH2 0x2C86 JUMP JUMPDEST SWAP4 POP POP POP POP CALLVALUE PUSH2 0x2441 JUMPI STOP JUMPDEST DUP1 PUSH32 0xB398979F00000000000000000000000000000000000000000000000000000000 PUSH1 0x4 SWAP3 MSTORE REVERT JUMPDEST DUP3 PUSH1 0x40 MLOAD SWAP1 PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH32 0xAA1D49A400000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 SWAP2 POP DUP5 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x24EE JUMPI JUMPDEST PUSH2 0x24DE DUP2 DUP4 PUSH2 0x27E3 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x6F8 JUMPI MLOAD SWAP1 DUP9 PUSH2 0x2331 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x24D4 JUMP JUMPDEST SWAP1 POP DUP2 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD AND EQ ISZERO DUP8 PUSH2 0x22EB JUMP JUMPDEST CALLVALUE PUSH2 0x6F8 JUMPI PUSH1 0x60 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x6F8 JUMPI PUSH2 0x255A PUSH2 0x2766 JUMP JUMPDEST PUSH2 0x2562 PUSH2 0x2789 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x40 MLOAD PUSH32 0x2D5E94A700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP4 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x20 SWAP5 SWAP2 SWAP3 DUP6 SWAP1 DUP5 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 DUP6 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x214F JUMPI DUP6 SWAP4 PUSH0 SWAP3 PUSH2 0x2678 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD PUSH32 0x4AA0665200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP4 DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP5 SWAP1 SWAP3 AND PUSH1 0x24 DUP6 ADD MSTORE PUSH1 0x44 DUP1 CALLDATALOAD SWAP1 DUP6 ADD MSTORE DUP4 SWAP2 DUP3 SWAP1 DUP2 PUSH1 0x64 DUP2 ADD JUMPDEST SUB SWAP3 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x214F JUMPI PUSH0 SWAP2 PUSH2 0x264B JUMPI POP PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 POP DUP2 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x2671 JUMPI JUMPDEST PUSH2 0x2662 DUP2 DUP4 PUSH2 0x27E3 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x6F8 JUMPI MLOAD DUP3 PUSH2 0x1FC6 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x2658 JUMP JUMPDEST DUP5 DUP2 SWAP6 SWAP3 SWAP4 POP RETURNDATASIZE DUP4 GT PUSH2 0x26AE JUMPI JUMPDEST PUSH2 0x2690 DUP2 DUP4 PUSH2 0x27E3 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x6F8 JUMPI PUSH2 0x2630 SWAP4 PUSH2 0x26A6 DUP7 SWAP5 PUSH2 0x28FC JUMP JUMPDEST SWAP2 SWAP1 SWAP5 PUSH2 0x25D1 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x2686 JUMP JUMPDEST CALLVALUE PUSH2 0x6F8 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x6F8 JUMPI PUSH1 0x20 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH0 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x6F8 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x6F8 JUMPI PUSH1 0x20 SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SLOAD AND DUP2 MSTORE RETURN JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x6F8 JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x6F8 JUMPI JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x6F8 JUMPI JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x143E JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x143E JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x143E JUMPI PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC PUSH1 0x80 SWAP2 ADD SLT PUSH2 0x6F8 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 PUSH1 0x4 CALLDATALOAD DUP3 DUP2 AND DUP2 SUB PUSH2 0x6F8 JUMPI SWAP2 PUSH1 0x24 CALLDATALOAD DUP2 DUP2 AND DUP2 SUB PUSH2 0x6F8 JUMPI SWAP2 PUSH1 0x44 CALLDATALOAD SWAP2 PUSH1 0x64 CALLDATALOAD SWAP1 DUP2 AND DUP2 SUB PUSH2 0x6F8 JUMPI SWAP1 JUMP JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x6F8 JUMPI DUP3 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x6F8 JUMPI PUSH1 0x20 DUP1 DUP6 ADD SWAP5 DUP5 PUSH1 0x5 SHL ADD ADD GT PUSH2 0x6F8 JUMPI JUMP JUMPDEST MLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x6F8 JUMPI JUMP JUMPDEST ISZERO PUSH2 0x2924 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E207A65726F PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST MLOAD SWAP1 DUP2 ISZERO ISZERO DUP3 SUB PUSH2 0x6F8 JUMPI JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x143E JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 DUP2 DUP5 SUB SLT PUSH2 0x6F8 JUMPI DUP1 MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x6F8 JUMPI ADD SWAP2 DUP1 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x6F8 JUMPI DUP3 MLOAD PUSH2 0x29DD DUP2 PUSH2 0x298F JUMP JUMPDEST SWAP4 PUSH2 0x29EB PUSH1 0x40 MLOAD SWAP6 DUP7 PUSH2 0x27E3 JUMP JUMPDEST DUP2 DUP6 MSTORE DUP4 DUP1 DUP7 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x6F8 JUMPI DUP4 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x2A12 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 DUP1 SWAP2 PUSH2 0x2A1E DUP5 PUSH2 0x28FC JUMP JUMPDEST DUP2 MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0x2A04 JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x2A3D JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x6F8 JUMPI DUP2 MLOAD SWAP1 PUSH1 0x20 SWAP2 PUSH2 0x2A85 DUP2 PUSH2 0x298F JUMP JUMPDEST SWAP4 PUSH2 0x2A93 PUSH1 0x40 MLOAD SWAP6 DUP7 PUSH2 0x27E3 JUMP JUMPDEST DUP2 DUP6 MSTORE PUSH1 0x20 DUP1 DUP7 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x6F8 JUMPI PUSH1 0x20 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x2ABC JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP2 MLOAD DUP2 MSTORE SWAP1 DUP4 ADD SWAP1 DUP4 ADD PUSH2 0x2AAE JUMP JUMPDEST SWAP2 SWAP1 DUP2 LT ISZERO PUSH2 0x2A3D JUMPI PUSH1 0x5 SHL ADD SWAP1 JUMP JUMPDEST CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 SUB PUSH2 0x6F8 JUMPI SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP2 AND SWAP1 DUP2 ISZERO PUSH2 0x2B8D JUMPI PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 DUP1 SLOAD SWAP1 DUP4 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP4 AND OR SWAP1 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH0 DUP1 LOG3 JUMP JUMPDEST PUSH1 0x24 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD AND CALLER SUB PUSH2 0x2BFD JUMPI JUMP JUMPDEST PUSH1 0x24 PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0xFF PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SLOAD PUSH1 0x40 SHR AND ISZERO PUSH2 0x2C5C JUMPI JUMP JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0xD7E6BCF800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST SWAP1 PUSH2 0x2CC5 JUMPI POP DUP1 MLOAD ISZERO PUSH2 0x2C9B JUMPI DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP2 MLOAD ISZERO DUP1 PUSH2 0x2D1D JUMPI JUMPDEST PUSH2 0x2CD6 JUMPI POP SWAP1 JUMP JUMPDEST PUSH1 0x24 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x40 MLOAD SWAP2 PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP4 MSTORE AND PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST POP DUP1 EXTCODESIZE ISZERO PUSH2 0x2CCE JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH0 JUMPDEST AND MSTORE PUSH8 0x37D6F82F2BCDDCDD SELFBALANCE 0xE5 PUSH30 0xDD2D559420000AE02510437AFCB8C56364736F6C63430008190033000000 ","sourceMap":"2066:9096:17:-:0;;;;;;;1171:4:2;1163:13;;2066:9096:17;;;;;;1163:13:2;2066:9096:17;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":10086,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_address_18327":{"entryPoint":10121,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_address_18341":{"entryPoint":10156,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_address_fromMemory":{"entryPoint":10492,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_addresst_addresst_uint256t_address":{"entryPoint":10334,"id":null,"parameterSlots":1,"returnSlots":4},"abi_decode_array_address_dyn_calldata":{"entryPoint":10443,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_array_address_dyn_fromMemory":{"entryPoint":10663,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_array_uint256_dyn_fromMemory":{"entryPoint":10858,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_bool_fromMemory":{"entryPoint":10626,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_address_address":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_address_address_uint256":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_address_address_uint256_address":{"entryPoint":null,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_address_uint256":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"array_allocation_size_array_address_dyn":{"entryPoint":10639,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_bytes":{"entryPoint":10276,"id":null,"parameterSlots":1,"returnSlots":1},"calldata_array_index_access_uint256_dyn_calldata":{"entryPoint":10955,"id":null,"parameterSlots":3,"returnSlots":1},"finalize_allocation":{"entryPoint":10211,"id":null,"parameterSlots":2,"returnSlots":0},"finalize_allocation_18330":{"entryPoint":10191,"id":null,"parameterSlots":1,"returnSlots":0},"fun_checkInitializing":{"entryPoint":11309,"id":370,"parameterSlots":0,"returnSlots":0},"fun_checkOwner":{"entryPoint":11197,"id":122,"parameterSlots":0,"returnSlots":0},"fun_transferOwnership_inner":{"entryPoint":11004,"id":null,"parameterSlots":1,"returnSlots":0},"fun_verifyCallResultFromTarget":{"entryPoint":11398,"id":1967,"parameterSlots":3,"returnSlots":1},"memory_array_index_access_address_dyn":{"entryPoint":10793,"id":null,"parameterSlots":2,"returnSlots":1},"read_from_calldatat_address":{"entryPoint":10971,"id":null,"parameterSlots":1,"returnSlots":1},"require_helper_stringliteral_335f":{"entryPoint":10525,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[],"immutableReferences":{"468":[{"length":32,"start":8607},{"length":32,"start":8896}]},"linkReferences":{},"object":"6080806040526004361015610012575f80fd5b5f905f3560e01c9081630d8e6e2c14612705575080634219dc40146126b55780634aa06652146125235780634f1ef2861461221957806352d1902d1461215a5780635568081a146120a95780636e81221c14611e04578063715018a614611d4657806372591be514611cc65780637442eca6146116325780638da5cb5b146115c15780638f2248bc1461146b578063ad3cb1cc1461137c578063ae3cce1c1461127d578063c4d66de814611089578063e74e9b0614610a63578063ec0cd2eb14610846578063f2fde38b146107fb578063f31abcc4146103ec5763fe110116146100fa575f80fd5b346103e957807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103e95773ffffffffffffffffffffffffffffffffffffffff8082541660405180917f89345efb00000000000000000000000000000000000000000000000000000000825233600483015281602460209485935afa9081156102f95784916103b4575b5015610356578290604051927f0902f1ac0000000000000000000000000000000000000000000000000000000084528284600481335afa93841561034b578394610304575b506040517f67e4ac2c0000000000000000000000000000000000000000000000000000000081528381600481335afa9081156102f95784916102d7575b50835b81518110156102d357808461027685610226899587612a29565b5116610232848b612a29565b516040517fa9059cbb000000000000000000000000000000000000000000000000000000008152336004820152602481019190915294859283919082906044820190565b03925af180156102c85761028f575b600191500161020c565b8482813d83116102c1575b6102a481836127e3565b810103126102bd576102b7600192612982565b50610285565b8580fd5b503d61029a565b6040513d88823e3d90fd5b8480f35b6102f391503d8086833e6102eb81836127e3565b8101906129a7565b5f610209565b6040513d86823e3d90fd5b9093503d8084833e61031681836127e3565b8101828282031261034757815167ffffffffffffffff81116103435761033c9201612a6a565b925f6101cc565b8480fd5b8380fd5b6040513d85823e3d90fd5b606490604051907f08c379a00000000000000000000000000000000000000000000000000000000082526004820152600a60248201527f4f6e6c7920506f6f6c73000000000000000000000000000000000000000000006044820152fd5b90508181813d83116103e2575b6103cb81836127e3565b81010312610347576103dc90612982565b5f610187565b503d6103c1565b80fd5b50346103e95760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103e95760043590610428612789565b916104316127ac565b811561079d576040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815233600482015230602482015260209473ffffffffffffffffffffffffffffffffffffffff8082169490929091908781604481895afa90811561070357908391889161076c575b501061070e576040517f70a082310000000000000000000000000000000000000000000000000000000081523360048201528781602481895afa9081156107035790839188916106ce575b5010610670576040517f23b872dd00000000000000000000000000000000000000000000000000000000815233600482015273ffffffffffffffffffffffffffffffffffffffff9190911660248201526044810191909152858160648188885af1908115610665578591610630575b50156105d257839450823b156105cd57602484928360405195869485937f89afcb440000000000000000000000000000000000000000000000000000000085521660048401525af180156105c2576105b25750f35b6105bb906127cf565b6103e95780f35b6040513d84823e3d90fd5b505050fd5b606485604051907f08c379a00000000000000000000000000000000000000000000000000000000082526004820152600f60248201527f5472616e73666572206661696c656400000000000000000000000000000000006044820152fd5b90508581813d831161065e575b61064781836127e3565b810103126103435761065890612982565b5f61055d565b503d61063d565b6040513d87823e3d90fd5b606487604051907f08c379a00000000000000000000000000000000000000000000000000000000082526004820152601460248201527f496e73756666696369656e742062616c616e63650000000000000000000000006044820152fd5b809250898092503d83116106fc575b6106e781836127e3565b810103126106f8578290515f6104ee565b5f80fd5b503d6106dd565b6040513d89823e3d90fd5b606487604051907f08c379a00000000000000000000000000000000000000000000000000000000082526004820152601660248201527f496e73756666696369656e7420616c6c6f77616e6365000000000000000000006044820152fd5b809250898092503d8311610796575b61078581836127e3565b810103126106f8578290515f6104a3565b503d61077b565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5368617265206d7573742062652067726561746572207468616e207a65726f006044820152fd5b50346103e95760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103e957610843610836612766565b61083e612bbd565b612afc565b80f35b50346103e95760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103e95760043567ffffffffffffffff8111610a5f576108969036906004016128cb565b90916108a0612789565b916108a96127ac565b9273ffffffffffffffffffffffffffffffffffffffff809116604051907f67e4ac2c0000000000000000000000000000000000000000000000000000000082528482600481845afa918215610665578592610a43575b50845b82518110156109d357836109168285612a29565b511661097461092683888c612acb565b6040517f23b872dd00000000000000000000000000000000000000000000000000000000815233600482015230602482015290356044820152916020918291849182908c9082906064820190565b03925af180156109c85761098d575b5050600101610902565b81813d83116109c1575b6109a181836127e3565b810103126109bd57906109b5600192612982565b50905f610983565b8680fd5b503d610997565b6040513d8a823e3d90fd5b6040517f6a6278420000000000000000000000000000000000000000000000000000000081528785166004820152869060208160248185885af180156105c257610a1b575080f35b602090813d8311610a3c575b610a3181836127e3565b810103126106f85780f35b503d610a27565b610a589192503d8087833e6102eb81836127e3565b905f6108ff565b5080fd5b50346103e95760807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103e95767ffffffffffffffff60043581811161108557610ab49036906004016128cb565b909160243581811161034357610ace9036906004016128cb565b916044358181116109bd57610ae79036906004016128cb565b909160643590811161108157610b019036906004016128cb565b9285871480611078575b8061106f575b1561101157610b258799979896959861298f565b97610b33604051998a6127e3565b8989527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0610b608b61298f565b013660208b013787995b808b10610bb7578989604051918291602083016020845282518091526020604085019301915b818110610b9e575050500390f35b8251845285945060209384019390920191600101610b90565b8a896020610c5973ffffffffffffffffffffffffffffffffffffffff839f8d9f9e9c9d8188610c0092610bfb8f610c05968f91610bf392612acb565b35151561291d565b612acb565b612adb565b16610c11858b8a612acb565b6040517f23b872dd0000000000000000000000000000000000000000000000000000000081523360048201523060248201529035604482015293849283919082906064820190565b03925af1908115610ed15782848b8f938e95610f9a575b50610c0083610ca5610c00610d0698966020989673ffffffffffffffffffffffffffffffffffffffff610cac97541697612acb565b948a612acb565b6040517f2d5e94a700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9384166004820152921660248301529092839190829081906044820190565b03915afa908115610ed15782848e8c938495610f2c575b50610d46610c00602094610daa9473ffffffffffffffffffffffffffffffffffffffff94612acb565b16610d52868c8b612acb565b6040517f095ea7b300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff871660048201529035602482015293849283919082906044820190565b03925af18015610f2157848e8592610edc575b610dc79350612acb565b610dd090612adb565b90610ddc838c87612acb565b610de590612adb565b610df0848a89612acb565b3590610dfd858c8b612acb565b610e0690612adb565b6040517f6e81221c00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff95861660048201529185166024830152604482019290925290831660648201529116816084818c5a94602095f1908115610ed1578991610e99575b5090600191610e8b828d612a29565b52019a509896959798610b6a565b919850506020813d602011610ec9575b81610eb6602093836127e3565b810103126106f857518b97906001610e7c565b3d9150610ea9565b6040513d8b823e3d90fd5b5050506020813d602011610f19575b81610ef8602093836127e3565b81010312610f155782848e610f0f610dc794612982565b50610dbd565b8980fd5b3d9150610eeb565b6040513d8c823e3d90fd5b9450505050506020813d602011610f92575b81610f4b602093836127e3565b81010312610f8e57886020610daa73ffffffffffffffffffffffffffffffffffffffff8f94610c008789610f81610d46946128fc565b9894509450945050610d1d565b8880fd5b3d9150610f3e565b9450505050506020813d602011611009575b81610fb9602093836127e3565b81010312610f8e5760208a8d610cac610c0086610ca58f828b73ffffffffffffffffffffffffffffffffffffffff610c0093610ff7610d069d612982565b50975050969850505050939550610c70565b3d9150610fac565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f496e70757420617272617973206c656e677468206d69736d61746368000000006044820152fd5b50838314610b11565b50828614610b0b565b8780fd5b8280fd5b50346103e95760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103e9576110c1612766565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0090815460ff8160401c16159167ffffffffffffffff821680159081611275575b600114908161126b575b159081611262575b5061123857818360017fffffffffffffffffffffffffffffffffffffffffffffffff000000000000000073ffffffffffffffffffffffffffffffffffffffff9516178655611203575b50611166612c2d565b61116e612c2d565b611176612c2d565b61117f33612afc565b167fffffffffffffffffffffffff00000000000000000000000000000000000000008454161783556111af575080f35b7fffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff81541690557fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2602060405160018152a180f35b7fffffffffffffffffffffffffffffffffffffffffffffff00000000000000000016680100000000000000011784555f61115d565b60046040517ff92ee8a9000000000000000000000000000000000000000000000000000000008152fd5b9050155f611114565b303b15915061110c565b849150611102565b50346103e9576020807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610a5f576112b6612766565b73ffffffffffffffffffffffffffffffffffffffff9280846024818354169460405195869384927fb4340e6a0000000000000000000000000000000000000000000000000000000084521660048301525afa91821561136f578192611353575b506040519280840190808552835180925280604086019401925b82811061133d5785850386f35b8351871685529381019392810192600101611330565b6113689192503d8084833e6102eb81836127e3565b905f611316565b50604051903d90823e3d90fd5b50346103e957807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103e957604051604081019080821067ffffffffffffffff83111761143e576040918252600581527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f602083017f352e302e3000000000000000000000000000000000000000000000000000000081528451958694602086525180928160208801528787015e85828601015201168101030190f35b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b50346103e95760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103e9576114a3612766565b6024359067ffffffffffffffff91828116809103610347577ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054938260ff8660401c169182156115b4575b5050611238577fffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff68010000000000000000837fffffffffffffffffffffffffffffffffffffffffffffff0000000000000000007fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29773ffffffffffffffffffffffffffffffffffffffff602098167fffffffffffffffffffffffff00000000000000000000000000000000000000005f5416175f55161717169055604051908152a180f35b861610159050825f6114ef565b50346103e957807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103e957602073ffffffffffffffffffffffffffffffffffffffff7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c1993005416604051908152f35b50346103e95760246116433661285e565b6116528295949392151561291d565b8573ffffffffffffffffffffffffffffffffffffffff815416604051958680927fb4340e6a00000000000000000000000000000000000000000000000000000000825273ffffffffffffffffffffffffffffffffffffffff881660048301525afa9384156102c8578694611caa575b5090939185908190815b8651841015611a045773ffffffffffffffffffffffffffffffffffffffff6116f38589612a29565b511697604051957f89ab35320000000000000000000000000000000000000000000000000000000087528a876004818d5afa9687156119f9578b9761192a575b506004949596978b8b604051978880927f36bf6e390000000000000000000000000000000000000000000000000000000082525afa95861561191f578c966118d8575b508b5b8c8a518210156118c457602460408e8151928380927fd14ef46d0000000000000000000000000000000000000000000000000000000082528760048301525afa9182156118b85791611850575b5073ffffffffffffffffffffffffffffffffffffffff808816915116146117f0575b600101611779565b6117fa8188612a29565b51611805828c612a29565b51151580611847575b611819575b506117e8565b97509350600173ffffffffffffffffffffffffffffffffffffffff61183e8a8d612a29565b51169490611813565b5088811161180e565b90506040813d6040116118b0575b8161186b604093836127e3565b810103126118ac57604051906040820182811067ffffffffffffffff82111761143e5760405261189a816128fc565b8252602080910151908201525f6117c6565b8d80fd5b3d915061185e565b604051903d90823e3d90fd5b50929a509750956001019493506116cb9050565b9095503d808d833e6118ea81836127e3565b810160408282031261191b57602082015167ffffffffffffffff81116118ac576119149201612a6a565b945f611776565b8c80fd5b6040513d8e823e3d90fd5b949596503d94858c823e61193e86826127e3565b60408187810103126119f55780519567ffffffffffffffff968781116118ac57820191818101601f840112156118ac5782519260209061197d8561298f565b9461198b60405196876127e3565b808652828087019160051b8301019185850183116119ef5783809101915b8383106119d757505050508101519788116118ac576004976119ce9282019101612a6a565b50969594611733565b81906119e284612982565b81520191019083906119a9565b50508f80fd5b8b80fd5b6040513d8d823e3d90fd5b888686928a73ffffffffffffffffffffffffffffffffffffffff821615611c4c576040517f23b872dd000000000000000000000000000000000000000000000000000000008152336004820152306024820152604481018490526020816064818873ffffffffffffffffffffffffffffffffffffffff8c165af1801561066557611c13575b506040517f095ea7b300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8316600482015260248101849052602081806044810103818873ffffffffffffffffffffffffffffffffffffffff8c165af1801561066557611bbb575b506040517f6e81221c00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9687166004820152908616602482015260448101929092529284166064820152929091602091849160849183918691165af19081156118b85790611b88575b602090604051908152f35b506020813d602011611bb3575b81611ba2602093836127e3565b810103126106f85760209051611b7d565b3d9150611b95565b6020813d602011611c0b575b81611bd4602093836127e3565b81010312610343579373ffffffffffffffffffffffffffffffffffffffff819697611c00602097612982565b509796955050611b02565b3d9150611bc7565b6020813d602011611c44575b81611c2c602093836127e3565b8101031261034357611c3d90612982565b5086611a89565b3d9150611c1f565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f4e6f207375697461626c6520706f6f6c20666f756e64000000000000000000006044820152fd5b611cbf9194503d8088833e6102eb81836127e3565b925f6116c1565b50346103e95760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103e95773ffffffffffffffffffffffffffffffffffffffff611d13612766565b611d1b612bbd565b167fffffffffffffffffffffffff00000000000000000000000000000000000000005f5416175f5580f35b50346103e957807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103e957611d7d612bbd565b5f73ffffffffffffffffffffffffffffffffffffffff7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c1993008054907fffffffffffffffffffffffff000000000000000000000000000000000000000082169055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b50346103e957611e133661285e565b91611e2282959495151561291d565b83546040517f2d5e94a700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8781166004830152838116602483015260209791939290919088908590604490829086165afa938415610703578794612072575b506040517f23b872dd000000000000000000000000000000000000000000000000000000008152336004820152306024820152604481018690528282169089816064818c865af18015610ed15761203e575b506040517f095ea7b300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8616600482015260248101879052908990829060449082908c905af180156109c857918996959493918993611ffc575b506040517f6e81221c00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9182166004820152938116602485015260448401959095529590931660648201529384926084928492165af19182156118b85791611fcf575b50604051908152f35b90508181813d8311611ff5575b611fe681836127e3565b810103126106f857515f611fc6565b503d611fdc565b878193959697989294503d8311612037575b61201881836127e3565b81010312611081579187916120308a97969594612982565b505f611f51565b503d61200e565b8981813d831161206b575b61205381836127e3565b81010312610f8e5761206490612982565b505f611ee5565b503d612049565b9093508781813d83116120a2575b61208a81836127e3565b810103126109bd5761209b906128fc565b925f611e93565b503d612080565b50346106f85760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126106f85773ffffffffffffffffffffffffffffffffffffffff6120f6612766565b16803b156106f8575f80916024604051809481937f5568081a0000000000000000000000000000000000000000000000000000000083523360048401525af1801561214f57612143575080f35b61214d91506127cf565b005b6040513d5f823e3d90fd5b346106f8575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126106f85773ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001630036121ef5760206040517f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc8152f35b60046040517fe07c8dba000000000000000000000000000000000000000000000000000000008152fd5b60407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126106f85761224b612766565b602490813567ffffffffffffffff81116106f857366023820112156106f857806004013561227881612824565b9261228660405194856127e3565b81845260209182850193368783830101116106f857815f928886930187378601015273ffffffffffffffffffffffffffffffffffffffff807f0000000000000000000000000000000000000000000000000000000000000000168030149081156124f5575b506121ef576122f8612bbd565b8116936040517f52d1902d0000000000000000000000000000000000000000000000000000000081528381600481895afa5f91816124c6575b50612366578686604051907f4c9c8ce30000000000000000000000000000000000000000000000000000000082526004820152fd5b8590877f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc918281036124985750843b156124695750817fffffffffffffffffffffffff0000000000000000000000000000000000000000825416179055604051907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b5f80a281511561243557505f61214d9481925190845af4903d1561242c573d61241081612824565b9061241e60405192836127e3565b81525f81943d92013e612c86565b60609250612c86565b93505050503461244157005b807fb398979f0000000000000000000000000000000000000000000000000000000060049252fd5b82604051907f4c9c8ce30000000000000000000000000000000000000000000000000000000082526004820152fd5b604051907faa1d49a40000000000000000000000000000000000000000000000000000000082526004820152fd5b9091508481813d83116124ee575b6124de81836127e3565b810103126106f857519088612331565b503d6124d4565b9050817f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc54161415876122eb565b346106f85760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126106f85761255a612766565b612562612789565b5f546040517f2d5e94a700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff84811660048301528381166024830152602094919285908490604490829085165afa90811561214f5785935f92612678575b506040517f4aa0665200000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff938416600482015294909216602485015260448035908501528391829081606481015b0392165afa90811561214f575f9161264b5750604051908152f35b90508181813d8311612671575b61266281836127e3565b810103126106f8575182611fc6565b503d612658565b8481959293503d83116126ae575b61269081836127e3565b810103126106f857612630936126a686946128fc565b9190946125d1565b503d612686565b346106f8575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126106f857602073ffffffffffffffffffffffffffffffffffffffff5f5416604051908152f35b346106f8575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126106f85760209067ffffffffffffffff7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0054168152f35b6004359073ffffffffffffffffffffffffffffffffffffffff821682036106f857565b6024359073ffffffffffffffffffffffffffffffffffffffff821682036106f857565b6044359073ffffffffffffffffffffffffffffffffffffffff821682036106f857565b67ffffffffffffffff811161143e57604052565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff82111761143e57604052565b67ffffffffffffffff811161143e57601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc60809101126106f85773ffffffffffffffffffffffffffffffffffffffff9060043582811681036106f8579160243581811681036106f857916044359160643590811681036106f85790565b9181601f840112156106f85782359167ffffffffffffffff83116106f8576020808501948460051b0101116106f857565b519073ffffffffffffffffffffffffffffffffffffffff821682036106f857565b1561292457565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602060248201527f416d6f756e74206d7573742062652067726561746572207468616e207a65726f6044820152fd5b519081151582036106f857565b67ffffffffffffffff811161143e5760051b60200190565b60209081818403126106f85780519067ffffffffffffffff82116106f857019180601f840112156106f85782516129dd8161298f565b936129eb60405195866127e3565b818552838086019260051b8201019283116106f8578301905b828210612a12575050505090565b838091612a1e846128fc565b815201910190612a04565b8051821015612a3d5760209160051b010190565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b9080601f830112156106f857815190602091612a858161298f565b93612a9360405195866127e3565b81855260208086019260051b8201019283116106f857602001905b828210612abc575050505090565b81518152908301908301612aae565b9190811015612a3d5760051b0190565b3573ffffffffffffffffffffffffffffffffffffffff811681036106f85790565b73ffffffffffffffffffffffffffffffffffffffff809116908115612b8d577f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300805490837fffffffffffffffffffffffff00000000000000000000000000000000000000008316179055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e05f80a3565b60246040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081525f6004820152fd5b73ffffffffffffffffffffffffffffffffffffffff7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930054163303612bfd57565b60246040517f118cdaa7000000000000000000000000000000000000000000000000000000008152336004820152fd5b60ff7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a005460401c1615612c5c57565b60046040517fd7e6bcf8000000000000000000000000000000000000000000000000000000008152fd5b90612cc55750805115612c9b57805190602001fd5b60046040517f1425ea42000000000000000000000000000000000000000000000000000000008152fd5b81511580612d1d575b612cd6575090565b60249073ffffffffffffffffffffffffffffffffffffffff604051917f9996b315000000000000000000000000000000000000000000000000000000008352166004820152fd5b50803b15612cce56fea26469706673582212205f5b16526737d6f82f2bcddcdd47e57ddd2d559420000ae02510437afcb8c56364736f6c63430008190033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 SWAP1 PUSH0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0xD8E6E2C EQ PUSH2 0x2705 JUMPI POP DUP1 PUSH4 0x4219DC40 EQ PUSH2 0x26B5 JUMPI DUP1 PUSH4 0x4AA06652 EQ PUSH2 0x2523 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x2219 JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x215A JUMPI DUP1 PUSH4 0x5568081A EQ PUSH2 0x20A9 JUMPI DUP1 PUSH4 0x6E81221C EQ PUSH2 0x1E04 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1D46 JUMPI DUP1 PUSH4 0x72591BE5 EQ PUSH2 0x1CC6 JUMPI DUP1 PUSH4 0x7442ECA6 EQ PUSH2 0x1632 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x15C1 JUMPI DUP1 PUSH4 0x8F2248BC EQ PUSH2 0x146B JUMPI DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0x137C JUMPI DUP1 PUSH4 0xAE3CCE1C EQ PUSH2 0x127D JUMPI DUP1 PUSH4 0xC4D66DE8 EQ PUSH2 0x1089 JUMPI DUP1 PUSH4 0xE74E9B06 EQ PUSH2 0xA63 JUMPI DUP1 PUSH4 0xEC0CD2EB EQ PUSH2 0x846 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x7FB JUMPI DUP1 PUSH4 0xF31ABCC4 EQ PUSH2 0x3EC JUMPI PUSH4 0xFE110116 EQ PUSH2 0xFA JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x3E9 JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x3E9 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP3 SLOAD AND PUSH1 0x40 MLOAD DUP1 SWAP2 PUSH32 0x89345EFB00000000000000000000000000000000000000000000000000000000 DUP3 MSTORE CALLER PUSH1 0x4 DUP4 ADD MSTORE DUP2 PUSH1 0x24 PUSH1 0x20 SWAP5 DUP6 SWAP4 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x2F9 JUMPI DUP5 SWAP2 PUSH2 0x3B4 JUMPI JUMPDEST POP ISZERO PUSH2 0x356 JUMPI DUP3 SWAP1 PUSH1 0x40 MLOAD SWAP3 PUSH32 0x902F1AC00000000000000000000000000000000000000000000000000000000 DUP5 MSTORE DUP3 DUP5 PUSH1 0x4 DUP2 CALLER GAS STATICCALL SWAP4 DUP5 ISZERO PUSH2 0x34B JUMPI DUP4 SWAP5 PUSH2 0x304 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD PUSH32 0x67E4AC2C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE DUP4 DUP2 PUSH1 0x4 DUP2 CALLER GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x2F9 JUMPI DUP5 SWAP2 PUSH2 0x2D7 JUMPI JUMPDEST POP DUP4 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x2D3 JUMPI DUP1 DUP5 PUSH2 0x276 DUP6 PUSH2 0x226 DUP10 SWAP6 DUP8 PUSH2 0x2A29 JUMP JUMPDEST MLOAD AND PUSH2 0x232 DUP5 DUP12 PUSH2 0x2A29 JUMP JUMPDEST MLOAD PUSH1 0x40 MLOAD PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP5 DUP6 SWAP3 DUP4 SWAP2 SWAP1 DUP3 SWAP1 PUSH1 0x44 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x2C8 JUMPI PUSH2 0x28F JUMPI JUMPDEST PUSH1 0x1 SWAP2 POP ADD PUSH2 0x20C JUMP JUMPDEST DUP5 DUP3 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x2C1 JUMPI JUMPDEST PUSH2 0x2A4 DUP2 DUP4 PUSH2 0x27E3 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x2BD JUMPI PUSH2 0x2B7 PUSH1 0x1 SWAP3 PUSH2 0x2982 JUMP JUMPDEST POP PUSH2 0x285 JUMP JUMPDEST DUP6 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x29A JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP9 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP5 DUP1 RETURN JUMPDEST PUSH2 0x2F3 SWAP2 POP RETURNDATASIZE DUP1 DUP7 DUP4 RETURNDATACOPY PUSH2 0x2EB DUP2 DUP4 PUSH2 0x27E3 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x29A7 JUMP JUMPDEST PUSH0 PUSH2 0x209 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP7 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 SWAP4 POP RETURNDATASIZE DUP1 DUP5 DUP4 RETURNDATACOPY PUSH2 0x316 DUP2 DUP4 PUSH2 0x27E3 JUMP JUMPDEST DUP2 ADD DUP3 DUP3 DUP3 SUB SLT PUSH2 0x347 JUMPI DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x343 JUMPI PUSH2 0x33C SWAP3 ADD PUSH2 0x2A6A JUMP JUMPDEST SWAP3 PUSH0 PUSH2 0x1CC JUMP JUMPDEST DUP5 DUP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP6 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920506F6F6C7300000000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 POP DUP2 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x3E2 JUMPI JUMPDEST PUSH2 0x3CB DUP2 DUP4 PUSH2 0x27E3 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x347 JUMPI PUSH2 0x3DC SWAP1 PUSH2 0x2982 JUMP JUMPDEST PUSH0 PUSH2 0x187 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x3C1 JUMP JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x3E9 JUMPI PUSH1 0x60 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x3E9 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH2 0x428 PUSH2 0x2789 JUMP JUMPDEST SWAP2 PUSH2 0x431 PUSH2 0x27AC JUMP JUMPDEST DUP2 ISZERO PUSH2 0x79D JUMPI PUSH1 0x40 MLOAD PUSH32 0xDD62ED3E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x20 SWAP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP3 AND SWAP5 SWAP1 SWAP3 SWAP1 SWAP2 SWAP1 DUP8 DUP2 PUSH1 0x44 DUP2 DUP10 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x703 JUMPI SWAP1 DUP4 SWAP2 DUP9 SWAP2 PUSH2 0x76C JUMPI JUMPDEST POP LT PUSH2 0x70E JUMPI PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE DUP8 DUP2 PUSH1 0x24 DUP2 DUP10 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x703 JUMPI SWAP1 DUP4 SWAP2 DUP9 SWAP2 PUSH2 0x6CE JUMPI JUMPDEST POP LT PUSH2 0x670 JUMPI PUSH1 0x40 MLOAD PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 SWAP1 SWAP2 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP6 DUP2 PUSH1 0x64 DUP2 DUP9 DUP9 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x665 JUMPI DUP6 SWAP2 PUSH2 0x630 JUMPI JUMPDEST POP ISZERO PUSH2 0x5D2 JUMPI DUP4 SWAP5 POP DUP3 EXTCODESIZE ISZERO PUSH2 0x5CD JUMPI PUSH1 0x24 DUP5 SWAP3 DUP4 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP5 DUP6 SWAP4 PUSH32 0x89AFCB4400000000000000000000000000000000000000000000000000000000 DUP6 MSTORE AND PUSH1 0x4 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x5C2 JUMPI PUSH2 0x5B2 JUMPI POP RETURN JUMPDEST PUSH2 0x5BB SWAP1 PUSH2 0x27CF JUMP JUMPDEST PUSH2 0x3E9 JUMPI DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP POP POP REVERT JUMPDEST PUSH1 0x64 DUP6 PUSH1 0x40 MLOAD SWAP1 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E73666572206661696C65640000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 POP DUP6 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x65E JUMPI JUMPDEST PUSH2 0x647 DUP2 DUP4 PUSH2 0x27E3 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x343 JUMPI PUSH2 0x658 SWAP1 PUSH2 0x2982 JUMP JUMPDEST PUSH0 PUSH2 0x55D JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x63D JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP8 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x64 DUP8 PUSH1 0x40 MLOAD SWAP1 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E742062616C616E6365000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP1 SWAP3 POP DUP10 DUP1 SWAP3 POP RETURNDATASIZE DUP4 GT PUSH2 0x6FC JUMPI JUMPDEST PUSH2 0x6E7 DUP2 DUP4 PUSH2 0x27E3 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x6F8 JUMPI DUP3 SWAP1 MLOAD PUSH0 PUSH2 0x4EE JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x6DD JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP10 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x64 DUP8 PUSH1 0x40 MLOAD SWAP1 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E7420616C6C6F77616E636500000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP1 SWAP3 POP DUP10 DUP1 SWAP3 POP RETURNDATASIZE DUP4 GT PUSH2 0x796 JUMPI JUMPDEST PUSH2 0x785 DUP2 DUP4 PUSH2 0x27E3 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x6F8 JUMPI DUP3 SWAP1 MLOAD PUSH0 PUSH2 0x4A3 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x77B JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5368617265206D7573742062652067726561746572207468616E207A65726F00 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP CALLVALUE PUSH2 0x3E9 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x3E9 JUMPI PUSH2 0x843 PUSH2 0x836 PUSH2 0x2766 JUMP JUMPDEST PUSH2 0x83E PUSH2 0x2BBD JUMP JUMPDEST PUSH2 0x2AFC JUMP JUMPDEST DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x3E9 JUMPI PUSH1 0x60 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x3E9 JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xA5F JUMPI PUSH2 0x896 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x28CB JUMP JUMPDEST SWAP1 SWAP2 PUSH2 0x8A0 PUSH2 0x2789 JUMP JUMPDEST SWAP2 PUSH2 0x8A9 PUSH2 0x27AC JUMP JUMPDEST SWAP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP2 AND PUSH1 0x40 MLOAD SWAP1 PUSH32 0x67E4AC2C00000000000000000000000000000000000000000000000000000000 DUP3 MSTORE DUP5 DUP3 PUSH1 0x4 DUP2 DUP5 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x665 JUMPI DUP6 SWAP3 PUSH2 0xA43 JUMPI JUMPDEST POP DUP5 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x9D3 JUMPI DUP4 PUSH2 0x916 DUP3 DUP6 PUSH2 0x2A29 JUMP JUMPDEST MLOAD AND PUSH2 0x974 PUSH2 0x926 DUP4 DUP9 DUP13 PUSH2 0x2ACB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE SWAP1 CALLDATALOAD PUSH1 0x44 DUP3 ADD MSTORE SWAP2 PUSH1 0x20 SWAP2 DUP3 SWAP2 DUP5 SWAP2 DUP3 SWAP1 DUP13 SWAP1 DUP3 SWAP1 PUSH1 0x64 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x9C8 JUMPI PUSH2 0x98D JUMPI JUMPDEST POP POP PUSH1 0x1 ADD PUSH2 0x902 JUMP JUMPDEST DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x9C1 JUMPI JUMPDEST PUSH2 0x9A1 DUP2 DUP4 PUSH2 0x27E3 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x9BD JUMPI SWAP1 PUSH2 0x9B5 PUSH1 0x1 SWAP3 PUSH2 0x2982 JUMP JUMPDEST POP SWAP1 PUSH0 PUSH2 0x983 JUMP JUMPDEST DUP7 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x997 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP11 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x6A62784200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE DUP8 DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE DUP7 SWAP1 PUSH1 0x20 DUP2 PUSH1 0x24 DUP2 DUP6 DUP9 GAS CALL DUP1 ISZERO PUSH2 0x5C2 JUMPI PUSH2 0xA1B JUMPI POP DUP1 RETURN JUMPDEST PUSH1 0x20 SWAP1 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0xA3C JUMPI JUMPDEST PUSH2 0xA31 DUP2 DUP4 PUSH2 0x27E3 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x6F8 JUMPI DUP1 RETURN JUMPDEST POP RETURNDATASIZE PUSH2 0xA27 JUMP JUMPDEST PUSH2 0xA58 SWAP2 SWAP3 POP RETURNDATASIZE DUP1 DUP8 DUP4 RETURNDATACOPY PUSH2 0x2EB DUP2 DUP4 PUSH2 0x27E3 JUMP JUMPDEST SWAP1 PUSH0 PUSH2 0x8FF JUMP JUMPDEST POP DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x3E9 JUMPI PUSH1 0x80 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x3E9 JUMPI PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x4 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x1085 JUMPI PUSH2 0xAB4 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x28CB JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x24 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x343 JUMPI PUSH2 0xACE SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x28CB JUMP JUMPDEST SWAP2 PUSH1 0x44 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x9BD JUMPI PUSH2 0xAE7 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x28CB JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x64 CALLDATALOAD SWAP1 DUP2 GT PUSH2 0x1081 JUMPI PUSH2 0xB01 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x28CB JUMP JUMPDEST SWAP3 DUP6 DUP8 EQ DUP1 PUSH2 0x1078 JUMPI JUMPDEST DUP1 PUSH2 0x106F JUMPI JUMPDEST ISZERO PUSH2 0x1011 JUMPI PUSH2 0xB25 DUP8 SWAP10 SWAP8 SWAP9 SWAP7 SWAP6 SWAP9 PUSH2 0x298F JUMP JUMPDEST SWAP8 PUSH2 0xB33 PUSH1 0x40 MLOAD SWAP10 DUP11 PUSH2 0x27E3 JUMP JUMPDEST DUP10 DUP10 MSTORE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH2 0xB60 DUP12 PUSH2 0x298F JUMP JUMPDEST ADD CALLDATASIZE PUSH1 0x20 DUP12 ADD CALLDATACOPY DUP8 SWAP10 JUMPDEST DUP1 DUP12 LT PUSH2 0xBB7 JUMPI DUP10 DUP10 PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP5 MSTORE DUP3 MLOAD DUP1 SWAP2 MSTORE PUSH1 0x20 PUSH1 0x40 DUP6 ADD SWAP4 ADD SWAP2 JUMPDEST DUP2 DUP2 LT PUSH2 0xB9E JUMPI POP POP POP SUB SWAP1 RETURN JUMPDEST DUP3 MLOAD DUP5 MSTORE DUP6 SWAP5 POP PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0xB90 JUMP JUMPDEST DUP11 DUP10 PUSH1 0x20 PUSH2 0xC59 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 SWAP16 DUP14 SWAP16 SWAP15 SWAP13 SWAP14 DUP2 DUP9 PUSH2 0xC00 SWAP3 PUSH2 0xBFB DUP16 PUSH2 0xC05 SWAP7 DUP16 SWAP2 PUSH2 0xBF3 SWAP3 PUSH2 0x2ACB JUMP JUMPDEST CALLDATALOAD ISZERO ISZERO PUSH2 0x291D JUMP JUMPDEST PUSH2 0x2ACB JUMP JUMPDEST PUSH2 0x2ADB JUMP JUMPDEST AND PUSH2 0xC11 DUP6 DUP12 DUP11 PUSH2 0x2ACB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE SWAP1 CALLDATALOAD PUSH1 0x44 DUP3 ADD MSTORE SWAP4 DUP5 SWAP3 DUP4 SWAP2 SWAP1 DUP3 SWAP1 PUSH1 0x64 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0xED1 JUMPI DUP3 DUP5 DUP12 DUP16 SWAP4 DUP15 SWAP6 PUSH2 0xF9A JUMPI JUMPDEST POP PUSH2 0xC00 DUP4 PUSH2 0xCA5 PUSH2 0xC00 PUSH2 0xD06 SWAP9 SWAP7 PUSH1 0x20 SWAP9 SWAP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0xCAC SWAP8 SLOAD AND SWAP8 PUSH2 0x2ACB JUMP JUMPDEST SWAP5 DUP11 PUSH2 0x2ACB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x2D5E94A700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP4 DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP3 AND PUSH1 0x24 DUP4 ADD MSTORE SWAP1 SWAP3 DUP4 SWAP2 SWAP1 DUP3 SWAP1 DUP2 SWAP1 PUSH1 0x44 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xED1 JUMPI DUP3 DUP5 DUP15 DUP13 SWAP4 DUP5 SWAP6 PUSH2 0xF2C JUMPI JUMPDEST POP PUSH2 0xD46 PUSH2 0xC00 PUSH1 0x20 SWAP5 PUSH2 0xDAA SWAP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP5 PUSH2 0x2ACB JUMP JUMPDEST AND PUSH2 0xD52 DUP7 DUP13 DUP12 PUSH2 0x2ACB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x95EA7B300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP1 CALLDATALOAD PUSH1 0x24 DUP3 ADD MSTORE SWAP4 DUP5 SWAP3 DUP4 SWAP2 SWAP1 DUP3 SWAP1 PUSH1 0x44 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0xF21 JUMPI DUP5 DUP15 DUP6 SWAP3 PUSH2 0xEDC JUMPI JUMPDEST PUSH2 0xDC7 SWAP4 POP PUSH2 0x2ACB JUMP JUMPDEST PUSH2 0xDD0 SWAP1 PUSH2 0x2ADB JUMP JUMPDEST SWAP1 PUSH2 0xDDC DUP4 DUP13 DUP8 PUSH2 0x2ACB JUMP JUMPDEST PUSH2 0xDE5 SWAP1 PUSH2 0x2ADB JUMP JUMPDEST PUSH2 0xDF0 DUP5 DUP11 DUP10 PUSH2 0x2ACB JUMP JUMPDEST CALLDATALOAD SWAP1 PUSH2 0xDFD DUP6 DUP13 DUP12 PUSH2 0x2ACB JUMP JUMPDEST PUSH2 0xE06 SWAP1 PUSH2 0x2ADB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x6E81221C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP6 DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP2 DUP6 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP4 AND PUSH1 0x64 DUP3 ADD MSTORE SWAP2 AND DUP2 PUSH1 0x84 DUP2 DUP13 GAS SWAP5 PUSH1 0x20 SWAP6 CALL SWAP1 DUP2 ISZERO PUSH2 0xED1 JUMPI DUP10 SWAP2 PUSH2 0xE99 JUMPI JUMPDEST POP SWAP1 PUSH1 0x1 SWAP2 PUSH2 0xE8B DUP3 DUP14 PUSH2 0x2A29 JUMP JUMPDEST MSTORE ADD SWAP11 POP SWAP9 SWAP7 SWAP6 SWAP8 SWAP9 PUSH2 0xB6A JUMP JUMPDEST SWAP2 SWAP9 POP POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xEC9 JUMPI JUMPDEST DUP2 PUSH2 0xEB6 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x27E3 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x6F8 JUMPI MLOAD DUP12 SWAP8 SWAP1 PUSH1 0x1 PUSH2 0xE7C JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xEA9 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP12 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP POP POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xF19 JUMPI JUMPDEST DUP2 PUSH2 0xEF8 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x27E3 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xF15 JUMPI DUP3 DUP5 DUP15 PUSH2 0xF0F PUSH2 0xDC7 SWAP5 PUSH2 0x2982 JUMP JUMPDEST POP PUSH2 0xDBD JUMP JUMPDEST DUP10 DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xEEB JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP13 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP5 POP POP POP POP POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xF92 JUMPI JUMPDEST DUP2 PUSH2 0xF4B PUSH1 0x20 SWAP4 DUP4 PUSH2 0x27E3 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xF8E JUMPI DUP9 PUSH1 0x20 PUSH2 0xDAA PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP16 SWAP5 PUSH2 0xC00 DUP8 DUP10 PUSH2 0xF81 PUSH2 0xD46 SWAP5 PUSH2 0x28FC JUMP JUMPDEST SWAP9 SWAP5 POP SWAP5 POP SWAP5 POP POP PUSH2 0xD1D JUMP JUMPDEST DUP9 DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xF3E JUMP JUMPDEST SWAP5 POP POP POP POP POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1009 JUMPI JUMPDEST DUP2 PUSH2 0xFB9 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x27E3 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xF8E JUMPI PUSH1 0x20 DUP11 DUP14 PUSH2 0xCAC PUSH2 0xC00 DUP7 PUSH2 0xCA5 DUP16 DUP3 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0xC00 SWAP4 PUSH2 0xFF7 PUSH2 0xD06 SWAP14 PUSH2 0x2982 JUMP JUMPDEST POP SWAP8 POP POP SWAP7 SWAP9 POP POP POP POP SWAP4 SWAP6 POP PUSH2 0xC70 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xFAC JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E70757420617272617973206C656E677468206D69736D6174636800000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP DUP4 DUP4 EQ PUSH2 0xB11 JUMP JUMPDEST POP DUP3 DUP7 EQ PUSH2 0xB0B JUMP JUMPDEST DUP8 DUP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x3E9 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x3E9 JUMPI PUSH2 0x10C1 PUSH2 0x2766 JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP1 DUP2 SLOAD PUSH1 0xFF DUP2 PUSH1 0x40 SHR AND ISZERO SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND DUP1 ISZERO SWAP1 DUP2 PUSH2 0x1275 JUMPI JUMPDEST PUSH1 0x1 EQ SWAP1 DUP2 PUSH2 0x126B JUMPI JUMPDEST ISZERO SWAP1 DUP2 PUSH2 0x1262 JUMPI JUMPDEST POP PUSH2 0x1238 JUMPI DUP2 DUP4 PUSH1 0x1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP6 AND OR DUP7 SSTORE PUSH2 0x1203 JUMPI JUMPDEST POP PUSH2 0x1166 PUSH2 0x2C2D JUMP JUMPDEST PUSH2 0x116E PUSH2 0x2C2D JUMP JUMPDEST PUSH2 0x1176 PUSH2 0x2C2D JUMP JUMPDEST PUSH2 0x117F CALLER PUSH2 0x2AFC JUMP JUMPDEST AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP5 SLOAD AND OR DUP4 SSTORE PUSH2 0x11AF JUMPI POP DUP1 RETURN JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFF DUP2 SLOAD AND SWAP1 SSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000 AND PUSH9 0x10000000000000001 OR DUP5 SSTORE PUSH0 PUSH2 0x115D JUMP JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST SWAP1 POP ISZERO PUSH0 PUSH2 0x1114 JUMP JUMPDEST ADDRESS EXTCODESIZE ISZERO SWAP2 POP PUSH2 0x110C JUMP JUMPDEST DUP5 SWAP2 POP PUSH2 0x1102 JUMP JUMPDEST POP CALLVALUE PUSH2 0x3E9 JUMPI PUSH1 0x20 DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0xA5F JUMPI PUSH2 0x12B6 PUSH2 0x2766 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 DUP1 DUP5 PUSH1 0x24 DUP2 DUP4 SLOAD AND SWAP5 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP4 DUP5 SWAP3 PUSH32 0xB4340E6A00000000000000000000000000000000000000000000000000000000 DUP5 MSTORE AND PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x136F JUMPI DUP2 SWAP3 PUSH2 0x1353 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP3 DUP1 DUP5 ADD SWAP1 DUP1 DUP6 MSTORE DUP4 MLOAD DUP1 SWAP3 MSTORE DUP1 PUSH1 0x40 DUP7 ADD SWAP5 ADD SWAP3 JUMPDEST DUP3 DUP2 LT PUSH2 0x133D JUMPI DUP6 DUP6 SUB DUP7 RETURN JUMPDEST DUP4 MLOAD DUP8 AND DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x1330 JUMP JUMPDEST PUSH2 0x1368 SWAP2 SWAP3 POP RETURNDATASIZE DUP1 DUP5 DUP4 RETURNDATACOPY PUSH2 0x2EB DUP2 DUP4 PUSH2 0x27E3 JUMP JUMPDEST SWAP1 PUSH0 PUSH2 0x1316 JUMP JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x3E9 JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x3E9 JUMPI PUSH1 0x40 MLOAD PUSH1 0x40 DUP2 ADD SWAP1 DUP1 DUP3 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT OR PUSH2 0x143E JUMPI PUSH1 0x40 SWAP2 DUP3 MSTORE PUSH1 0x5 DUP2 MSTORE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F PUSH1 0x20 DUP4 ADD PUSH32 0x352E302E30000000000000000000000000000000000000000000000000000000 DUP2 MSTORE DUP5 MLOAD SWAP6 DUP7 SWAP5 PUSH1 0x20 DUP7 MSTORE MLOAD DUP1 SWAP3 DUP2 PUSH1 0x20 DUP9 ADD MSTORE DUP8 DUP8 ADD MCOPY DUP6 DUP3 DUP7 ADD ADD MSTORE ADD AND DUP2 ADD SUB ADD SWAP1 RETURN JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP CALLVALUE PUSH2 0x3E9 JUMPI PUSH1 0x40 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x3E9 JUMPI PUSH2 0x14A3 PUSH2 0x2766 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF SWAP2 DUP3 DUP2 AND DUP1 SWAP2 SUB PUSH2 0x347 JUMPI PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 DUP1 SLOAD SWAP4 DUP3 PUSH1 0xFF DUP7 PUSH1 0x40 SHR AND SWAP2 DUP3 ISZERO PUSH2 0x15B4 JUMPI JUMPDEST POP POP PUSH2 0x1238 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFF PUSH9 0x10000000000000000 DUP4 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000 PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x20 SWAP9 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 PUSH0 SLOAD AND OR PUSH0 SSTORE AND OR OR AND SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST DUP7 AND LT ISZERO SWAP1 POP DUP3 PUSH0 PUSH2 0x14EF JUMP JUMPDEST POP CALLVALUE PUSH2 0x3E9 JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x3E9 JUMPI PUSH1 0x20 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x3E9 JUMPI PUSH1 0x24 PUSH2 0x1643 CALLDATASIZE PUSH2 0x285E JUMP JUMPDEST PUSH2 0x1652 DUP3 SWAP6 SWAP5 SWAP4 SWAP3 ISZERO ISZERO PUSH2 0x291D JUMP JUMPDEST DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 SLOAD AND PUSH1 0x40 MLOAD SWAP6 DUP7 DUP1 SWAP3 PUSH32 0xB4340E6A00000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP9 AND PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL SWAP4 DUP5 ISZERO PUSH2 0x2C8 JUMPI DUP7 SWAP5 PUSH2 0x1CAA JUMPI JUMPDEST POP SWAP1 SWAP4 SWAP2 DUP6 SWAP1 DUP2 SWAP1 DUP2 JUMPDEST DUP7 MLOAD DUP5 LT ISZERO PUSH2 0x1A04 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x16F3 DUP6 DUP10 PUSH2 0x2A29 JUMP JUMPDEST MLOAD AND SWAP8 PUSH1 0x40 MLOAD SWAP6 PUSH32 0x89AB353200000000000000000000000000000000000000000000000000000000 DUP8 MSTORE DUP11 DUP8 PUSH1 0x4 DUP2 DUP14 GAS STATICCALL SWAP7 DUP8 ISZERO PUSH2 0x19F9 JUMPI DUP12 SWAP8 PUSH2 0x192A JUMPI JUMPDEST POP PUSH1 0x4 SWAP5 SWAP6 SWAP7 SWAP8 DUP12 DUP12 PUSH1 0x40 MLOAD SWAP8 DUP9 DUP1 SWAP3 PUSH32 0x36BF6E3900000000000000000000000000000000000000000000000000000000 DUP3 MSTORE GAS STATICCALL SWAP6 DUP7 ISZERO PUSH2 0x191F JUMPI DUP13 SWAP7 PUSH2 0x18D8 JUMPI JUMPDEST POP DUP12 JUMPDEST DUP13 DUP11 MLOAD DUP3 LT ISZERO PUSH2 0x18C4 JUMPI PUSH1 0x24 PUSH1 0x40 DUP15 DUP2 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH32 0xD14EF46D00000000000000000000000000000000000000000000000000000000 DUP3 MSTORE DUP8 PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x18B8 JUMPI SWAP2 PUSH2 0x1850 JUMPI JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP9 AND SWAP2 MLOAD AND EQ PUSH2 0x17F0 JUMPI JUMPDEST PUSH1 0x1 ADD PUSH2 0x1779 JUMP JUMPDEST PUSH2 0x17FA DUP2 DUP9 PUSH2 0x2A29 JUMP JUMPDEST MLOAD PUSH2 0x1805 DUP3 DUP13 PUSH2 0x2A29 JUMP JUMPDEST MLOAD ISZERO ISZERO DUP1 PUSH2 0x1847 JUMPI JUMPDEST PUSH2 0x1819 JUMPI JUMPDEST POP PUSH2 0x17E8 JUMP JUMPDEST SWAP8 POP SWAP4 POP PUSH1 0x1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x183E DUP11 DUP14 PUSH2 0x2A29 JUMP JUMPDEST MLOAD AND SWAP5 SWAP1 PUSH2 0x1813 JUMP JUMPDEST POP DUP9 DUP2 GT PUSH2 0x180E JUMP JUMPDEST SWAP1 POP PUSH1 0x40 DUP2 RETURNDATASIZE PUSH1 0x40 GT PUSH2 0x18B0 JUMPI JUMPDEST DUP2 PUSH2 0x186B PUSH1 0x40 SWAP4 DUP4 PUSH2 0x27E3 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x18AC JUMPI PUSH1 0x40 MLOAD SWAP1 PUSH1 0x40 DUP3 ADD DUP3 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x143E JUMPI PUSH1 0x40 MSTORE PUSH2 0x189A DUP2 PUSH2 0x28FC JUMP JUMPDEST DUP3 MSTORE PUSH1 0x20 DUP1 SWAP2 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH0 PUSH2 0x17C6 JUMP JUMPDEST DUP14 DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x185E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP SWAP3 SWAP11 POP SWAP8 POP SWAP6 PUSH1 0x1 ADD SWAP5 SWAP4 POP PUSH2 0x16CB SWAP1 POP JUMP JUMPDEST SWAP1 SWAP6 POP RETURNDATASIZE DUP1 DUP14 DUP4 RETURNDATACOPY PUSH2 0x18EA DUP2 DUP4 PUSH2 0x27E3 JUMP JUMPDEST DUP2 ADD PUSH1 0x40 DUP3 DUP3 SUB SLT PUSH2 0x191B JUMPI PUSH1 0x20 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x18AC JUMPI PUSH2 0x1914 SWAP3 ADD PUSH2 0x2A6A JUMP JUMPDEST SWAP5 PUSH0 PUSH2 0x1776 JUMP JUMPDEST DUP13 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP15 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP5 SWAP6 SWAP7 POP RETURNDATASIZE SWAP5 DUP6 DUP13 DUP3 RETURNDATACOPY PUSH2 0x193E DUP7 DUP3 PUSH2 0x27E3 JUMP JUMPDEST PUSH1 0x40 DUP2 DUP8 DUP2 ADD SUB SLT PUSH2 0x19F5 JUMPI DUP1 MLOAD SWAP6 PUSH8 0xFFFFFFFFFFFFFFFF SWAP7 DUP8 DUP2 GT PUSH2 0x18AC JUMPI DUP3 ADD SWAP2 DUP2 DUP2 ADD PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x18AC JUMPI DUP3 MLOAD SWAP3 PUSH1 0x20 SWAP1 PUSH2 0x197D DUP6 PUSH2 0x298F JUMP JUMPDEST SWAP5 PUSH2 0x198B PUSH1 0x40 MLOAD SWAP7 DUP8 PUSH2 0x27E3 JUMP JUMPDEST DUP1 DUP7 MSTORE DUP3 DUP1 DUP8 ADD SWAP2 PUSH1 0x5 SHL DUP4 ADD ADD SWAP2 DUP6 DUP6 ADD DUP4 GT PUSH2 0x19EF JUMPI DUP4 DUP1 SWAP2 ADD SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x19D7 JUMPI POP POP POP POP DUP2 ADD MLOAD SWAP8 DUP9 GT PUSH2 0x18AC JUMPI PUSH1 0x4 SWAP8 PUSH2 0x19CE SWAP3 DUP3 ADD SWAP2 ADD PUSH2 0x2A6A JUMP JUMPDEST POP SWAP7 SWAP6 SWAP5 PUSH2 0x1733 JUMP JUMPDEST DUP2 SWAP1 PUSH2 0x19E2 DUP5 PUSH2 0x2982 JUMP JUMPDEST DUP2 MSTORE ADD SWAP2 ADD SWAP1 DUP4 SWAP1 PUSH2 0x19A9 JUMP JUMPDEST POP POP DUP16 DUP1 REVERT JUMPDEST DUP12 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP14 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP9 DUP7 DUP7 SWAP3 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND ISZERO PUSH2 0x1C4C JUMPI PUSH1 0x40 MLOAD PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x20 DUP2 PUSH1 0x64 DUP2 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP13 AND GAS CALL DUP1 ISZERO PUSH2 0x665 JUMPI PUSH2 0x1C13 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD PUSH32 0x95EA7B300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x20 DUP2 DUP1 PUSH1 0x44 DUP2 ADD SUB DUP2 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP13 AND GAS CALL DUP1 ISZERO PUSH2 0x665 JUMPI PUSH2 0x1BBB JUMPI JUMPDEST POP PUSH1 0x40 MLOAD PUSH32 0x6E81221C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP7 DUP8 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP1 DUP7 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP3 DUP5 AND PUSH1 0x64 DUP3 ADD MSTORE SWAP3 SWAP1 SWAP2 PUSH1 0x20 SWAP2 DUP5 SWAP2 PUSH1 0x84 SWAP2 DUP4 SWAP2 DUP7 SWAP2 AND GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x18B8 JUMPI SWAP1 PUSH2 0x1B88 JUMPI JUMPDEST PUSH1 0x20 SWAP1 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1BB3 JUMPI JUMPDEST DUP2 PUSH2 0x1BA2 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x27E3 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x6F8 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH2 0x1B7D JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x1B95 JUMP JUMPDEST PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1C0B JUMPI JUMPDEST DUP2 PUSH2 0x1BD4 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x27E3 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x343 JUMPI SWAP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 SWAP7 SWAP8 PUSH2 0x1C00 PUSH1 0x20 SWAP8 PUSH2 0x2982 JUMP JUMPDEST POP SWAP8 SWAP7 SWAP6 POP POP PUSH2 0x1B02 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x1BC7 JUMP JUMPDEST PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1C44 JUMPI JUMPDEST DUP2 PUSH2 0x1C2C PUSH1 0x20 SWAP4 DUP4 PUSH2 0x27E3 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x343 JUMPI PUSH2 0x1C3D SWAP1 PUSH2 0x2982 JUMP JUMPDEST POP DUP7 PUSH2 0x1A89 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x1C1F JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F207375697461626C6520706F6F6C20666F756E6400000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH2 0x1CBF SWAP2 SWAP5 POP RETURNDATASIZE DUP1 DUP9 DUP4 RETURNDATACOPY PUSH2 0x2EB DUP2 DUP4 PUSH2 0x27E3 JUMP JUMPDEST SWAP3 PUSH0 PUSH2 0x16C1 JUMP JUMPDEST POP CALLVALUE PUSH2 0x3E9 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x3E9 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x1D13 PUSH2 0x2766 JUMP JUMPDEST PUSH2 0x1D1B PUSH2 0x2BBD JUMP JUMPDEST AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 PUSH0 SLOAD AND OR PUSH0 SSTORE DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x3E9 JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x3E9 JUMPI PUSH2 0x1D7D PUSH2 0x2BBD JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 DUP1 SLOAD SWAP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP3 AND SWAP1 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x3E9 JUMPI PUSH2 0x1E13 CALLDATASIZE PUSH2 0x285E JUMP JUMPDEST SWAP2 PUSH2 0x1E22 DUP3 SWAP6 SWAP5 SWAP6 ISZERO ISZERO PUSH2 0x291D JUMP JUMPDEST DUP4 SLOAD PUSH1 0x40 MLOAD PUSH32 0x2D5E94A700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP4 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x20 SWAP8 SWAP2 SWAP4 SWAP3 SWAP1 SWAP2 SWAP1 DUP9 SWAP1 DUP6 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 DUP7 AND GAS STATICCALL SWAP4 DUP5 ISZERO PUSH2 0x703 JUMPI DUP8 SWAP5 PUSH2 0x2072 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP7 SWAP1 MSTORE DUP3 DUP3 AND SWAP1 DUP10 DUP2 PUSH1 0x64 DUP2 DUP13 DUP7 GAS CALL DUP1 ISZERO PUSH2 0xED1 JUMPI PUSH2 0x203E JUMPI JUMPDEST POP PUSH1 0x40 MLOAD PUSH32 0x95EA7B300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP8 SWAP1 MSTORE SWAP1 DUP10 SWAP1 DUP3 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 DUP13 SWAP1 GAS CALL DUP1 ISZERO PUSH2 0x9C8 JUMPI SWAP2 DUP10 SWAP7 SWAP6 SWAP5 SWAP4 SWAP2 DUP10 SWAP4 PUSH2 0x1FFC JUMPI JUMPDEST POP PUSH1 0x40 MLOAD PUSH32 0x6E81221C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP4 DUP2 AND PUSH1 0x24 DUP6 ADD MSTORE PUSH1 0x44 DUP5 ADD SWAP6 SWAP1 SWAP6 MSTORE SWAP6 SWAP1 SWAP4 AND PUSH1 0x64 DUP3 ADD MSTORE SWAP4 DUP5 SWAP3 PUSH1 0x84 SWAP3 DUP5 SWAP3 AND GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x18B8 JUMPI SWAP2 PUSH2 0x1FCF JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 POP DUP2 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x1FF5 JUMPI JUMPDEST PUSH2 0x1FE6 DUP2 DUP4 PUSH2 0x27E3 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x6F8 JUMPI MLOAD PUSH0 PUSH2 0x1FC6 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1FDC JUMP JUMPDEST DUP8 DUP2 SWAP4 SWAP6 SWAP7 SWAP8 SWAP9 SWAP3 SWAP5 POP RETURNDATASIZE DUP4 GT PUSH2 0x2037 JUMPI JUMPDEST PUSH2 0x2018 DUP2 DUP4 PUSH2 0x27E3 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1081 JUMPI SWAP2 DUP8 SWAP2 PUSH2 0x2030 DUP11 SWAP8 SWAP7 SWAP6 SWAP5 PUSH2 0x2982 JUMP JUMPDEST POP PUSH0 PUSH2 0x1F51 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x200E JUMP JUMPDEST DUP10 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x206B JUMPI JUMPDEST PUSH2 0x2053 DUP2 DUP4 PUSH2 0x27E3 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xF8E JUMPI PUSH2 0x2064 SWAP1 PUSH2 0x2982 JUMP JUMPDEST POP PUSH0 PUSH2 0x1EE5 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x2049 JUMP JUMPDEST SWAP1 SWAP4 POP DUP8 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x20A2 JUMPI JUMPDEST PUSH2 0x208A DUP2 DUP4 PUSH2 0x27E3 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x9BD JUMPI PUSH2 0x209B SWAP1 PUSH2 0x28FC JUMP JUMPDEST SWAP3 PUSH0 PUSH2 0x1E93 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x2080 JUMP JUMPDEST POP CALLVALUE PUSH2 0x6F8 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x6F8 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x20F6 PUSH2 0x2766 JUMP JUMPDEST AND DUP1 EXTCODESIZE ISZERO PUSH2 0x6F8 JUMPI PUSH0 DUP1 SWAP2 PUSH1 0x24 PUSH1 0x40 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH32 0x5568081A00000000000000000000000000000000000000000000000000000000 DUP4 MSTORE CALLER PUSH1 0x4 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x214F JUMPI PUSH2 0x2143 JUMPI POP DUP1 RETURN JUMPDEST PUSH2 0x214D SWAP2 POP PUSH2 0x27CF JUMP JUMPDEST STOP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x6F8 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x6F8 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND ADDRESS SUB PUSH2 0x21EF JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP2 MSTORE RETURN JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST PUSH1 0x40 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x6F8 JUMPI PUSH2 0x224B PUSH2 0x2766 JUMP JUMPDEST PUSH1 0x24 SWAP1 DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x6F8 JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x6F8 JUMPI DUP1 PUSH1 0x4 ADD CALLDATALOAD PUSH2 0x2278 DUP2 PUSH2 0x2824 JUMP JUMPDEST SWAP3 PUSH2 0x2286 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x27E3 JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 SWAP2 DUP3 DUP6 ADD SWAP4 CALLDATASIZE DUP8 DUP4 DUP4 ADD ADD GT PUSH2 0x6F8 JUMPI DUP2 PUSH0 SWAP3 DUP9 DUP7 SWAP4 ADD DUP8 CALLDATACOPY DUP7 ADD ADD MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 PUSH32 0x0 AND DUP1 ADDRESS EQ SWAP1 DUP2 ISZERO PUSH2 0x24F5 JUMPI JUMPDEST POP PUSH2 0x21EF JUMPI PUSH2 0x22F8 PUSH2 0x2BBD JUMP JUMPDEST DUP2 AND SWAP4 PUSH1 0x40 MLOAD PUSH32 0x52D1902D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE DUP4 DUP2 PUSH1 0x4 DUP2 DUP10 GAS STATICCALL PUSH0 SWAP2 DUP2 PUSH2 0x24C6 JUMPI JUMPDEST POP PUSH2 0x2366 JUMPI DUP7 DUP7 PUSH1 0x40 MLOAD SWAP1 PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST DUP6 SWAP1 DUP8 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SWAP2 DUP3 DUP2 SUB PUSH2 0x2498 JUMPI POP DUP5 EXTCODESIZE ISZERO PUSH2 0x2469 JUMPI POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH0 DUP1 LOG2 DUP2 MLOAD ISZERO PUSH2 0x2435 JUMPI POP PUSH0 PUSH2 0x214D SWAP5 DUP2 SWAP3 MLOAD SWAP1 DUP5 GAS DELEGATECALL SWAP1 RETURNDATASIZE ISZERO PUSH2 0x242C JUMPI RETURNDATASIZE PUSH2 0x2410 DUP2 PUSH2 0x2824 JUMP JUMPDEST SWAP1 PUSH2 0x241E PUSH1 0x40 MLOAD SWAP3 DUP4 PUSH2 0x27E3 JUMP JUMPDEST DUP2 MSTORE PUSH0 DUP2 SWAP5 RETURNDATASIZE SWAP3 ADD RETURNDATACOPY PUSH2 0x2C86 JUMP JUMPDEST PUSH1 0x60 SWAP3 POP PUSH2 0x2C86 JUMP JUMPDEST SWAP4 POP POP POP POP CALLVALUE PUSH2 0x2441 JUMPI STOP JUMPDEST DUP1 PUSH32 0xB398979F00000000000000000000000000000000000000000000000000000000 PUSH1 0x4 SWAP3 MSTORE REVERT JUMPDEST DUP3 PUSH1 0x40 MLOAD SWAP1 PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH32 0xAA1D49A400000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 SWAP2 POP DUP5 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x24EE JUMPI JUMPDEST PUSH2 0x24DE DUP2 DUP4 PUSH2 0x27E3 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x6F8 JUMPI MLOAD SWAP1 DUP9 PUSH2 0x2331 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x24D4 JUMP JUMPDEST SWAP1 POP DUP2 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD AND EQ ISZERO DUP8 PUSH2 0x22EB JUMP JUMPDEST CALLVALUE PUSH2 0x6F8 JUMPI PUSH1 0x60 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x6F8 JUMPI PUSH2 0x255A PUSH2 0x2766 JUMP JUMPDEST PUSH2 0x2562 PUSH2 0x2789 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x40 MLOAD PUSH32 0x2D5E94A700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP4 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x20 SWAP5 SWAP2 SWAP3 DUP6 SWAP1 DUP5 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 DUP6 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x214F JUMPI DUP6 SWAP4 PUSH0 SWAP3 PUSH2 0x2678 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD PUSH32 0x4AA0665200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP4 DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP5 SWAP1 SWAP3 AND PUSH1 0x24 DUP6 ADD MSTORE PUSH1 0x44 DUP1 CALLDATALOAD SWAP1 DUP6 ADD MSTORE DUP4 SWAP2 DUP3 SWAP1 DUP2 PUSH1 0x64 DUP2 ADD JUMPDEST SUB SWAP3 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x214F JUMPI PUSH0 SWAP2 PUSH2 0x264B JUMPI POP PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 POP DUP2 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x2671 JUMPI JUMPDEST PUSH2 0x2662 DUP2 DUP4 PUSH2 0x27E3 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x6F8 JUMPI MLOAD DUP3 PUSH2 0x1FC6 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x2658 JUMP JUMPDEST DUP5 DUP2 SWAP6 SWAP3 SWAP4 POP RETURNDATASIZE DUP4 GT PUSH2 0x26AE JUMPI JUMPDEST PUSH2 0x2690 DUP2 DUP4 PUSH2 0x27E3 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x6F8 JUMPI PUSH2 0x2630 SWAP4 PUSH2 0x26A6 DUP7 SWAP5 PUSH2 0x28FC JUMP JUMPDEST SWAP2 SWAP1 SWAP5 PUSH2 0x25D1 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x2686 JUMP JUMPDEST CALLVALUE PUSH2 0x6F8 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x6F8 JUMPI PUSH1 0x20 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH0 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x6F8 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x6F8 JUMPI PUSH1 0x20 SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SLOAD AND DUP2 MSTORE RETURN JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x6F8 JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x6F8 JUMPI JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x6F8 JUMPI JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x143E JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x143E JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x143E JUMPI PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC PUSH1 0x80 SWAP2 ADD SLT PUSH2 0x6F8 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 PUSH1 0x4 CALLDATALOAD DUP3 DUP2 AND DUP2 SUB PUSH2 0x6F8 JUMPI SWAP2 PUSH1 0x24 CALLDATALOAD DUP2 DUP2 AND DUP2 SUB PUSH2 0x6F8 JUMPI SWAP2 PUSH1 0x44 CALLDATALOAD SWAP2 PUSH1 0x64 CALLDATALOAD SWAP1 DUP2 AND DUP2 SUB PUSH2 0x6F8 JUMPI SWAP1 JUMP JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x6F8 JUMPI DUP3 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x6F8 JUMPI PUSH1 0x20 DUP1 DUP6 ADD SWAP5 DUP5 PUSH1 0x5 SHL ADD ADD GT PUSH2 0x6F8 JUMPI JUMP JUMPDEST MLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x6F8 JUMPI JUMP JUMPDEST ISZERO PUSH2 0x2924 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E207A65726F PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST MLOAD SWAP1 DUP2 ISZERO ISZERO DUP3 SUB PUSH2 0x6F8 JUMPI JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x143E JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 DUP2 DUP5 SUB SLT PUSH2 0x6F8 JUMPI DUP1 MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x6F8 JUMPI ADD SWAP2 DUP1 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x6F8 JUMPI DUP3 MLOAD PUSH2 0x29DD DUP2 PUSH2 0x298F JUMP JUMPDEST SWAP4 PUSH2 0x29EB PUSH1 0x40 MLOAD SWAP6 DUP7 PUSH2 0x27E3 JUMP JUMPDEST DUP2 DUP6 MSTORE DUP4 DUP1 DUP7 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x6F8 JUMPI DUP4 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x2A12 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 DUP1 SWAP2 PUSH2 0x2A1E DUP5 PUSH2 0x28FC JUMP JUMPDEST DUP2 MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0x2A04 JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x2A3D JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x6F8 JUMPI DUP2 MLOAD SWAP1 PUSH1 0x20 SWAP2 PUSH2 0x2A85 DUP2 PUSH2 0x298F JUMP JUMPDEST SWAP4 PUSH2 0x2A93 PUSH1 0x40 MLOAD SWAP6 DUP7 PUSH2 0x27E3 JUMP JUMPDEST DUP2 DUP6 MSTORE PUSH1 0x20 DUP1 DUP7 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x6F8 JUMPI PUSH1 0x20 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x2ABC JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP2 MLOAD DUP2 MSTORE SWAP1 DUP4 ADD SWAP1 DUP4 ADD PUSH2 0x2AAE JUMP JUMPDEST SWAP2 SWAP1 DUP2 LT ISZERO PUSH2 0x2A3D JUMPI PUSH1 0x5 SHL ADD SWAP1 JUMP JUMPDEST CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 SUB PUSH2 0x6F8 JUMPI SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP2 AND SWAP1 DUP2 ISZERO PUSH2 0x2B8D JUMPI PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 DUP1 SLOAD SWAP1 DUP4 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP4 AND OR SWAP1 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH0 DUP1 LOG3 JUMP JUMPDEST PUSH1 0x24 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD AND CALLER SUB PUSH2 0x2BFD JUMPI JUMP JUMPDEST PUSH1 0x24 PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0xFF PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SLOAD PUSH1 0x40 SHR AND ISZERO PUSH2 0x2C5C JUMPI JUMP JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0xD7E6BCF800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST SWAP1 PUSH2 0x2CC5 JUMPI POP DUP1 MLOAD ISZERO PUSH2 0x2C9B JUMPI DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP2 MLOAD ISZERO DUP1 PUSH2 0x2D1D JUMPI JUMPDEST PUSH2 0x2CD6 JUMPI POP SWAP1 JUMP JUMPDEST PUSH1 0x24 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x40 MLOAD SWAP2 PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP4 MSTORE AND PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST POP DUP1 EXTCODESIZE ISZERO PUSH2 0x2CCE JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH0 JUMPDEST AND MSTORE PUSH8 0x37D6F82F2BCDDCDD SELFBALANCE 0xE5 PUSH30 0xDD2D559420000AE02510437AFCB8C56364736F6C63430008190033000000 ","sourceMap":"2066:9096:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3756:47;2066:9096;3756:47;;;2066:9096;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10843:33;;2066:9096;10843:33;;10865:10;2066:9096;10843:33;;2066:9096;10843:33;2066:9096;10843:33;;;;;;;;;;;;;;;2066:9096;;;;;;;;;10926:39;2066:9096;10926:39;;10865:10;;2066:9096;10865:10;;10926:39;;;;;;;;;;;2066:9096;;;;;10998:37;;10865:10;;2066:9096;10865:10;;10998:37;;;;;;;;;;;2066:9096;11047:13;;11081:3;2066:9096;;11062:17;;;;;11102:9;;11095:51;11102:9;;;;;;:::i;:::-;2066:9096;;11134:11;;;;:::i;:::-;2066:9096;;;;11095:51;;10865:10;2066:9096;11095:51;;2066:9096;;;;;;;;;;;;;11095:51;2066:9096;;;;;;;11095:51;;;;;;;;;;;11081:3;2066:9096;11081:3;;2066:9096;11047:13;;11095:51;;;;;;;;;;;;;;:::i;:::-;;;2066:9096;;;;;;;;:::i;:::-;;11095:51;;2066:9096;;;;11095:51;;;;;;2066:9096;;;;;;;;;11062:17;;2066:9096;;10998:37;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;2066:9096;;;;;;;;;10926:39;;;;;;;;;;;;;:::i;:::-;;;2066:9096;;;;;;;;;;;;;;;;;;:::i;:::-;10926:39;;;;2066:9096;;;;;;;;10926:39;2066:9096;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10843:33;;;;;;;;;;;;;;;;:::i;:::-;;;2066:9096;;;;;;;:::i;:::-;10843:33;;;;;;;;2066:9096;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;8405:9;;2066:9096;;;;;8548:46;;8568:10;2066:9096;8548:46;;2066:9096;8588:4;2066:9096;;;;;;;;;;;;;;;;;;;;;8548:46;;;;;;;;;;;;;;2066:9096;8609:18;;2066:9096;;;;;8703:31;;8568:10;2066:9096;8703:31;;2066:9096;8703:31;;2066:9096;8703:31;;;;;;;;;;;;;;;;2066:9096;8749:16;;2066:9096;;;;;8814:54;;8568:10;2066:9096;8814:54;;2066:9096;;;;;;;;;;;;;;;;;;;;;8814:54;;;;;;;;;;;;;2066:9096;;;;;8919:41;;;;;;;;2066:9096;;;;;;8919:41;;;;;2066:9096;8919:41;;2066:9096;;8919:41;;2066:9096;8919:41;;;;;;;;2066:9096;;8919:41;;;;:::i;:::-;2066:9096;;8919:41;2066:9096;8919:41;2066:9096;;;;;;;;;8919:41;2066:9096;;;;;;;;;;;;;;;;;;;;;;;;;;;;8814:54;;;;;;;;;;;;;;;;:::i;:::-;;;2066:9096;;;;;;;:::i;:::-;8814:54;;;;;;;;;2066:9096;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8703:31;;;;;;;;;;;;;;;;;;:::i;:::-;;;2066:9096;;;;;;;8703:31;;;2066:9096;;;;8703:31;;;;;;2066:9096;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8548:46;;;;;;;;;;;;;;;;;;:::i;:::-;;;2066:9096;;;;;;;8548:46;;;;;;;;2066:9096;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2357:1:0;2066:9096:17;;:::i;:::-;2303:62:0;;:::i;:::-;2357:1;:::i;:::-;2066:9096:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;7833:16;2066:9096;7833:16;;;;2066:9096;7833:16;;;;;;;;;;;;;2066:9096;7893:13;;7927:3;2066:9096;;7908:17;;;;;7957:9;;;;;:::i;:::-;2066:9096;;8011:61;7992:10;;;;;:::i;:::-;2066:9096;;;8011:61;;8038:10;2066:9096;8011:61;;2066:9096;8058:4;2066:9096;;;;;;;;;;;;;;;;;;;;;;;;;;;;8011:61;;;;;;;;;;;7927:3;;;2066:9096;;7893:13;;8011:61;;;;;;;;;;;;;:::i;:::-;;;2066:9096;;;;;;;;;:::i;:::-;;8011:61;;;;2066:9096;;;;8011:61;;;;;;2066:9096;;;;;;;;;7908:17;2066:9096;;;8088:19;;2066:9096;;;;8088:19;;2066:9096;7908:17;;2066:9096;;;;7908:17;;8088:19;;;;;;;;2066:9096;;;8088:19;2066:9096;8088:19;;;;;;;;;;;;:::i;:::-;;;2066:9096;;;;;;8088:19;;;;;7833:16;;;;;;;;;;;;;;:::i;:::-;;;;;2066:9096;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;4823:36;;;;:73;;;2066:9096;4823:111;;;2066:9096;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;5065:13;5060:728;5080:21;;;;;;2066:9096;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2066:9096:17;;;;;;;;;;;;;5103:3;5125:10;;2066:9096;5245:73;2066:9096;5125:10;;;;;;;;;5252:13;5125:10;5117:59;5125:10;5252:13;5125:10;;;;;;:::i;:::-;2066:9096;5125:14;;5117:59;:::i;:::-;5252:13;:::i;:::-;;:::i;:::-;2066:9096;5307:10;;;;;:::i;:::-;2066:9096;;;5245:73;;5280:10;2066:9096;5245:73;;2066:9096;5300:4;2066:9096;;;;;;;;;;;;;;;5245:73;2066:9096;;;;;;;5245:73;;;;;;;;;;;;;;;;;;;5103:3;2066:9096;5446:11;2066:9096;5431:13;;5403:55;2066:9096;;;;;;5446:11;2066:9096;;;5431:13;;:::i;:::-;5446:11;;;:::i;:::-;2066:9096;;;5403:55;;2066:9096;;;;;5403:55;;2066:9096;;;;;;;;;;;-1:-1:-1;2066:9096:17;;;;;;;;;5403:55;;;;;;;;;;;;;;;;;;;5103:3;5578:13;;;2066:9096;5578:13;5571:54;5578:13;2066:9096;5578:13;;:::i;:::-;2066:9096;5614:10;;;;;:::i;:::-;2066:9096;;;5571:54;;2066:9096;;;;5571:54;;2066:9096;;;;;;;;;;;;5571:54;2066:9096;;;;;;;5571:54;;;;;;;;;;;;;;;5103:3;5693:13;;;;:::i;:::-;;;;:::i;:::-;5708:11;;;;;;:::i;:::-;;;;:::i;:::-;5721:10;;;;;:::i;:::-;2066:9096;5733:12;;;;;;:::i;:::-;;;;:::i;:::-;2066:9096;;;5683:63;;2066:9096;;;;;5683:63;;2066:9096;;;;;;;;;;;;;;;;;;;;;;;;;;;5683:63;;;2066:9096;5683:63;;;;;;;;;;;5103:3;5755:25;;2066:9096;5755:25;;;;;:::i;:::-;2066:9096;;5065:13;;;;;;;;;5683:63;;;;;2066:9096;5683:63;;2066:9096;5683:63;;;;;;2066:9096;5683:63;;;:::i;:::-;;;2066:9096;;;;;;;;;5683:63;;;;;-1:-1:-1;5683:63:17;;;2066:9096;;;;;;;;;5571:54;;;;2066:9096;5571:54;;2066:9096;5571:54;;;;;;2066:9096;5571:54;;;:::i;:::-;;;2066:9096;;;;;;;;5693:13;2066:9096;;:::i;:::-;;5571:54;;2066:9096;;;;5571:54;;;-1:-1:-1;5571:54:17;;;2066:9096;;;;;;;;;5403:55;;;;;;;2066:9096;5403:55;;2066:9096;5403:55;;;;;;2066:9096;5403:55;;;:::i;:::-;;;2066:9096;;;;;;5571:54;2066:9096;;;5578:13;2066:9096;;;5578:13;2066:9096;;:::i;:::-;5403:55;;;;;;;;;;2066:9096;;;;5403:55;;;-1:-1:-1;5403:55:17;;5245:73;;;;;;;2066:9096;5245:73;;2066:9096;5245:73;;;;;;2066:9096;5245:73;;;:::i;:::-;;;2066:9096;;;;;;;5446:11;;2066:9096;5431:13;2066:9096;;;;5431:13;2066:9096;;5403:55;2066:9096;;:::i;:::-;;5245:73;;;;;;;;;;;;;;;;;-1:-1:-1;5245:73:17;;2066:9096;;;;;;;;;;;;;;;;;;;;;;;4823:111;4900:34;;;;4823:111;;:73;4863:33;;;;4823:73;;2066:9096;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8837:64:1;2066:9096:17;;;;;;;;4301:16:1;2066:9096:17;;;;4726:16:1;;:34;;;;2066:9096:17;4805:1:1;4790:16;:50;;;;2066:9096:17;4855:13:1;:30;;;;2066:9096:17;4851:91:1;;;2066:9096:17;;4805:1:1;2066:9096:17;;;;;;;4979:67:1;;2066:9096:17;6893:76:1;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;6961:1;2478:10:17;6961:1:1;:::i;:::-;2066:9096:17;;;;;;;;5066:101:1;;2066:9096:17;;;5066:101:1;2066:9096:17;;;;;;5142:14:1;2066:9096:17;;;4805:1:1;2066:9096:17;;5142:14:1;2066:9096:17;;4979:67:1;2066:9096:17;;;;;;4979:67:1;;;4851:91;2066:9096:17;;;4908:23:1;;;;4855:30;4872:13;;;4855:30;;;4790:50;4818:4;4810:25;:30;;-1:-1:-1;4790:50:1;;4726:34;;;-1:-1:-1;4726:34:1;;2066:9096:17;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;10218:34;;;;;2066:9096;10218:34;;2066:9096;;10218:34;;2066:9096;10218:34;;;;;;;;;;;2066:9096;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10218:34;;;;;;;;;;;;;;:::i;:::-;;;;;;2066:9096;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;8837:64:1;2066:9096:17;;;;;;;;;6431:44:1;;;;;2066:9096:17;6427:105:1;;;;2066:9096:17;;;;6656:20:1;2066:9096:17;;;;;;;;;;;;;;;;;;;;;;;6656:20:1;2066:9096:17;;6431:44:1;2066:9096:17;;6450:25:1;;;-1:-1:-1;6431:44:1;;;;2066:9096:17;;;;;;;;;;;;;;1280:65:0;2066:9096:17;;;;;;;;;;;;;;;;;:::i;:::-;5948:55;5956:10;;;;;;;5948:55;:::i;:::-;2066:9096;;;;;;;6086:38;;;;2066:9096;6086:38;;2066:9096;;;;6086:38;;2066:9096;6086:38;;;;;;;;;;;2066:9096;-1:-1:-1;6163:23:17;;;;;;;;6381:3;2066:9096;;6359:20;;;;;2066:9096;6430:12;;;;:::i;:::-;2066:9096;;;;;6510:19;2066:9096;6510:19;;;;2066:9096;6510:19;;;;;;;;;;;;;6381:3;2066:9096;;;;;;;;;;6594:28;;;;2066:9096;6594:28;;;;;;;;;2066:9096;6594:28;;;6381:3;6725:13;;6763:3;2066:9096;;;6740:21;;;;;2066:9096;;;;;6783:18;;;;2066:9096;6783:18;;;2066:9096;6783:18;;2066:9096;6783:18;;;;;;;;;;6763:3;2066:9096;;;;;;;;6783:37;6779:285;;6763:3;2066:9096;;6725:13;;6779:285;6860:13;;;;:::i;:::-;2066:9096;6890:13;;;;:::i;:::-;2066:9096;;;6890:52;;;6779:285;6886:167;;6779:285;;;;6886:167;6959:35;-1:-1:-1;6959:35:17;-1:-1:-1;2066:9096:17;;7027:12;;;;:::i;:::-;2066:9096;;6886:167;;;;6890:52;6907:35;;;;6890:52;;6783:18;;;2066:9096;6783:18;;2066:9096;6783:18;;;;;;2066:9096;6783:18;;;:::i;:::-;;;2066:9096;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;6783:18;;;2066:9096;;;;6783:18;;;-1:-1:-1;6783:18:17;;;2066:9096;;;;;;;;;;6740:21;-1:-1:-1;6740:21:17;;-1:-1:-1;6740:21:17;-1:-1:-1;6740:21:17;2066:9096;;;6740:21;-1:-1:-1;6344:13:17;;-1:-1:-1;6344:13:17;6594:28;;;;;;;;;;;;;:::i;:::-;;;2066:9096;;;;;;;;;;;;;;;;;;;;:::i;:::-;6594:28;;;;2066:9096;;;;6594:28;2066:9096;;;;;;;;;6510:19;;;;;;;;;;;;;;;:::i;:::-;2066:9096;6510:19;;;;2066:9096;;;;;;;;;;;;;;;;6510:19;;;;2066:9096;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;6510:19;;;;2066:9096;;;;;;;;;;;;;;;;;;;;;;;;;;;;6510:19;2066:9096;6510:19;;;2066:9096;;;:::i;:::-;;6510:19;;;;;2066:9096;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;6510:19;2066:9096;;;;;;;;;6359:20;;;;;;2066:9096;;;7096:29;2066:9096;;;;;7265:65;;7296:10;2066:9096;7265:65;;2066:9096;7316:4;2066:9096;;;;;;;;;;;;;;;;;;7265:65;;;;;;;;6339:741;-1:-1:-1;2066:9096:17;;;7337:50;;2066:9096;;;;7337:50;;2066:9096;;;;;;;;;;;;;7337:50;2066:9096;;;;;7337:50;;;;;;;;6339:741;-1:-1:-1;2066:9096:17;;;7419:51;;2066:9096;;;;;7419:51;;2066:9096;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7419:51;;;;;;;;;;6339:741;2066:9096;;;;;;;;7419:51;;2066:9096;7419:51;;2066:9096;7419:51;;;;;;2066:9096;7419:51;;;:::i;:::-;;;2066:9096;;;;;;;7419:51;;;;;-1:-1:-1;7419:51:17;;7337:50;2066:9096;7337:50;;2066:9096;7337:50;;;;;;2066:9096;7337:50;;;:::i;:::-;;;2066:9096;;;;;;;;;;;;;:::i;:::-;;7337:50;;;;;;;;;;-1:-1:-1;7337:50:17;;7265:65;2066:9096;7265:65;;2066:9096;7265:65;;;;;;2066:9096;7265:65;;;:::i;:::-;;;2066:9096;;;;;;;:::i;:::-;;7265:65;;;;;;-1:-1:-1;7265:65:17;;2066:9096;;;;;;;;;;;;;;;;;;;;;;;6086:38;;;;;;;;;;;;;;:::i;:::-;;;;;2066:9096;;;;;;;;;;;;;;;:::i;:::-;2303:62:0;;:::i;:::-;2066:9096:17;;;;;;;;;;;;;;;;;;;;;;2303:62:0;;:::i;:::-;2066:9096:17;;1280:65:0;2066:9096:17;;;;;;;;;3975:40:0;;;;2066:9096:17;;;;;;;;;;:::i;:::-;3628:10;3620:55;3628:10;;;;;;3620:55;:::i;:::-;2066:9096;;;;;3756:47;;2066:9096;;;;;3756:47;;2066:9096;;;;;;;;3756:47;;2066:9096;;;;;;3756:47;;2066:9096;;;;;;;;3756:47;;;;;;;;;;;2066:9096;-1:-1:-1;2066:9096:17;;;3866:65;;3897:10;2066:9096;3866:65;;2066:9096;3917:4;2066:9096;;;;;;;;;;;;;;3917:4;2066:9096;;;3866:65;2066:9096;3866:65;;;;;;;;2066:9096;-1:-1:-1;2066:9096:17;;;3938:46;;2066:9096;;;;3938:46;;2066:9096;;;;;;;;;;;;;;;;3938:46;;;;;;;;;;;;;;;;;;;2066:9096;-1:-1:-1;2066:9096:17;;;4013:47;;2066:9096;;;;;4013:47;;2066:9096;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4013:47;;;;;;;;;;2066:9096;;;;;;;;4013:47;;;;;;;;;;;;;;;;:::i;:::-;;;2066:9096;;;;;4013:47;;;;;;;;3938:46;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;2066:9096;;;;;;;;;;;;;;:::i;:::-;;3938:46;;;;;;;;3866:65;;;;;;;;;;;;;;:::i;:::-;;;2066:9096;;;;;;;:::i;:::-;;3866:65;;;;;;;;3756:47;;;;;;;;;;;;;;;;;:::i;:::-;;;2066:9096;;;;;;;:::i;:::-;3756:47;;;;;;;;;2066:9096;;;;;;;;;;;;;;;:::i;:::-;;9871:41;;;;;2066:9096;;;;;;9871:41;;;;2066:9096;9871:41;;9901:10;2066:9096;9871:41;;2066:9096;9871:41;;;;;;;;2066:9096;;;9871:41;;;;;:::i;:::-;2066:9096;9871:41;2066:9096;;;;;;;;;;;;;;;;;;;;;5111:6:2;2066:9096:17;5102:4:2;5094:23;5090:145;;2066:9096:17;;;1327:66:6;2066:9096:17;;;5090:145:2;2066:9096:17;;;5195:29:2;;;;2066:9096:17;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4688:6:2;;2066:9096:17;4679:4:2;;4671:23;:120;;;;;2066:9096:17;4654:251:2;;;2303:62:0;;:::i;:::-;2066:9096:17;;;;;;6151:52:2;;;;2066:9096:17;6151:52:2;;;;2066:9096:17;;6151:52:2;;;2066:9096:17;-1:-1:-1;6147:437:2;;2066:9096:17;;;;6513:60:2;;;;2066:9096:17;6513:60:2;;2066:9096:17;6513:60:2;6147:437;1327:66:6;;;;6245:40:2;;;;6241:120;;2263:29:6;;;:34;2259:119;;2066:9096:17;;;;;;;;;;;2922:27:6;;2066:9096:17;2922:27:6;;2066:9096:17;;2964:15:6;:11;;4255:25:11;2066:9096:17;4297:55:11;4255:25;;;;;;;;;2066:9096:17;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;4297:55:11;:::i;2066:9096:17:-;;;-1:-1:-1;4297:55:11;:::i;2960:148:6:-;6648:9;;;;;;6644:70;;2066:9096:17;6644:70:6;6684:19;;2066:9096:17;6684:19:6;;;2259:119;2066:9096:17;;;2320:47:6;;;;2066:9096:17;2320:47:6;;2066:9096:17;2320:47:6;6241:120:2;2066:9096:17;;6312:34:2;;;;2066:9096:17;6312:34:2;;2066:9096:17;6312:34:2;6151:52;;;;;;;;;;;;;;;;;:::i;:::-;;;2066:9096:17;;;;;6151:52:2;;;;;;;;;4671:120;2066:9096:17;;;1327:66:6;2066:9096:17;;4749:42:2;;4671:120;;;2066:9096:17;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;9429:47;;2066:9096;;;;;9429:47;;2066:9096;;;;;;;;;;;;;;;;;;;;;;9429:47;;;;;;;;;2066:9096;9429:47;;;2066:9096;-1:-1:-1;2066:9096:17;;;9544:45;;2066:9096;;;;;9544:45;;2066:9096;;;;;;;;;;;;;;;;;;;;;;;;9544:45;;2066:9096;;9544:45;;;;;;;2066:9096;9544:45;;;2066:9096;;;;;;;9544:45;;;;;;;;;;;;;;;;:::i;:::-;;;2066:9096;;;;;9544:45;;;;;;;;9429:47;;;;;;;;;;;;;;;;;:::i;:::-;;;2066:9096;;;;9544:45;2066:9096;;;;;:::i;:::-;9429:47;;;;;;;;;;2066:9096;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8837:64:1;2066:9096:17;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;3405:215:0:-;2066:9096:17;;;;3489:22:0;;;3485:91;;1280:65;2066:9096:17;;;;;;;;;;;3975:40:0;-1:-1:-1;3975:40:0;;3405:215::o;3485:91::-;2066:9096:17;;;3534:31:0;;;3509:1;3534:31;;;2066:9096:17;3534:31:0;2658:162;2066:9096:17;1280:65:0;2066:9096:17;;966:10:3;2717:23:0;2713:101;;2658:162::o;2713:101::-;2066:9096:17;;;2763:40:0;;;966:10:3;2763:40:0;;;2066:9096:17;2763:40:0;7084:141:1;2066:9096:17;8837:64:1;2066:9096:17;;;;7150:18:1;7146:73;;7084:141::o;7146:73::-;7191:17;2066:9096:17;;7191:17:1;;;;4625:582:11;;4797:8;;-1:-1:-1;2066:9096:17;;5874:21:11;:17;;6046:142;;;;;;5870:383;6225:17;2066:9096:17;;6225:17:11;;;;4793:408;2066:9096:17;;5045:22:11;:49;;;4793:408;5041:119;;5173:17;;:::o;5041:119::-;2066:9096:17;;;;;5121:24:11;;;;2066:9096:17;5121:24:11;;;2066:9096:17;5121:24:11;5045:49;5071:18;;;:23;5045:49;"},"gasEstimates":{"creation":{"codeDepositCost":"2322400","executionCost":"infinite","totalCost":"infinite"},"external":{"UPGRADE_INTERFACE_VERSION()":"618","addLiquidity(uint256[],address,address)":"infinite","batchSwap(address[],address[],uint256[],address[])":"infinite","changePoolFactory(address)":"26744","getAmountOut(address,address,uint256)":"infinite","getPoolsContainingToken(address)":"infinite","getVersion()":"2256","initialize(address)":"infinite","owner()":"2487","performRebalanceIfNeeded(address)":"infinite","poolFactory()":"2285","proxiableUUID()":"infinite","reinitialize(address,uint64)":"50072","removeLiquidity(uint256,address,address)":"infinite","renounceOwnership()":"28180","smartSwap(address,address,uint256,address)":"infinite","swap(address,address,uint256,address)":"infinite","transferOwnership(address)":"28519","transferToPool()":"infinite","upgradeToAndCall(address,bytes)":"infinite"},"internal":{"_authorizeUpgrade(address)":"infinite"}},"methodIdentifiers":{"UPGRADE_INTERFACE_VERSION()":"ad3cb1cc","addLiquidity(uint256[],address,address)":"ec0cd2eb","batchSwap(address[],address[],uint256[],address[])":"e74e9b06","changePoolFactory(address)":"72591be5","getAmountOut(address,address,uint256)":"4aa06652","getPoolsContainingToken(address)":"ae3cce1c","getVersion()":"0d8e6e2c","initialize(address)":"c4d66de8","owner()":"8da5cb5b","performRebalanceIfNeeded(address)":"5568081a","poolFactory()":"4219dc40","proxiableUUID()":"52d1902d","reinitialize(address,uint64)":"8f2248bc","removeLiquidity(uint256,address,address)":"f31abcc4","renounceOwnership()":"715018a6","smartSwap(address,address,uint256,address)":"7442eca6","swap(address,address,uint256,address)":"6e81221c","transferOwnership(address)":"f2fde38b","transferToPool()":"fe110116","upgradeToAndCall(address,bytes)":"4f1ef286"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"poolAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"fromTokens\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"toTokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"receivers\",\"type\":\"address[]\"}],\"name\":\"batchSwap\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_poolFactory\",\"type\":\"address\"}],\"name\":\"changePoolFactory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"toToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"getAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getPoolsContainingToken\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVersion\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_poolFactory\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"poolAddress\",\"type\":\"address\"}],\"name\":\"performRebalanceIfNeeded\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolFactory\",\"outputs\":[{\"internalType\":\"contract IBaluniV1PoolFactory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_poolFactory\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"reinitialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"share\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"poolAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"removeLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"toToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"smartSwap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"toToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"transferToPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This contract serves as the periphery contract for interacting with BaluniV1Pool contracts. It provides functions for swapping tokens, adding liquidity, removing liquidity, and getting the amount out for a given swap.\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"addLiquidity(uint256[],address,address)\":{\"details\":\"Adds liquidity to a BaluniV1Pool.\",\"params\":{\"amounts\":\"An array of amounts for each asset to add as liquidity.\"}},\"batchSwap(address[],address[],uint256[],address[])\":{\"details\":\"Performs batch swaps between multiple token pairs.\",\"params\":{\"amounts\":\"An array of amounts representing the amounts to swap.\",\"fromTokens\":\"An array of addresses representing the tokens to swap from.\",\"receivers\":\"An array of addresses representing the receivers of the swapped tokens.\",\"toTokens\":\"An array of addresses representing the tokens to swap to.\"},\"returns\":{\"_0\":\"An array of amounts representing the amounts of tokens received after the swaps.\"}},\"changePoolFactory(address)\":{\"details\":\"Changes the address of the pool factory contract. Can only be called by the contract owner.\",\"params\":{\"_poolFactory\":\"The new address of the pool factory contract.\"}},\"getAmountOut(address,address,uint256)\":{\"details\":\"Gets the amount of tokens received after a swap in a BaluniV1Pool.\",\"params\":{\"amount\":\"The amount of tokens to swap.\",\"fromToken\":\"The address of the token to swap from.\",\"toToken\":\"The address of the token to swap to.\"},\"returns\":{\"_0\":\"The amount of tokens received after the swap.\"}},\"getPoolsContainingToken(address)\":{\"details\":\"Returns an array of pool addresses that contain the given token.\",\"params\":{\"token\":\"The address of the token to search for.\"},\"returns\":{\"_0\":\"An array of pool addresses.\"}},\"getVersion()\":{\"details\":\"Returns the version of the contract.\",\"returns\":{\"_0\":\"The version string.\"}},\"initialize(address)\":{\"details\":\"Initializes the contract by setting the pool factory address.\",\"params\":{\"_poolFactory\":\"The address of the BaluniV1PoolFactory contract.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"performRebalanceIfNeeded(address)\":{\"details\":\"Performs rebalance if needed for the given tokens.\",\"params\":{\"poolAddress\":\"The address of the token pool to rebalance.\"}},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"reinitialize(address,uint64)\":{\"details\":\"Initializes the contract by setting the pool factory address.\",\"params\":{\"_poolFactory\":\"The address of the BaluniV1PoolFactory contract.\"}},\"removeLiquidity(uint256,address,address)\":{\"details\":\"Removes liquidity from a BaluniV1Pool.\",\"params\":{\"poolAddress\":\"The address of the BaluniV1Pool.\",\"share\":\"The amount of liquidity tokens to remove.\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"swap(address,address,uint256,address)\":{\"details\":\"Swaps tokens in a BaluniV1Pool.\",\"params\":{\"amount\":\"The amount of tokens to swap.\",\"fromToken\":\"The address of the token to swap from.\",\"toToken\":\"The address of the token to swap to.\"},\"returns\":{\"_0\":\"The amount of tokens received after the swap.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"title\":\"BaluniV1PoolPeriphery\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BaluniV1PoolPeriphery.sol\":\"BaluniV1PoolPeriphery\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":80000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {ContextUpgradeable} from \\\"../utils/ContextUpgradeable.sol\\\";\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\\n    /// @custom:storage-location erc7201:openzeppelin.storage.Ownable\\n    struct OwnableStorage {\\n        address _owner;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.Ownable\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant OwnableStorageLocation = 0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300;\\n\\n    function _getOwnableStorage() private pure returns (OwnableStorage storage $) {\\n        assembly {\\n            $.slot := OwnableStorageLocation\\n        }\\n    }\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    function __Ownable_init(address initialOwner) internal onlyInitializing {\\n        __Ownable_init_unchained(initialOwner);\\n    }\\n\\n    function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        OwnableStorage storage $ = _getOwnableStorage();\\n        return $._owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        OwnableStorage storage $ = _getOwnableStorage();\\n        address oldOwner = $._owner;\\n        $._owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Storage of the initializable contract.\\n     *\\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\\n     * when using with upgradeable contracts.\\n     *\\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\\n     */\\n    struct InitializableStorage {\\n        /**\\n         * @dev Indicates that the contract has been initialized.\\n         */\\n        uint64 _initialized;\\n        /**\\n         * @dev Indicates that the contract is in the process of being initialized.\\n         */\\n        bool _initializing;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.Initializable\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\\n\\n    /**\\n     * @dev The contract is already initialized.\\n     */\\n    error InvalidInitialization();\\n\\n    /**\\n     * @dev The contract is not initializing.\\n     */\\n    error NotInitializing();\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint64 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\\n     * production.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        // Cache values to avoid duplicated sloads\\n        bool isTopLevelCall = !$._initializing;\\n        uint64 initialized = $._initialized;\\n\\n        // Allowed calls:\\n        // - initialSetup: the contract is not in the initializing state and no previous version was\\n        //                 initialized\\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\\n        //                 current contract is just being deployed\\n        bool initialSetup = initialized == 0 && isTopLevelCall;\\n        bool construction = initialized == 1 && address(this).code.length == 0;\\n\\n        if (!initialSetup && !construction) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = 1;\\n        if (isTopLevelCall) {\\n            $._initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            $._initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint64 version) {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing || $._initialized >= version) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = version;\\n        $._initializing = true;\\n        _;\\n        $._initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        _checkInitializing();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\\n     */\\n    function _checkInitializing() internal view virtual {\\n        if (!_isInitializing()) {\\n            revert NotInitializing();\\n        }\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing) {\\n            revert InvalidInitialization();\\n        }\\n        if ($._initialized != type(uint64).max) {\\n            $._initialized = type(uint64).max;\\n            emit Initialized(type(uint64).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint64) {\\n        return _getInitializableStorage()._initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _getInitializableStorage()._initializing;\\n    }\\n\\n    /**\\n     * @dev Returns a pointer to the storage namespace.\\n     */\\n    // solhint-disable-next-line var-name-mixedcase\\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\\n        assembly {\\n            $.slot := INITIALIZABLE_STORAGE\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/UUPSUpgradeable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC1822Proxiable} from \\\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\\\";\\nimport {ERC1967Utils} from \\\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\\\";\\nimport {Initializable} from \\\"./Initializable.sol\\\";\\n\\n/**\\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\\n *\\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\\n * `UUPSUpgradeable` with a custom implementation of upgrades.\\n *\\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\\n */\\nabstract contract UUPSUpgradeable is Initializable, IERC1822Proxiable {\\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable\\n    address private immutable __self = address(this);\\n\\n    /**\\n     * @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\\n     * and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\\n     * while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\\n     * If the getter returns `\\\"5.0.0\\\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\\n     * be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\\n     * during an upgrade.\\n     */\\n    string public constant UPGRADE_INTERFACE_VERSION = \\\"5.0.0\\\";\\n\\n    /**\\n     * @dev The call is from an unauthorized context.\\n     */\\n    error UUPSUnauthorizedCallContext();\\n\\n    /**\\n     * @dev The storage `slot` is unsupported as a UUID.\\n     */\\n    error UUPSUnsupportedProxiableUUID(bytes32 slot);\\n\\n    /**\\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\\n     * a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\\n     * function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\\n     * fail.\\n     */\\n    modifier onlyProxy() {\\n        _checkProxy();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\\n     * callable on the implementing contract but not through proxies.\\n     */\\n    modifier notDelegated() {\\n        _checkNotDelegated();\\n        _;\\n    }\\n\\n    function __UUPSUpgradeable_init() internal onlyInitializing {\\n    }\\n\\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\\n    }\\n    /**\\n     * @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\\n     */\\n    function proxiableUUID() external view virtual notDelegated returns (bytes32) {\\n        return ERC1967Utils.IMPLEMENTATION_SLOT;\\n    }\\n\\n    /**\\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\\n     * encoded in `data`.\\n     *\\n     * Calls {_authorizeUpgrade}.\\n     *\\n     * Emits an {Upgraded} event.\\n     *\\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\\n     */\\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {\\n        _authorizeUpgrade(newImplementation);\\n        _upgradeToAndCallUUPS(newImplementation, data);\\n    }\\n\\n    /**\\n     * @dev Reverts if the execution is not performed via delegatecall or the execution\\n     * context is not of a proxy with an ERC1967-compliant implementation pointing to self.\\n     * See {_onlyProxy}.\\n     */\\n    function _checkProxy() internal view virtual {\\n        if (\\n            address(this) == __self || // Must be called through delegatecall\\n            ERC1967Utils.getImplementation() != __self // Must be called through an active proxy\\n        ) {\\n            revert UUPSUnauthorizedCallContext();\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts if the execution is performed via delegatecall.\\n     * See {notDelegated}.\\n     */\\n    function _checkNotDelegated() internal view virtual {\\n        if (address(this) != __self) {\\n            // Must not be called through delegatecall\\n            revert UUPSUnauthorizedCallContext();\\n        }\\n    }\\n\\n    /**\\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\\n     * {upgradeToAndCall}.\\n     *\\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\\n     *\\n     * ```solidity\\n     * function _authorizeUpgrade(address) internal onlyOwner {}\\n     * ```\\n     */\\n    function _authorizeUpgrade(address newImplementation) internal virtual;\\n\\n    /**\\n     * @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\\n     *\\n     * As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\\n     * is expected to be the implementation slot in ERC1967.\\n     *\\n     * Emits an {IERC1967-Upgraded} event.\\n     */\\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {\\n        try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\\n            if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {\\n                revert UUPSUnsupportedProxiableUUID(slot);\\n            }\\n            ERC1967Utils.upgradeToAndCall(newImplementation, data);\\n        } catch {\\n            // The implementation is not UUPS\\n            revert ERC1967Utils.ERC1967InvalidImplementation(newImplementation);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x3f13b947637c4969c0644cab4ef399cdc4b67f101463b8775c5a43b118558e53\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC1822.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\\n * proxy whose upgrades are fully controlled by the current implementation.\\n */\\ninterface IERC1822Proxiable {\\n    /**\\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\\n     * address.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy.\\n     */\\n    function proxiableUUID() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/ERC1967/ERC1967Utils.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IBeacon} from \\\"../beacon/IBeacon.sol\\\";\\nimport {Address} from \\\"../../utils/Address.sol\\\";\\nimport {StorageSlot} from \\\"../../utils/StorageSlot.sol\\\";\\n\\n/**\\n * @dev This abstract contract provides getters and event emitting update functions for\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\\n */\\nlibrary ERC1967Utils {\\n    // We re-declare ERC-1967 events here because they can't be used directly from IERC1967.\\n    // This will be fixed in Solidity 0.8.21. At that point we should remove these events.\\n    /**\\n     * @dev Emitted when the implementation is upgraded.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Emitted when the admin account has changed.\\n     */\\n    event AdminChanged(address previousAdmin, address newAdmin);\\n\\n    /**\\n     * @dev Emitted when the beacon is changed.\\n     */\\n    event BeaconUpgraded(address indexed beacon);\\n\\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /**\\n     * @dev The `implementation` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidImplementation(address implementation);\\n\\n    /**\\n     * @dev The `admin` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidAdmin(address admin);\\n\\n    /**\\n     * @dev The `beacon` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidBeacon(address beacon);\\n\\n    /**\\n     * @dev An upgrade function sees `msg.value > 0` that may be lost.\\n     */\\n    error ERC1967NonPayable();\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function getImplementation() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 implementation slot.\\n     */\\n    function _setImplementation(address newImplementation) private {\\n        if (newImplementation.code.length == 0) {\\n            revert ERC1967InvalidImplementation(newImplementation);\\n        }\\n        StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation;\\n    }\\n\\n    /**\\n     * @dev Performs implementation upgrade with additional setup call if data is nonempty.\\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\\n     * to avoid stuck value in the contract.\\n     *\\n     * Emits an {IERC1967-Upgraded} event.\\n     */\\n    function upgradeToAndCall(address newImplementation, bytes memory data) internal {\\n        _setImplementation(newImplementation);\\n        emit Upgraded(newImplementation);\\n\\n        if (data.length > 0) {\\n            Address.functionDelegateCall(newImplementation, data);\\n        } else {\\n            _checkNonPayable();\\n        }\\n    }\\n\\n    /**\\n     * @dev Storage slot with the admin of the contract.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n\\n    /**\\n     * @dev Returns the current admin.\\n     *\\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using\\n     * the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\\n     */\\n    function getAdmin() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(ADMIN_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 admin slot.\\n     */\\n    function _setAdmin(address newAdmin) private {\\n        if (newAdmin == address(0)) {\\n            revert ERC1967InvalidAdmin(address(0));\\n        }\\n        StorageSlot.getAddressSlot(ADMIN_SLOT).value = newAdmin;\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {IERC1967-AdminChanged} event.\\n     */\\n    function changeAdmin(address newAdmin) internal {\\n        emit AdminChanged(getAdmin(), newAdmin);\\n        _setAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.beacon\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\\n\\n    /**\\n     * @dev Returns the current beacon.\\n     */\\n    function getBeacon() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(BEACON_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\\n     */\\n    function _setBeacon(address newBeacon) private {\\n        if (newBeacon.code.length == 0) {\\n            revert ERC1967InvalidBeacon(newBeacon);\\n        }\\n\\n        StorageSlot.getAddressSlot(BEACON_SLOT).value = newBeacon;\\n\\n        address beaconImplementation = IBeacon(newBeacon).implementation();\\n        if (beaconImplementation.code.length == 0) {\\n            revert ERC1967InvalidImplementation(beaconImplementation);\\n        }\\n    }\\n\\n    /**\\n     * @dev Change the beacon and trigger a setup call if data is nonempty.\\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\\n     * to avoid stuck value in the contract.\\n     *\\n     * Emits an {IERC1967-BeaconUpgraded} event.\\n     *\\n     * CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\\n     * it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\\n     * efficiency.\\n     */\\n    function upgradeBeaconToAndCall(address newBeacon, bytes memory data) internal {\\n        _setBeacon(newBeacon);\\n        emit BeaconUpgraded(newBeacon);\\n\\n        if (data.length > 0) {\\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\\n        } else {\\n            _checkNonPayable();\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\\n     * if an upgrade doesn't perform an initialization call.\\n     */\\n    function _checkNonPayable() private {\\n        if (msg.value > 0) {\\n            revert ERC1967NonPayable();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeacon {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {UpgradeableBeacon} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"./IERC20.sol\\\";\\nimport {IERC20Metadata} from \\\"./extensions/IERC20Metadata.sol\\\";\\nimport {Context} from \\\"../../utils/Context.sol\\\";\\nimport {IERC20Errors} from \\\"../../interfaces/draft-IERC6093.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n */\\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\\n    mapping(address account => uint256) private _balances;\\n\\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `value`.\\n     */\\n    function transfer(address to, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `value`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `value`.\\n     */\\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, value);\\n        _transfer(from, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _transfer(address from, address to, uint256 value) internal {\\n        if (from == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        if (to == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\\n     * this function.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _update(address from, address to, uint256 value) internal virtual {\\n        if (from == address(0)) {\\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\\n            _totalSupply += value;\\n        } else {\\n            uint256 fromBalance = _balances[from];\\n            if (fromBalance < value) {\\n                revert ERC20InsufficientBalance(from, fromBalance, value);\\n            }\\n            unchecked {\\n                // Overflow not possible: value <= fromBalance <= totalSupply.\\n                _balances[from] = fromBalance - value;\\n            }\\n        }\\n\\n        if (to == address(0)) {\\n            unchecked {\\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\\n                _totalSupply -= value;\\n            }\\n        } else {\\n            unchecked {\\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\\n                _balances[to] += value;\\n            }\\n        }\\n\\n        emit Transfer(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\\n     * Relies on the `_update` mechanism\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _mint(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(address(0), account, value);\\n    }\\n\\n    /**\\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\\n     * Relies on the `_update` mechanism.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead\\n     */\\n    function _burn(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        _update(account, address(0), value);\\n    }\\n\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     *\\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\\n     */\\n    function _approve(address owner, address spender, uint256 value) internal {\\n        _approve(owner, spender, value, true);\\n    }\\n\\n    /**\\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\\n     *\\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\\n     * `Approval` event during `transferFrom` operations.\\n     *\\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\\n     * true using the following override:\\n     * ```\\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\\n     *     super._approve(owner, spender, value, true);\\n     * }\\n     * ```\\n     *\\n     * Requirements are the same as {_approve}.\\n     */\\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\\n        if (owner == address(0)) {\\n            revert ERC20InvalidApprover(address(0));\\n        }\\n        if (spender == address(0)) {\\n            revert ERC20InvalidSpender(address(0));\\n        }\\n        _allowances[owner][spender] = value;\\n        if (emitEvent) {\\n            emit Approval(owner, spender, value);\\n        }\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\\n     *\\n     * Does not update the allowance value in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Does not emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            if (currentAllowance < value) {\\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\\n            }\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - value, false);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev The ETH balance of the account is not enough to perform the operation.\\n     */\\n    error AddressInsufficientBalance(address account);\\n\\n    /**\\n     * @dev There's no code at `target` (it is not a contract).\\n     */\\n    error AddressEmptyCode(address target);\\n\\n    /**\\n     * @dev A call to an address target failed. The target may have reverted.\\n     */\\n    error FailedInnerCall();\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        if (address(this).balance < amount) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        if (!success) {\\n            revert FailedInnerCall();\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason or custom error, it is bubbled\\n     * up by this function (like regular Solidity function calls). However, if\\n     * the call reverted with no returned reason, this function reverts with a\\n     * {FailedInnerCall} error.\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        if (address(this).balance < value) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\\n     * unsuccessful call.\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata\\n    ) internal view returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            // only check if target is a contract if the call was successful and the return data is empty\\n            // otherwise we already know that it was a contract\\n            if (returndata.length == 0 && target.code.length == 0) {\\n                revert AddressEmptyCode(target);\\n            }\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\\n     * revert reason or with a default {FailedInnerCall} error.\\n     */\\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\\n     */\\n    function _revert(bytes memory returndata) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert FailedInnerCall();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```solidity\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(newImplementation.code.length > 0);\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    struct StringSlot {\\n        string value;\\n    }\\n\\n    struct BytesSlot {\\n        bytes value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\\n     */\\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\\n     */\\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\\n     */\\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\\n     */\\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\"},\"contracts/BaluniV1PoolPeriphery.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n/**\\r\\n *  __                  __                      __\\r\\n * /  |                /  |                    /  |\\r\\n * $$ |____    ______  $$ | __    __  _______  $$/\\r\\n * $$      \\\\  /      \\\\ $$ |/  |  /  |/       \\\\ /  |\\r\\n * $$$$$$$  | $$$$$$  |$$ |$$ |  $$ |$$$$$$$  |$$ |\\r\\n * $$ |  $$ | /    $$ |$$ |$$ |  $$ |$$ |  $$ |$$ |\\r\\n * $$ |__$$ |/$$$$$$$ |$$ |$$ \\\\__$$ |$$ |  $$ |$$ |\\r\\n * $$    $$/ $$    $$ |$$ |$$    $$/ $$ |  $$ |$$ |\\r\\n * $$$$$$$/   $$$$$$$/ $$/  $$$$$$/  $$/   $$/ $$/\\r\\n *\\r\\n *\\r\\n *                  ,-\\\"\\\"\\\"\\\"-.\\r\\n *                ,'      _ `.\\r\\n *               /       )_)  \\\\\\r\\n *              :              :\\r\\n *              \\\\              /\\r\\n *               \\\\            /\\r\\n *                `.        ,'\\r\\n *                  `.    ,'\\r\\n *                    `.,'\\r\\n *                     /\\\\`.   ,-._\\r\\n *                         `-'    \\\\__\\r\\n *                              .\\r\\n *               s                \\\\\\r\\n *                                \\\\\\\\\\r\\n *                                 \\\\\\\\\\r\\n *                                  >\\\\/7\\r\\n *                              _.-(6'  \\\\\\r\\n *                             (=___._/` \\\\\\r\\n *                                  )  \\\\ |\\r\\n *                                 /   / |\\r\\n *                                /    > /\\r\\n *                               j    < _\\\\\\r\\n *                           _.-' :      ``.\\r\\n *                           \\\\ r=._\\\\        `.\\r\\n */\\r\\nimport './interfaces/IBaluniV1PoolFactory.sol';\\r\\nimport './interfaces/IBaluniV1Pool.sol';\\r\\nimport '@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol';\\r\\nimport '@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol';\\r\\nimport '@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol';\\r\\n\\r\\n/**\\r\\n * @title BaluniV1PoolPeriphery\\r\\n * @dev This contract serves as the periphery contract for interacting with BaluniV1Pool contracts.\\r\\n * It provides functions for swapping tokens, adding liquidity, removing liquidity, and getting the amount out for a given swap.\\r\\n */\\r\\ncontract BaluniV1PoolPeriphery is Initializable, OwnableUpgradeable, UUPSUpgradeable {\\r\\n  IBaluniV1PoolFactory public poolFactory;\\r\\n\\r\\n  /**\\r\\n   * @dev Initializes the contract by setting the pool factory address.\\r\\n   * @param _poolFactory The address of the BaluniV1PoolFactory contract.\\r\\n   */\\r\\n  function initialize(address _poolFactory) public initializer {\\r\\n    __UUPSUpgradeable_init();\\r\\n    __Ownable_init(msg.sender);\\r\\n    poolFactory = IBaluniV1PoolFactory(_poolFactory);\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Initializes the contract by setting the pool factory address.\\r\\n   * @param _poolFactory The address of the BaluniV1PoolFactory contract.\\r\\n   */\\r\\n  function reinitialize(address _poolFactory, uint64 version) public reinitializer(version) {\\r\\n    poolFactory = IBaluniV1PoolFactory(_poolFactory);\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Internal function to authorize an upgrade to a new implementation contract.\\r\\n   * @param newImplementation The address of the new implementation contract.\\r\\n   * @notice This function can only be called by the contract owner.\\r\\n   */\\r\\n  function _authorizeUpgrade(address newImplementation) internal override onlyOwner {}\\r\\n\\r\\n  /**\\r\\n   * @dev Swaps tokens in a BaluniV1Pool.\\r\\n   * @param fromToken The address of the token to swap from.\\r\\n   * @param toToken The address of the token to swap to.\\r\\n   * @param amount The amount of tokens to swap.\\r\\n   * @return The amount of tokens received after the swap.\\r\\n   */\\r\\n  function swap(address fromToken, address toToken, uint256 amount, address receiver) external returns (uint256) {\\r\\n    require(amount > 0, 'Amount must be greater than zero');\\r\\n\\r\\n    // Get the pool address for the given tokens\\r\\n    address poolAddress = poolFactory.getPoolByAssets(fromToken, toToken);\\r\\n    IBaluniV1Pool pool = IBaluniV1Pool(poolAddress);\\r\\n\\r\\n    IERC20(fromToken).transferFrom(msg.sender, address(this), amount);\\r\\n    IERC20(fromToken).approve(poolAddress, amount);\\r\\n\\r\\n    uint256 amountOut = pool.swap(fromToken, toToken, amount, receiver);\\r\\n\\r\\n    return amountOut;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Performs batch swaps between multiple token pairs.\\r\\n   * @param fromTokens An array of addresses representing the tokens to swap from.\\r\\n   * @param toTokens An array of addresses representing the tokens to swap to.\\r\\n   * @param amounts An array of amounts representing the amounts to swap.\\r\\n   * @param receivers An array of addresses representing the receivers of the swapped tokens.\\r\\n   * @return An array of amounts representing the amounts of tokens received after the swaps.\\r\\n   */\\r\\n  function batchSwap(\\r\\n    address[] calldata fromTokens,\\r\\n    address[] calldata toTokens,\\r\\n    uint256[] calldata amounts,\\r\\n    address[] calldata receivers\\r\\n  ) external returns (uint256[] memory) {\\r\\n    require(\\r\\n      fromTokens.length == toTokens.length && toTokens.length == amounts.length && amounts.length == receivers.length,\\r\\n      'Input arrays length mismatch'\\r\\n    );\\r\\n\\r\\n    uint256[] memory amountsOut = new uint256[](fromTokens.length);\\r\\n\\r\\n    for (uint256 i = 0; i < fromTokens.length; i++) {\\r\\n      require(amounts[i] > 0, 'Amount must be greater than zero');\\r\\n\\r\\n      // Transfer fromToken from sender to this contract\\r\\n      IERC20(fromTokens[i]).transferFrom(msg.sender, address(this), amounts[i]);\\r\\n\\r\\n      // Get the pool address for the given tokens\\r\\n      address poolAddress = poolFactory.getPoolByAssets(fromTokens[i], toTokens[i]);\\r\\n      IBaluniV1Pool pool = IBaluniV1Pool(poolAddress);\\r\\n\\r\\n      // Approve the pool to spend fromToken\\r\\n      IERC20(fromTokens[i]).approve(poolAddress, amounts[i]);\\r\\n\\r\\n      // Perform the swap\\r\\n      uint256 amountOut = pool.swap(fromTokens[i], toTokens[i], amounts[i], receivers[i]);\\r\\n      amountsOut[i] = amountOut;\\r\\n    }\\r\\n\\r\\n    return amountsOut;\\r\\n  }\\r\\n\\r\\n  function smartSwap(address fromToken, address toToken, uint256 amount, address receiver) external returns (uint256) {\\r\\n    require(amount > 0, 'Amount must be greater than zero');\\r\\n\\r\\n    // Get all pools that contain fromToken\\r\\n    address[] memory fromPools = poolFactory.getPoolsByAsset(fromToken);\\r\\n    uint256 bestAmountOut = 0;\\r\\n    address bestPoolAddress;\\r\\n    uint256 bestTokenLiquidity = 0;\\r\\n\\r\\n    // Iterate over all pools to find the best pool based on token-specific liquidity and asset deviation\\r\\n    for (uint256 i = 0; i < fromPools.length; i++) {\\r\\n      IBaluniV1Pool pool = IBaluniV1Pool(fromPools[i]);\\r\\n      (bool[] memory directions, uint256[] memory deviations) = pool.getDeviation();\\r\\n      (uint256 totalValuation, uint256[] memory valuations) = pool.computeTotalValuation();\\r\\n\\r\\n      // Check if fromToken is overweight and get the liquidity of the specific token\\r\\n      for (uint256 j = 0; j < directions.length; j++) {\\r\\n        if (pool.assetInfos(j).asset == fromToken) {\\r\\n          uint256 tokenLiquidity = valuations[j];\\r\\n          if (directions[j] && tokenLiquidity > bestTokenLiquidity) {\\r\\n            bestTokenLiquidity = tokenLiquidity;\\r\\n            bestPoolAddress = fromPools[i];\\r\\n          }\\r\\n        }\\r\\n      }\\r\\n    }\\r\\n\\r\\n    require(bestPoolAddress != address(0), 'No suitable pool found');\\r\\n\\r\\n    // Perform the swap in the best pool\\r\\n    IBaluniV1Pool bestPool = IBaluniV1Pool(bestPoolAddress);\\r\\n    IERC20(fromToken).transferFrom(msg.sender, address(this), amount);\\r\\n    IERC20(fromToken).approve(bestPoolAddress, amount);\\r\\n    uint256 amountReceived = bestPool.swap(fromToken, toToken, amount, receiver);\\r\\n\\r\\n    return amountReceived;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Adds liquidity to a BaluniV1Pool.\\r\\n   * @param amounts An array of amounts for each asset to add as liquidity.\\r\\n   */\\r\\n  function addLiquidity(uint256[] calldata amounts, address poolAddress, address receiver) external {\\r\\n    IBaluniV1Pool pool = IBaluniV1Pool(poolAddress);\\r\\n    address[] memory assets = pool.getAssets(); // Get the assets in the pool\\r\\n\\r\\n    for (uint256 i = 0; i < assets.length; i++) {\\r\\n      address asset = assets[i];\\r\\n      uint256 amount = amounts[i];\\r\\n      IERC20(asset).transferFrom(msg.sender, address(this), amount);\\r\\n    }\\r\\n\\r\\n    pool.mint(receiver);\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Removes liquidity from a BaluniV1Pool.\\r\\n   * @param share The amount of liquidity tokens to remove.\\r\\n   * @param poolAddress The address of the BaluniV1Pool.\\r\\n   */\\r\\n  function removeLiquidity(uint256 share, address poolAddress, address receiver) external {\\r\\n    require(share > 0, 'Share must be greater than zero');\\r\\n    IERC20 poolToken = IERC20(poolAddress);\\r\\n\\r\\n    // Check allowance\\r\\n    uint256 allowance = poolToken.allowance(msg.sender, address(this));\\r\\n    require(allowance >= share, 'Insufficient allowance');\\r\\n\\r\\n    // Check balance\\r\\n    uint256 balance = poolToken.balanceOf(msg.sender);\\r\\n    require(balance >= share, 'Insufficient balance');\\r\\n\\r\\n    bool success = poolToken.transferFrom(msg.sender, poolAddress, share);\\r\\n    require(success, 'Transfer failed');\\r\\n\\r\\n    IBaluniV1Pool(poolAddress).burn(receiver);\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Gets the amount of tokens received after a swap in a BaluniV1Pool.\\r\\n   * @param fromToken The address of the token to swap from.\\r\\n   * @param toToken The address of the token to swap to.\\r\\n   * @param amount The amount of tokens to swap.\\r\\n   * @return The amount of tokens received after the swap.\\r\\n   */\\r\\n  function getAmountOut(address fromToken, address toToken, uint256 amount) external view returns (uint256) {\\r\\n    address poolAddress = poolFactory.getPoolByAssets(fromToken, toToken);\\r\\n    IBaluniV1Pool pool = IBaluniV1Pool(poolAddress);\\r\\n    return pool.getAmountOut(fromToken, toToken, amount);\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Performs rebalance if needed for the given tokens.\\r\\n   * @param poolAddress The address of the token pool to rebalance.\\r\\n   */\\r\\n  function performRebalanceIfNeeded(address poolAddress) external {\\r\\n    IBaluniV1Pool pool = IBaluniV1Pool(poolAddress);\\r\\n    pool.performRebalanceIfNeeded(msg.sender);\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Returns an array of pool addresses that contain the given token.\\r\\n   * @param token The address of the token to search for.\\r\\n   * @return An array of pool addresses.\\r\\n   */\\r\\n  function getPoolsContainingToken(address token) external view returns (address[] memory) {\\r\\n    return poolFactory.getPoolsByAsset(token);\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Returns the version of the contract.\\r\\n   * @return The version string.\\r\\n   */\\r\\n  function getVersion() external view returns (uint64) {\\r\\n    return _getInitializedVersion();\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Changes the address of the pool factory contract.\\r\\n   * Can only be called by the contract owner.\\r\\n   * @param _poolFactory The new address of the pool factory contract.\\r\\n   */\\r\\n  function changePoolFactory(address _poolFactory) external onlyOwner {\\r\\n    poolFactory = IBaluniV1PoolFactory(_poolFactory);\\r\\n  }\\r\\n\\r\\n  function transferToPool() external {\\r\\n    require(poolFactory.poolExist(msg.sender), 'Only Pools');\\r\\n    uint256[] memory reserves = IBaluniV1Pool(msg.sender).getReserves();\\r\\n    address[] memory assets = IBaluniV1Pool(msg.sender).getAssets();\\r\\n    for (uint256 i = 0; i < assets.length; i++) {\\r\\n      IERC20(assets[i]).transfer(msg.sender, reserves[i]);\\r\\n    }\\r\\n  }\\r\\n}\\r\\n\",\"keccak256\":\"0x9094b3897ca2e79693151ae7b249ede5d004179ad7a39b61db58e636e3aaebda\",\"license\":\"GNU AGPLv3\"},\"contracts/interfaces/IBaluniV1Pool.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\nimport '@openzeppelin/contracts/token/ERC20/ERC20.sol';\\r\\n\\r\\ninterface IBaluniV1Pool {\\r\\n  // Views\\r\\n  function rebalancer() external view returns (address);\\r\\n\\r\\n  function assets(uint256 index) external view returns (address);\\r\\n\\r\\n  function weights(uint256 index) external view returns (uint256);\\r\\n\\r\\n  function trigger() external view returns (uint256);\\r\\n\\r\\n  function ONE() external view returns (uint256);\\r\\n\\r\\n  function router() external view returns (address);\\r\\n\\r\\n  function SWAP_FEE_BPS() external view returns (uint256);\\r\\n\\r\\n  function getReserves() external view returns (uint256[] memory);\\r\\n\\r\\n  function getAssets() external view returns (address[] memory);\\r\\n\\r\\n  function getWeights() external view returns (uint256[] memory);\\r\\n\\r\\n  function getAmountOut(address fromToken, address toToken, uint256 amount) external view returns (uint256);\\r\\n\\r\\n  function performRebalanceIfNeeded(address _sender) external;\\r\\n\\r\\n  function getDeviation() external view returns (bool[] memory directions, uint256[] memory deviations);\\r\\n\\r\\n  function assetLiquidity(uint256 assetIndex) external view returns (uint256);\\r\\n\\r\\n  function liquidity() external view returns (uint256);\\r\\n\\r\\n  function unitPrice() external view returns (uint256);\\r\\n\\r\\n  // Mutative\\r\\n  function rebalanceWeights(address receiver) external;\\r\\n\\r\\n  function swap(address fromToken, address toToken, uint256 amount, address receiver) external returns (uint256);\\r\\n\\r\\n  function mint(address to) external returns (uint256);\\r\\n\\r\\n  function mintOneSide(uint256 assetIndex, uint256 amount, address receiver) external returns (uint256);\\r\\n\\r\\n  function burn(address to) external;\\r\\n\\r\\n  function changeRebalancer(address _newRebalancer) external;\\r\\n\\r\\n  function changeRouter(address _newRouter) external;\\r\\n\\r\\n  function computeTotalValuation() external view returns (uint256 totalVal, uint256[] memory valuations);\\r\\n\\r\\n  struct AssetInfo {\\r\\n    address asset;\\r\\n    uint256 weight;\\r\\n  }\\r\\n\\r\\n  function assetInfos(uint _index) external view returns (AssetInfo memory);\\r\\n\\r\\n  // Events\\r\\n  event RebalancePerformed(address indexed by, address[] assets);\\r\\n  event WeightsRebalanced(address indexed user, uint256[] amountsAdded);\\r\\n  event Burn(address indexed user, uint256 sharesBurned);\\r\\n  event Mint(address indexed to, uint256 sharesMinted);\\r\\n  event Swap(\\r\\n    address indexed user,\\r\\n    address indexed fromToken,\\r\\n    address indexed toToken,\\r\\n    uint256 amountIn,\\r\\n    uint256 amountOut\\r\\n  );\\r\\n}\\r\\n\",\"keccak256\":\"0x191a855d7f9adaf754c652dfc53c1e04f1d20392984c469efb2c8a199fb05341\",\"license\":\"GNU AGPLv3\"},\"contracts/interfaces/IBaluniV1PoolFactory.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n\\r\\ninterface IBaluniV1PoolFactory {\\r\\n  function getPoolByAssets(address asset1, address asset2) external view returns (address);\\r\\n\\r\\n  function getPoolsByAsset(address token) external view returns (address[] memory);\\r\\n\\r\\n  function poolExist(address _pool) external view returns (bool);\\r\\n}\\r\\n\",\"keccak256\":\"0x1530f4f9178e26f7d181193c17c1bd2099a1e939220b552e2eab53cb1abb59a9\",\"license\":\"GNU AGPLv3\"}},\"version\":1}","storageLayout":{"storage":[{"astId":4627,"contract":"contracts/BaluniV1PoolPeriphery.sol:BaluniV1PoolPeriphery","label":"poolFactory","offset":0,"slot":"0","type":"t_contract(IBaluniV1PoolFactory)5632"}],"types":{"t_contract(IBaluniV1PoolFactory)5632":{"encoding":"inplace","label":"contract IBaluniV1PoolFactory","numberOfBytes":"20"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interfaces/IBaluniV1Pool.sol":{"IBaluniV1Pool":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"sharesBurned","type":"uint256"}],"name":"Burn","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"sharesMinted","type":"uint256"}],"name":"Mint","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"by","type":"address"},{"indexed":false,"internalType":"address[]","name":"assets","type":"address[]"}],"name":"RebalancePerformed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"address","name":"fromToken","type":"address"},{"indexed":true,"internalType":"address","name":"toToken","type":"address"},{"indexed":false,"internalType":"uint256","name":"amountIn","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amountOut","type":"uint256"}],"name":"Swap","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"amountsAdded","type":"uint256[]"}],"name":"WeightsRebalanced","type":"event"},{"inputs":[],"name":"ONE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"SWAP_FEE_BPS","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_index","type":"uint256"}],"name":"assetInfos","outputs":[{"components":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"uint256","name":"weight","type":"uint256"}],"internalType":"struct IBaluniV1Pool.AssetInfo","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"assetIndex","type":"uint256"}],"name":"assetLiquidity","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"assets","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_newRebalancer","type":"address"}],"name":"changeRebalancer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_newRouter","type":"address"}],"name":"changeRouter","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"computeTotalValuation","outputs":[{"internalType":"uint256","name":"totalVal","type":"uint256"},{"internalType":"uint256[]","name":"valuations","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"fromToken","type":"address"},{"internalType":"address","name":"toToken","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"getAmountOut","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getAssets","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getDeviation","outputs":[{"internalType":"bool[]","name":"directions","type":"bool[]"},{"internalType":"uint256[]","name":"deviations","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getReserves","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getWeights","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"liquidity","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"}],"name":"mint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"assetIndex","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"receiver","type":"address"}],"name":"mintOneSide","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_sender","type":"address"}],"name":"performRebalanceIfNeeded","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"rebalanceWeights","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"rebalancer","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"router","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"fromToken","type":"address"},{"internalType":"address","name":"toToken","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"receiver","type":"address"}],"name":"swap","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"trigger","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"unitPrice","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"weights","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"ONE()":"c2ee3a08","SWAP_FEE_BPS()":"67a6c440","assetInfos(uint256)":"d14ef46d","assetLiquidity(uint256)":"cf8fa764","assets(uint256)":"cf35bdd0","burn(address)":"89afcb44","changeRebalancer(address)":"0918281b","changeRouter(address)":"340ac20f","computeTotalValuation()":"36bf6e39","getAmountOut(address,address,uint256)":"4aa06652","getAssets()":"67e4ac2c","getDeviation()":"89ab3532","getReserves()":"0902f1ac","getWeights()":"22acb867","liquidity()":"1a686502","mint(address)":"6a627842","mintOneSide(uint256,uint256,address)":"3bb9339d","performRebalanceIfNeeded(address)":"5568081a","rebalanceWeights(address)":"0723c999","rebalancer()":"01d22ccd","router()":"f887ea40","swap(address,address,uint256,address)":"6e81221c","trigger()":"7fec8d38","unitPrice()":"e73faa2d","weights(uint256)":"b5f163ff"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"sharesBurned\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"sharesMinted\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"by\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"}],\"name\":\"RebalancePerformed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromToken\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"amountsAdded\",\"type\":\"uint256[]\"}],\"name\":\"WeightsRebalanced\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ONE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SWAP_FEE_BPS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"assetInfos\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"}],\"internalType\":\"struct IBaluniV1Pool.AssetInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assetIndex\",\"type\":\"uint256\"}],\"name\":\"assetLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"assets\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newRebalancer\",\"type\":\"address\"}],\"name\":\"changeRebalancer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newRouter\",\"type\":\"address\"}],\"name\":\"changeRouter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"computeTotalValuation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalVal\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"valuations\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"toToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"getAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAssets\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDeviation\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"directions\",\"type\":\"bool[]\"},{\"internalType\":\"uint256[]\",\"name\":\"deviations\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReserves\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getWeights\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assetIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"mintOneSide\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"}],\"name\":\"performRebalanceIfNeeded\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"rebalanceWeights\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rebalancer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"router\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"toToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"trigger\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unitPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"weights\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IBaluniV1Pool.sol\":\"IBaluniV1Pool\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":80000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"./IERC20.sol\\\";\\nimport {IERC20Metadata} from \\\"./extensions/IERC20Metadata.sol\\\";\\nimport {Context} from \\\"../../utils/Context.sol\\\";\\nimport {IERC20Errors} from \\\"../../interfaces/draft-IERC6093.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n */\\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\\n    mapping(address account => uint256) private _balances;\\n\\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `value`.\\n     */\\n    function transfer(address to, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `value`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `value`.\\n     */\\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, value);\\n        _transfer(from, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _transfer(address from, address to, uint256 value) internal {\\n        if (from == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        if (to == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\\n     * this function.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _update(address from, address to, uint256 value) internal virtual {\\n        if (from == address(0)) {\\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\\n            _totalSupply += value;\\n        } else {\\n            uint256 fromBalance = _balances[from];\\n            if (fromBalance < value) {\\n                revert ERC20InsufficientBalance(from, fromBalance, value);\\n            }\\n            unchecked {\\n                // Overflow not possible: value <= fromBalance <= totalSupply.\\n                _balances[from] = fromBalance - value;\\n            }\\n        }\\n\\n        if (to == address(0)) {\\n            unchecked {\\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\\n                _totalSupply -= value;\\n            }\\n        } else {\\n            unchecked {\\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\\n                _balances[to] += value;\\n            }\\n        }\\n\\n        emit Transfer(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\\n     * Relies on the `_update` mechanism\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _mint(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(address(0), account, value);\\n    }\\n\\n    /**\\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\\n     * Relies on the `_update` mechanism.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead\\n     */\\n    function _burn(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        _update(account, address(0), value);\\n    }\\n\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     *\\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\\n     */\\n    function _approve(address owner, address spender, uint256 value) internal {\\n        _approve(owner, spender, value, true);\\n    }\\n\\n    /**\\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\\n     *\\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\\n     * `Approval` event during `transferFrom` operations.\\n     *\\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\\n     * true using the following override:\\n     * ```\\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\\n     *     super._approve(owner, spender, value, true);\\n     * }\\n     * ```\\n     *\\n     * Requirements are the same as {_approve}.\\n     */\\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\\n        if (owner == address(0)) {\\n            revert ERC20InvalidApprover(address(0));\\n        }\\n        if (spender == address(0)) {\\n            revert ERC20InvalidSpender(address(0));\\n        }\\n        _allowances[owner][spender] = value;\\n        if (emitEvent) {\\n            emit Approval(owner, spender, value);\\n        }\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\\n     *\\n     * Does not update the allowance value in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Does not emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            if (currentAllowance < value) {\\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\\n            }\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - value, false);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"contracts/interfaces/IBaluniV1Pool.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\nimport '@openzeppelin/contracts/token/ERC20/ERC20.sol';\\r\\n\\r\\ninterface IBaluniV1Pool {\\r\\n  // Views\\r\\n  function rebalancer() external view returns (address);\\r\\n\\r\\n  function assets(uint256 index) external view returns (address);\\r\\n\\r\\n  function weights(uint256 index) external view returns (uint256);\\r\\n\\r\\n  function trigger() external view returns (uint256);\\r\\n\\r\\n  function ONE() external view returns (uint256);\\r\\n\\r\\n  function router() external view returns (address);\\r\\n\\r\\n  function SWAP_FEE_BPS() external view returns (uint256);\\r\\n\\r\\n  function getReserves() external view returns (uint256[] memory);\\r\\n\\r\\n  function getAssets() external view returns (address[] memory);\\r\\n\\r\\n  function getWeights() external view returns (uint256[] memory);\\r\\n\\r\\n  function getAmountOut(address fromToken, address toToken, uint256 amount) external view returns (uint256);\\r\\n\\r\\n  function performRebalanceIfNeeded(address _sender) external;\\r\\n\\r\\n  function getDeviation() external view returns (bool[] memory directions, uint256[] memory deviations);\\r\\n\\r\\n  function assetLiquidity(uint256 assetIndex) external view returns (uint256);\\r\\n\\r\\n  function liquidity() external view returns (uint256);\\r\\n\\r\\n  function unitPrice() external view returns (uint256);\\r\\n\\r\\n  // Mutative\\r\\n  function rebalanceWeights(address receiver) external;\\r\\n\\r\\n  function swap(address fromToken, address toToken, uint256 amount, address receiver) external returns (uint256);\\r\\n\\r\\n  function mint(address to) external returns (uint256);\\r\\n\\r\\n  function mintOneSide(uint256 assetIndex, uint256 amount, address receiver) external returns (uint256);\\r\\n\\r\\n  function burn(address to) external;\\r\\n\\r\\n  function changeRebalancer(address _newRebalancer) external;\\r\\n\\r\\n  function changeRouter(address _newRouter) external;\\r\\n\\r\\n  function computeTotalValuation() external view returns (uint256 totalVal, uint256[] memory valuations);\\r\\n\\r\\n  struct AssetInfo {\\r\\n    address asset;\\r\\n    uint256 weight;\\r\\n  }\\r\\n\\r\\n  function assetInfos(uint _index) external view returns (AssetInfo memory);\\r\\n\\r\\n  // Events\\r\\n  event RebalancePerformed(address indexed by, address[] assets);\\r\\n  event WeightsRebalanced(address indexed user, uint256[] amountsAdded);\\r\\n  event Burn(address indexed user, uint256 sharesBurned);\\r\\n  event Mint(address indexed to, uint256 sharesMinted);\\r\\n  event Swap(\\r\\n    address indexed user,\\r\\n    address indexed fromToken,\\r\\n    address indexed toToken,\\r\\n    uint256 amountIn,\\r\\n    uint256 amountOut\\r\\n  );\\r\\n}\\r\\n\",\"keccak256\":\"0x191a855d7f9adaf754c652dfc53c1e04f1d20392984c469efb2c8a199fb05341\",\"license\":\"GNU AGPLv3\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interfaces/IBaluniV1PoolFactory.sol":{"IBaluniV1PoolFactory":{"abi":[{"inputs":[{"internalType":"address","name":"asset1","type":"address"},{"internalType":"address","name":"asset2","type":"address"}],"name":"getPoolByAssets","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"getPoolsByAsset","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_pool","type":"address"}],"name":"poolExist","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"getPoolByAssets(address,address)":"2d5e94a7","getPoolsByAsset(address)":"b4340e6a","poolExist(address)":"89345efb"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"asset2\",\"type\":\"address\"}],\"name\":\"getPoolByAssets\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getPoolsByAsset\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_pool\",\"type\":\"address\"}],\"name\":\"poolExist\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IBaluniV1PoolFactory.sol\":\"IBaluniV1PoolFactory\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":80000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/interfaces/IBaluniV1PoolFactory.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n\\r\\ninterface IBaluniV1PoolFactory {\\r\\n  function getPoolByAssets(address asset1, address asset2) external view returns (address);\\r\\n\\r\\n  function getPoolsByAsset(address token) external view returns (address[] memory);\\r\\n\\r\\n  function poolExist(address _pool) external view returns (bool);\\r\\n}\\r\\n\",\"keccak256\":\"0x1530f4f9178e26f7d181193c17c1bd2099a1e939220b552e2eab53cb1abb59a9\",\"license\":\"GNU AGPLv3\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interfaces/IBaluniV1PoolPeriphery.sol":{"IBaluniV1PoolPeriphery":{"abi":[{"inputs":[],"name":"transferToPool","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"transferToPool()":"fe110116"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"transferToPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IBaluniV1PoolPeriphery.sol\":\"IBaluniV1PoolPeriphery\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":80000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/interfaces/IBaluniV1PoolPeriphery.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n\\r\\ninterface IBaluniV1PoolPeriphery {\\r\\n  function transferToPool() external;\\r\\n}\\r\\n\",\"keccak256\":\"0x2038c4f88590e309e5cade98801a59427b120d6f762251e550a865444b3853f0\",\"license\":\"GNU AGPLv3\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interfaces/IBaluniV1Rebalancer.sol":{"IBaluniV1Rebalancer":{"abi":[{"inputs":[{"internalType":"address[]","name":"assets","type":"address[]"},{"internalType":"uint256[]","name":"weights","type":"uint256[]"},{"internalType":"uint256","name":"limit","type":"uint256"},{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"baseAsset","type":"address"}],"name":"checkRebalance","outputs":[{"components":[{"internalType":"uint256","name":"len","type":"uint256"},{"internalType":"uint256","name":"totalValue","type":"uint256"},{"internalType":"uint256","name":"finalUsdBalance","type":"uint256"},{"internalType":"uint256","name":"overweightVaultsLength","type":"uint256"},{"internalType":"uint256","name":"underweightVaultsLength","type":"uint256"},{"internalType":"uint256","name":"totalActiveWeight","type":"uint256"},{"internalType":"uint256","name":"amountOut","type":"uint256"},{"internalType":"uint256[]","name":"overweightVaults","type":"uint256[]"},{"internalType":"uint256[]","name":"overweightAmounts","type":"uint256[]"},{"internalType":"uint256[]","name":"underweightVaults","type":"uint256[]"},{"internalType":"uint256[]","name":"underweightAmounts","type":"uint256[]"},{"internalType":"uint256[]","name":"balances","type":"uint256[]"}],"internalType":"struct IBaluniV1Rebalancer.RebalanceVars","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"fromToken","type":"address"},{"internalType":"address","name":"toToken","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"convert","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getBaluniRouter","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"contract IERC20","name":"srcToken","type":"address"},{"internalType":"contract IERC20","name":"dstToken","type":"address"},{"internalType":"bool","name":"useWrappers","type":"bool"}],"name":"getRate","outputs":[{"internalType":"uint256","name":"weightedRate","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"contract IERC20","name":"srcToken","type":"address"},{"internalType":"bool","name":"useWrappers","type":"bool"}],"name":"getRateToEth","outputs":[{"internalType":"uint256","name":"weightedRate","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getTreasury","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getUSDCAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getWNATIVEAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"assets","type":"address[]"},{"internalType":"uint256[]","name":"weights","type":"uint256[]"},{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"receiver","type":"address"},{"internalType":"uint256","name":"limit","type":"uint256"},{"internalType":"address","name":"baseAsset","type":"address"}],"name":"rebalance","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"checkRebalance(address[],uint256[],uint256,address,address)":"f12e445a","convert(address,address,uint256)":"248391ff","getBaluniRouter()":"04cc7325","getRate(address,address,bool)":"802431fb","getRateToEth(address,bool)":"7de4fd10","getTreasury()":"3b19e84a","getUSDCAddress()":"bc06e81d","getWNATIVEAddress()":"956fb510","rebalance(address[],uint256[],address,address,uint256,address)":"0325192d"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"weights\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"baseAsset\",\"type\":\"address\"}],\"name\":\"checkRebalance\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"len\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"finalUsdBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"overweightVaultsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"underweightVaultsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalActiveWeight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"overweightVaults\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"overweightAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"underweightVaults\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"underweightAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"balances\",\"type\":\"uint256[]\"}],\"internalType\":\"struct IBaluniV1Rebalancer.RebalanceVars\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"toToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"convert\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBaluniRouter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"srcToken\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"dstToken\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useWrappers\",\"type\":\"bool\"}],\"name\":\"getRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"weightedRate\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"srcToken\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useWrappers\",\"type\":\"bool\"}],\"name\":\"getRateToEth\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"weightedRate\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTreasury\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getUSDCAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getWNATIVEAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"weights\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"baseAsset\",\"type\":\"address\"}],\"name\":\"rebalance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IBaluniV1Rebalancer.sol\":\"IBaluniV1Rebalancer\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":80000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\"},\"contracts/interfaces/IBaluniV1Rebalancer.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\nimport '@openzeppelin/contracts/token/ERC20/IERC20.sol';\\r\\nimport '@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol';\\r\\n\\r\\ninterface IBaluniV1Rebalancer {\\r\\n  enum RebalanceType {\\r\\n    Overweight,\\r\\n    Underweight,\\r\\n    NoRebalance\\r\\n  }\\r\\n\\r\\n  struct RebalanceVars {\\r\\n    uint256 len;\\r\\n    uint256 totalValue;\\r\\n    uint256 finalUsdBalance;\\r\\n    uint256 overweightVaultsLength;\\r\\n    uint256 underweightVaultsLength;\\r\\n    uint256 totalActiveWeight;\\r\\n    uint256 amountOut;\\r\\n    uint256[] overweightVaults;\\r\\n    uint256[] overweightAmounts;\\r\\n    uint256[] underweightVaults;\\r\\n    uint256[] underweightAmounts;\\r\\n    uint256[] balances;\\r\\n  }\\r\\n\\r\\n  function checkRebalance(\\r\\n    address[] calldata assets,\\r\\n    uint256[] calldata weights,\\r\\n    uint256 limit,\\r\\n    address sender,\\r\\n    address baseAsset\\r\\n  ) external view returns (RebalanceVars memory);\\r\\n\\r\\n  function rebalance(\\r\\n    address[] calldata assets,\\r\\n    uint256[] calldata weights,\\r\\n    address sender,\\r\\n    address receiver,\\r\\n    uint256 limit,\\r\\n    address baseAsset\\r\\n  ) external;\\r\\n\\r\\n  function getBaluniRouter() external view returns (address);\\r\\n\\r\\n  function getRate(IERC20 srcToken, IERC20 dstToken, bool useWrappers) external view returns (uint256 weightedRate);\\r\\n\\r\\n  function getTreasury() external view returns (address);\\r\\n\\r\\n  function getUSDCAddress() external view returns (address);\\r\\n\\r\\n  function getWNATIVEAddress() external view returns (address);\\r\\n\\r\\n  function getRateToEth(IERC20 srcToken, bool useWrappers) external view returns (uint256 weightedRate);\\r\\n\\r\\n  function convert(address fromToken, address toToken, uint256 amount) external view returns (uint256);\\r\\n}\\r\\n\",\"keccak256\":\"0xba7ce07f4e65e878d1fc969e563b7cfa6fd60435612061d972a1f19d52cb059d\",\"license\":\"GNU AGPLv3\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interfaces/IBaluniV1Router.sol":{"IBaluniV1Router":{"abi":[{"inputs":[{"internalType":"address","name":"_user","type":"address"}],"name":"getAgentAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getBpsFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getTreasury","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getUnitPrice","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"token","type":"address"}],"name":"tokenValuation","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"getAgentAddress(address)":"27d54a92","getBpsFee()":"185fcffe","getTreasury()":"3b19e84a","getUnitPrice()":"012a33aa","tokenValuation(uint256,address)":"2bdd955a"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getAgentAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBpsFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTreasury\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getUnitPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"tokenValuation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IBaluniV1Router.sol\":\"IBaluniV1Router\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":80000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/interfaces/IBaluniV1Router.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n\\r\\ninterface IBaluniV1Router {\\r\\n  function getAgentAddress(address _user) external view returns (address);\\r\\n\\r\\n  function getBpsFee() external view returns (uint256);\\r\\n\\r\\n  function tokenValuation(uint256 amount, address token) external view returns (uint256);\\r\\n\\r\\n  function getTreasury() external view returns (address);\\r\\n\\r\\n  function getUnitPrice() external view returns (uint256);\\r\\n}\\r\\n\",\"keccak256\":\"0xf36b22a54937a493f80d2f850b96d6ee735c3d7d54d3be369d76d03b72467096\",\"license\":\"GNU AGPLv3\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}