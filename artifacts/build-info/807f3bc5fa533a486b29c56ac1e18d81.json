{"id":"807f3bc5fa533a486b29c56ac1e18d81","_format":"hh-sol-build-info-1","solcVersion":"0.8.25","solcLongVersion":"0.8.25+commit.b61c2a91","input":{"language":"Solidity","sources":{"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ContextUpgradeable} from \"../utils/ContextUpgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\n    /// @custom:storage-location erc7201:openzeppelin.storage.Ownable\n    struct OwnableStorage {\n        address _owner;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Ownable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant OwnableStorageLocation = 0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300;\n\n    function _getOwnableStorage() private pure returns (OwnableStorage storage $) {\n        assembly {\n            $.slot := OwnableStorageLocation\n        }\n    }\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    function __Ownable_init(address initialOwner) internal onlyInitializing {\n        __Ownable_init_unchained(initialOwner);\n    }\n\n    function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        OwnableStorage storage $ = _getOwnableStorage();\n        return $._owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        OwnableStorage storage $ = _getOwnableStorage();\n        address oldOwner = $._owner;\n        $._owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Storage of the initializable contract.\n     *\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n     * when using with upgradeable contracts.\n     *\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\n     */\n    struct InitializableStorage {\n        /**\n         * @dev Indicates that the contract has been initialized.\n         */\n        uint64 _initialized;\n        /**\n         * @dev Indicates that the contract is in the process of being initialized.\n         */\n        bool _initializing;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Initializable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\n\n    /**\n     * @dev The contract is already initialized.\n     */\n    error InvalidInitialization();\n\n    /**\n     * @dev The contract is not initializing.\n     */\n    error NotInitializing();\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint64 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n     * production.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        // Cache values to avoid duplicated sloads\n        bool isTopLevelCall = !$._initializing;\n        uint64 initialized = $._initialized;\n\n        // Allowed calls:\n        // - initialSetup: the contract is not in the initializing state and no previous version was\n        //                 initialized\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\n        //                 current contract is just being deployed\n        bool initialSetup = initialized == 0 && isTopLevelCall;\n        bool construction = initialized == 1 && address(this).code.length == 0;\n\n        if (!initialSetup && !construction) {\n            revert InvalidInitialization();\n        }\n        $._initialized = 1;\n        if (isTopLevelCall) {\n            $._initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            $._initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint64 version) {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing || $._initialized >= version) {\n            revert InvalidInitialization();\n        }\n        $._initialized = version;\n        $._initializing = true;\n        _;\n        $._initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        _checkInitializing();\n        _;\n    }\n\n    /**\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\n     */\n    function _checkInitializing() internal view virtual {\n        if (!_isInitializing()) {\n            revert NotInitializing();\n        }\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing) {\n            revert InvalidInitialization();\n        }\n        if ($._initialized != type(uint64).max) {\n            $._initialized = type(uint64).max;\n            emit Initialized(type(uint64).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint64) {\n        return _getInitializableStorage()._initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _getInitializableStorage()._initializing;\n    }\n\n    /**\n     * @dev Returns a pointer to the storage namespace.\n     */\n    // solhint-disable-next-line var-name-mixedcase\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\n        assembly {\n            $.slot := INITIALIZABLE_STORAGE\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/UUPSUpgradeable.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC1822Proxiable} from \"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\";\nimport {ERC1967Utils} from \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\";\nimport {Initializable} from \"./Initializable.sol\";\n\n/**\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n *\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n * `UUPSUpgradeable` with a custom implementation of upgrades.\n *\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\n */\nabstract contract UUPSUpgradeable is Initializable, IERC1822Proxiable {\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable\n    address private immutable __self = address(this);\n\n    /**\n     * @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\n     * and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\n     * while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\n     * If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\n     * be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\n     * during an upgrade.\n     */\n    string public constant UPGRADE_INTERFACE_VERSION = \"5.0.0\";\n\n    /**\n     * @dev The call is from an unauthorized context.\n     */\n    error UUPSUnauthorizedCallContext();\n\n    /**\n     * @dev The storage `slot` is unsupported as a UUID.\n     */\n    error UUPSUnsupportedProxiableUUID(bytes32 slot);\n\n    /**\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n     * a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n     * function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n     * fail.\n     */\n    modifier onlyProxy() {\n        _checkProxy();\n        _;\n    }\n\n    /**\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n     * callable on the implementing contract but not through proxies.\n     */\n    modifier notDelegated() {\n        _checkNotDelegated();\n        _;\n    }\n\n    function __UUPSUpgradeable_init() internal onlyInitializing {\n    }\n\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\n     */\n    function proxiableUUID() external view virtual notDelegated returns (bytes32) {\n        return ERC1967Utils.IMPLEMENTATION_SLOT;\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n     * encoded in `data`.\n     *\n     * Calls {_authorizeUpgrade}.\n     *\n     * Emits an {Upgraded} event.\n     *\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {\n        _authorizeUpgrade(newImplementation);\n        _upgradeToAndCallUUPS(newImplementation, data);\n    }\n\n    /**\n     * @dev Reverts if the execution is not performed via delegatecall or the execution\n     * context is not of a proxy with an ERC1967-compliant implementation pointing to self.\n     * See {_onlyProxy}.\n     */\n    function _checkProxy() internal view virtual {\n        if (\n            address(this) == __self || // Must be called through delegatecall\n            ERC1967Utils.getImplementation() != __self // Must be called through an active proxy\n        ) {\n            revert UUPSUnauthorizedCallContext();\n        }\n    }\n\n    /**\n     * @dev Reverts if the execution is performed via delegatecall.\n     * See {notDelegated}.\n     */\n    function _checkNotDelegated() internal view virtual {\n        if (address(this) != __self) {\n            // Must not be called through delegatecall\n            revert UUPSUnauthorizedCallContext();\n        }\n    }\n\n    /**\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n     * {upgradeToAndCall}.\n     *\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n     *\n     * ```solidity\n     * function _authorizeUpgrade(address) internal onlyOwner {}\n     * ```\n     */\n    function _authorizeUpgrade(address newImplementation) internal virtual;\n\n    /**\n     * @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\n     *\n     * As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\n     * is expected to be the implementation slot in ERC1967.\n     *\n     * Emits an {IERC1967-Upgraded} event.\n     */\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {\n        try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\n            if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {\n                revert UUPSUnsupportedProxiableUUID(slot);\n            }\n            ERC1967Utils.upgradeToAndCall(newImplementation, data);\n        } catch {\n            // The implementation is not UUPS\n            revert ERC1967Utils.ERC1967InvalidImplementation(newImplementation);\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC1822.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC1822.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n * proxy whose upgrades are fully controlled by the current implementation.\n */\ninterface IERC1822Proxiable {\n    /**\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n     * address.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy.\n     */\n    function proxiableUUID() external view returns (bytes32);\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"},"@openzeppelin/contracts/proxy/beacon/IBeacon.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/IBeacon.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\n */\ninterface IBeacon {\n    /**\n     * @dev Must return an address that can be used as a delegate call target.\n     *\n     * {UpgradeableBeacon} will check that this address is a contract.\n     */\n    function implementation() external view returns (address);\n}\n"},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/ERC1967/ERC1967Utils.sol)\n\npragma solidity ^0.8.20;\n\nimport {IBeacon} from \"../beacon/IBeacon.sol\";\nimport {Address} from \"../../utils/Address.sol\";\nimport {StorageSlot} from \"../../utils/StorageSlot.sol\";\n\n/**\n * @dev This abstract contract provides getters and event emitting update functions for\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\n */\nlibrary ERC1967Utils {\n    // We re-declare ERC-1967 events here because they can't be used directly from IERC1967.\n    // This will be fixed in Solidity 0.8.21. At that point we should remove these events.\n    /**\n     * @dev Emitted when the implementation is upgraded.\n     */\n    event Upgraded(address indexed implementation);\n\n    /**\n     * @dev Emitted when the admin account has changed.\n     */\n    event AdminChanged(address previousAdmin, address newAdmin);\n\n    /**\n     * @dev Emitted when the beacon is changed.\n     */\n    event BeaconUpgraded(address indexed beacon);\n\n    /**\n     * @dev Storage slot with the address of the current implementation.\n     * This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n\n    /**\n     * @dev The `implementation` of the proxy is invalid.\n     */\n    error ERC1967InvalidImplementation(address implementation);\n\n    /**\n     * @dev The `admin` of the proxy is invalid.\n     */\n    error ERC1967InvalidAdmin(address admin);\n\n    /**\n     * @dev The `beacon` of the proxy is invalid.\n     */\n    error ERC1967InvalidBeacon(address beacon);\n\n    /**\n     * @dev An upgrade function sees `msg.value > 0` that may be lost.\n     */\n    error ERC1967NonPayable();\n\n    /**\n     * @dev Returns the current implementation address.\n     */\n    function getImplementation() internal view returns (address) {\n        return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 implementation slot.\n     */\n    function _setImplementation(address newImplementation) private {\n        if (newImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(newImplementation);\n        }\n        StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation;\n    }\n\n    /**\n     * @dev Performs implementation upgrade with additional setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-Upgraded} event.\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) internal {\n        _setImplementation(newImplementation);\n        emit Upgraded(newImplementation);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(newImplementation, data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Storage slot with the admin of the contract.\n     * This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\n\n    /**\n     * @dev Returns the current admin.\n     *\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using\n     * the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\n     */\n    function getAdmin() internal view returns (address) {\n        return StorageSlot.getAddressSlot(ADMIN_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 admin slot.\n     */\n    function _setAdmin(address newAdmin) private {\n        if (newAdmin == address(0)) {\n            revert ERC1967InvalidAdmin(address(0));\n        }\n        StorageSlot.getAddressSlot(ADMIN_SLOT).value = newAdmin;\n    }\n\n    /**\n     * @dev Changes the admin of the proxy.\n     *\n     * Emits an {IERC1967-AdminChanged} event.\n     */\n    function changeAdmin(address newAdmin) internal {\n        emit AdminChanged(getAdmin(), newAdmin);\n        _setAdmin(newAdmin);\n    }\n\n    /**\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n     * This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\n\n    /**\n     * @dev Returns the current beacon.\n     */\n    function getBeacon() internal view returns (address) {\n        return StorageSlot.getAddressSlot(BEACON_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\n     */\n    function _setBeacon(address newBeacon) private {\n        if (newBeacon.code.length == 0) {\n            revert ERC1967InvalidBeacon(newBeacon);\n        }\n\n        StorageSlot.getAddressSlot(BEACON_SLOT).value = newBeacon;\n\n        address beaconImplementation = IBeacon(newBeacon).implementation();\n        if (beaconImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(beaconImplementation);\n        }\n    }\n\n    /**\n     * @dev Change the beacon and trigger a setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-BeaconUpgraded} event.\n     *\n     * CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n     * it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n     * efficiency.\n     */\n    function upgradeBeaconToAndCall(address newBeacon, bytes memory data) internal {\n        _setBeacon(newBeacon);\n        emit BeaconUpgraded(newBeacon);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n     * if an upgrade doesn't perform an initialization call.\n     */\n    function _checkNonPayable() private {\n        if (msg.value > 0) {\n            revert ERC1967NonPayable();\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error AddressInsufficientBalance(address account);\n\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedInnerCall();\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert AddressInsufficientBalance(address(this));\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert FailedInnerCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {FailedInnerCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert AddressInsufficientBalance(address(this));\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n     * unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {FailedInnerCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert FailedInnerCall();\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/ReentrancyGuard.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant NOT_ENTERED = 1;\n    uint256 private constant ENTERED = 2;\n\n    uint256 private _status;\n\n    /**\n     * @dev Unauthorized reentrant call.\n     */\n    error ReentrancyGuardReentrantCall();\n\n    constructor() {\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\n        if (_status == ENTERED) {\n            revert ReentrancyGuardReentrantCall();\n        }\n\n        // Any calls to nonReentrant after this point will fail\n        _status = ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == ENTERED;\n    }\n}\n"},"@openzeppelin/contracts/utils/StorageSlot.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n}\n"},"contracts/balancer/BColor.sol":{"content":"// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n\r\n// You should have received a copy of the GNU General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\npragma solidity 0.8.25;\r\n\r\nabstract contract BColor {\r\n    function getColor() external view virtual returns (bytes32);\r\n}\r\n\r\ncontract BBronze is BColor {\r\n    function getColor() external view override returns (bytes32) {\r\n        return bytes32('BRONZE');\r\n    }\r\n}\r\n"},"contracts/balancer/BConst.sol":{"content":"// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n\r\n// You should have received a copy of the GNU General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\npragma solidity 0.8.25;\r\n\r\nimport './BColor.sol';\r\n\r\ncontract BConst is BBronze {\r\n    uint public constant BONE = 10 ** 18;\r\n\r\n    uint public constant MIN_BOUND_TOKENS = 2;\r\n    uint public constant MAX_BOUND_TOKENS = 8;\r\n\r\n    uint public constant MIN_FEE = BONE / 10 ** 6;\r\n    uint public constant MAX_FEE = BONE / 10;\r\n    uint public constant EXIT_FEE = 0;\r\n\r\n    uint public constant MIN_WEIGHT = BONE;\r\n    uint public constant MAX_WEIGHT = BONE * 50;\r\n    uint public constant MAX_TOTAL_WEIGHT = BONE * 50;\r\n    uint public constant MIN_BALANCE = BONE / 10 ** 12;\r\n\r\n    uint public constant INIT_POOL_SUPPLY = BONE * 100;\r\n\r\n    uint public constant MIN_BPOW_BASE = 1 wei;\r\n    uint public constant MAX_BPOW_BASE = (2 * BONE) - 1 wei;\r\n    uint public constant BPOW_PRECISION = BONE / 10 ** 10;\r\n\r\n    uint public constant MAX_IN_RATIO = BONE / 2;\r\n    uint public constant MAX_OUT_RATIO = (BONE / 3) + 1 wei;\r\n}\r\n"},"contracts/balancer/BMath.sol":{"content":"// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n\r\n// You should have received a copy of the GNU General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\npragma solidity 0.8.25;\r\n\r\nimport \"./BNum.sol\";\r\n\r\ncontract BMath is BBronze, BConst, BNum {\r\n    /**********************************************************************************************\r\n    // calcSpotPrice                                                                             //\r\n    // sP = spotPrice                                                                            //\r\n    // bI = tokenBalanceIn                ( bI / wI )         1                                  //\r\n    // bO = tokenBalanceOut         sP =  -----------  *  ----------                             //\r\n    // wI = tokenWeightIn                 ( bO / wO )     ( 1 - sF )                             //\r\n    // wO = tokenWeightOut                                                                       //\r\n    // sF = swapFee                                                                              //\r\n    **********************************************************************************************/\r\n    function calcSpotPrice(\r\n        uint tokenBalanceIn,\r\n        uint tokenWeightIn,\r\n        uint tokenBalanceOut,\r\n        uint tokenWeightOut,\r\n        uint swapFee\r\n    )\r\n        public pure\r\n        returns (uint spotPrice)\r\n    {\r\n        uint numer = bdiv(tokenBalanceIn, tokenWeightIn);\r\n        uint denom = bdiv(tokenBalanceOut, tokenWeightOut);\r\n        uint ratio = bdiv(numer, denom);\r\n        uint scale = bdiv(BONE, bsub(BONE, swapFee));\r\n        return  (spotPrice = bmul(ratio, scale));\r\n    }\r\n\r\n    /**********************************************************************************************\r\n    // calcOutGivenIn                                                                            //\r\n    // aO = tokenAmountOut                                                                       //\r\n    // bO = tokenBalanceOut                                                                      //\r\n    // bI = tokenBalanceIn              /      /            bI             \\    (wI / wO) \\      //\r\n    // aI = tokenAmountIn    aO = bO * |  1 - | --------------------------  | ^            |     //\r\n    // wI = tokenWeightIn               \\      \\ ( bI + ( aI * ( 1 - sF )) /              /      //\r\n    // wO = tokenWeightOut                                                                       //\r\n    // sF = swapFee                                                                              //\r\n    **********************************************************************************************/\r\n    function calcOutGivenIn(\r\n        uint tokenBalanceIn,\r\n        uint tokenWeightIn,\r\n        uint tokenBalanceOut,\r\n        uint tokenWeightOut,\r\n        uint tokenAmountIn,\r\n        uint swapFee\r\n    )\r\n        public pure\r\n        returns (uint tokenAmountOut)\r\n    {\r\n        uint weightRatio = bdiv(tokenWeightIn, tokenWeightOut);\r\n        uint adjustedIn = bsub(BONE, swapFee);\r\n        adjustedIn = bmul(tokenAmountIn, adjustedIn);\r\n        uint y = bdiv(tokenBalanceIn, badd(tokenBalanceIn, adjustedIn));\r\n        uint foo = bpow(y, weightRatio);\r\n        uint bar = bsub(BONE, foo);\r\n        tokenAmountOut = bmul(tokenBalanceOut, bar);\r\n        return tokenAmountOut;\r\n    }\r\n\r\n    /**********************************************************************************************\r\n    // calcInGivenOut                                                                            //\r\n    // aI = tokenAmountIn                                                                        //\r\n    // bO = tokenBalanceOut               /  /     bO      \\    (wO / wI)      \\                 //\r\n    // bI = tokenBalanceIn          bI * |  | ------------  | ^            - 1  |                //\r\n    // aO = tokenAmountOut    aI =        \\  \\ ( bO - aO ) /                   /                 //\r\n    // wI = tokenWeightIn           --------------------------------------------                 //\r\n    // wO = tokenWeightOut                          ( 1 - sF )                                   //\r\n    // sF = swapFee                                                                              //\r\n    **********************************************************************************************/\r\n    function calcInGivenOut(\r\n        uint tokenBalanceIn,\r\n        uint tokenWeightIn,\r\n        uint tokenBalanceOut,\r\n        uint tokenWeightOut,\r\n        uint tokenAmountOut,\r\n        uint swapFee\r\n    )\r\n        public pure\r\n        returns (uint tokenAmountIn)\r\n    {\r\n        uint weightRatio = bdiv(tokenWeightOut, tokenWeightIn);\r\n        uint diff = bsub(tokenBalanceOut, tokenAmountOut);\r\n        uint y = bdiv(tokenBalanceOut, diff);\r\n        uint foo = bpow(y, weightRatio);\r\n        foo = bsub(foo, BONE);\r\n        tokenAmountIn = bsub(BONE, swapFee);\r\n        tokenAmountIn = bdiv(bmul(tokenBalanceIn, foo), tokenAmountIn);\r\n        return tokenAmountIn;\r\n    }\r\n\r\n    /**********************************************************************************************\r\n    // calcPoolOutGivenSingleIn                                                                  //\r\n    // pAo = poolAmountOut         /                                              \\              //\r\n    // tAi = tokenAmountIn        ///      /     //    wI \\      \\\\       \\     wI \\             //\r\n    // wI = tokenWeightIn        //| tAi *| 1 - || 1 - --  | * sF || + tBi \\    --  \\            //\r\n    // tW = totalWeight     pAo=||  \\      \\     \\\\    tW /      //         | ^ tW   | * pS - pS //\r\n    // tBi = tokenBalanceIn      \\\\  ------------------------------------- /        /            //\r\n    // pS = poolSupply            \\\\                    tBi               /        /             //\r\n    // sF = swapFee                \\                                              /              //\r\n    **********************************************************************************************/\r\n    function calcPoolOutGivenSingleIn(\r\n        uint tokenBalanceIn,\r\n        uint tokenWeightIn,\r\n        uint poolSupply,\r\n        uint totalWeight,\r\n        uint tokenAmountIn,\r\n        uint swapFee\r\n    )\r\n        public pure\r\n        returns (uint poolAmountOut)\r\n    {\r\n        // Charge the trading fee for the proportion of tokenAi\r\n        ///  which is implicitly traded to the other pool tokens.\r\n        // That proportion is (1- weightTokenIn)\r\n        // tokenAiAfterFee = tAi * (1 - (1-weightTi) * poolFee);\r\n        uint normalizedWeight = bdiv(tokenWeightIn, totalWeight);\r\n        uint zaz = bmul(bsub(BONE, normalizedWeight), swapFee); \r\n        uint tokenAmountInAfterFee = bmul(tokenAmountIn, bsub(BONE, zaz));\r\n\r\n        uint newTokenBalanceIn = badd(tokenBalanceIn, tokenAmountInAfterFee);\r\n        uint tokenInRatio = bdiv(newTokenBalanceIn, tokenBalanceIn);\r\n\r\n        // uint newPoolSupply = (ratioTi ^ weightTi) * poolSupply;\r\n        uint poolRatio = bpow(tokenInRatio, normalizedWeight);\r\n        uint newPoolSupply = bmul(poolRatio, poolSupply);\r\n        poolAmountOut = bsub(newPoolSupply, poolSupply);\r\n        return poolAmountOut;\r\n    }\r\n\r\n    /**********************************************************************************************\r\n    // calcSingleInGivenPoolOut                                                                  //\r\n    // tAi = tokenAmountIn              //(pS + pAo)\\     /    1    \\\\                           //\r\n    // pS = poolSupply                 || ---------  | ^ | --------- || * bI - bI                //\r\n    // pAo = poolAmountOut              \\\\    pS    /     \\(wI / tW)//                           //\r\n    // bI = balanceIn          tAi =  --------------------------------------------               //\r\n    // wI = weightIn                              /      wI  \\                                   //\r\n    // tW = totalWeight                          |  1 - ----  |  * sF                            //\r\n    // sF = swapFee                               \\      tW  /                                   //\r\n    **********************************************************************************************/\r\n    function calcSingleInGivenPoolOut(\r\n        uint tokenBalanceIn,\r\n        uint tokenWeightIn,\r\n        uint poolSupply,\r\n        uint totalWeight,\r\n        uint poolAmountOut,\r\n        uint swapFee\r\n    )\r\n        public pure\r\n        returns (uint tokenAmountIn)\r\n    {\r\n        uint normalizedWeight = bdiv(tokenWeightIn, totalWeight);\r\n        uint newPoolSupply = badd(poolSupply, poolAmountOut);\r\n        uint poolRatio = bdiv(newPoolSupply, poolSupply);\r\n      \r\n        //uint newBalTi = poolRatio^(1/weightTi) * balTi;\r\n        uint boo = bdiv(BONE, normalizedWeight); \r\n        uint tokenInRatio = bpow(poolRatio, boo);\r\n        uint newTokenBalanceIn = bmul(tokenInRatio, tokenBalanceIn);\r\n        uint tokenAmountInAfterFee = bsub(newTokenBalanceIn, tokenBalanceIn);\r\n        // Do reverse order of fees charged in joinswap_ExternAmountIn, this way \r\n        //     ``` pAo == joinswap_ExternAmountIn(Ti, joinswap_PoolAmountOut(pAo, Ti)) ```\r\n        //uint tAi = tAiAfterFee / (1 - (1-weightTi) * swapFee) ;\r\n        uint zar = bmul(bsub(BONE, normalizedWeight), swapFee);\r\n        tokenAmountIn = bdiv(tokenAmountInAfterFee, bsub(BONE, zar));\r\n        return tokenAmountIn;\r\n    }\r\n\r\n    /**********************************************************************************************\r\n    // calcSingleOutGivenPoolIn                                                                  //\r\n    // tAo = tokenAmountOut            /      /                                             \\\\   //\r\n    // bO = tokenBalanceOut           /      // pS - (pAi * (1 - eF)) \\     /    1    \\      \\\\  //\r\n    // pAi = poolAmountIn            | bO - || ----------------------- | ^ | --------- | * b0 || //\r\n    // ps = poolSupply                \\      \\\\          pS           /     \\(wO / tW)/      //  //\r\n    // wI = tokenWeightIn      tAo =   \\      \\                                             //   //\r\n    // tW = totalWeight                    /     /      wO \\       \\                             //\r\n    // sF = swapFee                    *  | 1 - |  1 - ---- | * sF  |                            //\r\n    // eF = exitFee                        \\     \\      tW /       /                             //\r\n    **********************************************************************************************/\r\n    function calcSingleOutGivenPoolIn(\r\n        uint tokenBalanceOut,\r\n        uint tokenWeightOut,\r\n        uint poolSupply,\r\n        uint totalWeight,\r\n        uint poolAmountIn,\r\n        uint swapFee\r\n    )\r\n        public pure\r\n        returns (uint tokenAmountOut)\r\n    {\r\n        uint normalizedWeight = bdiv(tokenWeightOut, totalWeight);\r\n        // charge exit fee on the pool token side\r\n        // pAiAfterExitFee = pAi*(1-exitFee)\r\n        uint poolAmountInAfterExitFee = bmul(poolAmountIn, bsub(BONE, EXIT_FEE));\r\n        uint newPoolSupply = bsub(poolSupply, poolAmountInAfterExitFee);\r\n        uint poolRatio = bdiv(newPoolSupply, poolSupply);\r\n     \r\n        // newBalTo = poolRatio^(1/weightTo) * balTo;\r\n        uint tokenOutRatio = bpow(poolRatio, bdiv(BONE, normalizedWeight));\r\n        uint newTokenBalanceOut = bmul(tokenOutRatio, tokenBalanceOut);\r\n\r\n        uint tokenAmountOutBeforeSwapFee = bsub(tokenBalanceOut, newTokenBalanceOut);\r\n\r\n        // charge swap fee on the output token side \r\n        //uint tAo = tAoBeforeSwapFee * (1 - (1-weightTo) * swapFee)\r\n        uint zaz = bmul(bsub(BONE, normalizedWeight), swapFee); \r\n        tokenAmountOut = bmul(tokenAmountOutBeforeSwapFee, bsub(BONE, zaz));\r\n        return tokenAmountOut;\r\n    }\r\n\r\n    /**********************************************************************************************\r\n    // calcPoolInGivenSingleOut                                                                  //\r\n    // pAi = poolAmountIn               // /               tAo             \\\\     / wO \\     \\   //\r\n    // bO = tokenBalanceOut            // | bO - -------------------------- |\\   | ---- |     \\  //\r\n    // tAo = tokenAmountOut      pS - ||   \\     1 - ((1 - (tO / tW)) * sF)/  | ^ \\ tW /  * pS | //\r\n    // ps = poolSupply                 \\\\ -----------------------------------/                /  //\r\n    // wO = tokenWeightOut  pAi =       \\\\               bO                 /                /   //\r\n    // tW = totalWeight           -------------------------------------------------------------  //\r\n    // sF = swapFee                                        ( 1 - eF )                            //\r\n    // eF = exitFee                                                                              //\r\n    **********************************************************************************************/\r\n    function calcPoolInGivenSingleOut(\r\n        uint tokenBalanceOut,\r\n        uint tokenWeightOut,\r\n        uint poolSupply,\r\n        uint totalWeight,\r\n        uint tokenAmountOut,\r\n        uint swapFee\r\n    )\r\n        public pure\r\n        returns (uint poolAmountIn)\r\n    {\r\n\r\n        // charge swap fee on the output token side \r\n        uint normalizedWeight = bdiv(tokenWeightOut, totalWeight);\r\n        //uint tAoBeforeSwapFee = tAo / (1 - (1-weightTo) * swapFee) ;\r\n        uint zoo = bsub(BONE, normalizedWeight);\r\n        uint zar = bmul(zoo, swapFee); \r\n        uint tokenAmountOutBeforeSwapFee = bdiv(tokenAmountOut, bsub(BONE, zar));\r\n\r\n        uint newTokenBalanceOut = bsub(tokenBalanceOut, tokenAmountOutBeforeSwapFee);\r\n        uint tokenOutRatio = bdiv(newTokenBalanceOut, tokenBalanceOut);\r\n\r\n        //uint newPoolSupply = (ratioTo ^ weightTo) * poolSupply;\r\n        uint poolRatio = bpow(tokenOutRatio, normalizedWeight);\r\n        uint newPoolSupply = bmul(poolRatio, poolSupply);\r\n        uint poolAmountInAfterExitFee = bsub(poolSupply, newPoolSupply);\r\n\r\n        // charge exit fee on the pool token side\r\n        // pAi = pAiAfterExitFee/(1-exitFee)\r\n        poolAmountIn = bdiv(poolAmountInAfterExitFee, bsub(BONE, EXIT_FEE));\r\n        return poolAmountIn;\r\n    }\r\n\r\n\r\n}\r\n"},"contracts/balancer/BNum.sol":{"content":"// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n\r\n// You should have received a copy of the GNU General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\npragma solidity 0.8.25;\r\n\r\nimport \"./BConst.sol\";\r\n\r\ncontract BNum is BConst {\r\n\r\n    function btoi(uint a)\r\n        internal pure \r\n        returns (uint)\r\n    {\r\n        return a / BONE;\r\n    }\r\n\r\n    function bfloor(uint a)\r\n        internal pure\r\n        returns (uint)\r\n    {\r\n        return btoi(a) * BONE;\r\n    }\r\n\r\n    function badd(uint a, uint b)\r\n        internal pure\r\n        returns (uint)\r\n    {\r\n        uint c = a + b;\r\n        require(c >= a, \"ERR_ADD_OVERFLOW\");\r\n        return c;\r\n    }\r\n\r\n    function bsub(uint a, uint b)\r\n        internal pure\r\n        returns (uint)\r\n    {\r\n        (uint c, bool flag) = bsubSign(a, b);\r\n        require(!flag, \"ERR_SUB_UNDERFLOW\");\r\n        return c;\r\n    }\r\n\r\n    function bsubSign(uint a, uint b)\r\n        internal pure\r\n        returns (uint, bool)\r\n    {\r\n        if (a >= b) {\r\n            return (a - b, false);\r\n        } else {\r\n            return (b - a, true);\r\n        }\r\n    }\r\n\r\n    function bmul(uint a, uint b)\r\n        internal pure\r\n        returns (uint)\r\n    {\r\n        uint c0 = a * b;\r\n        require(a == 0 || c0 / a == b, \"ERR_MUL_OVERFLOW\");\r\n        uint c1 = c0 + (BONE / 2);\r\n        require(c1 >= c0, \"ERR_MUL_OVERFLOW\");\r\n        uint c2 = c1 / BONE;\r\n        return c2;\r\n    }\r\n\r\n    function bdiv(uint a, uint b)\r\n        internal pure\r\n        returns (uint)\r\n    {\r\n        require(b != 0, \"ERR_DIV_ZERO\");\r\n        uint c0 = a * BONE;\r\n        require(a == 0 || c0 / a == BONE, \"ERR_DIV_INTERNAL\"); // bmul overflow\r\n        uint c1 = c0 + (b / 2);\r\n        require(c1 >= c0, \"ERR_DIV_INTERNAL\"); //  badd require\r\n        uint c2 = c1 / b;\r\n        return c2;\r\n    }\r\n\r\n    // DSMath.wpow\r\n    function bpowi(uint a, uint n)\r\n        internal pure\r\n        returns (uint)\r\n    {\r\n        uint z = n % 2 != 0 ? a : BONE;\r\n\r\n        for (n /= 2; n != 0; n /= 2) {\r\n            a = bmul(a, a);\r\n\r\n            if (n % 2 != 0) {\r\n                z = bmul(z, a);\r\n            }\r\n        }\r\n        return z;\r\n    }\r\n\r\n    // Compute b^(e.w) by splitting it into (b^e)*(b^0.w).\r\n    // Use `bpowi` for `b^e` and `bpowK` for k iterations\r\n    // of approximation of b^0.w\r\n    function bpow(uint base, uint exp)\r\n        internal pure\r\n        returns (uint)\r\n    {\r\n        require(base >= MIN_BPOW_BASE, \"ERR_BPOW_BASE_TOO_LOW\");\r\n        require(base <= MAX_BPOW_BASE, \"ERR_BPOW_BASE_TOO_HIGH\");\r\n\r\n        uint whole  = bfloor(exp);   \r\n        uint remain = bsub(exp, whole);\r\n\r\n        uint wholePow = bpowi(base, btoi(whole));\r\n\r\n        if (remain == 0) {\r\n            return wholePow;\r\n        }\r\n\r\n        uint partialResult = bpowApprox(base, remain, BPOW_PRECISION);\r\n        return bmul(wholePow, partialResult);\r\n    }\r\n\r\n    function bpowApprox(uint base, uint exp, uint precision)\r\n        internal pure\r\n        returns (uint)\r\n    {\r\n        // term 0:\r\n        uint a     = exp;\r\n        (uint x, bool xneg)  = bsubSign(base, BONE);\r\n        uint term = BONE;\r\n        uint sum   = term;\r\n        bool negative = false;\r\n\r\n\r\n        // term(k) = numer / denom \r\n        //         = (product(a - i - 1, i=1-->k) * x^k) / (k!)\r\n        // each iteration, multiply previous term by (a-(k-1)) * x / k\r\n        // continue until term is less than precision\r\n        for (uint i = 1; term >= precision; i++) {\r\n            uint bigK = i * BONE;\r\n            (uint c, bool cneg) = bsubSign(a, bsub(bigK, BONE));\r\n            term = bmul(term, bmul(c, x));\r\n            term = bdiv(term, bigK);\r\n            if (term == 0) break;\r\n\r\n            if (xneg) negative = !negative;\r\n            if (cneg) negative = !negative;\r\n            if (negative) {\r\n                sum = bsub(sum, term);\r\n            } else {\r\n                sum = badd(sum, term);\r\n            }\r\n        }\r\n\r\n        return sum;\r\n    }\r\n\r\n}\r\n"},"contracts/BaluniV1Pool.sol":{"content":"// SPDX-License-Identifier: GNU AGPLv3\r\npragma solidity 0.8.25;\r\n/**\r\n *  __                  __                      __\r\n * /  |                /  |                    /  |\r\n * $$ |____    ______  $$ | __    __  _______  $$/\r\n * $$      \\  /      \\ $$ |/  |  /  |/       \\ /  |\r\n * $$$$$$$  | $$$$$$  |$$ |$$ |  $$ |$$$$$$$  |$$ |\r\n * $$ |  $$ | /    $$ |$$ |$$ |  $$ |$$ |  $$ |$$ |\r\n * $$ |__$$ |/$$$$$$$ |$$ |$$ \\__$$ |$$ |  $$ |$$ |\r\n * $$    $$/ $$    $$ |$$ |$$    $$/ $$ |  $$ |$$ |\r\n * $$$$$$$/   $$$$$$$/ $$/  $$$$$$/  $$/   $$/ $$/\r\n *\r\n *\r\n *                  ,-\"\"\"\"-.\r\n *                ,'      _ `.\r\n *               /       )_)  \\\r\n *              :              :\r\n *              \\              /\r\n *               \\            /\r\n *                `.        ,'\r\n *                  `.    ,'\r\n *                    `.,'\r\n *                     /\\`.   ,-._\r\n *                         `-'    \\__\r\n *                              .\r\n *               s                \\\r\n *                                \\\\\r\n *                                 \\\\\r\n *                                  >\\/7\r\n *                              _.-(6'  \\\r\n *                             (=___._/` \\\r\n *                                  )  \\ |\r\n *                                 /   / |\r\n *                                /    > /\r\n *                               j    < _\\\r\n *                           _.-' :      ``.\r\n *                           \\ r=._\\        `.\r\n */\r\nimport './interfaces/IBaluniV1Rebalancer.sol';\r\nimport './interfaces/IBaluniV1Router.sol';\r\nimport '@openzeppelin/contracts/token/ERC20/ERC20.sol';\r\nimport '@openzeppelin/contracts/utils/ReentrancyGuard.sol';\r\n\r\nimport './interfaces/IBaluniV1PoolPeriphery.sol';\r\nimport './balancer/BMath.sol';\r\n\r\ncontract BaluniV1Pool is ERC20, ReentrancyGuard, BMath {\r\n    AssetInfo[] public assetInfos;\r\n    uint256 public trigger;\r\n    uint256 public ONE;\r\n    address public periphery;\r\n    address public factory;\r\n    uint256 public constant SWAP_FEE_BPS = 30; // 0.3%\r\n    address public baseAsset;\r\n    address public rebalancer;\r\n\r\n    struct AssetInfo {\r\n        address asset;\r\n        uint256 weight;\r\n    }\r\n\r\n    event RebalancePerformed(address indexed by, address[] assets);\r\n    event WeightsRebalanced(address indexed user, uint256[] amountsAdded);\r\n    event Burn(address indexed user, uint256 sharesBurned);\r\n    event Mint(address indexed to, uint256 sharesMinted);\r\n    event Swap(\r\n        address indexed user,\r\n        address indexed fromToken,\r\n        address indexed toToken,\r\n        uint256 amountIn,\r\n        uint256 amountOut\r\n    );\r\n\r\n    /**\r\n     * @dev Initializes a new instance of the BaluniV1Pool contract.\r\n     * @param _rebalancer The address of the rebalancer contract.\r\n     * @param _assets An array of addresses representing the assets in the pool.\r\n     * @param _weights An array of weights corresponding to the assets in the pool.\r\n     * @param _trigger The trigger value for rebalancing the pool.\r\n     * @param _periphery The address of the periphery contract.\r\n     */\r\n    constructor(\r\n        address _rebalancer,\r\n        address[] memory _assets,\r\n        uint256[] memory _weights,\r\n        uint256 _trigger,\r\n        address _periphery\r\n    ) ERC20('Baluni LP', 'BALUNI-LP') {\r\n        // Initialize contract state variables\r\n        periphery = _periphery;\r\n        factory = msg.sender;\r\n        rebalancer = _rebalancer;\r\n        ONE = 1e18;\r\n\r\n        // Initialize assets and weights\r\n        initializeAssets(_assets, _weights);\r\n\r\n        // Set trigger value\r\n        trigger = _trigger;\r\n\r\n        // Set base asset\r\n        baseAsset = IBaluniV1Rebalancer(_rebalancer).USDC();\r\n        //baseAsset = IBaluniV1Rebalancer(_rebalancer).WNATIVE();\r\n\r\n        // Ensure the sum of weights equals 10000\r\n        uint256 totalWeight = 0;\r\n        for (uint256 i = 0; i < _weights.length; i++) {\r\n            totalWeight += _weights[i];\r\n        }\r\n        require(totalWeight == 10000, 'Invalid weights');\r\n    }\r\n\r\n    modifier onlyPeriphery() {\r\n        require(msg.sender == periphery, 'Only Periphery');\r\n        _;\r\n    }\r\n\r\n    function calcSpotPrice(address fromToken, address toToken) public view returns (uint256) {\r\n        uint256 reserveFrom = getAssetReserve(fromToken);\r\n        uint256 reserveTo = getAssetReserve(toToken);\r\n\r\n        // check decimal of from and to token and scale to 18 decimal\r\n        uint256 fromDecimal = IERC20Metadata(fromToken).decimals();\r\n        uint256 toDecimal = IERC20Metadata(toToken).decimals();\r\n\r\n        uint256 tokenBalanceIn = reserveFrom * 10 ** 18 - fromDecimal;\r\n        uint256 tokenBalanceOut = reserveTo * 10 ** 18 - toDecimal;\r\n\r\n        // convert the weight 3000 into 0.1*1e18 format\r\n        uint256 tokenWeightIn = (_getTargetWeight(fromToken) / 1000) * 10 ** 18;\r\n        uint256 tokenWeightOut = (_getTargetWeight(toToken) / 1000) * 10 ** 18;\r\n\r\n        return BMath.calcSpotPrice(tokenBalanceIn, tokenWeightIn, tokenBalanceOut, tokenWeightOut, SWAP_FEE_BPS);\r\n    }\r\n\r\n    function calcOraclePrice(address fromToken, address toToken) external view returns (uint256) {\r\n        uint256 reserveFrom = getAssetReserve(fromToken);\r\n        uint256 reserveTo = getAssetReserve(toToken);\r\n        uint fromDecimal = IERC20Metadata(fromToken).decimals();\r\n        return IBaluniV1Rebalancer(rebalancer).convert(fromToken, toToken, 1 * 10 ** fromDecimal);\r\n    }\r\n\r\n    /**\r\n     * @dev Initializes the assets and their weights for the pool.\r\n     * @param _assets The array of asset addresses.\r\n     * @param _weights The array of weights corresponding to each asset.\r\n     */\r\n    function initializeAssets(address[] memory _assets, uint256[] memory _weights) internal {\r\n        require(_assets.length == _weights.length, 'Assets and weights length mismatch');\r\n\r\n        for (uint256 i = 0; i < _assets.length; i++) {\r\n            require(_assets[i] != address(0), 'Invalid asset address');\r\n            require(_weights[i] > 0, 'Invalid weight');\r\n\r\n            assetInfos.push(AssetInfo({asset: _assets[i], weight: _weights[i]}));\r\n\r\n            IERC20 asset = IERC20(_assets[i]);\r\n            if (asset.allowance(address(this), address(rebalancer)) == 0) {\r\n                asset.approve(address(rebalancer), type(uint256).max);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Rebalances the weights of the pool by calculating the amounts to add for each token,\r\n     * transferring the calculated amounts from the user to the pool, minting the total added liquidity,\r\n     * updating the reserves, and emitting an event to indicate the rebalancing of weights.\r\n     * @param receiver The address to receive the minted liquidity tokens.\r\n     */\r\n    function rebalanceWeights(address receiver) external onlyPeriphery returns (uint256[] memory) {\r\n        require(isRebalanceNeeded(), 'Rebalance not needed');\r\n        (uint256 totalValuation, uint256[] memory valuations) = _computeTotalValuation();\r\n\r\n        uint256[] memory amountsToAdd = _calculateAmountsToAdd(totalValuation, valuations);\r\n\r\n        // Calculate total added liquidity before minting\r\n        uint256 totalAddedLiquidity = _calculateTotalAddedLiquidity(amountsToAdd);\r\n\r\n        uint baseDecimal = IERC20Metadata(baseAsset).decimals();\r\n\r\n        totalAddedLiquidity *= 10 ** 18 - baseDecimal;\r\n\r\n        uint256[] memory amounts = new uint256[](assetInfos.length);\r\n\r\n        for (uint256 i = 0; i < amountsToAdd.length; i++) {\r\n            if (amountsToAdd[i] > 0) {\r\n                amounts[i] = _calculateLiquidity(i, amountsToAdd[i]);\r\n            }\r\n        }\r\n\r\n        _mint(receiver, totalAddedLiquidity);\r\n\r\n        emit WeightsRebalanced(msg.sender, amountsToAdd);\r\n\r\n        return amounts;\r\n    }\r\n\r\n    /**\r\n     * @dev Swaps `amount` of `fromToken` to `toToken` and transfers the received amount to `receiver`.\r\n     *\r\n     * Requirements:\r\n     * - `fromToken` and `toToken` must be different tokens.\r\n     * - `amount` must be greater than zero.\r\n     * - Sufficient liquidity of `toToken` must be available in the contract.\r\n     *\r\n     * Emits a `Swap` event with the details of the swap.\r\n     *\r\n     * Updates the reserves after the swap.\r\n     *\r\n     * @param fromToken The address of the token to swap from.\r\n     * @param toToken The address of the token to swap to.\r\n     * @param amount The amount of `fromToken` to swap.\r\n     * @param receiver The address to receive the swapped tokens.\r\n     * @return toSend The amount of `toToken` received after the swap.\r\n     */\r\n    function swap(\r\n        address fromToken,\r\n        address toToken,\r\n        uint256 amount,\r\n        address receiver\r\n    ) external nonReentrant returns (uint256 toSend) {\r\n        require(fromToken != toToken, 'Cannot swap the same token');\r\n        require(amount > 0, 'Amount must be greater than zero');\r\n\r\n        //uint256 receivedAmount = getAmountOut(fromToken, toToken, amount);\r\n\r\n        uint256 receivedAmount = _swapExactAmountIn(fromToken, amount, toToken, 1, 1e18);\r\n        receivedAmount /= 10 ** 18 - IERC20Metadata(toToken).decimals();\r\n\r\n        // uint256 toDecimal = IERC20Metadata(toToken).decimals();\r\n        // uint256 price = calcSpotPrice(fromToken, toToken);\r\n        // uint256 receivedAmount = (amount * price) / 10 ** 18 - toDecimal;\r\n\r\n        require(getAssetReserve(toToken) >= receivedAmount, 'Insufficient Liquidity');\r\n\r\n        uint256 fee = (receivedAmount * SWAP_FEE_BPS) / 10000;\r\n        toSend = receivedAmount - fee;\r\n\r\n        emit Swap(receiver, fromToken, toToken, amount, toSend);\r\n\r\n        return toSend;\r\n    }\r\n\r\n    function _swapExactAmountIn(\r\n        address tokenIn,\r\n        uint tokenAmountIn,\r\n        address tokenOut,\r\n        uint minAmountOut,\r\n        uint maxPrice\r\n    ) internal returns (uint tokenAmountOut) {\r\n        uint256 tokenOutReserve = getAssetReserve(tokenOut);\r\n        uint256 tokenInReserve = getAssetReserve(tokenIn);\r\n\r\n        //uint spotPriceBefore = calcSpotPrice(tokenIn, tokenOut);\r\n        uint spotPriceBefore = calcSpotPrice(\r\n            tokenInReserve,\r\n            (_getTargetWeight(tokenIn) / 1000) * 1e18,\r\n            tokenOutReserve,\r\n            (_getTargetWeight(tokenOut) / 1000) * 1e18,\r\n            SWAP_FEE_BPS\r\n        );\r\n\r\n        //require(spotPriceBefore <= maxPrice, 'ERR_BAD_LIMIT_PRICE');\r\n\r\n        tokenAmountOut = calcOutGivenIn(\r\n            tokenInReserve,\r\n            (_getTargetWeight(tokenIn) / 1000) * 1e18,\r\n            tokenOutReserve,\r\n            (_getTargetWeight(tokenOut) / 1000) * 1e18,\r\n            tokenAmountIn,\r\n            SWAP_FEE_BPS\r\n        );\r\n        require(tokenAmountOut >= minAmountOut, 'ERR_LIMIT_OUT');\r\n\r\n        tokenInReserve = badd(tokenInReserve, tokenAmountIn);\r\n        tokenOutReserve = bsub(tokenOutReserve, tokenAmountOut);\r\n\r\n        uint256 spotPriceAfter = calcSpotPrice(\r\n            tokenInReserve,\r\n            (_getTargetWeight(tokenIn) / 1000) * 1e18,\r\n            tokenOutReserve,\r\n            (_getTargetWeight(tokenOut) / 1000) * 1e18,\r\n            SWAP_FEE_BPS\r\n        );\r\n        require(spotPriceAfter >= spotPriceBefore, 'ERR_MATH_APPROX');\r\n        //require(spotPriceAfter <= maxPrice, 'ERR_LIMIT_PRICE');\r\n        require(spotPriceBefore <= bdiv(tokenAmountIn, tokenAmountOut), 'ERR_MATH_APPROX');\r\n\r\n        return (tokenAmountOut);\r\n    }\r\n\r\n    function _swapExactAmountOut(\r\n        address tokenIn,\r\n        uint maxAmountIn,\r\n        address tokenOut,\r\n        uint tokenAmountOut,\r\n        uint maxPrice\r\n    ) internal returns (uint tokenAmountIn) {\r\n        uint256 tokenOutReserve = getAssetReserve(tokenOut);\r\n        uint256 tokenInReserve = getAssetReserve(tokenIn);\r\n\r\n        uint spotPriceBefore = calcSpotPrice(tokenIn, tokenOut);\r\n        require(spotPriceBefore <= maxPrice, 'ERR_BAD_LIMIT_PRICE');\r\n\r\n        tokenAmountIn = calcInGivenOut(\r\n            tokenInReserve,\r\n            (_getTargetWeight(tokenIn) / 1000) * 1e18,\r\n            tokenOutReserve,\r\n            (_getTargetWeight(tokenOut) / 1000) * 1e18,\r\n            tokenAmountOut,\r\n            SWAP_FEE_BPS\r\n        );\r\n\r\n        tokenInReserve = badd(tokenInReserve, tokenAmountIn);\r\n        tokenOutReserve = bsub(tokenOutReserve, tokenAmountOut);\r\n\r\n        uint256 spotPriceAfter = calcSpotPrice(\r\n            tokenInReserve,\r\n            (_getTargetWeight(tokenIn) / 1000) * 1e18,\r\n            tokenOutReserve,\r\n            (_getTargetWeight(tokenOut) / 1000) * 1e18,\r\n            SWAP_FEE_BPS\r\n        );\r\n        require(spotPriceAfter >= spotPriceBefore, 'ERR_MATH_APPROX');\r\n        require(spotPriceAfter <= maxPrice, 'ERR_LIMIT_PRICE');\r\n        require(spotPriceBefore <= bdiv(tokenAmountIn, tokenAmountOut), 'ERR_MATH_APPROX');\r\n\r\n        return (tokenAmountOut);\r\n    }\r\n\r\n    /**\r\n     * @dev Mints new tokens and adds them to the specified address.\r\n     * @param to The address to which the new tokens will be minted.\r\n     * @return The amount of tokens minted.\r\n     */\r\n    function mint(address to, uint256[] memory amounts) external onlyPeriphery returns (uint256) {\r\n        uint256 totalSupply = totalSupply();\r\n        uint256 totalValue = 0;\r\n        uint256[] memory _reserves = getReserves();\r\n        require(assetInfos.length == _reserves.length, 'Invalid reserves length');\r\n        require(assetInfos.length > 0, 'No assets');\r\n\r\n        for (uint256 i = 0; i < assetInfos.length; i++) {\r\n            address asset = assetInfos[i].asset;\r\n\r\n            uint256 valuation = _convertTokenToBase(asset, amounts[i]);\r\n            totalValue += valuation;\r\n        }\r\n\r\n        require(totalValue > 0, 'Total value must be greater than 0');\r\n\r\n        uint256 toMint;\r\n\r\n        // Calculate total added liquidity before minting\r\n\r\n        uint baseDecimal = IERC20Metadata(baseAsset).decimals();\r\n\r\n        if (totalSupply == 0) {\r\n            toMint = totalValue * 10 ** 18 - baseDecimal;\r\n        } else {\r\n            (uint256 totalLiquidity, ) = _computeTotalValuation();\r\n            require(totalLiquidity > 0, 'Total liquidity must be greater than 0');\r\n            toMint = (((totalValue) * totalSupply) / totalLiquidity) * 10 ** 18 - baseDecimal;\r\n        }\r\n        require(toMint != 0, 'Mint qty is 0');\r\n\r\n        uint256 b4 = balanceOf(msg.sender);\r\n        _mint(to, toMint);\r\n        uint256 b = balanceOf(to) - b4;\r\n\r\n        require(b == toMint, 'Mint Failed');\r\n\r\n        emit Mint(to, toMint);\r\n\r\n        return toMint;\r\n    }\r\n\r\n    /**\r\n     * @dev Burns the pool tokens and transfers the underlying assets to the specified address.\r\n     * @param to The address to transfer the underlying assets to.\r\n     * @notice This function can only be called by the periphery contract.\r\n     * @notice The pool tokens must have a balance greater than 0.\r\n     * @notice The total supply of pool tokens must be greater than 0.\r\n     * @notice The function calculates the amounts of each underlying asset to transfer based on the share of pool tokens being burned.\r\n     * @notice A fee is deducted from the share of pool tokens being burned and transferred to the treasury address.\r\n     * @notice The function checks if the pool has sufficient liquidity before performing any transfers.\r\n     * @notice If any transfer fails, the function reverts the entire operation.\r\n     * @notice After the transfers, the function updates the reserves of the pool.\r\n     * @notice Emits a `Burn` event with the address and share of pool tokens burned.\r\n     */\r\n    function burn(address to) external onlyPeriphery returns (uint256[] memory) {\r\n        uint256 share = balanceOf(address(this));\r\n        require(share > 0, 'Share must be greater than 0');\r\n\r\n        uint256 totalSupply = totalSupply();\r\n        require(totalSupply > 0, 'No liquidity');\r\n\r\n        uint256[] memory amounts = new uint256[](assetInfos.length);\r\n        uint256 fee = (share * SWAP_FEE_BPS) / 10000;\r\n        uint256 shareAfterFee = share - fee;\r\n\r\n        for (uint256 i = 0; i < assetInfos.length; i++) {\r\n            uint256 assetBalance = IBaluniV1PoolPeriphery(periphery).getAssetReserve(\r\n                address(this),\r\n                assetInfos[i].asset\r\n            );\r\n            amounts[i] = (assetBalance * shareAfterFee) / totalSupply;\r\n        }\r\n\r\n        require(balanceOf(address(this)) >= shareAfterFee, 'Insufficient BALUNI liquidity');\r\n\r\n        bool feeTransferSuccess = IERC20(address(this)).transfer(IBaluniV1Rebalancer(rebalancer).treasury(), fee);\r\n        require(feeTransferSuccess, 'Fee transfer failed');\r\n\r\n        _burn(address(this), shareAfterFee);\r\n\r\n        emit Burn(to, shareAfterFee);\r\n\r\n        return amounts;\r\n    }\r\n\r\n    /**\r\n     * @dev Calculates the amount of `toToken` that will be received when swapping `fromToken` for `toToken`.\r\n     * @param fromToken The address of the token being swapped from.\r\n     * @param toToken The address of the token being swapped to.\r\n     * @param amount The amount of `fromToken` being swapped.\r\n     * @return The amount of `toToken` that will be received.\r\n     */\r\n    function getAmountOut(address fromToken, address toToken, uint256 amount) public view returns (uint256) {\r\n        return IBaluniV1Rebalancer(rebalancer).convert(fromToken, toToken, amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Performs rebalance\r\n     */\r\n    function performRebalanceIfNeeded()\r\n        external\r\n        onlyPeriphery\r\n        returns (uint256[] memory amountsToAdd, uint256[] memory amountsToRemove)\r\n    {\r\n        require(isRebalanceNeeded(), 'Rebalance not needed');\r\n        return _performRebalanceIfNeeded();\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the deviation between the current weights and target weights of the assets in the pool.\r\n     * @return directions An array of boolean values indicating whether the current weight is higher (true) or lower (false) than the target weight.\r\n     */\r\n    function getDeviation() public view returns (bool[] memory directions, uint256[] memory deviations) {\r\n        (uint256 totVal, uint256[] memory valuations) = _computeTotalValuation();\r\n        uint256 numAssets = assetInfos.length;\r\n\r\n        directions = new bool[](numAssets);\r\n        deviations = new uint256[](numAssets);\r\n\r\n        for (uint256 i = 0; i < numAssets; i++) {\r\n            uint256 currentWeight = (valuations[i] * 10000) / totVal;\r\n            uint256 targetWeight = assetInfos[i].weight;\r\n\r\n            if (currentWeight > targetWeight) {\r\n                deviations[i] = currentWeight - targetWeight;\r\n                directions[i] = true;\r\n            } else {\r\n                deviations[i] = targetWeight - currentWeight;\r\n                directions[i] = false;\r\n            }\r\n        }\r\n\r\n        return (directions, deviations);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the liquidity of a specific asset in the pool.\r\n     * @param assetIndex The index of the asset.\r\n     * @return The liquidity of the asset.\r\n     */\r\n    function assetLiquidity(uint256 assetIndex) external view returns (uint256) {\r\n        (, uint256[] memory usdValuations) = _computeTotalValuation();\r\n        require(assetIndex < usdValuations.length, 'Invalid asset index');\r\n        return usdValuations[assetIndex];\r\n    }\r\n\r\n    /**\r\n     * @dev Computes the total valuation of the pool and returns the total valuation and an array of individual valuations.\r\n     * @return totalVal The total valuation of the pool.\r\n     * @return valuations An array of individual valuations.\r\n     */\r\n    function computeTotalValuation() external view returns (uint256 totalVal, uint256[] memory valuations) {\r\n        (totalVal, valuations) = _computeTotalValuation();\r\n        return (totalVal, valuations);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the total liquidity of the pool.\r\n     * @return The total liquidity of the pool.\r\n     */\r\n    function liquidity() external view returns (uint256) {\r\n        (uint256 totalVal, ) = _computeTotalValuation();\r\n        return totalVal;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the unit price of the pool.\r\n     * @return The unit price of the pool.\r\n     */\r\n    function unitPrice() external view returns (uint256) {\r\n        (uint256 totalVal, ) = _computeTotalValuation();\r\n        uint256 totalSupply = totalSupply();\r\n        if (totalSupply == 0) {\r\n            return 0;\r\n        }\r\n        return (totalVal * ONE) / totalSupply;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns an array of reserves for each asset in the pool.\r\n     * @return An array of reserves.\r\n     */\r\n    function getReserves() public view returns (uint256[] memory) {\r\n        return IBaluniV1PoolPeriphery(periphery).getReserves(address(this));\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the reserve amount of the specified asset.\r\n     * @param asset The address of the asset.\r\n     * @return The reserve amount of the asset.\r\n     */\r\n    function getAssetReserve(address asset) public view returns (uint256) {\r\n        return IBaluniV1PoolPeriphery(periphery).getAssetReserve(address(this), asset);\r\n    }\r\n\r\n    /**\r\n     * @dev Retrieves the list of assets in the pool.\r\n     * @return An array of addresses representing the assets.\r\n     */\r\n    function getAssets() external view returns (address[] memory) {\r\n        address[] memory assets = new address[](assetInfos.length);\r\n        for (uint256 i = 0; i < assetInfos.length; i++) {\r\n            assets[i] = assetInfos[i].asset;\r\n        }\r\n        return assets;\r\n    }\r\n\r\n    /**\r\n     * @dev Retrieves the list of weights associated with the assets in the pool.\r\n     * @return An array of uint256 values representing the weights.\r\n     */\r\n    function getWeights() external view returns (uint256[] memory) {\r\n        uint256[] memory weights = new uint256[](assetInfos.length);\r\n        for (uint256 i = 0; i < assetInfos.length; i++) {\r\n            weights[i] = assetInfos[i].weight;\r\n        }\r\n        return weights;\r\n    }\r\n\r\n    /**\r\n     * @dev Computes the total valuation of the assets in the pool.\r\n     * @return totalValuation The total valuation of the assets.\r\n     * @return valuations An array of valuations for each asset in the pool.\r\n     */\r\n    function _computeTotalValuation() internal view returns (uint256 totalValuation, uint256[] memory valuations) {\r\n        uint256 numAssets = assetInfos.length;\r\n        valuations = new uint256[](numAssets);\r\n        for (uint256 i = 0; i < numAssets; i++) {\r\n            address asset = assetInfos[i].asset;\r\n            uint256 assetReserve = getAssetReserve(address(asset));\r\n\r\n            if ((address(asset) == baseAsset)) {\r\n                valuations[i] = assetReserve;\r\n            } else {\r\n                uint256 valuation = _convertTokenToBase(address(asset), assetReserve);\r\n                valuations[i] = valuation;\r\n            }\r\n            totalValuation += valuations[i];\r\n        }\r\n        return (totalValuation, valuations);\r\n    }\r\n\r\n    /**\r\n     * @dev Performs rebalance if needed.\r\n     * This function retrieves the assets and weights from the `assetInfos` array,\r\n     * and calls the `rebalance` function of the `rebalancer` contract with the retrieved values.\r\n     * It emits a `RebalancePerformed` event after the rebalance is performed.\r\n     * @notice This function should only be called internally.\r\n     */\r\n    function _performRebalanceIfNeeded() internal returns (uint256[] memory, uint256[] memory) {\r\n        address[] memory assets = new address[](assetInfos.length);\r\n        uint256[] memory weights = new uint256[](assetInfos.length);\r\n        uint256[] memory peripheryBalancesB4 = new uint256[](assetInfos.length);\r\n        uint256[] memory peripheryBalancesAfter = new uint256[](assetInfos.length);\r\n        uint256[] memory amountsToAdd = new uint256[](assetInfos.length);\r\n        uint256[] memory amountsToRemove = new uint256[](assetInfos.length);\r\n\r\n        for (uint256 i = 0; i < assetInfos.length; i++) {\r\n            assets[i] = assetInfos[i].asset;\r\n            weights[i] = assetInfos[i].weight;\r\n            peripheryBalancesB4[i] = IERC20(assets[i]).balanceOf(periphery);\r\n        }\r\n\r\n        uint256[] memory balances = getReserves();\r\n\r\n        IBaluniV1Rebalancer(rebalancer).rebalance(balances, assets, weights, trigger, periphery, periphery, baseAsset);\r\n\r\n        for (uint256 i = 0; i < assetInfos.length; i++) {\r\n            peripheryBalancesAfter[i] = IERC20(assets[i]).balanceOf(periphery);\r\n\r\n            if (peripheryBalancesAfter[i] > peripheryBalancesB4[i]) {\r\n                amountsToAdd[i] = peripheryBalancesAfter[i] - peripheryBalancesB4[i];\r\n            } else {\r\n                amountsToRemove[i] = peripheryBalancesB4[i] - peripheryBalancesAfter[i];\r\n            }\r\n        }\r\n\r\n        emit RebalancePerformed(msg.sender, assets);\r\n\r\n        return (amountsToAdd, amountsToRemove);\r\n    }\r\n\r\n    /**\r\n     * @dev Calculates the total added liquidity based on the amounts to add.\r\n     * @param amountsToAdd An array of amounts to add for each asset.\r\n     * @return totalAddedLiquidity The total added liquidity.\r\n     */\r\n    function _calculateTotalAddedLiquidity(\r\n        uint256[] memory amountsToAdd\r\n    ) internal view returns (uint256 totalAddedLiquidity) {\r\n        for (uint256 i = 0; i < assetInfos.length; i++) {\r\n            totalAddedLiquidity += amountsToAdd[i];\r\n        }\r\n        return totalAddedLiquidity;\r\n    }\r\n\r\n    /**\r\n     * @dev Calculates the amounts to add to each asset based on the total valuation and current valuations.\r\n     * @param totalValuation The total valuation of the pool.\r\n     * @param valuations An array of current valuations for each asset.\r\n     * @return amountsToAdd An array of amounts to add to each asset.\r\n     */\r\n    function _calculateAmountsToAdd(\r\n        uint256 totalValuation,\r\n        uint256[] memory valuations\r\n    ) internal view returns (uint256[] memory amountsToAdd) {\r\n        amountsToAdd = new uint256[](assetInfos.length);\r\n        for (uint256 i = 0; i < assetInfos.length; i++) {\r\n            uint256 targetValuation = (totalValuation * assetInfos[i].weight) / 10000;\r\n            if (valuations[i] < targetValuation) {\r\n                amountsToAdd[i] = targetValuation - valuations[i];\r\n            }\r\n        }\r\n        return amountsToAdd;\r\n    }\r\n\r\n    /**\r\n     * @dev Internal function to transfer tokens from the caller to the contract and calculate the liquidity.\r\n     * @param index The index of the asset in the assetInfos array.\r\n     * @param amountToAdd The amount of native tokens to add as liquidity.\r\n     */\r\n    function _calculateLiquidity(uint256 index, uint256 amountToAdd) internal view returns (uint256) {\r\n        uint256 tokenAmount = _convertBaseToToken(assetInfos[index].asset, amountToAdd);\r\n        require(tokenAmount > 0, 'Invalid token amount to add');\r\n        return tokenAmount;\r\n    }\r\n\r\n    /**\r\n     * @dev Converts the specified amount of native token to the corresponding token amount.\r\n     * @param fromToken The address of the native token to convert from.\r\n     * @param amount The amount of native token to convert.\r\n     * @return The corresponding token amount.\r\n     */\r\n    function _convertBaseToToken(address fromToken, uint256 amount) internal view returns (uint256) {\r\n        uint256 tokenAmount = IBaluniV1Rebalancer(rebalancer).convert(baseAsset, fromToken, amount);\r\n        return tokenAmount;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the maximum of two uint8 values.\r\n     * @param a The first uint8 value.\r\n     * @param b The second uint8 value.\r\n     * @return The maximum value between a and b.\r\n     */\r\n    function max(uint8 a, uint8 b) private pure returns (uint8) {\r\n        return a >= b ? a : b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the minimum of two uint8 values.\r\n     * @param a The first uint8 value.\r\n     * @param b The second uint8 value.\r\n     * @return The minimum value between a and b.\r\n     */\r\n    function min(uint8 a, uint8 b) private pure returns (uint8) {\r\n        return a <= b ? a : b;\r\n    }\r\n\r\n    /**\r\n     * @dev Converts the specified token to the native token using the rebalancer contract.\r\n     * @param fromToken The address of the token to convert from.\r\n     * @param amount The amount of tokens to convert.\r\n     * @return scaledAmount The converted amount of tokens.\r\n     */\r\n    function _convertTokenToBase(address fromToken, uint256 amount) internal view returns (uint256 scaledAmount) {\r\n        uint256 tokenAmount = IBaluniV1Rebalancer(rebalancer).convert(fromToken, baseAsset, amount);\r\n        return tokenAmount;\r\n    }\r\n\r\n    // return true if one of the deviation overcome the trigger\r\n    /**\r\n     * @dev Checks if rebalancing is needed for the pool.\r\n     * @return A boolean value indicating whether rebalancing is needed or not.\r\n     */\r\n    function isRebalanceNeeded() public view returns (bool) {\r\n        (bool[] memory directions, uint256[] memory deviations) = getDeviation();\r\n        for (uint256 i = 0; i < deviations.length; i++) {\r\n            if (directions[i] && deviations[i] > trigger) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    function _getTargetWeight(address _token) internal view returns (uint256) {\r\n        for (uint256 i = 0; i < assetInfos.length; i++) {\r\n            if (assetInfos[i].asset == _token) {\r\n                return assetInfos[i].weight;\r\n            }\r\n        }\r\n        return 0;\r\n    }\r\n}\r\n"},"contracts/BaluniV1PoolFactory.sol":{"content":"// SPDX-License-Identifier: GNU AGPLv3\r\npragma solidity 0.8.25;\r\n/**\r\n *  __                  __                      __\r\n * /  |                /  |                    /  |\r\n * $$ |____    ______  $$ | __    __  _______  $$/\r\n * $$      \\  /      \\ $$ |/  |  /  |/       \\ /  |\r\n * $$$$$$$  | $$$$$$  |$$ |$$ |  $$ |$$$$$$$  |$$ |\r\n * $$ |  $$ | /    $$ |$$ |$$ |  $$ |$$ |  $$ |$$ |\r\n * $$ |__$$ |/$$$$$$$ |$$ |$$ \\__$$ |$$ |  $$ |$$ |\r\n * $$    $$/ $$    $$ |$$ |$$    $$/ $$ |  $$ |$$ |\r\n * $$$$$$$/   $$$$$$$/ $$/  $$$$$$/  $$/   $$/ $$/\r\n *\r\n *\r\n *                  ,-\"\"\"\"-.\r\n *                ,'      _ `.\r\n *               /       )_)  \\\r\n *              :              :\r\n *              \\              /\r\n *               \\            /\r\n *                `.        ,'\r\n *                  `.    ,'\r\n *                    `.,'\r\n *                     /\\`.   ,-._\r\n *                         `-'    \\__\r\n *                              .\r\n *               s                \\\r\n *                                \\\\\r\n *                                 \\\\\r\n *                                  >\\/7\r\n *                              _.-(6'  \\\r\n *                             (=___._/` \\\r\n *                                  )  \\ |\r\n *                                 /   / |\r\n *                                /    > /\r\n *                               j    < _\\\r\n *                           _.-' :      ``.\r\n *                           \\ r=._\\        `.\r\n */\r\nimport './BaluniV1Pool.sol';\r\nimport '@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol';\r\nimport '@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol';\r\nimport '@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol';\r\n\r\ncontract BaluniV1PoolFactory is Initializable, UUPSUpgradeable, OwnableUpgradeable {\r\n  address[] public allPools;\r\n  mapping(address => mapping(address => address)) public getPool;\r\n\r\n  address public rebalancer;\r\n  address public periphery;\r\n\r\n  event PoolCreated(address indexed pool, address[] assets, address rebalancer);\r\n\r\n  function initialize(address _rebalancer) public initializer {\r\n    __UUPSUpgradeable_init();\r\n    __Ownable_init(msg.sender);\r\n    rebalancer = _rebalancer;\r\n  }\r\n\r\n  function reinitialize(address _rebalancer, uint64 _version) public reinitializer(_version) {\r\n    rebalancer = _rebalancer;\r\n  }\r\n\r\n  function _authorizeUpgrade(address newImplementation) internal override onlyOwner {}\r\n\r\n  /**\r\n   * @dev Creates a new BaluniV1Pool contract and registers it in the factory.\r\n   * @param assets The array of asset addresses to be included in the pool.\r\n   * @param weights The array of weights corresponding to each asset in the pool.\r\n   * @param trigger The trigger value for rebalancing the pool.\r\n   * @return The address of the newly created pool.\r\n   */\r\n  function createPool(address[] memory assets, uint256[] memory weights, uint256 trigger) external returns (address) {\r\n    require(periphery != address(0), 'Periphery not set');\r\n    require(assets.length > 1, 'At least two assets are required');\r\n    require(assets.length == weights.length, 'Assets and weights length mismatch');\r\n\r\n    for (uint256 i = 0; i < assets.length; i++) {\r\n      for (uint256 j = i + 1; j < assets.length; j++) {\r\n        require(address(getPool[assets[i]][assets[j]]) == address(0), 'Pool already exists for this pair');\r\n      }\r\n    }\r\n\r\n    BaluniV1Pool newPool = new BaluniV1Pool(rebalancer, assets, weights, trigger, periphery);\r\n\r\n    address poolAddress = address(newPool);\r\n\r\n    allPools.push(poolAddress);\r\n    for (uint256 i = 0; i < assets.length; i++) {\r\n      for (uint256 j = i + 1; j < assets.length; j++) {\r\n        getPool[assets[i]][assets[j]] = poolAddress;\r\n        getPool[assets[j]][assets[i]] = poolAddress;\r\n      }\r\n    }\r\n\r\n    emit PoolCreated(poolAddress, assets, rebalancer);\r\n\r\n    return poolAddress;\r\n  }\r\n\r\n  /**\r\n   * @dev Retrieves all the pools created by the factory.\r\n   * @return An array of pool addresses.\r\n   */\r\n  function getAllPools() external view returns (address[] memory) {\r\n    return allPools;\r\n  }\r\n\r\n  /**\r\n   * @dev Retrieves the number of pools created by the factory.\r\n   * @return The count of pools.\r\n   */\r\n  function getPoolsCount() external view returns (uint256) {\r\n    return allPools.length;\r\n  }\r\n\r\n  /**\r\n   * @dev Retrieves the assets of a specific pool.\r\n   * @param poolAddress The address of the pool.\r\n   * @return An array of asset addresses.\r\n   */\r\n  function getPoolAssets(address poolAddress) external view returns (address[] memory) {\r\n    BaluniV1Pool pool = BaluniV1Pool(poolAddress);\r\n    return pool.getAssets();\r\n  }\r\n\r\n  /**\r\n   * @dev Retrieves the pool address based on the given assets.\r\n   * @param asset1 The address of the first asset.\r\n   * @param asset2 The address of the second asset.\r\n   * @return The address of the pool.\r\n   */\r\n  function getPoolByAssets(address asset1, address asset2) external view returns (address) {\r\n    return address(getPool[asset1][asset2]);\r\n  }\r\n\r\n  /**\r\n   * @dev Returns an array of pool addresses that contain the specified token.\r\n   * @param token The address of the token to search for.\r\n   * @return An array of pool addresses.\r\n   */\r\n  function getPoolsByAsset(address token) external view returns (address[] memory) {\r\n    address[] memory pools = new address[](allPools.length);\r\n    uint256 count = 0;\r\n\r\n    for (uint256 i = 0; i < allPools.length; i++) {\r\n      BaluniV1Pool pool = BaluniV1Pool(allPools[i]);\r\n      address[] memory assets = pool.getAssets();\r\n\r\n      for (uint256 j = 0; j < assets.length; j++) {\r\n        if (assets[j] == token) {\r\n          pools[count] = address(pool);\r\n          count++;\r\n          break;\r\n        }\r\n      }\r\n\r\n      if (count == pools.length) {\r\n        break;\r\n      }\r\n    }\r\n\r\n    address[] memory result = new address[](count);\r\n    for (uint256 i = 0; i < count; i++) {\r\n      result[i] = pools[i];\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * @dev Changes the address of the periphery contract.\r\n   * @param _newPeriphery The new address of the periphery contract.\r\n   */\r\n  function changePeriphery(address _newPeriphery) external onlyOwner {\r\n    periphery = _newPeriphery;\r\n  }\r\n\r\n  function poolExist(address _pool) external view returns (bool) {\r\n    for (uint256 i = 0; i < allPools.length; i++) {\r\n      if (allPools[i] == _pool) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n}\r\n"},"contracts/interfaces/I1inchSpotAgg.sol":{"content":"// SPDX-License-Identifier: GNU AGPLv3\r\npragma solidity 0.8.25;\r\nimport '@openzeppelin/contracts/token/ERC20/IERC20.sol';\r\n\r\ninterface I1inchSpotAgg {\r\n  function getRate(IERC20 srcToken, IERC20 dstToken, bool useWrappers) external view returns (uint256 weightedRate);\r\n\r\n  function getRateToEth(IERC20 srcToken, bool useWrappers) external view returns (uint256 weightedRate);\r\n}\r\n"},"contracts/interfaces/IBaluniV1Agent.sol":{"content":"// SPDX-License-Identifier: GNU AGPLv3\r\npragma solidity 0.8.25;\r\n\r\ninterface IBaluniV1Agent {\r\n  struct Call {\r\n    address to;\r\n    uint256 value;\r\n    bytes data;\r\n  }\r\n\r\n  function execute(Call[] memory calls, address[] memory tokensReturn) external;\r\n}\r\n"},"contracts/interfaces/IBaluniV1PoolPeriphery.sol":{"content":"// SPDX-License-Identifier: GNU AGPLv3\r\npragma solidity 0.8.25;\r\n\r\ninterface IBaluniV1PoolPeriphery {\r\n    function getReserves(address pool) external view returns (uint256[] memory);\r\n\r\n    function getAssetReserve(address pool, address asset) external view returns (uint256);\r\n}\r\n"},"contracts/interfaces/IBaluniV1Rebalancer.sol":{"content":"// SPDX-License-Identifier: GNU AGPLv3\r\npragma solidity 0.8.25;\r\n\r\nimport './IBaluniV1Router.sol';\r\n\r\ninterface IBaluniV1Rebalancer {\r\n  struct RebalanceVars {\r\n    uint256 length;\r\n    uint256 totalValue;\r\n    uint256 finalUsdBalance;\r\n    uint256 overweightVaultsLength;\r\n    uint256 underweightVaultsLength;\r\n    uint256 totalActiveWeight;\r\n    uint256 amountOut;\r\n    uint256[] overweightVaults;\r\n    uint256[] overweightAmounts;\r\n    uint256[] underweightVaults;\r\n    uint256[] underweightAmounts;\r\n    uint256[] balances;\r\n  }\r\n\r\n  // Variables\r\n  function baluniRouter() external view returns (address);\r\n\r\n  function USDC() external view returns (address);\r\n\r\n  function WNATIVE() external view returns (address);\r\n\r\n  function uniswapRouter() external view returns (address);\r\n\r\n  function uniswapFactory() external view returns (address);\r\n\r\n  function _1InchSpotAgg() external view returns (address);\r\n\r\n  function treasury() external view returns (address);\r\n\r\n  // Functions\r\n  function rebalance(\r\n    uint256[] memory balances,\r\n    address[] calldata assets,\r\n    uint256[] calldata weights,\r\n    uint256 limit,\r\n    address sender,\r\n    address receiver,\r\n    address baseAsset\r\n  ) external;\r\n\r\n  function checkRebalance(\r\n    uint256[] memory balances,\r\n    address[] calldata assets,\r\n    uint256[] calldata weights,\r\n    uint256 limit,\r\n    address sender,\r\n    address baseAsset\r\n  ) external view returns (RebalanceVars memory);\r\n\r\n  function convert(address fromToken, address toToken, uint256 amount) external view returns (uint256);\r\n}\r\n"},"contracts/interfaces/IBaluniV1Router.sol":{"content":"// SPDX-License-Identifier: GNU AGPLv3\r\npragma solidity 0.8.25;\r\n\r\nimport '@openzeppelin/contracts/token/ERC20/IERC20.sol';\r\nimport '@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol';\r\nimport './I1inchSpotAgg.sol';\r\nimport './IBaluniV1Agent.sol';\r\n\r\ninterface IBaluniV1Router {\r\n  struct Call {\r\n    address to;\r\n    uint256 value;\r\n    bytes data;\r\n  }\r\n\r\n  // Variables\r\n  function _MAX_BPS_FEE() external view returns (uint256);\r\n\r\n  function _BPS_FEE() external view returns (uint256);\r\n\r\n  function _BPS_BASE() external view returns (uint256);\r\n\r\n  function getTokens() external view returns (address[] memory);\r\n\r\n  function USDC() external view returns (IERC20);\r\n\r\n  function WNATIVE() external view returns (address);\r\n\r\n  function oracle() external view returns (address);\r\n\r\n  function uniswapRouter() external view returns (address);\r\n\r\n  function uniswapFactory() external view returns (address);\r\n\r\n  function agentFactory() external view returns (address);\r\n\r\n  function marketOracle() external view returns (address);\r\n\r\n  function rebalancer() external view returns (address);\r\n\r\n  function treasury() external view returns (address);\r\n\r\n  // Functions\r\n  function initialize(\r\n    address _usdc,\r\n    address _wnative,\r\n    address _1inchSpotAgg,\r\n    address _uniRouter,\r\n    address _uniFactory,\r\n    address _rebalancer\r\n  ) external;\r\n\r\n  function reinitialize(\r\n    address _usdc,\r\n    address _wnative,\r\n    address _1inchSpotAgg,\r\n    address _uniRouter,\r\n    address _uniFactory,\r\n    address _rebalancer,\r\n    uint64 version\r\n  ) external;\r\n\r\n  function initializeMarketOracle(address _marketOracle) external;\r\n\r\n  function changeMarketOracle(address _marketOracle) external;\r\n\r\n  function changeBpsFee(uint256 _newFee) external;\r\n\r\n  function changeTreasury(address _newTreasury) external;\r\n\r\n  function changeRebalancer(address _newRebalancer) external;\r\n\r\n  function changeAgentFactory(address _agentFactory) external;\r\n\r\n  function execute(IBaluniV1Agent.Call[] memory calls, address[] memory tokensReturn) external;\r\n\r\n  function liquidate(address token) external;\r\n\r\n  function liquidateAll() external;\r\n\r\n  function burnERC20(uint256 burnAmount) external;\r\n\r\n  function burnUSDC(uint256 burnAmount) external;\r\n\r\n  function getAgentAddress(address _user) external view returns (address);\r\n\r\n  function mintWithUSDC(uint256 balAmountToMint) external;\r\n\r\n  function callRebalance(\r\n    address[] calldata assets,\r\n    uint256[] calldata weights,\r\n    address sender,\r\n    address receiver,\r\n    uint256 limit,\r\n    address baseAsset\r\n  ) external;\r\n\r\n  function requiredUSDCtoMint(uint256 balAmountToMint) external view returns (uint256);\r\n\r\n  function calculateTokenShare(\r\n    uint256 totalBaluni,\r\n    uint256 totalERC20Balance,\r\n    uint256 baluniAmount,\r\n    uint256 tokenDecimals\r\n  ) external pure returns (uint256);\r\n\r\n  function tokenValuation(uint256 amount, address token) external view returns (uint256);\r\n\r\n  function totalValuation() external view returns (uint256);\r\n\r\n  function getUSDCShareValue(uint256 amount) external view returns (uint256);\r\n\r\n  function fetchMarketPrices() external view returns (uint256, uint256);\r\n\r\n  function getVersion() external view returns (uint64);\r\n\r\n  function unitPrice() external view returns (uint256);\r\n  \r\n}\r\n"}},"settings":{"optimizer":{"enabled":true,"runs":200},"viaIR":true,"evmVersion":"cancun","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates","devdoc","userdoc"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"errors":[{"component":"general","errorCode":"1878","formattedMessage":"Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/balancer/BColor.sol\n\n","message":"SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.","severity":"warning","sourceLocation":{"end":-1,"file":"contracts/balancer/BColor.sol","start":-1},"type":"Warning"},{"component":"general","errorCode":"1878","formattedMessage":"Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/balancer/BConst.sol\n\n","message":"SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.","severity":"warning","sourceLocation":{"end":-1,"file":"contracts/balancer/BConst.sol","start":-1},"type":"Warning"},{"component":"general","errorCode":"1878","formattedMessage":"Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/balancer/BMath.sol\n\n","message":"SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.","severity":"warning","sourceLocation":{"end":-1,"file":"contracts/balancer/BMath.sol","start":-1},"type":"Warning"},{"component":"general","errorCode":"1878","formattedMessage":"Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/balancer/BNum.sol\n\n","message":"SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.","severity":"warning","sourceLocation":{"end":-1,"file":"contracts/balancer/BNum.sol","start":-1},"type":"Warning"},{"component":"general","errorCode":"2072","formattedMessage":"Warning: Unused local variable.\n   --> contracts/BaluniV1Pool.sol:138:9:\n    |\n138 |         uint256 reserveFrom = getAssetReserve(fromToken);\n    |         ^^^^^^^^^^^^^^^^^^^\n\n","message":"Unused local variable.","severity":"warning","sourceLocation":{"end":5181,"file":"contracts/BaluniV1Pool.sol","start":5162},"type":"Warning"},{"component":"general","errorCode":"2072","formattedMessage":"Warning: Unused local variable.\n   --> contracts/BaluniV1Pool.sol:139:9:\n    |\n139 |         uint256 reserveTo = getAssetReserve(toToken);\n    |         ^^^^^^^^^^^^^^^^^\n\n","message":"Unused local variable.","severity":"warning","sourceLocation":{"end":5238,"file":"contracts/BaluniV1Pool.sol","start":5221},"type":"Warning"},{"component":"general","errorCode":"5667","formattedMessage":"Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> contracts/BaluniV1Pool.sol:250:9:\n    |\n250 |         uint maxPrice\n    |         ^^^^^^^^^^^^^\n\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"end":9806,"file":"contracts/BaluniV1Pool.sol","start":9793},"type":"Warning"},{"component":"general","errorCode":"5667","formattedMessage":"Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> contracts/BaluniV1Pool.sol:295:9:\n    |\n295 |         uint maxAmountIn,\n    |         ^^^^^^^^^^^^^^^^\n\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"end":11482,"file":"contracts/BaluniV1Pool.sol","start":11466},"type":"Warning"},{"component":"general","errorCode":"2018","formattedMessage":"Warning: Function state mutability can be restricted to pure\n  --> contracts/balancer/BColor.sol:21:5:\n   |\n21 |     function getColor() external view override returns (bytes32) {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"Function state mutability can be restricted to pure","severity":"warning","sourceLocation":{"end":920,"file":"contracts/balancer/BColor.sol","start":816},"type":"Warning"},{"component":"general","errorCode":"2018","formattedMessage":"Warning: Function state mutability can be restricted to view\n   --> contracts/BaluniV1Pool.sol:245:5:\n    |\n245 |     function _swapExactAmountIn(\n    |     ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"Function state mutability can be restricted to view","severity":"warning","sourceLocation":{"end":11393,"file":"contracts/BaluniV1Pool.sol","start":9645},"type":"Warning"},{"component":"general","errorCode":"2018","formattedMessage":"Warning: Function state mutability can be restricted to view\n   --> contracts/BaluniV1Pool.sol:293:5:\n    |\n293 |     function _swapExactAmountOut(\n    |     ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"Function state mutability can be restricted to view","severity":"warning","sourceLocation":{"end":12817,"file":"contracts/BaluniV1Pool.sol","start":11401},"type":"Warning"}],"sources":{"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","exportedSymbols":{"ContextUpgradeable":[676],"Initializable":[448],"OwnableUpgradeable":[194]},"id":195,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:0"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../utils/ContextUpgradeable.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":195,"sourceUnit":677,"src":"128:67:0","symbolAliases":[{"foreign":{"id":2,"name":"ContextUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":676,"src":"136:18:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":5,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":195,"sourceUnit":449,"src":"196:63:0","symbolAliases":[{"foreign":{"id":4,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"204:13:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":7,"name":"Initializable","nameLocations":["789:13:0"],"nodeType":"IdentifierPath","referencedDeclaration":448,"src":"789:13:0"},"id":8,"nodeType":"InheritanceSpecifier","src":"789:13:0"},{"baseName":{"id":9,"name":"ContextUpgradeable","nameLocations":["804:18:0"],"nodeType":"IdentifierPath","referencedDeclaration":676,"src":"804:18:0"},"id":10,"nodeType":"InheritanceSpecifier","src":"804:18:0"}],"canonicalName":"OwnableUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":6,"nodeType":"StructuredDocumentation","src":"261:487:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":194,"linearizedBaseContracts":[194,676,448],"name":"OwnableUpgradeable","nameLocation":"767:18:0","nodeType":"ContractDefinition","nodes":[{"canonicalName":"OwnableUpgradeable.OwnableStorage","documentation":{"id":11,"nodeType":"StructuredDocumentation","src":"829:65:0","text":"@custom:storage-location erc7201:openzeppelin.storage.Ownable"},"id":14,"members":[{"constant":false,"id":13,"mutability":"mutable","name":"_owner","nameLocation":"939:6:0","nodeType":"VariableDeclaration","scope":14,"src":"931:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"OwnableStorage","nameLocation":"906:14:0","nodeType":"StructDefinition","scope":194,"src":"899:53:0","visibility":"public"},{"constant":true,"id":17,"mutability":"constant","name":"OwnableStorageLocation","nameLocation":"1094:22:0","nodeType":"VariableDeclaration","scope":194,"src":"1069:116:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1069:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307839303136643039643732643430666461653266643863656163366236323334633737303632313466643339633163643165363039613035323863313939333030","id":16,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1119:66:0","typeDescriptions":{"typeIdentifier":"t_rational_65173360639460082030725920392146925864023520599682862633725751242436743107328_by_1","typeString":"int_const 6517...(69 digits omitted)...7328"},"value":"0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300"},"visibility":"private"},{"body":{"id":24,"nodeType":"Block","src":"1270:81:0","statements":[{"AST":{"nativeSrc":"1289:56:0","nodeType":"YulBlock","src":"1289:56:0","statements":[{"nativeSrc":"1303:32:0","nodeType":"YulAssignment","src":"1303:32:0","value":{"name":"OwnableStorageLocation","nativeSrc":"1313:22:0","nodeType":"YulIdentifier","src":"1313:22:0"},"variableNames":[{"name":"$.slot","nativeSrc":"1303:6:0","nodeType":"YulIdentifier","src":"1303:6:0"}]}]},"evmVersion":"cancun","externalReferences":[{"declaration":21,"isOffset":false,"isSlot":true,"src":"1303:6:0","suffix":"slot","valueSize":1},{"declaration":17,"isOffset":false,"isSlot":false,"src":"1313:22:0","valueSize":1}],"id":23,"nodeType":"InlineAssembly","src":"1280:65:0"}]},"id":25,"implemented":true,"kind":"function","modifiers":[],"name":"_getOwnableStorage","nameLocation":"1201:18:0","nodeType":"FunctionDefinition","parameters":{"id":18,"nodeType":"ParameterList","parameters":[],"src":"1219:2:0"},"returnParameters":{"id":22,"nodeType":"ParameterList","parameters":[{"constant":false,"id":21,"mutability":"mutable","name":"$","nameLocation":"1267:1:0","nodeType":"VariableDeclaration","scope":25,"src":"1244:24:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"},"typeName":{"id":20,"nodeType":"UserDefinedTypeName","pathNode":{"id":19,"name":"OwnableStorage","nameLocations":["1244:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":14,"src":"1244:14:0"},"referencedDeclaration":14,"src":"1244:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"}},"visibility":"internal"}],"src":"1243:26:0"},"scope":194,"src":"1192:159:0","stateMutability":"pure","virtual":false,"visibility":"private"},{"documentation":{"id":26,"nodeType":"StructuredDocumentation","src":"1357:85:0","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":30,"name":"OwnableUnauthorizedAccount","nameLocation":"1453:26:0","nodeType":"ErrorDefinition","parameters":{"id":29,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28,"mutability":"mutable","name":"account","nameLocation":"1488:7:0","nodeType":"VariableDeclaration","scope":30,"src":"1480:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":27,"name":"address","nodeType":"ElementaryTypeName","src":"1480:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1479:17:0"},"src":"1447:50:0"},{"documentation":{"id":31,"nodeType":"StructuredDocumentation","src":"1503:82:0","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":35,"name":"OwnableInvalidOwner","nameLocation":"1596:19:0","nodeType":"ErrorDefinition","parameters":{"id":34,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33,"mutability":"mutable","name":"owner","nameLocation":"1624:5:0","nodeType":"VariableDeclaration","scope":35,"src":"1616:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":32,"name":"address","nodeType":"ElementaryTypeName","src":"1616:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1615:15:0"},"src":"1590:41:0"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":41,"name":"OwnershipTransferred","nameLocation":"1643:20:0","nodeType":"EventDefinition","parameters":{"id":40,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1680:13:0","nodeType":"VariableDeclaration","scope":41,"src":"1664:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":36,"name":"address","nodeType":"ElementaryTypeName","src":"1664:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":39,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1711:8:0","nodeType":"VariableDeclaration","scope":41,"src":"1695:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":38,"name":"address","nodeType":"ElementaryTypeName","src":"1695:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1663:57:0"},"src":"1637:84:0"},{"body":{"id":53,"nodeType":"Block","src":"1919:55:0","statements":[{"expression":{"arguments":[{"id":50,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":44,"src":"1954:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":49,"name":"__Ownable_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":81,"src":"1929:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":51,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1929:38:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":52,"nodeType":"ExpressionStatement","src":"1929:38:0"}]},"documentation":{"id":42,"nodeType":"StructuredDocumentation","src":"1727:115:0","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":54,"implemented":true,"kind":"function","modifiers":[{"id":47,"kind":"modifierInvocation","modifierName":{"id":46,"name":"onlyInitializing","nameLocations":["1902:16:0"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"1902:16:0"},"nodeType":"ModifierInvocation","src":"1902:16:0"}],"name":"__Ownable_init","nameLocation":"1856:14:0","nodeType":"FunctionDefinition","parameters":{"id":45,"nodeType":"ParameterList","parameters":[{"constant":false,"id":44,"mutability":"mutable","name":"initialOwner","nameLocation":"1879:12:0","nodeType":"VariableDeclaration","scope":54,"src":"1871:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":43,"name":"address","nodeType":"ElementaryTypeName","src":"1871:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1870:22:0"},"returnParameters":{"id":48,"nodeType":"ParameterList","parameters":[],"src":"1919:0:0"},"scope":194,"src":"1847:127:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":80,"nodeType":"Block","src":"2062:153:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":66,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":61,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":56,"src":"2076:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":64,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2100:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":63,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2092:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":62,"name":"address","nodeType":"ElementaryTypeName","src":"2092:7:0","typeDescriptions":{}}},"id":65,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2092:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2076:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":75,"nodeType":"IfStatement","src":"2072:95:0","trueBody":{"id":74,"nodeType":"Block","src":"2104:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":70,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2153:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":69,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2145:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":68,"name":"address","nodeType":"ElementaryTypeName","src":"2145:7:0","typeDescriptions":{}}},"id":71,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2145:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":67,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":35,"src":"2125:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":72,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2125:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":73,"nodeType":"RevertStatement","src":"2118:38:0"}]}},{"expression":{"arguments":[{"id":77,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":56,"src":"2195:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":76,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"2176:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":78,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2176:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":79,"nodeType":"ExpressionStatement","src":"2176:32:0"}]},"id":81,"implemented":true,"kind":"function","modifiers":[{"id":59,"kind":"modifierInvocation","modifierName":{"id":58,"name":"onlyInitializing","nameLocations":["2045:16:0"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"2045:16:0"},"nodeType":"ModifierInvocation","src":"2045:16:0"}],"name":"__Ownable_init_unchained","nameLocation":"1989:24:0","nodeType":"FunctionDefinition","parameters":{"id":57,"nodeType":"ParameterList","parameters":[{"constant":false,"id":56,"mutability":"mutable","name":"initialOwner","nameLocation":"2022:12:0","nodeType":"VariableDeclaration","scope":81,"src":"2014:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":55,"name":"address","nodeType":"ElementaryTypeName","src":"2014:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2013:22:0"},"returnParameters":{"id":60,"nodeType":"ParameterList","parameters":[],"src":"2062:0:0"},"scope":194,"src":"1980:235:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":88,"nodeType":"Block","src":"2324:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":84,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":122,"src":"2334:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":85,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2334:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":86,"nodeType":"ExpressionStatement","src":"2334:13:0"},{"id":87,"nodeType":"PlaceholderStatement","src":"2357:1:0"}]},"documentation":{"id":82,"nodeType":"StructuredDocumentation","src":"2221:77:0","text":" @dev Throws if called by any account other than the owner."},"id":89,"name":"onlyOwner","nameLocation":"2312:9:0","nodeType":"ModifierDefinition","parameters":{"id":83,"nodeType":"ParameterList","parameters":[],"src":"2321:2:0"},"src":"2303:62:0","virtual":false,"visibility":"internal"},{"body":{"id":104,"nodeType":"Block","src":"2496:89:0","statements":[{"assignments":[97],"declarations":[{"constant":false,"id":97,"mutability":"mutable","name":"$","nameLocation":"2529:1:0","nodeType":"VariableDeclaration","scope":104,"src":"2506:24:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"},"typeName":{"id":96,"nodeType":"UserDefinedTypeName","pathNode":{"id":95,"name":"OwnableStorage","nameLocations":["2506:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":14,"src":"2506:14:0"},"referencedDeclaration":14,"src":"2506:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"}},"visibility":"internal"}],"id":100,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":98,"name":"_getOwnableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":25,"src":"2533:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$14_storage_ptr_$","typeString":"function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"}},"id":99,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2533:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"2506:47:0"},{"expression":{"expression":{"id":101,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97,"src":"2570:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage storage pointer"}},"id":102,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2572:6:0","memberName":"_owner","nodeType":"MemberAccess","referencedDeclaration":13,"src":"2570:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":94,"id":103,"nodeType":"Return","src":"2563:15:0"}]},"documentation":{"id":90,"nodeType":"StructuredDocumentation","src":"2371:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":105,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"2450:5:0","nodeType":"FunctionDefinition","parameters":{"id":91,"nodeType":"ParameterList","parameters":[],"src":"2455:2:0"},"returnParameters":{"id":94,"nodeType":"ParameterList","parameters":[{"constant":false,"id":93,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":105,"src":"2487:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":92,"name":"address","nodeType":"ElementaryTypeName","src":"2487:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2486:9:0"},"scope":194,"src":"2441:144:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":121,"nodeType":"Block","src":"2703:117:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":109,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":105,"src":"2717:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":110,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2717:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":111,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":658,"src":"2728:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2728:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2717:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":120,"nodeType":"IfStatement","src":"2713:101:0","trueBody":{"id":119,"nodeType":"Block","src":"2742:72:0","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":115,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":658,"src":"2790:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2790:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":114,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"2763:26:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2763:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":118,"nodeType":"RevertStatement","src":"2756:47:0"}]}}]},"documentation":{"id":106,"nodeType":"StructuredDocumentation","src":"2591:62:0","text":" @dev Throws if the sender is not the owner."},"id":122,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"2667:11:0","nodeType":"FunctionDefinition","parameters":{"id":107,"nodeType":"ParameterList","parameters":[],"src":"2678:2:0"},"returnParameters":{"id":108,"nodeType":"ParameterList","parameters":[],"src":"2703:0:0"},"scope":194,"src":"2658:162:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":135,"nodeType":"Block","src":"3209:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3246:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":130,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3238:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":129,"name":"address","nodeType":"ElementaryTypeName","src":"3238:7:0","typeDescriptions":{}}},"id":132,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3238:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":128,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"3219:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":133,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3219:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":134,"nodeType":"ExpressionStatement","src":"3219:30:0"}]},"documentation":{"id":123,"nodeType":"StructuredDocumentation","src":"2826:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":136,"implemented":true,"kind":"function","modifiers":[{"id":126,"kind":"modifierInvocation","modifierName":{"id":125,"name":"onlyOwner","nameLocations":["3199:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"3199:9:0"},"nodeType":"ModifierInvocation","src":"3199:9:0"}],"name":"renounceOwnership","nameLocation":"3164:17:0","nodeType":"FunctionDefinition","parameters":{"id":124,"nodeType":"ParameterList","parameters":[],"src":"3181:2:0"},"returnParameters":{"id":127,"nodeType":"ParameterList","parameters":[],"src":"3209:0:0"},"scope":194,"src":"3155:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":163,"nodeType":"Block","src":"3475:145:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":144,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":139,"src":"3489:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3509:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":146,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3501:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":145,"name":"address","nodeType":"ElementaryTypeName","src":"3501:7:0","typeDescriptions":{}}},"id":148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3501:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3489:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":158,"nodeType":"IfStatement","src":"3485:91:0","trueBody":{"id":157,"nodeType":"Block","src":"3513:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3562:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":152,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3554:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":151,"name":"address","nodeType":"ElementaryTypeName","src":"3554:7:0","typeDescriptions":{}}},"id":154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3554:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":150,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":35,"src":"3534:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":155,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3534:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":156,"nodeType":"RevertStatement","src":"3527:38:0"}]}},{"expression":{"arguments":[{"id":160,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":139,"src":"3604:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":159,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"3585:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3585:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":162,"nodeType":"ExpressionStatement","src":"3585:28:0"}]},"documentation":{"id":137,"nodeType":"StructuredDocumentation","src":"3262:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":164,"implemented":true,"kind":"function","modifiers":[{"id":142,"kind":"modifierInvocation","modifierName":{"id":141,"name":"onlyOwner","nameLocations":["3465:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"3465:9:0"},"nodeType":"ModifierInvocation","src":"3465:9:0"}],"name":"transferOwnership","nameLocation":"3414:17:0","nodeType":"FunctionDefinition","parameters":{"id":140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":139,"mutability":"mutable","name":"newOwner","nameLocation":"3440:8:0","nodeType":"VariableDeclaration","scope":164,"src":"3432:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":138,"name":"address","nodeType":"ElementaryTypeName","src":"3432:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3431:18:0"},"returnParameters":{"id":143,"nodeType":"ParameterList","parameters":[],"src":"3475:0:0"},"scope":194,"src":"3405:215:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":192,"nodeType":"Block","src":"3837:185:0","statements":[{"assignments":[172],"declarations":[{"constant":false,"id":172,"mutability":"mutable","name":"$","nameLocation":"3870:1:0","nodeType":"VariableDeclaration","scope":192,"src":"3847:24:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"},"typeName":{"id":171,"nodeType":"UserDefinedTypeName","pathNode":{"id":170,"name":"OwnableStorage","nameLocations":["3847:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":14,"src":"3847:14:0"},"referencedDeclaration":14,"src":"3847:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"}},"visibility":"internal"}],"id":175,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":173,"name":"_getOwnableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":25,"src":"3874:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$14_storage_ptr_$","typeString":"function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"}},"id":174,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3874:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3847:47:0"},{"assignments":[177],"declarations":[{"constant":false,"id":177,"mutability":"mutable","name":"oldOwner","nameLocation":"3912:8:0","nodeType":"VariableDeclaration","scope":192,"src":"3904:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":176,"name":"address","nodeType":"ElementaryTypeName","src":"3904:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":180,"initialValue":{"expression":{"id":178,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":172,"src":"3923:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage storage pointer"}},"id":179,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3925:6:0","memberName":"_owner","nodeType":"MemberAccess","referencedDeclaration":13,"src":"3923:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3904:27:0"},{"expression":{"id":185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":181,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":172,"src":"3941:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage storage pointer"}},"id":183,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3943:6:0","memberName":"_owner","nodeType":"MemberAccess","referencedDeclaration":13,"src":"3941:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":184,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"3952:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3941:19:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":186,"nodeType":"ExpressionStatement","src":"3941:19:0"},{"eventCall":{"arguments":[{"id":188,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":177,"src":"3996:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":189,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"4006:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":187,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41,"src":"3975:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":190,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3975:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":191,"nodeType":"EmitStatement","src":"3970:45:0"}]},"documentation":{"id":165,"nodeType":"StructuredDocumentation","src":"3626:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":193,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"3783:18:0","nodeType":"FunctionDefinition","parameters":{"id":168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":167,"mutability":"mutable","name":"newOwner","nameLocation":"3810:8:0","nodeType":"VariableDeclaration","scope":193,"src":"3802:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":166,"name":"address","nodeType":"ElementaryTypeName","src":"3802:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3801:18:0"},"returnParameters":{"id":169,"nodeType":"ParameterList","parameters":[],"src":"3837:0:0"},"scope":194,"src":"3774:248:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":195,"src":"749:3275:0","usedErrors":[30,35,211,214],"usedEvents":[41,219]}],"src":"102:3923:0"},"id":0},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","exportedSymbols":{"Initializable":[448]},"id":449,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":196,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"113:24:1"},{"abstract":true,"baseContracts":[],"canonicalName":"Initializable","contractDependencies":[],"contractKind":"contract","documentation":{"id":197,"nodeType":"StructuredDocumentation","src":"139:2209:1","text":" @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="},"fullyImplemented":true,"id":448,"linearizedBaseContracts":[448],"name":"Initializable","nameLocation":"2367:13:1","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Initializable.InitializableStorage","documentation":{"id":198,"nodeType":"StructuredDocumentation","src":"2387:293:1","text":" @dev Storage of the initializable contract.\n It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n when using with upgradeable contracts.\n @custom:storage-location erc7201:openzeppelin.storage.Initializable"},"id":205,"members":[{"constant":false,"id":201,"mutability":"mutable","name":"_initialized","nameLocation":"2820:12:1","nodeType":"VariableDeclaration","scope":205,"src":"2813:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":200,"name":"uint64","nodeType":"ElementaryTypeName","src":"2813:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":204,"mutability":"mutable","name":"_initializing","nameLocation":"2955:13:1","nodeType":"VariableDeclaration","scope":205,"src":"2950:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":203,"name":"bool","nodeType":"ElementaryTypeName","src":"2950:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"InitializableStorage","nameLocation":"2692:20:1","nodeType":"StructDefinition","scope":448,"src":"2685:290:1","visibility":"public"},{"constant":true,"id":208,"mutability":"constant","name":"INITIALIZABLE_STORAGE","nameLocation":"3123:21:1","nodeType":"VariableDeclaration","scope":448,"src":"3098:115:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":206,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3098:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307866306335376531363834306466303430663135303838646332663831666533393163333932336265633733653233613936363265666339633232396336613030","id":207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3147:66:1","typeDescriptions":{"typeIdentifier":"t_rational_108904022758810753673719992590105913556127789646572562039383141376366747609600_by_1","typeString":"int_const 1089...(70 digits omitted)...9600"},"value":"0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00"},"visibility":"private"},{"documentation":{"id":209,"nodeType":"StructuredDocumentation","src":"3220:60:1","text":" @dev The contract is already initialized."},"errorSelector":"f92ee8a9","id":211,"name":"InvalidInitialization","nameLocation":"3291:21:1","nodeType":"ErrorDefinition","parameters":{"id":210,"nodeType":"ParameterList","parameters":[],"src":"3312:2:1"},"src":"3285:30:1"},{"documentation":{"id":212,"nodeType":"StructuredDocumentation","src":"3321:57:1","text":" @dev The contract is not initializing."},"errorSelector":"d7e6bcf8","id":214,"name":"NotInitializing","nameLocation":"3389:15:1","nodeType":"ErrorDefinition","parameters":{"id":213,"nodeType":"ParameterList","parameters":[],"src":"3404:2:1"},"src":"3383:24:1"},{"anonymous":false,"documentation":{"id":215,"nodeType":"StructuredDocumentation","src":"3413:90:1","text":" @dev Triggered when the contract has been initialized or reinitialized."},"eventSelector":"c7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2","id":219,"name":"Initialized","nameLocation":"3514:11:1","nodeType":"EventDefinition","parameters":{"id":218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":217,"indexed":false,"mutability":"mutable","name":"version","nameLocation":"3533:7:1","nodeType":"VariableDeclaration","scope":219,"src":"3526:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":216,"name":"uint64","nodeType":"ElementaryTypeName","src":"3526:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"3525:16:1"},"src":"3508:34:1"},{"body":{"id":301,"nodeType":"Block","src":"4092:1081:1","statements":[{"assignments":[224],"declarations":[{"constant":false,"id":224,"mutability":"mutable","name":"$","nameLocation":"4187:1:1","nodeType":"VariableDeclaration","scope":301,"src":"4158:30:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":223,"nodeType":"UserDefinedTypeName","pathNode":{"id":222,"name":"InitializableStorage","nameLocations":["4158:20:1"],"nodeType":"IdentifierPath","referencedDeclaration":205,"src":"4158:20:1"},"referencedDeclaration":205,"src":"4158:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"id":227,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":225,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"4191:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":226,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4191:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"4158:59:1"},{"assignments":[229],"declarations":[{"constant":false,"id":229,"mutability":"mutable","name":"isTopLevelCall","nameLocation":"4284:14:1","nodeType":"VariableDeclaration","scope":301,"src":"4279:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":228,"name":"bool","nodeType":"ElementaryTypeName","src":"4279:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":233,"initialValue":{"id":232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4301:16:1","subExpression":{"expression":{"id":230,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"4302:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":231,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4304:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"4302:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4279:38:1"},{"assignments":[235],"declarations":[{"constant":false,"id":235,"mutability":"mutable","name":"initialized","nameLocation":"4334:11:1","nodeType":"VariableDeclaration","scope":301,"src":"4327:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":234,"name":"uint64","nodeType":"ElementaryTypeName","src":"4327:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"id":238,"initialValue":{"expression":{"id":236,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"4348:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":237,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4350:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"4348:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"VariableDeclarationStatement","src":"4327:35:1"},{"assignments":[240],"declarations":[{"constant":false,"id":240,"mutability":"mutable","name":"initialSetup","nameLocation":"4711:12:1","nodeType":"VariableDeclaration","scope":301,"src":"4706:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":239,"name":"bool","nodeType":"ElementaryTypeName","src":"4706:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":246,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":241,"name":"initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":235,"src":"4726:11:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4741:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4726:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":244,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"4746:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4726:34:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4706:54:1"},{"assignments":[248],"declarations":[{"constant":false,"id":248,"mutability":"mutable","name":"construction","nameLocation":"4775:12:1","nodeType":"VariableDeclaration","scope":301,"src":"4770:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":247,"name":"bool","nodeType":"ElementaryTypeName","src":"4770:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":261,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":249,"name":"initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":235,"src":"4790:11:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4805:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4790:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"arguments":[{"id":254,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4818:4:1","typeDescriptions":{"typeIdentifier":"t_contract$_Initializable_$448","typeString":"contract Initializable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Initializable_$448","typeString":"contract Initializable"}],"id":253,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4810:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":252,"name":"address","nodeType":"ElementaryTypeName","src":"4810:7:1","typeDescriptions":{}}},"id":255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4810:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4824:4:1","memberName":"code","nodeType":"MemberAccess","src":"4810:18:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4829:6:1","memberName":"length","nodeType":"MemberAccess","src":"4810:25:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4839:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4810:30:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4790:50:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4770:70:1"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4855:13:1","subExpression":{"id":262,"name":"initialSetup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":240,"src":"4856:12:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4872:13:1","subExpression":{"id":264,"name":"construction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":248,"src":"4873:12:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4855:30:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":271,"nodeType":"IfStatement","src":"4851:91:1","trueBody":{"id":270,"nodeType":"Block","src":"4887:55:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":267,"name":"InvalidInitialization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":211,"src":"4908:21:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":268,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4908:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":269,"nodeType":"RevertStatement","src":"4901:30:1"}]}},{"expression":{"id":276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":272,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"4951:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":274,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4953:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"4951:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4968:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4951:18:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":277,"nodeType":"ExpressionStatement","src":"4951:18:1"},{"condition":{"id":278,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"4983:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":286,"nodeType":"IfStatement","src":"4979:67:1","trueBody":{"id":285,"nodeType":"Block","src":"4999:47:1","statements":[{"expression":{"id":283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":279,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"5013:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":281,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5015:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"5013:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5031:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5013:22:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":284,"nodeType":"ExpressionStatement","src":"5013:22:1"}]}},{"id":287,"nodeType":"PlaceholderStatement","src":"5055:1:1"},{"condition":{"id":288,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"5070:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":300,"nodeType":"IfStatement","src":"5066:101:1","trueBody":{"id":299,"nodeType":"Block","src":"5086:81:1","statements":[{"expression":{"id":293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":289,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"5100:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":291,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5102:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"5100:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":292,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5118:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"5100:23:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":294,"nodeType":"ExpressionStatement","src":"5100:23:1"},{"eventCall":{"arguments":[{"hexValue":"31","id":296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5154:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":295,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"5142:11:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$returns$__$","typeString":"function (uint64)"}},"id":297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5142:14:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":298,"nodeType":"EmitStatement","src":"5137:19:1"}]}}]},"documentation":{"id":220,"nodeType":"StructuredDocumentation","src":"3548:516:1","text":" @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n production.\n Emits an {Initialized} event."},"id":302,"name":"initializer","nameLocation":"4078:11:1","nodeType":"ModifierDefinition","parameters":{"id":221,"nodeType":"ParameterList","parameters":[],"src":"4089:2:1"},"src":"4069:1104:1","virtual":false,"visibility":"internal"},{"body":{"id":348,"nodeType":"Block","src":"6291:392:1","statements":[{"assignments":[309],"declarations":[{"constant":false,"id":309,"mutability":"mutable","name":"$","nameLocation":"6386:1:1","nodeType":"VariableDeclaration","scope":348,"src":"6357:30:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":308,"nodeType":"UserDefinedTypeName","pathNode":{"id":307,"name":"InitializableStorage","nameLocations":["6357:20:1"],"nodeType":"IdentifierPath","referencedDeclaration":205,"src":"6357:20:1"},"referencedDeclaration":205,"src":"6357:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"id":312,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":310,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"6390:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":311,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6390:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"6357:59:1"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":313,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"6431:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":314,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6433:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"6431:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":315,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"6450:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":316,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6452:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"6450:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":317,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"6468:7:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"6450:25:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6431:44:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":324,"nodeType":"IfStatement","src":"6427:105:1","trueBody":{"id":323,"nodeType":"Block","src":"6477:55:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":320,"name":"InvalidInitialization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":211,"src":"6498:21:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":321,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6498:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":322,"nodeType":"RevertStatement","src":"6491:30:1"}]}},{"expression":{"id":329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":325,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"6541:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":327,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6543:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"6541:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":328,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"6558:7:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"6541:24:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":330,"nodeType":"ExpressionStatement","src":"6541:24:1"},{"expression":{"id":335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":331,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"6575:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":333,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6577:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"6575:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":334,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6593:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"6575:22:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":336,"nodeType":"ExpressionStatement","src":"6575:22:1"},{"id":337,"nodeType":"PlaceholderStatement","src":"6607:1:1"},{"expression":{"id":342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":338,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"6618:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":340,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6620:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"6618:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6636:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"6618:23:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":343,"nodeType":"ExpressionStatement","src":"6618:23:1"},{"eventCall":{"arguments":[{"id":345,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"6668:7:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":344,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"6656:11:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$returns$__$","typeString":"function (uint64)"}},"id":346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6656:20:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":347,"nodeType":"EmitStatement","src":"6651:25:1"}]},"documentation":{"id":303,"nodeType":"StructuredDocumentation","src":"5179:1068:1","text":" @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n Emits an {Initialized} event."},"id":349,"name":"reinitializer","nameLocation":"6261:13:1","nodeType":"ModifierDefinition","parameters":{"id":306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":305,"mutability":"mutable","name":"version","nameLocation":"6282:7:1","nodeType":"VariableDeclaration","scope":349,"src":"6275:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":304,"name":"uint64","nodeType":"ElementaryTypeName","src":"6275:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"6274:16:1"},"src":"6252:431:1","virtual":false,"visibility":"internal"},{"body":{"id":356,"nodeType":"Block","src":"6921:48:1","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":352,"name":"_checkInitializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":370,"src":"6931:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":353,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6931:20:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":354,"nodeType":"ExpressionStatement","src":"6931:20:1"},{"id":355,"nodeType":"PlaceholderStatement","src":"6961:1:1"}]},"documentation":{"id":350,"nodeType":"StructuredDocumentation","src":"6689:199:1","text":" @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."},"id":357,"name":"onlyInitializing","nameLocation":"6902:16:1","nodeType":"ModifierDefinition","parameters":{"id":351,"nodeType":"ParameterList","parameters":[],"src":"6918:2:1"},"src":"6893:76:1","virtual":false,"visibility":"internal"},{"body":{"id":369,"nodeType":"Block","src":"7136:89:1","statements":[{"condition":{"id":363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7150:18:1","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":361,"name":"_isInitializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":438,"src":"7151:15:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":362,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7151:17:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":368,"nodeType":"IfStatement","src":"7146:73:1","trueBody":{"id":367,"nodeType":"Block","src":"7170:49:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":364,"name":"NotInitializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":214,"src":"7191:15:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7191:17:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":366,"nodeType":"RevertStatement","src":"7184:24:1"}]}}]},"documentation":{"id":358,"nodeType":"StructuredDocumentation","src":"6975:104:1","text":" @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}."},"id":370,"implemented":true,"kind":"function","modifiers":[],"name":"_checkInitializing","nameLocation":"7093:18:1","nodeType":"FunctionDefinition","parameters":{"id":359,"nodeType":"ParameterList","parameters":[],"src":"7111:2:1"},"returnParameters":{"id":360,"nodeType":"ParameterList","parameters":[],"src":"7136:0:1"},"scope":448,"src":"7084:141:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":415,"nodeType":"Block","src":"7760:373:1","statements":[{"assignments":[376],"declarations":[{"constant":false,"id":376,"mutability":"mutable","name":"$","nameLocation":"7855:1:1","nodeType":"VariableDeclaration","scope":415,"src":"7826:30:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":375,"nodeType":"UserDefinedTypeName","pathNode":{"id":374,"name":"InitializableStorage","nameLocations":["7826:20:1"],"nodeType":"IdentifierPath","referencedDeclaration":205,"src":"7826:20:1"},"referencedDeclaration":205,"src":"7826:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"id":379,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":377,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"7859:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7859:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"7826:59:1"},{"condition":{"expression":{"id":380,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"7900:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":381,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7902:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"7900:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":386,"nodeType":"IfStatement","src":"7896:76:1","trueBody":{"id":385,"nodeType":"Block","src":"7917:55:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":382,"name":"InvalidInitialization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":211,"src":"7938:21:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7938:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":384,"nodeType":"RevertStatement","src":"7931:30:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":387,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"7985:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":388,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7987:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"7985:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":391,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8008:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":390,"name":"uint64","nodeType":"ElementaryTypeName","src":"8008:6:1","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":389,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8003:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":392,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8003:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":393,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8016:3:1","memberName":"max","nodeType":"MemberAccess","src":"8003:16:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"7985:34:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":414,"nodeType":"IfStatement","src":"7981:146:1","trueBody":{"id":413,"nodeType":"Block","src":"8021:106:1","statements":[{"expression":{"id":403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":395,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"8035:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":397,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8037:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"8035:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"arguments":[{"id":400,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8057:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":399,"name":"uint64","nodeType":"ElementaryTypeName","src":"8057:6:1","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":398,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8052:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":401,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8052:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":402,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8065:3:1","memberName":"max","nodeType":"MemberAccess","src":"8052:16:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"8035:33:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":404,"nodeType":"ExpressionStatement","src":"8035:33:1"},{"eventCall":{"arguments":[{"expression":{"arguments":[{"id":408,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8104:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":407,"name":"uint64","nodeType":"ElementaryTypeName","src":"8104:6:1","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":406,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8099:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8099:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":410,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8112:3:1","memberName":"max","nodeType":"MemberAccess","src":"8099:16:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":405,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"8087:11:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$returns$__$","typeString":"function (uint64)"}},"id":411,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8087:29:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":412,"nodeType":"EmitStatement","src":"8082:34:1"}]}}]},"documentation":{"id":371,"nodeType":"StructuredDocumentation","src":"7231:475:1","text":" @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."},"id":416,"implemented":true,"kind":"function","modifiers":[],"name":"_disableInitializers","nameLocation":"7720:20:1","nodeType":"FunctionDefinition","parameters":{"id":372,"nodeType":"ParameterList","parameters":[],"src":"7740:2:1"},"returnParameters":{"id":373,"nodeType":"ParameterList","parameters":[],"src":"7760:0:1"},"scope":448,"src":"7711:422:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":426,"nodeType":"Block","src":"8308:63:1","statements":[{"expression":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":422,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"8325:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8325:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":424,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8352:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"8325:39:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":421,"id":425,"nodeType":"Return","src":"8318:46:1"}]},"documentation":{"id":417,"nodeType":"StructuredDocumentation","src":"8139:99:1","text":" @dev Returns the highest version that has been initialized. See {reinitializer}."},"id":427,"implemented":true,"kind":"function","modifiers":[],"name":"_getInitializedVersion","nameLocation":"8252:22:1","nodeType":"FunctionDefinition","parameters":{"id":418,"nodeType":"ParameterList","parameters":[],"src":"8274:2:1"},"returnParameters":{"id":421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":420,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":427,"src":"8300:6:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":419,"name":"uint64","nodeType":"ElementaryTypeName","src":"8300:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"8299:8:1"},"scope":448,"src":"8243:128:1","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":437,"nodeType":"Block","src":"8543:64:1","statements":[{"expression":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":433,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"8560:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":434,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8560:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":435,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8587:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"8560:40:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":432,"id":436,"nodeType":"Return","src":"8553:47:1"}]},"documentation":{"id":428,"nodeType":"StructuredDocumentation","src":"8377:105:1","text":" @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."},"id":438,"implemented":true,"kind":"function","modifiers":[],"name":"_isInitializing","nameLocation":"8496:15:1","nodeType":"FunctionDefinition","parameters":{"id":429,"nodeType":"ParameterList","parameters":[],"src":"8511:2:1"},"returnParameters":{"id":432,"nodeType":"ParameterList","parameters":[{"constant":false,"id":431,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":438,"src":"8537:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":430,"name":"bool","nodeType":"ElementaryTypeName","src":"8537:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8536:6:1"},"scope":448,"src":"8487:120:1","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":446,"nodeType":"Block","src":"8827:80:1","statements":[{"AST":{"nativeSrc":"8846:55:1","nodeType":"YulBlock","src":"8846:55:1","statements":[{"nativeSrc":"8860:31:1","nodeType":"YulAssignment","src":"8860:31:1","value":{"name":"INITIALIZABLE_STORAGE","nativeSrc":"8870:21:1","nodeType":"YulIdentifier","src":"8870:21:1"},"variableNames":[{"name":"$.slot","nativeSrc":"8860:6:1","nodeType":"YulIdentifier","src":"8860:6:1"}]}]},"evmVersion":"cancun","externalReferences":[{"declaration":443,"isOffset":false,"isSlot":true,"src":"8860:6:1","suffix":"slot","valueSize":1},{"declaration":208,"isOffset":false,"isSlot":false,"src":"8870:21:1","valueSize":1}],"id":445,"nodeType":"InlineAssembly","src":"8837:64:1"}]},"documentation":{"id":439,"nodeType":"StructuredDocumentation","src":"8613:67:1","text":" @dev Returns a pointer to the storage namespace."},"id":447,"implemented":true,"kind":"function","modifiers":[],"name":"_getInitializableStorage","nameLocation":"8746:24:1","nodeType":"FunctionDefinition","parameters":{"id":440,"nodeType":"ParameterList","parameters":[],"src":"8770:2:1"},"returnParameters":{"id":444,"nodeType":"ParameterList","parameters":[{"constant":false,"id":443,"mutability":"mutable","name":"$","nameLocation":"8824:1:1","nodeType":"VariableDeclaration","scope":447,"src":"8795:30:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":442,"nodeType":"UserDefinedTypeName","pathNode":{"id":441,"name":"InitializableStorage","nameLocations":["8795:20:1"],"nodeType":"IdentifierPath","referencedDeclaration":205,"src":"8795:20:1"},"referencedDeclaration":205,"src":"8795:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"src":"8794:32:1"},"scope":448,"src":"8737:170:1","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":449,"src":"2349:6560:1","usedErrors":[211,214],"usedEvents":[219]}],"src":"113:8797:1"},"id":1},"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","exportedSymbols":{"ERC1967Utils":[1126],"IERC1822Proxiable":[686],"Initializable":[448],"UUPSUpgradeable":[630]},"id":631,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":450,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:2"},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC1822.sol","file":"@openzeppelin/contracts/interfaces/draft-IERC1822.sol","id":452,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":631,"sourceUnit":687,"src":"141:88:2","symbolAliases":[{"foreign":{"id":451,"name":"IERC1822Proxiable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":686,"src":"149:17:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol","file":"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol","id":454,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":631,"sourceUnit":1127,"src":"230:84:2","symbolAliases":[{"foreign":{"id":453,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1126,"src":"238:12:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"./Initializable.sol","id":456,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":631,"sourceUnit":449,"src":"315:50:2","symbolAliases":[{"foreign":{"id":455,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"323:13:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":458,"name":"Initializable","nameLocations":["1023:13:2"],"nodeType":"IdentifierPath","referencedDeclaration":448,"src":"1023:13:2"},"id":459,"nodeType":"InheritanceSpecifier","src":"1023:13:2"},{"baseName":{"id":460,"name":"IERC1822Proxiable","nameLocations":["1038:17:2"],"nodeType":"IdentifierPath","referencedDeclaration":686,"src":"1038:17:2"},"id":461,"nodeType":"InheritanceSpecifier","src":"1038:17:2"}],"canonicalName":"UUPSUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":457,"nodeType":"StructuredDocumentation","src":"367:618:2","text":" @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n `UUPSUpgradeable` with a custom implementation of upgrades.\n The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism."},"fullyImplemented":false,"id":630,"linearizedBaseContracts":[630,686,448],"name":"UUPSUpgradeable","nameLocation":"1004:15:2","nodeType":"ContractDefinition","nodes":[{"constant":false,"documentation":{"id":462,"nodeType":"StructuredDocumentation","src":"1062:61:2","text":"@custom:oz-upgrades-unsafe-allow state-variable-immutable"},"id":468,"mutability":"immutable","name":"__self","nameLocation":"1154:6:2","nodeType":"VariableDeclaration","scope":630,"src":"1128:48:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":463,"name":"address","nodeType":"ElementaryTypeName","src":"1128:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"arguments":[{"id":466,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1171:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_UUPSUpgradeable_$630","typeString":"contract UUPSUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UUPSUpgradeable_$630","typeString":"contract UUPSUpgradeable"}],"id":465,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1163:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":464,"name":"address","nodeType":"ElementaryTypeName","src":"1163:7:2","typeDescriptions":{}}},"id":467,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1163:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":true,"documentation":{"id":469,"nodeType":"StructuredDocumentation","src":"1183:631:2","text":" @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\n and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\n while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\n If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\n be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\n during an upgrade."},"functionSelector":"ad3cb1cc","id":472,"mutability":"constant","name":"UPGRADE_INTERFACE_VERSION","nameLocation":"1842:25:2","nodeType":"VariableDeclaration","scope":630,"src":"1819:58:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":470,"name":"string","nodeType":"ElementaryTypeName","src":"1819:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"352e302e30","id":471,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1870:7:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_2ade050ecfcf8ae20ae1d10a23573f9d7e0bad85e74a2cf8338a65401e64558c","typeString":"literal_string \"5.0.0\""},"value":"5.0.0"},"visibility":"public"},{"documentation":{"id":473,"nodeType":"StructuredDocumentation","src":"1884:65:2","text":" @dev The call is from an unauthorized context."},"errorSelector":"e07c8dba","id":475,"name":"UUPSUnauthorizedCallContext","nameLocation":"1960:27:2","nodeType":"ErrorDefinition","parameters":{"id":474,"nodeType":"ParameterList","parameters":[],"src":"1987:2:2"},"src":"1954:36:2"},{"documentation":{"id":476,"nodeType":"StructuredDocumentation","src":"1996:68:2","text":" @dev The storage `slot` is unsupported as a UUID."},"errorSelector":"aa1d49a4","id":480,"name":"UUPSUnsupportedProxiableUUID","nameLocation":"2075:28:2","nodeType":"ErrorDefinition","parameters":{"id":479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":478,"mutability":"mutable","name":"slot","nameLocation":"2112:4:2","nodeType":"VariableDeclaration","scope":480,"src":"2104:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":477,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2104:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2103:14:2"},"src":"2069:49:2"},{"body":{"id":487,"nodeType":"Block","src":"2643:41:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":483,"name":"_checkProxy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":562,"src":"2653:11:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2653:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":485,"nodeType":"ExpressionStatement","src":"2653:13:2"},{"id":486,"nodeType":"PlaceholderStatement","src":"2676:1:2"}]},"documentation":{"id":481,"nodeType":"StructuredDocumentation","src":"2124:493:2","text":" @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\n for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n fail."},"id":488,"name":"onlyProxy","nameLocation":"2631:9:2","nodeType":"ModifierDefinition","parameters":{"id":482,"nodeType":"ParameterList","parameters":[],"src":"2640:2:2"},"src":"2622:62:2","virtual":false,"visibility":"internal"},{"body":{"id":495,"nodeType":"Block","src":"2914:48:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":491,"name":"_checkNotDelegated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":578,"src":"2924:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":492,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2924:20:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":493,"nodeType":"ExpressionStatement","src":"2924:20:2"},{"id":494,"nodeType":"PlaceholderStatement","src":"2954:1:2"}]},"documentation":{"id":489,"nodeType":"StructuredDocumentation","src":"2690:195:2","text":" @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n callable on the implementing contract but not through proxies."},"id":496,"name":"notDelegated","nameLocation":"2899:12:2","nodeType":"ModifierDefinition","parameters":{"id":490,"nodeType":"ParameterList","parameters":[],"src":"2911:2:2"},"src":"2890:72:2","virtual":false,"visibility":"internal"},{"body":{"id":501,"nodeType":"Block","src":"3028:7:2","statements":[]},"id":502,"implemented":true,"kind":"function","modifiers":[{"id":499,"kind":"modifierInvocation","modifierName":{"id":498,"name":"onlyInitializing","nameLocations":["3011:16:2"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"3011:16:2"},"nodeType":"ModifierInvocation","src":"3011:16:2"}],"name":"__UUPSUpgradeable_init","nameLocation":"2977:22:2","nodeType":"FunctionDefinition","parameters":{"id":497,"nodeType":"ParameterList","parameters":[],"src":"2999:2:2"},"returnParameters":{"id":500,"nodeType":"ParameterList","parameters":[],"src":"3028:0:2"},"scope":630,"src":"2968:67:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":507,"nodeType":"Block","src":"3111:7:2","statements":[]},"id":508,"implemented":true,"kind":"function","modifiers":[{"id":505,"kind":"modifierInvocation","modifierName":{"id":504,"name":"onlyInitializing","nameLocations":["3094:16:2"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"3094:16:2"},"nodeType":"ModifierInvocation","src":"3094:16:2"}],"name":"__UUPSUpgradeable_init_unchained","nameLocation":"3050:32:2","nodeType":"FunctionDefinition","parameters":{"id":503,"nodeType":"ParameterList","parameters":[],"src":"3082:2:2"},"returnParameters":{"id":506,"nodeType":"ParameterList","parameters":[],"src":"3111:0:2"},"scope":630,"src":"3041:77:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[685],"body":{"id":519,"nodeType":"Block","src":"3783:56:2","statements":[{"expression":{"expression":{"id":516,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1126,"src":"3800:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$1126_$","typeString":"type(library ERC1967Utils)"}},"id":517,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3813:19:2","memberName":"IMPLEMENTATION_SLOT","nodeType":"MemberAccess","referencedDeclaration":853,"src":"3800:32:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":515,"id":518,"nodeType":"Return","src":"3793:39:2"}]},"documentation":{"id":509,"nodeType":"StructuredDocumentation","src":"3123:577:2","text":" @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\n implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."},"functionSelector":"52d1902d","id":520,"implemented":true,"kind":"function","modifiers":[{"id":512,"kind":"modifierInvocation","modifierName":{"id":511,"name":"notDelegated","nameLocations":["3752:12:2"],"nodeType":"IdentifierPath","referencedDeclaration":496,"src":"3752:12:2"},"nodeType":"ModifierInvocation","src":"3752:12:2"}],"name":"proxiableUUID","nameLocation":"3714:13:2","nodeType":"FunctionDefinition","parameters":{"id":510,"nodeType":"ParameterList","parameters":[],"src":"3727:2:2"},"returnParameters":{"id":515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":514,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":520,"src":"3774:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":513,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3774:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3773:9:2"},"scope":630,"src":"3705:134:2","stateMutability":"view","virtual":true,"visibility":"external"},{"body":{"id":539,"nodeType":"Block","src":"4263:109:2","statements":[{"expression":{"arguments":[{"id":531,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":523,"src":"4291:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":530,"name":"_authorizeUpgrade","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":584,"src":"4273:17:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4273:36:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":533,"nodeType":"ExpressionStatement","src":"4273:36:2"},{"expression":{"arguments":[{"id":535,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":523,"src":"4341:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":536,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":525,"src":"4360:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":534,"name":"_upgradeToAndCallUUPS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":629,"src":"4319:21:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,bytes memory)"}},"id":537,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4319:46:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":538,"nodeType":"ExpressionStatement","src":"4319:46:2"}]},"documentation":{"id":521,"nodeType":"StructuredDocumentation","src":"3845:308:2","text":" @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n encoded in `data`.\n Calls {_authorizeUpgrade}.\n Emits an {Upgraded} event.\n @custom:oz-upgrades-unsafe-allow-reachable delegatecall"},"functionSelector":"4f1ef286","id":540,"implemented":true,"kind":"function","modifiers":[{"id":528,"kind":"modifierInvocation","modifierName":{"id":527,"name":"onlyProxy","nameLocations":["4253:9:2"],"nodeType":"IdentifierPath","referencedDeclaration":488,"src":"4253:9:2"},"nodeType":"ModifierInvocation","src":"4253:9:2"}],"name":"upgradeToAndCall","nameLocation":"4167:16:2","nodeType":"FunctionDefinition","parameters":{"id":526,"nodeType":"ParameterList","parameters":[{"constant":false,"id":523,"mutability":"mutable","name":"newImplementation","nameLocation":"4192:17:2","nodeType":"VariableDeclaration","scope":540,"src":"4184:25:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":522,"name":"address","nodeType":"ElementaryTypeName","src":"4184:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":525,"mutability":"mutable","name":"data","nameLocation":"4224:4:2","nodeType":"VariableDeclaration","scope":540,"src":"4211:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":524,"name":"bytes","nodeType":"ElementaryTypeName","src":"4211:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4183:46:2"},"returnParameters":{"id":529,"nodeType":"ParameterList","parameters":[],"src":"4263:0:2"},"scope":630,"src":"4158:214:2","stateMutability":"payable","virtual":true,"visibility":"public"},{"body":{"id":561,"nodeType":"Block","src":"4644:267:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":546,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4679:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_UUPSUpgradeable_$630","typeString":"contract UUPSUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UUPSUpgradeable_$630","typeString":"contract UUPSUpgradeable"}],"id":545,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4671:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":544,"name":"address","nodeType":"ElementaryTypeName","src":"4671:7:2","typeDescriptions":{}}},"id":547,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4671:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":548,"name":"__self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":468,"src":"4688:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4671:23:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":550,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1126,"src":"4749:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$1126_$","typeString":"type(library ERC1967Utils)"}},"id":551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4762:17:2","memberName":"getImplementation","nodeType":"MemberAccess","referencedDeclaration":884,"src":"4749:30:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":552,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4749:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":553,"name":"__self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":468,"src":"4785:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4749:42:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4671:120:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":560,"nodeType":"IfStatement","src":"4654:251:2","trueBody":{"id":559,"nodeType":"Block","src":"4844:61:2","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":556,"name":"UUPSUnauthorizedCallContext","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":475,"src":"4865:27:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":557,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4865:29:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":558,"nodeType":"RevertStatement","src":"4858:36:2"}]}}]},"documentation":{"id":541,"nodeType":"StructuredDocumentation","src":"4378:216:2","text":" @dev Reverts if the execution is not performed via delegatecall or the execution\n context is not of a proxy with an ERC1967-compliant implementation pointing to self.\n See {_onlyProxy}."},"id":562,"implemented":true,"kind":"function","modifiers":[],"name":"_checkProxy","nameLocation":"4608:11:2","nodeType":"FunctionDefinition","parameters":{"id":542,"nodeType":"ParameterList","parameters":[],"src":"4619:2:2"},"returnParameters":{"id":543,"nodeType":"ParameterList","parameters":[],"src":"4644:0:2"},"scope":630,"src":"4599:312:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":577,"nodeType":"Block","src":"5080:161:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":568,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5102:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_UUPSUpgradeable_$630","typeString":"contract UUPSUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UUPSUpgradeable_$630","typeString":"contract UUPSUpgradeable"}],"id":567,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5094:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":566,"name":"address","nodeType":"ElementaryTypeName","src":"5094:7:2","typeDescriptions":{}}},"id":569,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5094:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":570,"name":"__self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":468,"src":"5111:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5094:23:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":576,"nodeType":"IfStatement","src":"5090:145:2","trueBody":{"id":575,"nodeType":"Block","src":"5119:116:2","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":572,"name":"UUPSUnauthorizedCallContext","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":475,"src":"5195:27:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":573,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5195:29:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":574,"nodeType":"RevertStatement","src":"5188:36:2"}]}}]},"documentation":{"id":563,"nodeType":"StructuredDocumentation","src":"4917:106:2","text":" @dev Reverts if the execution is performed via delegatecall.\n See {notDelegated}."},"id":578,"implemented":true,"kind":"function","modifiers":[],"name":"_checkNotDelegated","nameLocation":"5037:18:2","nodeType":"FunctionDefinition","parameters":{"id":564,"nodeType":"ParameterList","parameters":[],"src":"5055:2:2"},"returnParameters":{"id":565,"nodeType":"ParameterList","parameters":[],"src":"5080:0:2"},"scope":630,"src":"5028:213:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"documentation":{"id":579,"nodeType":"StructuredDocumentation","src":"5247:372:2","text":" @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n {upgradeToAndCall}.\n Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n ```solidity\n function _authorizeUpgrade(address) internal onlyOwner {}\n ```"},"id":584,"implemented":false,"kind":"function","modifiers":[],"name":"_authorizeUpgrade","nameLocation":"5633:17:2","nodeType":"FunctionDefinition","parameters":{"id":582,"nodeType":"ParameterList","parameters":[{"constant":false,"id":581,"mutability":"mutable","name":"newImplementation","nameLocation":"5659:17:2","nodeType":"VariableDeclaration","scope":584,"src":"5651:25:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":580,"name":"address","nodeType":"ElementaryTypeName","src":"5651:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5650:27:2"},"returnParameters":{"id":583,"nodeType":"ParameterList","parameters":[],"src":"5694:0:2"},"scope":630,"src":"5624:71:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":628,"nodeType":"Block","src":"6137:453:2","statements":[{"clauses":[{"block":{"id":617,"nodeType":"Block","src":"6227:212:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":600,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":598,"src":"6245:4:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":601,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1126,"src":"6253:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$1126_$","typeString":"type(library ERC1967Utils)"}},"id":602,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6266:19:2","memberName":"IMPLEMENTATION_SLOT","nodeType":"MemberAccess","referencedDeclaration":853,"src":"6253:32:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"6245:40:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":609,"nodeType":"IfStatement","src":"6241:120:2","trueBody":{"id":608,"nodeType":"Block","src":"6287:74:2","statements":[{"errorCall":{"arguments":[{"id":605,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":598,"src":"6341:4:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":604,"name":"UUPSUnsupportedProxiableUUID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":480,"src":"6312:28:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$returns$__$","typeString":"function (bytes32) pure"}},"id":606,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6312:34:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":607,"nodeType":"RevertStatement","src":"6305:41:2"}]}},{"expression":{"arguments":[{"id":613,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":587,"src":"6404:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":614,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":589,"src":"6423:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":610,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1126,"src":"6374:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$1126_$","typeString":"type(library ERC1967Utils)"}},"id":612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6387:16:2","memberName":"upgradeToAndCall","nodeType":"MemberAccess","referencedDeclaration":945,"src":"6374:29:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,bytes memory)"}},"id":615,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6374:54:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":616,"nodeType":"ExpressionStatement","src":"6374:54:2"}]},"errorName":"","id":618,"nodeType":"TryCatchClause","parameters":{"id":599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":598,"mutability":"mutable","name":"slot","nameLocation":"6221:4:2","nodeType":"VariableDeclaration","scope":618,"src":"6213:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":597,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6213:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6212:14:2"},"src":"6204:235:2"},{"block":{"id":625,"nodeType":"Block","src":"6446:138:2","statements":[{"errorCall":{"arguments":[{"id":622,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":587,"src":"6555:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":619,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1126,"src":"6513:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$1126_$","typeString":"type(library ERC1967Utils)"}},"id":621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6526:28:2","memberName":"ERC1967InvalidImplementation","nodeType":"MemberAccess","referencedDeclaration":858,"src":"6513:41:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":623,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6513:60:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":624,"nodeType":"RevertStatement","src":"6506:67:2"}]},"errorName":"","id":626,"nodeType":"TryCatchClause","src":"6440:144:2"}],"externalCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":593,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":587,"src":"6169:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":592,"name":"IERC1822Proxiable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":686,"src":"6151:17:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1822Proxiable_$686_$","typeString":"type(contract IERC1822Proxiable)"}},"id":594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6151:36:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC1822Proxiable_$686","typeString":"contract IERC1822Proxiable"}},"id":595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6188:13:2","memberName":"proxiableUUID","nodeType":"MemberAccess","referencedDeclaration":685,"src":"6151:50:2","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_bytes32_$","typeString":"function () view external returns (bytes32)"}},"id":596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6151:52:2","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":627,"nodeType":"TryStatement","src":"6147:437:2"}]},"documentation":{"id":585,"nodeType":"StructuredDocumentation","src":"5701:346:2","text":" @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\n As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\n is expected to be the implementation slot in ERC1967.\n Emits an {IERC1967-Upgraded} event."},"id":629,"implemented":true,"kind":"function","modifiers":[],"name":"_upgradeToAndCallUUPS","nameLocation":"6061:21:2","nodeType":"FunctionDefinition","parameters":{"id":590,"nodeType":"ParameterList","parameters":[{"constant":false,"id":587,"mutability":"mutable","name":"newImplementation","nameLocation":"6091:17:2","nodeType":"VariableDeclaration","scope":629,"src":"6083:25:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":586,"name":"address","nodeType":"ElementaryTypeName","src":"6083:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":589,"mutability":"mutable","name":"data","nameLocation":"6123:4:2","nodeType":"VariableDeclaration","scope":629,"src":"6110:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":588,"name":"bytes","nodeType":"ElementaryTypeName","src":"6110:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6082:46:2"},"returnParameters":{"id":591,"nodeType":"ParameterList","parameters":[],"src":"6137:0:2"},"scope":630,"src":"6052:538:2","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":631,"src":"986:5606:2","usedErrors":[211,214,475,480,858,871,1768,1771],"usedEvents":[219,837]}],"src":"115:6478:2"},"id":2},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","exportedSymbols":{"ContextUpgradeable":[676],"Initializable":[448]},"id":677,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":632,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:3"},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":634,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":677,"sourceUnit":449,"src":"126:63:3","symbolAliases":[{"foreign":{"id":633,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"134:13:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":636,"name":"Initializable","nameLocations":["728:13:3"],"nodeType":"IdentifierPath","referencedDeclaration":448,"src":"728:13:3"},"id":637,"nodeType":"InheritanceSpecifier","src":"728:13:3"}],"canonicalName":"ContextUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":635,"nodeType":"StructuredDocumentation","src":"191:496:3","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":676,"linearizedBaseContracts":[676,448],"name":"ContextUpgradeable","nameLocation":"706:18:3","nodeType":"ContractDefinition","nodes":[{"body":{"id":642,"nodeType":"Block","src":"800:7:3","statements":[]},"id":643,"implemented":true,"kind":"function","modifiers":[{"id":640,"kind":"modifierInvocation","modifierName":{"id":639,"name":"onlyInitializing","nameLocations":["783:16:3"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"783:16:3"},"nodeType":"ModifierInvocation","src":"783:16:3"}],"name":"__Context_init","nameLocation":"757:14:3","nodeType":"FunctionDefinition","parameters":{"id":638,"nodeType":"ParameterList","parameters":[],"src":"771:2:3"},"returnParameters":{"id":641,"nodeType":"ParameterList","parameters":[],"src":"800:0:3"},"scope":676,"src":"748:59:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":648,"nodeType":"Block","src":"875:7:3","statements":[]},"id":649,"implemented":true,"kind":"function","modifiers":[{"id":646,"kind":"modifierInvocation","modifierName":{"id":645,"name":"onlyInitializing","nameLocations":["858:16:3"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"858:16:3"},"nodeType":"ModifierInvocation","src":"858:16:3"}],"name":"__Context_init_unchained","nameLocation":"822:24:3","nodeType":"FunctionDefinition","parameters":{"id":644,"nodeType":"ParameterList","parameters":[],"src":"846:2:3"},"returnParameters":{"id":647,"nodeType":"ParameterList","parameters":[],"src":"875:0:3"},"scope":676,"src":"813:69:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":657,"nodeType":"Block","src":"949:34:3","statements":[{"expression":{"expression":{"id":654,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"966:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"970:6:3","memberName":"sender","nodeType":"MemberAccess","src":"966:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":653,"id":656,"nodeType":"Return","src":"959:17:3"}]},"id":658,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"896:10:3","nodeType":"FunctionDefinition","parameters":{"id":650,"nodeType":"ParameterList","parameters":[],"src":"906:2:3"},"returnParameters":{"id":653,"nodeType":"ParameterList","parameters":[{"constant":false,"id":652,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":658,"src":"940:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":651,"name":"address","nodeType":"ElementaryTypeName","src":"940:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"939:9:3"},"scope":676,"src":"887:96:3","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":666,"nodeType":"Block","src":"1056:32:3","statements":[{"expression":{"expression":{"id":663,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1073:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1077:4:3","memberName":"data","nodeType":"MemberAccess","src":"1073:8:3","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":662,"id":665,"nodeType":"Return","src":"1066:15:3"}]},"id":667,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"998:8:3","nodeType":"FunctionDefinition","parameters":{"id":659,"nodeType":"ParameterList","parameters":[],"src":"1006:2:3"},"returnParameters":{"id":662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":661,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":667,"src":"1040:14:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":660,"name":"bytes","nodeType":"ElementaryTypeName","src":"1040:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1039:16:3"},"scope":676,"src":"989:99:3","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":674,"nodeType":"Block","src":"1166:25:3","statements":[{"expression":{"hexValue":"30","id":672,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1183:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":671,"id":673,"nodeType":"Return","src":"1176:8:3"}]},"id":675,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"1103:20:3","nodeType":"FunctionDefinition","parameters":{"id":668,"nodeType":"ParameterList","parameters":[],"src":"1123:2:3"},"returnParameters":{"id":671,"nodeType":"ParameterList","parameters":[{"constant":false,"id":670,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":675,"src":"1157:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":669,"name":"uint256","nodeType":"ElementaryTypeName","src":"1157:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1156:9:3"},"scope":676,"src":"1094:97:3","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":677,"src":"688:505:3","usedErrors":[211,214],"usedEvents":[219]}],"src":"101:1093:3"},"id":3},"@openzeppelin/contracts/interfaces/draft-IERC1822.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC1822.sol","exportedSymbols":{"IERC1822Proxiable":[686]},"id":687,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":678,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"113:24:4"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1822Proxiable","contractDependencies":[],"contractKind":"interface","documentation":{"id":679,"nodeType":"StructuredDocumentation","src":"139:203:4","text":" @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n proxy whose upgrades are fully controlled by the current implementation."},"fullyImplemented":false,"id":686,"linearizedBaseContracts":[686],"name":"IERC1822Proxiable","nameLocation":"353:17:4","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":680,"nodeType":"StructuredDocumentation","src":"377:438:4","text":" @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n address.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy."},"functionSelector":"52d1902d","id":685,"implemented":false,"kind":"function","modifiers":[],"name":"proxiableUUID","nameLocation":"829:13:4","nodeType":"FunctionDefinition","parameters":{"id":681,"nodeType":"ParameterList","parameters":[],"src":"842:2:4"},"returnParameters":{"id":684,"nodeType":"ParameterList","parameters":[{"constant":false,"id":683,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":685,"src":"868:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":682,"name":"bytes32","nodeType":"ElementaryTypeName","src":"868:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"867:9:4"},"scope":686,"src":"820:57:4","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":687,"src":"343:536:4","usedErrors":[],"usedEvents":[]}],"src":"113:767:4"},"id":4},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","exportedSymbols":{"IERC1155Errors":[823],"IERC20Errors":[728],"IERC721Errors":[776]},"id":824,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":688,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:5"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":689,"nodeType":"StructuredDocumentation","src":"138:139:5","text":" @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."},"fullyImplemented":true,"id":728,"linearizedBaseContracts":[728],"name":"IERC20Errors","nameLocation":"288:12:5","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":690,"nodeType":"StructuredDocumentation","src":"307:309:5","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"e450d38c","id":698,"name":"ERC20InsufficientBalance","nameLocation":"627:24:5","nodeType":"ErrorDefinition","parameters":{"id":697,"nodeType":"ParameterList","parameters":[{"constant":false,"id":692,"mutability":"mutable","name":"sender","nameLocation":"660:6:5","nodeType":"VariableDeclaration","scope":698,"src":"652:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":691,"name":"address","nodeType":"ElementaryTypeName","src":"652:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":694,"mutability":"mutable","name":"balance","nameLocation":"676:7:5","nodeType":"VariableDeclaration","scope":698,"src":"668:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":693,"name":"uint256","nodeType":"ElementaryTypeName","src":"668:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":696,"mutability":"mutable","name":"needed","nameLocation":"693:6:5","nodeType":"VariableDeclaration","scope":698,"src":"685:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":695,"name":"uint256","nodeType":"ElementaryTypeName","src":"685:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"651:49:5"},"src":"621:80:5"},{"documentation":{"id":699,"nodeType":"StructuredDocumentation","src":"707:152:5","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"96c6fd1e","id":703,"name":"ERC20InvalidSender","nameLocation":"870:18:5","nodeType":"ErrorDefinition","parameters":{"id":702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":701,"mutability":"mutable","name":"sender","nameLocation":"897:6:5","nodeType":"VariableDeclaration","scope":703,"src":"889:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":700,"name":"address","nodeType":"ElementaryTypeName","src":"889:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"888:16:5"},"src":"864:41:5"},{"documentation":{"id":704,"nodeType":"StructuredDocumentation","src":"911:159:5","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"ec442f05","id":708,"name":"ERC20InvalidReceiver","nameLocation":"1081:20:5","nodeType":"ErrorDefinition","parameters":{"id":707,"nodeType":"ParameterList","parameters":[{"constant":false,"id":706,"mutability":"mutable","name":"receiver","nameLocation":"1110:8:5","nodeType":"VariableDeclaration","scope":708,"src":"1102:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":705,"name":"address","nodeType":"ElementaryTypeName","src":"1102:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1101:18:5"},"src":"1075:45:5"},{"documentation":{"id":709,"nodeType":"StructuredDocumentation","src":"1126:345:5","text":" @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"fb8f41b2","id":717,"name":"ERC20InsufficientAllowance","nameLocation":"1482:26:5","nodeType":"ErrorDefinition","parameters":{"id":716,"nodeType":"ParameterList","parameters":[{"constant":false,"id":711,"mutability":"mutable","name":"spender","nameLocation":"1517:7:5","nodeType":"VariableDeclaration","scope":717,"src":"1509:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":710,"name":"address","nodeType":"ElementaryTypeName","src":"1509:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":713,"mutability":"mutable","name":"allowance","nameLocation":"1534:9:5","nodeType":"VariableDeclaration","scope":717,"src":"1526:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":712,"name":"uint256","nodeType":"ElementaryTypeName","src":"1526:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":715,"mutability":"mutable","name":"needed","nameLocation":"1553:6:5","nodeType":"VariableDeclaration","scope":717,"src":"1545:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":714,"name":"uint256","nodeType":"ElementaryTypeName","src":"1545:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1508:52:5"},"src":"1476:85:5"},{"documentation":{"id":718,"nodeType":"StructuredDocumentation","src":"1567:174:5","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"e602df05","id":722,"name":"ERC20InvalidApprover","nameLocation":"1752:20:5","nodeType":"ErrorDefinition","parameters":{"id":721,"nodeType":"ParameterList","parameters":[{"constant":false,"id":720,"mutability":"mutable","name":"approver","nameLocation":"1781:8:5","nodeType":"VariableDeclaration","scope":722,"src":"1773:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":719,"name":"address","nodeType":"ElementaryTypeName","src":"1773:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1772:18:5"},"src":"1746:45:5"},{"documentation":{"id":723,"nodeType":"StructuredDocumentation","src":"1797:195:5","text":" @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"94280d62","id":727,"name":"ERC20InvalidSpender","nameLocation":"2003:19:5","nodeType":"ErrorDefinition","parameters":{"id":726,"nodeType":"ParameterList","parameters":[{"constant":false,"id":725,"mutability":"mutable","name":"spender","nameLocation":"2031:7:5","nodeType":"VariableDeclaration","scope":727,"src":"2023:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":724,"name":"address","nodeType":"ElementaryTypeName","src":"2023:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2022:17:5"},"src":"1997:43:5"}],"scope":824,"src":"278:1764:5","usedErrors":[698,703,708,717,722,727],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":729,"nodeType":"StructuredDocumentation","src":"2044:141:5","text":" @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."},"fullyImplemented":true,"id":776,"linearizedBaseContracts":[776],"name":"IERC721Errors","nameLocation":"2196:13:5","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":730,"nodeType":"StructuredDocumentation","src":"2216:219:5","text":" @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."},"errorSelector":"89c62b64","id":734,"name":"ERC721InvalidOwner","nameLocation":"2446:18:5","nodeType":"ErrorDefinition","parameters":{"id":733,"nodeType":"ParameterList","parameters":[{"constant":false,"id":732,"mutability":"mutable","name":"owner","nameLocation":"2473:5:5","nodeType":"VariableDeclaration","scope":734,"src":"2465:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":731,"name":"address","nodeType":"ElementaryTypeName","src":"2465:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2464:15:5"},"src":"2440:40:5"},{"documentation":{"id":735,"nodeType":"StructuredDocumentation","src":"2486:132:5","text":" @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."},"errorSelector":"7e273289","id":739,"name":"ERC721NonexistentToken","nameLocation":"2629:22:5","nodeType":"ErrorDefinition","parameters":{"id":738,"nodeType":"ParameterList","parameters":[{"constant":false,"id":737,"mutability":"mutable","name":"tokenId","nameLocation":"2660:7:5","nodeType":"VariableDeclaration","scope":739,"src":"2652:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":736,"name":"uint256","nodeType":"ElementaryTypeName","src":"2652:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2651:17:5"},"src":"2623:46:5"},{"documentation":{"id":740,"nodeType":"StructuredDocumentation","src":"2675:289:5","text":" @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."},"errorSelector":"64283d7b","id":748,"name":"ERC721IncorrectOwner","nameLocation":"2975:20:5","nodeType":"ErrorDefinition","parameters":{"id":747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":742,"mutability":"mutable","name":"sender","nameLocation":"3004:6:5","nodeType":"VariableDeclaration","scope":748,"src":"2996:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":741,"name":"address","nodeType":"ElementaryTypeName","src":"2996:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":744,"mutability":"mutable","name":"tokenId","nameLocation":"3020:7:5","nodeType":"VariableDeclaration","scope":748,"src":"3012:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":743,"name":"uint256","nodeType":"ElementaryTypeName","src":"3012:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":746,"mutability":"mutable","name":"owner","nameLocation":"3037:5:5","nodeType":"VariableDeclaration","scope":748,"src":"3029:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":745,"name":"address","nodeType":"ElementaryTypeName","src":"3029:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2995:48:5"},"src":"2969:75:5"},{"documentation":{"id":749,"nodeType":"StructuredDocumentation","src":"3050:152:5","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"73c6ac6e","id":753,"name":"ERC721InvalidSender","nameLocation":"3213:19:5","nodeType":"ErrorDefinition","parameters":{"id":752,"nodeType":"ParameterList","parameters":[{"constant":false,"id":751,"mutability":"mutable","name":"sender","nameLocation":"3241:6:5","nodeType":"VariableDeclaration","scope":753,"src":"3233:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":750,"name":"address","nodeType":"ElementaryTypeName","src":"3233:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3232:16:5"},"src":"3207:42:5"},{"documentation":{"id":754,"nodeType":"StructuredDocumentation","src":"3255:159:5","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"64a0ae92","id":758,"name":"ERC721InvalidReceiver","nameLocation":"3425:21:5","nodeType":"ErrorDefinition","parameters":{"id":757,"nodeType":"ParameterList","parameters":[{"constant":false,"id":756,"mutability":"mutable","name":"receiver","nameLocation":"3455:8:5","nodeType":"VariableDeclaration","scope":758,"src":"3447:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":755,"name":"address","nodeType":"ElementaryTypeName","src":"3447:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3446:18:5"},"src":"3419:46:5"},{"documentation":{"id":759,"nodeType":"StructuredDocumentation","src":"3471:247:5","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."},"errorSelector":"177e802f","id":765,"name":"ERC721InsufficientApproval","nameLocation":"3729:26:5","nodeType":"ErrorDefinition","parameters":{"id":764,"nodeType":"ParameterList","parameters":[{"constant":false,"id":761,"mutability":"mutable","name":"operator","nameLocation":"3764:8:5","nodeType":"VariableDeclaration","scope":765,"src":"3756:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":760,"name":"address","nodeType":"ElementaryTypeName","src":"3756:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":763,"mutability":"mutable","name":"tokenId","nameLocation":"3782:7:5","nodeType":"VariableDeclaration","scope":765,"src":"3774:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":762,"name":"uint256","nodeType":"ElementaryTypeName","src":"3774:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3755:35:5"},"src":"3723:68:5"},{"documentation":{"id":766,"nodeType":"StructuredDocumentation","src":"3797:174:5","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"a9fbf51f","id":770,"name":"ERC721InvalidApprover","nameLocation":"3982:21:5","nodeType":"ErrorDefinition","parameters":{"id":769,"nodeType":"ParameterList","parameters":[{"constant":false,"id":768,"mutability":"mutable","name":"approver","nameLocation":"4012:8:5","nodeType":"VariableDeclaration","scope":770,"src":"4004:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":767,"name":"address","nodeType":"ElementaryTypeName","src":"4004:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4003:18:5"},"src":"3976:46:5"},{"documentation":{"id":771,"nodeType":"StructuredDocumentation","src":"4028:197:5","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"5b08ba18","id":775,"name":"ERC721InvalidOperator","nameLocation":"4236:21:5","nodeType":"ErrorDefinition","parameters":{"id":774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":773,"mutability":"mutable","name":"operator","nameLocation":"4266:8:5","nodeType":"VariableDeclaration","scope":775,"src":"4258:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":772,"name":"address","nodeType":"ElementaryTypeName","src":"4258:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4257:18:5"},"src":"4230:46:5"}],"scope":824,"src":"2186:2092:5","usedErrors":[734,739,748,753,758,765,770,775],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1155Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":777,"nodeType":"StructuredDocumentation","src":"4280:143:5","text":" @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."},"fullyImplemented":true,"id":823,"linearizedBaseContracts":[823],"name":"IERC1155Errors","nameLocation":"4434:14:5","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":778,"nodeType":"StructuredDocumentation","src":"4455:361:5","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."},"errorSelector":"03dee4c5","id":788,"name":"ERC1155InsufficientBalance","nameLocation":"4827:26:5","nodeType":"ErrorDefinition","parameters":{"id":787,"nodeType":"ParameterList","parameters":[{"constant":false,"id":780,"mutability":"mutable","name":"sender","nameLocation":"4862:6:5","nodeType":"VariableDeclaration","scope":788,"src":"4854:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":779,"name":"address","nodeType":"ElementaryTypeName","src":"4854:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":782,"mutability":"mutable","name":"balance","nameLocation":"4878:7:5","nodeType":"VariableDeclaration","scope":788,"src":"4870:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":781,"name":"uint256","nodeType":"ElementaryTypeName","src":"4870:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":784,"mutability":"mutable","name":"needed","nameLocation":"4895:6:5","nodeType":"VariableDeclaration","scope":788,"src":"4887:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":783,"name":"uint256","nodeType":"ElementaryTypeName","src":"4887:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":786,"mutability":"mutable","name":"tokenId","nameLocation":"4911:7:5","nodeType":"VariableDeclaration","scope":788,"src":"4903:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":785,"name":"uint256","nodeType":"ElementaryTypeName","src":"4903:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4853:66:5"},"src":"4821:99:5"},{"documentation":{"id":789,"nodeType":"StructuredDocumentation","src":"4926:152:5","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"01a83514","id":793,"name":"ERC1155InvalidSender","nameLocation":"5089:20:5","nodeType":"ErrorDefinition","parameters":{"id":792,"nodeType":"ParameterList","parameters":[{"constant":false,"id":791,"mutability":"mutable","name":"sender","nameLocation":"5118:6:5","nodeType":"VariableDeclaration","scope":793,"src":"5110:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":790,"name":"address","nodeType":"ElementaryTypeName","src":"5110:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5109:16:5"},"src":"5083:43:5"},{"documentation":{"id":794,"nodeType":"StructuredDocumentation","src":"5132:159:5","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"57f447ce","id":798,"name":"ERC1155InvalidReceiver","nameLocation":"5302:22:5","nodeType":"ErrorDefinition","parameters":{"id":797,"nodeType":"ParameterList","parameters":[{"constant":false,"id":796,"mutability":"mutable","name":"receiver","nameLocation":"5333:8:5","nodeType":"VariableDeclaration","scope":798,"src":"5325:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":795,"name":"address","nodeType":"ElementaryTypeName","src":"5325:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5324:18:5"},"src":"5296:47:5"},{"documentation":{"id":799,"nodeType":"StructuredDocumentation","src":"5349:256:5","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."},"errorSelector":"e237d922","id":805,"name":"ERC1155MissingApprovalForAll","nameLocation":"5616:28:5","nodeType":"ErrorDefinition","parameters":{"id":804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":801,"mutability":"mutable","name":"operator","nameLocation":"5653:8:5","nodeType":"VariableDeclaration","scope":805,"src":"5645:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":800,"name":"address","nodeType":"ElementaryTypeName","src":"5645:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":803,"mutability":"mutable","name":"owner","nameLocation":"5671:5:5","nodeType":"VariableDeclaration","scope":805,"src":"5663:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":802,"name":"address","nodeType":"ElementaryTypeName","src":"5663:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5644:33:5"},"src":"5610:68:5"},{"documentation":{"id":806,"nodeType":"StructuredDocumentation","src":"5684:174:5","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"3e31884e","id":810,"name":"ERC1155InvalidApprover","nameLocation":"5869:22:5","nodeType":"ErrorDefinition","parameters":{"id":809,"nodeType":"ParameterList","parameters":[{"constant":false,"id":808,"mutability":"mutable","name":"approver","nameLocation":"5900:8:5","nodeType":"VariableDeclaration","scope":810,"src":"5892:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":807,"name":"address","nodeType":"ElementaryTypeName","src":"5892:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5891:18:5"},"src":"5863:47:5"},{"documentation":{"id":811,"nodeType":"StructuredDocumentation","src":"5916:197:5","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"ced3e100","id":815,"name":"ERC1155InvalidOperator","nameLocation":"6124:22:5","nodeType":"ErrorDefinition","parameters":{"id":814,"nodeType":"ParameterList","parameters":[{"constant":false,"id":813,"mutability":"mutable","name":"operator","nameLocation":"6155:8:5","nodeType":"VariableDeclaration","scope":815,"src":"6147:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":812,"name":"address","nodeType":"ElementaryTypeName","src":"6147:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6146:18:5"},"src":"6118:47:5"},{"documentation":{"id":816,"nodeType":"StructuredDocumentation","src":"6171:280:5","text":" @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"},"errorSelector":"5b059991","id":822,"name":"ERC1155InvalidArrayLength","nameLocation":"6462:25:5","nodeType":"ErrorDefinition","parameters":{"id":821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":818,"mutability":"mutable","name":"idsLength","nameLocation":"6496:9:5","nodeType":"VariableDeclaration","scope":822,"src":"6488:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":817,"name":"uint256","nodeType":"ElementaryTypeName","src":"6488:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":820,"mutability":"mutable","name":"valuesLength","nameLocation":"6515:12:5","nodeType":"VariableDeclaration","scope":822,"src":"6507:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":819,"name":"uint256","nodeType":"ElementaryTypeName","src":"6507:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6487:41:5"},"src":"6456:73:5"}],"scope":824,"src":"4424:2107:5","usedErrors":[788,793,798,805,810,815,822],"usedEvents":[]}],"src":"112:6420:5"},"id":5},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol","exportedSymbols":{"Address":[2008],"ERC1967Utils":[1126],"IBeacon":[1136],"StorageSlot":[2217]},"id":1127,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":825,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"114:24:6"},{"absolutePath":"@openzeppelin/contracts/proxy/beacon/IBeacon.sol","file":"../beacon/IBeacon.sol","id":827,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1127,"sourceUnit":1137,"src":"140:46:6","symbolAliases":[{"foreign":{"id":826,"name":"IBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1136,"src":"148:7:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../../utils/Address.sol","id":829,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1127,"sourceUnit":2009,"src":"187:48:6","symbolAliases":[{"foreign":{"id":828,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2008,"src":"195:7:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","file":"../../utils/StorageSlot.sol","id":831,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1127,"sourceUnit":2218,"src":"236:56:6","symbolAliases":[{"foreign":{"id":830,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2217,"src":"244:11:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ERC1967Utils","contractDependencies":[],"contractKind":"library","documentation":{"id":832,"nodeType":"StructuredDocumentation","src":"294:154:6","text":" @dev This abstract contract provides getters and event emitting update functions for\n https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots."},"fullyImplemented":true,"id":1126,"linearizedBaseContracts":[1126],"name":"ERC1967Utils","nameLocation":"457:12:6","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":833,"nodeType":"StructuredDocumentation","src":"660:68:6","text":" @dev Emitted when the implementation is upgraded."},"eventSelector":"bc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b","id":837,"name":"Upgraded","nameLocation":"739:8:6","nodeType":"EventDefinition","parameters":{"id":836,"nodeType":"ParameterList","parameters":[{"constant":false,"id":835,"indexed":true,"mutability":"mutable","name":"implementation","nameLocation":"764:14:6","nodeType":"VariableDeclaration","scope":837,"src":"748:30:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":834,"name":"address","nodeType":"ElementaryTypeName","src":"748:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"747:32:6"},"src":"733:47:6"},{"anonymous":false,"documentation":{"id":838,"nodeType":"StructuredDocumentation","src":"786:67:6","text":" @dev Emitted when the admin account has changed."},"eventSelector":"7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f","id":844,"name":"AdminChanged","nameLocation":"864:12:6","nodeType":"EventDefinition","parameters":{"id":843,"nodeType":"ParameterList","parameters":[{"constant":false,"id":840,"indexed":false,"mutability":"mutable","name":"previousAdmin","nameLocation":"885:13:6","nodeType":"VariableDeclaration","scope":844,"src":"877:21:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":839,"name":"address","nodeType":"ElementaryTypeName","src":"877:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":842,"indexed":false,"mutability":"mutable","name":"newAdmin","nameLocation":"908:8:6","nodeType":"VariableDeclaration","scope":844,"src":"900:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":841,"name":"address","nodeType":"ElementaryTypeName","src":"900:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"876:41:6"},"src":"858:60:6"},{"anonymous":false,"documentation":{"id":845,"nodeType":"StructuredDocumentation","src":"924:59:6","text":" @dev Emitted when the beacon is changed."},"eventSelector":"1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e","id":849,"name":"BeaconUpgraded","nameLocation":"994:14:6","nodeType":"EventDefinition","parameters":{"id":848,"nodeType":"ParameterList","parameters":[{"constant":false,"id":847,"indexed":true,"mutability":"mutable","name":"beacon","nameLocation":"1025:6:6","nodeType":"VariableDeclaration","scope":849,"src":"1009:22:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":846,"name":"address","nodeType":"ElementaryTypeName","src":"1009:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1008:24:6"},"src":"988:45:6"},{"constant":true,"documentation":{"id":850,"nodeType":"StructuredDocumentation","src":"1039:170:6","text":" @dev Storage slot with the address of the current implementation.\n This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1."},"id":853,"mutability":"constant","name":"IMPLEMENTATION_SLOT","nameLocation":"1305:19:6","nodeType":"VariableDeclaration","scope":1126,"src":"1279:114:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":851,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1279:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307833363038393461313362613161333231303636376338323834393264623938646361336532303736636333373335613932306133636135303564333832626263","id":852,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1327:66:6","typeDescriptions":{"typeIdentifier":"t_rational_24440054405305269366569402256811496959409073762505157381672968839269610695612_by_1","typeString":"int_const 2444...(69 digits omitted)...5612"},"value":"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc"},"visibility":"internal"},{"documentation":{"id":854,"nodeType":"StructuredDocumentation","src":"1400:69:6","text":" @dev The `implementation` of the proxy is invalid."},"errorSelector":"4c9c8ce3","id":858,"name":"ERC1967InvalidImplementation","nameLocation":"1480:28:6","nodeType":"ErrorDefinition","parameters":{"id":857,"nodeType":"ParameterList","parameters":[{"constant":false,"id":856,"mutability":"mutable","name":"implementation","nameLocation":"1517:14:6","nodeType":"VariableDeclaration","scope":858,"src":"1509:22:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":855,"name":"address","nodeType":"ElementaryTypeName","src":"1509:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1508:24:6"},"src":"1474:59:6"},{"documentation":{"id":859,"nodeType":"StructuredDocumentation","src":"1539:60:6","text":" @dev The `admin` of the proxy is invalid."},"errorSelector":"62e77ba2","id":863,"name":"ERC1967InvalidAdmin","nameLocation":"1610:19:6","nodeType":"ErrorDefinition","parameters":{"id":862,"nodeType":"ParameterList","parameters":[{"constant":false,"id":861,"mutability":"mutable","name":"admin","nameLocation":"1638:5:6","nodeType":"VariableDeclaration","scope":863,"src":"1630:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":860,"name":"address","nodeType":"ElementaryTypeName","src":"1630:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1629:15:6"},"src":"1604:41:6"},{"documentation":{"id":864,"nodeType":"StructuredDocumentation","src":"1651:61:6","text":" @dev The `beacon` of the proxy is invalid."},"errorSelector":"64ced0ec","id":868,"name":"ERC1967InvalidBeacon","nameLocation":"1723:20:6","nodeType":"ErrorDefinition","parameters":{"id":867,"nodeType":"ParameterList","parameters":[{"constant":false,"id":866,"mutability":"mutable","name":"beacon","nameLocation":"1752:6:6","nodeType":"VariableDeclaration","scope":868,"src":"1744:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":865,"name":"address","nodeType":"ElementaryTypeName","src":"1744:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1743:16:6"},"src":"1717:43:6"},{"documentation":{"id":869,"nodeType":"StructuredDocumentation","src":"1766:82:6","text":" @dev An upgrade function sees `msg.value > 0` that may be lost."},"errorSelector":"b398979f","id":871,"name":"ERC1967NonPayable","nameLocation":"1859:17:6","nodeType":"ErrorDefinition","parameters":{"id":870,"nodeType":"ParameterList","parameters":[],"src":"1876:2:6"},"src":"1853:26:6"},{"body":{"id":883,"nodeType":"Block","src":"2018:77:6","statements":[{"expression":{"expression":{"arguments":[{"id":879,"name":"IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":853,"src":"2062:19:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":877,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2217,"src":"2035:11:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$2217_$","typeString":"type(library StorageSlot)"}},"id":878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2047:14:6","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":2139,"src":"2035:26:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2113_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":880,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2035:47:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2113_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":881,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2083:5:6","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2112,"src":"2035:53:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":876,"id":882,"nodeType":"Return","src":"2028:60:6"}]},"documentation":{"id":872,"nodeType":"StructuredDocumentation","src":"1885:67:6","text":" @dev Returns the current implementation address."},"id":884,"implemented":true,"kind":"function","modifiers":[],"name":"getImplementation","nameLocation":"1966:17:6","nodeType":"FunctionDefinition","parameters":{"id":873,"nodeType":"ParameterList","parameters":[],"src":"1983:2:6"},"returnParameters":{"id":876,"nodeType":"ParameterList","parameters":[{"constant":false,"id":875,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":884,"src":"2009:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":874,"name":"address","nodeType":"ElementaryTypeName","src":"2009:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2008:9:6"},"scope":1126,"src":"1957:138:6","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":910,"nodeType":"Block","src":"2249:218:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":890,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":887,"src":"2263:17:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2281:4:6","memberName":"code","nodeType":"MemberAccess","src":"2263:22:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2286:6:6","memberName":"length","nodeType":"MemberAccess","src":"2263:29:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2296:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2263:34:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":900,"nodeType":"IfStatement","src":"2259:119:6","trueBody":{"id":899,"nodeType":"Block","src":"2299:79:6","statements":[{"errorCall":{"arguments":[{"id":896,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":887,"src":"2349:17:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":895,"name":"ERC1967InvalidImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":858,"src":"2320:28:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":897,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2320:47:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":898,"nodeType":"RevertStatement","src":"2313:54:6"}]}},{"expression":{"id":908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":904,"name":"IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":853,"src":"2414:19:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":901,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2217,"src":"2387:11:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$2217_$","typeString":"type(library StorageSlot)"}},"id":903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2399:14:6","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":2139,"src":"2387:26:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2113_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":905,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2387:47:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2113_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":906,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2435:5:6","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2112,"src":"2387:53:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":907,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":887,"src":"2443:17:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2387:73:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":909,"nodeType":"ExpressionStatement","src":"2387:73:6"}]},"documentation":{"id":885,"nodeType":"StructuredDocumentation","src":"2101:80:6","text":" @dev Stores a new address in the EIP1967 implementation slot."},"id":911,"implemented":true,"kind":"function","modifiers":[],"name":"_setImplementation","nameLocation":"2195:18:6","nodeType":"FunctionDefinition","parameters":{"id":888,"nodeType":"ParameterList","parameters":[{"constant":false,"id":887,"mutability":"mutable","name":"newImplementation","nameLocation":"2222:17:6","nodeType":"VariableDeclaration","scope":911,"src":"2214:25:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":886,"name":"address","nodeType":"ElementaryTypeName","src":"2214:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2213:27:6"},"returnParameters":{"id":889,"nodeType":"ParameterList","parameters":[],"src":"2249:0:6"},"scope":1126,"src":"2186:281:6","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":944,"nodeType":"Block","src":"2860:254:6","statements":[{"expression":{"arguments":[{"id":920,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":914,"src":"2889:17:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":919,"name":"_setImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":911,"src":"2870:18:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":921,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2870:37:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":922,"nodeType":"ExpressionStatement","src":"2870:37:6"},{"eventCall":{"arguments":[{"id":924,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":914,"src":"2931:17:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":923,"name":"Upgraded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":837,"src":"2922:8:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":925,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2922:27:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":926,"nodeType":"EmitStatement","src":"2917:32:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":927,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":916,"src":"2964:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2969:6:6","memberName":"length","nodeType":"MemberAccess","src":"2964:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":929,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2978:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2964:15:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":942,"nodeType":"Block","src":"3065:43:6","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":939,"name":"_checkNonPayable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1125,"src":"3079:16:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":940,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3079:18:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":941,"nodeType":"ExpressionStatement","src":"3079:18:6"}]},"id":943,"nodeType":"IfStatement","src":"2960:148:6","trueBody":{"id":938,"nodeType":"Block","src":"2981:78:6","statements":[{"expression":{"arguments":[{"id":934,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":914,"src":"3024:17:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":935,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":916,"src":"3043:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":931,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2008,"src":"2995:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$2008_$","typeString":"type(library Address)"}},"id":933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3003:20:6","memberName":"functionDelegateCall","nodeType":"MemberAccess","referencedDeclaration":1927,"src":"2995:28:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory) returns (bytes memory)"}},"id":936,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2995:53:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":937,"nodeType":"ExpressionStatement","src":"2995:53:6"}]}}]},"documentation":{"id":912,"nodeType":"StructuredDocumentation","src":"2473:301:6","text":" @dev Performs implementation upgrade with additional setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-Upgraded} event."},"id":945,"implemented":true,"kind":"function","modifiers":[],"name":"upgradeToAndCall","nameLocation":"2788:16:6","nodeType":"FunctionDefinition","parameters":{"id":917,"nodeType":"ParameterList","parameters":[{"constant":false,"id":914,"mutability":"mutable","name":"newImplementation","nameLocation":"2813:17:6","nodeType":"VariableDeclaration","scope":945,"src":"2805:25:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":913,"name":"address","nodeType":"ElementaryTypeName","src":"2805:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":916,"mutability":"mutable","name":"data","nameLocation":"2845:4:6","nodeType":"VariableDeclaration","scope":945,"src":"2832:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":915,"name":"bytes","nodeType":"ElementaryTypeName","src":"2832:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2804:46:6"},"returnParameters":{"id":918,"nodeType":"ParameterList","parameters":[],"src":"2860:0:6"},"scope":1126,"src":"2779:335:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":true,"documentation":{"id":946,"nodeType":"StructuredDocumentation","src":"3120:145:6","text":" @dev Storage slot with the admin of the contract.\n This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1."},"id":949,"mutability":"constant","name":"ADMIN_SLOT","nameLocation":"3361:10:6","nodeType":"VariableDeclaration","scope":1126,"src":"3335:105:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":947,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3335:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307862353331323736383461353638623331373361653133623966386136303136653234336536336236653865653131373864366137313738353062356436313033","id":948,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3374:66:6","typeDescriptions":{"typeIdentifier":"t_rational_81955473079516046949633743016697847541294818689821282749996681496272635257091_by_1","typeString":"int_const 8195...(69 digits omitted)...7091"},"value":"0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103"},"visibility":"internal"},{"body":{"id":961,"nodeType":"Block","src":"3844:68:6","statements":[{"expression":{"expression":{"arguments":[{"id":957,"name":"ADMIN_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":949,"src":"3888:10:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":955,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2217,"src":"3861:11:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$2217_$","typeString":"type(library StorageSlot)"}},"id":956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3873:14:6","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":2139,"src":"3861:26:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2113_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":958,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3861:38:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2113_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":959,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3900:5:6","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2112,"src":"3861:44:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":954,"id":960,"nodeType":"Return","src":"3854:51:6"}]},"documentation":{"id":950,"nodeType":"StructuredDocumentation","src":"3447:340:6","text":" @dev Returns the current admin.\n TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using\n the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`"},"id":962,"implemented":true,"kind":"function","modifiers":[],"name":"getAdmin","nameLocation":"3801:8:6","nodeType":"FunctionDefinition","parameters":{"id":951,"nodeType":"ParameterList","parameters":[],"src":"3809:2:6"},"returnParameters":{"id":954,"nodeType":"ParameterList","parameters":[{"constant":false,"id":953,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":962,"src":"3835:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":952,"name":"address","nodeType":"ElementaryTypeName","src":"3835:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3834:9:6"},"scope":1126,"src":"3792:120:6","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":992,"nodeType":"Block","src":"4039:172:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":968,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":965,"src":"4053:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":971,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4073:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":970,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4065:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":969,"name":"address","nodeType":"ElementaryTypeName","src":"4065:7:6","typeDescriptions":{}}},"id":972,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4065:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4053:22:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":982,"nodeType":"IfStatement","src":"4049:91:6","trueBody":{"id":981,"nodeType":"Block","src":"4077:63:6","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4126:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":976,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4118:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":975,"name":"address","nodeType":"ElementaryTypeName","src":"4118:7:6","typeDescriptions":{}}},"id":978,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4118:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":974,"name":"ERC1967InvalidAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":863,"src":"4098:19:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":979,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4098:31:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":980,"nodeType":"RevertStatement","src":"4091:38:6"}]}},{"expression":{"id":990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":986,"name":"ADMIN_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":949,"src":"4176:10:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":983,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2217,"src":"4149:11:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$2217_$","typeString":"type(library StorageSlot)"}},"id":985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4161:14:6","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":2139,"src":"4149:26:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2113_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":987,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4149:38:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2113_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":988,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4188:5:6","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2112,"src":"4149:44:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":989,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":965,"src":"4196:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4149:55:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":991,"nodeType":"ExpressionStatement","src":"4149:55:6"}]},"documentation":{"id":963,"nodeType":"StructuredDocumentation","src":"3918:71:6","text":" @dev Stores a new address in the EIP1967 admin slot."},"id":993,"implemented":true,"kind":"function","modifiers":[],"name":"_setAdmin","nameLocation":"4003:9:6","nodeType":"FunctionDefinition","parameters":{"id":966,"nodeType":"ParameterList","parameters":[{"constant":false,"id":965,"mutability":"mutable","name":"newAdmin","nameLocation":"4021:8:6","nodeType":"VariableDeclaration","scope":993,"src":"4013:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":964,"name":"address","nodeType":"ElementaryTypeName","src":"4013:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4012:18:6"},"returnParameters":{"id":967,"nodeType":"ParameterList","parameters":[],"src":"4039:0:6"},"scope":1126,"src":"3994:217:6","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1009,"nodeType":"Block","src":"4379:85:6","statements":[{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1000,"name":"getAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":962,"src":"4407:8:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1001,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4407:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1002,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":996,"src":"4419:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":999,"name":"AdminChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":844,"src":"4394:12:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":1003,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4394:34:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1004,"nodeType":"EmitStatement","src":"4389:39:6"},{"expression":{"arguments":[{"id":1006,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":996,"src":"4448:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1005,"name":"_setAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":993,"src":"4438:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1007,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4438:19:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1008,"nodeType":"ExpressionStatement","src":"4438:19:6"}]},"documentation":{"id":994,"nodeType":"StructuredDocumentation","src":"4217:109:6","text":" @dev Changes the admin of the proxy.\n Emits an {IERC1967-AdminChanged} event."},"id":1010,"implemented":true,"kind":"function","modifiers":[],"name":"changeAdmin","nameLocation":"4340:11:6","nodeType":"FunctionDefinition","parameters":{"id":997,"nodeType":"ParameterList","parameters":[{"constant":false,"id":996,"mutability":"mutable","name":"newAdmin","nameLocation":"4360:8:6","nodeType":"VariableDeclaration","scope":1010,"src":"4352:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":995,"name":"address","nodeType":"ElementaryTypeName","src":"4352:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4351:18:6"},"returnParameters":{"id":998,"nodeType":"ParameterList","parameters":[],"src":"4379:0:6"},"scope":1126,"src":"4331:133:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":true,"documentation":{"id":1011,"nodeType":"StructuredDocumentation","src":"4470:201:6","text":" @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1."},"id":1014,"mutability":"constant","name":"BEACON_SLOT","nameLocation":"4767:11:6","nodeType":"VariableDeclaration","scope":1126,"src":"4741:106:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1012,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4741:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307861336630616437346535343233616562666438306433656634333436353738333335613961373261656165653539666636636233353832623335313333643530","id":1013,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4781:66:6","typeDescriptions":{"typeIdentifier":"t_rational_74152234768234802001998023604048924213078445070507226371336425913862612794704_by_1","typeString":"int_const 7415...(69 digits omitted)...4704"},"value":"0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50"},"visibility":"internal"},{"body":{"id":1026,"nodeType":"Block","src":"4963:69:6","statements":[{"expression":{"expression":{"arguments":[{"id":1022,"name":"BEACON_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1014,"src":"5007:11:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1020,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2217,"src":"4980:11:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$2217_$","typeString":"type(library StorageSlot)"}},"id":1021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4992:14:6","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":2139,"src":"4980:26:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2113_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":1023,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4980:39:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2113_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":1024,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5020:5:6","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2112,"src":"4980:45:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1019,"id":1025,"nodeType":"Return","src":"4973:52:6"}]},"documentation":{"id":1015,"nodeType":"StructuredDocumentation","src":"4854:51:6","text":" @dev Returns the current beacon."},"id":1027,"implemented":true,"kind":"function","modifiers":[],"name":"getBeacon","nameLocation":"4919:9:6","nodeType":"FunctionDefinition","parameters":{"id":1016,"nodeType":"ParameterList","parameters":[],"src":"4928:2:6"},"returnParameters":{"id":1019,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1018,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1027,"src":"4954:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1017,"name":"address","nodeType":"ElementaryTypeName","src":"4954:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4953:9:6"},"scope":1126,"src":"4910:122:6","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1072,"nodeType":"Block","src":"5161:390:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1033,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1030,"src":"5175:9:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5185:4:6","memberName":"code","nodeType":"MemberAccess","src":"5175:14:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5190:6:6","memberName":"length","nodeType":"MemberAccess","src":"5175:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1036,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5200:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5175:26:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1043,"nodeType":"IfStatement","src":"5171:95:6","trueBody":{"id":1042,"nodeType":"Block","src":"5203:63:6","statements":[{"errorCall":{"arguments":[{"id":1039,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1030,"src":"5245:9:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1038,"name":"ERC1967InvalidBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":868,"src":"5224:20:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1040,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5224:31:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1041,"nodeType":"RevertStatement","src":"5217:38:6"}]}},{"expression":{"id":1051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":1047,"name":"BEACON_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1014,"src":"5303:11:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1044,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2217,"src":"5276:11:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$2217_$","typeString":"type(library StorageSlot)"}},"id":1046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5288:14:6","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":2139,"src":"5276:26:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2113_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":1048,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5276:39:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2113_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":1049,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5316:5:6","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2112,"src":"5276:45:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1050,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1030,"src":"5324:9:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5276:57:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1052,"nodeType":"ExpressionStatement","src":"5276:57:6"},{"assignments":[1054],"declarations":[{"constant":false,"id":1054,"mutability":"mutable","name":"beaconImplementation","nameLocation":"5352:20:6","nodeType":"VariableDeclaration","scope":1072,"src":"5344:28:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1053,"name":"address","nodeType":"ElementaryTypeName","src":"5344:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1060,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":1056,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1030,"src":"5383:9:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1055,"name":"IBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1136,"src":"5375:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBeacon_$1136_$","typeString":"type(contract IBeacon)"}},"id":1057,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5375:18:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBeacon_$1136","typeString":"contract IBeacon"}},"id":1058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5394:14:6","memberName":"implementation","nodeType":"MemberAccess","referencedDeclaration":1135,"src":"5375:33:6","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":1059,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5375:35:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5344:66:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1061,"name":"beaconImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1054,"src":"5424:20:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5445:4:6","memberName":"code","nodeType":"MemberAccess","src":"5424:25:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5450:6:6","memberName":"length","nodeType":"MemberAccess","src":"5424:32:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1064,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5460:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5424:37:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1071,"nodeType":"IfStatement","src":"5420:125:6","trueBody":{"id":1070,"nodeType":"Block","src":"5463:82:6","statements":[{"errorCall":{"arguments":[{"id":1067,"name":"beaconImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1054,"src":"5513:20:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1066,"name":"ERC1967InvalidImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":858,"src":"5484:28:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1068,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5484:50:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1069,"nodeType":"RevertStatement","src":"5477:57:6"}]}}]},"documentation":{"id":1028,"nodeType":"StructuredDocumentation","src":"5038:71:6","text":" @dev Stores a new beacon in the EIP1967 beacon slot."},"id":1073,"implemented":true,"kind":"function","modifiers":[],"name":"_setBeacon","nameLocation":"5123:10:6","nodeType":"FunctionDefinition","parameters":{"id":1031,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1030,"mutability":"mutable","name":"newBeacon","nameLocation":"5142:9:6","nodeType":"VariableDeclaration","scope":1073,"src":"5134:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1029,"name":"address","nodeType":"ElementaryTypeName","src":"5134:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5133:19:6"},"returnParameters":{"id":1032,"nodeType":"ParameterList","parameters":[],"src":"5161:0:6"},"scope":1126,"src":"5114:437:6","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1110,"nodeType":"Block","src":"6155:254:6","statements":[{"expression":{"arguments":[{"id":1082,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1076,"src":"6176:9:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1081,"name":"_setBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1073,"src":"6165:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1083,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6165:21:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1084,"nodeType":"ExpressionStatement","src":"6165:21:6"},{"eventCall":{"arguments":[{"id":1086,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1076,"src":"6216:9:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1085,"name":"BeaconUpgraded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":849,"src":"6201:14:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1087,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6201:25:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1088,"nodeType":"EmitStatement","src":"6196:30:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1089,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1078,"src":"6241:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6246:6:6","memberName":"length","nodeType":"MemberAccess","src":"6241:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1091,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6255:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6241:15:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1108,"nodeType":"Block","src":"6360:43:6","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1105,"name":"_checkNonPayable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1125,"src":"6374:16:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1106,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6374:18:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1107,"nodeType":"ExpressionStatement","src":"6374:18:6"}]},"id":1109,"nodeType":"IfStatement","src":"6237:166:6","trueBody":{"id":1104,"nodeType":"Block","src":"6258:96:6","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":1097,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1076,"src":"6309:9:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1096,"name":"IBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1136,"src":"6301:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBeacon_$1136_$","typeString":"type(contract IBeacon)"}},"id":1098,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6301:18:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBeacon_$1136","typeString":"contract IBeacon"}},"id":1099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6320:14:6","memberName":"implementation","nodeType":"MemberAccess","referencedDeclaration":1135,"src":"6301:33:6","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":1100,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6301:35:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1101,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1078,"src":"6338:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1093,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2008,"src":"6272:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$2008_$","typeString":"type(library Address)"}},"id":1095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6280:20:6","memberName":"functionDelegateCall","nodeType":"MemberAccess","referencedDeclaration":1927,"src":"6272:28:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory) returns (bytes memory)"}},"id":1102,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6272:71:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1103,"nodeType":"ExpressionStatement","src":"6272:71:6"}]}}]},"documentation":{"id":1074,"nodeType":"StructuredDocumentation","src":"5557:514:6","text":" @dev Change the beacon and trigger a setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-BeaconUpgraded} event.\n CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n efficiency."},"id":1111,"implemented":true,"kind":"function","modifiers":[],"name":"upgradeBeaconToAndCall","nameLocation":"6085:22:6","nodeType":"FunctionDefinition","parameters":{"id":1079,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1076,"mutability":"mutable","name":"newBeacon","nameLocation":"6116:9:6","nodeType":"VariableDeclaration","scope":1111,"src":"6108:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1075,"name":"address","nodeType":"ElementaryTypeName","src":"6108:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1078,"mutability":"mutable","name":"data","nameLocation":"6140:4:6","nodeType":"VariableDeclaration","scope":1111,"src":"6127:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1077,"name":"bytes","nodeType":"ElementaryTypeName","src":"6127:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6107:38:6"},"returnParameters":{"id":1080,"nodeType":"ParameterList","parameters":[],"src":"6155:0:6"},"scope":1126,"src":"6076:333:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1124,"nodeType":"Block","src":"6634:86:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1115,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6648:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6652:5:6","memberName":"value","nodeType":"MemberAccess","src":"6648:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1117,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6660:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6648:13:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1123,"nodeType":"IfStatement","src":"6644:70:6","trueBody":{"id":1122,"nodeType":"Block","src":"6663:51:6","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1119,"name":"ERC1967NonPayable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":871,"src":"6684:17:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1120,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6684:19:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1121,"nodeType":"RevertStatement","src":"6677:26:6"}]}}]},"documentation":{"id":1112,"nodeType":"StructuredDocumentation","src":"6415:178:6","text":" @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n if an upgrade doesn't perform an initialization call."},"id":1125,"implemented":true,"kind":"function","modifiers":[],"name":"_checkNonPayable","nameLocation":"6607:16:6","nodeType":"FunctionDefinition","parameters":{"id":1113,"nodeType":"ParameterList","parameters":[],"src":"6623:2:6"},"returnParameters":{"id":1114,"nodeType":"ParameterList","parameters":[],"src":"6634:0:6"},"scope":1126,"src":"6598:122:6","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":1127,"src":"449:6273:6","usedErrors":[858,863,868,871],"usedEvents":[837,844,849]}],"src":"114:6609:6"},"id":6},"@openzeppelin/contracts/proxy/beacon/IBeacon.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/proxy/beacon/IBeacon.sol","exportedSymbols":{"IBeacon":[1136]},"id":1137,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1128,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"108:24:7"},{"abstract":false,"baseContracts":[],"canonicalName":"IBeacon","contractDependencies":[],"contractKind":"interface","documentation":{"id":1129,"nodeType":"StructuredDocumentation","src":"134:79:7","text":" @dev This is the interface that {BeaconProxy} expects of its beacon."},"fullyImplemented":false,"id":1136,"linearizedBaseContracts":[1136],"name":"IBeacon","nameLocation":"224:7:7","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1130,"nodeType":"StructuredDocumentation","src":"238:168:7","text":" @dev Must return an address that can be used as a delegate call target.\n {UpgradeableBeacon} will check that this address is a contract."},"functionSelector":"5c60da1b","id":1135,"implemented":false,"kind":"function","modifiers":[],"name":"implementation","nameLocation":"420:14:7","nodeType":"FunctionDefinition","parameters":{"id":1131,"nodeType":"ParameterList","parameters":[],"src":"434:2:7"},"returnParameters":{"id":1134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1133,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1135,"src":"460:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1132,"name":"address","nodeType":"ElementaryTypeName","src":"460:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"459:9:7"},"scope":1136,"src":"411:58:7","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1137,"src":"214:257:7","usedErrors":[],"usedEvents":[]}],"src":"108:364:7"},"id":7},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","exportedSymbols":{"Context":[2038],"ERC20":[1651],"IERC20":[1729],"IERC20Errors":[728],"IERC20Metadata":[1755]},"id":1652,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1138,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:8"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"./IERC20.sol","id":1140,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1652,"sourceUnit":1730,"src":"131:36:8","symbolAliases":[{"foreign":{"id":1139,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1729,"src":"139:6:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"./extensions/IERC20Metadata.sol","id":1142,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1652,"sourceUnit":1756,"src":"168:63:8","symbolAliases":[{"foreign":{"id":1141,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1755,"src":"176:14:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":1144,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1652,"sourceUnit":2039,"src":"232:48:8","symbolAliases":[{"foreign":{"id":1143,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2038,"src":"240:7:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":1146,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1652,"sourceUnit":824,"src":"281:65:8","symbolAliases":[{"foreign":{"id":1145,"name":"IERC20Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":728,"src":"289:12:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1148,"name":"Context","nameLocations":["1428:7:8"],"nodeType":"IdentifierPath","referencedDeclaration":2038,"src":"1428:7:8"},"id":1149,"nodeType":"InheritanceSpecifier","src":"1428:7:8"},{"baseName":{"id":1150,"name":"IERC20","nameLocations":["1437:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":1729,"src":"1437:6:8"},"id":1151,"nodeType":"InheritanceSpecifier","src":"1437:6:8"},{"baseName":{"id":1152,"name":"IERC20Metadata","nameLocations":["1445:14:8"],"nodeType":"IdentifierPath","referencedDeclaration":1755,"src":"1445:14:8"},"id":1153,"nodeType":"InheritanceSpecifier","src":"1445:14:8"},{"baseName":{"id":1154,"name":"IERC20Errors","nameLocations":["1461:12:8"],"nodeType":"IdentifierPath","referencedDeclaration":728,"src":"1461:12:8"},"id":1155,"nodeType":"InheritanceSpecifier","src":"1461:12:8"}],"canonicalName":"ERC20","contractDependencies":[],"contractKind":"contract","documentation":{"id":1147,"nodeType":"StructuredDocumentation","src":"348:1052:8","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."},"fullyImplemented":true,"id":1651,"linearizedBaseContracts":[1651,728,1755,1729,2038],"name":"ERC20","nameLocation":"1419:5:8","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":1159,"mutability":"mutable","name":"_balances","nameLocation":"1524:9:8","nodeType":"VariableDeclaration","scope":1651,"src":"1480:53:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":1158,"keyName":"account","keyNameLocation":"1496:7:8","keyType":{"id":1156,"name":"address","nodeType":"ElementaryTypeName","src":"1488:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1480:35:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1157,"name":"uint256","nodeType":"ElementaryTypeName","src":"1507:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":1165,"mutability":"mutable","name":"_allowances","nameLocation":"1612:11:8","nodeType":"VariableDeclaration","scope":1651,"src":"1540:83:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":1164,"keyName":"account","keyNameLocation":"1556:7:8","keyType":{"id":1160,"name":"address","nodeType":"ElementaryTypeName","src":"1548:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1540:63:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1163,"keyName":"spender","keyNameLocation":"1583:7:8","keyType":{"id":1161,"name":"address","nodeType":"ElementaryTypeName","src":"1575:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1567:35:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1162,"name":"uint256","nodeType":"ElementaryTypeName","src":"1594:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":1167,"mutability":"mutable","name":"_totalSupply","nameLocation":"1646:12:8","nodeType":"VariableDeclaration","scope":1651,"src":"1630:28:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1166,"name":"uint256","nodeType":"ElementaryTypeName","src":"1630:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":1169,"mutability":"mutable","name":"_name","nameLocation":"1680:5:8","nodeType":"VariableDeclaration","scope":1651,"src":"1665:20:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":1168,"name":"string","nodeType":"ElementaryTypeName","src":"1665:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":1171,"mutability":"mutable","name":"_symbol","nameLocation":"1706:7:8","nodeType":"VariableDeclaration","scope":1651,"src":"1691:22:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":1170,"name":"string","nodeType":"ElementaryTypeName","src":"1691:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":1187,"nodeType":"Block","src":"1952:57:8","statements":[{"expression":{"id":1181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1179,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1169,"src":"1962:5:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1180,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1174,"src":"1970:5:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1962:13:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1182,"nodeType":"ExpressionStatement","src":"1962:13:8"},{"expression":{"id":1185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1183,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1171,"src":"1985:7:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1184,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1176,"src":"1995:7:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1985:17:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1186,"nodeType":"ExpressionStatement","src":"1985:17:8"}]},"documentation":{"id":1172,"nodeType":"StructuredDocumentation","src":"1720:171:8","text":" @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."},"id":1188,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1174,"mutability":"mutable","name":"name_","nameLocation":"1922:5:8","nodeType":"VariableDeclaration","scope":1188,"src":"1908:19:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1173,"name":"string","nodeType":"ElementaryTypeName","src":"1908:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1176,"mutability":"mutable","name":"symbol_","nameLocation":"1943:7:8","nodeType":"VariableDeclaration","scope":1188,"src":"1929:21:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1175,"name":"string","nodeType":"ElementaryTypeName","src":"1929:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1907:44:8"},"returnParameters":{"id":1178,"nodeType":"ParameterList","parameters":[],"src":"1952:0:8"},"scope":1651,"src":"1896:113:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1742],"body":{"id":1196,"nodeType":"Block","src":"2134:29:8","statements":[{"expression":{"id":1194,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1169,"src":"2151:5:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1193,"id":1195,"nodeType":"Return","src":"2144:12:8"}]},"documentation":{"id":1189,"nodeType":"StructuredDocumentation","src":"2015:54:8","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":1197,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2083:4:8","nodeType":"FunctionDefinition","parameters":{"id":1190,"nodeType":"ParameterList","parameters":[],"src":"2087:2:8"},"returnParameters":{"id":1193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1192,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1197,"src":"2119:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1191,"name":"string","nodeType":"ElementaryTypeName","src":"2119:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2118:15:8"},"scope":1651,"src":"2074:89:8","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1748],"body":{"id":1205,"nodeType":"Block","src":"2338:31:8","statements":[{"expression":{"id":1203,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1171,"src":"2355:7:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1202,"id":1204,"nodeType":"Return","src":"2348:14:8"}]},"documentation":{"id":1198,"nodeType":"StructuredDocumentation","src":"2169:102:8","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":1206,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2285:6:8","nodeType":"FunctionDefinition","parameters":{"id":1199,"nodeType":"ParameterList","parameters":[],"src":"2291:2:8"},"returnParameters":{"id":1202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1201,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1206,"src":"2323:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1200,"name":"string","nodeType":"ElementaryTypeName","src":"2323:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2322:15:8"},"scope":1651,"src":"2276:93:8","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1754],"body":{"id":1214,"nodeType":"Block","src":"3058:26:8","statements":[{"expression":{"hexValue":"3138","id":1212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3075:2:8","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":1211,"id":1213,"nodeType":"Return","src":"3068:9:8"}]},"documentation":{"id":1207,"nodeType":"StructuredDocumentation","src":"2375:622:8","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":1215,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"3011:8:8","nodeType":"FunctionDefinition","parameters":{"id":1208,"nodeType":"ParameterList","parameters":[],"src":"3019:2:8"},"returnParameters":{"id":1211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1210,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1215,"src":"3051:5:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1209,"name":"uint8","nodeType":"ElementaryTypeName","src":"3051:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"3050:7:8"},"scope":1651,"src":"3002:82:8","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1678],"body":{"id":1223,"nodeType":"Block","src":"3205:36:8","statements":[{"expression":{"id":1221,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1167,"src":"3222:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1220,"id":1222,"nodeType":"Return","src":"3215:19:8"}]},"documentation":{"id":1216,"nodeType":"StructuredDocumentation","src":"3090:49:8","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":1224,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"3153:11:8","nodeType":"FunctionDefinition","parameters":{"id":1217,"nodeType":"ParameterList","parameters":[],"src":"3164:2:8"},"returnParameters":{"id":1220,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1219,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1224,"src":"3196:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1218,"name":"uint256","nodeType":"ElementaryTypeName","src":"3196:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3195:9:8"},"scope":1651,"src":"3144:97:8","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1686],"body":{"id":1236,"nodeType":"Block","src":"3373:42:8","statements":[{"expression":{"baseExpression":{"id":1232,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1159,"src":"3390:9:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1234,"indexExpression":{"id":1233,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1227,"src":"3400:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3390:18:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1231,"id":1235,"nodeType":"Return","src":"3383:25:8"}]},"documentation":{"id":1225,"nodeType":"StructuredDocumentation","src":"3247:47:8","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":1237,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"3308:9:8","nodeType":"FunctionDefinition","parameters":{"id":1228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1227,"mutability":"mutable","name":"account","nameLocation":"3326:7:8","nodeType":"VariableDeclaration","scope":1237,"src":"3318:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1226,"name":"address","nodeType":"ElementaryTypeName","src":"3318:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3317:17:8"},"returnParameters":{"id":1231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1230,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1237,"src":"3364:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1229,"name":"uint256","nodeType":"ElementaryTypeName","src":"3364:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3363:9:8"},"scope":1651,"src":"3299:116:8","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1696],"body":{"id":1260,"nodeType":"Block","src":"3685:103:8","statements":[{"assignments":[1248],"declarations":[{"constant":false,"id":1248,"mutability":"mutable","name":"owner","nameLocation":"3703:5:8","nodeType":"VariableDeclaration","scope":1260,"src":"3695:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1247,"name":"address","nodeType":"ElementaryTypeName","src":"3695:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1251,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1249,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2020,"src":"3711:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1250,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3711:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3695:28:8"},{"expression":{"arguments":[{"id":1253,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1248,"src":"3743:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1254,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1240,"src":"3750:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1255,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1242,"src":"3754:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1252,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1381,"src":"3733:9:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1256,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3733:27:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1257,"nodeType":"ExpressionStatement","src":"3733:27:8"},{"expression":{"hexValue":"74727565","id":1258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3777:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1246,"id":1259,"nodeType":"Return","src":"3770:11:8"}]},"documentation":{"id":1238,"nodeType":"StructuredDocumentation","src":"3421:184:8","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."},"functionSelector":"a9059cbb","id":1261,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"3619:8:8","nodeType":"FunctionDefinition","parameters":{"id":1243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1240,"mutability":"mutable","name":"to","nameLocation":"3636:2:8","nodeType":"VariableDeclaration","scope":1261,"src":"3628:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1239,"name":"address","nodeType":"ElementaryTypeName","src":"3628:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1242,"mutability":"mutable","name":"value","nameLocation":"3648:5:8","nodeType":"VariableDeclaration","scope":1261,"src":"3640:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1241,"name":"uint256","nodeType":"ElementaryTypeName","src":"3640:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3627:27:8"},"returnParameters":{"id":1246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1245,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1261,"src":"3679:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1244,"name":"bool","nodeType":"ElementaryTypeName","src":"3679:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3678:6:8"},"scope":1651,"src":"3610:178:8","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1706],"body":{"id":1277,"nodeType":"Block","src":"3935:51:8","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":1271,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1165,"src":"3952:11:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":1273,"indexExpression":{"id":1272,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1264,"src":"3964:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3952:18:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1275,"indexExpression":{"id":1274,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"3971:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3952:27:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1270,"id":1276,"nodeType":"Return","src":"3945:34:8"}]},"documentation":{"id":1262,"nodeType":"StructuredDocumentation","src":"3794:47:8","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":1278,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"3855:9:8","nodeType":"FunctionDefinition","parameters":{"id":1267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1264,"mutability":"mutable","name":"owner","nameLocation":"3873:5:8","nodeType":"VariableDeclaration","scope":1278,"src":"3865:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1263,"name":"address","nodeType":"ElementaryTypeName","src":"3865:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1266,"mutability":"mutable","name":"spender","nameLocation":"3888:7:8","nodeType":"VariableDeclaration","scope":1278,"src":"3880:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1265,"name":"address","nodeType":"ElementaryTypeName","src":"3880:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3864:32:8"},"returnParameters":{"id":1270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1269,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1278,"src":"3926:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1268,"name":"uint256","nodeType":"ElementaryTypeName","src":"3926:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3925:9:8"},"scope":1651,"src":"3846:140:8","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1716],"body":{"id":1301,"nodeType":"Block","src":"4372:107:8","statements":[{"assignments":[1289],"declarations":[{"constant":false,"id":1289,"mutability":"mutable","name":"owner","nameLocation":"4390:5:8","nodeType":"VariableDeclaration","scope":1301,"src":"4382:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1288,"name":"address","nodeType":"ElementaryTypeName","src":"4382:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1292,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1290,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2020,"src":"4398:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1291,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4398:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4382:28:8"},{"expression":{"arguments":[{"id":1294,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1289,"src":"4429:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1295,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1281,"src":"4436:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1296,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1283,"src":"4445:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1293,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1542,1602],"referencedDeclaration":1542,"src":"4420:8:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4420:31:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1298,"nodeType":"ExpressionStatement","src":"4420:31:8"},{"expression":{"hexValue":"74727565","id":1299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4468:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1287,"id":1300,"nodeType":"Return","src":"4461:11:8"}]},"documentation":{"id":1279,"nodeType":"StructuredDocumentation","src":"3992:296:8","text":" @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":1302,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4302:7:8","nodeType":"FunctionDefinition","parameters":{"id":1284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1281,"mutability":"mutable","name":"spender","nameLocation":"4318:7:8","nodeType":"VariableDeclaration","scope":1302,"src":"4310:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1280,"name":"address","nodeType":"ElementaryTypeName","src":"4310:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1283,"mutability":"mutable","name":"value","nameLocation":"4335:5:8","nodeType":"VariableDeclaration","scope":1302,"src":"4327:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1282,"name":"uint256","nodeType":"ElementaryTypeName","src":"4327:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4309:32:8"},"returnParameters":{"id":1287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1286,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1302,"src":"4366:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1285,"name":"bool","nodeType":"ElementaryTypeName","src":"4366:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4365:6:8"},"scope":1651,"src":"4293:186:8","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1728],"body":{"id":1333,"nodeType":"Block","src":"5132:151:8","statements":[{"assignments":[1315],"declarations":[{"constant":false,"id":1315,"mutability":"mutable","name":"spender","nameLocation":"5150:7:8","nodeType":"VariableDeclaration","scope":1333,"src":"5142:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1314,"name":"address","nodeType":"ElementaryTypeName","src":"5142:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1318,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1316,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2020,"src":"5160:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1317,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5160:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5142:30:8"},{"expression":{"arguments":[{"id":1320,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1305,"src":"5198:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1321,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1315,"src":"5204:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1322,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1309,"src":"5213:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1319,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1650,"src":"5182:15:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1323,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5182:37:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1324,"nodeType":"ExpressionStatement","src":"5182:37:8"},{"expression":{"arguments":[{"id":1326,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1305,"src":"5239:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1327,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1307,"src":"5245:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1328,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1309,"src":"5249:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1325,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1381,"src":"5229:9:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1329,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5229:26:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1330,"nodeType":"ExpressionStatement","src":"5229:26:8"},{"expression":{"hexValue":"74727565","id":1331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5272:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1313,"id":1332,"nodeType":"Return","src":"5265:11:8"}]},"documentation":{"id":1303,"nodeType":"StructuredDocumentation","src":"4485:549:8","text":" @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."},"functionSelector":"23b872dd","id":1334,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"5048:12:8","nodeType":"FunctionDefinition","parameters":{"id":1310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1305,"mutability":"mutable","name":"from","nameLocation":"5069:4:8","nodeType":"VariableDeclaration","scope":1334,"src":"5061:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1304,"name":"address","nodeType":"ElementaryTypeName","src":"5061:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1307,"mutability":"mutable","name":"to","nameLocation":"5083:2:8","nodeType":"VariableDeclaration","scope":1334,"src":"5075:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1306,"name":"address","nodeType":"ElementaryTypeName","src":"5075:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1309,"mutability":"mutable","name":"value","nameLocation":"5095:5:8","nodeType":"VariableDeclaration","scope":1334,"src":"5087:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1308,"name":"uint256","nodeType":"ElementaryTypeName","src":"5087:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5060:41:8"},"returnParameters":{"id":1313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1312,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1334,"src":"5126:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1311,"name":"bool","nodeType":"ElementaryTypeName","src":"5126:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5125:6:8"},"scope":1651,"src":"5039:244:8","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1380,"nodeType":"Block","src":"5725:231:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1344,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1337,"src":"5739:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1347,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5755:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1346,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5747:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1345,"name":"address","nodeType":"ElementaryTypeName","src":"5747:7:8","typeDescriptions":{}}},"id":1348,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5747:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5739:18:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1358,"nodeType":"IfStatement","src":"5735:86:8","trueBody":{"id":1357,"nodeType":"Block","src":"5759:62:8","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5807:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1352,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5799:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1351,"name":"address","nodeType":"ElementaryTypeName","src":"5799:7:8","typeDescriptions":{}}},"id":1354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5799:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1350,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":703,"src":"5780:18:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5780:30:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1356,"nodeType":"RevertStatement","src":"5773:37:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1359,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1339,"src":"5834:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1362,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5848:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1361,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5840:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1360,"name":"address","nodeType":"ElementaryTypeName","src":"5840:7:8","typeDescriptions":{}}},"id":1363,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5840:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5834:16:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1373,"nodeType":"IfStatement","src":"5830:86:8","trueBody":{"id":1372,"nodeType":"Block","src":"5852:64:8","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5902:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1367,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5894:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1366,"name":"address","nodeType":"ElementaryTypeName","src":"5894:7:8","typeDescriptions":{}}},"id":1369,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5894:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1365,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":708,"src":"5873:20:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1370,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5873:32:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1371,"nodeType":"RevertStatement","src":"5866:39:8"}]}},{"expression":{"arguments":[{"id":1375,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1337,"src":"5933:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1376,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1339,"src":"5939:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1377,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1341,"src":"5943:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1374,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1458,"src":"5925:7:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5925:24:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1379,"nodeType":"ExpressionStatement","src":"5925:24:8"}]},"documentation":{"id":1335,"nodeType":"StructuredDocumentation","src":"5289:362:8","text":" @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":1381,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"5665:9:8","nodeType":"FunctionDefinition","parameters":{"id":1342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1337,"mutability":"mutable","name":"from","nameLocation":"5683:4:8","nodeType":"VariableDeclaration","scope":1381,"src":"5675:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1336,"name":"address","nodeType":"ElementaryTypeName","src":"5675:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1339,"mutability":"mutable","name":"to","nameLocation":"5697:2:8","nodeType":"VariableDeclaration","scope":1381,"src":"5689:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1338,"name":"address","nodeType":"ElementaryTypeName","src":"5689:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1341,"mutability":"mutable","name":"value","nameLocation":"5709:5:8","nodeType":"VariableDeclaration","scope":1381,"src":"5701:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1340,"name":"uint256","nodeType":"ElementaryTypeName","src":"5701:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5674:41:8"},"returnParameters":{"id":1343,"nodeType":"ParameterList","parameters":[],"src":"5725:0:8"},"scope":1651,"src":"5656:300:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1457,"nodeType":"Block","src":"6346:1032:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1391,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1384,"src":"6360:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6376:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1393,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6368:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1392,"name":"address","nodeType":"ElementaryTypeName","src":"6368:7:8","typeDescriptions":{}}},"id":1395,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6368:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6360:18:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1428,"nodeType":"Block","src":"6534:362:8","statements":[{"assignments":[1403],"declarations":[{"constant":false,"id":1403,"mutability":"mutable","name":"fromBalance","nameLocation":"6556:11:8","nodeType":"VariableDeclaration","scope":1428,"src":"6548:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1402,"name":"uint256","nodeType":"ElementaryTypeName","src":"6548:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1407,"initialValue":{"baseExpression":{"id":1404,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1159,"src":"6570:9:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1406,"indexExpression":{"id":1405,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1384,"src":"6580:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6570:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6548:37:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1408,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1403,"src":"6603:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1409,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1388,"src":"6617:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6603:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1418,"nodeType":"IfStatement","src":"6599:115:8","trueBody":{"id":1417,"nodeType":"Block","src":"6624:90:8","statements":[{"errorCall":{"arguments":[{"id":1412,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1384,"src":"6674:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1413,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1403,"src":"6680:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1414,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1388,"src":"6693:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1411,"name":"ERC20InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":698,"src":"6649:24:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":1415,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6649:50:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1416,"nodeType":"RevertStatement","src":"6642:57:8"}]}},{"id":1427,"nodeType":"UncheckedBlock","src":"6727:159:8","statements":[{"expression":{"id":1425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1419,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1159,"src":"6834:9:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1421,"indexExpression":{"id":1420,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1384,"src":"6844:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6834:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1422,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1403,"src":"6852:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1423,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1388,"src":"6866:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6852:19:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6834:37:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1426,"nodeType":"ExpressionStatement","src":"6834:37:8"}]}]},"id":1429,"nodeType":"IfStatement","src":"6356:540:8","trueBody":{"id":1401,"nodeType":"Block","src":"6380:148:8","statements":[{"expression":{"id":1399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1397,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1167,"src":"6496:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1398,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1388,"src":"6512:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6496:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1400,"nodeType":"ExpressionStatement","src":"6496:21:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1430,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1386,"src":"6910:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1433,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6924:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1432,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1431,"name":"address","nodeType":"ElementaryTypeName","src":"6916:7:8","typeDescriptions":{}}},"id":1434,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6910:16:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1449,"nodeType":"Block","src":"7125:206:8","statements":[{"id":1448,"nodeType":"UncheckedBlock","src":"7139:182:8","statements":[{"expression":{"id":1446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1442,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1159,"src":"7284:9:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1444,"indexExpression":{"id":1443,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1386,"src":"7294:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7284:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1445,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1388,"src":"7301:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7284:22:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1447,"nodeType":"ExpressionStatement","src":"7284:22:8"}]}]},"id":1450,"nodeType":"IfStatement","src":"6906:425:8","trueBody":{"id":1441,"nodeType":"Block","src":"6928:191:8","statements":[{"id":1440,"nodeType":"UncheckedBlock","src":"6942:167:8","statements":[{"expression":{"id":1438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1436,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1167,"src":"7073:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":1437,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1388,"src":"7089:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7073:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1439,"nodeType":"ExpressionStatement","src":"7073:21:8"}]}]}},{"eventCall":{"arguments":[{"id":1452,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1384,"src":"7355:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1453,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1386,"src":"7361:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1454,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1388,"src":"7365:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1451,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1663,"src":"7346:8:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1455,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7346:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1456,"nodeType":"EmitStatement","src":"7341:30:8"}]},"documentation":{"id":1382,"nodeType":"StructuredDocumentation","src":"5962:304:8","text":" @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."},"id":1458,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"6280:7:8","nodeType":"FunctionDefinition","parameters":{"id":1389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1384,"mutability":"mutable","name":"from","nameLocation":"6296:4:8","nodeType":"VariableDeclaration","scope":1458,"src":"6288:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1383,"name":"address","nodeType":"ElementaryTypeName","src":"6288:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1386,"mutability":"mutable","name":"to","nameLocation":"6310:2:8","nodeType":"VariableDeclaration","scope":1458,"src":"6302:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1385,"name":"address","nodeType":"ElementaryTypeName","src":"6302:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1388,"mutability":"mutable","name":"value","nameLocation":"6322:5:8","nodeType":"VariableDeclaration","scope":1458,"src":"6314:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1387,"name":"uint256","nodeType":"ElementaryTypeName","src":"6314:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6287:41:8"},"returnParameters":{"id":1390,"nodeType":"ParameterList","parameters":[],"src":"6346:0:8"},"scope":1651,"src":"6271:1107:8","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1490,"nodeType":"Block","src":"7777:152:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1466,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1461,"src":"7791:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7810:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1468,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7802:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1467,"name":"address","nodeType":"ElementaryTypeName","src":"7802:7:8","typeDescriptions":{}}},"id":1470,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7802:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7791:21:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1480,"nodeType":"IfStatement","src":"7787:91:8","trueBody":{"id":1479,"nodeType":"Block","src":"7814:64:8","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7864:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1474,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7856:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1473,"name":"address","nodeType":"ElementaryTypeName","src":"7856:7:8","typeDescriptions":{}}},"id":1476,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7856:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1472,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":708,"src":"7835:20:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1477,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7835:32:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1478,"nodeType":"RevertStatement","src":"7828:39:8"}]}},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7903:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1483,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7895:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1482,"name":"address","nodeType":"ElementaryTypeName","src":"7895:7:8","typeDescriptions":{}}},"id":1485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7895:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1486,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1461,"src":"7907:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1487,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1463,"src":"7916:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1481,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1458,"src":"7887:7:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1488,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7887:35:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1489,"nodeType":"ExpressionStatement","src":"7887:35:8"}]},"documentation":{"id":1459,"nodeType":"StructuredDocumentation","src":"7384:332:8","text":" @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":1491,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"7730:5:8","nodeType":"FunctionDefinition","parameters":{"id":1464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1461,"mutability":"mutable","name":"account","nameLocation":"7744:7:8","nodeType":"VariableDeclaration","scope":1491,"src":"7736:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1460,"name":"address","nodeType":"ElementaryTypeName","src":"7736:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1463,"mutability":"mutable","name":"value","nameLocation":"7761:5:8","nodeType":"VariableDeclaration","scope":1491,"src":"7753:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1462,"name":"uint256","nodeType":"ElementaryTypeName","src":"7753:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7735:32:8"},"returnParameters":{"id":1465,"nodeType":"ParameterList","parameters":[],"src":"7777:0:8"},"scope":1651,"src":"7721:208:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1523,"nodeType":"Block","src":"8303:150:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1499,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1494,"src":"8317:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8336:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1501,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8328:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1500,"name":"address","nodeType":"ElementaryTypeName","src":"8328:7:8","typeDescriptions":{}}},"id":1503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8328:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8317:21:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1513,"nodeType":"IfStatement","src":"8313:89:8","trueBody":{"id":1512,"nodeType":"Block","src":"8340:62:8","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1508,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8388:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1507,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8380:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1506,"name":"address","nodeType":"ElementaryTypeName","src":"8380:7:8","typeDescriptions":{}}},"id":1509,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8380:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1505,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":703,"src":"8361:18:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1510,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8361:30:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1511,"nodeType":"RevertStatement","src":"8354:37:8"}]}},{"expression":{"arguments":[{"id":1515,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1494,"src":"8419:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1518,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8436:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1517,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8428:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1516,"name":"address","nodeType":"ElementaryTypeName","src":"8428:7:8","typeDescriptions":{}}},"id":1519,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8428:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1520,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1496,"src":"8440:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1514,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1458,"src":"8411:7:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8411:35:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1522,"nodeType":"ExpressionStatement","src":"8411:35:8"}]},"documentation":{"id":1492,"nodeType":"StructuredDocumentation","src":"7935:307:8","text":" @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"},"id":1524,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"8256:5:8","nodeType":"FunctionDefinition","parameters":{"id":1497,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1494,"mutability":"mutable","name":"account","nameLocation":"8270:7:8","nodeType":"VariableDeclaration","scope":1524,"src":"8262:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1493,"name":"address","nodeType":"ElementaryTypeName","src":"8262:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1496,"mutability":"mutable","name":"value","nameLocation":"8287:5:8","nodeType":"VariableDeclaration","scope":1524,"src":"8279:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1495,"name":"uint256","nodeType":"ElementaryTypeName","src":"8279:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8261:32:8"},"returnParameters":{"id":1498,"nodeType":"ParameterList","parameters":[],"src":"8303:0:8"},"scope":1651,"src":"8247:206:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1541,"nodeType":"Block","src":"9063:54:8","statements":[{"expression":{"arguments":[{"id":1535,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1527,"src":"9082:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1536,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1529,"src":"9089:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1537,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1531,"src":"9098:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":1538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9105:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1534,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1542,1602],"referencedDeclaration":1602,"src":"9073:8:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":1539,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9073:37:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1540,"nodeType":"ExpressionStatement","src":"9073:37:8"}]},"documentation":{"id":1525,"nodeType":"StructuredDocumentation","src":"8459:525:8","text":" @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"id":1542,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"8998:8:8","nodeType":"FunctionDefinition","parameters":{"id":1532,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1527,"mutability":"mutable","name":"owner","nameLocation":"9015:5:8","nodeType":"VariableDeclaration","scope":1542,"src":"9007:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1526,"name":"address","nodeType":"ElementaryTypeName","src":"9007:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1529,"mutability":"mutable","name":"spender","nameLocation":"9030:7:8","nodeType":"VariableDeclaration","scope":1542,"src":"9022:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1528,"name":"address","nodeType":"ElementaryTypeName","src":"9022:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1531,"mutability":"mutable","name":"value","nameLocation":"9047:5:8","nodeType":"VariableDeclaration","scope":1542,"src":"9039:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1530,"name":"uint256","nodeType":"ElementaryTypeName","src":"9039:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9006:47:8"},"returnParameters":{"id":1533,"nodeType":"ParameterList","parameters":[],"src":"9063:0:8"},"scope":1651,"src":"8989:128:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1601,"nodeType":"Block","src":"10047:334:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1554,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1545,"src":"10061:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10078:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1556,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10070:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1555,"name":"address","nodeType":"ElementaryTypeName","src":"10070:7:8","typeDescriptions":{}}},"id":1558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10070:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10061:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1568,"nodeType":"IfStatement","src":"10057:89:8","trueBody":{"id":1567,"nodeType":"Block","src":"10082:64:8","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10132:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1562,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10124:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1561,"name":"address","nodeType":"ElementaryTypeName","src":"10124:7:8","typeDescriptions":{}}},"id":1564,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10124:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1560,"name":"ERC20InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":722,"src":"10103:20:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1565,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10103:32:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1566,"nodeType":"RevertStatement","src":"10096:39:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1569,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1547,"src":"10159:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1572,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10178:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1571,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10170:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1570,"name":"address","nodeType":"ElementaryTypeName","src":"10170:7:8","typeDescriptions":{}}},"id":1573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10170:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10159:21:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1583,"nodeType":"IfStatement","src":"10155:90:8","trueBody":{"id":1582,"nodeType":"Block","src":"10182:63:8","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1578,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10231:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1577,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10223:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1576,"name":"address","nodeType":"ElementaryTypeName","src":"10223:7:8","typeDescriptions":{}}},"id":1579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10223:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1575,"name":"ERC20InvalidSpender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":727,"src":"10203:19:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1580,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10203:31:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1581,"nodeType":"RevertStatement","src":"10196:38:8"}]}},{"expression":{"id":1590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1584,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1165,"src":"10254:11:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":1587,"indexExpression":{"id":1585,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1545,"src":"10266:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10254:18:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1588,"indexExpression":{"id":1586,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1547,"src":"10273:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10254:27:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1589,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1549,"src":"10284:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10254:35:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1591,"nodeType":"ExpressionStatement","src":"10254:35:8"},{"condition":{"id":1592,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1551,"src":"10303:9:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1600,"nodeType":"IfStatement","src":"10299:76:8","trueBody":{"id":1599,"nodeType":"Block","src":"10314:61:8","statements":[{"eventCall":{"arguments":[{"id":1594,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1545,"src":"10342:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1595,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1547,"src":"10349:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1596,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1549,"src":"10358:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1593,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1672,"src":"10333:8:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1597,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10333:31:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1598,"nodeType":"EmitStatement","src":"10328:36:8"}]}}]},"documentation":{"id":1543,"nodeType":"StructuredDocumentation","src":"9123:821:8","text":" @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."},"id":1602,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"9958:8:8","nodeType":"FunctionDefinition","parameters":{"id":1552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1545,"mutability":"mutable","name":"owner","nameLocation":"9975:5:8","nodeType":"VariableDeclaration","scope":1602,"src":"9967:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1544,"name":"address","nodeType":"ElementaryTypeName","src":"9967:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1547,"mutability":"mutable","name":"spender","nameLocation":"9990:7:8","nodeType":"VariableDeclaration","scope":1602,"src":"9982:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1546,"name":"address","nodeType":"ElementaryTypeName","src":"9982:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1549,"mutability":"mutable","name":"value","nameLocation":"10007:5:8","nodeType":"VariableDeclaration","scope":1602,"src":"9999:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1548,"name":"uint256","nodeType":"ElementaryTypeName","src":"9999:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1551,"mutability":"mutable","name":"emitEvent","nameLocation":"10019:9:8","nodeType":"VariableDeclaration","scope":1602,"src":"10014:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1550,"name":"bool","nodeType":"ElementaryTypeName","src":"10014:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9966:63:8"},"returnParameters":{"id":1553,"nodeType":"ParameterList","parameters":[],"src":"10047:0:8"},"scope":1651,"src":"9949:432:8","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1649,"nodeType":"Block","src":"10752:388:8","statements":[{"assignments":[1613],"declarations":[{"constant":false,"id":1613,"mutability":"mutable","name":"currentAllowance","nameLocation":"10770:16:8","nodeType":"VariableDeclaration","scope":1649,"src":"10762:24:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1612,"name":"uint256","nodeType":"ElementaryTypeName","src":"10762:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1618,"initialValue":{"arguments":[{"id":1615,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1605,"src":"10799:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1616,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1607,"src":"10806:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1614,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1278,"src":"10789:9:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":1617,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10789:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10762:52:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1619,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1613,"src":"10828:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":1622,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10853:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1621,"name":"uint256","nodeType":"ElementaryTypeName","src":"10853:7:8","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":1620,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10848:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10848:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":1624,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10862:3:8","memberName":"max","nodeType":"MemberAccess","src":"10848:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10828:37:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1648,"nodeType":"IfStatement","src":"10824:310:8","trueBody":{"id":1647,"nodeType":"Block","src":"10867:267:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1626,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1613,"src":"10885:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1627,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1609,"src":"10904:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10885:24:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1636,"nodeType":"IfStatement","src":"10881:130:8","trueBody":{"id":1635,"nodeType":"Block","src":"10911:100:8","statements":[{"errorCall":{"arguments":[{"id":1630,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1607,"src":"10963:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1631,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1613,"src":"10972:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1632,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1609,"src":"10990:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1629,"name":"ERC20InsufficientAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":717,"src":"10936:26:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":1633,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10936:60:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1634,"nodeType":"RevertStatement","src":"10929:67:8"}]}},{"id":1646,"nodeType":"UncheckedBlock","src":"11024:100:8","statements":[{"expression":{"arguments":[{"id":1638,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1605,"src":"11061:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1639,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1607,"src":"11068:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1640,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1613,"src":"11077:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1641,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1609,"src":"11096:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11077:24:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":1643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11103:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1637,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1542,1602],"referencedDeclaration":1602,"src":"11052:8:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":1644,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11052:57:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1645,"nodeType":"ExpressionStatement","src":"11052:57:8"}]}]}}]},"documentation":{"id":1603,"nodeType":"StructuredDocumentation","src":"10387:271:8","text":" @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."},"id":1650,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"10672:15:8","nodeType":"FunctionDefinition","parameters":{"id":1610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1605,"mutability":"mutable","name":"owner","nameLocation":"10696:5:8","nodeType":"VariableDeclaration","scope":1650,"src":"10688:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1604,"name":"address","nodeType":"ElementaryTypeName","src":"10688:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1607,"mutability":"mutable","name":"spender","nameLocation":"10711:7:8","nodeType":"VariableDeclaration","scope":1650,"src":"10703:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1606,"name":"address","nodeType":"ElementaryTypeName","src":"10703:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1609,"mutability":"mutable","name":"value","nameLocation":"10728:5:8","nodeType":"VariableDeclaration","scope":1650,"src":"10720:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1608,"name":"uint256","nodeType":"ElementaryTypeName","src":"10720:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10687:47:8"},"returnParameters":{"id":1611,"nodeType":"ParameterList","parameters":[],"src":"10752:0:8"},"scope":1651,"src":"10663:477:8","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1652,"src":"1401:9741:8","usedErrors":[698,703,708,717,722,727],"usedEvents":[1663,1672]}],"src":"105:11038:8"},"id":8},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[1729]},"id":1730,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1653,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:9"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":1654,"nodeType":"StructuredDocumentation","src":"132:70:9","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":1729,"linearizedBaseContracts":[1729],"name":"IERC20","nameLocation":"213:6:9","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1655,"nodeType":"StructuredDocumentation","src":"226:158:9","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":1663,"name":"Transfer","nameLocation":"395:8:9","nodeType":"EventDefinition","parameters":{"id":1662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1657,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"420:4:9","nodeType":"VariableDeclaration","scope":1663,"src":"404:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1656,"name":"address","nodeType":"ElementaryTypeName","src":"404:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1659,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"442:2:9","nodeType":"VariableDeclaration","scope":1663,"src":"426:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1658,"name":"address","nodeType":"ElementaryTypeName","src":"426:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1661,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"454:5:9","nodeType":"VariableDeclaration","scope":1663,"src":"446:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1660,"name":"uint256","nodeType":"ElementaryTypeName","src":"446:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"403:57:9"},"src":"389:72:9"},{"anonymous":false,"documentation":{"id":1664,"nodeType":"StructuredDocumentation","src":"467:148:9","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":1672,"name":"Approval","nameLocation":"626:8:9","nodeType":"EventDefinition","parameters":{"id":1671,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1666,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"651:5:9","nodeType":"VariableDeclaration","scope":1672,"src":"635:21:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1665,"name":"address","nodeType":"ElementaryTypeName","src":"635:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1668,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"674:7:9","nodeType":"VariableDeclaration","scope":1672,"src":"658:23:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1667,"name":"address","nodeType":"ElementaryTypeName","src":"658:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1670,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"691:5:9","nodeType":"VariableDeclaration","scope":1672,"src":"683:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1669,"name":"uint256","nodeType":"ElementaryTypeName","src":"683:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"634:63:9"},"src":"620:78:9"},{"documentation":{"id":1673,"nodeType":"StructuredDocumentation","src":"704:65:9","text":" @dev Returns the value of tokens in existence."},"functionSelector":"18160ddd","id":1678,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:9","nodeType":"FunctionDefinition","parameters":{"id":1674,"nodeType":"ParameterList","parameters":[],"src":"794:2:9"},"returnParameters":{"id":1677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1676,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1678,"src":"820:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1675,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:9"},"scope":1729,"src":"774:55:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1679,"nodeType":"StructuredDocumentation","src":"835:71:9","text":" @dev Returns the value of tokens owned by `account`."},"functionSelector":"70a08231","id":1686,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"920:9:9","nodeType":"FunctionDefinition","parameters":{"id":1682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1681,"mutability":"mutable","name":"account","nameLocation":"938:7:9","nodeType":"VariableDeclaration","scope":1686,"src":"930:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1680,"name":"address","nodeType":"ElementaryTypeName","src":"930:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"929:17:9"},"returnParameters":{"id":1685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1684,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1686,"src":"970:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1683,"name":"uint256","nodeType":"ElementaryTypeName","src":"970:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"969:9:9"},"scope":1729,"src":"911:68:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1687,"nodeType":"StructuredDocumentation","src":"985:213:9","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":1696,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1212:8:9","nodeType":"FunctionDefinition","parameters":{"id":1692,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1689,"mutability":"mutable","name":"to","nameLocation":"1229:2:9","nodeType":"VariableDeclaration","scope":1696,"src":"1221:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1688,"name":"address","nodeType":"ElementaryTypeName","src":"1221:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1691,"mutability":"mutable","name":"value","nameLocation":"1241:5:9","nodeType":"VariableDeclaration","scope":1696,"src":"1233:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1690,"name":"uint256","nodeType":"ElementaryTypeName","src":"1233:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1220:27:9"},"returnParameters":{"id":1695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1694,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1696,"src":"1266:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1693,"name":"bool","nodeType":"ElementaryTypeName","src":"1266:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1265:6:9"},"scope":1729,"src":"1203:69:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1697,"nodeType":"StructuredDocumentation","src":"1278:264:9","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":1706,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1556:9:9","nodeType":"FunctionDefinition","parameters":{"id":1702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1699,"mutability":"mutable","name":"owner","nameLocation":"1574:5:9","nodeType":"VariableDeclaration","scope":1706,"src":"1566:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1698,"name":"address","nodeType":"ElementaryTypeName","src":"1566:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1701,"mutability":"mutable","name":"spender","nameLocation":"1589:7:9","nodeType":"VariableDeclaration","scope":1706,"src":"1581:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1700,"name":"address","nodeType":"ElementaryTypeName","src":"1581:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1565:32:9"},"returnParameters":{"id":1705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1704,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1706,"src":"1621:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1703,"name":"uint256","nodeType":"ElementaryTypeName","src":"1621:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1620:9:9"},"scope":1729,"src":"1547:83:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1707,"nodeType":"StructuredDocumentation","src":"1636:667:9","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":1716,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2317:7:9","nodeType":"FunctionDefinition","parameters":{"id":1712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1709,"mutability":"mutable","name":"spender","nameLocation":"2333:7:9","nodeType":"VariableDeclaration","scope":1716,"src":"2325:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1708,"name":"address","nodeType":"ElementaryTypeName","src":"2325:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1711,"mutability":"mutable","name":"value","nameLocation":"2350:5:9","nodeType":"VariableDeclaration","scope":1716,"src":"2342:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1710,"name":"uint256","nodeType":"ElementaryTypeName","src":"2342:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2324:32:9"},"returnParameters":{"id":1715,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1714,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1716,"src":"2375:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1713,"name":"bool","nodeType":"ElementaryTypeName","src":"2375:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2374:6:9"},"scope":1729,"src":"2308:73:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1717,"nodeType":"StructuredDocumentation","src":"2387:297:9","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":1728,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2698:12:9","nodeType":"FunctionDefinition","parameters":{"id":1724,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1719,"mutability":"mutable","name":"from","nameLocation":"2719:4:9","nodeType":"VariableDeclaration","scope":1728,"src":"2711:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1718,"name":"address","nodeType":"ElementaryTypeName","src":"2711:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1721,"mutability":"mutable","name":"to","nameLocation":"2733:2:9","nodeType":"VariableDeclaration","scope":1728,"src":"2725:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1720,"name":"address","nodeType":"ElementaryTypeName","src":"2725:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1723,"mutability":"mutable","name":"value","nameLocation":"2745:5:9","nodeType":"VariableDeclaration","scope":1728,"src":"2737:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1722,"name":"uint256","nodeType":"ElementaryTypeName","src":"2737:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2710:41:9"},"returnParameters":{"id":1727,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1726,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1728,"src":"2770:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1725,"name":"bool","nodeType":"ElementaryTypeName","src":"2770:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2769:6:9"},"scope":1729,"src":"2689:87:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1730,"src":"203:2575:9","usedErrors":[],"usedEvents":[1663,1672]}],"src":"106:2673:9"},"id":9},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[1729],"IERC20Metadata":[1755]},"id":1756,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1731,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"125:24:10"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":1733,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1756,"sourceUnit":1730,"src":"151:37:10","symbolAliases":[{"foreign":{"id":1732,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1729,"src":"159:6:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1735,"name":"IERC20","nameLocations":["305:6:10"],"nodeType":"IdentifierPath","referencedDeclaration":1729,"src":"305:6:10"},"id":1736,"nodeType":"InheritanceSpecifier","src":"305:6:10"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":1734,"nodeType":"StructuredDocumentation","src":"190:86:10","text":" @dev Interface for the optional metadata functions from the ERC20 standard."},"fullyImplemented":false,"id":1755,"linearizedBaseContracts":[1755,1729],"name":"IERC20Metadata","nameLocation":"287:14:10","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1737,"nodeType":"StructuredDocumentation","src":"318:54:10","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":1742,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"386:4:10","nodeType":"FunctionDefinition","parameters":{"id":1738,"nodeType":"ParameterList","parameters":[],"src":"390:2:10"},"returnParameters":{"id":1741,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1740,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1742,"src":"416:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1739,"name":"string","nodeType":"ElementaryTypeName","src":"416:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"415:15:10"},"scope":1755,"src":"377:54:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1743,"nodeType":"StructuredDocumentation","src":"437:56:10","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":1748,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"507:6:10","nodeType":"FunctionDefinition","parameters":{"id":1744,"nodeType":"ParameterList","parameters":[],"src":"513:2:10"},"returnParameters":{"id":1747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1746,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1748,"src":"539:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1745,"name":"string","nodeType":"ElementaryTypeName","src":"539:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"538:15:10"},"scope":1755,"src":"498:56:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1749,"nodeType":"StructuredDocumentation","src":"560:65:10","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":1754,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"639:8:10","nodeType":"FunctionDefinition","parameters":{"id":1750,"nodeType":"ParameterList","parameters":[],"src":"647:2:10"},"returnParameters":{"id":1753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1752,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1754,"src":"673:5:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1751,"name":"uint8","nodeType":"ElementaryTypeName","src":"673:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"672:7:10"},"scope":1755,"src":"630:50:10","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1756,"src":"277:405:10","usedErrors":[],"usedEvents":[1663,1672]}],"src":"125:558:10"},"id":10},"@openzeppelin/contracts/utils/Address.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[2008]},"id":2009,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1757,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:11"},{"abstract":false,"baseContracts":[],"canonicalName":"Address","contractDependencies":[],"contractKind":"library","documentation":{"id":1758,"nodeType":"StructuredDocumentation","src":"127:67:11","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":2008,"linearizedBaseContracts":[2008],"name":"Address","nameLocation":"203:7:11","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1759,"nodeType":"StructuredDocumentation","src":"217:94:11","text":" @dev The ETH balance of the account is not enough to perform the operation."},"errorSelector":"cd786059","id":1763,"name":"AddressInsufficientBalance","nameLocation":"322:26:11","nodeType":"ErrorDefinition","parameters":{"id":1762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1761,"mutability":"mutable","name":"account","nameLocation":"357:7:11","nodeType":"VariableDeclaration","scope":1763,"src":"349:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1760,"name":"address","nodeType":"ElementaryTypeName","src":"349:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"348:17:11"},"src":"316:50:11"},{"documentation":{"id":1764,"nodeType":"StructuredDocumentation","src":"372:75:11","text":" @dev There's no code at `target` (it is not a contract)."},"errorSelector":"9996b315","id":1768,"name":"AddressEmptyCode","nameLocation":"458:16:11","nodeType":"ErrorDefinition","parameters":{"id":1767,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1766,"mutability":"mutable","name":"target","nameLocation":"483:6:11","nodeType":"VariableDeclaration","scope":1768,"src":"475:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1765,"name":"address","nodeType":"ElementaryTypeName","src":"475:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"474:16:11"},"src":"452:39:11"},{"documentation":{"id":1769,"nodeType":"StructuredDocumentation","src":"497:89:11","text":" @dev A call to an address target failed. The target may have reverted."},"errorSelector":"1425ea42","id":1771,"name":"FailedInnerCall","nameLocation":"597:15:11","nodeType":"ErrorDefinition","parameters":{"id":1770,"nodeType":"ParameterList","parameters":[],"src":"612:2:11"},"src":"591:24:11"},{"body":{"id":1811,"nodeType":"Block","src":"1602:260:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1781,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1624:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$2008","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$2008","typeString":"library Address"}],"id":1780,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1616:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1779,"name":"address","nodeType":"ElementaryTypeName","src":"1616:7:11","typeDescriptions":{}}},"id":1782,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1616:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1630:7:11","memberName":"balance","nodeType":"MemberAccess","src":"1616:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1784,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1776,"src":"1640:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1616:30:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1794,"nodeType":"IfStatement","src":"1612:109:11","trueBody":{"id":1793,"nodeType":"Block","src":"1648:73:11","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":1789,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1704:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$2008","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$2008","typeString":"library Address"}],"id":1788,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1696:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1787,"name":"address","nodeType":"ElementaryTypeName","src":"1696:7:11","typeDescriptions":{}}},"id":1790,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1696:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1786,"name":"AddressInsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1763,"src":"1669:26:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1791,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1669:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1792,"nodeType":"RevertStatement","src":"1662:48:11"}]}},{"assignments":[1796,null],"declarations":[{"constant":false,"id":1796,"mutability":"mutable","name":"success","nameLocation":"1737:7:11","nodeType":"VariableDeclaration","scope":1811,"src":"1732:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1795,"name":"bool","nodeType":"ElementaryTypeName","src":"1732:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":1803,"initialValue":{"arguments":[{"hexValue":"","id":1801,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1780:2:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":1797,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1774,"src":"1750:9:11","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":1798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1760:4:11","memberName":"call","nodeType":"MemberAccess","src":"1750:14:11","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1799,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1776,"src":"1772:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"1750:29:11","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1802,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1750:33:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"1731:52:11"},{"condition":{"id":1805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1797:8:11","subExpression":{"id":1804,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1796,"src":"1798:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1810,"nodeType":"IfStatement","src":"1793:63:11","trueBody":{"id":1809,"nodeType":"Block","src":"1807:49:11","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1806,"name":"FailedInnerCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1771,"src":"1828:15:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1807,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1828:17:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1808,"nodeType":"RevertStatement","src":"1821:24:11"}]}}]},"documentation":{"id":1772,"nodeType":"StructuredDocumentation","src":"621:905:11","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":1812,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"1540:9:11","nodeType":"FunctionDefinition","parameters":{"id":1777,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1774,"mutability":"mutable","name":"recipient","nameLocation":"1566:9:11","nodeType":"VariableDeclaration","scope":1812,"src":"1550:25:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":1773,"name":"address","nodeType":"ElementaryTypeName","src":"1550:15:11","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":1776,"mutability":"mutable","name":"amount","nameLocation":"1585:6:11","nodeType":"VariableDeclaration","scope":1812,"src":"1577:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1775,"name":"uint256","nodeType":"ElementaryTypeName","src":"1577:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1549:43:11"},"returnParameters":{"id":1778,"nodeType":"ParameterList","parameters":[],"src":"1602:0:11"},"scope":2008,"src":"1531:331:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1828,"nodeType":"Block","src":"2794:62:11","statements":[{"expression":{"arguments":[{"id":1823,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1815,"src":"2833:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1824,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1817,"src":"2841:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":1825,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2847:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1822,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1875,"src":"2811:21:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256) returns (bytes memory)"}},"id":1826,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2811:38:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1821,"id":1827,"nodeType":"Return","src":"2804:45:11"}]},"documentation":{"id":1813,"nodeType":"StructuredDocumentation","src":"1868:832:11","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {FailedInnerCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."},"id":1829,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"2714:12:11","nodeType":"FunctionDefinition","parameters":{"id":1818,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1815,"mutability":"mutable","name":"target","nameLocation":"2735:6:11","nodeType":"VariableDeclaration","scope":1829,"src":"2727:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1814,"name":"address","nodeType":"ElementaryTypeName","src":"2727:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1817,"mutability":"mutable","name":"data","nameLocation":"2756:4:11","nodeType":"VariableDeclaration","scope":1829,"src":"2743:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1816,"name":"bytes","nodeType":"ElementaryTypeName","src":"2743:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2726:35:11"},"returnParameters":{"id":1821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1820,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1829,"src":"2780:12:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1819,"name":"bytes","nodeType":"ElementaryTypeName","src":"2780:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2779:14:11"},"scope":2008,"src":"2705:151:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1874,"nodeType":"Block","src":"3293:279:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1843,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3315:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$2008","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$2008","typeString":"library Address"}],"id":1842,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3307:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1841,"name":"address","nodeType":"ElementaryTypeName","src":"3307:7:11","typeDescriptions":{}}},"id":1844,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3307:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3321:7:11","memberName":"balance","nodeType":"MemberAccess","src":"3307:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1846,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1836,"src":"3331:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3307:29:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1856,"nodeType":"IfStatement","src":"3303:108:11","trueBody":{"id":1855,"nodeType":"Block","src":"3338:73:11","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":1851,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3394:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$2008","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$2008","typeString":"library Address"}],"id":1850,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3386:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1849,"name":"address","nodeType":"ElementaryTypeName","src":"3386:7:11","typeDescriptions":{}}},"id":1852,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3386:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1848,"name":"AddressInsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1763,"src":"3359:26:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1853,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3359:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1854,"nodeType":"RevertStatement","src":"3352:48:11"}]}},{"assignments":[1858,1860],"declarations":[{"constant":false,"id":1858,"mutability":"mutable","name":"success","nameLocation":"3426:7:11","nodeType":"VariableDeclaration","scope":1874,"src":"3421:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1857,"name":"bool","nodeType":"ElementaryTypeName","src":"3421:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1860,"mutability":"mutable","name":"returndata","nameLocation":"3448:10:11","nodeType":"VariableDeclaration","scope":1874,"src":"3435:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1859,"name":"bytes","nodeType":"ElementaryTypeName","src":"3435:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1867,"initialValue":{"arguments":[{"id":1865,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1834,"src":"3488:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1861,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1832,"src":"3462:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3469:4:11","memberName":"call","nodeType":"MemberAccess","src":"3462:11:11","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1863,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1836,"src":"3481:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"3462:25:11","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1866,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3462:31:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3420:73:11"},{"expression":{"arguments":[{"id":1869,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1832,"src":"3537:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1870,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1858,"src":"3545:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1871,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1860,"src":"3554:10:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1868,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1967,"src":"3510:26:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":1872,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3510:55:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1840,"id":1873,"nodeType":"Return","src":"3503:62:11"}]},"documentation":{"id":1830,"nodeType":"StructuredDocumentation","src":"2862:313:11","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."},"id":1875,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"3189:21:11","nodeType":"FunctionDefinition","parameters":{"id":1837,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1832,"mutability":"mutable","name":"target","nameLocation":"3219:6:11","nodeType":"VariableDeclaration","scope":1875,"src":"3211:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1831,"name":"address","nodeType":"ElementaryTypeName","src":"3211:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1834,"mutability":"mutable","name":"data","nameLocation":"3240:4:11","nodeType":"VariableDeclaration","scope":1875,"src":"3227:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1833,"name":"bytes","nodeType":"ElementaryTypeName","src":"3227:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1836,"mutability":"mutable","name":"value","nameLocation":"3254:5:11","nodeType":"VariableDeclaration","scope":1875,"src":"3246:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1835,"name":"uint256","nodeType":"ElementaryTypeName","src":"3246:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3210:50:11"},"returnParameters":{"id":1840,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1839,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1875,"src":"3279:12:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1838,"name":"bytes","nodeType":"ElementaryTypeName","src":"3279:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3278:14:11"},"scope":2008,"src":"3180:392:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1900,"nodeType":"Block","src":"3811:154:11","statements":[{"assignments":[1886,1888],"declarations":[{"constant":false,"id":1886,"mutability":"mutable","name":"success","nameLocation":"3827:7:11","nodeType":"VariableDeclaration","scope":1900,"src":"3822:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1885,"name":"bool","nodeType":"ElementaryTypeName","src":"3822:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1888,"mutability":"mutable","name":"returndata","nameLocation":"3849:10:11","nodeType":"VariableDeclaration","scope":1900,"src":"3836:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1887,"name":"bytes","nodeType":"ElementaryTypeName","src":"3836:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1893,"initialValue":{"arguments":[{"id":1891,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1880,"src":"3881:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1889,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1878,"src":"3863:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3870:10:11","memberName":"staticcall","nodeType":"MemberAccess","src":"3863:17:11","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":1892,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3863:23:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3821:65:11"},{"expression":{"arguments":[{"id":1895,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1878,"src":"3930:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1896,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1886,"src":"3938:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1897,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1888,"src":"3947:10:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1894,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1967,"src":"3903:26:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":1898,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3903:55:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1884,"id":1899,"nodeType":"Return","src":"3896:62:11"}]},"documentation":{"id":1876,"nodeType":"StructuredDocumentation","src":"3578:128:11","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."},"id":1901,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"3720:18:11","nodeType":"FunctionDefinition","parameters":{"id":1881,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1878,"mutability":"mutable","name":"target","nameLocation":"3747:6:11","nodeType":"VariableDeclaration","scope":1901,"src":"3739:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1877,"name":"address","nodeType":"ElementaryTypeName","src":"3739:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1880,"mutability":"mutable","name":"data","nameLocation":"3768:4:11","nodeType":"VariableDeclaration","scope":1901,"src":"3755:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1879,"name":"bytes","nodeType":"ElementaryTypeName","src":"3755:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3738:35:11"},"returnParameters":{"id":1884,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1883,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1901,"src":"3797:12:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1882,"name":"bytes","nodeType":"ElementaryTypeName","src":"3797:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3796:14:11"},"scope":2008,"src":"3711:254:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1926,"nodeType":"Block","src":"4203:156:11","statements":[{"assignments":[1912,1914],"declarations":[{"constant":false,"id":1912,"mutability":"mutable","name":"success","nameLocation":"4219:7:11","nodeType":"VariableDeclaration","scope":1926,"src":"4214:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1911,"name":"bool","nodeType":"ElementaryTypeName","src":"4214:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1914,"mutability":"mutable","name":"returndata","nameLocation":"4241:10:11","nodeType":"VariableDeclaration","scope":1926,"src":"4228:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1913,"name":"bytes","nodeType":"ElementaryTypeName","src":"4228:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1919,"initialValue":{"arguments":[{"id":1917,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1906,"src":"4275:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1915,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1904,"src":"4255:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4262:12:11","memberName":"delegatecall","nodeType":"MemberAccess","src":"4255:19:11","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":1918,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4255:25:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"4213:67:11"},{"expression":{"arguments":[{"id":1921,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1904,"src":"4324:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1922,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1912,"src":"4332:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1923,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1914,"src":"4341:10:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1920,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1967,"src":"4297:26:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":1924,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4297:55:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1910,"id":1925,"nodeType":"Return","src":"4290:62:11"}]},"documentation":{"id":1902,"nodeType":"StructuredDocumentation","src":"3971:130:11","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."},"id":1927,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"4115:20:11","nodeType":"FunctionDefinition","parameters":{"id":1907,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1904,"mutability":"mutable","name":"target","nameLocation":"4144:6:11","nodeType":"VariableDeclaration","scope":1927,"src":"4136:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1903,"name":"address","nodeType":"ElementaryTypeName","src":"4136:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1906,"mutability":"mutable","name":"data","nameLocation":"4165:4:11","nodeType":"VariableDeclaration","scope":1927,"src":"4152:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1905,"name":"bytes","nodeType":"ElementaryTypeName","src":"4152:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4135:35:11"},"returnParameters":{"id":1910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1909,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1927,"src":"4189:12:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1908,"name":"bytes","nodeType":"ElementaryTypeName","src":"4189:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4188:14:11"},"scope":2008,"src":"4106:253:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1966,"nodeType":"Block","src":"4783:424:11","statements":[{"condition":{"id":1940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4797:8:11","subExpression":{"id":1939,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1932,"src":"4798:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1964,"nodeType":"Block","src":"4857:344:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1946,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1934,"src":"5045:10:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5056:6:11","memberName":"length","nodeType":"MemberAccess","src":"5045:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1948,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5066:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5045:22:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1950,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1930,"src":"5071:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5078:4:11","memberName":"code","nodeType":"MemberAccess","src":"5071:11:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5083:6:11","memberName":"length","nodeType":"MemberAccess","src":"5071:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1953,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5093:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5071:23:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5045:49:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1961,"nodeType":"IfStatement","src":"5041:119:11","trueBody":{"id":1960,"nodeType":"Block","src":"5096:64:11","statements":[{"errorCall":{"arguments":[{"id":1957,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1930,"src":"5138:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1956,"name":"AddressEmptyCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1768,"src":"5121:16:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1958,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5121:24:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1959,"nodeType":"RevertStatement","src":"5114:31:11"}]}},{"expression":{"id":1962,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1934,"src":"5180:10:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1938,"id":1963,"nodeType":"Return","src":"5173:17:11"}]},"id":1965,"nodeType":"IfStatement","src":"4793:408:11","trueBody":{"id":1945,"nodeType":"Block","src":"4807:44:11","statements":[{"expression":{"arguments":[{"id":1942,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1934,"src":"4829:10:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1941,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2007,"src":"4821:7:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":1943,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4821:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1944,"nodeType":"ExpressionStatement","src":"4821:19:11"}]}}]},"documentation":{"id":1928,"nodeType":"StructuredDocumentation","src":"4365:255:11","text":" @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n unsuccessful call."},"id":1967,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"4634:26:11","nodeType":"FunctionDefinition","parameters":{"id":1935,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1930,"mutability":"mutable","name":"target","nameLocation":"4678:6:11","nodeType":"VariableDeclaration","scope":1967,"src":"4670:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1929,"name":"address","nodeType":"ElementaryTypeName","src":"4670:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1932,"mutability":"mutable","name":"success","nameLocation":"4699:7:11","nodeType":"VariableDeclaration","scope":1967,"src":"4694:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1931,"name":"bool","nodeType":"ElementaryTypeName","src":"4694:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1934,"mutability":"mutable","name":"returndata","nameLocation":"4729:10:11","nodeType":"VariableDeclaration","scope":1967,"src":"4716:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1933,"name":"bytes","nodeType":"ElementaryTypeName","src":"4716:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4660:85:11"},"returnParameters":{"id":1938,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1937,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1967,"src":"4769:12:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1936,"name":"bytes","nodeType":"ElementaryTypeName","src":"4769:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4768:14:11"},"scope":2008,"src":"4625:582:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1988,"nodeType":"Block","src":"5509:122:11","statements":[{"condition":{"id":1978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5523:8:11","subExpression":{"id":1977,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1970,"src":"5524:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1986,"nodeType":"Block","src":"5583:42:11","statements":[{"expression":{"id":1984,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1972,"src":"5604:10:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1976,"id":1985,"nodeType":"Return","src":"5597:17:11"}]},"id":1987,"nodeType":"IfStatement","src":"5519:106:11","trueBody":{"id":1983,"nodeType":"Block","src":"5533:44:11","statements":[{"expression":{"arguments":[{"id":1980,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1972,"src":"5555:10:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1979,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2007,"src":"5547:7:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":1981,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5547:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1982,"nodeType":"ExpressionStatement","src":"5547:19:11"}]}}]},"documentation":{"id":1968,"nodeType":"StructuredDocumentation","src":"5213:189:11","text":" @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {FailedInnerCall} error."},"id":1989,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"5416:16:11","nodeType":"FunctionDefinition","parameters":{"id":1973,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1970,"mutability":"mutable","name":"success","nameLocation":"5438:7:11","nodeType":"VariableDeclaration","scope":1989,"src":"5433:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1969,"name":"bool","nodeType":"ElementaryTypeName","src":"5433:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1972,"mutability":"mutable","name":"returndata","nameLocation":"5460:10:11","nodeType":"VariableDeclaration","scope":1989,"src":"5447:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1971,"name":"bytes","nodeType":"ElementaryTypeName","src":"5447:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5432:39:11"},"returnParameters":{"id":1976,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1975,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1989,"src":"5495:12:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1974,"name":"bytes","nodeType":"ElementaryTypeName","src":"5495:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5494:14:11"},"scope":2008,"src":"5407:224:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2006,"nodeType":"Block","src":"5798:461:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1995,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1992,"src":"5874:10:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5885:6:11","memberName":"length","nodeType":"MemberAccess","src":"5874:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1997,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5894:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5874:21:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2004,"nodeType":"Block","src":"6204:49:11","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2001,"name":"FailedInnerCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1771,"src":"6225:15:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2002,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6225:17:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2003,"nodeType":"RevertStatement","src":"6218:24:11"}]},"id":2005,"nodeType":"IfStatement","src":"5870:383:11","trueBody":{"id":2000,"nodeType":"Block","src":"5897:301:11","statements":[{"AST":{"nativeSrc":"6055:133:11","nodeType":"YulBlock","src":"6055:133:11","statements":[{"nativeSrc":"6073:40:11","nodeType":"YulVariableDeclaration","src":"6073:40:11","value":{"arguments":[{"name":"returndata","nativeSrc":"6102:10:11","nodeType":"YulIdentifier","src":"6102:10:11"}],"functionName":{"name":"mload","nativeSrc":"6096:5:11","nodeType":"YulIdentifier","src":"6096:5:11"},"nativeSrc":"6096:17:11","nodeType":"YulFunctionCall","src":"6096:17:11"},"variables":[{"name":"returndata_size","nativeSrc":"6077:15:11","nodeType":"YulTypedName","src":"6077:15:11","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"6141:2:11","nodeType":"YulLiteral","src":"6141:2:11","type":"","value":"32"},{"name":"returndata","nativeSrc":"6145:10:11","nodeType":"YulIdentifier","src":"6145:10:11"}],"functionName":{"name":"add","nativeSrc":"6137:3:11","nodeType":"YulIdentifier","src":"6137:3:11"},"nativeSrc":"6137:19:11","nodeType":"YulFunctionCall","src":"6137:19:11"},{"name":"returndata_size","nativeSrc":"6158:15:11","nodeType":"YulIdentifier","src":"6158:15:11"}],"functionName":{"name":"revert","nativeSrc":"6130:6:11","nodeType":"YulIdentifier","src":"6130:6:11"},"nativeSrc":"6130:44:11","nodeType":"YulFunctionCall","src":"6130:44:11"},"nativeSrc":"6130:44:11","nodeType":"YulExpressionStatement","src":"6130:44:11"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"cancun","externalReferences":[{"declaration":1992,"isOffset":false,"isSlot":false,"src":"6102:10:11","valueSize":1},{"declaration":1992,"isOffset":false,"isSlot":false,"src":"6145:10:11","valueSize":1}],"id":1999,"nodeType":"InlineAssembly","src":"6046:142:11"}]}}]},"documentation":{"id":1990,"nodeType":"StructuredDocumentation","src":"5637:101:11","text":" @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}."},"id":2007,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"5752:7:11","nodeType":"FunctionDefinition","parameters":{"id":1993,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1992,"mutability":"mutable","name":"returndata","nameLocation":"5773:10:11","nodeType":"VariableDeclaration","scope":2007,"src":"5760:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1991,"name":"bytes","nodeType":"ElementaryTypeName","src":"5760:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5759:25:11"},"returnParameters":{"id":1994,"nodeType":"ParameterList","parameters":[],"src":"5798:0:11"},"scope":2008,"src":"5743:516:11","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":2009,"src":"195:6066:11","usedErrors":[1763,1768,1771],"usedEvents":[]}],"src":"101:6161:11"},"id":11},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[2038]},"id":2039,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2010,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:12"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":2011,"nodeType":"StructuredDocumentation","src":"127:496:12","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":2038,"linearizedBaseContracts":[2038],"name":"Context","nameLocation":"642:7:12","nodeType":"ContractDefinition","nodes":[{"body":{"id":2019,"nodeType":"Block","src":"718:34:12","statements":[{"expression":{"expression":{"id":2016,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:12","memberName":"sender","nodeType":"MemberAccess","src":"735:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2015,"id":2018,"nodeType":"Return","src":"728:17:12"}]},"id":2020,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:12","nodeType":"FunctionDefinition","parameters":{"id":2012,"nodeType":"ParameterList","parameters":[],"src":"675:2:12"},"returnParameters":{"id":2015,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2014,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2020,"src":"709:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2013,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:12"},"scope":2038,"src":"656:96:12","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2028,"nodeType":"Block","src":"825:32:12","statements":[{"expression":{"expression":{"id":2025,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:12","memberName":"data","nodeType":"MemberAccess","src":"842:8:12","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":2024,"id":2027,"nodeType":"Return","src":"835:15:12"}]},"id":2029,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:12","nodeType":"FunctionDefinition","parameters":{"id":2021,"nodeType":"ParameterList","parameters":[],"src":"775:2:12"},"returnParameters":{"id":2024,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2023,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2029,"src":"809:14:12","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2022,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:12"},"scope":2038,"src":"758:99:12","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2036,"nodeType":"Block","src":"935:25:12","statements":[{"expression":{"hexValue":"30","id":2034,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2033,"id":2035,"nodeType":"Return","src":"945:8:12"}]},"id":2037,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:12","nodeType":"FunctionDefinition","parameters":{"id":2030,"nodeType":"ParameterList","parameters":[],"src":"892:2:12"},"returnParameters":{"id":2033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2032,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2037,"src":"926:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2031,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:12"},"scope":2038,"src":"863:97:12","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":2039,"src":"624:338:12","usedErrors":[],"usedEvents":[]}],"src":"101:862:12"},"id":12},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","exportedSymbols":{"ReentrancyGuard":[2107]},"id":2108,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2040,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:13"},{"abstract":true,"baseContracts":[],"canonicalName":"ReentrancyGuard","contractDependencies":[],"contractKind":"contract","documentation":{"id":2041,"nodeType":"StructuredDocumentation","src":"135:750:13","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"id":2107,"linearizedBaseContracts":[2107],"name":"ReentrancyGuard","nameLocation":"904:15:13","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":2044,"mutability":"constant","name":"NOT_ENTERED","nameLocation":"1699:11:13","nodeType":"VariableDeclaration","scope":2107,"src":"1674:40:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2042,"name":"uint256","nodeType":"ElementaryTypeName","src":"1674:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":2043,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1713:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":2047,"mutability":"constant","name":"ENTERED","nameLocation":"1745:7:13","nodeType":"VariableDeclaration","scope":2107,"src":"1720:36:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2045,"name":"uint256","nodeType":"ElementaryTypeName","src":"1720:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":2046,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1755:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":false,"id":2049,"mutability":"mutable","name":"_status","nameLocation":"1779:7:13","nodeType":"VariableDeclaration","scope":2107,"src":"1763:23:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2048,"name":"uint256","nodeType":"ElementaryTypeName","src":"1763:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"documentation":{"id":2050,"nodeType":"StructuredDocumentation","src":"1793:52:13","text":" @dev Unauthorized reentrant call."},"errorSelector":"3ee5aeb5","id":2052,"name":"ReentrancyGuardReentrantCall","nameLocation":"1856:28:13","nodeType":"ErrorDefinition","parameters":{"id":2051,"nodeType":"ParameterList","parameters":[],"src":"1884:2:13"},"src":"1850:37:13"},{"body":{"id":2059,"nodeType":"Block","src":"1907:38:13","statements":[{"expression":{"id":2057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2055,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2049,"src":"1917:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2056,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2044,"src":"1927:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1917:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2058,"nodeType":"ExpressionStatement","src":"1917:21:13"}]},"id":2060,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2053,"nodeType":"ParameterList","parameters":[],"src":"1904:2:13"},"returnParameters":{"id":2054,"nodeType":"ParameterList","parameters":[],"src":"1907:0:13"},"scope":2107,"src":"1893:52:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2070,"nodeType":"Block","src":"2346:79:13","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2063,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2087,"src":"2356:19:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2064,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2356:21:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2065,"nodeType":"ExpressionStatement","src":"2356:21:13"},{"id":2066,"nodeType":"PlaceholderStatement","src":"2387:1:13"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2067,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2095,"src":"2398:18:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2068,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2398:20:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2069,"nodeType":"ExpressionStatement","src":"2398:20:13"}]},"documentation":{"id":2061,"nodeType":"StructuredDocumentation","src":"1951:366:13","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"id":2071,"name":"nonReentrant","nameLocation":"2331:12:13","nodeType":"ModifierDefinition","parameters":{"id":2062,"nodeType":"ParameterList","parameters":[],"src":"2343:2:13"},"src":"2322:103:13","virtual":false,"visibility":"internal"},{"body":{"id":2086,"nodeType":"Block","src":"2470:268:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2074,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2049,"src":"2558:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2075,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2047,"src":"2569:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2558:18:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2081,"nodeType":"IfStatement","src":"2554:86:13","trueBody":{"id":2080,"nodeType":"Block","src":"2578:62:13","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2077,"name":"ReentrancyGuardReentrantCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2052,"src":"2599:28:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2078,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2599:30:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2079,"nodeType":"RevertStatement","src":"2592:37:13"}]}},{"expression":{"id":2084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2082,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2049,"src":"2714:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2083,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2047,"src":"2724:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2714:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2085,"nodeType":"ExpressionStatement","src":"2714:17:13"}]},"id":2087,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"2440:19:13","nodeType":"FunctionDefinition","parameters":{"id":2072,"nodeType":"ParameterList","parameters":[],"src":"2459:2:13"},"returnParameters":{"id":2073,"nodeType":"ParameterList","parameters":[],"src":"2470:0:13"},"scope":2107,"src":"2431:307:13","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2094,"nodeType":"Block","src":"2782:170:13","statements":[{"expression":{"id":2092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2090,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2049,"src":"2924:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2091,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2044,"src":"2934:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2924:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2093,"nodeType":"ExpressionStatement","src":"2924:21:13"}]},"id":2095,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"2753:18:13","nodeType":"FunctionDefinition","parameters":{"id":2088,"nodeType":"ParameterList","parameters":[],"src":"2771:2:13"},"returnParameters":{"id":2089,"nodeType":"ParameterList","parameters":[],"src":"2782:0:13"},"scope":2107,"src":"2744:208:13","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2105,"nodeType":"Block","src":"3195:42:13","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2101,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2049,"src":"3212:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2102,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2047,"src":"3223:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3212:18:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2100,"id":2104,"nodeType":"Return","src":"3205:25:13"}]},"documentation":{"id":2096,"nodeType":"StructuredDocumentation","src":"2958:168:13","text":" @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."},"id":2106,"implemented":true,"kind":"function","modifiers":[],"name":"_reentrancyGuardEntered","nameLocation":"3140:23:13","nodeType":"FunctionDefinition","parameters":{"id":2097,"nodeType":"ParameterList","parameters":[],"src":"3163:2:13"},"returnParameters":{"id":2100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2099,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2106,"src":"3189:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2098,"name":"bool","nodeType":"ElementaryTypeName","src":"3189:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3188:6:13"},"scope":2107,"src":"3131:106:13","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":2108,"src":"886:2353:13","usedErrors":[2052],"usedEvents":[]}],"src":"109:3131:13"},"id":13},"@openzeppelin/contracts/utils/StorageSlot.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","exportedSymbols":{"StorageSlot":[2217]},"id":2218,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2109,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"193:24:14"},{"abstract":false,"baseContracts":[],"canonicalName":"StorageSlot","contractDependencies":[],"contractKind":"library","documentation":{"id":2110,"nodeType":"StructuredDocumentation","src":"219:1025:14","text":" @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```"},"fullyImplemented":true,"id":2217,"linearizedBaseContracts":[2217],"name":"StorageSlot","nameLocation":"1253:11:14","nodeType":"ContractDefinition","nodes":[{"canonicalName":"StorageSlot.AddressSlot","id":2113,"members":[{"constant":false,"id":2112,"mutability":"mutable","name":"value","nameLocation":"1308:5:14","nodeType":"VariableDeclaration","scope":2113,"src":"1300:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2111,"name":"address","nodeType":"ElementaryTypeName","src":"1300:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"AddressSlot","nameLocation":"1278:11:14","nodeType":"StructDefinition","scope":2217,"src":"1271:49:14","visibility":"public"},{"canonicalName":"StorageSlot.BooleanSlot","id":2116,"members":[{"constant":false,"id":2115,"mutability":"mutable","name":"value","nameLocation":"1360:5:14","nodeType":"VariableDeclaration","scope":2116,"src":"1355:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2114,"name":"bool","nodeType":"ElementaryTypeName","src":"1355:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"BooleanSlot","nameLocation":"1333:11:14","nodeType":"StructDefinition","scope":2217,"src":"1326:46:14","visibility":"public"},{"canonicalName":"StorageSlot.Bytes32Slot","id":2119,"members":[{"constant":false,"id":2118,"mutability":"mutable","name":"value","nameLocation":"1415:5:14","nodeType":"VariableDeclaration","scope":2119,"src":"1407:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2117,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1407:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Bytes32Slot","nameLocation":"1385:11:14","nodeType":"StructDefinition","scope":2217,"src":"1378:49:14","visibility":"public"},{"canonicalName":"StorageSlot.Uint256Slot","id":2122,"members":[{"constant":false,"id":2121,"mutability":"mutable","name":"value","nameLocation":"1470:5:14","nodeType":"VariableDeclaration","scope":2122,"src":"1462:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2120,"name":"uint256","nodeType":"ElementaryTypeName","src":"1462:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Uint256Slot","nameLocation":"1440:11:14","nodeType":"StructDefinition","scope":2217,"src":"1433:49:14","visibility":"public"},{"canonicalName":"StorageSlot.StringSlot","id":2125,"members":[{"constant":false,"id":2124,"mutability":"mutable","name":"value","nameLocation":"1523:5:14","nodeType":"VariableDeclaration","scope":2125,"src":"1516:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2123,"name":"string","nodeType":"ElementaryTypeName","src":"1516:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"StringSlot","nameLocation":"1495:10:14","nodeType":"StructDefinition","scope":2217,"src":"1488:47:14","visibility":"public"},{"canonicalName":"StorageSlot.BytesSlot","id":2128,"members":[{"constant":false,"id":2127,"mutability":"mutable","name":"value","nameLocation":"1574:5:14","nodeType":"VariableDeclaration","scope":2128,"src":"1568:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":2126,"name":"bytes","nodeType":"ElementaryTypeName","src":"1568:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"BytesSlot","nameLocation":"1548:9:14","nodeType":"StructDefinition","scope":2217,"src":"1541:45:14","visibility":"public"},{"body":{"id":2138,"nodeType":"Block","src":"1768:106:14","statements":[{"AST":{"nativeSrc":"1830:38:14","nodeType":"YulBlock","src":"1830:38:14","statements":[{"nativeSrc":"1844:14:14","nodeType":"YulAssignment","src":"1844:14:14","value":{"name":"slot","nativeSrc":"1854:4:14","nodeType":"YulIdentifier","src":"1854:4:14"},"variableNames":[{"name":"r.slot","nativeSrc":"1844:6:14","nodeType":"YulIdentifier","src":"1844:6:14"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"cancun","externalReferences":[{"declaration":2135,"isOffset":false,"isSlot":true,"src":"1844:6:14","suffix":"slot","valueSize":1},{"declaration":2131,"isOffset":false,"isSlot":false,"src":"1854:4:14","valueSize":1}],"id":2137,"nodeType":"InlineAssembly","src":"1821:47:14"}]},"documentation":{"id":2129,"nodeType":"StructuredDocumentation","src":"1592:87:14","text":" @dev Returns an `AddressSlot` with member `value` located at `slot`."},"id":2139,"implemented":true,"kind":"function","modifiers":[],"name":"getAddressSlot","nameLocation":"1693:14:14","nodeType":"FunctionDefinition","parameters":{"id":2132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2131,"mutability":"mutable","name":"slot","nameLocation":"1716:4:14","nodeType":"VariableDeclaration","scope":2139,"src":"1708:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2130,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1708:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1707:14:14"},"returnParameters":{"id":2136,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2135,"mutability":"mutable","name":"r","nameLocation":"1765:1:14","nodeType":"VariableDeclaration","scope":2139,"src":"1745:21:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2113_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":2134,"nodeType":"UserDefinedTypeName","pathNode":{"id":2133,"name":"AddressSlot","nameLocations":["1745:11:14"],"nodeType":"IdentifierPath","referencedDeclaration":2113,"src":"1745:11:14"},"referencedDeclaration":2113,"src":"1745:11:14","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2113_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"1744:23:14"},"scope":2217,"src":"1684:190:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2149,"nodeType":"Block","src":"2056:106:14","statements":[{"AST":{"nativeSrc":"2118:38:14","nodeType":"YulBlock","src":"2118:38:14","statements":[{"nativeSrc":"2132:14:14","nodeType":"YulAssignment","src":"2132:14:14","value":{"name":"slot","nativeSrc":"2142:4:14","nodeType":"YulIdentifier","src":"2142:4:14"},"variableNames":[{"name":"r.slot","nativeSrc":"2132:6:14","nodeType":"YulIdentifier","src":"2132:6:14"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"cancun","externalReferences":[{"declaration":2146,"isOffset":false,"isSlot":true,"src":"2132:6:14","suffix":"slot","valueSize":1},{"declaration":2142,"isOffset":false,"isSlot":false,"src":"2142:4:14","valueSize":1}],"id":2148,"nodeType":"InlineAssembly","src":"2109:47:14"}]},"documentation":{"id":2140,"nodeType":"StructuredDocumentation","src":"1880:87:14","text":" @dev Returns an `BooleanSlot` with member `value` located at `slot`."},"id":2150,"implemented":true,"kind":"function","modifiers":[],"name":"getBooleanSlot","nameLocation":"1981:14:14","nodeType":"FunctionDefinition","parameters":{"id":2143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2142,"mutability":"mutable","name":"slot","nameLocation":"2004:4:14","nodeType":"VariableDeclaration","scope":2150,"src":"1996:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2141,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1996:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1995:14:14"},"returnParameters":{"id":2147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2146,"mutability":"mutable","name":"r","nameLocation":"2053:1:14","nodeType":"VariableDeclaration","scope":2150,"src":"2033:21:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$2116_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"},"typeName":{"id":2145,"nodeType":"UserDefinedTypeName","pathNode":{"id":2144,"name":"BooleanSlot","nameLocations":["2033:11:14"],"nodeType":"IdentifierPath","referencedDeclaration":2116,"src":"2033:11:14"},"referencedDeclaration":2116,"src":"2033:11:14","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$2116_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"}},"visibility":"internal"}],"src":"2032:23:14"},"scope":2217,"src":"1972:190:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2160,"nodeType":"Block","src":"2344:106:14","statements":[{"AST":{"nativeSrc":"2406:38:14","nodeType":"YulBlock","src":"2406:38:14","statements":[{"nativeSrc":"2420:14:14","nodeType":"YulAssignment","src":"2420:14:14","value":{"name":"slot","nativeSrc":"2430:4:14","nodeType":"YulIdentifier","src":"2430:4:14"},"variableNames":[{"name":"r.slot","nativeSrc":"2420:6:14","nodeType":"YulIdentifier","src":"2420:6:14"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"cancun","externalReferences":[{"declaration":2157,"isOffset":false,"isSlot":true,"src":"2420:6:14","suffix":"slot","valueSize":1},{"declaration":2153,"isOffset":false,"isSlot":false,"src":"2430:4:14","valueSize":1}],"id":2159,"nodeType":"InlineAssembly","src":"2397:47:14"}]},"documentation":{"id":2151,"nodeType":"StructuredDocumentation","src":"2168:87:14","text":" @dev Returns an `Bytes32Slot` with member `value` located at `slot`."},"id":2161,"implemented":true,"kind":"function","modifiers":[],"name":"getBytes32Slot","nameLocation":"2269:14:14","nodeType":"FunctionDefinition","parameters":{"id":2154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2153,"mutability":"mutable","name":"slot","nameLocation":"2292:4:14","nodeType":"VariableDeclaration","scope":2161,"src":"2284:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2152,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2284:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2283:14:14"},"returnParameters":{"id":2158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2157,"mutability":"mutable","name":"r","nameLocation":"2341:1:14","nodeType":"VariableDeclaration","scope":2161,"src":"2321:21:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$2119_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":2156,"nodeType":"UserDefinedTypeName","pathNode":{"id":2155,"name":"Bytes32Slot","nameLocations":["2321:11:14"],"nodeType":"IdentifierPath","referencedDeclaration":2119,"src":"2321:11:14"},"referencedDeclaration":2119,"src":"2321:11:14","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$2119_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"2320:23:14"},"scope":2217,"src":"2260:190:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2171,"nodeType":"Block","src":"2632:106:14","statements":[{"AST":{"nativeSrc":"2694:38:14","nodeType":"YulBlock","src":"2694:38:14","statements":[{"nativeSrc":"2708:14:14","nodeType":"YulAssignment","src":"2708:14:14","value":{"name":"slot","nativeSrc":"2718:4:14","nodeType":"YulIdentifier","src":"2718:4:14"},"variableNames":[{"name":"r.slot","nativeSrc":"2708:6:14","nodeType":"YulIdentifier","src":"2708:6:14"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"cancun","externalReferences":[{"declaration":2168,"isOffset":false,"isSlot":true,"src":"2708:6:14","suffix":"slot","valueSize":1},{"declaration":2164,"isOffset":false,"isSlot":false,"src":"2718:4:14","valueSize":1}],"id":2170,"nodeType":"InlineAssembly","src":"2685:47:14"}]},"documentation":{"id":2162,"nodeType":"StructuredDocumentation","src":"2456:87:14","text":" @dev Returns an `Uint256Slot` with member `value` located at `slot`."},"id":2172,"implemented":true,"kind":"function","modifiers":[],"name":"getUint256Slot","nameLocation":"2557:14:14","nodeType":"FunctionDefinition","parameters":{"id":2165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2164,"mutability":"mutable","name":"slot","nameLocation":"2580:4:14","nodeType":"VariableDeclaration","scope":2172,"src":"2572:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2163,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2572:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2571:14:14"},"returnParameters":{"id":2169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2168,"mutability":"mutable","name":"r","nameLocation":"2629:1:14","nodeType":"VariableDeclaration","scope":2172,"src":"2609:21:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$2122_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":2167,"nodeType":"UserDefinedTypeName","pathNode":{"id":2166,"name":"Uint256Slot","nameLocations":["2609:11:14"],"nodeType":"IdentifierPath","referencedDeclaration":2122,"src":"2609:11:14"},"referencedDeclaration":2122,"src":"2609:11:14","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$2122_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"2608:23:14"},"scope":2217,"src":"2548:190:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2182,"nodeType":"Block","src":"2917:106:14","statements":[{"AST":{"nativeSrc":"2979:38:14","nodeType":"YulBlock","src":"2979:38:14","statements":[{"nativeSrc":"2993:14:14","nodeType":"YulAssignment","src":"2993:14:14","value":{"name":"slot","nativeSrc":"3003:4:14","nodeType":"YulIdentifier","src":"3003:4:14"},"variableNames":[{"name":"r.slot","nativeSrc":"2993:6:14","nodeType":"YulIdentifier","src":"2993:6:14"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"cancun","externalReferences":[{"declaration":2179,"isOffset":false,"isSlot":true,"src":"2993:6:14","suffix":"slot","valueSize":1},{"declaration":2175,"isOffset":false,"isSlot":false,"src":"3003:4:14","valueSize":1}],"id":2181,"nodeType":"InlineAssembly","src":"2970:47:14"}]},"documentation":{"id":2173,"nodeType":"StructuredDocumentation","src":"2744:86:14","text":" @dev Returns an `StringSlot` with member `value` located at `slot`."},"id":2183,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"2844:13:14","nodeType":"FunctionDefinition","parameters":{"id":2176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2175,"mutability":"mutable","name":"slot","nameLocation":"2866:4:14","nodeType":"VariableDeclaration","scope":2183,"src":"2858:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2174,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2858:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2857:14:14"},"returnParameters":{"id":2180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2179,"mutability":"mutable","name":"r","nameLocation":"2914:1:14","nodeType":"VariableDeclaration","scope":2183,"src":"2895:20:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2125_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":2178,"nodeType":"UserDefinedTypeName","pathNode":{"id":2177,"name":"StringSlot","nameLocations":["2895:10:14"],"nodeType":"IdentifierPath","referencedDeclaration":2125,"src":"2895:10:14"},"referencedDeclaration":2125,"src":"2895:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2125_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"2894:22:14"},"scope":2217,"src":"2835:188:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2193,"nodeType":"Block","src":"3225:112:14","statements":[{"AST":{"nativeSrc":"3287:44:14","nodeType":"YulBlock","src":"3287:44:14","statements":[{"nativeSrc":"3301:20:14","nodeType":"YulAssignment","src":"3301:20:14","value":{"name":"store.slot","nativeSrc":"3311:10:14","nodeType":"YulIdentifier","src":"3311:10:14"},"variableNames":[{"name":"r.slot","nativeSrc":"3301:6:14","nodeType":"YulIdentifier","src":"3301:6:14"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"cancun","externalReferences":[{"declaration":2190,"isOffset":false,"isSlot":true,"src":"3301:6:14","suffix":"slot","valueSize":1},{"declaration":2186,"isOffset":false,"isSlot":true,"src":"3311:10:14","suffix":"slot","valueSize":1}],"id":2192,"nodeType":"InlineAssembly","src":"3278:53:14"}]},"documentation":{"id":2184,"nodeType":"StructuredDocumentation","src":"3029:101:14","text":" @dev Returns an `StringSlot` representation of the string storage pointer `store`."},"id":2194,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3144:13:14","nodeType":"FunctionDefinition","parameters":{"id":2187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2186,"mutability":"mutable","name":"store","nameLocation":"3173:5:14","nodeType":"VariableDeclaration","scope":2194,"src":"3158:20:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2185,"name":"string","nodeType":"ElementaryTypeName","src":"3158:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3157:22:14"},"returnParameters":{"id":2191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2190,"mutability":"mutable","name":"r","nameLocation":"3222:1:14","nodeType":"VariableDeclaration","scope":2194,"src":"3203:20:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2125_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":2189,"nodeType":"UserDefinedTypeName","pathNode":{"id":2188,"name":"StringSlot","nameLocations":["3203:10:14"],"nodeType":"IdentifierPath","referencedDeclaration":2125,"src":"3203:10:14"},"referencedDeclaration":2125,"src":"3203:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2125_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3202:22:14"},"scope":2217,"src":"3135:202:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2204,"nodeType":"Block","src":"3513:106:14","statements":[{"AST":{"nativeSrc":"3575:38:14","nodeType":"YulBlock","src":"3575:38:14","statements":[{"nativeSrc":"3589:14:14","nodeType":"YulAssignment","src":"3589:14:14","value":{"name":"slot","nativeSrc":"3599:4:14","nodeType":"YulIdentifier","src":"3599:4:14"},"variableNames":[{"name":"r.slot","nativeSrc":"3589:6:14","nodeType":"YulIdentifier","src":"3589:6:14"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"cancun","externalReferences":[{"declaration":2201,"isOffset":false,"isSlot":true,"src":"3589:6:14","suffix":"slot","valueSize":1},{"declaration":2197,"isOffset":false,"isSlot":false,"src":"3599:4:14","valueSize":1}],"id":2203,"nodeType":"InlineAssembly","src":"3566:47:14"}]},"documentation":{"id":2195,"nodeType":"StructuredDocumentation","src":"3343:85:14","text":" @dev Returns an `BytesSlot` with member `value` located at `slot`."},"id":2205,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3442:12:14","nodeType":"FunctionDefinition","parameters":{"id":2198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2197,"mutability":"mutable","name":"slot","nameLocation":"3463:4:14","nodeType":"VariableDeclaration","scope":2205,"src":"3455:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2196,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3455:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3454:14:14"},"returnParameters":{"id":2202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2201,"mutability":"mutable","name":"r","nameLocation":"3510:1:14","nodeType":"VariableDeclaration","scope":2205,"src":"3492:19:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2128_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":2200,"nodeType":"UserDefinedTypeName","pathNode":{"id":2199,"name":"BytesSlot","nameLocations":["3492:9:14"],"nodeType":"IdentifierPath","referencedDeclaration":2128,"src":"3492:9:14"},"referencedDeclaration":2128,"src":"3492:9:14","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2128_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3491:21:14"},"scope":2217,"src":"3433:186:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2215,"nodeType":"Block","src":"3816:112:14","statements":[{"AST":{"nativeSrc":"3878:44:14","nodeType":"YulBlock","src":"3878:44:14","statements":[{"nativeSrc":"3892:20:14","nodeType":"YulAssignment","src":"3892:20:14","value":{"name":"store.slot","nativeSrc":"3902:10:14","nodeType":"YulIdentifier","src":"3902:10:14"},"variableNames":[{"name":"r.slot","nativeSrc":"3892:6:14","nodeType":"YulIdentifier","src":"3892:6:14"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"cancun","externalReferences":[{"declaration":2212,"isOffset":false,"isSlot":true,"src":"3892:6:14","suffix":"slot","valueSize":1},{"declaration":2208,"isOffset":false,"isSlot":true,"src":"3902:10:14","suffix":"slot","valueSize":1}],"id":2214,"nodeType":"InlineAssembly","src":"3869:53:14"}]},"documentation":{"id":2206,"nodeType":"StructuredDocumentation","src":"3625:99:14","text":" @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."},"id":2216,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3738:12:14","nodeType":"FunctionDefinition","parameters":{"id":2209,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2208,"mutability":"mutable","name":"store","nameLocation":"3765:5:14","nodeType":"VariableDeclaration","scope":2216,"src":"3751:19:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":2207,"name":"bytes","nodeType":"ElementaryTypeName","src":"3751:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3750:21:14"},"returnParameters":{"id":2213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2212,"mutability":"mutable","name":"r","nameLocation":"3813:1:14","nodeType":"VariableDeclaration","scope":2216,"src":"3795:19:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2128_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":2211,"nodeType":"UserDefinedTypeName","pathNode":{"id":2210,"name":"BytesSlot","nameLocations":["3795:9:14"],"nodeType":"IdentifierPath","referencedDeclaration":2128,"src":"3795:9:14"},"referencedDeclaration":2128,"src":"3795:9:14","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2128_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3794:21:14"},"scope":2217,"src":"3729:199:14","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2218,"src":"1245:2685:14","usedErrors":[],"usedEvents":[]}],"src":"193:3738:14"},"id":14},"contracts/BaluniV1Pool.sol":{"ast":{"absolutePath":"contracts/BaluniV1Pool.sol","exportedSymbols":{"BBronze":[4940],"BColor":[4925],"BConst":[5028],"BMath":[5600],"BNum":[6073],"BaluniV1Pool":[4425],"Context":[2038],"ERC20":[1651],"I1inchSpotAgg":[6100],"IBaluniV1Agent":[6120],"IBaluniV1PoolPeriphery":[6140],"IBaluniV1Rebalancer":[6261],"IBaluniV1Router":[6519],"IERC20":[1729],"IERC20Errors":[728],"IERC20Metadata":[1755],"ReentrancyGuard":[2107]},"id":4426,"license":"GNU AGPLv3","nodeType":"SourceUnit","nodes":[{"id":2219,"literals":["solidity","0.8",".25"],"nodeType":"PragmaDirective","src":"40:23:15"},{"absolutePath":"contracts/interfaces/IBaluniV1Rebalancer.sol","file":"./interfaces/IBaluniV1Rebalancer.sol","id":2220,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4426,"sourceUnit":6262,"src":"1466:46:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IBaluniV1Router.sol","file":"./interfaces/IBaluniV1Router.sol","id":2221,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4426,"sourceUnit":6520,"src":"1514:42:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":2222,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4426,"sourceUnit":1652,"src":"1558:55:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","file":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","id":2223,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4426,"sourceUnit":2108,"src":"1615:59:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IBaluniV1PoolPeriphery.sol","file":"./interfaces/IBaluniV1PoolPeriphery.sol","id":2224,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4426,"sourceUnit":6141,"src":"1678:49:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/balancer/BMath.sol","file":"./balancer/BMath.sol","id":2225,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4426,"sourceUnit":5601,"src":"1729:30:15","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2226,"name":"ERC20","nameLocations":["1788:5:15"],"nodeType":"IdentifierPath","referencedDeclaration":1651,"src":"1788:5:15"},"id":2227,"nodeType":"InheritanceSpecifier","src":"1788:5:15"},{"baseName":{"id":2228,"name":"ReentrancyGuard","nameLocations":["1795:15:15"],"nodeType":"IdentifierPath","referencedDeclaration":2107,"src":"1795:15:15"},"id":2229,"nodeType":"InheritanceSpecifier","src":"1795:15:15"},{"baseName":{"id":2230,"name":"BMath","nameLocations":["1812:5:15"],"nodeType":"IdentifierPath","referencedDeclaration":5600,"src":"1812:5:15"},"id":2231,"nodeType":"InheritanceSpecifier","src":"1812:5:15"}],"canonicalName":"BaluniV1Pool","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":4425,"linearizedBaseContracts":[4425,5600,6073,5028,4940,4925,2107,1651,728,1755,1729,2038],"name":"BaluniV1Pool","nameLocation":"1772:12:15","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"d14ef46d","id":2235,"mutability":"mutable","name":"assetInfos","nameLocation":"1844:10:15","nodeType":"VariableDeclaration","scope":4425,"src":"1825:29:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2255_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo[]"},"typeName":{"baseType":{"id":2233,"nodeType":"UserDefinedTypeName","pathNode":{"id":2232,"name":"AssetInfo","nameLocations":["1825:9:15"],"nodeType":"IdentifierPath","referencedDeclaration":2255,"src":"1825:9:15"},"referencedDeclaration":2255,"src":"1825:9:15","typeDescriptions":{"typeIdentifier":"t_struct$_AssetInfo_$2255_storage_ptr","typeString":"struct BaluniV1Pool.AssetInfo"}},"id":2234,"nodeType":"ArrayTypeName","src":"1825:11:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2255_storage_$dyn_storage_ptr","typeString":"struct BaluniV1Pool.AssetInfo[]"}},"visibility":"public"},{"constant":false,"functionSelector":"7fec8d38","id":2237,"mutability":"mutable","name":"trigger","nameLocation":"1876:7:15","nodeType":"VariableDeclaration","scope":4425,"src":"1861:22:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2236,"name":"uint256","nodeType":"ElementaryTypeName","src":"1861:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"c2ee3a08","id":2239,"mutability":"mutable","name":"ONE","nameLocation":"1905:3:15","nodeType":"VariableDeclaration","scope":4425,"src":"1890:18:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2238,"name":"uint256","nodeType":"ElementaryTypeName","src":"1890:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"77aace1a","id":2241,"mutability":"mutable","name":"periphery","nameLocation":"1930:9:15","nodeType":"VariableDeclaration","scope":4425,"src":"1915:24:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2240,"name":"address","nodeType":"ElementaryTypeName","src":"1915:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"c45a0155","id":2243,"mutability":"mutable","name":"factory","nameLocation":"1961:7:15","nodeType":"VariableDeclaration","scope":4425,"src":"1946:22:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2242,"name":"address","nodeType":"ElementaryTypeName","src":"1946:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":true,"functionSelector":"67a6c440","id":2246,"mutability":"constant","name":"SWAP_FEE_BPS","nameLocation":"1999:12:15","nodeType":"VariableDeclaration","scope":4425,"src":"1975:41:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2244,"name":"uint256","nodeType":"ElementaryTypeName","src":"1975:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3330","id":2245,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2014:2:15","typeDescriptions":{"typeIdentifier":"t_rational_30_by_1","typeString":"int_const 30"},"value":"30"},"visibility":"public"},{"constant":false,"functionSelector":"cdf456e1","id":2248,"mutability":"mutable","name":"baseAsset","nameLocation":"2046:9:15","nodeType":"VariableDeclaration","scope":4425,"src":"2031:24:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2247,"name":"address","nodeType":"ElementaryTypeName","src":"2031:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"01d22ccd","id":2250,"mutability":"mutable","name":"rebalancer","nameLocation":"2077:10:15","nodeType":"VariableDeclaration","scope":4425,"src":"2062:25:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2249,"name":"address","nodeType":"ElementaryTypeName","src":"2062:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"canonicalName":"BaluniV1Pool.AssetInfo","id":2255,"members":[{"constant":false,"id":2252,"mutability":"mutable","name":"asset","nameLocation":"2132:5:15","nodeType":"VariableDeclaration","scope":2255,"src":"2124:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2251,"name":"address","nodeType":"ElementaryTypeName","src":"2124:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2254,"mutability":"mutable","name":"weight","nameLocation":"2156:6:15","nodeType":"VariableDeclaration","scope":2255,"src":"2148:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2253,"name":"uint256","nodeType":"ElementaryTypeName","src":"2148:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"AssetInfo","nameLocation":"2103:9:15","nodeType":"StructDefinition","scope":4425,"src":"2096:74:15","visibility":"public"},{"anonymous":false,"eventSelector":"279b343370f587af7fb675ae7c8578e9c8abcc373236ad02c501a4771fe7a7b8","id":2262,"name":"RebalancePerformed","nameLocation":"2184:18:15","nodeType":"EventDefinition","parameters":{"id":2261,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2257,"indexed":true,"mutability":"mutable","name":"by","nameLocation":"2219:2:15","nodeType":"VariableDeclaration","scope":2262,"src":"2203:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2256,"name":"address","nodeType":"ElementaryTypeName","src":"2203:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2260,"indexed":false,"mutability":"mutable","name":"assets","nameLocation":"2233:6:15","nodeType":"VariableDeclaration","scope":2262,"src":"2223:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2258,"name":"address","nodeType":"ElementaryTypeName","src":"2223:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2259,"nodeType":"ArrayTypeName","src":"2223:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"2202:38:15"},"src":"2178:63:15"},{"anonymous":false,"eventSelector":"a95ad530009c6f929555e70a66aadbeae7231e45756c5b028ca77fbaa376e73e","id":2269,"name":"WeightsRebalanced","nameLocation":"2253:17:15","nodeType":"EventDefinition","parameters":{"id":2268,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2264,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"2287:4:15","nodeType":"VariableDeclaration","scope":2269,"src":"2271:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2263,"name":"address","nodeType":"ElementaryTypeName","src":"2271:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2267,"indexed":false,"mutability":"mutable","name":"amountsAdded","nameLocation":"2303:12:15","nodeType":"VariableDeclaration","scope":2269,"src":"2293:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2265,"name":"uint256","nodeType":"ElementaryTypeName","src":"2293:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2266,"nodeType":"ArrayTypeName","src":"2293:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2270:46:15"},"src":"2247:70:15"},{"anonymous":false,"eventSelector":"cc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5","id":2275,"name":"Burn","nameLocation":"2329:4:15","nodeType":"EventDefinition","parameters":{"id":2274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2271,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"2350:4:15","nodeType":"VariableDeclaration","scope":2275,"src":"2334:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2270,"name":"address","nodeType":"ElementaryTypeName","src":"2334:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2273,"indexed":false,"mutability":"mutable","name":"sharesBurned","nameLocation":"2364:12:15","nodeType":"VariableDeclaration","scope":2275,"src":"2356:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2272,"name":"uint256","nodeType":"ElementaryTypeName","src":"2356:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2333:44:15"},"src":"2323:55:15"},{"anonymous":false,"eventSelector":"0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d4121396885","id":2281,"name":"Mint","nameLocation":"2390:4:15","nodeType":"EventDefinition","parameters":{"id":2280,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2277,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"2411:2:15","nodeType":"VariableDeclaration","scope":2281,"src":"2395:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2276,"name":"address","nodeType":"ElementaryTypeName","src":"2395:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2279,"indexed":false,"mutability":"mutable","name":"sharesMinted","nameLocation":"2423:12:15","nodeType":"VariableDeclaration","scope":2281,"src":"2415:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2278,"name":"uint256","nodeType":"ElementaryTypeName","src":"2415:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2394:42:15"},"src":"2384:53:15"},{"anonymous":false,"eventSelector":"cd3829a3813dc3cdd188fd3d01dcf3268c16be2fdd2dd21d0665418816e46062","id":2293,"name":"Swap","nameLocation":"2449:4:15","nodeType":"EventDefinition","parameters":{"id":2292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2283,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"2480:4:15","nodeType":"VariableDeclaration","scope":2293,"src":"2464:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2282,"name":"address","nodeType":"ElementaryTypeName","src":"2464:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2285,"indexed":true,"mutability":"mutable","name":"fromToken","nameLocation":"2511:9:15","nodeType":"VariableDeclaration","scope":2293,"src":"2495:25:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2284,"name":"address","nodeType":"ElementaryTypeName","src":"2495:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2287,"indexed":true,"mutability":"mutable","name":"toToken","nameLocation":"2547:7:15","nodeType":"VariableDeclaration","scope":2293,"src":"2531:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2286,"name":"address","nodeType":"ElementaryTypeName","src":"2531:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2289,"indexed":false,"mutability":"mutable","name":"amountIn","nameLocation":"2573:8:15","nodeType":"VariableDeclaration","scope":2293,"src":"2565:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2288,"name":"uint256","nodeType":"ElementaryTypeName","src":"2565:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2291,"indexed":false,"mutability":"mutable","name":"amountOut","nameLocation":"2600:9:15","nodeType":"VariableDeclaration","scope":2293,"src":"2592:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2290,"name":"uint256","nodeType":"ElementaryTypeName","src":"2592:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2453:163:15"},"src":"2443:174:15"},{"body":{"id":2377,"nodeType":"Block","src":"3288:740:15","statements":[{"expression":{"id":2315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2313,"name":"periphery","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2241,"src":"3347:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2314,"name":"_periphery","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2306,"src":"3359:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3347:22:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2316,"nodeType":"ExpressionStatement","src":"3347:22:15"},{"expression":{"id":2320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2317,"name":"factory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2243,"src":"3380:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2318,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3390:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3394:6:15","memberName":"sender","nodeType":"MemberAccess","src":"3390:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3380:20:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2321,"nodeType":"ExpressionStatement","src":"3380:20:15"},{"expression":{"id":2324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2322,"name":"rebalancer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2250,"src":"3411:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2323,"name":"_rebalancer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2296,"src":"3424:11:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3411:24:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2325,"nodeType":"ExpressionStatement","src":"3411:24:15"},{"expression":{"id":2328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2326,"name":"ONE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2239,"src":"3446:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31653138","id":2327,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3452:4:15","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"src":"3446:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2329,"nodeType":"ExpressionStatement","src":"3446:10:15"},{"expression":{"arguments":[{"id":2331,"name":"_assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2299,"src":"3528:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},{"id":2332,"name":"_weights","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2302,"src":"3537:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":2330,"name":"initializeAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2631,"src":"3511:16:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (address[] memory,uint256[] memory)"}},"id":2333,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3511:35:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2334,"nodeType":"ExpressionStatement","src":"3511:35:15"},{"expression":{"id":2337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2335,"name":"trigger","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2237,"src":"3589:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2336,"name":"_trigger","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2304,"src":"3599:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3589:18:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2338,"nodeType":"ExpressionStatement","src":"3589:18:15"},{"expression":{"id":2345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2339,"name":"baseAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2248,"src":"3647:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":2341,"name":"_rebalancer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2296,"src":"3679:11:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2340,"name":"IBaluniV1Rebalancer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6261,"src":"3659:19:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBaluniV1Rebalancer_$6261_$","typeString":"type(contract IBaluniV1Rebalancer)"}},"id":2342,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3659:32:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Rebalancer_$6261","typeString":"contract IBaluniV1Rebalancer"}},"id":2343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3692:4:15","memberName":"USDC","nodeType":"MemberAccess","referencedDeclaration":6183,"src":"3659:37:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":2344,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3659:39:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3647:51:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2346,"nodeType":"ExpressionStatement","src":"3647:51:15"},{"assignments":[2348],"declarations":[{"constant":false,"id":2348,"mutability":"mutable","name":"totalWeight","nameLocation":"3837:11:15","nodeType":"VariableDeclaration","scope":2377,"src":"3829:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2347,"name":"uint256","nodeType":"ElementaryTypeName","src":"3829:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2350,"initialValue":{"hexValue":"30","id":2349,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3851:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3829:23:15"},{"body":{"id":2368,"nodeType":"Block","src":"3909:53:15","statements":[{"expression":{"id":2366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2362,"name":"totalWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2348,"src":"3924:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"baseExpression":{"id":2363,"name":"_weights","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2302,"src":"3939:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2365,"indexExpression":{"id":2364,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2352,"src":"3948:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3939:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3924:26:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2367,"nodeType":"ExpressionStatement","src":"3924:26:15"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2355,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2352,"src":"3883:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2356,"name":"_weights","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2302,"src":"3887:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3896:6:15","memberName":"length","nodeType":"MemberAccess","src":"3887:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3883:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2369,"initializationExpression":{"assignments":[2352],"declarations":[{"constant":false,"id":2352,"mutability":"mutable","name":"i","nameLocation":"3876:1:15","nodeType":"VariableDeclaration","scope":2369,"src":"3868:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2351,"name":"uint256","nodeType":"ElementaryTypeName","src":"3868:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2354,"initialValue":{"hexValue":"30","id":2353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3880:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3868:13:15"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":2360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3904:3:15","subExpression":{"id":2359,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2352,"src":"3904:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2361,"nodeType":"ExpressionStatement","src":"3904:3:15"},"nodeType":"ForStatement","src":"3863:99:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2371,"name":"totalWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2348,"src":"3980:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3130303030","id":2372,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3995:5:15","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"src":"3980:20:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642077656967687473","id":2374,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4002:17:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_5cbb8d647918028d0523fccac550113bbbb71d463bbb8b573c02c32bc5cf2b89","typeString":"literal_string \"Invalid weights\""},"value":"Invalid weights"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5cbb8d647918028d0523fccac550113bbbb71d463bbb8b573c02c32bc5cf2b89","typeString":"literal_string \"Invalid weights\""}],"id":2370,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3972:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2375,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3972:48:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2376,"nodeType":"ExpressionStatement","src":"3972:48:15"}]},"documentation":{"id":2294,"nodeType":"StructuredDocumentation","src":"2625:449:15","text":" @dev Initializes a new instance of the BaluniV1Pool contract.\n @param _rebalancer The address of the rebalancer contract.\n @param _assets An array of addresses representing the assets in the pool.\n @param _weights An array of weights corresponding to the assets in the pool.\n @param _trigger The trigger value for rebalancing the pool.\n @param _periphery The address of the periphery contract."},"id":2378,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"42616c756e69204c50","id":2309,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3262:11:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_ffab3cad7a41854f5c383caa9a930fe1ab39b32cbc67d790708a7a9f02409818","typeString":"literal_string \"Baluni LP\""},"value":"Baluni LP"},{"hexValue":"42414c554e492d4c50","id":2310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3275:11:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_e9cdad270784d4cf630085b188c6ca83632e4ebde5d7094eec6989a900521298","typeString":"literal_string \"BALUNI-LP\""},"value":"BALUNI-LP"}],"id":2311,"kind":"baseConstructorSpecifier","modifierName":{"id":2308,"name":"ERC20","nameLocations":["3256:5:15"],"nodeType":"IdentifierPath","referencedDeclaration":1651,"src":"3256:5:15"},"nodeType":"ModifierInvocation","src":"3256:31:15"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2307,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2296,"mutability":"mutable","name":"_rebalancer","nameLocation":"3110:11:15","nodeType":"VariableDeclaration","scope":2378,"src":"3102:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2295,"name":"address","nodeType":"ElementaryTypeName","src":"3102:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2299,"mutability":"mutable","name":"_assets","nameLocation":"3149:7:15","nodeType":"VariableDeclaration","scope":2378,"src":"3132:24:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2297,"name":"address","nodeType":"ElementaryTypeName","src":"3132:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2298,"nodeType":"ArrayTypeName","src":"3132:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":2302,"mutability":"mutable","name":"_weights","nameLocation":"3184:8:15","nodeType":"VariableDeclaration","scope":2378,"src":"3167:25:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2300,"name":"uint256","nodeType":"ElementaryTypeName","src":"3167:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2301,"nodeType":"ArrayTypeName","src":"3167:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2304,"mutability":"mutable","name":"_trigger","nameLocation":"3211:8:15","nodeType":"VariableDeclaration","scope":2378,"src":"3203:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2303,"name":"uint256","nodeType":"ElementaryTypeName","src":"3203:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2306,"mutability":"mutable","name":"_periphery","nameLocation":"3238:10:15","nodeType":"VariableDeclaration","scope":2378,"src":"3230:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2305,"name":"address","nodeType":"ElementaryTypeName","src":"3230:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3091:164:15"},"returnParameters":{"id":2312,"nodeType":"ParameterList","parameters":[],"src":"3288:0:15"},"scope":4425,"src":"3080:948:15","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2389,"nodeType":"Block","src":"4061:81:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2381,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4080:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4084:6:15","memberName":"sender","nodeType":"MemberAccess","src":"4080:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2383,"name":"periphery","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2241,"src":"4094:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4080:23:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c7920506572697068657279","id":2385,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4105:16:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_e84ca658204d8225a6124393bf429fae79ddb71fa88578d833d3a2b9b5da52d2","typeString":"literal_string \"Only Periphery\""},"value":"Only Periphery"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e84ca658204d8225a6124393bf429fae79ddb71fa88578d833d3a2b9b5da52d2","typeString":"literal_string \"Only Periphery\""}],"id":2380,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4072:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2386,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4072:50:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2387,"nodeType":"ExpressionStatement","src":"4072:50:15"},{"id":2388,"nodeType":"PlaceholderStatement","src":"4133:1:15"}]},"id":2390,"name":"onlyPeriphery","nameLocation":"4045:13:15","nodeType":"ModifierDefinition","parameters":{"id":2379,"nodeType":"ParameterList","parameters":[],"src":"4058:2:15"},"src":"4036:106:15","virtual":false,"visibility":"internal"},{"body":{"id":2482,"nodeType":"Block","src":"4239:811:15","statements":[{"assignments":[2400],"declarations":[{"constant":false,"id":2400,"mutability":"mutable","name":"reserveFrom","nameLocation":"4258:11:15","nodeType":"VariableDeclaration","scope":2482,"src":"4250:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2399,"name":"uint256","nodeType":"ElementaryTypeName","src":"4250:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2404,"initialValue":{"arguments":[{"id":2402,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2392,"src":"4288:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2401,"name":"getAssetReserve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3732,"src":"4272:15:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":2403,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4272:26:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4250:48:15"},{"assignments":[2406],"declarations":[{"constant":false,"id":2406,"mutability":"mutable","name":"reserveTo","nameLocation":"4317:9:15","nodeType":"VariableDeclaration","scope":2482,"src":"4309:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2405,"name":"uint256","nodeType":"ElementaryTypeName","src":"4309:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2410,"initialValue":{"arguments":[{"id":2408,"name":"toToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2394,"src":"4345:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2407,"name":"getAssetReserve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3732,"src":"4329:15:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":2409,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4329:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4309:44:15"},{"assignments":[2412],"declarations":[{"constant":false,"id":2412,"mutability":"mutable","name":"fromDecimal","nameLocation":"4445:11:15","nodeType":"VariableDeclaration","scope":2482,"src":"4437:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2411,"name":"uint256","nodeType":"ElementaryTypeName","src":"4437:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2418,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":2414,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2392,"src":"4474:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2413,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1755,"src":"4459:14:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20Metadata_$1755_$","typeString":"type(contract IERC20Metadata)"}},"id":2415,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4459:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Metadata_$1755","typeString":"contract IERC20Metadata"}},"id":2416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4485:8:15","memberName":"decimals","nodeType":"MemberAccess","referencedDeclaration":1754,"src":"4459:34:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint8_$","typeString":"function () view external returns (uint8)"}},"id":2417,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4459:36:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"4437:58:15"},{"assignments":[2420],"declarations":[{"constant":false,"id":2420,"mutability":"mutable","name":"toDecimal","nameLocation":"4514:9:15","nodeType":"VariableDeclaration","scope":2482,"src":"4506:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2419,"name":"uint256","nodeType":"ElementaryTypeName","src":"4506:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2426,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":2422,"name":"toToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2394,"src":"4541:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2421,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1755,"src":"4526:14:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20Metadata_$1755_$","typeString":"type(contract IERC20Metadata)"}},"id":2423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4526:23:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Metadata_$1755","typeString":"contract IERC20Metadata"}},"id":2424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4550:8:15","memberName":"decimals","nodeType":"MemberAccess","referencedDeclaration":1754,"src":"4526:32:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint8_$","typeString":"function () view external returns (uint8)"}},"id":2425,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4526:34:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"4506:54:15"},{"assignments":[2428],"declarations":[{"constant":false,"id":2428,"mutability":"mutable","name":"tokenBalanceIn","nameLocation":"4581:14:15","nodeType":"VariableDeclaration","scope":2482,"src":"4573:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2427,"name":"uint256","nodeType":"ElementaryTypeName","src":"4573:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2436,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2429,"name":"reserveFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2400,"src":"4598:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"id":2432,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2430,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4612:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3138","id":2431,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4618:2:15","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"4612:8:15","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}},"src":"4598:22:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2434,"name":"fromDecimal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2412,"src":"4623:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4598:36:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4573:61:15"},{"assignments":[2438],"declarations":[{"constant":false,"id":2438,"mutability":"mutable","name":"tokenBalanceOut","nameLocation":"4653:15:15","nodeType":"VariableDeclaration","scope":2482,"src":"4645:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2437,"name":"uint256","nodeType":"ElementaryTypeName","src":"4645:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2446,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2439,"name":"reserveTo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2406,"src":"4671:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"id":2442,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2440,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4683:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3138","id":2441,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4689:2:15","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"4683:8:15","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}},"src":"4671:20:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2444,"name":"toDecimal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2420,"src":"4694:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4671:32:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4645:58:15"},{"assignments":[2448],"declarations":[{"constant":false,"id":2448,"mutability":"mutable","name":"tokenWeightIn","nameLocation":"4781:13:15","nodeType":"VariableDeclaration","scope":2482,"src":"4773:21:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2447,"name":"uint256","nodeType":"ElementaryTypeName","src":"4773:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2459,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2450,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2392,"src":"4815:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2449,"name":"_getTargetWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4424,"src":"4798:16:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":2451,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4798:27:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"31303030","id":2452,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4828:4:15","typeDescriptions":{"typeIdentifier":"t_rational_1000_by_1","typeString":"int_const 1000"},"value":"1000"},"src":"4798:34:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2454,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4797:36:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"id":2457,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2455,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4836:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3138","id":2456,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4842:2:15","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"4836:8:15","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}},"src":"4797:47:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4773:71:15"},{"assignments":[2461],"declarations":[{"constant":false,"id":2461,"mutability":"mutable","name":"tokenWeightOut","nameLocation":"4863:14:15","nodeType":"VariableDeclaration","scope":2482,"src":"4855:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2460,"name":"uint256","nodeType":"ElementaryTypeName","src":"4855:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2472,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2463,"name":"toToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2394,"src":"4898:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2462,"name":"_getTargetWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4424,"src":"4881:16:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":2464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4881:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"31303030","id":2465,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4909:4:15","typeDescriptions":{"typeIdentifier":"t_rational_1000_by_1","typeString":"int_const 1000"},"value":"1000"},"src":"4881:32:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2467,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4880:34:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"id":2470,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2468,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4917:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3138","id":2469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4923:2:15","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"4917:8:15","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}},"src":"4880:45:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4855:70:15"},{"expression":{"arguments":[{"id":2475,"name":"tokenBalanceIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2428,"src":"4965:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2476,"name":"tokenWeightIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2448,"src":"4981:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2477,"name":"tokenBalanceOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2438,"src":"4996:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2478,"name":"tokenWeightOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2461,"src":"5013:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2479,"name":"SWAP_FEE_BPS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2246,"src":"5029:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2473,"name":"BMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5600,"src":"4945:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_BMath_$5600_$","typeString":"type(contract BMath)"}},"id":2474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4951:13:15","memberName":"calcSpotPrice","nodeType":"MemberAccess","referencedDeclaration":5092,"src":"4945:19:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256,uint256,uint256) pure returns (uint256)"}},"id":2480,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4945:97:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2398,"id":2481,"nodeType":"Return","src":"4938:104:15"}]},"functionSelector":"0d0fa029","id":2483,"implemented":true,"kind":"function","modifiers":[],"name":"calcSpotPrice","nameLocation":"4159:13:15","nodeType":"FunctionDefinition","parameters":{"id":2395,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2392,"mutability":"mutable","name":"fromToken","nameLocation":"4181:9:15","nodeType":"VariableDeclaration","scope":2483,"src":"4173:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2391,"name":"address","nodeType":"ElementaryTypeName","src":"4173:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2394,"mutability":"mutable","name":"toToken","nameLocation":"4200:7:15","nodeType":"VariableDeclaration","scope":2483,"src":"4192:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2393,"name":"address","nodeType":"ElementaryTypeName","src":"4192:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4172:36:15"},"returnParameters":{"id":2398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2397,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2483,"src":"4230:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2396,"name":"uint256","nodeType":"ElementaryTypeName","src":"4230:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4229:9:15"},"scope":4425,"src":"4150:900:15","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2525,"nodeType":"Block","src":"5151:288:15","statements":[{"assignments":[2493],"declarations":[{"constant":false,"id":2493,"mutability":"mutable","name":"reserveFrom","nameLocation":"5170:11:15","nodeType":"VariableDeclaration","scope":2525,"src":"5162:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2492,"name":"uint256","nodeType":"ElementaryTypeName","src":"5162:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2497,"initialValue":{"arguments":[{"id":2495,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2485,"src":"5200:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2494,"name":"getAssetReserve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3732,"src":"5184:15:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":2496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5184:26:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5162:48:15"},{"assignments":[2499],"declarations":[{"constant":false,"id":2499,"mutability":"mutable","name":"reserveTo","nameLocation":"5229:9:15","nodeType":"VariableDeclaration","scope":2525,"src":"5221:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2498,"name":"uint256","nodeType":"ElementaryTypeName","src":"5221:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2503,"initialValue":{"arguments":[{"id":2501,"name":"toToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2487,"src":"5257:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2500,"name":"getAssetReserve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3732,"src":"5241:15:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":2502,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5241:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5221:44:15"},{"assignments":[2505],"declarations":[{"constant":false,"id":2505,"mutability":"mutable","name":"fromDecimal","nameLocation":"5281:11:15","nodeType":"VariableDeclaration","scope":2525,"src":"5276:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2504,"name":"uint","nodeType":"ElementaryTypeName","src":"5276:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2511,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":2507,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2485,"src":"5310:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2506,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1755,"src":"5295:14:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20Metadata_$1755_$","typeString":"type(contract IERC20Metadata)"}},"id":2508,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5295:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Metadata_$1755","typeString":"contract IERC20Metadata"}},"id":2509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5321:8:15","memberName":"decimals","nodeType":"MemberAccess","referencedDeclaration":1754,"src":"5295:34:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint8_$","typeString":"function () view external returns (uint8)"}},"id":2510,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5295:36:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"5276:55:15"},{"expression":{"arguments":[{"id":2516,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2485,"src":"5389:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2517,"name":"toToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2487,"src":"5400:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2518,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5409:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2519,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5413:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":2520,"name":"fromDecimal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2505,"src":"5419:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5413:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5409:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":2513,"name":"rebalancer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2250,"src":"5369:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2512,"name":"IBaluniV1Rebalancer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6261,"src":"5349:19:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBaluniV1Rebalancer_$6261_$","typeString":"type(contract IBaluniV1Rebalancer)"}},"id":2514,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5349:31:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Rebalancer_$6261","typeString":"contract IBaluniV1Rebalancer"}},"id":2515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5381:7:15","memberName":"convert","nodeType":"MemberAccess","referencedDeclaration":6260,"src":"5349:39:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,address,uint256) view external returns (uint256)"}},"id":2523,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5349:82:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2491,"id":2524,"nodeType":"Return","src":"5342:89:15"}]},"functionSelector":"58d19698","id":2526,"implemented":true,"kind":"function","modifiers":[],"name":"calcOraclePrice","nameLocation":"5067:15:15","nodeType":"FunctionDefinition","parameters":{"id":2488,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2485,"mutability":"mutable","name":"fromToken","nameLocation":"5091:9:15","nodeType":"VariableDeclaration","scope":2526,"src":"5083:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2484,"name":"address","nodeType":"ElementaryTypeName","src":"5083:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2487,"mutability":"mutable","name":"toToken","nameLocation":"5110:7:15","nodeType":"VariableDeclaration","scope":2526,"src":"5102:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2486,"name":"address","nodeType":"ElementaryTypeName","src":"5102:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5082:36:15"},"returnParameters":{"id":2491,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2490,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2526,"src":"5142:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2489,"name":"uint256","nodeType":"ElementaryTypeName","src":"5142:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5141:9:15"},"scope":4425,"src":"5058:381:15","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2630,"nodeType":"Block","src":"5748:597:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2537,"name":"_assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2530,"src":"5767:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5775:6:15","memberName":"length","nodeType":"MemberAccess","src":"5767:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2539,"name":"_weights","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2533,"src":"5785:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5794:6:15","memberName":"length","nodeType":"MemberAccess","src":"5785:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5767:33:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"41737365747320616e642077656967687473206c656e677468206d69736d61746368","id":2542,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5802:36:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_ebb567ad160cf2ebbf5e53ab40a3ffae6f6492169d006ee3f8bad6794e36f372","typeString":"literal_string \"Assets and weights length mismatch\""},"value":"Assets and weights length mismatch"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ebb567ad160cf2ebbf5e53ab40a3ffae6f6492169d006ee3f8bad6794e36f372","typeString":"literal_string \"Assets and weights length mismatch\""}],"id":2536,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5759:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2543,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5759:80:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2544,"nodeType":"ExpressionStatement","src":"5759:80:15"},{"body":{"id":2628,"nodeType":"Block","src":"5897:441:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":2557,"name":"_assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2530,"src":"5920:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2559,"indexExpression":{"id":2558,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2546,"src":"5928:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5920:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2562,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5942:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2561,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5934:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2560,"name":"address","nodeType":"ElementaryTypeName","src":"5934:7:15","typeDescriptions":{}}},"id":2563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5934:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5920:24:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642061737365742061646472657373","id":2565,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5946:23:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_795f8eca8a22be2e70f1d9bdebdbf85a1dc43e172c3964e13eac586b45ff2b92","typeString":"literal_string \"Invalid asset address\""},"value":"Invalid asset address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_795f8eca8a22be2e70f1d9bdebdbf85a1dc43e172c3964e13eac586b45ff2b92","typeString":"literal_string \"Invalid asset address\""}],"id":2556,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5912:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2566,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5912:58:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2567,"nodeType":"ExpressionStatement","src":"5912:58:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":2569,"name":"_weights","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2533,"src":"5993:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2571,"indexExpression":{"id":2570,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2546,"src":"6002:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5993:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2572,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6007:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5993:15:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420776569676874","id":2574,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6010:16:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_ff1ef73e4333da4da038aba1312a1df349427c8859c23d4b6d4a7df22bfc1a19","typeString":"literal_string \"Invalid weight\""},"value":"Invalid weight"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ff1ef73e4333da4da038aba1312a1df349427c8859c23d4b6d4a7df22bfc1a19","typeString":"literal_string \"Invalid weight\""}],"id":2568,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5985:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2575,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5985:42:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2576,"nodeType":"ExpressionStatement","src":"5985:42:15"},{"expression":{"arguments":[{"arguments":[{"baseExpression":{"id":2581,"name":"_assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2530,"src":"6078:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2583,"indexExpression":{"id":2582,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2546,"src":"6086:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6078:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":2584,"name":"_weights","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2533,"src":"6098:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2586,"indexExpression":{"id":2585,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2546,"src":"6107:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6098:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2580,"name":"AssetInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2255,"src":"6060:9:15","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_AssetInfo_$2255_storage_ptr_$","typeString":"type(struct BaluniV1Pool.AssetInfo storage pointer)"}},"id":2587,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["6071:5:15","6090:6:15"],"names":["asset","weight"],"nodeType":"FunctionCall","src":"6060:51:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AssetInfo_$2255_memory_ptr","typeString":"struct BaluniV1Pool.AssetInfo memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_AssetInfo_$2255_memory_ptr","typeString":"struct BaluniV1Pool.AssetInfo memory"}],"expression":{"id":2577,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2235,"src":"6044:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2255_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":2579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6055:4:15","memberName":"push","nodeType":"MemberAccess","src":"6044:15:15","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_AssetInfo_$2255_storage_$dyn_storage_ptr_$_t_struct$_AssetInfo_$2255_storage_$returns$__$attached_to$_t_array$_t_struct$_AssetInfo_$2255_storage_$dyn_storage_ptr_$","typeString":"function (struct BaluniV1Pool.AssetInfo storage ref[] storage pointer,struct BaluniV1Pool.AssetInfo storage ref)"}},"id":2588,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6044:68:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2589,"nodeType":"ExpressionStatement","src":"6044:68:15"},{"assignments":[2592],"declarations":[{"constant":false,"id":2592,"mutability":"mutable","name":"asset","nameLocation":"6136:5:15","nodeType":"VariableDeclaration","scope":2628,"src":"6129:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"},"typeName":{"id":2591,"nodeType":"UserDefinedTypeName","pathNode":{"id":2590,"name":"IERC20","nameLocations":["6129:6:15"],"nodeType":"IdentifierPath","referencedDeclaration":1729,"src":"6129:6:15"},"referencedDeclaration":1729,"src":"6129:6:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"}},"visibility":"internal"}],"id":2598,"initialValue":{"arguments":[{"baseExpression":{"id":2594,"name":"_assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2530,"src":"6151:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2596,"indexExpression":{"id":2595,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2546,"src":"6159:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6151:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2593,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1729,"src":"6144:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1729_$","typeString":"type(contract IERC20)"}},"id":2597,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6144:18:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"}},"nodeType":"VariableDeclarationStatement","src":"6129:33:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2603,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"6205:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Pool_$4425","typeString":"contract BaluniV1Pool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniV1Pool_$4425","typeString":"contract BaluniV1Pool"}],"id":2602,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6197:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2601,"name":"address","nodeType":"ElementaryTypeName","src":"6197:7:15","typeDescriptions":{}}},"id":2604,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6197:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":2607,"name":"rebalancer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2250,"src":"6220:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2606,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6212:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2605,"name":"address","nodeType":"ElementaryTypeName","src":"6212:7:15","typeDescriptions":{}}},"id":2608,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6212:19:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2599,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2592,"src":"6181:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"}},"id":2600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6187:9:15","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":1706,"src":"6181:15:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":2609,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6181:51:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2610,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6236:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6181:56:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2627,"nodeType":"IfStatement","src":"6177:150:15","trueBody":{"id":2626,"nodeType":"Block","src":"6239:88:15","statements":[{"expression":{"arguments":[{"arguments":[{"id":2617,"name":"rebalancer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2250,"src":"6280:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2616,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6272:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2615,"name":"address","nodeType":"ElementaryTypeName","src":"6272:7:15","typeDescriptions":{}}},"id":2618,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6272:19:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"arguments":[{"id":2621,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6298:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2620,"name":"uint256","nodeType":"ElementaryTypeName","src":"6298:7:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":2619,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6293:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2622,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6293:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":2623,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6307:3:15","memberName":"max","nodeType":"MemberAccess","src":"6293:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2612,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2592,"src":"6258:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"}},"id":2614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6264:7:15","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":1716,"src":"6258:13:15","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":2624,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6258:53:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2625,"nodeType":"ExpressionStatement","src":"6258:53:15"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2549,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2546,"src":"5872:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2550,"name":"_assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2530,"src":"5876:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5884:6:15","memberName":"length","nodeType":"MemberAccess","src":"5876:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5872:18:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2629,"initializationExpression":{"assignments":[2546],"declarations":[{"constant":false,"id":2546,"mutability":"mutable","name":"i","nameLocation":"5865:1:15","nodeType":"VariableDeclaration","scope":2629,"src":"5857:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2545,"name":"uint256","nodeType":"ElementaryTypeName","src":"5857:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2548,"initialValue":{"hexValue":"30","id":2547,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5869:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5857:13:15"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":2554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5892:3:15","subExpression":{"id":2553,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2546,"src":"5892:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2555,"nodeType":"ExpressionStatement","src":"5892:3:15"},"nodeType":"ForStatement","src":"5852:486:15"}]},"documentation":{"id":2527,"nodeType":"StructuredDocumentation","src":"5447:207:15","text":" @dev Initializes the assets and their weights for the pool.\n @param _assets The array of asset addresses.\n @param _weights The array of weights corresponding to each asset."},"id":2631,"implemented":true,"kind":"function","modifiers":[],"name":"initializeAssets","nameLocation":"5669:16:15","nodeType":"FunctionDefinition","parameters":{"id":2534,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2530,"mutability":"mutable","name":"_assets","nameLocation":"5703:7:15","nodeType":"VariableDeclaration","scope":2631,"src":"5686:24:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2528,"name":"address","nodeType":"ElementaryTypeName","src":"5686:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2529,"nodeType":"ArrayTypeName","src":"5686:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":2533,"mutability":"mutable","name":"_weights","nameLocation":"5729:8:15","nodeType":"VariableDeclaration","scope":2631,"src":"5712:25:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2531,"name":"uint256","nodeType":"ElementaryTypeName","src":"5712:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2532,"nodeType":"ArrayTypeName","src":"5712:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"5685:53:15"},"returnParameters":{"id":2535,"nodeType":"ParameterList","parameters":[],"src":"5748:0:15"},"scope":4425,"src":"5660:685:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2744,"nodeType":"Block","src":"6838:937:15","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2643,"name":"isRebalanceNeeded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4388,"src":"6857:17:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":2644,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6857:19:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"526562616c616e6365206e6f74206e6565646564","id":2645,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6878:22:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_e4fcae9c0286e861087281117e0a3185ced905823104b290e1fe3ba826d8d280","typeString":"literal_string \"Rebalance not needed\""},"value":"Rebalance not needed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e4fcae9c0286e861087281117e0a3185ced905823104b290e1fe3ba826d8d280","typeString":"literal_string \"Rebalance not needed\""}],"id":2642,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6849:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2646,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6849:52:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2647,"nodeType":"ExpressionStatement","src":"6849:52:15"},{"assignments":[2649,2652],"declarations":[{"constant":false,"id":2649,"mutability":"mutable","name":"totalValuation","nameLocation":"6921:14:15","nodeType":"VariableDeclaration","scope":2744,"src":"6913:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2648,"name":"uint256","nodeType":"ElementaryTypeName","src":"6913:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2652,"mutability":"mutable","name":"valuations","nameLocation":"6954:10:15","nodeType":"VariableDeclaration","scope":2744,"src":"6937:27:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2650,"name":"uint256","nodeType":"ElementaryTypeName","src":"6937:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2651,"nodeType":"ArrayTypeName","src":"6937:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":2655,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2653,"name":"_computeTotalValuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3913,"src":"6968:22:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function () view returns (uint256,uint256[] memory)"}},"id":2654,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6968:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256,uint256[] memory)"}},"nodeType":"VariableDeclarationStatement","src":"6912:80:15"},{"assignments":[2660],"declarations":[{"constant":false,"id":2660,"mutability":"mutable","name":"amountsToAdd","nameLocation":"7022:12:15","nodeType":"VariableDeclaration","scope":2744,"src":"7005:29:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2658,"name":"uint256","nodeType":"ElementaryTypeName","src":"7005:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2659,"nodeType":"ArrayTypeName","src":"7005:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":2665,"initialValue":{"arguments":[{"id":2662,"name":"totalValuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2649,"src":"7060:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2663,"name":"valuations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2652,"src":"7076:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":2661,"name":"_calculateAmountsToAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4228,"src":"7037:22:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256,uint256[] memory) view returns (uint256[] memory)"}},"id":2664,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7037:50:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"7005:82:15"},{"assignments":[2667],"declarations":[{"constant":false,"id":2667,"mutability":"mutable","name":"totalAddedLiquidity","nameLocation":"7167:19:15","nodeType":"VariableDeclaration","scope":2744,"src":"7159:27:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2666,"name":"uint256","nodeType":"ElementaryTypeName","src":"7159:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2671,"initialValue":{"arguments":[{"id":2669,"name":"amountsToAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2660,"src":"7219:12:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":2668,"name":"_calculateTotalAddedLiquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4162,"src":"7189:29:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256[] memory) view returns (uint256)"}},"id":2670,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7189:43:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7159:73:15"},{"assignments":[2673],"declarations":[{"constant":false,"id":2673,"mutability":"mutable","name":"baseDecimal","nameLocation":"7250:11:15","nodeType":"VariableDeclaration","scope":2744,"src":"7245:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2672,"name":"uint","nodeType":"ElementaryTypeName","src":"7245:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2679,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":2675,"name":"baseAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2248,"src":"7279:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2674,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1755,"src":"7264:14:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20Metadata_$1755_$","typeString":"type(contract IERC20Metadata)"}},"id":2676,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7264:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Metadata_$1755","typeString":"contract IERC20Metadata"}},"id":2677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7290:8:15","memberName":"decimals","nodeType":"MemberAccess","referencedDeclaration":1754,"src":"7264:34:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint8_$","typeString":"function () view external returns (uint8)"}},"id":2678,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7264:36:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"7245:55:15"},{"expression":{"id":2686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2680,"name":"totalAddedLiquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2667,"src":"7313:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"id":2683,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2681,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7336:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3138","id":2682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7342:2:15","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"7336:8:15","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2684,"name":"baseDecimal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2673,"src":"7347:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7336:22:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7313:45:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2687,"nodeType":"ExpressionStatement","src":"7313:45:15"},{"assignments":[2692],"declarations":[{"constant":false,"id":2692,"mutability":"mutable","name":"amounts","nameLocation":"7388:7:15","nodeType":"VariableDeclaration","scope":2744,"src":"7371:24:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2690,"name":"uint256","nodeType":"ElementaryTypeName","src":"7371:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2691,"nodeType":"ArrayTypeName","src":"7371:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":2699,"initialValue":{"arguments":[{"expression":{"id":2696,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2235,"src":"7412:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2255_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":2697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7423:6:15","memberName":"length","nodeType":"MemberAccess","src":"7412:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2695,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"7398:13:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":2693,"name":"uint256","nodeType":"ElementaryTypeName","src":"7402:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2694,"nodeType":"ArrayTypeName","src":"7402:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":2698,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7398:32:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"7371:59:15"},{"body":{"id":2729,"nodeType":"Block","src":"7493:138:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":2711,"name":"amountsToAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2660,"src":"7512:12:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2713,"indexExpression":{"id":2712,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2701,"src":"7525:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7512:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7530:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7512:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2728,"nodeType":"IfStatement","src":"7508:112:15","trueBody":{"id":2727,"nodeType":"Block","src":"7533:87:15","statements":[{"expression":{"id":2725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2716,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2692,"src":"7552:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2718,"indexExpression":{"id":2717,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2701,"src":"7560:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7552:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2720,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2701,"src":"7585:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":2721,"name":"amountsToAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2660,"src":"7588:12:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2723,"indexExpression":{"id":2722,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2701,"src":"7601:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7588:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2719,"name":"_calculateLiquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4258,"src":"7565:19:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) view returns (uint256)"}},"id":2724,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7565:39:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7552:52:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2726,"nodeType":"ExpressionStatement","src":"7552:52:15"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2704,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2701,"src":"7463:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2705,"name":"amountsToAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2660,"src":"7467:12:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7480:6:15","memberName":"length","nodeType":"MemberAccess","src":"7467:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7463:23:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2730,"initializationExpression":{"assignments":[2701],"declarations":[{"constant":false,"id":2701,"mutability":"mutable","name":"i","nameLocation":"7456:1:15","nodeType":"VariableDeclaration","scope":2730,"src":"7448:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2700,"name":"uint256","nodeType":"ElementaryTypeName","src":"7448:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2703,"initialValue":{"hexValue":"30","id":2702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7460:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"7448:13:15"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":2709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"7488:3:15","subExpression":{"id":2708,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2701,"src":"7488:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2710,"nodeType":"ExpressionStatement","src":"7488:3:15"},"nodeType":"ForStatement","src":"7443:188:15"},{"expression":{"arguments":[{"id":2732,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2634,"src":"7649:8:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2733,"name":"totalAddedLiquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2667,"src":"7659:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2731,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1491,"src":"7643:5:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2734,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7643:36:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2735,"nodeType":"ExpressionStatement","src":"7643:36:15"},{"eventCall":{"arguments":[{"expression":{"id":2737,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7715:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7719:6:15","memberName":"sender","nodeType":"MemberAccess","src":"7715:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2739,"name":"amountsToAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2660,"src":"7727:12:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":2736,"name":"WeightsRebalanced","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2269,"src":"7697:17:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (address,uint256[] memory)"}},"id":2740,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7697:43:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2741,"nodeType":"EmitStatement","src":"7692:48:15"},{"expression":{"id":2742,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2692,"src":"7760:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":2641,"id":2743,"nodeType":"Return","src":"7753:14:15"}]},"documentation":{"id":2632,"nodeType":"StructuredDocumentation","src":"6353:385:15","text":" @dev Rebalances the weights of the pool by calculating the amounts to add for each token,\n transferring the calculated amounts from the user to the pool, minting the total added liquidity,\n updating the reserves, and emitting an event to indicate the rebalancing of weights.\n @param receiver The address to receive the minted liquidity tokens."},"functionSelector":"0723c999","id":2745,"implemented":true,"kind":"function","modifiers":[{"id":2637,"kind":"modifierInvocation","modifierName":{"id":2636,"name":"onlyPeriphery","nameLocations":["6797:13:15"],"nodeType":"IdentifierPath","referencedDeclaration":2390,"src":"6797:13:15"},"nodeType":"ModifierInvocation","src":"6797:13:15"}],"name":"rebalanceWeights","nameLocation":"6753:16:15","nodeType":"FunctionDefinition","parameters":{"id":2635,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2634,"mutability":"mutable","name":"receiver","nameLocation":"6778:8:15","nodeType":"VariableDeclaration","scope":2745,"src":"6770:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2633,"name":"address","nodeType":"ElementaryTypeName","src":"6770:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6769:18:15"},"returnParameters":{"id":2641,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2640,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2745,"src":"6820:16:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2638,"name":"uint256","nodeType":"ElementaryTypeName","src":"6820:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2639,"nodeType":"ArrayTypeName","src":"6820:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"6819:18:15"},"scope":4425,"src":"6744:1031:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2831,"nodeType":"Block","src":"8745:892:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2762,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2748,"src":"8764:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2763,"name":"toToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2750,"src":"8777:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8764:20:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43616e6e6f742073776170207468652073616d6520746f6b656e","id":2765,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8786:28:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_6f3b6914a8f4e42f0dc4d6fcf60d1470463793693c123b4b0782b9cd43668c23","typeString":"literal_string \"Cannot swap the same token\""},"value":"Cannot swap the same token"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6f3b6914a8f4e42f0dc4d6fcf60d1470463793693c123b4b0782b9cd43668c23","typeString":"literal_string \"Cannot swap the same token\""}],"id":2761,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8756:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2766,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8756:59:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2767,"nodeType":"ExpressionStatement","src":"8756:59:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2769,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2752,"src":"8834:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2770,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8843:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8834:10:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416d6f756e74206d7573742062652067726561746572207468616e207a65726f","id":2772,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8846:34:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887","typeString":"literal_string \"Amount must be greater than zero\""},"value":"Amount must be greater than zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887","typeString":"literal_string \"Amount must be greater than zero\""}],"id":2768,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8826:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2773,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8826:55:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2774,"nodeType":"ExpressionStatement","src":"8826:55:15"},{"assignments":[2776],"declarations":[{"constant":false,"id":2776,"mutability":"mutable","name":"receivedAmount","nameLocation":"8982:14:15","nodeType":"VariableDeclaration","scope":2831,"src":"8974:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2775,"name":"uint256","nodeType":"ElementaryTypeName","src":"8974:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2784,"initialValue":{"arguments":[{"id":2778,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2748,"src":"9018:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2779,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2752,"src":"9029:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2780,"name":"toToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2750,"src":"9037:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"31","id":2781,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9046:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},{"hexValue":"31653138","id":2782,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9049:4:15","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}],"id":2777,"name":"_swapExactAmountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2974,"src":"8999:18:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256,address,uint256,uint256) returns (uint256)"}},"id":2783,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8999:55:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8974:80:15"},{"expression":{"id":2795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2785,"name":"receivedAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2776,"src":"9065:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":2794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"id":2788,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2786,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9083:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3138","id":2787,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9089:2:15","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"9083:8:15","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":2790,"name":"toToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2750,"src":"9109:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2789,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1755,"src":"9094:14:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20Metadata_$1755_$","typeString":"type(contract IERC20Metadata)"}},"id":2791,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9094:23:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Metadata_$1755","typeString":"contract IERC20Metadata"}},"id":2792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9118:8:15","memberName":"decimals","nodeType":"MemberAccess","referencedDeclaration":1754,"src":"9094:32:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint8_$","typeString":"function () view external returns (uint8)"}},"id":2793,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9094:34:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"9083:45:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"9065:63:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2796,"nodeType":"ExpressionStatement","src":"9065:63:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2799,"name":"toToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2750,"src":"9376:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2798,"name":"getAssetReserve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3732,"src":"9360:15:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":2800,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9360:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2801,"name":"receivedAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2776,"src":"9388:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9360:42:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e74204c6971756964697479","id":2803,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9404:24:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_85d32796faf4bbe37cfdb7e983d4048fee52ebcfc8d2f22a939ce47e85d98ae8","typeString":"literal_string \"Insufficient Liquidity\""},"value":"Insufficient Liquidity"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_85d32796faf4bbe37cfdb7e983d4048fee52ebcfc8d2f22a939ce47e85d98ae8","typeString":"literal_string \"Insufficient Liquidity\""}],"id":2797,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9352:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2804,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9352:77:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2805,"nodeType":"ExpressionStatement","src":"9352:77:15"},{"assignments":[2807],"declarations":[{"constant":false,"id":2807,"mutability":"mutable","name":"fee","nameLocation":"9450:3:15","nodeType":"VariableDeclaration","scope":2831,"src":"9442:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2806,"name":"uint256","nodeType":"ElementaryTypeName","src":"9442:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2814,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2808,"name":"receivedAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2776,"src":"9457:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2809,"name":"SWAP_FEE_BPS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2246,"src":"9474:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9457:29:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2811,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9456:31:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3130303030","id":2812,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9490:5:15","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"src":"9456:39:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9442:53:15"},{"expression":{"id":2819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2815,"name":"toSend","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2759,"src":"9506:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2816,"name":"receivedAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2776,"src":"9515:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2817,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2807,"src":"9532:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9515:20:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9506:29:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2820,"nodeType":"ExpressionStatement","src":"9506:29:15"},{"eventCall":{"arguments":[{"id":2822,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2754,"src":"9558:8:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2823,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2748,"src":"9568:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2824,"name":"toToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2750,"src":"9579:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2825,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2752,"src":"9588:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2826,"name":"toSend","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2759,"src":"9596:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2821,"name":"Swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2293,"src":"9553:4:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,address,uint256,uint256)"}},"id":2827,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9553:50:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2828,"nodeType":"EmitStatement","src":"9548:55:15"},{"expression":{"id":2829,"name":"toSend","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2759,"src":"9623:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2760,"id":2830,"nodeType":"Return","src":"9616:13:15"}]},"documentation":{"id":2746,"nodeType":"StructuredDocumentation","src":"7783:782:15","text":" @dev Swaps `amount` of `fromToken` to `toToken` and transfers the received amount to `receiver`.\n Requirements:\n - `fromToken` and `toToken` must be different tokens.\n - `amount` must be greater than zero.\n - Sufficient liquidity of `toToken` must be available in the contract.\n Emits a `Swap` event with the details of the swap.\n Updates the reserves after the swap.\n @param fromToken The address of the token to swap from.\n @param toToken The address of the token to swap to.\n @param amount The amount of `fromToken` to swap.\n @param receiver The address to receive the swapped tokens.\n @return toSend The amount of `toToken` received after the swap."},"functionSelector":"6e81221c","id":2832,"implemented":true,"kind":"function","modifiers":[{"id":2757,"kind":"modifierInvocation","modifierName":{"id":2756,"name":"nonReentrant","nameLocations":["8707:12:15"],"nodeType":"IdentifierPath","referencedDeclaration":2071,"src":"8707:12:15"},"nodeType":"ModifierInvocation","src":"8707:12:15"}],"name":"swap","nameLocation":"8580:4:15","nodeType":"FunctionDefinition","parameters":{"id":2755,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2748,"mutability":"mutable","name":"fromToken","nameLocation":"8603:9:15","nodeType":"VariableDeclaration","scope":2832,"src":"8595:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2747,"name":"address","nodeType":"ElementaryTypeName","src":"8595:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2750,"mutability":"mutable","name":"toToken","nameLocation":"8631:7:15","nodeType":"VariableDeclaration","scope":2832,"src":"8623:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2749,"name":"address","nodeType":"ElementaryTypeName","src":"8623:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2752,"mutability":"mutable","name":"amount","nameLocation":"8657:6:15","nodeType":"VariableDeclaration","scope":2832,"src":"8649:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2751,"name":"uint256","nodeType":"ElementaryTypeName","src":"8649:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2754,"mutability":"mutable","name":"receiver","nameLocation":"8682:8:15","nodeType":"VariableDeclaration","scope":2832,"src":"8674:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2753,"name":"address","nodeType":"ElementaryTypeName","src":"8674:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8584:113:15"},"returnParameters":{"id":2760,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2759,"mutability":"mutable","name":"toSend","nameLocation":"8737:6:15","nodeType":"VariableDeclaration","scope":2832,"src":"8729:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2758,"name":"uint256","nodeType":"ElementaryTypeName","src":"8729:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8728:16:15"},"scope":4425,"src":"8571:1066:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2973,"nodeType":"Block","src":"9853:1540:15","statements":[{"assignments":[2848],"declarations":[{"constant":false,"id":2848,"mutability":"mutable","name":"tokenOutReserve","nameLocation":"9872:15:15","nodeType":"VariableDeclaration","scope":2973,"src":"9864:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2847,"name":"uint256","nodeType":"ElementaryTypeName","src":"9864:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2852,"initialValue":{"arguments":[{"id":2850,"name":"tokenOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2838,"src":"9906:8:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2849,"name":"getAssetReserve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3732,"src":"9890:15:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":2851,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9890:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9864:51:15"},{"assignments":[2854],"declarations":[{"constant":false,"id":2854,"mutability":"mutable","name":"tokenInReserve","nameLocation":"9934:14:15","nodeType":"VariableDeclaration","scope":2973,"src":"9926:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2853,"name":"uint256","nodeType":"ElementaryTypeName","src":"9926:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2858,"initialValue":{"arguments":[{"id":2856,"name":"tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2834,"src":"9967:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2855,"name":"getAssetReserve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3732,"src":"9951:15:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":2857,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9951:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9926:49:15"},{"assignments":[2860],"declarations":[{"constant":false,"id":2860,"mutability":"mutable","name":"spotPriceBefore","nameLocation":"10061:15:15","nodeType":"VariableDeclaration","scope":2973,"src":"10056:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2859,"name":"uint","nodeType":"ElementaryTypeName","src":"10056:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2882,"initialValue":{"arguments":[{"id":2862,"name":"tokenInReserve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2854,"src":"10107:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2864,"name":"tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2834,"src":"10154:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2863,"name":"_getTargetWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4424,"src":"10137:16:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":2865,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10137:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"31303030","id":2866,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10165:4:15","typeDescriptions":{"typeIdentifier":"t_rational_1000_by_1","typeString":"int_const 1000"},"value":"1000"},"src":"10137:32:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2868,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10136:34:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"31653138","id":2869,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10173:4:15","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"src":"10136:41:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2871,"name":"tokenOutReserve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2848,"src":"10192:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2873,"name":"tokenOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2838,"src":"10240:8:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2872,"name":"_getTargetWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4424,"src":"10223:16:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":2874,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10223:26:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"31303030","id":2875,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10252:4:15","typeDescriptions":{"typeIdentifier":"t_rational_1000_by_1","typeString":"int_const 1000"},"value":"1000"},"src":"10223:33:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2877,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10222:35:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"31653138","id":2878,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10260:4:15","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"src":"10222:42:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2880,"name":"SWAP_FEE_BPS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2246,"src":"10279:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2861,"name":"calcSpotPrice","nodeType":"Identifier","overloadedDeclarations":[2483,5092],"referencedDeclaration":5092,"src":"10079:13:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256,uint256,uint256) pure returns (uint256)"}},"id":2881,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10079:223:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10056:246:15"},{"expression":{"id":2906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2883,"name":"tokenAmountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2845,"src":"10389:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2885,"name":"tokenInReserve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2854,"src":"10435:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2887,"name":"tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2834,"src":"10482:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2886,"name":"_getTargetWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4424,"src":"10465:16:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":2888,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10465:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"31303030","id":2889,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10493:4:15","typeDescriptions":{"typeIdentifier":"t_rational_1000_by_1","typeString":"int_const 1000"},"value":"1000"},"src":"10465:32:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2891,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10464:34:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"31653138","id":2892,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10501:4:15","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"src":"10464:41:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2894,"name":"tokenOutReserve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2848,"src":"10520:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2896,"name":"tokenOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2838,"src":"10568:8:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2895,"name":"_getTargetWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4424,"src":"10551:16:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":2897,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10551:26:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"31303030","id":2898,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10580:4:15","typeDescriptions":{"typeIdentifier":"t_rational_1000_by_1","typeString":"int_const 1000"},"value":"1000"},"src":"10551:33:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2900,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10550:35:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"31653138","id":2901,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10588:4:15","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"src":"10550:42:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2903,"name":"tokenAmountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2836,"src":"10607:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2904,"name":"SWAP_FEE_BPS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2246,"src":"10635:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2884,"name":"calcOutGivenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5164,"src":"10406:14:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256,uint256,uint256,uint256) pure returns (uint256)"}},"id":2905,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10406:252:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10389:269:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2907,"nodeType":"ExpressionStatement","src":"10389:269:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2909,"name":"tokenAmountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2845,"src":"10677:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2910,"name":"minAmountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2840,"src":"10695:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10677:30:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552525f4c494d49545f4f5554","id":2912,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10709:15:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_665ff818e83fa8776541f5756d1025222aecfe18eeb105729691884778497705","typeString":"literal_string \"ERR_LIMIT_OUT\""},"value":"ERR_LIMIT_OUT"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_665ff818e83fa8776541f5756d1025222aecfe18eeb105729691884778497705","typeString":"literal_string \"ERR_LIMIT_OUT\""}],"id":2908,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10669:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2913,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10669:56:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2914,"nodeType":"ExpressionStatement","src":"10669:56:15"},{"expression":{"id":2920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2915,"name":"tokenInReserve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2854,"src":"10738:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2917,"name":"tokenInReserve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2854,"src":"10760:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2918,"name":"tokenAmountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2836,"src":"10776:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2916,"name":"badd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5656,"src":"10755:4:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2919,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10755:35:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10738:52:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2921,"nodeType":"ExpressionStatement","src":"10738:52:15"},{"expression":{"id":2927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2922,"name":"tokenOutReserve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2848,"src":"10801:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2924,"name":"tokenOutReserve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2848,"src":"10824:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2925,"name":"tokenAmountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2845,"src":"10841:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2923,"name":"bsub","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5683,"src":"10819:4:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2926,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10819:37:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10801:55:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2928,"nodeType":"ExpressionStatement","src":"10801:55:15"},{"assignments":[2930],"declarations":[{"constant":false,"id":2930,"mutability":"mutable","name":"spotPriceAfter","nameLocation":"10877:14:15","nodeType":"VariableDeclaration","scope":2973,"src":"10869:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2929,"name":"uint256","nodeType":"ElementaryTypeName","src":"10869:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2952,"initialValue":{"arguments":[{"id":2932,"name":"tokenInReserve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2854,"src":"10922:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2934,"name":"tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2834,"src":"10969:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2933,"name":"_getTargetWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4424,"src":"10952:16:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":2935,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10952:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"31303030","id":2936,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10980:4:15","typeDescriptions":{"typeIdentifier":"t_rational_1000_by_1","typeString":"int_const 1000"},"value":"1000"},"src":"10952:32:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2938,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10951:34:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"31653138","id":2939,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10988:4:15","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"src":"10951:41:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2941,"name":"tokenOutReserve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2848,"src":"11007:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2943,"name":"tokenOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2838,"src":"11055:8:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2942,"name":"_getTargetWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4424,"src":"11038:16:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":2944,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11038:26:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"31303030","id":2945,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11067:4:15","typeDescriptions":{"typeIdentifier":"t_rational_1000_by_1","typeString":"int_const 1000"},"value":"1000"},"src":"11038:33:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2947,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11037:35:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"31653138","id":2948,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11075:4:15","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"src":"11037:42:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2950,"name":"SWAP_FEE_BPS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2246,"src":"11094:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2931,"name":"calcSpotPrice","nodeType":"Identifier","overloadedDeclarations":[2483,5092],"referencedDeclaration":5092,"src":"10894:13:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256,uint256,uint256) pure returns (uint256)"}},"id":2951,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10894:223:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10869:248:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2954,"name":"spotPriceAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2930,"src":"11136:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2955,"name":"spotPriceBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2860,"src":"11154:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11136:33:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552525f4d4154485f415050524f58","id":2957,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11171:17:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_38839817361c628b17e457bae64f619c23ab542714e93cfb021dbd3ddd466187","typeString":"literal_string \"ERR_MATH_APPROX\""},"value":"ERR_MATH_APPROX"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_38839817361c628b17e457bae64f619c23ab542714e93cfb021dbd3ddd466187","typeString":"literal_string \"ERR_MATH_APPROX\""}],"id":2953,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11128:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2958,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11128:61:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2959,"nodeType":"ExpressionStatement","src":"11128:61:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2961,"name":"spotPriceBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2860,"src":"11275:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"arguments":[{"id":2963,"name":"tokenAmountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2836,"src":"11299:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2964,"name":"tokenAmountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2845,"src":"11314:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2962,"name":"bdiv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5826,"src":"11294:4:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2965,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11294:35:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11275:54:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552525f4d4154485f415050524f58","id":2967,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11331:17:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_38839817361c628b17e457bae64f619c23ab542714e93cfb021dbd3ddd466187","typeString":"literal_string \"ERR_MATH_APPROX\""},"value":"ERR_MATH_APPROX"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_38839817361c628b17e457bae64f619c23ab542714e93cfb021dbd3ddd466187","typeString":"literal_string \"ERR_MATH_APPROX\""}],"id":2960,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11267:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2968,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11267:82:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2969,"nodeType":"ExpressionStatement","src":"11267:82:15"},{"expression":{"components":[{"id":2970,"name":"tokenAmountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2845,"src":"11370:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2971,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11369:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2846,"id":2972,"nodeType":"Return","src":"11362:23:15"}]},"id":2974,"implemented":true,"kind":"function","modifiers":[],"name":"_swapExactAmountIn","nameLocation":"9654:18:15","nodeType":"FunctionDefinition","parameters":{"id":2843,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2834,"mutability":"mutable","name":"tokenIn","nameLocation":"9691:7:15","nodeType":"VariableDeclaration","scope":2974,"src":"9683:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2833,"name":"address","nodeType":"ElementaryTypeName","src":"9683:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2836,"mutability":"mutable","name":"tokenAmountIn","nameLocation":"9714:13:15","nodeType":"VariableDeclaration","scope":2974,"src":"9709:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2835,"name":"uint","nodeType":"ElementaryTypeName","src":"9709:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2838,"mutability":"mutable","name":"tokenOut","nameLocation":"9746:8:15","nodeType":"VariableDeclaration","scope":2974,"src":"9738:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2837,"name":"address","nodeType":"ElementaryTypeName","src":"9738:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2840,"mutability":"mutable","name":"minAmountOut","nameLocation":"9770:12:15","nodeType":"VariableDeclaration","scope":2974,"src":"9765:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2839,"name":"uint","nodeType":"ElementaryTypeName","src":"9765:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2842,"mutability":"mutable","name":"maxPrice","nameLocation":"9798:8:15","nodeType":"VariableDeclaration","scope":2974,"src":"9793:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2841,"name":"uint","nodeType":"ElementaryTypeName","src":"9793:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9672:141:15"},"returnParameters":{"id":2846,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2845,"mutability":"mutable","name":"tokenAmountOut","nameLocation":"9837:14:15","nodeType":"VariableDeclaration","scope":2974,"src":"9832:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2844,"name":"uint","nodeType":"ElementaryTypeName","src":"9832:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9831:21:15"},"scope":4425,"src":"9645:1748:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3105,"nodeType":"Block","src":"11609:1208:15","statements":[{"assignments":[2990],"declarations":[{"constant":false,"id":2990,"mutability":"mutable","name":"tokenOutReserve","nameLocation":"11628:15:15","nodeType":"VariableDeclaration","scope":3105,"src":"11620:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2989,"name":"uint256","nodeType":"ElementaryTypeName","src":"11620:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2994,"initialValue":{"arguments":[{"id":2992,"name":"tokenOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2980,"src":"11662:8:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2991,"name":"getAssetReserve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3732,"src":"11646:15:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":2993,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11646:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11620:51:15"},{"assignments":[2996],"declarations":[{"constant":false,"id":2996,"mutability":"mutable","name":"tokenInReserve","nameLocation":"11690:14:15","nodeType":"VariableDeclaration","scope":3105,"src":"11682:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2995,"name":"uint256","nodeType":"ElementaryTypeName","src":"11682:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3000,"initialValue":{"arguments":[{"id":2998,"name":"tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2976,"src":"11723:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2997,"name":"getAssetReserve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3732,"src":"11707:15:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":2999,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11707:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11682:49:15"},{"assignments":[3002],"declarations":[{"constant":false,"id":3002,"mutability":"mutable","name":"spotPriceBefore","nameLocation":"11749:15:15","nodeType":"VariableDeclaration","scope":3105,"src":"11744:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3001,"name":"uint","nodeType":"ElementaryTypeName","src":"11744:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3007,"initialValue":{"arguments":[{"id":3004,"name":"tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2976,"src":"11781:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3005,"name":"tokenOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2980,"src":"11790:8:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3003,"name":"calcSpotPrice","nodeType":"Identifier","overloadedDeclarations":[2483,5092],"referencedDeclaration":2483,"src":"11767:13:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":3006,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11767:32:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11744:55:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3009,"name":"spotPriceBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3002,"src":"11818:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":3010,"name":"maxPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2984,"src":"11837:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11818:27:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552525f4241445f4c494d49545f5052494345","id":3012,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11847:21:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_8be255c2a8eee29f022cb079554d7088e735aa3d5d6f9dc88998c3ffe134ce88","typeString":"literal_string \"ERR_BAD_LIMIT_PRICE\""},"value":"ERR_BAD_LIMIT_PRICE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8be255c2a8eee29f022cb079554d7088e735aa3d5d6f9dc88998c3ffe134ce88","typeString":"literal_string \"ERR_BAD_LIMIT_PRICE\""}],"id":3008,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11810:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3013,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11810:59:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3014,"nodeType":"ExpressionStatement","src":"11810:59:15"},{"expression":{"id":3038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3015,"name":"tokenAmountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2987,"src":"11882:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3017,"name":"tokenInReserve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2996,"src":"11927:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3019,"name":"tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2976,"src":"11974:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3018,"name":"_getTargetWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4424,"src":"11957:16:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":3020,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11957:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"31303030","id":3021,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11985:4:15","typeDescriptions":{"typeIdentifier":"t_rational_1000_by_1","typeString":"int_const 1000"},"value":"1000"},"src":"11957:32:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3023,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11956:34:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"31653138","id":3024,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11993:4:15","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"src":"11956:41:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3026,"name":"tokenOutReserve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2990,"src":"12012:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3028,"name":"tokenOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2980,"src":"12060:8:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3027,"name":"_getTargetWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4424,"src":"12043:16:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":3029,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12043:26:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"31303030","id":3030,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12072:4:15","typeDescriptions":{"typeIdentifier":"t_rational_1000_by_1","typeString":"int_const 1000"},"value":"1000"},"src":"12043:33:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3032,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12042:35:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"31653138","id":3033,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12080:4:15","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"src":"12042:42:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3035,"name":"tokenAmountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2982,"src":"12099:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3036,"name":"SWAP_FEE_BPS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2246,"src":"12128:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3016,"name":"calcInGivenOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5236,"src":"11898:14:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256,uint256,uint256,uint256) pure returns (uint256)"}},"id":3037,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11898:253:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11882:269:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3039,"nodeType":"ExpressionStatement","src":"11882:269:15"},{"expression":{"id":3045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3040,"name":"tokenInReserve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2996,"src":"12164:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3042,"name":"tokenInReserve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2996,"src":"12186:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3043,"name":"tokenAmountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2987,"src":"12202:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3041,"name":"badd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5656,"src":"12181:4:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3044,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12181:35:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12164:52:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3046,"nodeType":"ExpressionStatement","src":"12164:52:15"},{"expression":{"id":3052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3047,"name":"tokenOutReserve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2990,"src":"12227:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3049,"name":"tokenOutReserve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2990,"src":"12250:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3050,"name":"tokenAmountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2982,"src":"12267:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3048,"name":"bsub","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5683,"src":"12245:4:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3051,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12245:37:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12227:55:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3053,"nodeType":"ExpressionStatement","src":"12227:55:15"},{"assignments":[3055],"declarations":[{"constant":false,"id":3055,"mutability":"mutable","name":"spotPriceAfter","nameLocation":"12303:14:15","nodeType":"VariableDeclaration","scope":3105,"src":"12295:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3054,"name":"uint256","nodeType":"ElementaryTypeName","src":"12295:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3077,"initialValue":{"arguments":[{"id":3057,"name":"tokenInReserve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2996,"src":"12348:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3059,"name":"tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2976,"src":"12395:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3058,"name":"_getTargetWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4424,"src":"12378:16:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":3060,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12378:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"31303030","id":3061,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12406:4:15","typeDescriptions":{"typeIdentifier":"t_rational_1000_by_1","typeString":"int_const 1000"},"value":"1000"},"src":"12378:32:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3063,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12377:34:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"31653138","id":3064,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12414:4:15","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"src":"12377:41:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3066,"name":"tokenOutReserve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2990,"src":"12433:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3068,"name":"tokenOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2980,"src":"12481:8:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3067,"name":"_getTargetWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4424,"src":"12464:16:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":3069,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12464:26:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"31303030","id":3070,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12493:4:15","typeDescriptions":{"typeIdentifier":"t_rational_1000_by_1","typeString":"int_const 1000"},"value":"1000"},"src":"12464:33:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3072,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12463:35:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"31653138","id":3073,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12501:4:15","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"src":"12463:42:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3075,"name":"SWAP_FEE_BPS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2246,"src":"12520:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3056,"name":"calcSpotPrice","nodeType":"Identifier","overloadedDeclarations":[2483,5092],"referencedDeclaration":5092,"src":"12320:13:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256,uint256,uint256) pure returns (uint256)"}},"id":3076,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12320:223:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12295:248:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3079,"name":"spotPriceAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"12562:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":3080,"name":"spotPriceBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3002,"src":"12580:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12562:33:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552525f4d4154485f415050524f58","id":3082,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12597:17:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_38839817361c628b17e457bae64f619c23ab542714e93cfb021dbd3ddd466187","typeString":"literal_string \"ERR_MATH_APPROX\""},"value":"ERR_MATH_APPROX"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_38839817361c628b17e457bae64f619c23ab542714e93cfb021dbd3ddd466187","typeString":"literal_string \"ERR_MATH_APPROX\""}],"id":3078,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12554:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3083,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12554:61:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3084,"nodeType":"ExpressionStatement","src":"12554:61:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3086,"name":"spotPriceAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"12634:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":3087,"name":"maxPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2984,"src":"12652:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12634:26:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552525f4c494d49545f5052494345","id":3089,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12662:17:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_b5544ff618944f1e1eee76066a3c4ee71ebb3e4c80a9b96ceaf365ff27739eb5","typeString":"literal_string \"ERR_LIMIT_PRICE\""},"value":"ERR_LIMIT_PRICE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b5544ff618944f1e1eee76066a3c4ee71ebb3e4c80a9b96ceaf365ff27739eb5","typeString":"literal_string \"ERR_LIMIT_PRICE\""}],"id":3085,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12626:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3090,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12626:54:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3091,"nodeType":"ExpressionStatement","src":"12626:54:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3093,"name":"spotPriceBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3002,"src":"12699:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"arguments":[{"id":3095,"name":"tokenAmountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2987,"src":"12723:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3096,"name":"tokenAmountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2982,"src":"12738:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3094,"name":"bdiv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5826,"src":"12718:4:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3097,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12718:35:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12699:54:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552525f4d4154485f415050524f58","id":3099,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12755:17:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_38839817361c628b17e457bae64f619c23ab542714e93cfb021dbd3ddd466187","typeString":"literal_string \"ERR_MATH_APPROX\""},"value":"ERR_MATH_APPROX"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_38839817361c628b17e457bae64f619c23ab542714e93cfb021dbd3ddd466187","typeString":"literal_string \"ERR_MATH_APPROX\""}],"id":3092,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12691:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3100,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12691:82:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3101,"nodeType":"ExpressionStatement","src":"12691:82:15"},{"expression":{"components":[{"id":3102,"name":"tokenAmountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2982,"src":"12794:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3103,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12793:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2988,"id":3104,"nodeType":"Return","src":"12786:23:15"}]},"id":3106,"implemented":true,"kind":"function","modifiers":[],"name":"_swapExactAmountOut","nameLocation":"11410:19:15","nodeType":"FunctionDefinition","parameters":{"id":2985,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2976,"mutability":"mutable","name":"tokenIn","nameLocation":"11448:7:15","nodeType":"VariableDeclaration","scope":3106,"src":"11440:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2975,"name":"address","nodeType":"ElementaryTypeName","src":"11440:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2978,"mutability":"mutable","name":"maxAmountIn","nameLocation":"11471:11:15","nodeType":"VariableDeclaration","scope":3106,"src":"11466:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2977,"name":"uint","nodeType":"ElementaryTypeName","src":"11466:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2980,"mutability":"mutable","name":"tokenOut","nameLocation":"11501:8:15","nodeType":"VariableDeclaration","scope":3106,"src":"11493:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2979,"name":"address","nodeType":"ElementaryTypeName","src":"11493:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2982,"mutability":"mutable","name":"tokenAmountOut","nameLocation":"11525:14:15","nodeType":"VariableDeclaration","scope":3106,"src":"11520:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2981,"name":"uint","nodeType":"ElementaryTypeName","src":"11520:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2984,"mutability":"mutable","name":"maxPrice","nameLocation":"11555:8:15","nodeType":"VariableDeclaration","scope":3106,"src":"11550:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2983,"name":"uint","nodeType":"ElementaryTypeName","src":"11550:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11429:141:15"},"returnParameters":{"id":2988,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2987,"mutability":"mutable","name":"tokenAmountIn","nameLocation":"11594:13:15","nodeType":"VariableDeclaration","scope":3106,"src":"11589:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2986,"name":"uint","nodeType":"ElementaryTypeName","src":"11589:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11588:20:15"},"scope":4425,"src":"11401:1416:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3290,"nodeType":"Block","src":"13121:1386:15","statements":[{"assignments":[3120],"declarations":[{"constant":false,"id":3120,"mutability":"mutable","name":"totalSupply","nameLocation":"13140:11:15","nodeType":"VariableDeclaration","scope":3290,"src":"13132:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3119,"name":"uint256","nodeType":"ElementaryTypeName","src":"13132:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3123,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":3121,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1224,"src":"13154:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":3122,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13154:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13132:35:15"},{"assignments":[3125],"declarations":[{"constant":false,"id":3125,"mutability":"mutable","name":"totalValue","nameLocation":"13186:10:15","nodeType":"VariableDeclaration","scope":3290,"src":"13178:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3124,"name":"uint256","nodeType":"ElementaryTypeName","src":"13178:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3127,"initialValue":{"hexValue":"30","id":3126,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13199:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13178:22:15"},{"assignments":[3132],"declarations":[{"constant":false,"id":3132,"mutability":"mutable","name":"_reserves","nameLocation":"13228:9:15","nodeType":"VariableDeclaration","scope":3290,"src":"13211:26:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3130,"name":"uint256","nodeType":"ElementaryTypeName","src":"13211:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3131,"nodeType":"ArrayTypeName","src":"13211:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":3135,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":3133,"name":"getReserves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3712,"src":"13240:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function () view returns (uint256[] memory)"}},"id":3134,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13240:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"13211:42:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3137,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2235,"src":"13272:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2255_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13283:6:15","memberName":"length","nodeType":"MemberAccess","src":"13272:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3139,"name":"_reserves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3132,"src":"13293:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13303:6:15","memberName":"length","nodeType":"MemberAccess","src":"13293:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13272:37:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964207265736572766573206c656e677468","id":3142,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13311:25:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_788ce755d61da147edad70af92467c8a383af859573990e9defde5b6e0bdf24d","typeString":"literal_string \"Invalid reserves length\""},"value":"Invalid reserves length"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_788ce755d61da147edad70af92467c8a383af859573990e9defde5b6e0bdf24d","typeString":"literal_string \"Invalid reserves length\""}],"id":3136,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13264:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13264:73:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3144,"nodeType":"ExpressionStatement","src":"13264:73:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3146,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2235,"src":"13356:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2255_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13367:6:15","memberName":"length","nodeType":"MemberAccess","src":"13356:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13376:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13356:21:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f20617373657473","id":3150,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13379:11:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_195739df032cb3c07c5ed70a4cae73c5d077df4296263c6db3d1f3b4671efbd0","typeString":"literal_string \"No assets\""},"value":"No assets"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_195739df032cb3c07c5ed70a4cae73c5d077df4296263c6db3d1f3b4671efbd0","typeString":"literal_string \"No assets\""}],"id":3145,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13348:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3151,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13348:43:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3152,"nodeType":"ExpressionStatement","src":"13348:43:15"},{"body":{"id":3184,"nodeType":"Block","src":"13452:175:15","statements":[{"assignments":[3165],"declarations":[{"constant":false,"id":3165,"mutability":"mutable","name":"asset","nameLocation":"13475:5:15","nodeType":"VariableDeclaration","scope":3184,"src":"13467:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3164,"name":"address","nodeType":"ElementaryTypeName","src":"13467:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3170,"initialValue":{"expression":{"baseExpression":{"id":3166,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2235,"src":"13483:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2255_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3168,"indexExpression":{"id":3167,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3154,"src":"13494:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13483:13:15","typeDescriptions":{"typeIdentifier":"t_struct$_AssetInfo_$2255_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref"}},"id":3169,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13497:5:15","memberName":"asset","nodeType":"MemberAccess","referencedDeclaration":2252,"src":"13483:19:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"13467:35:15"},{"assignments":[3172],"declarations":[{"constant":false,"id":3172,"mutability":"mutable","name":"valuation","nameLocation":"13527:9:15","nodeType":"VariableDeclaration","scope":3184,"src":"13519:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3171,"name":"uint256","nodeType":"ElementaryTypeName","src":"13519:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3179,"initialValue":{"arguments":[{"id":3174,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3165,"src":"13559:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":3175,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3112,"src":"13566:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3177,"indexExpression":{"id":3176,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3154,"src":"13574:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13566:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3173,"name":"_convertTokenToBase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4342,"src":"13539:19:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view returns (uint256)"}},"id":3178,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13539:38:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13519:58:15"},{"expression":{"id":3182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3180,"name":"totalValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3125,"src":"13592:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":3181,"name":"valuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3172,"src":"13606:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13592:23:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3183,"nodeType":"ExpressionStatement","src":"13592:23:15"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3157,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3154,"src":"13424:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3158,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2235,"src":"13428:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2255_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13439:6:15","memberName":"length","nodeType":"MemberAccess","src":"13428:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13424:21:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3185,"initializationExpression":{"assignments":[3154],"declarations":[{"constant":false,"id":3154,"mutability":"mutable","name":"i","nameLocation":"13417:1:15","nodeType":"VariableDeclaration","scope":3185,"src":"13409:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3153,"name":"uint256","nodeType":"ElementaryTypeName","src":"13409:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3156,"initialValue":{"hexValue":"30","id":3155,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13421:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13409:13:15"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"13447:3:15","subExpression":{"id":3161,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3154,"src":"13447:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3163,"nodeType":"ExpressionStatement","src":"13447:3:15"},"nodeType":"ForStatement","src":"13404:223:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3187,"name":"totalValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3125,"src":"13647:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3188,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13660:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13647:14:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f74616c2076616c7565206d7573742062652067726561746572207468616e2030","id":3190,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13663:36:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_e8ec4a06d76118e3b24afbc30b183e086aa6aaa6e137c81160fc8d59e1a33e3f","typeString":"literal_string \"Total value must be greater than 0\""},"value":"Total value must be greater than 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e8ec4a06d76118e3b24afbc30b183e086aa6aaa6e137c81160fc8d59e1a33e3f","typeString":"literal_string \"Total value must be greater than 0\""}],"id":3186,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13639:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3191,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13639:61:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3192,"nodeType":"ExpressionStatement","src":"13639:61:15"},{"assignments":[3194],"declarations":[{"constant":false,"id":3194,"mutability":"mutable","name":"toMint","nameLocation":"13721:6:15","nodeType":"VariableDeclaration","scope":3290,"src":"13713:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3193,"name":"uint256","nodeType":"ElementaryTypeName","src":"13713:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3195,"nodeType":"VariableDeclarationStatement","src":"13713:14:15"},{"assignments":[3197],"declarations":[{"constant":false,"id":3197,"mutability":"mutable","name":"baseDecimal","nameLocation":"13806:11:15","nodeType":"VariableDeclaration","scope":3290,"src":"13801:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3196,"name":"uint","nodeType":"ElementaryTypeName","src":"13801:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3203,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":3199,"name":"baseAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2248,"src":"13835:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3198,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1755,"src":"13820:14:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20Metadata_$1755_$","typeString":"type(contract IERC20Metadata)"}},"id":3200,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13820:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Metadata_$1755","typeString":"contract IERC20Metadata"}},"id":3201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13846:8:15","memberName":"decimals","nodeType":"MemberAccess","referencedDeclaration":1754,"src":"13820:34:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint8_$","typeString":"function () view external returns (uint8)"}},"id":3202,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13820:36:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"13801:55:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3204,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3120,"src":"13873:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3205,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13888:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13873:16:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3247,"nodeType":"Block","src":"13968:260:15","statements":[{"assignments":[3219,null],"declarations":[{"constant":false,"id":3219,"mutability":"mutable","name":"totalLiquidity","nameLocation":"13992:14:15","nodeType":"VariableDeclaration","scope":3247,"src":"13984:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3218,"name":"uint256","nodeType":"ElementaryTypeName","src":"13984:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},null],"id":3222,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":3220,"name":"_computeTotalValuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3913,"src":"14012:22:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function () view returns (uint256,uint256[] memory)"}},"id":3221,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14012:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256,uint256[] memory)"}},"nodeType":"VariableDeclarationStatement","src":"13983:53:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3224,"name":"totalLiquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3219,"src":"14059:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14076:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14059:18:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f74616c206c6971756964697479206d7573742062652067726561746572207468616e2030","id":3227,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14079:40:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_a245c00c976af272c663e732300fe860097516364a0d92887494f54e860fa54c","typeString":"literal_string \"Total liquidity must be greater than 0\""},"value":"Total liquidity must be greater than 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a245c00c976af272c663e732300fe860097516364a0d92887494f54e860fa54c","typeString":"literal_string \"Total liquidity must be greater than 0\""}],"id":3223,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14051:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3228,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14051:69:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3229,"nodeType":"ExpressionStatement","src":"14051:69:15"},{"expression":{"id":3245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3230,"name":"toMint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3194,"src":"14135:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"id":3231,"name":"totalValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3125,"src":"14147:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3232,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14146:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3233,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3120,"src":"14161:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14146:26:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3235,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14145:28:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3236,"name":"totalLiquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3219,"src":"14176:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14145:45:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3238,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14144:47:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"id":3241,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14194:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3138","id":3240,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14200:2:15","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"14194:8:15","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}},"src":"14144:58:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3243,"name":"baseDecimal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3197,"src":"14205:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14144:72:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14135:81:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3246,"nodeType":"ExpressionStatement","src":"14135:81:15"}]},"id":3248,"nodeType":"IfStatement","src":"13869:359:15","trueBody":{"id":3217,"nodeType":"Block","src":"13891:71:15","statements":[{"expression":{"id":3215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3207,"name":"toMint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3194,"src":"13906:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3208,"name":"totalValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3125,"src":"13915:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"id":3211,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3209,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13928:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3138","id":3210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13934:2:15","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"13928:8:15","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}},"src":"13915:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3213,"name":"baseDecimal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3197,"src":"13939:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13915:35:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13906:44:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3216,"nodeType":"ExpressionStatement","src":"13906:44:15"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3250,"name":"toMint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3194,"src":"14246:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14256:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14246:11:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d696e74207174792069732030","id":3253,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14259:15:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_50327403b25acc6e0d15796c676b8320f8d9ffcece005326d31f4226e4f741bb","typeString":"literal_string \"Mint qty is 0\""},"value":"Mint qty is 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_50327403b25acc6e0d15796c676b8320f8d9ffcece005326d31f4226e4f741bb","typeString":"literal_string \"Mint qty is 0\""}],"id":3249,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14238:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3254,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14238:37:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3255,"nodeType":"ExpressionStatement","src":"14238:37:15"},{"assignments":[3257],"declarations":[{"constant":false,"id":3257,"mutability":"mutable","name":"b4","nameLocation":"14296:2:15","nodeType":"VariableDeclaration","scope":3290,"src":"14288:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3256,"name":"uint256","nodeType":"ElementaryTypeName","src":"14288:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3262,"initialValue":{"arguments":[{"expression":{"id":3259,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"14311:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14315:6:15","memberName":"sender","nodeType":"MemberAccess","src":"14311:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3258,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1237,"src":"14301:9:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":3261,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14301:21:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"14288:34:15"},{"expression":{"arguments":[{"id":3264,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3109,"src":"14339:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3265,"name":"toMint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3194,"src":"14343:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3263,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1491,"src":"14333:5:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":3266,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14333:17:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3267,"nodeType":"ExpressionStatement","src":"14333:17:15"},{"assignments":[3269],"declarations":[{"constant":false,"id":3269,"mutability":"mutable","name":"b","nameLocation":"14369:1:15","nodeType":"VariableDeclaration","scope":3290,"src":"14361:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3268,"name":"uint256","nodeType":"ElementaryTypeName","src":"14361:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3275,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3271,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3109,"src":"14383:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3270,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1237,"src":"14373:9:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":3272,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14373:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3273,"name":"b4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3257,"src":"14389:2:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14373:18:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"14361:30:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3277,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3269,"src":"14412:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3278,"name":"toMint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3194,"src":"14417:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14412:11:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d696e74204661696c6564","id":3280,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14425:13:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_34ef1863090c1d6424986d336eb7c969d5c87770215770a2698790d3d79274ce","typeString":"literal_string \"Mint Failed\""},"value":"Mint Failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_34ef1863090c1d6424986d336eb7c969d5c87770215770a2698790d3d79274ce","typeString":"literal_string \"Mint Failed\""}],"id":3276,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14404:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3281,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14404:35:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3282,"nodeType":"ExpressionStatement","src":"14404:35:15"},{"eventCall":{"arguments":[{"id":3284,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3109,"src":"14462:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3285,"name":"toMint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3194,"src":"14466:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3283,"name":"Mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2281,"src":"14457:4:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":3286,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14457:16:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3287,"nodeType":"EmitStatement","src":"14452:21:15"},{"expression":{"id":3288,"name":"toMint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3194,"src":"14493:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3118,"id":3289,"nodeType":"Return","src":"14486:13:15"}]},"documentation":{"id":3107,"nodeType":"StructuredDocumentation","src":"12825:197:15","text":" @dev Mints new tokens and adds them to the specified address.\n @param to The address to which the new tokens will be minted.\n @return The amount of tokens minted."},"functionSelector":"de836ebd","id":3291,"implemented":true,"kind":"function","modifiers":[{"id":3115,"kind":"modifierInvocation","modifierName":{"id":3114,"name":"onlyPeriphery","nameLocations":["13089:13:15"],"nodeType":"IdentifierPath","referencedDeclaration":2390,"src":"13089:13:15"},"nodeType":"ModifierInvocation","src":"13089:13:15"}],"name":"mint","nameLocation":"13037:4:15","nodeType":"FunctionDefinition","parameters":{"id":3113,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3109,"mutability":"mutable","name":"to","nameLocation":"13050:2:15","nodeType":"VariableDeclaration","scope":3291,"src":"13042:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3108,"name":"address","nodeType":"ElementaryTypeName","src":"13042:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3112,"mutability":"mutable","name":"amounts","nameLocation":"13071:7:15","nodeType":"VariableDeclaration","scope":3291,"src":"13054:24:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3110,"name":"uint256","nodeType":"ElementaryTypeName","src":"13054:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3111,"nodeType":"ArrayTypeName","src":"13054:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"13041:38:15"},"returnParameters":{"id":3118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3117,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3291,"src":"13112:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3116,"name":"uint256","nodeType":"ElementaryTypeName","src":"13112:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13111:9:15"},"scope":4425,"src":"13028:1479:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3446,"nodeType":"Block","src":"15604:1099:15","statements":[{"assignments":[3303],"declarations":[{"constant":false,"id":3303,"mutability":"mutable","name":"share","nameLocation":"15623:5:15","nodeType":"VariableDeclaration","scope":3446,"src":"15615:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3302,"name":"uint256","nodeType":"ElementaryTypeName","src":"15615:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3310,"initialValue":{"arguments":[{"arguments":[{"id":3307,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"15649:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Pool_$4425","typeString":"contract BaluniV1Pool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniV1Pool_$4425","typeString":"contract BaluniV1Pool"}],"id":3306,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15641:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3305,"name":"address","nodeType":"ElementaryTypeName","src":"15641:7:15","typeDescriptions":{}}},"id":3308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15641:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3304,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1237,"src":"15631:9:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":3309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15631:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15615:40:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3312,"name":"share","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3303,"src":"15674:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3313,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15682:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"15674:9:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5368617265206d7573742062652067726561746572207468616e2030","id":3315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15685:30:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_37b2136db8906a0fa9dcfb36fa22f3e5724d70ae1dfd30e29853723b16bc684b","typeString":"literal_string \"Share must be greater than 0\""},"value":"Share must be greater than 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_37b2136db8906a0fa9dcfb36fa22f3e5724d70ae1dfd30e29853723b16bc684b","typeString":"literal_string \"Share must be greater than 0\""}],"id":3311,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"15666:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3316,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15666:50:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3317,"nodeType":"ExpressionStatement","src":"15666:50:15"},{"assignments":[3319],"declarations":[{"constant":false,"id":3319,"mutability":"mutable","name":"totalSupply","nameLocation":"15737:11:15","nodeType":"VariableDeclaration","scope":3446,"src":"15729:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3318,"name":"uint256","nodeType":"ElementaryTypeName","src":"15729:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3322,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":3320,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1224,"src":"15751:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":3321,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15751:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15729:35:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3324,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3319,"src":"15783:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3325,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15797:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"15783:15:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f206c6971756964697479","id":3327,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15800:14:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_379a432f00aa43993bfbf4e01492a8eab5138dcd2e395864ede728644390fc31","typeString":"literal_string \"No liquidity\""},"value":"No liquidity"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_379a432f00aa43993bfbf4e01492a8eab5138dcd2e395864ede728644390fc31","typeString":"literal_string \"No liquidity\""}],"id":3323,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"15775:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3328,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15775:40:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3329,"nodeType":"ExpressionStatement","src":"15775:40:15"},{"assignments":[3334],"declarations":[{"constant":false,"id":3334,"mutability":"mutable","name":"amounts","nameLocation":"15845:7:15","nodeType":"VariableDeclaration","scope":3446,"src":"15828:24:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3332,"name":"uint256","nodeType":"ElementaryTypeName","src":"15828:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3333,"nodeType":"ArrayTypeName","src":"15828:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":3341,"initialValue":{"arguments":[{"expression":{"id":3338,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2235,"src":"15869:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2255_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15880:6:15","memberName":"length","nodeType":"MemberAccess","src":"15869:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3337,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"15855:13:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":3335,"name":"uint256","nodeType":"ElementaryTypeName","src":"15859:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3336,"nodeType":"ArrayTypeName","src":"15859:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":3340,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15855:32:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"15828:59:15"},{"assignments":[3343],"declarations":[{"constant":false,"id":3343,"mutability":"mutable","name":"fee","nameLocation":"15906:3:15","nodeType":"VariableDeclaration","scope":3446,"src":"15898:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3342,"name":"uint256","nodeType":"ElementaryTypeName","src":"15898:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3350,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3344,"name":"share","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3303,"src":"15913:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3345,"name":"SWAP_FEE_BPS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2246,"src":"15921:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15913:20:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3347,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15912:22:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3130303030","id":3348,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15937:5:15","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"src":"15912:30:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15898:44:15"},{"assignments":[3352],"declarations":[{"constant":false,"id":3352,"mutability":"mutable","name":"shareAfterFee","nameLocation":"15961:13:15","nodeType":"VariableDeclaration","scope":3446,"src":"15953:21:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3351,"name":"uint256","nodeType":"ElementaryTypeName","src":"15953:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3356,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3353,"name":"share","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3303,"src":"15977:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3354,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3343,"src":"15985:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15977:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15953:35:15"},{"body":{"id":3395,"nodeType":"Block","src":"16049:256:15","statements":[{"assignments":[3369],"declarations":[{"constant":false,"id":3369,"mutability":"mutable","name":"assetBalance","nameLocation":"16072:12:15","nodeType":"VariableDeclaration","scope":3395,"src":"16064:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3368,"name":"uint256","nodeType":"ElementaryTypeName","src":"16064:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3383,"initialValue":{"arguments":[{"arguments":[{"id":3376,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"16163:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Pool_$4425","typeString":"contract BaluniV1Pool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniV1Pool_$4425","typeString":"contract BaluniV1Pool"}],"id":3375,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16155:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3374,"name":"address","nodeType":"ElementaryTypeName","src":"16155:7:15","typeDescriptions":{}}},"id":3377,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16155:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"baseExpression":{"id":3378,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2235,"src":"16187:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2255_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3380,"indexExpression":{"id":3379,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3358,"src":"16198:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16187:13:15","typeDescriptions":{"typeIdentifier":"t_struct$_AssetInfo_$2255_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref"}},"id":3381,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16201:5:15","memberName":"asset","nodeType":"MemberAccess","referencedDeclaration":2252,"src":"16187:19:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":3371,"name":"periphery","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2241,"src":"16110:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3370,"name":"IBaluniV1PoolPeriphery","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6140,"src":"16087:22:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBaluniV1PoolPeriphery_$6140_$","typeString":"type(contract IBaluniV1PoolPeriphery)"}},"id":3372,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16087:33:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1PoolPeriphery_$6140","typeString":"contract IBaluniV1PoolPeriphery"}},"id":3373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16121:15:15","memberName":"getAssetReserve","nodeType":"MemberAccess","referencedDeclaration":6139,"src":"16087:49:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":3382,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16087:134:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16064:157:15"},{"expression":{"id":3393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3384,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3334,"src":"16236:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3386,"indexExpression":{"id":3385,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3358,"src":"16244:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"16236:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3387,"name":"assetBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3369,"src":"16250:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3388,"name":"shareAfterFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3352,"src":"16265:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16250:28:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3390,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"16249:30:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3391,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3319,"src":"16282:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16249:44:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16236:57:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3394,"nodeType":"ExpressionStatement","src":"16236:57:15"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3361,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3358,"src":"16021:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3362,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2235,"src":"16025:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2255_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16036:6:15","memberName":"length","nodeType":"MemberAccess","src":"16025:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16021:21:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3396,"initializationExpression":{"assignments":[3358],"declarations":[{"constant":false,"id":3358,"mutability":"mutable","name":"i","nameLocation":"16014:1:15","nodeType":"VariableDeclaration","scope":3396,"src":"16006:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3357,"name":"uint256","nodeType":"ElementaryTypeName","src":"16006:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3360,"initialValue":{"hexValue":"30","id":3359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16018:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"16006:13:15"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"16044:3:15","subExpression":{"id":3365,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3358,"src":"16044:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3367,"nodeType":"ExpressionStatement","src":"16044:3:15"},"nodeType":"ForStatement","src":"16001:304:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":3401,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"16343:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Pool_$4425","typeString":"contract BaluniV1Pool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniV1Pool_$4425","typeString":"contract BaluniV1Pool"}],"id":3400,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16335:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3399,"name":"address","nodeType":"ElementaryTypeName","src":"16335:7:15","typeDescriptions":{}}},"id":3402,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16335:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3398,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1237,"src":"16325:9:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":3403,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16325:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":3404,"name":"shareAfterFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3352,"src":"16353:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16325:41:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e742042414c554e49206c6971756964697479","id":3406,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16368:31:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_fc2f8692ca59eb8838d740ab96a08e7dab54c967cc56eb0a9b640ce78eb1103e","typeString":"literal_string \"Insufficient BALUNI liquidity\""},"value":"Insufficient BALUNI liquidity"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fc2f8692ca59eb8838d740ab96a08e7dab54c967cc56eb0a9b640ce78eb1103e","typeString":"literal_string \"Insufficient BALUNI liquidity\""}],"id":3397,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"16317:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3407,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16317:83:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3408,"nodeType":"ExpressionStatement","src":"16317:83:15"},{"assignments":[3410],"declarations":[{"constant":false,"id":3410,"mutability":"mutable","name":"feeTransferSuccess","nameLocation":"16418:18:15","nodeType":"VariableDeclaration","scope":3446,"src":"16413:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3409,"name":"bool","nodeType":"ElementaryTypeName","src":"16413:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3425,"initialValue":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":3419,"name":"rebalancer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2250,"src":"16490:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3418,"name":"IBaluniV1Rebalancer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6261,"src":"16470:19:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBaluniV1Rebalancer_$6261_$","typeString":"type(contract IBaluniV1Rebalancer)"}},"id":3420,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16470:31:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Rebalancer_$6261","typeString":"contract IBaluniV1Rebalancer"}},"id":3421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16502:8:15","memberName":"treasury","nodeType":"MemberAccess","referencedDeclaration":6208,"src":"16470:40:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":3422,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16470:42:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3423,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3343,"src":"16514:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"arguments":[{"id":3414,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"16454:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Pool_$4425","typeString":"contract BaluniV1Pool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniV1Pool_$4425","typeString":"contract BaluniV1Pool"}],"id":3413,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16446:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3412,"name":"address","nodeType":"ElementaryTypeName","src":"16446:7:15","typeDescriptions":{}}},"id":3415,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16446:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3411,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1729,"src":"16439:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1729_$","typeString":"type(contract IERC20)"}},"id":3416,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16439:21:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"}},"id":3417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16461:8:15","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":1696,"src":"16439:30:15","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":3424,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16439:79:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"16413:105:15"},{"expression":{"arguments":[{"id":3427,"name":"feeTransferSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3410,"src":"16537:18:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"466565207472616e73666572206661696c6564","id":3428,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16557:21:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_5ce83e457e48ac9624285a3c527b5c2f9ccbef788eaf8b73a2271dc0a760bc56","typeString":"literal_string \"Fee transfer failed\""},"value":"Fee transfer failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5ce83e457e48ac9624285a3c527b5c2f9ccbef788eaf8b73a2271dc0a760bc56","typeString":"literal_string \"Fee transfer failed\""}],"id":3426,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"16529:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3429,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16529:50:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3430,"nodeType":"ExpressionStatement","src":"16529:50:15"},{"expression":{"arguments":[{"arguments":[{"id":3434,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"16606:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Pool_$4425","typeString":"contract BaluniV1Pool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniV1Pool_$4425","typeString":"contract BaluniV1Pool"}],"id":3433,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16598:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3432,"name":"address","nodeType":"ElementaryTypeName","src":"16598:7:15","typeDescriptions":{}}},"id":3435,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16598:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3436,"name":"shareAfterFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3352,"src":"16613:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3431,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1524,"src":"16592:5:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":3437,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16592:35:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3438,"nodeType":"ExpressionStatement","src":"16592:35:15"},{"eventCall":{"arguments":[{"id":3440,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3294,"src":"16650:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3441,"name":"shareAfterFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3352,"src":"16654:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3439,"name":"Burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2275,"src":"16645:4:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":3442,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16645:23:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3443,"nodeType":"EmitStatement","src":"16640:28:15"},{"expression":{"id":3444,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3334,"src":"16688:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":3301,"id":3445,"nodeType":"Return","src":"16681:14:15"}]},"documentation":{"id":3292,"nodeType":"StructuredDocumentation","src":"14515:1007:15","text":" @dev Burns the pool tokens and transfers the underlying assets to the specified address.\n @param to The address to transfer the underlying assets to.\n @notice This function can only be called by the periphery contract.\n @notice The pool tokens must have a balance greater than 0.\n @notice The total supply of pool tokens must be greater than 0.\n @notice The function calculates the amounts of each underlying asset to transfer based on the share of pool tokens being burned.\n @notice A fee is deducted from the share of pool tokens being burned and transferred to the treasury address.\n @notice The function checks if the pool has sufficient liquidity before performing any transfers.\n @notice If any transfer fails, the function reverts the entire operation.\n @notice After the transfers, the function updates the reserves of the pool.\n @notice Emits a `Burn` event with the address and share of pool tokens burned."},"functionSelector":"89afcb44","id":3447,"implemented":true,"kind":"function","modifiers":[{"id":3297,"kind":"modifierInvocation","modifierName":{"id":3296,"name":"onlyPeriphery","nameLocations":["15563:13:15"],"nodeType":"IdentifierPath","referencedDeclaration":2390,"src":"15563:13:15"},"nodeType":"ModifierInvocation","src":"15563:13:15"}],"name":"burn","nameLocation":"15537:4:15","nodeType":"FunctionDefinition","parameters":{"id":3295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3294,"mutability":"mutable","name":"to","nameLocation":"15550:2:15","nodeType":"VariableDeclaration","scope":3447,"src":"15542:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3293,"name":"address","nodeType":"ElementaryTypeName","src":"15542:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"15541:12:15"},"returnParameters":{"id":3301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3300,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3447,"src":"15586:16:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3298,"name":"uint256","nodeType":"ElementaryTypeName","src":"15586:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3299,"nodeType":"ArrayTypeName","src":"15586:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"15585:18:15"},"scope":4425,"src":"15528:1175:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3468,"nodeType":"Block","src":"17206:93:15","statements":[{"expression":{"arguments":[{"id":3463,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3450,"src":"17264:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3464,"name":"toToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3452,"src":"17275:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3465,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3454,"src":"17284:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":3460,"name":"rebalancer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2250,"src":"17244:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3459,"name":"IBaluniV1Rebalancer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6261,"src":"17224:19:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBaluniV1Rebalancer_$6261_$","typeString":"type(contract IBaluniV1Rebalancer)"}},"id":3461,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17224:31:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Rebalancer_$6261","typeString":"contract IBaluniV1Rebalancer"}},"id":3462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17256:7:15","memberName":"convert","nodeType":"MemberAccess","referencedDeclaration":6260,"src":"17224:39:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,address,uint256) view external returns (uint256)"}},"id":3466,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17224:67:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3458,"id":3467,"nodeType":"Return","src":"17217:74:15"}]},"documentation":{"id":3448,"nodeType":"StructuredDocumentation","src":"16711:385:15","text":" @dev Calculates the amount of `toToken` that will be received when swapping `fromToken` for `toToken`.\n @param fromToken The address of the token being swapped from.\n @param toToken The address of the token being swapped to.\n @param amount The amount of `fromToken` being swapped.\n @return The amount of `toToken` that will be received."},"functionSelector":"4aa06652","id":3469,"implemented":true,"kind":"function","modifiers":[],"name":"getAmountOut","nameLocation":"17111:12:15","nodeType":"FunctionDefinition","parameters":{"id":3455,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3450,"mutability":"mutable","name":"fromToken","nameLocation":"17132:9:15","nodeType":"VariableDeclaration","scope":3469,"src":"17124:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3449,"name":"address","nodeType":"ElementaryTypeName","src":"17124:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3452,"mutability":"mutable","name":"toToken","nameLocation":"17151:7:15","nodeType":"VariableDeclaration","scope":3469,"src":"17143:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3451,"name":"address","nodeType":"ElementaryTypeName","src":"17143:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3454,"mutability":"mutable","name":"amount","nameLocation":"17168:6:15","nodeType":"VariableDeclaration","scope":3469,"src":"17160:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3453,"name":"uint256","nodeType":"ElementaryTypeName","src":"17160:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17123:52:15"},"returnParameters":{"id":3458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3457,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3469,"src":"17197:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3456,"name":"uint256","nodeType":"ElementaryTypeName","src":"17197:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17196:9:15"},"scope":4425,"src":"17102:197:15","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3490,"nodeType":"Block","src":"17522:116:15","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":3482,"name":"isRebalanceNeeded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4388,"src":"17541:17:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":3483,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17541:19:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"526562616c616e6365206e6f74206e6565646564","id":3484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17562:22:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_e4fcae9c0286e861087281117e0a3185ced905823104b290e1fe3ba826d8d280","typeString":"literal_string \"Rebalance not needed\""},"value":"Rebalance not needed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e4fcae9c0286e861087281117e0a3185ced905823104b290e1fe3ba826d8d280","typeString":"literal_string \"Rebalance not needed\""}],"id":3481,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"17533:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3485,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17533:52:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3486,"nodeType":"ExpressionStatement","src":"17533:52:15"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3487,"name":"_performRebalanceIfNeeded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4131,"src":"17603:25:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function () returns (uint256[] memory,uint256[] memory)"}},"id":3488,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17603:27:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256[] memory,uint256[] memory)"}},"functionReturnParameters":3480,"id":3489,"nodeType":"Return","src":"17596:34:15"}]},"documentation":{"id":3470,"nodeType":"StructuredDocumentation","src":"17307:44:15","text":" @dev Performs rebalance"},"functionSelector":"f47b45e8","id":3491,"implemented":true,"kind":"function","modifiers":[{"id":3473,"kind":"modifierInvocation","modifierName":{"id":3472,"name":"onlyPeriphery","nameLocations":["17420:13:15"],"nodeType":"IdentifierPath","referencedDeclaration":2390,"src":"17420:13:15"},"nodeType":"ModifierInvocation","src":"17420:13:15"}],"name":"performRebalanceIfNeeded","nameLocation":"17366:24:15","nodeType":"FunctionDefinition","parameters":{"id":3471,"nodeType":"ParameterList","parameters":[],"src":"17390:2:15"},"returnParameters":{"id":3480,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3476,"mutability":"mutable","name":"amountsToAdd","nameLocation":"17469:12:15","nodeType":"VariableDeclaration","scope":3491,"src":"17452:29:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3474,"name":"uint256","nodeType":"ElementaryTypeName","src":"17452:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3475,"nodeType":"ArrayTypeName","src":"17452:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3479,"mutability":"mutable","name":"amountsToRemove","nameLocation":"17500:15:15","nodeType":"VariableDeclaration","scope":3491,"src":"17483:32:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3477,"name":"uint256","nodeType":"ElementaryTypeName","src":"17483:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3478,"nodeType":"ArrayTypeName","src":"17483:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"17451:65:15"},"scope":4425,"src":"17357:281:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3598,"nodeType":"Block","src":"18023:764:15","statements":[{"assignments":[3502,3505],"declarations":[{"constant":false,"id":3502,"mutability":"mutable","name":"totVal","nameLocation":"18043:6:15","nodeType":"VariableDeclaration","scope":3598,"src":"18035:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3501,"name":"uint256","nodeType":"ElementaryTypeName","src":"18035:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3505,"mutability":"mutable","name":"valuations","nameLocation":"18068:10:15","nodeType":"VariableDeclaration","scope":3598,"src":"18051:27:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3503,"name":"uint256","nodeType":"ElementaryTypeName","src":"18051:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3504,"nodeType":"ArrayTypeName","src":"18051:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":3508,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":3506,"name":"_computeTotalValuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3913,"src":"18082:22:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function () view returns (uint256,uint256[] memory)"}},"id":3507,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18082:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256,uint256[] memory)"}},"nodeType":"VariableDeclarationStatement","src":"18034:72:15"},{"assignments":[3510],"declarations":[{"constant":false,"id":3510,"mutability":"mutable","name":"numAssets","nameLocation":"18125:9:15","nodeType":"VariableDeclaration","scope":3598,"src":"18117:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3509,"name":"uint256","nodeType":"ElementaryTypeName","src":"18117:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3513,"initialValue":{"expression":{"id":3511,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2235,"src":"18137:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2255_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18148:6:15","memberName":"length","nodeType":"MemberAccess","src":"18137:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"18117:37:15"},{"expression":{"id":3520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3514,"name":"directions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3496,"src":"18167:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3518,"name":"numAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3510,"src":"18191:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3517,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"18180:10:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bool_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bool[] memory)"},"typeName":{"baseType":{"id":3515,"name":"bool","nodeType":"ElementaryTypeName","src":"18184:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3516,"nodeType":"ArrayTypeName","src":"18184:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}}},"id":3519,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18180:21:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"src":"18167:34:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"id":3521,"nodeType":"ExpressionStatement","src":"18167:34:15"},{"expression":{"id":3528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3522,"name":"deviations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3499,"src":"18212:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3526,"name":"numAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3510,"src":"18239:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3525,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"18225:13:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":3523,"name":"uint256","nodeType":"ElementaryTypeName","src":"18229:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3524,"nodeType":"ArrayTypeName","src":"18229:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":3527,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18225:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"src":"18212:37:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3529,"nodeType":"ExpressionStatement","src":"18212:37:15"},{"body":{"id":3592,"nodeType":"Block","src":"18302:434:15","statements":[{"assignments":[3541],"declarations":[{"constant":false,"id":3541,"mutability":"mutable","name":"currentWeight","nameLocation":"18325:13:15","nodeType":"VariableDeclaration","scope":3592,"src":"18317:21:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3540,"name":"uint256","nodeType":"ElementaryTypeName","src":"18317:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3550,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":3542,"name":"valuations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3505,"src":"18342:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3544,"indexExpression":{"id":3543,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3531,"src":"18353:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18342:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3130303030","id":3545,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18358:5:15","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"src":"18342:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3547,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"18341:23:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3548,"name":"totVal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3502,"src":"18367:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18341:32:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"18317:56:15"},{"assignments":[3552],"declarations":[{"constant":false,"id":3552,"mutability":"mutable","name":"targetWeight","nameLocation":"18396:12:15","nodeType":"VariableDeclaration","scope":3592,"src":"18388:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3551,"name":"uint256","nodeType":"ElementaryTypeName","src":"18388:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3557,"initialValue":{"expression":{"baseExpression":{"id":3553,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2235,"src":"18411:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2255_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3555,"indexExpression":{"id":3554,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3531,"src":"18422:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18411:13:15","typeDescriptions":{"typeIdentifier":"t_struct$_AssetInfo_$2255_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref"}},"id":3556,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18425:6:15","memberName":"weight","nodeType":"MemberAccess","referencedDeclaration":2254,"src":"18411:20:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"18388:43:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3558,"name":"currentWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3541,"src":"18452:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3559,"name":"targetWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3552,"src":"18468:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18452:28:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3590,"nodeType":"Block","src":"18606:119:15","statements":[{"expression":{"id":3582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3576,"name":"deviations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3499,"src":"18625:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3578,"indexExpression":{"id":3577,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3531,"src":"18636:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18625:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3579,"name":"targetWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3552,"src":"18641:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3580,"name":"currentWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3541,"src":"18656:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18641:28:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18625:44:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3583,"nodeType":"ExpressionStatement","src":"18625:44:15"},{"expression":{"id":3588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3584,"name":"directions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3496,"src":"18688:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"id":3586,"indexExpression":{"id":3585,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3531,"src":"18699:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18688:13:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":3587,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"18704:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"18688:21:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3589,"nodeType":"ExpressionStatement","src":"18688:21:15"}]},"id":3591,"nodeType":"IfStatement","src":"18448:277:15","trueBody":{"id":3575,"nodeType":"Block","src":"18482:118:15","statements":[{"expression":{"id":3567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3561,"name":"deviations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3499,"src":"18501:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3563,"indexExpression":{"id":3562,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3531,"src":"18512:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18501:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3564,"name":"currentWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3541,"src":"18517:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3565,"name":"targetWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3552,"src":"18533:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18517:28:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18501:44:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3568,"nodeType":"ExpressionStatement","src":"18501:44:15"},{"expression":{"id":3573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3569,"name":"directions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3496,"src":"18564:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"id":3571,"indexExpression":{"id":3570,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3531,"src":"18575:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18564:13:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":3572,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"18580:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"18564:20:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3574,"nodeType":"ExpressionStatement","src":"18564:20:15"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3534,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3531,"src":"18282:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3535,"name":"numAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3510,"src":"18286:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18282:13:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3593,"initializationExpression":{"assignments":[3531],"declarations":[{"constant":false,"id":3531,"mutability":"mutable","name":"i","nameLocation":"18275:1:15","nodeType":"VariableDeclaration","scope":3593,"src":"18267:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3530,"name":"uint256","nodeType":"ElementaryTypeName","src":"18267:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3533,"initialValue":{"hexValue":"30","id":3532,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18279:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"18267:13:15"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18297:3:15","subExpression":{"id":3537,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3531,"src":"18297:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3539,"nodeType":"ExpressionStatement","src":"18297:3:15"},"nodeType":"ForStatement","src":"18262:474:15"},{"expression":{"components":[{"id":3594,"name":"directions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3496,"src":"18756:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},{"id":3595,"name":"deviations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3499,"src":"18768:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"id":3596,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"18755:24:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_bool_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(bool[] memory,uint256[] memory)"}},"functionReturnParameters":3500,"id":3597,"nodeType":"Return","src":"18748:31:15"}]},"documentation":{"id":3492,"nodeType":"StructuredDocumentation","src":"17646:271:15","text":" @dev Returns the deviation between the current weights and target weights of the assets in the pool.\n @return directions An array of boolean values indicating whether the current weight is higher (true) or lower (false) than the target weight."},"functionSelector":"89ab3532","id":3599,"implemented":true,"kind":"function","modifiers":[],"name":"getDeviation","nameLocation":"17932:12:15","nodeType":"FunctionDefinition","parameters":{"id":3493,"nodeType":"ParameterList","parameters":[],"src":"17944:2:15"},"returnParameters":{"id":3500,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3496,"mutability":"mutable","name":"directions","nameLocation":"17982:10:15","nodeType":"VariableDeclaration","scope":3599,"src":"17968:24:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":3494,"name":"bool","nodeType":"ElementaryTypeName","src":"17968:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3495,"nodeType":"ArrayTypeName","src":"17968:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":3499,"mutability":"mutable","name":"deviations","nameLocation":"18011:10:15","nodeType":"VariableDeclaration","scope":3599,"src":"17994:27:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3497,"name":"uint256","nodeType":"ElementaryTypeName","src":"17994:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3498,"nodeType":"ArrayTypeName","src":"17994:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"17967:55:15"},"scope":4425,"src":"17923:864:15","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3627,"nodeType":"Block","src":"19051:199:15","statements":[{"assignments":[null,3611],"declarations":[null,{"constant":false,"id":3611,"mutability":"mutable","name":"usdValuations","nameLocation":"19082:13:15","nodeType":"VariableDeclaration","scope":3627,"src":"19065:30:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3609,"name":"uint256","nodeType":"ElementaryTypeName","src":"19065:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3610,"nodeType":"ArrayTypeName","src":"19065:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":3614,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":3612,"name":"_computeTotalValuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3913,"src":"19099:22:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function () view returns (uint256,uint256[] memory)"}},"id":3613,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19099:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256,uint256[] memory)"}},"nodeType":"VariableDeclarationStatement","src":"19062:61:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3616,"name":"assetIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3602,"src":"19142:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3617,"name":"usdValuations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3611,"src":"19155:13:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19169:6:15","memberName":"length","nodeType":"MemberAccess","src":"19155:20:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19142:33:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420617373657420696e646578","id":3620,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"19177:21:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_f8b105b0b4a7ff5c11f41135d6d4600fd47da6168663f6cb1810745b08d83918","typeString":"literal_string \"Invalid asset index\""},"value":"Invalid asset index"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f8b105b0b4a7ff5c11f41135d6d4600fd47da6168663f6cb1810745b08d83918","typeString":"literal_string \"Invalid asset index\""}],"id":3615,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"19134:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3621,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19134:65:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3622,"nodeType":"ExpressionStatement","src":"19134:65:15"},{"expression":{"baseExpression":{"id":3623,"name":"usdValuations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3611,"src":"19217:13:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3625,"indexExpression":{"id":3624,"name":"assetIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3602,"src":"19231:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19217:25:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3606,"id":3626,"nodeType":"Return","src":"19210:32:15"}]},"documentation":{"id":3600,"nodeType":"StructuredDocumentation","src":"18795:174:15","text":" @dev Returns the liquidity of a specific asset in the pool.\n @param assetIndex The index of the asset.\n @return The liquidity of the asset."},"functionSelector":"cf8fa764","id":3628,"implemented":true,"kind":"function","modifiers":[],"name":"assetLiquidity","nameLocation":"18984:14:15","nodeType":"FunctionDefinition","parameters":{"id":3603,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3602,"mutability":"mutable","name":"assetIndex","nameLocation":"19007:10:15","nodeType":"VariableDeclaration","scope":3628,"src":"18999:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3601,"name":"uint256","nodeType":"ElementaryTypeName","src":"18999:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18998:20:15"},"returnParameters":{"id":3606,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3605,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3628,"src":"19042:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3604,"name":"uint256","nodeType":"ElementaryTypeName","src":"19042:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"19041:9:15"},"scope":4425,"src":"18975:275:15","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":3648,"nodeType":"Block","src":"19624:108:15","statements":[{"expression":{"id":3642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":3637,"name":"totalVal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3632,"src":"19636:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3638,"name":"valuations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3635,"src":"19646:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"id":3639,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"19635:22:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256,uint256[] memory)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"id":3640,"name":"_computeTotalValuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3913,"src":"19660:22:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function () view returns (uint256,uint256[] memory)"}},"id":3641,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19660:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256,uint256[] memory)"}},"src":"19635:49:15","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3643,"nodeType":"ExpressionStatement","src":"19635:49:15"},{"expression":{"components":[{"id":3644,"name":"totalVal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3632,"src":"19703:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3645,"name":"valuations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3635,"src":"19713:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"id":3646,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"19702:22:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256,uint256[] memory)"}},"functionReturnParameters":3636,"id":3647,"nodeType":"Return","src":"19695:29:15"}]},"documentation":{"id":3629,"nodeType":"StructuredDocumentation","src":"19258:257:15","text":" @dev Computes the total valuation of the pool and returns the total valuation and an array of individual valuations.\n @return totalVal The total valuation of the pool.\n @return valuations An array of individual valuations."},"functionSelector":"36bf6e39","id":3649,"implemented":true,"kind":"function","modifiers":[],"name":"computeTotalValuation","nameLocation":"19530:21:15","nodeType":"FunctionDefinition","parameters":{"id":3630,"nodeType":"ParameterList","parameters":[],"src":"19551:2:15"},"returnParameters":{"id":3636,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3632,"mutability":"mutable","name":"totalVal","nameLocation":"19585:8:15","nodeType":"VariableDeclaration","scope":3649,"src":"19577:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3631,"name":"uint256","nodeType":"ElementaryTypeName","src":"19577:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3635,"mutability":"mutable","name":"valuations","nameLocation":"19612:10:15","nodeType":"VariableDeclaration","scope":3649,"src":"19595:27:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3633,"name":"uint256","nodeType":"ElementaryTypeName","src":"19595:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3634,"nodeType":"ArrayTypeName","src":"19595:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"19576:47:15"},"scope":4425,"src":"19521:211:15","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":3662,"nodeType":"Block","src":"19914:92:15","statements":[{"assignments":[3656,null],"declarations":[{"constant":false,"id":3656,"mutability":"mutable","name":"totalVal","nameLocation":"19934:8:15","nodeType":"VariableDeclaration","scope":3662,"src":"19926:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3655,"name":"uint256","nodeType":"ElementaryTypeName","src":"19926:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},null],"id":3659,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":3657,"name":"_computeTotalValuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3913,"src":"19948:22:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function () view returns (uint256,uint256[] memory)"}},"id":3658,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19948:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256,uint256[] memory)"}},"nodeType":"VariableDeclarationStatement","src":"19925:47:15"},{"expression":{"id":3660,"name":"totalVal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3656,"src":"19990:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3654,"id":3661,"nodeType":"Return","src":"19983:15:15"}]},"documentation":{"id":3650,"nodeType":"StructuredDocumentation","src":"19740:115:15","text":" @dev Returns the total liquidity of the pool.\n @return The total liquidity of the pool."},"functionSelector":"1a686502","id":3663,"implemented":true,"kind":"function","modifiers":[],"name":"liquidity","nameLocation":"19870:9:15","nodeType":"FunctionDefinition","parameters":{"id":3651,"nodeType":"ParameterList","parameters":[],"src":"19879:2:15"},"returnParameters":{"id":3654,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3653,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3663,"src":"19905:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3652,"name":"uint256","nodeType":"ElementaryTypeName","src":"19905:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"19904:9:15"},"scope":4425,"src":"19861:145:15","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":3693,"nodeType":"Block","src":"20178:227:15","statements":[{"assignments":[3670,null],"declarations":[{"constant":false,"id":3670,"mutability":"mutable","name":"totalVal","nameLocation":"20198:8:15","nodeType":"VariableDeclaration","scope":3693,"src":"20190:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3669,"name":"uint256","nodeType":"ElementaryTypeName","src":"20190:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},null],"id":3673,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":3671,"name":"_computeTotalValuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3913,"src":"20212:22:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function () view returns (uint256,uint256[] memory)"}},"id":3672,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20212:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256,uint256[] memory)"}},"nodeType":"VariableDeclarationStatement","src":"20189:47:15"},{"assignments":[3675],"declarations":[{"constant":false,"id":3675,"mutability":"mutable","name":"totalSupply","nameLocation":"20255:11:15","nodeType":"VariableDeclaration","scope":3693,"src":"20247:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3674,"name":"uint256","nodeType":"ElementaryTypeName","src":"20247:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3678,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":3676,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1224,"src":"20269:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":3677,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20269:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"20247:35:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3679,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3675,"src":"20297:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3680,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20312:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"20297:16:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3685,"nodeType":"IfStatement","src":"20293:57:15","trueBody":{"id":3684,"nodeType":"Block","src":"20315:35:15","statements":[{"expression":{"hexValue":"30","id":3682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20337:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3668,"id":3683,"nodeType":"Return","src":"20330:8:15"}]}},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3686,"name":"totalVal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3670,"src":"20368:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3687,"name":"ONE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2239,"src":"20379:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20368:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3689,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"20367:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3690,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3675,"src":"20386:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20367:30:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3668,"id":3692,"nodeType":"Return","src":"20360:37:15"}]},"documentation":{"id":3664,"nodeType":"StructuredDocumentation","src":"20014:105:15","text":" @dev Returns the unit price of the pool.\n @return The unit price of the pool."},"functionSelector":"e73faa2d","id":3694,"implemented":true,"kind":"function","modifiers":[],"name":"unitPrice","nameLocation":"20134:9:15","nodeType":"FunctionDefinition","parameters":{"id":3665,"nodeType":"ParameterList","parameters":[],"src":"20143:2:15"},"returnParameters":{"id":3668,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3667,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3694,"src":"20169:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3666,"name":"uint256","nodeType":"ElementaryTypeName","src":"20169:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20168:9:15"},"scope":4425,"src":"20125:280:15","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":3711,"nodeType":"Block","src":"20601:86:15","statements":[{"expression":{"arguments":[{"arguments":[{"id":3707,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"20673:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Pool_$4425","typeString":"contract BaluniV1Pool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniV1Pool_$4425","typeString":"contract BaluniV1Pool"}],"id":3706,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20665:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3705,"name":"address","nodeType":"ElementaryTypeName","src":"20665:7:15","typeDescriptions":{}}},"id":3708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20665:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":3702,"name":"periphery","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2241,"src":"20642:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3701,"name":"IBaluniV1PoolPeriphery","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6140,"src":"20619:22:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBaluniV1PoolPeriphery_$6140_$","typeString":"type(contract IBaluniV1PoolPeriphery)"}},"id":3703,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20619:33:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1PoolPeriphery_$6140","typeString":"contract IBaluniV1PoolPeriphery"}},"id":3704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20653:11:15","memberName":"getReserves","nodeType":"MemberAccess","referencedDeclaration":6130,"src":"20619:45:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (address) view external returns (uint256[] memory)"}},"id":3709,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20619:60:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":3700,"id":3710,"nodeType":"Return","src":"20612:67:15"}]},"documentation":{"id":3695,"nodeType":"StructuredDocumentation","src":"20413:120:15","text":" @dev Returns an array of reserves for each asset in the pool.\n @return An array of reserves."},"functionSelector":"0902f1ac","id":3712,"implemented":true,"kind":"function","modifiers":[],"name":"getReserves","nameLocation":"20548:11:15","nodeType":"FunctionDefinition","parameters":{"id":3696,"nodeType":"ParameterList","parameters":[],"src":"20559:2:15"},"returnParameters":{"id":3700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3699,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3712,"src":"20583:16:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3697,"name":"uint256","nodeType":"ElementaryTypeName","src":"20583:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3698,"nodeType":"ArrayTypeName","src":"20583:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"20582:18:15"},"scope":4425,"src":"20539:148:15","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3731,"nodeType":"Block","src":"20943:97:15","statements":[{"expression":{"arguments":[{"arguments":[{"id":3726,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"21019:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Pool_$4425","typeString":"contract BaluniV1Pool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniV1Pool_$4425","typeString":"contract BaluniV1Pool"}],"id":3725,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21011:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3724,"name":"address","nodeType":"ElementaryTypeName","src":"21011:7:15","typeDescriptions":{}}},"id":3727,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21011:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3728,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3715,"src":"21026:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":3721,"name":"periphery","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2241,"src":"20984:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3720,"name":"IBaluniV1PoolPeriphery","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6140,"src":"20961:22:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBaluniV1PoolPeriphery_$6140_$","typeString":"type(contract IBaluniV1PoolPeriphery)"}},"id":3722,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20961:33:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1PoolPeriphery_$6140","typeString":"contract IBaluniV1PoolPeriphery"}},"id":3723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20995:15:15","memberName":"getAssetReserve","nodeType":"MemberAccess","referencedDeclaration":6139,"src":"20961:49:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":3729,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20961:71:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3719,"id":3730,"nodeType":"Return","src":"20954:78:15"}]},"documentation":{"id":3713,"nodeType":"StructuredDocumentation","src":"20695:172:15","text":" @dev Returns the reserve amount of the specified asset.\n @param asset The address of the asset.\n @return The reserve amount of the asset."},"functionSelector":"b2b55d70","id":3732,"implemented":true,"kind":"function","modifiers":[],"name":"getAssetReserve","nameLocation":"20882:15:15","nodeType":"FunctionDefinition","parameters":{"id":3716,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3715,"mutability":"mutable","name":"asset","nameLocation":"20906:5:15","nodeType":"VariableDeclaration","scope":3732,"src":"20898:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3714,"name":"address","nodeType":"ElementaryTypeName","src":"20898:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"20897:15:15"},"returnParameters":{"id":3719,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3718,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3732,"src":"20934:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3717,"name":"uint256","nodeType":"ElementaryTypeName","src":"20934:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20933:9:15"},"scope":4425,"src":"20873:167:15","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3775,"nodeType":"Block","src":"21246:217:15","statements":[{"assignments":[3743],"declarations":[{"constant":false,"id":3743,"mutability":"mutable","name":"assets","nameLocation":"21274:6:15","nodeType":"VariableDeclaration","scope":3775,"src":"21257:23:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3741,"name":"address","nodeType":"ElementaryTypeName","src":"21257:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3742,"nodeType":"ArrayTypeName","src":"21257:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":3750,"initialValue":{"arguments":[{"expression":{"id":3747,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2235,"src":"21297:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2255_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"21308:6:15","memberName":"length","nodeType":"MemberAccess","src":"21297:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3746,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"21283:13:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address[] memory)"},"typeName":{"baseType":{"id":3744,"name":"address","nodeType":"ElementaryTypeName","src":"21287:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3745,"nodeType":"ArrayTypeName","src":"21287:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"id":3749,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21283:32:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"21257:58:15"},{"body":{"id":3771,"nodeType":"Block","src":"21374:58:15","statements":[{"expression":{"id":3769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3762,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3743,"src":"21389:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":3764,"indexExpression":{"id":3763,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3752,"src":"21396:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"21389:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":3765,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2235,"src":"21401:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2255_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3767,"indexExpression":{"id":3766,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3752,"src":"21412:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"21401:13:15","typeDescriptions":{"typeIdentifier":"t_struct$_AssetInfo_$2255_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref"}},"id":3768,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"21415:5:15","memberName":"asset","nodeType":"MemberAccess","referencedDeclaration":2252,"src":"21401:19:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"21389:31:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3770,"nodeType":"ExpressionStatement","src":"21389:31:15"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3755,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3752,"src":"21346:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3756,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2235,"src":"21350:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2255_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"21361:6:15","memberName":"length","nodeType":"MemberAccess","src":"21350:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"21346:21:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3772,"initializationExpression":{"assignments":[3752],"declarations":[{"constant":false,"id":3752,"mutability":"mutable","name":"i","nameLocation":"21339:1:15","nodeType":"VariableDeclaration","scope":3772,"src":"21331:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3751,"name":"uint256","nodeType":"ElementaryTypeName","src":"21331:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3754,"initialValue":{"hexValue":"30","id":3753,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21343:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"21331:13:15"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"21369:3:15","subExpression":{"id":3759,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3752,"src":"21369:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3761,"nodeType":"ExpressionStatement","src":"21369:3:15"},"nodeType":"ForStatement","src":"21326:106:15"},{"expression":{"id":3773,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3743,"src":"21449:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":3738,"id":3774,"nodeType":"Return","src":"21442:13:15"}]},"documentation":{"id":3733,"nodeType":"StructuredDocumentation","src":"21048:130:15","text":" @dev Retrieves the list of assets in the pool.\n @return An array of addresses representing the assets."},"functionSelector":"67e4ac2c","id":3776,"implemented":true,"kind":"function","modifiers":[],"name":"getAssets","nameLocation":"21193:9:15","nodeType":"FunctionDefinition","parameters":{"id":3734,"nodeType":"ParameterList","parameters":[],"src":"21202:2:15"},"returnParameters":{"id":3738,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3737,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3776,"src":"21228:16:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3735,"name":"address","nodeType":"ElementaryTypeName","src":"21228:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3736,"nodeType":"ArrayTypeName","src":"21228:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"21227:18:15"},"scope":4425,"src":"21184:279:15","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":3819,"nodeType":"Block","src":"21704:221:15","statements":[{"assignments":[3787],"declarations":[{"constant":false,"id":3787,"mutability":"mutable","name":"weights","nameLocation":"21732:7:15","nodeType":"VariableDeclaration","scope":3819,"src":"21715:24:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3785,"name":"uint256","nodeType":"ElementaryTypeName","src":"21715:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3786,"nodeType":"ArrayTypeName","src":"21715:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":3794,"initialValue":{"arguments":[{"expression":{"id":3791,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2235,"src":"21756:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2255_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"21767:6:15","memberName":"length","nodeType":"MemberAccess","src":"21756:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3790,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"21742:13:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":3788,"name":"uint256","nodeType":"ElementaryTypeName","src":"21746:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3789,"nodeType":"ArrayTypeName","src":"21746:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":3793,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21742:32:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"21715:59:15"},{"body":{"id":3815,"nodeType":"Block","src":"21833:60:15","statements":[{"expression":{"id":3813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3806,"name":"weights","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3787,"src":"21848:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3808,"indexExpression":{"id":3807,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3796,"src":"21856:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"21848:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":3809,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2235,"src":"21861:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2255_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3811,"indexExpression":{"id":3810,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3796,"src":"21872:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"21861:13:15","typeDescriptions":{"typeIdentifier":"t_struct$_AssetInfo_$2255_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref"}},"id":3812,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"21875:6:15","memberName":"weight","nodeType":"MemberAccess","referencedDeclaration":2254,"src":"21861:20:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"21848:33:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3814,"nodeType":"ExpressionStatement","src":"21848:33:15"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3799,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3796,"src":"21805:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3800,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2235,"src":"21809:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2255_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"21820:6:15","memberName":"length","nodeType":"MemberAccess","src":"21809:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"21805:21:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3816,"initializationExpression":{"assignments":[3796],"declarations":[{"constant":false,"id":3796,"mutability":"mutable","name":"i","nameLocation":"21798:1:15","nodeType":"VariableDeclaration","scope":3816,"src":"21790:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3795,"name":"uint256","nodeType":"ElementaryTypeName","src":"21790:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3798,"initialValue":{"hexValue":"30","id":3797,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21802:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"21790:13:15"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"21828:3:15","subExpression":{"id":3803,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3796,"src":"21828:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3805,"nodeType":"ExpressionStatement","src":"21828:3:15"},"nodeType":"ForStatement","src":"21785:108:15"},{"expression":{"id":3817,"name":"weights","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3787,"src":"21910:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":3782,"id":3818,"nodeType":"Return","src":"21903:14:15"}]},"documentation":{"id":3777,"nodeType":"StructuredDocumentation","src":"21471:164:15","text":" @dev Retrieves the list of weights associated with the assets in the pool.\n @return An array of uint256 values representing the weights."},"functionSelector":"22acb867","id":3820,"implemented":true,"kind":"function","modifiers":[],"name":"getWeights","nameLocation":"21650:10:15","nodeType":"FunctionDefinition","parameters":{"id":3778,"nodeType":"ParameterList","parameters":[],"src":"21660:2:15"},"returnParameters":{"id":3782,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3781,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3820,"src":"21686:16:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3779,"name":"uint256","nodeType":"ElementaryTypeName","src":"21686:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3780,"nodeType":"ArrayTypeName","src":"21686:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"21685:18:15"},"scope":4425,"src":"21641:284:15","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":3912,"nodeType":"Block","src":"22274:645:15","statements":[{"assignments":[3830],"declarations":[{"constant":false,"id":3830,"mutability":"mutable","name":"numAssets","nameLocation":"22293:9:15","nodeType":"VariableDeclaration","scope":3912,"src":"22285:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3829,"name":"uint256","nodeType":"ElementaryTypeName","src":"22285:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3833,"initialValue":{"expression":{"id":3831,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2235,"src":"22305:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2255_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"22316:6:15","memberName":"length","nodeType":"MemberAccess","src":"22305:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"22285:37:15"},{"expression":{"id":3840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3834,"name":"valuations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3827,"src":"22333:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3838,"name":"numAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3830,"src":"22360:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3837,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"22346:13:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":3835,"name":"uint256","nodeType":"ElementaryTypeName","src":"22350:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3836,"nodeType":"ArrayTypeName","src":"22350:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":3839,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22346:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"src":"22333:37:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3841,"nodeType":"ExpressionStatement","src":"22333:37:15"},{"body":{"id":3906,"nodeType":"Block","src":"22421:445:15","statements":[{"assignments":[3853],"declarations":[{"constant":false,"id":3853,"mutability":"mutable","name":"asset","nameLocation":"22444:5:15","nodeType":"VariableDeclaration","scope":3906,"src":"22436:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3852,"name":"address","nodeType":"ElementaryTypeName","src":"22436:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3858,"initialValue":{"expression":{"baseExpression":{"id":3854,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2235,"src":"22452:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2255_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3856,"indexExpression":{"id":3855,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3843,"src":"22463:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"22452:13:15","typeDescriptions":{"typeIdentifier":"t_struct$_AssetInfo_$2255_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref"}},"id":3857,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"22466:5:15","memberName":"asset","nodeType":"MemberAccess","referencedDeclaration":2252,"src":"22452:19:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"22436:35:15"},{"assignments":[3860],"declarations":[{"constant":false,"id":3860,"mutability":"mutable","name":"assetReserve","nameLocation":"22494:12:15","nodeType":"VariableDeclaration","scope":3906,"src":"22486:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3859,"name":"uint256","nodeType":"ElementaryTypeName","src":"22486:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3867,"initialValue":{"arguments":[{"arguments":[{"id":3864,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3853,"src":"22533:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3863,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22525:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3862,"name":"address","nodeType":"ElementaryTypeName","src":"22525:7:15","typeDescriptions":{}}},"id":3865,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22525:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3861,"name":"getAssetReserve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3732,"src":"22509:15:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":3866,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22509:31:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"22486:54:15"},{"condition":{"components":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3870,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3853,"src":"22570:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3869,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22562:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3868,"name":"address","nodeType":"ElementaryTypeName","src":"22562:7:15","typeDescriptions":{}}},"id":3871,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22562:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3872,"name":"baseAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2248,"src":"22580:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"22562:27:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":3874,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22561:29:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3898,"nodeType":"Block","src":"22661:148:15","statements":[{"assignments":[3883],"declarations":[{"constant":false,"id":3883,"mutability":"mutable","name":"valuation","nameLocation":"22688:9:15","nodeType":"VariableDeclaration","scope":3898,"src":"22680:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3882,"name":"uint256","nodeType":"ElementaryTypeName","src":"22680:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3891,"initialValue":{"arguments":[{"arguments":[{"id":3887,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3853,"src":"22728:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3886,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22720:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3885,"name":"address","nodeType":"ElementaryTypeName","src":"22720:7:15","typeDescriptions":{}}},"id":3888,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22720:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3889,"name":"assetReserve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3860,"src":"22736:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3884,"name":"_convertTokenToBase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4342,"src":"22700:19:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view returns (uint256)"}},"id":3890,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22700:49:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"22680:69:15"},{"expression":{"id":3896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3892,"name":"valuations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3827,"src":"22768:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3894,"indexExpression":{"id":3893,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3843,"src":"22779:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"22768:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3895,"name":"valuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3883,"src":"22784:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22768:25:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3897,"nodeType":"ExpressionStatement","src":"22768:25:15"}]},"id":3899,"nodeType":"IfStatement","src":"22557:252:15","trueBody":{"id":3881,"nodeType":"Block","src":"22592:63:15","statements":[{"expression":{"id":3879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3875,"name":"valuations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3827,"src":"22611:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3877,"indexExpression":{"id":3876,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3843,"src":"22622:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"22611:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3878,"name":"assetReserve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3860,"src":"22627:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22611:28:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3880,"nodeType":"ExpressionStatement","src":"22611:28:15"}]}},{"expression":{"id":3904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3900,"name":"totalValuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3824,"src":"22823:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"baseExpression":{"id":3901,"name":"valuations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3827,"src":"22841:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3903,"indexExpression":{"id":3902,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3843,"src":"22852:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"22841:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22823:31:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3905,"nodeType":"ExpressionStatement","src":"22823:31:15"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3846,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3843,"src":"22401:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3847,"name":"numAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3830,"src":"22405:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22401:13:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3907,"initializationExpression":{"assignments":[3843],"declarations":[{"constant":false,"id":3843,"mutability":"mutable","name":"i","nameLocation":"22394:1:15","nodeType":"VariableDeclaration","scope":3907,"src":"22386:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3842,"name":"uint256","nodeType":"ElementaryTypeName","src":"22386:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3845,"initialValue":{"hexValue":"30","id":3844,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22398:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"22386:13:15"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"22416:3:15","subExpression":{"id":3849,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3843,"src":"22416:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3851,"nodeType":"ExpressionStatement","src":"22416:3:15"},"nodeType":"ForStatement","src":"22381:485:15"},{"expression":{"components":[{"id":3908,"name":"totalValuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3824,"src":"22884:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3909,"name":"valuations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3827,"src":"22900:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"id":3910,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22883:28:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256,uint256[] memory)"}},"functionReturnParameters":3828,"id":3911,"nodeType":"Return","src":"22876:35:15"}]},"documentation":{"id":3821,"nodeType":"StructuredDocumentation","src":"21933:225:15","text":" @dev Computes the total valuation of the assets in the pool.\n @return totalValuation The total valuation of the assets.\n @return valuations An array of valuations for each asset in the pool."},"id":3913,"implemented":true,"kind":"function","modifiers":[],"name":"_computeTotalValuation","nameLocation":"22173:22:15","nodeType":"FunctionDefinition","parameters":{"id":3822,"nodeType":"ParameterList","parameters":[],"src":"22195:2:15"},"returnParameters":{"id":3828,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3824,"mutability":"mutable","name":"totalValuation","nameLocation":"22229:14:15","nodeType":"VariableDeclaration","scope":3913,"src":"22221:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3823,"name":"uint256","nodeType":"ElementaryTypeName","src":"22221:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3827,"mutability":"mutable","name":"valuations","nameLocation":"22262:10:15","nodeType":"VariableDeclaration","scope":3913,"src":"22245:27:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3825,"name":"uint256","nodeType":"ElementaryTypeName","src":"22245:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3826,"nodeType":"ArrayTypeName","src":"22245:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"22220:53:15"},"scope":4425,"src":"22164:755:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4130,"nodeType":"Block","src":"23406:1435:15","statements":[{"assignments":[3927],"declarations":[{"constant":false,"id":3927,"mutability":"mutable","name":"assets","nameLocation":"23434:6:15","nodeType":"VariableDeclaration","scope":4130,"src":"23417:23:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3925,"name":"address","nodeType":"ElementaryTypeName","src":"23417:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3926,"nodeType":"ArrayTypeName","src":"23417:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":3934,"initialValue":{"arguments":[{"expression":{"id":3931,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2235,"src":"23457:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2255_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23468:6:15","memberName":"length","nodeType":"MemberAccess","src":"23457:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3930,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"23443:13:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address[] memory)"},"typeName":{"baseType":{"id":3928,"name":"address","nodeType":"ElementaryTypeName","src":"23447:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3929,"nodeType":"ArrayTypeName","src":"23447:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"id":3933,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23443:32:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"23417:58:15"},{"assignments":[3939],"declarations":[{"constant":false,"id":3939,"mutability":"mutable","name":"weights","nameLocation":"23503:7:15","nodeType":"VariableDeclaration","scope":4130,"src":"23486:24:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3937,"name":"uint256","nodeType":"ElementaryTypeName","src":"23486:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3938,"nodeType":"ArrayTypeName","src":"23486:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":3946,"initialValue":{"arguments":[{"expression":{"id":3943,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2235,"src":"23527:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2255_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23538:6:15","memberName":"length","nodeType":"MemberAccess","src":"23527:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3942,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"23513:13:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":3940,"name":"uint256","nodeType":"ElementaryTypeName","src":"23517:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3941,"nodeType":"ArrayTypeName","src":"23517:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":3945,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23513:32:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"23486:59:15"},{"assignments":[3951],"declarations":[{"constant":false,"id":3951,"mutability":"mutable","name":"peripheryBalancesB4","nameLocation":"23573:19:15","nodeType":"VariableDeclaration","scope":4130,"src":"23556:36:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3949,"name":"uint256","nodeType":"ElementaryTypeName","src":"23556:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3950,"nodeType":"ArrayTypeName","src":"23556:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":3958,"initialValue":{"arguments":[{"expression":{"id":3955,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2235,"src":"23609:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2255_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23620:6:15","memberName":"length","nodeType":"MemberAccess","src":"23609:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3954,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"23595:13:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":3952,"name":"uint256","nodeType":"ElementaryTypeName","src":"23599:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3953,"nodeType":"ArrayTypeName","src":"23599:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":3957,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23595:32:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"23556:71:15"},{"assignments":[3963],"declarations":[{"constant":false,"id":3963,"mutability":"mutable","name":"peripheryBalancesAfter","nameLocation":"23655:22:15","nodeType":"VariableDeclaration","scope":4130,"src":"23638:39:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3961,"name":"uint256","nodeType":"ElementaryTypeName","src":"23638:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3962,"nodeType":"ArrayTypeName","src":"23638:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":3970,"initialValue":{"arguments":[{"expression":{"id":3967,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2235,"src":"23694:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2255_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23705:6:15","memberName":"length","nodeType":"MemberAccess","src":"23694:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3966,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"23680:13:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":3964,"name":"uint256","nodeType":"ElementaryTypeName","src":"23684:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3965,"nodeType":"ArrayTypeName","src":"23684:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":3969,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23680:32:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"23638:74:15"},{"assignments":[3975],"declarations":[{"constant":false,"id":3975,"mutability":"mutable","name":"amountsToAdd","nameLocation":"23740:12:15","nodeType":"VariableDeclaration","scope":4130,"src":"23723:29:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3973,"name":"uint256","nodeType":"ElementaryTypeName","src":"23723:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3974,"nodeType":"ArrayTypeName","src":"23723:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":3982,"initialValue":{"arguments":[{"expression":{"id":3979,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2235,"src":"23769:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2255_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23780:6:15","memberName":"length","nodeType":"MemberAccess","src":"23769:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3978,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"23755:13:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":3976,"name":"uint256","nodeType":"ElementaryTypeName","src":"23759:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3977,"nodeType":"ArrayTypeName","src":"23759:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":3981,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23755:32:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"23723:64:15"},{"assignments":[3987],"declarations":[{"constant":false,"id":3987,"mutability":"mutable","name":"amountsToRemove","nameLocation":"23815:15:15","nodeType":"VariableDeclaration","scope":4130,"src":"23798:32:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3985,"name":"uint256","nodeType":"ElementaryTypeName","src":"23798:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3986,"nodeType":"ArrayTypeName","src":"23798:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":3994,"initialValue":{"arguments":[{"expression":{"id":3991,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2235,"src":"23847:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2255_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23858:6:15","memberName":"length","nodeType":"MemberAccess","src":"23847:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3990,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"23833:13:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":3988,"name":"uint256","nodeType":"ElementaryTypeName","src":"23837:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3989,"nodeType":"ArrayTypeName","src":"23837:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":3993,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23833:32:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"23798:67:15"},{"body":{"id":4037,"nodeType":"Block","src":"23926:184:15","statements":[{"expression":{"id":4013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4006,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3927,"src":"23941:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4008,"indexExpression":{"id":4007,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3996,"src":"23948:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"23941:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":4009,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2235,"src":"23953:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2255_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":4011,"indexExpression":{"id":4010,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3996,"src":"23964:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"23953:13:15","typeDescriptions":{"typeIdentifier":"t_struct$_AssetInfo_$2255_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref"}},"id":4012,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"23967:5:15","memberName":"asset","nodeType":"MemberAccess","referencedDeclaration":2252,"src":"23953:19:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"23941:31:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4014,"nodeType":"ExpressionStatement","src":"23941:31:15"},{"expression":{"id":4022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4015,"name":"weights","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3939,"src":"23987:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":4017,"indexExpression":{"id":4016,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3996,"src":"23995:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"23987:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":4018,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2235,"src":"24000:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2255_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":4020,"indexExpression":{"id":4019,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3996,"src":"24011:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"24000:13:15","typeDescriptions":{"typeIdentifier":"t_struct$_AssetInfo_$2255_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref"}},"id":4021,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"24014:6:15","memberName":"weight","nodeType":"MemberAccess","referencedDeclaration":2254,"src":"24000:20:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23987:33:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4023,"nodeType":"ExpressionStatement","src":"23987:33:15"},{"expression":{"id":4035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4024,"name":"peripheryBalancesB4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3951,"src":"24035:19:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":4026,"indexExpression":{"id":4025,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3996,"src":"24055:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"24035:22:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4033,"name":"periphery","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2241,"src":"24088:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"baseExpression":{"id":4028,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3927,"src":"24067:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4030,"indexExpression":{"id":4029,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3996,"src":"24074:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"24067:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4027,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1729,"src":"24060:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1729_$","typeString":"type(contract IERC20)"}},"id":4031,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24060:17:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"}},"id":4032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24078:9:15","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":1686,"src":"24060:27:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":4034,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24060:38:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24035:63:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4036,"nodeType":"ExpressionStatement","src":"24035:63:15"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3999,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3996,"src":"23898:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4000,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2235,"src":"23902:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2255_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":4001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23913:6:15","memberName":"length","nodeType":"MemberAccess","src":"23902:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23898:21:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4038,"initializationExpression":{"assignments":[3996],"declarations":[{"constant":false,"id":3996,"mutability":"mutable","name":"i","nameLocation":"23891:1:15","nodeType":"VariableDeclaration","scope":4038,"src":"23883:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3995,"name":"uint256","nodeType":"ElementaryTypeName","src":"23883:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3998,"initialValue":{"hexValue":"30","id":3997,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23895:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"23883:13:15"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"23921:3:15","subExpression":{"id":4003,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3996,"src":"23921:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4005,"nodeType":"ExpressionStatement","src":"23921:3:15"},"nodeType":"ForStatement","src":"23878:232:15"},{"assignments":[4043],"declarations":[{"constant":false,"id":4043,"mutability":"mutable","name":"balances","nameLocation":"24139:8:15","nodeType":"VariableDeclaration","scope":4130,"src":"24122:25:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4041,"name":"uint256","nodeType":"ElementaryTypeName","src":"24122:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4042,"nodeType":"ArrayTypeName","src":"24122:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":4046,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":4044,"name":"getReserves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3712,"src":"24150:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function () view returns (uint256[] memory)"}},"id":4045,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24150:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"24122:41:15"},{"expression":{"arguments":[{"id":4051,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4043,"src":"24218:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":4052,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3927,"src":"24228:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},{"id":4053,"name":"weights","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3939,"src":"24236:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":4054,"name":"trigger","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2237,"src":"24245:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4055,"name":"periphery","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2241,"src":"24254:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4056,"name":"periphery","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2241,"src":"24265:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4057,"name":"baseAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2248,"src":"24276:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":4048,"name":"rebalancer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2250,"src":"24196:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4047,"name":"IBaluniV1Rebalancer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6261,"src":"24176:19:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBaluniV1Rebalancer_$6261_$","typeString":"type(contract IBaluniV1Rebalancer)"}},"id":4049,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24176:31:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Rebalancer_$6261","typeString":"contract IBaluniV1Rebalancer"}},"id":4050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24208:9:15","memberName":"rebalance","nodeType":"MemberAccess","referencedDeclaration":6228,"src":"24176:41:15","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_address_$_t_address_$_t_address_$returns$__$","typeString":"function (uint256[] memory,address[] memory,uint256[] memory,uint256,address,address,address) external"}},"id":4058,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24176:110:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4059,"nodeType":"ExpressionStatement","src":"24176:110:15"},{"body":{"id":4118,"nodeType":"Block","src":"24347:380:15","statements":[{"expression":{"id":4082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4071,"name":"peripheryBalancesAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3963,"src":"24362:22:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":4073,"indexExpression":{"id":4072,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4061,"src":"24385:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"24362:25:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4080,"name":"periphery","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2241,"src":"24418:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"baseExpression":{"id":4075,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3927,"src":"24397:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4077,"indexExpression":{"id":4076,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4061,"src":"24404:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"24397:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4074,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1729,"src":"24390:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1729_$","typeString":"type(contract IERC20)"}},"id":4078,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24390:17:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"}},"id":4079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24408:9:15","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":1686,"src":"24390:27:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":4081,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24390:38:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24362:66:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4083,"nodeType":"ExpressionStatement","src":"24362:66:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":4084,"name":"peripheryBalancesAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3963,"src":"24449:22:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":4086,"indexExpression":{"id":4085,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4061,"src":"24472:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"24449:25:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"baseExpression":{"id":4087,"name":"peripheryBalancesB4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3951,"src":"24477:19:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":4089,"indexExpression":{"id":4088,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4061,"src":"24497:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"24477:22:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24449:50:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4116,"nodeType":"Block","src":"24610:106:15","statements":[{"expression":{"id":4114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4104,"name":"amountsToRemove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3987,"src":"24629:15:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":4106,"indexExpression":{"id":4105,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4061,"src":"24645:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"24629:18:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":4107,"name":"peripheryBalancesB4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3951,"src":"24650:19:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":4109,"indexExpression":{"id":4108,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4061,"src":"24670:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"24650:22:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"baseExpression":{"id":4110,"name":"peripheryBalancesAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3963,"src":"24675:22:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":4112,"indexExpression":{"id":4111,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4061,"src":"24698:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"24675:25:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24650:50:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24629:71:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4115,"nodeType":"ExpressionStatement","src":"24629:71:15"}]},"id":4117,"nodeType":"IfStatement","src":"24445:271:15","trueBody":{"id":4103,"nodeType":"Block","src":"24501:103:15","statements":[{"expression":{"id":4101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4091,"name":"amountsToAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3975,"src":"24520:12:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":4093,"indexExpression":{"id":4092,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4061,"src":"24533:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"24520:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":4094,"name":"peripheryBalancesAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3963,"src":"24538:22:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":4096,"indexExpression":{"id":4095,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4061,"src":"24561:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"24538:25:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"baseExpression":{"id":4097,"name":"peripheryBalancesB4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3951,"src":"24566:19:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":4099,"indexExpression":{"id":4098,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4061,"src":"24586:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"24566:22:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24538:50:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24520:68:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4102,"nodeType":"ExpressionStatement","src":"24520:68:15"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4064,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4061,"src":"24319:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4065,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2235,"src":"24323:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2255_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":4066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24334:6:15","memberName":"length","nodeType":"MemberAccess","src":"24323:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24319:21:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4119,"initializationExpression":{"assignments":[4061],"declarations":[{"constant":false,"id":4061,"mutability":"mutable","name":"i","nameLocation":"24312:1:15","nodeType":"VariableDeclaration","scope":4119,"src":"24304:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4060,"name":"uint256","nodeType":"ElementaryTypeName","src":"24304:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4063,"initialValue":{"hexValue":"30","id":4062,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24316:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"24304:13:15"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"24342:3:15","subExpression":{"id":4068,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4061,"src":"24342:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4070,"nodeType":"ExpressionStatement","src":"24342:3:15"},"nodeType":"ForStatement","src":"24299:428:15"},{"eventCall":{"arguments":[{"expression":{"id":4121,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"24763:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24767:6:15","memberName":"sender","nodeType":"MemberAccess","src":"24763:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4123,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3927,"src":"24775:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}],"id":4120,"name":"RebalancePerformed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2262,"src":"24744:18:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_array$_t_address_$dyn_memory_ptr_$returns$__$","typeString":"function (address,address[] memory)"}},"id":4124,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24744:38:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4125,"nodeType":"EmitStatement","src":"24739:43:15"},{"expression":{"components":[{"id":4126,"name":"amountsToAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3975,"src":"24803:12:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":4127,"name":"amountsToRemove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3987,"src":"24817:15:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"id":4128,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24802:31:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256[] memory,uint256[] memory)"}},"functionReturnParameters":3922,"id":4129,"nodeType":"Return","src":"24795:38:15"}]},"documentation":{"id":3914,"nodeType":"StructuredDocumentation","src":"22927:382:15","text":" @dev Performs rebalance if needed.\n This function retrieves the assets and weights from the `assetInfos` array,\n and calls the `rebalance` function of the `rebalancer` contract with the retrieved values.\n It emits a `RebalancePerformed` event after the rebalance is performed.\n @notice This function should only be called internally."},"id":4131,"implemented":true,"kind":"function","modifiers":[],"name":"_performRebalanceIfNeeded","nameLocation":"23324:25:15","nodeType":"FunctionDefinition","parameters":{"id":3915,"nodeType":"ParameterList","parameters":[],"src":"23349:2:15"},"returnParameters":{"id":3922,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3918,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4131,"src":"23370:16:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3916,"name":"uint256","nodeType":"ElementaryTypeName","src":"23370:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3917,"nodeType":"ArrayTypeName","src":"23370:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3921,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4131,"src":"23388:16:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3919,"name":"uint256","nodeType":"ElementaryTypeName","src":"23388:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3920,"nodeType":"ArrayTypeName","src":"23388:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"23369:36:15"},"scope":4425,"src":"23315:1526:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4161,"nodeType":"Block","src":"25218:168:15","statements":[{"body":{"id":4157,"nodeType":"Block","src":"25277:65:15","statements":[{"expression":{"id":4155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4151,"name":"totalAddedLiquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4138,"src":"25292:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"baseExpression":{"id":4152,"name":"amountsToAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4135,"src":"25315:12:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":4154,"indexExpression":{"id":4153,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4141,"src":"25328:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"25315:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25292:38:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4156,"nodeType":"ExpressionStatement","src":"25292:38:15"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4144,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4141,"src":"25249:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4145,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2235,"src":"25253:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2255_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":4146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25264:6:15","memberName":"length","nodeType":"MemberAccess","src":"25253:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25249:21:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4158,"initializationExpression":{"assignments":[4141],"declarations":[{"constant":false,"id":4141,"mutability":"mutable","name":"i","nameLocation":"25242:1:15","nodeType":"VariableDeclaration","scope":4158,"src":"25234:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4140,"name":"uint256","nodeType":"ElementaryTypeName","src":"25234:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4143,"initialValue":{"hexValue":"30","id":4142,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25246:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"25234:13:15"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"25272:3:15","subExpression":{"id":4148,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4141,"src":"25272:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4150,"nodeType":"ExpressionStatement","src":"25272:3:15"},"nodeType":"ForStatement","src":"25229:113:15"},{"expression":{"id":4159,"name":"totalAddedLiquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4138,"src":"25359:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4139,"id":4160,"nodeType":"Return","src":"25352:26:15"}]},"documentation":{"id":4132,"nodeType":"StructuredDocumentation","src":"24849:225:15","text":" @dev Calculates the total added liquidity based on the amounts to add.\n @param amountsToAdd An array of amounts to add for each asset.\n @return totalAddedLiquidity The total added liquidity."},"id":4162,"implemented":true,"kind":"function","modifiers":[],"name":"_calculateTotalAddedLiquidity","nameLocation":"25089:29:15","nodeType":"FunctionDefinition","parameters":{"id":4136,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4135,"mutability":"mutable","name":"amountsToAdd","nameLocation":"25146:12:15","nodeType":"VariableDeclaration","scope":4162,"src":"25129:29:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4133,"name":"uint256","nodeType":"ElementaryTypeName","src":"25129:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4134,"nodeType":"ArrayTypeName","src":"25129:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"25118:47:15"},"returnParameters":{"id":4139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4138,"mutability":"mutable","name":"totalAddedLiquidity","nameLocation":"25197:19:15","nodeType":"VariableDeclaration","scope":4162,"src":"25189:27:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4137,"name":"uint256","nodeType":"ElementaryTypeName","src":"25189:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25188:29:15"},"scope":4425,"src":"25080:306:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4227,"nodeType":"Block","src":"25893:389:15","statements":[{"expression":{"id":4181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4174,"name":"amountsToAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4172,"src":"25904:12:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":4178,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2235,"src":"25933:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2255_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":4179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25944:6:15","memberName":"length","nodeType":"MemberAccess","src":"25933:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4177,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"25919:13:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":4175,"name":"uint256","nodeType":"ElementaryTypeName","src":"25923:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4176,"nodeType":"ArrayTypeName","src":"25923:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":4180,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25919:32:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"src":"25904:47:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":4182,"nodeType":"ExpressionStatement","src":"25904:47:15"},{"body":{"id":4223,"nodeType":"Block","src":"26010:235:15","statements":[{"assignments":[4195],"declarations":[{"constant":false,"id":4195,"mutability":"mutable","name":"targetValuation","nameLocation":"26033:15:15","nodeType":"VariableDeclaration","scope":4223,"src":"26025:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4194,"name":"uint256","nodeType":"ElementaryTypeName","src":"26025:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4205,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4196,"name":"totalValuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4165,"src":"26052:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"baseExpression":{"id":4197,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2235,"src":"26069:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2255_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":4199,"indexExpression":{"id":4198,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4184,"src":"26080:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"26069:13:15","typeDescriptions":{"typeIdentifier":"t_struct$_AssetInfo_$2255_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref"}},"id":4200,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"26083:6:15","memberName":"weight","nodeType":"MemberAccess","referencedDeclaration":2254,"src":"26069:20:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26052:37:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4202,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26051:39:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3130303030","id":4203,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26093:5:15","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"src":"26051:47:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"26025:73:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":4206,"name":"valuations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4168,"src":"26117:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":4208,"indexExpression":{"id":4207,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4184,"src":"26128:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"26117:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4209,"name":"targetValuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4195,"src":"26133:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26117:31:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4222,"nodeType":"IfStatement","src":"26113:121:15","trueBody":{"id":4221,"nodeType":"Block","src":"26150:84:15","statements":[{"expression":{"id":4219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4211,"name":"amountsToAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4172,"src":"26169:12:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":4213,"indexExpression":{"id":4212,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4184,"src":"26182:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"26169:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4214,"name":"targetValuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4195,"src":"26187:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"baseExpression":{"id":4215,"name":"valuations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4168,"src":"26205:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":4217,"indexExpression":{"id":4216,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4184,"src":"26216:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"26205:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26187:31:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26169:49:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4220,"nodeType":"ExpressionStatement","src":"26169:49:15"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4187,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4184,"src":"25982:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4188,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2235,"src":"25986:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2255_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":4189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25997:6:15","memberName":"length","nodeType":"MemberAccess","src":"25986:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25982:21:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4224,"initializationExpression":{"assignments":[4184],"declarations":[{"constant":false,"id":4184,"mutability":"mutable","name":"i","nameLocation":"25975:1:15","nodeType":"VariableDeclaration","scope":4224,"src":"25967:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4183,"name":"uint256","nodeType":"ElementaryTypeName","src":"25967:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4186,"initialValue":{"hexValue":"30","id":4185,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25979:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"25967:13:15"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"26005:3:15","subExpression":{"id":4191,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4184,"src":"26005:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4193,"nodeType":"ExpressionStatement","src":"26005:3:15"},"nodeType":"ForStatement","src":"25962:283:15"},{"expression":{"id":4225,"name":"amountsToAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4172,"src":"26262:12:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":4173,"id":4226,"nodeType":"Return","src":"26255:19:15"}]},"documentation":{"id":4163,"nodeType":"StructuredDocumentation","src":"25394:329:15","text":" @dev Calculates the amounts to add to each asset based on the total valuation and current valuations.\n @param totalValuation The total valuation of the pool.\n @param valuations An array of current valuations for each asset.\n @return amountsToAdd An array of amounts to add to each asset."},"id":4228,"implemented":true,"kind":"function","modifiers":[],"name":"_calculateAmountsToAdd","nameLocation":"25738:22:15","nodeType":"FunctionDefinition","parameters":{"id":4169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4165,"mutability":"mutable","name":"totalValuation","nameLocation":"25779:14:15","nodeType":"VariableDeclaration","scope":4228,"src":"25771:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4164,"name":"uint256","nodeType":"ElementaryTypeName","src":"25771:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4168,"mutability":"mutable","name":"valuations","nameLocation":"25821:10:15","nodeType":"VariableDeclaration","scope":4228,"src":"25804:27:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4166,"name":"uint256","nodeType":"ElementaryTypeName","src":"25804:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4167,"nodeType":"ArrayTypeName","src":"25804:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"25760:78:15"},"returnParameters":{"id":4173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4172,"mutability":"mutable","name":"amountsToAdd","nameLocation":"25879:12:15","nodeType":"VariableDeclaration","scope":4228,"src":"25862:29:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4170,"name":"uint256","nodeType":"ElementaryTypeName","src":"25862:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4171,"nodeType":"ArrayTypeName","src":"25862:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"25861:31:15"},"scope":4425,"src":"25729:553:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4257,"nodeType":"Block","src":"26661:193:15","statements":[{"assignments":[4239],"declarations":[{"constant":false,"id":4239,"mutability":"mutable","name":"tokenAmount","nameLocation":"26680:11:15","nodeType":"VariableDeclaration","scope":4257,"src":"26672:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4238,"name":"uint256","nodeType":"ElementaryTypeName","src":"26672:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4247,"initialValue":{"arguments":[{"expression":{"baseExpression":{"id":4241,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2235,"src":"26714:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2255_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":4243,"indexExpression":{"id":4242,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4231,"src":"26725:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"26714:17:15","typeDescriptions":{"typeIdentifier":"t_struct$_AssetInfo_$2255_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref"}},"id":4244,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"26732:5:15","memberName":"asset","nodeType":"MemberAccess","referencedDeclaration":2252,"src":"26714:23:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4245,"name":"amountToAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4233,"src":"26739:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4240,"name":"_convertBaseToToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4282,"src":"26694:19:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view returns (uint256)"}},"id":4246,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26694:57:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"26672:79:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4249,"name":"tokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4239,"src":"26770:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26784:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"26770:15:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420746f6b656e20616d6f756e7420746f20616464","id":4252,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"26787:29:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_231381c7ce9cab5a06140be844586c7572b2dd117d8de83c9f9bda39108cd19d","typeString":"literal_string \"Invalid token amount to add\""},"value":"Invalid token amount to add"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_231381c7ce9cab5a06140be844586c7572b2dd117d8de83c9f9bda39108cd19d","typeString":"literal_string \"Invalid token amount to add\""}],"id":4248,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"26762:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4253,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26762:55:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4254,"nodeType":"ExpressionStatement","src":"26762:55:15"},{"expression":{"id":4255,"name":"tokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4239,"src":"26835:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4237,"id":4256,"nodeType":"Return","src":"26828:18:15"}]},"documentation":{"id":4229,"nodeType":"StructuredDocumentation","src":"26290:268:15","text":" @dev Internal function to transfer tokens from the caller to the contract and calculate the liquidity.\n @param index The index of the asset in the assetInfos array.\n @param amountToAdd The amount of native tokens to add as liquidity."},"id":4258,"implemented":true,"kind":"function","modifiers":[],"name":"_calculateLiquidity","nameLocation":"26573:19:15","nodeType":"FunctionDefinition","parameters":{"id":4234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4231,"mutability":"mutable","name":"index","nameLocation":"26601:5:15","nodeType":"VariableDeclaration","scope":4258,"src":"26593:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4230,"name":"uint256","nodeType":"ElementaryTypeName","src":"26593:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4233,"mutability":"mutable","name":"amountToAdd","nameLocation":"26616:11:15","nodeType":"VariableDeclaration","scope":4258,"src":"26608:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4232,"name":"uint256","nodeType":"ElementaryTypeName","src":"26608:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26592:36:15"},"returnParameters":{"id":4237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4236,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4258,"src":"26652:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4235,"name":"uint256","nodeType":"ElementaryTypeName","src":"26652:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26651:9:15"},"scope":4425,"src":"26564:290:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4281,"nodeType":"Block","src":"27253:139:15","statements":[{"assignments":[4269],"declarations":[{"constant":false,"id":4269,"mutability":"mutable","name":"tokenAmount","nameLocation":"27272:11:15","nodeType":"VariableDeclaration","scope":4281,"src":"27264:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4268,"name":"uint256","nodeType":"ElementaryTypeName","src":"27264:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4278,"initialValue":{"arguments":[{"id":4274,"name":"baseAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2248,"src":"27326:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4275,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4261,"src":"27337:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4276,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4263,"src":"27348:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":4271,"name":"rebalancer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2250,"src":"27306:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4270,"name":"IBaluniV1Rebalancer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6261,"src":"27286:19:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBaluniV1Rebalancer_$6261_$","typeString":"type(contract IBaluniV1Rebalancer)"}},"id":4272,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27286:31:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Rebalancer_$6261","typeString":"contract IBaluniV1Rebalancer"}},"id":4273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27318:7:15","memberName":"convert","nodeType":"MemberAccess","referencedDeclaration":6260,"src":"27286:39:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,address,uint256) view external returns (uint256)"}},"id":4277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27286:69:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"27264:91:15"},{"expression":{"id":4279,"name":"tokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4269,"src":"27373:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4267,"id":4280,"nodeType":"Return","src":"27366:18:15"}]},"documentation":{"id":4259,"nodeType":"StructuredDocumentation","src":"26862:289:15","text":" @dev Converts the specified amount of native token to the corresponding token amount.\n @param fromToken The address of the native token to convert from.\n @param amount The amount of native token to convert.\n @return The corresponding token amount."},"id":4282,"implemented":true,"kind":"function","modifiers":[],"name":"_convertBaseToToken","nameLocation":"27166:19:15","nodeType":"FunctionDefinition","parameters":{"id":4264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4261,"mutability":"mutable","name":"fromToken","nameLocation":"27194:9:15","nodeType":"VariableDeclaration","scope":4282,"src":"27186:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4260,"name":"address","nodeType":"ElementaryTypeName","src":"27186:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4263,"mutability":"mutable","name":"amount","nameLocation":"27213:6:15","nodeType":"VariableDeclaration","scope":4282,"src":"27205:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4262,"name":"uint256","nodeType":"ElementaryTypeName","src":"27205:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"27185:35:15"},"returnParameters":{"id":4267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4266,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4282,"src":"27244:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4265,"name":"uint256","nodeType":"ElementaryTypeName","src":"27244:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"27243:9:15"},"scope":4425,"src":"27157:235:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4299,"nodeType":"Block","src":"27664:40:15","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4292,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4285,"src":"27682:1:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":4293,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4287,"src":"27687:1:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"27682:6:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":4296,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4287,"src":"27695:1:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":4297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"27682:14:15","trueExpression":{"id":4295,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4285,"src":"27691:1:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":4291,"id":4298,"nodeType":"Return","src":"27675:21:15"}]},"documentation":{"id":4283,"nodeType":"StructuredDocumentation","src":"27400:198:15","text":" @dev Returns the maximum of two uint8 values.\n @param a The first uint8 value.\n @param b The second uint8 value.\n @return The maximum value between a and b."},"id":4300,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"27613:3:15","nodeType":"FunctionDefinition","parameters":{"id":4288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4285,"mutability":"mutable","name":"a","nameLocation":"27623:1:15","nodeType":"VariableDeclaration","scope":4300,"src":"27617:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4284,"name":"uint8","nodeType":"ElementaryTypeName","src":"27617:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4287,"mutability":"mutable","name":"b","nameLocation":"27632:1:15","nodeType":"VariableDeclaration","scope":4300,"src":"27626:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4286,"name":"uint8","nodeType":"ElementaryTypeName","src":"27626:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"27616:18:15"},"returnParameters":{"id":4291,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4290,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4300,"src":"27657:5:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4289,"name":"uint8","nodeType":"ElementaryTypeName","src":"27657:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"27656:7:15"},"scope":4425,"src":"27604:100:15","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":4317,"nodeType":"Block","src":"27976:40:15","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4310,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4303,"src":"27994:1:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":4311,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4305,"src":"27999:1:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"27994:6:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":4314,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4305,"src":"28007:1:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":4315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"27994:14:15","trueExpression":{"id":4313,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4303,"src":"28003:1:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":4309,"id":4316,"nodeType":"Return","src":"27987:21:15"}]},"documentation":{"id":4301,"nodeType":"StructuredDocumentation","src":"27712:198:15","text":" @dev Returns the minimum of two uint8 values.\n @param a The first uint8 value.\n @param b The second uint8 value.\n @return The minimum value between a and b."},"id":4318,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"27925:3:15","nodeType":"FunctionDefinition","parameters":{"id":4306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4303,"mutability":"mutable","name":"a","nameLocation":"27935:1:15","nodeType":"VariableDeclaration","scope":4318,"src":"27929:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4302,"name":"uint8","nodeType":"ElementaryTypeName","src":"27929:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4305,"mutability":"mutable","name":"b","nameLocation":"27944:1:15","nodeType":"VariableDeclaration","scope":4318,"src":"27938:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4304,"name":"uint8","nodeType":"ElementaryTypeName","src":"27938:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"27928:18:15"},"returnParameters":{"id":4309,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4308,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4318,"src":"27969:5:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4307,"name":"uint8","nodeType":"ElementaryTypeName","src":"27969:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"27968:7:15"},"scope":4425,"src":"27916:100:15","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":4341,"nodeType":"Block","src":"28427:139:15","statements":[{"assignments":[4329],"declarations":[{"constant":false,"id":4329,"mutability":"mutable","name":"tokenAmount","nameLocation":"28446:11:15","nodeType":"VariableDeclaration","scope":4341,"src":"28438:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4328,"name":"uint256","nodeType":"ElementaryTypeName","src":"28438:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4338,"initialValue":{"arguments":[{"id":4334,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4321,"src":"28500:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4335,"name":"baseAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2248,"src":"28511:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4336,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4323,"src":"28522:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":4331,"name":"rebalancer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2250,"src":"28480:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4330,"name":"IBaluniV1Rebalancer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6261,"src":"28460:19:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBaluniV1Rebalancer_$6261_$","typeString":"type(contract IBaluniV1Rebalancer)"}},"id":4332,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28460:31:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Rebalancer_$6261","typeString":"contract IBaluniV1Rebalancer"}},"id":4333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"28492:7:15","memberName":"convert","nodeType":"MemberAccess","referencedDeclaration":6260,"src":"28460:39:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,address,uint256) view external returns (uint256)"}},"id":4337,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28460:69:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"28438:91:15"},{"expression":{"id":4339,"name":"tokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4329,"src":"28547:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4327,"id":4340,"nodeType":"Return","src":"28540:18:15"}]},"documentation":{"id":4319,"nodeType":"StructuredDocumentation","src":"28024:288:15","text":" @dev Converts the specified token to the native token using the rebalancer contract.\n @param fromToken The address of the token to convert from.\n @param amount The amount of tokens to convert.\n @return scaledAmount The converted amount of tokens."},"id":4342,"implemented":true,"kind":"function","modifiers":[],"name":"_convertTokenToBase","nameLocation":"28327:19:15","nodeType":"FunctionDefinition","parameters":{"id":4324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4321,"mutability":"mutable","name":"fromToken","nameLocation":"28355:9:15","nodeType":"VariableDeclaration","scope":4342,"src":"28347:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4320,"name":"address","nodeType":"ElementaryTypeName","src":"28347:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4323,"mutability":"mutable","name":"amount","nameLocation":"28374:6:15","nodeType":"VariableDeclaration","scope":4342,"src":"28366:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4322,"name":"uint256","nodeType":"ElementaryTypeName","src":"28366:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"28346:35:15"},"returnParameters":{"id":4327,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4326,"mutability":"mutable","name":"scaledAmount","nameLocation":"28413:12:15","nodeType":"VariableDeclaration","scope":4342,"src":"28405:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4325,"name":"uint256","nodeType":"ElementaryTypeName","src":"28405:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"28404:22:15"},"scope":4425,"src":"28318:248:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4387,"nodeType":"Block","src":"28853:290:15","statements":[{"assignments":[4352,4355],"declarations":[{"constant":false,"id":4352,"mutability":"mutable","name":"directions","nameLocation":"28879:10:15","nodeType":"VariableDeclaration","scope":4387,"src":"28865:24:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":4350,"name":"bool","nodeType":"ElementaryTypeName","src":"28865:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4351,"nodeType":"ArrayTypeName","src":"28865:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":4355,"mutability":"mutable","name":"deviations","nameLocation":"28908:10:15","nodeType":"VariableDeclaration","scope":4387,"src":"28891:27:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4353,"name":"uint256","nodeType":"ElementaryTypeName","src":"28891:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4354,"nodeType":"ArrayTypeName","src":"28891:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":4358,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":4356,"name":"getDeviation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3599,"src":"28922:12:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_array$_t_bool_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function () view returns (bool[] memory,uint256[] memory)"}},"id":4357,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28922:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_bool_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(bool[] memory,uint256[] memory)"}},"nodeType":"VariableDeclarationStatement","src":"28864:72:15"},{"body":{"id":4383,"nodeType":"Block","src":"28995:118:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":4370,"name":"directions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4352,"src":"29014:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"id":4372,"indexExpression":{"id":4371,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4360,"src":"29025:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"29014:13:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":4373,"name":"deviations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4355,"src":"29031:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":4375,"indexExpression":{"id":4374,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4360,"src":"29042:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"29031:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4376,"name":"trigger","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2237,"src":"29047:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"29031:23:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"29014:40:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4382,"nodeType":"IfStatement","src":"29010:92:15","trueBody":{"id":4381,"nodeType":"Block","src":"29056:46:15","statements":[{"expression":{"hexValue":"74727565","id":4379,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"29082:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":4347,"id":4380,"nodeType":"Return","src":"29075:11:15"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4363,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4360,"src":"28967:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4364,"name":"deviations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4355,"src":"28971:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":4365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"28982:6:15","memberName":"length","nodeType":"MemberAccess","src":"28971:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28967:21:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4384,"initializationExpression":{"assignments":[4360],"declarations":[{"constant":false,"id":4360,"mutability":"mutable","name":"i","nameLocation":"28960:1:15","nodeType":"VariableDeclaration","scope":4384,"src":"28952:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4359,"name":"uint256","nodeType":"ElementaryTypeName","src":"28952:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4362,"initialValue":{"hexValue":"30","id":4361,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28964:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"28952:13:15"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"28990:3:15","subExpression":{"id":4367,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4360,"src":"28990:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4369,"nodeType":"ExpressionStatement","src":"28990:3:15"},"nodeType":"ForStatement","src":"28947:166:15"},{"expression":{"hexValue":"66616c7365","id":4385,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"29130:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":4347,"id":4386,"nodeType":"Return","src":"29123:12:15"}]},"documentation":{"id":4343,"nodeType":"StructuredDocumentation","src":"28639:152:15","text":" @dev Checks if rebalancing is needed for the pool.\n @return A boolean value indicating whether rebalancing is needed or not."},"functionSelector":"8a77c8dc","id":4388,"implemented":true,"kind":"function","modifiers":[],"name":"isRebalanceNeeded","nameLocation":"28806:17:15","nodeType":"FunctionDefinition","parameters":{"id":4344,"nodeType":"ParameterList","parameters":[],"src":"28823:2:15"},"returnParameters":{"id":4347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4346,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4388,"src":"28847:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4345,"name":"bool","nodeType":"ElementaryTypeName","src":"28847:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"28846:6:15"},"scope":4425,"src":"28797:346:15","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":4423,"nodeType":"Block","src":"29225:208:15","statements":[{"body":{"id":4419,"nodeType":"Block","src":"29284:123:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":4406,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2235,"src":"29303:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2255_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":4408,"indexExpression":{"id":4407,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4396,"src":"29314:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"29303:13:15","typeDescriptions":{"typeIdentifier":"t_struct$_AssetInfo_$2255_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref"}},"id":4409,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"29317:5:15","memberName":"asset","nodeType":"MemberAccess","referencedDeclaration":2252,"src":"29303:19:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4410,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4390,"src":"29326:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"29303:29:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4418,"nodeType":"IfStatement","src":"29299:97:15","trueBody":{"id":4417,"nodeType":"Block","src":"29334:62:15","statements":[{"expression":{"expression":{"baseExpression":{"id":4412,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2235,"src":"29360:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2255_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":4414,"indexExpression":{"id":4413,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4396,"src":"29371:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"29360:13:15","typeDescriptions":{"typeIdentifier":"t_struct$_AssetInfo_$2255_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref"}},"id":4415,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"29374:6:15","memberName":"weight","nodeType":"MemberAccess","referencedDeclaration":2254,"src":"29360:20:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4394,"id":4416,"nodeType":"Return","src":"29353:27:15"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4399,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4396,"src":"29256:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4400,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2235,"src":"29260:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2255_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":4401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"29271:6:15","memberName":"length","nodeType":"MemberAccess","src":"29260:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"29256:21:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4420,"initializationExpression":{"assignments":[4396],"declarations":[{"constant":false,"id":4396,"mutability":"mutable","name":"i","nameLocation":"29249:1:15","nodeType":"VariableDeclaration","scope":4420,"src":"29241:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4395,"name":"uint256","nodeType":"ElementaryTypeName","src":"29241:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4398,"initialValue":{"hexValue":"30","id":4397,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29253:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"29241:13:15"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"29279:3:15","subExpression":{"id":4403,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4396,"src":"29279:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4405,"nodeType":"ExpressionStatement","src":"29279:3:15"},"nodeType":"ForStatement","src":"29236:171:15"},{"expression":{"hexValue":"30","id":4421,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29424:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":4394,"id":4422,"nodeType":"Return","src":"29417:8:15"}]},"id":4424,"implemented":true,"kind":"function","modifiers":[],"name":"_getTargetWeight","nameLocation":"29160:16:15","nodeType":"FunctionDefinition","parameters":{"id":4391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4390,"mutability":"mutable","name":"_token","nameLocation":"29185:6:15","nodeType":"VariableDeclaration","scope":4424,"src":"29177:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4389,"name":"address","nodeType":"ElementaryTypeName","src":"29177:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"29176:16:15"},"returnParameters":{"id":4394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4393,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4424,"src":"29216:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4392,"name":"uint256","nodeType":"ElementaryTypeName","src":"29216:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29215:9:15"},"scope":4425,"src":"29151:282:15","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":4426,"src":"1763:27673:15","usedErrors":[698,703,708,717,722,727,2052],"usedEvents":[1663,1672,2262,2269,2275,2281,2293]}],"src":"40:29398:15"},"id":15},"contracts/BaluniV1PoolFactory.sol":{"ast":{"absolutePath":"contracts/BaluniV1PoolFactory.sol","exportedSymbols":{"BBronze":[4940],"BColor":[4925],"BConst":[5028],"BMath":[5600],"BNum":[6073],"BaluniV1Pool":[4425],"BaluniV1PoolFactory":[4917],"Context":[2038],"ContextUpgradeable":[676],"ERC1967Utils":[1126],"ERC20":[1651],"I1inchSpotAgg":[6100],"IBaluniV1Agent":[6120],"IBaluniV1PoolPeriphery":[6140],"IBaluniV1Rebalancer":[6261],"IBaluniV1Router":[6519],"IERC1822Proxiable":[686],"IERC20":[1729],"IERC20Errors":[728],"IERC20Metadata":[1755],"Initializable":[448],"OwnableUpgradeable":[194],"ReentrancyGuard":[2107],"UUPSUpgradeable":[630]},"id":4918,"license":"GNU AGPLv3","nodeType":"SourceUnit","nodes":[{"id":4427,"literals":["solidity","0.8",".25"],"nodeType":"PragmaDirective","src":"40:23:16"},{"absolutePath":"contracts/BaluniV1Pool.sol","file":"./BaluniV1Pool.sol","id":4428,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4918,"sourceUnit":4426,"src":"1466:28:16","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","id":4429,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4918,"sourceUnit":195,"src":"1496:75:16","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","id":4430,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4918,"sourceUnit":449,"src":"1573:75:16","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","id":4431,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4918,"sourceUnit":631,"src":"1650:77:16","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":4432,"name":"Initializable","nameLocations":["1763:13:16"],"nodeType":"IdentifierPath","referencedDeclaration":448,"src":"1763:13:16"},"id":4433,"nodeType":"InheritanceSpecifier","src":"1763:13:16"},{"baseName":{"id":4434,"name":"UUPSUpgradeable","nameLocations":["1778:15:16"],"nodeType":"IdentifierPath","referencedDeclaration":630,"src":"1778:15:16"},"id":4435,"nodeType":"InheritanceSpecifier","src":"1778:15:16"},{"baseName":{"id":4436,"name":"OwnableUpgradeable","nameLocations":["1795:18:16"],"nodeType":"IdentifierPath","referencedDeclaration":194,"src":"1795:18:16"},"id":4437,"nodeType":"InheritanceSpecifier","src":"1795:18:16"}],"canonicalName":"BaluniV1PoolFactory","contractDependencies":[4425],"contractKind":"contract","fullyImplemented":true,"id":4917,"linearizedBaseContracts":[4917,194,676,630,686,448],"name":"BaluniV1PoolFactory","nameLocation":"1740:19:16","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"41d1de97","id":4440,"mutability":"mutable","name":"allPools","nameLocation":"1836:8:16","nodeType":"VariableDeclaration","scope":4917,"src":"1819:25:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[]"},"typeName":{"baseType":{"id":4438,"name":"address","nodeType":"ElementaryTypeName","src":"1819:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4439,"nodeType":"ArrayTypeName","src":"1819:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"public"},{"constant":false,"functionSelector":"531aa03e","id":4446,"mutability":"mutable","name":"getPool","nameLocation":"1904:7:16","nodeType":"VariableDeclaration","scope":4917,"src":"1849:62:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$","typeString":"mapping(address => mapping(address => address))"},"typeName":{"id":4445,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":4441,"name":"address","nodeType":"ElementaryTypeName","src":"1857:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1849:47:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$","typeString":"mapping(address => mapping(address => address))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":4444,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":4442,"name":"address","nodeType":"ElementaryTypeName","src":"1876:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1868:27:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":4443,"name":"address","nodeType":"ElementaryTypeName","src":"1887:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}}},"visibility":"public"},{"constant":false,"functionSelector":"01d22ccd","id":4448,"mutability":"mutable","name":"rebalancer","nameLocation":"1933:10:16","nodeType":"VariableDeclaration","scope":4917,"src":"1918:25:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4447,"name":"address","nodeType":"ElementaryTypeName","src":"1918:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"77aace1a","id":4450,"mutability":"mutable","name":"periphery","nameLocation":"1963:9:16","nodeType":"VariableDeclaration","scope":4917,"src":"1948:24:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4449,"name":"address","nodeType":"ElementaryTypeName","src":"1948:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"anonymous":false,"eventSelector":"93de7d9de9f3e05ba87a0170fcbb71af623439caf5e5079587b9d38c5da9b0d1","id":4459,"name":"PoolCreated","nameLocation":"1985:11:16","nodeType":"EventDefinition","parameters":{"id":4458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4452,"indexed":true,"mutability":"mutable","name":"pool","nameLocation":"2013:4:16","nodeType":"VariableDeclaration","scope":4459,"src":"1997:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4451,"name":"address","nodeType":"ElementaryTypeName","src":"1997:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4455,"indexed":false,"mutability":"mutable","name":"assets","nameLocation":"2029:6:16","nodeType":"VariableDeclaration","scope":4459,"src":"2019:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4453,"name":"address","nodeType":"ElementaryTypeName","src":"2019:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4454,"nodeType":"ArrayTypeName","src":"2019:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":4457,"indexed":false,"mutability":"mutable","name":"rebalancer","nameLocation":"2045:10:16","nodeType":"VariableDeclaration","scope":4459,"src":"2037:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4456,"name":"address","nodeType":"ElementaryTypeName","src":"2037:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1996:60:16"},"src":"1979:78:16"},{"body":{"id":4478,"nodeType":"Block","src":"2123:101:16","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":4466,"name":"__UUPSUpgradeable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":502,"src":"2130:22:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":4467,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2130:24:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4468,"nodeType":"ExpressionStatement","src":"2130:24:16"},{"expression":{"arguments":[{"expression":{"id":4470,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2176:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2180:6:16","memberName":"sender","nodeType":"MemberAccess","src":"2176:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4469,"name":"__Ownable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":54,"src":"2161:14:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":4472,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2161:26:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4473,"nodeType":"ExpressionStatement","src":"2161:26:16"},{"expression":{"id":4476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4474,"name":"rebalancer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4448,"src":"2194:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4475,"name":"_rebalancer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4461,"src":"2207:11:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2194:24:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4477,"nodeType":"ExpressionStatement","src":"2194:24:16"}]},"functionSelector":"c4d66de8","id":4479,"implemented":true,"kind":"function","modifiers":[{"id":4464,"kind":"modifierInvocation","modifierName":{"id":4463,"name":"initializer","nameLocations":["2111:11:16"],"nodeType":"IdentifierPath","referencedDeclaration":302,"src":"2111:11:16"},"nodeType":"ModifierInvocation","src":"2111:11:16"}],"name":"initialize","nameLocation":"2072:10:16","nodeType":"FunctionDefinition","parameters":{"id":4462,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4461,"mutability":"mutable","name":"_rebalancer","nameLocation":"2091:11:16","nodeType":"VariableDeclaration","scope":4479,"src":"2083:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4460,"name":"address","nodeType":"ElementaryTypeName","src":"2083:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2082:21:16"},"returnParameters":{"id":4465,"nodeType":"ParameterList","parameters":[],"src":"2123:0:16"},"scope":4917,"src":"2063:161:16","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4493,"nodeType":"Block","src":"2321:37:16","statements":[{"expression":{"id":4491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4489,"name":"rebalancer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4448,"src":"2328:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4490,"name":"_rebalancer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4481,"src":"2341:11:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2328:24:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4492,"nodeType":"ExpressionStatement","src":"2328:24:16"}]},"functionSelector":"8f2248bc","id":4494,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":4486,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4483,"src":"2311:8:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"id":4487,"kind":"modifierInvocation","modifierName":{"id":4485,"name":"reinitializer","nameLocations":["2297:13:16"],"nodeType":"IdentifierPath","referencedDeclaration":349,"src":"2297:13:16"},"nodeType":"ModifierInvocation","src":"2297:23:16"}],"name":"reinitialize","nameLocation":"2239:12:16","nodeType":"FunctionDefinition","parameters":{"id":4484,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4481,"mutability":"mutable","name":"_rebalancer","nameLocation":"2260:11:16","nodeType":"VariableDeclaration","scope":4494,"src":"2252:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4480,"name":"address","nodeType":"ElementaryTypeName","src":"2252:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4483,"mutability":"mutable","name":"_version","nameLocation":"2280:8:16","nodeType":"VariableDeclaration","scope":4494,"src":"2273:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4482,"name":"uint64","nodeType":"ElementaryTypeName","src":"2273:6:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"2251:38:16"},"returnParameters":{"id":4488,"nodeType":"ParameterList","parameters":[],"src":"2321:0:16"},"scope":4917,"src":"2230:128:16","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[584],"body":{"id":4502,"nodeType":"Block","src":"2446:2:16","statements":[]},"id":4503,"implemented":true,"kind":"function","modifiers":[{"id":4500,"kind":"modifierInvocation","modifierName":{"id":4499,"name":"onlyOwner","nameLocations":["2436:9:16"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"2436:9:16"},"nodeType":"ModifierInvocation","src":"2436:9:16"}],"name":"_authorizeUpgrade","nameLocation":"2373:17:16","nodeType":"FunctionDefinition","overrides":{"id":4498,"nodeType":"OverrideSpecifier","overrides":[],"src":"2427:8:16"},"parameters":{"id":4497,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4496,"mutability":"mutable","name":"newImplementation","nameLocation":"2399:17:16","nodeType":"VariableDeclaration","scope":4503,"src":"2391:25:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4495,"name":"address","nodeType":"ElementaryTypeName","src":"2391:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2390:27:16"},"returnParameters":{"id":4501,"nodeType":"ParameterList","parameters":[],"src":"2446:0:16"},"scope":4917,"src":"2364:84:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4679,"nodeType":"Block","src":"2941:951:16","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4518,"name":"periphery","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4450,"src":"2956:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":4521,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2977:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4520,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2969:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4519,"name":"address","nodeType":"ElementaryTypeName","src":"2969:7:16","typeDescriptions":{}}},"id":4522,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2969:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2956:23:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"506572697068657279206e6f7420736574","id":4524,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2981:19:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_65b375d97171da936ab457dc3ee73246dd9c78a6728e209f2b7bd00d6d44e84f","typeString":"literal_string \"Periphery not set\""},"value":"Periphery not set"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_65b375d97171da936ab457dc3ee73246dd9c78a6728e209f2b7bd00d6d44e84f","typeString":"literal_string \"Periphery not set\""}],"id":4517,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2948:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4525,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2948:53:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4526,"nodeType":"ExpressionStatement","src":"2948:53:16"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4528,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4507,"src":"3016:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3023:6:16","memberName":"length","nodeType":"MemberAccess","src":"3016:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":4530,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3032:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3016:17:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4174206c656173742074776f2061737365747320617265207265717569726564","id":4532,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3035:34:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_39cbcbdd9e6251e82f28a321c8ea534706a2cf624e365b64351e1f84ffc7ff8d","typeString":"literal_string \"At least two assets are required\""},"value":"At least two assets are required"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_39cbcbdd9e6251e82f28a321c8ea534706a2cf624e365b64351e1f84ffc7ff8d","typeString":"literal_string \"At least two assets are required\""}],"id":4527,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3008:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4533,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3008:62:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4534,"nodeType":"ExpressionStatement","src":"3008:62:16"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4536,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4507,"src":"3085:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3092:6:16","memberName":"length","nodeType":"MemberAccess","src":"3085:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4538,"name":"weights","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4510,"src":"3102:7:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":4539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3110:6:16","memberName":"length","nodeType":"MemberAccess","src":"3102:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3085:31:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"41737365747320616e642077656967687473206c656e677468206d69736d61746368","id":4541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3118:36:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_ebb567ad160cf2ebbf5e53ab40a3ffae6f6492169d006ee3f8bad6794e36f372","typeString":"literal_string \"Assets and weights length mismatch\""},"value":"Assets and weights length mismatch"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ebb567ad160cf2ebbf5e53ab40a3ffae6f6492169d006ee3f8bad6794e36f372","typeString":"literal_string \"Assets and weights length mismatch\""}],"id":4535,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3077:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4542,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3077:78:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4543,"nodeType":"ExpressionStatement","src":"3077:78:16"},{"body":{"id":4591,"nodeType":"Block","src":"3208:183:16","statements":[{"body":{"id":4589,"nodeType":"Block","src":"3265:119:16","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"baseExpression":{"baseExpression":{"id":4571,"name":"getPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4446,"src":"3292:7:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$","typeString":"mapping(address => mapping(address => address))"}},"id":4575,"indexExpression":{"baseExpression":{"id":4572,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4507,"src":"3300:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4574,"indexExpression":{"id":4573,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4545,"src":"3307:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3300:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3292:18:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":4579,"indexExpression":{"baseExpression":{"id":4576,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4507,"src":"3311:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4578,"indexExpression":{"id":4577,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4556,"src":"3318:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3311:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3292:29:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4570,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3284:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4569,"name":"address","nodeType":"ElementaryTypeName","src":"3284:7:16","typeDescriptions":{}}},"id":4580,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3284:38:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":4583,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3334:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4582,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3326:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4581,"name":"address","nodeType":"ElementaryTypeName","src":"3326:7:16","typeDescriptions":{}}},"id":4584,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3326:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3284:52:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"506f6f6c20616c72656164792065786973747320666f7220746869732070616972","id":4586,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3338:35:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_2258c7547209181d37eb4aebb58e4d2c60f10b97b943ea694f4dec24e242181e","typeString":"literal_string \"Pool already exists for this pair\""},"value":"Pool already exists for this pair"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2258c7547209181d37eb4aebb58e4d2c60f10b97b943ea694f4dec24e242181e","typeString":"literal_string \"Pool already exists for this pair\""}],"id":4568,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3276:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4587,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3276:98:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4588,"nodeType":"ExpressionStatement","src":"3276:98:16"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4561,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4556,"src":"3241:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4562,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4507,"src":"3245:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3252:6:16","memberName":"length","nodeType":"MemberAccess","src":"3245:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3241:17:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4590,"initializationExpression":{"assignments":[4556],"declarations":[{"constant":false,"id":4556,"mutability":"mutable","name":"j","nameLocation":"3230:1:16","nodeType":"VariableDeclaration","scope":4590,"src":"3222:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4555,"name":"uint256","nodeType":"ElementaryTypeName","src":"3222:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4560,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4557,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4545,"src":"3234:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3238:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3234:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3222:17:16"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3260:3:16","subExpression":{"id":4565,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4556,"src":"3260:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4567,"nodeType":"ExpressionStatement","src":"3260:3:16"},"nodeType":"ForStatement","src":"3217:167:16"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4548,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4545,"src":"3184:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4549,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4507,"src":"3188:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3195:6:16","memberName":"length","nodeType":"MemberAccess","src":"3188:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3184:17:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4592,"initializationExpression":{"assignments":[4545],"declarations":[{"constant":false,"id":4545,"mutability":"mutable","name":"i","nameLocation":"3177:1:16","nodeType":"VariableDeclaration","scope":4592,"src":"3169:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4544,"name":"uint256","nodeType":"ElementaryTypeName","src":"3169:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4547,"initialValue":{"hexValue":"30","id":4546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3181:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3169:13:16"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3203:3:16","subExpression":{"id":4552,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4545,"src":"3203:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4554,"nodeType":"ExpressionStatement","src":"3203:3:16"},"nodeType":"ForStatement","src":"3164:227:16"},{"assignments":[4595],"declarations":[{"constant":false,"id":4595,"mutability":"mutable","name":"newPool","nameLocation":"3412:7:16","nodeType":"VariableDeclaration","scope":4679,"src":"3399:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Pool_$4425","typeString":"contract BaluniV1Pool"},"typeName":{"id":4594,"nodeType":"UserDefinedTypeName","pathNode":{"id":4593,"name":"BaluniV1Pool","nameLocations":["3399:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":4425,"src":"3399:12:16"},"referencedDeclaration":4425,"src":"3399:12:16","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Pool_$4425","typeString":"contract BaluniV1Pool"}},"visibility":"internal"}],"id":4605,"initialValue":{"arguments":[{"id":4599,"name":"rebalancer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4448,"src":"3439:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4600,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4507,"src":"3451:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},{"id":4601,"name":"weights","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4510,"src":"3459:7:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":4602,"name":"trigger","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4512,"src":"3468:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4603,"name":"periphery","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4450,"src":"3477:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":4598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"NewExpression","src":"3422:16:16","typeDescriptions":{"typeIdentifier":"t_function_creation_nonpayable$_t_address_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_address_$returns$_t_contract$_BaluniV1Pool_$4425_$","typeString":"function (address,address[] memory,uint256[] memory,uint256,address) returns (contract BaluniV1Pool)"},"typeName":{"id":4597,"nodeType":"UserDefinedTypeName","pathNode":{"id":4596,"name":"BaluniV1Pool","nameLocations":["3426:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":4425,"src":"3426:12:16"},"referencedDeclaration":4425,"src":"3426:12:16","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Pool_$4425","typeString":"contract BaluniV1Pool"}}},"id":4604,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3422:65:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Pool_$4425","typeString":"contract BaluniV1Pool"}},"nodeType":"VariableDeclarationStatement","src":"3399:88:16"},{"assignments":[4607],"declarations":[{"constant":false,"id":4607,"mutability":"mutable","name":"poolAddress","nameLocation":"3504:11:16","nodeType":"VariableDeclaration","scope":4679,"src":"3496:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4606,"name":"address","nodeType":"ElementaryTypeName","src":"3496:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4612,"initialValue":{"arguments":[{"id":4610,"name":"newPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4595,"src":"3526:7:16","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Pool_$4425","typeString":"contract BaluniV1Pool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniV1Pool_$4425","typeString":"contract BaluniV1Pool"}],"id":4609,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3518:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4608,"name":"address","nodeType":"ElementaryTypeName","src":"3518:7:16","typeDescriptions":{}}},"id":4611,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3518:16:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3496:38:16"},{"expression":{"arguments":[{"id":4616,"name":"poolAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4607,"src":"3557:11:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":4613,"name":"allPools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4440,"src":"3543:8:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":4615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3552:4:16","memberName":"push","nodeType":"MemberAccess","src":"3543:13:16","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer,address)"}},"id":4617,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3543:26:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4618,"nodeType":"ExpressionStatement","src":"3543:26:16"},{"body":{"id":4669,"nodeType":"Block","src":"3620:182:16","statements":[{"body":{"id":4667,"nodeType":"Block","src":"3677:118:16","statements":[{"expression":{"id":4653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":4643,"name":"getPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4446,"src":"3688:7:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$","typeString":"mapping(address => mapping(address => address))"}},"id":4650,"indexExpression":{"baseExpression":{"id":4644,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4507,"src":"3696:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4646,"indexExpression":{"id":4645,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4620,"src":"3703:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3696:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3688:18:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":4651,"indexExpression":{"baseExpression":{"id":4647,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4507,"src":"3707:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4649,"indexExpression":{"id":4648,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4631,"src":"3714:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3707:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3688:29:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4652,"name":"poolAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4607,"src":"3720:11:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3688:43:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4654,"nodeType":"ExpressionStatement","src":"3688:43:16"},{"expression":{"id":4665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":4655,"name":"getPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4446,"src":"3742:7:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$","typeString":"mapping(address => mapping(address => address))"}},"id":4662,"indexExpression":{"baseExpression":{"id":4656,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4507,"src":"3750:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4658,"indexExpression":{"id":4657,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4631,"src":"3757:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3750:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3742:18:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":4663,"indexExpression":{"baseExpression":{"id":4659,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4507,"src":"3761:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4661,"indexExpression":{"id":4660,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4620,"src":"3768:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3761:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3742:29:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4664,"name":"poolAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4607,"src":"3774:11:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3742:43:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4666,"nodeType":"ExpressionStatement","src":"3742:43:16"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4636,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4631,"src":"3653:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4637,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4507,"src":"3657:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3664:6:16","memberName":"length","nodeType":"MemberAccess","src":"3657:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3653:17:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4668,"initializationExpression":{"assignments":[4631],"declarations":[{"constant":false,"id":4631,"mutability":"mutable","name":"j","nameLocation":"3642:1:16","nodeType":"VariableDeclaration","scope":4668,"src":"3634:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4630,"name":"uint256","nodeType":"ElementaryTypeName","src":"3634:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4635,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4632,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4620,"src":"3646:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4633,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3650:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3646:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3634:17:16"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3672:3:16","subExpression":{"id":4640,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4631,"src":"3672:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4642,"nodeType":"ExpressionStatement","src":"3672:3:16"},"nodeType":"ForStatement","src":"3629:166:16"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4623,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4620,"src":"3596:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4624,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4507,"src":"3600:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3607:6:16","memberName":"length","nodeType":"MemberAccess","src":"3600:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3596:17:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4670,"initializationExpression":{"assignments":[4620],"declarations":[{"constant":false,"id":4620,"mutability":"mutable","name":"i","nameLocation":"3589:1:16","nodeType":"VariableDeclaration","scope":4670,"src":"3581:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4619,"name":"uint256","nodeType":"ElementaryTypeName","src":"3581:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4622,"initialValue":{"hexValue":"30","id":4621,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3593:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3581:13:16"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3615:3:16","subExpression":{"id":4627,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4620,"src":"3615:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4629,"nodeType":"ExpressionStatement","src":"3615:3:16"},"nodeType":"ForStatement","src":"3576:226:16"},{"eventCall":{"arguments":[{"id":4672,"name":"poolAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4607,"src":"3827:11:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4673,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4507,"src":"3840:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},{"id":4674,"name":"rebalancer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4448,"src":"3848:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"},{"typeIdentifier":"t_address","typeString":"address"}],"id":4671,"name":"PoolCreated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4459,"src":"3815:11:16","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$returns$__$","typeString":"function (address,address[] memory,address)"}},"id":4675,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3815:44:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4676,"nodeType":"EmitStatement","src":"3810:49:16"},{"expression":{"id":4677,"name":"poolAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4607,"src":"3875:11:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":4516,"id":4678,"nodeType":"Return","src":"3868:18:16"}]},"documentation":{"id":4504,"nodeType":"StructuredDocumentation","src":"2454:368:16","text":" @dev Creates a new BaluniV1Pool contract and registers it in the factory.\n @param assets The array of asset addresses to be included in the pool.\n @param weights The array of weights corresponding to each asset in the pool.\n @param trigger The trigger value for rebalancing the pool.\n @return The address of the newly created pool."},"functionSelector":"3069873b","id":4680,"implemented":true,"kind":"function","modifiers":[],"name":"createPool","nameLocation":"2835:10:16","nodeType":"FunctionDefinition","parameters":{"id":4513,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4507,"mutability":"mutable","name":"assets","nameLocation":"2863:6:16","nodeType":"VariableDeclaration","scope":4680,"src":"2846:23:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4505,"name":"address","nodeType":"ElementaryTypeName","src":"2846:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4506,"nodeType":"ArrayTypeName","src":"2846:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":4510,"mutability":"mutable","name":"weights","nameLocation":"2888:7:16","nodeType":"VariableDeclaration","scope":4680,"src":"2871:24:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4508,"name":"uint256","nodeType":"ElementaryTypeName","src":"2871:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4509,"nodeType":"ArrayTypeName","src":"2871:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":4512,"mutability":"mutable","name":"trigger","nameLocation":"2905:7:16","nodeType":"VariableDeclaration","scope":4680,"src":"2897:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4511,"name":"uint256","nodeType":"ElementaryTypeName","src":"2897:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2845:68:16"},"returnParameters":{"id":4516,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4515,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4680,"src":"2932:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4514,"name":"address","nodeType":"ElementaryTypeName","src":"2932:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2931:9:16"},"scope":4917,"src":"2826:1066:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4689,"nodeType":"Block","src":"4077:28:16","statements":[{"expression":{"id":4687,"name":"allPools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4440,"src":"4091:8:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"functionReturnParameters":4686,"id":4688,"nodeType":"Return","src":"4084:15:16"}]},"documentation":{"id":4681,"nodeType":"StructuredDocumentation","src":"3898:111:16","text":" @dev Retrieves all the pools created by the factory.\n @return An array of pool addresses."},"functionSelector":"d88ff1f4","id":4690,"implemented":true,"kind":"function","modifiers":[],"name":"getAllPools","nameLocation":"4022:11:16","nodeType":"FunctionDefinition","parameters":{"id":4682,"nodeType":"ParameterList","parameters":[],"src":"4033:2:16"},"returnParameters":{"id":4686,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4685,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4690,"src":"4059:16:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4683,"name":"address","nodeType":"ElementaryTypeName","src":"4059:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4684,"nodeType":"ArrayTypeName","src":"4059:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"4058:18:16"},"scope":4917,"src":"4013:92:16","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":4699,"nodeType":"Block","src":"4281:35:16","statements":[{"expression":{"expression":{"id":4696,"name":"allPools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4440,"src":"4295:8:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":4697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4304:6:16","memberName":"length","nodeType":"MemberAccess","src":"4295:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4695,"id":4698,"nodeType":"Return","src":"4288:22:16"}]},"documentation":{"id":4691,"nodeType":"StructuredDocumentation","src":"4111:109:16","text":" @dev Retrieves the number of pools created by the factory.\n @return The count of pools."},"functionSelector":"b4ac6860","id":4700,"implemented":true,"kind":"function","modifiers":[],"name":"getPoolsCount","nameLocation":"4233:13:16","nodeType":"FunctionDefinition","parameters":{"id":4692,"nodeType":"ParameterList","parameters":[],"src":"4246:2:16"},"returnParameters":{"id":4695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4694,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4700,"src":"4272:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4693,"name":"uint256","nodeType":"ElementaryTypeName","src":"4272:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4271:9:16"},"scope":4917,"src":"4224:92:16","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":4720,"nodeType":"Block","src":"4566:88:16","statements":[{"assignments":[4711],"declarations":[{"constant":false,"id":4711,"mutability":"mutable","name":"pool","nameLocation":"4586:4:16","nodeType":"VariableDeclaration","scope":4720,"src":"4573:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Pool_$4425","typeString":"contract BaluniV1Pool"},"typeName":{"id":4710,"nodeType":"UserDefinedTypeName","pathNode":{"id":4709,"name":"BaluniV1Pool","nameLocations":["4573:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":4425,"src":"4573:12:16"},"referencedDeclaration":4425,"src":"4573:12:16","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Pool_$4425","typeString":"contract BaluniV1Pool"}},"visibility":"internal"}],"id":4715,"initialValue":{"arguments":[{"id":4713,"name":"poolAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4703,"src":"4606:11:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4712,"name":"BaluniV1Pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4425,"src":"4593:12:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_BaluniV1Pool_$4425_$","typeString":"type(contract BaluniV1Pool)"}},"id":4714,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4593:25:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Pool_$4425","typeString":"contract BaluniV1Pool"}},"nodeType":"VariableDeclarationStatement","src":"4573:45:16"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4716,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4711,"src":"4632:4:16","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Pool_$4425","typeString":"contract BaluniV1Pool"}},"id":4717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4637:9:16","memberName":"getAssets","nodeType":"MemberAccess","referencedDeclaration":3776,"src":"4632:14:16","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function () view external returns (address[] memory)"}},"id":4718,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4632:16:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":4708,"id":4719,"nodeType":"Return","src":"4625:23:16"}]},"documentation":{"id":4701,"nodeType":"StructuredDocumentation","src":"4322:155:16","text":" @dev Retrieves the assets of a specific pool.\n @param poolAddress The address of the pool.\n @return An array of asset addresses."},"functionSelector":"4276b97b","id":4721,"implemented":true,"kind":"function","modifiers":[],"name":"getPoolAssets","nameLocation":"4490:13:16","nodeType":"FunctionDefinition","parameters":{"id":4704,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4703,"mutability":"mutable","name":"poolAddress","nameLocation":"4512:11:16","nodeType":"VariableDeclaration","scope":4721,"src":"4504:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4702,"name":"address","nodeType":"ElementaryTypeName","src":"4504:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4503:21:16"},"returnParameters":{"id":4708,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4707,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4721,"src":"4548:16:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4705,"name":"address","nodeType":"ElementaryTypeName","src":"4548:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4706,"nodeType":"ArrayTypeName","src":"4548:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"4547:18:16"},"scope":4917,"src":"4481:173:16","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":4740,"nodeType":"Block","src":"4972:52:16","statements":[{"expression":{"arguments":[{"baseExpression":{"baseExpression":{"id":4733,"name":"getPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4446,"src":"4994:7:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$","typeString":"mapping(address => mapping(address => address))"}},"id":4735,"indexExpression":{"id":4734,"name":"asset1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4724,"src":"5002:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4994:15:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":4737,"indexExpression":{"id":4736,"name":"asset2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4726,"src":"5010:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4994:23:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4732,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4986:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4731,"name":"address","nodeType":"ElementaryTypeName","src":"4986:7:16","typeDescriptions":{}}},"id":4738,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4986:32:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":4730,"id":4739,"nodeType":"Return","src":"4979:39:16"}]},"documentation":{"id":4722,"nodeType":"StructuredDocumentation","src":"4660:219:16","text":" @dev Retrieves the pool address based on the given assets.\n @param asset1 The address of the first asset.\n @param asset2 The address of the second asset.\n @return The address of the pool."},"functionSelector":"2d5e94a7","id":4741,"implemented":true,"kind":"function","modifiers":[],"name":"getPoolByAssets","nameLocation":"4892:15:16","nodeType":"FunctionDefinition","parameters":{"id":4727,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4724,"mutability":"mutable","name":"asset1","nameLocation":"4916:6:16","nodeType":"VariableDeclaration","scope":4741,"src":"4908:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4723,"name":"address","nodeType":"ElementaryTypeName","src":"4908:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4726,"mutability":"mutable","name":"asset2","nameLocation":"4932:6:16","nodeType":"VariableDeclaration","scope":4741,"src":"4924:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4725,"name":"address","nodeType":"ElementaryTypeName","src":"4924:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4907:32:16"},"returnParameters":{"id":4730,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4729,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4741,"src":"4963:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4728,"name":"address","nodeType":"ElementaryTypeName","src":"4963:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4962:9:16"},"scope":4917,"src":"4883:141:16","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":4870,"nodeType":"Block","src":"5306:667:16","statements":[{"assignments":[4754],"declarations":[{"constant":false,"id":4754,"mutability":"mutable","name":"pools","nameLocation":"5330:5:16","nodeType":"VariableDeclaration","scope":4870,"src":"5313:22:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4752,"name":"address","nodeType":"ElementaryTypeName","src":"5313:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4753,"nodeType":"ArrayTypeName","src":"5313:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":4761,"initialValue":{"arguments":[{"expression":{"id":4758,"name":"allPools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4440,"src":"5352:8:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":4759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5361:6:16","memberName":"length","nodeType":"MemberAccess","src":"5352:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4757,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5338:13:16","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address[] memory)"},"typeName":{"baseType":{"id":4755,"name":"address","nodeType":"ElementaryTypeName","src":"5342:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4756,"nodeType":"ArrayTypeName","src":"5342:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"id":4760,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5338:30:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"5313:55:16"},{"assignments":[4763],"declarations":[{"constant":false,"id":4763,"mutability":"mutable","name":"count","nameLocation":"5383:5:16","nodeType":"VariableDeclaration","scope":4870,"src":"5375:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4762,"name":"uint256","nodeType":"ElementaryTypeName","src":"5375:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4765,"initialValue":{"hexValue":"30","id":4764,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5391:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5375:17:16"},{"body":{"id":4835,"nodeType":"Block","src":"5447:365:16","statements":[{"assignments":[4779],"declarations":[{"constant":false,"id":4779,"mutability":"mutable","name":"pool","nameLocation":"5469:4:16","nodeType":"VariableDeclaration","scope":4835,"src":"5456:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Pool_$4425","typeString":"contract BaluniV1Pool"},"typeName":{"id":4778,"nodeType":"UserDefinedTypeName","pathNode":{"id":4777,"name":"BaluniV1Pool","nameLocations":["5456:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":4425,"src":"5456:12:16"},"referencedDeclaration":4425,"src":"5456:12:16","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Pool_$4425","typeString":"contract BaluniV1Pool"}},"visibility":"internal"}],"id":4785,"initialValue":{"arguments":[{"baseExpression":{"id":4781,"name":"allPools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4440,"src":"5489:8:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":4783,"indexExpression":{"id":4782,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4767,"src":"5498:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5489:11:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4780,"name":"BaluniV1Pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4425,"src":"5476:12:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_BaluniV1Pool_$4425_$","typeString":"type(contract BaluniV1Pool)"}},"id":4784,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5476:25:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Pool_$4425","typeString":"contract BaluniV1Pool"}},"nodeType":"VariableDeclarationStatement","src":"5456:45:16"},{"assignments":[4790],"declarations":[{"constant":false,"id":4790,"mutability":"mutable","name":"assets","nameLocation":"5527:6:16","nodeType":"VariableDeclaration","scope":4835,"src":"5510:23:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4788,"name":"address","nodeType":"ElementaryTypeName","src":"5510:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4789,"nodeType":"ArrayTypeName","src":"5510:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":4794,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4791,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4779,"src":"5536:4:16","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Pool_$4425","typeString":"contract BaluniV1Pool"}},"id":4792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5541:9:16","memberName":"getAssets","nodeType":"MemberAccess","referencedDeclaration":3776,"src":"5536:14:16","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function () view external returns (address[] memory)"}},"id":4793,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5536:16:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"5510:42:16"},{"body":{"id":4826,"nodeType":"Block","src":"5607:135:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":4806,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4790,"src":"5622:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4808,"indexExpression":{"id":4807,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4796,"src":"5629:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5622:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4809,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4744,"src":"5635:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5622:18:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4825,"nodeType":"IfStatement","src":"5618:115:16","trueBody":{"id":4824,"nodeType":"Block","src":"5642:91:16","statements":[{"expression":{"id":4818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4811,"name":"pools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4754,"src":"5655:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4813,"indexExpression":{"id":4812,"name":"count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4763,"src":"5661:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5655:12:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4816,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4779,"src":"5678:4:16","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Pool_$4425","typeString":"contract BaluniV1Pool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniV1Pool_$4425","typeString":"contract BaluniV1Pool"}],"id":4815,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5670:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4814,"name":"address","nodeType":"ElementaryTypeName","src":"5670:7:16","typeDescriptions":{}}},"id":4817,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5670:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5655:28:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4819,"nodeType":"ExpressionStatement","src":"5655:28:16"},{"expression":{"id":4821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5696:7:16","subExpression":{"id":4820,"name":"count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4763,"src":"5696:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4822,"nodeType":"ExpressionStatement","src":"5696:7:16"},{"id":4823,"nodeType":"Break","src":"5716:5:16"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4799,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4796,"src":"5583:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4800,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4790,"src":"5587:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5594:6:16","memberName":"length","nodeType":"MemberAccess","src":"5587:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5583:17:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4827,"initializationExpression":{"assignments":[4796],"declarations":[{"constant":false,"id":4796,"mutability":"mutable","name":"j","nameLocation":"5576:1:16","nodeType":"VariableDeclaration","scope":4827,"src":"5568:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4795,"name":"uint256","nodeType":"ElementaryTypeName","src":"5568:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4798,"initialValue":{"hexValue":"30","id":4797,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5580:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5568:13:16"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5602:3:16","subExpression":{"id":4803,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4796,"src":"5602:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4805,"nodeType":"ExpressionStatement","src":"5602:3:16"},"nodeType":"ForStatement","src":"5563:179:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4828,"name":"count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4763,"src":"5756:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4829,"name":"pools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4754,"src":"5765:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5771:6:16","memberName":"length","nodeType":"MemberAccess","src":"5765:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5756:21:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4834,"nodeType":"IfStatement","src":"5752:53:16","trueBody":{"id":4833,"nodeType":"Block","src":"5779:26:16","statements":[{"id":4832,"nodeType":"Break","src":"5790:5:16"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4770,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4767,"src":"5421:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4771,"name":"allPools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4440,"src":"5425:8:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":4772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5434:6:16","memberName":"length","nodeType":"MemberAccess","src":"5425:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5421:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4836,"initializationExpression":{"assignments":[4767],"declarations":[{"constant":false,"id":4767,"mutability":"mutable","name":"i","nameLocation":"5414:1:16","nodeType":"VariableDeclaration","scope":4836,"src":"5406:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4766,"name":"uint256","nodeType":"ElementaryTypeName","src":"5406:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4769,"initialValue":{"hexValue":"30","id":4768,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5418:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5406:13:16"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5442:3:16","subExpression":{"id":4774,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4767,"src":"5442:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4776,"nodeType":"ExpressionStatement","src":"5442:3:16"},"nodeType":"ForStatement","src":"5401:411:16"},{"assignments":[4841],"declarations":[{"constant":false,"id":4841,"mutability":"mutable","name":"result","nameLocation":"5837:6:16","nodeType":"VariableDeclaration","scope":4870,"src":"5820:23:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4839,"name":"address","nodeType":"ElementaryTypeName","src":"5820:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4840,"nodeType":"ArrayTypeName","src":"5820:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":4847,"initialValue":{"arguments":[{"id":4845,"name":"count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4763,"src":"5860:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4844,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5846:13:16","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address[] memory)"},"typeName":{"baseType":{"id":4842,"name":"address","nodeType":"ElementaryTypeName","src":"5850:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4843,"nodeType":"ArrayTypeName","src":"5850:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"id":4846,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5846:20:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"5820:46:16"},{"body":{"id":4866,"nodeType":"Block","src":"5909:37:16","statements":[{"expression":{"id":4864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4858,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4841,"src":"5918:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4860,"indexExpression":{"id":4859,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4849,"src":"5925:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5918:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":4861,"name":"pools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4754,"src":"5930:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4863,"indexExpression":{"id":4862,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4849,"src":"5936:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5930:8:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5918:20:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4865,"nodeType":"ExpressionStatement","src":"5918:20:16"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4852,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4849,"src":"5893:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4853,"name":"count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4763,"src":"5897:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5893:9:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4867,"initializationExpression":{"assignments":[4849],"declarations":[{"constant":false,"id":4849,"mutability":"mutable","name":"i","nameLocation":"5886:1:16","nodeType":"VariableDeclaration","scope":4867,"src":"5878:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4848,"name":"uint256","nodeType":"ElementaryTypeName","src":"5878:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4851,"initialValue":{"hexValue":"30","id":4850,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5890:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5878:13:16"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5904:3:16","subExpression":{"id":4855,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4849,"src":"5904:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4857,"nodeType":"ExpressionStatement","src":"5904:3:16"},"nodeType":"ForStatement","src":"5873:73:16"},{"expression":{"id":4868,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4841,"src":"5961:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":4749,"id":4869,"nodeType":"Return","src":"5954:13:16"}]},"documentation":{"id":4742,"nodeType":"StructuredDocumentation","src":"5030:191:16","text":" @dev Returns an array of pool addresses that contain the specified token.\n @param token The address of the token to search for.\n @return An array of pool addresses."},"functionSelector":"b4340e6a","id":4871,"implemented":true,"kind":"function","modifiers":[],"name":"getPoolsByAsset","nameLocation":"5234:15:16","nodeType":"FunctionDefinition","parameters":{"id":4745,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4744,"mutability":"mutable","name":"token","nameLocation":"5258:5:16","nodeType":"VariableDeclaration","scope":4871,"src":"5250:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4743,"name":"address","nodeType":"ElementaryTypeName","src":"5250:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5249:15:16"},"returnParameters":{"id":4749,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4748,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4871,"src":"5288:16:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4746,"name":"address","nodeType":"ElementaryTypeName","src":"5288:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4747,"nodeType":"ArrayTypeName","src":"5288:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"5287:18:16"},"scope":4917,"src":"5225:748:16","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":4883,"nodeType":"Block","src":"6188:38:16","statements":[{"expression":{"id":4881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4879,"name":"periphery","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4450,"src":"6195:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4880,"name":"_newPeriphery","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4874,"src":"6207:13:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6195:25:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4882,"nodeType":"ExpressionStatement","src":"6195:25:16"}]},"documentation":{"id":4872,"nodeType":"StructuredDocumentation","src":"5979:138:16","text":" @dev Changes the address of the periphery contract.\n @param _newPeriphery The new address of the periphery contract."},"functionSelector":"e9b31cff","id":4884,"implemented":true,"kind":"function","modifiers":[{"id":4877,"kind":"modifierInvocation","modifierName":{"id":4876,"name":"onlyOwner","nameLocations":["6178:9:16"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"6178:9:16"},"nodeType":"ModifierInvocation","src":"6178:9:16"}],"name":"changePeriphery","nameLocation":"6130:15:16","nodeType":"FunctionDefinition","parameters":{"id":4875,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4874,"mutability":"mutable","name":"_newPeriphery","nameLocation":"6154:13:16","nodeType":"VariableDeclaration","scope":4884,"src":"6146:21:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4873,"name":"address","nodeType":"ElementaryTypeName","src":"6146:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6145:23:16"},"returnParameters":{"id":4878,"nodeType":"ParameterList","parameters":[],"src":"6188:0:16"},"scope":4917,"src":"6121:105:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4915,"nodeType":"Block","src":"6295:151:16","statements":[{"body":{"id":4911,"nodeType":"Block","src":"6348:74:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":4902,"name":"allPools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4440,"src":"6361:8:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":4904,"indexExpression":{"id":4903,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4892,"src":"6370:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6361:11:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4905,"name":"_pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4886,"src":"6376:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6361:20:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4910,"nodeType":"IfStatement","src":"6357:58:16","trueBody":{"id":4909,"nodeType":"Block","src":"6383:32:16","statements":[{"expression":{"hexValue":"74727565","id":4907,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6401:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":4890,"id":4908,"nodeType":"Return","src":"6394:11:16"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4895,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4892,"src":"6322:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4896,"name":"allPools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4440,"src":"6326:8:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":4897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6335:6:16","memberName":"length","nodeType":"MemberAccess","src":"6326:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6322:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4912,"initializationExpression":{"assignments":[4892],"declarations":[{"constant":false,"id":4892,"mutability":"mutable","name":"i","nameLocation":"6315:1:16","nodeType":"VariableDeclaration","scope":4912,"src":"6307:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4891,"name":"uint256","nodeType":"ElementaryTypeName","src":"6307:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4894,"initialValue":{"hexValue":"30","id":4893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6319:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6307:13:16"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6343:3:16","subExpression":{"id":4899,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4892,"src":"6343:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4901,"nodeType":"ExpressionStatement","src":"6343:3:16"},"nodeType":"ForStatement","src":"6302:120:16"},{"expression":{"hexValue":"66616c7365","id":4913,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6435:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":4890,"id":4914,"nodeType":"Return","src":"6428:12:16"}]},"functionSelector":"89345efb","id":4916,"implemented":true,"kind":"function","modifiers":[],"name":"poolExist","nameLocation":"6241:9:16","nodeType":"FunctionDefinition","parameters":{"id":4887,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4886,"mutability":"mutable","name":"_pool","nameLocation":"6259:5:16","nodeType":"VariableDeclaration","scope":4916,"src":"6251:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4885,"name":"address","nodeType":"ElementaryTypeName","src":"6251:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6250:15:16"},"returnParameters":{"id":4890,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4889,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4916,"src":"6289:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4888,"name":"bool","nodeType":"ElementaryTypeName","src":"6289:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6288:6:16"},"scope":4917,"src":"6232:214:16","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":4918,"src":"1731:4718:16","usedErrors":[30,35,211,214,475,480,858,871,1768,1771],"usedEvents":[41,219,837,4459]}],"src":"40:6411:16"},"id":16},"contracts/balancer/BColor.sol":{"ast":{"absolutePath":"contracts/balancer/BColor.sol","exportedSymbols":{"BBronze":[4940],"BColor":[4925]},"id":4941,"nodeType":"SourceUnit","nodes":[{"id":4919,"literals":["solidity","0.8",".25"],"nodeType":"PragmaDirective","src":"656:23:17"},{"abstract":true,"baseContracts":[],"canonicalName":"BColor","contractDependencies":[],"contractKind":"contract","fullyImplemented":false,"id":4925,"linearizedBaseContracts":[4925],"name":"BColor","nameLocation":"701:6:17","nodeType":"ContractDefinition","nodes":[{"functionSelector":"9a86139b","id":4924,"implemented":false,"kind":"function","modifiers":[],"name":"getColor","nameLocation":"724:8:17","nodeType":"FunctionDefinition","parameters":{"id":4920,"nodeType":"ParameterList","parameters":[],"src":"732:2:17"},"returnParameters":{"id":4923,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4922,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4924,"src":"766:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4921,"name":"bytes32","nodeType":"ElementaryTypeName","src":"766:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"765:9:17"},"scope":4925,"src":"715:60:17","stateMutability":"view","virtual":true,"visibility":"external"}],"scope":4941,"src":"683:95:17","usedErrors":[],"usedEvents":[]},{"abstract":false,"baseContracts":[{"baseName":{"id":4926,"name":"BColor","nameLocations":["802:6:17"],"nodeType":"IdentifierPath","referencedDeclaration":4925,"src":"802:6:17"},"id":4927,"nodeType":"InheritanceSpecifier","src":"802:6:17"}],"canonicalName":"BBronze","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":4940,"linearizedBaseContracts":[4940,4925],"name":"BBronze","nameLocation":"791:7:17","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[4924],"body":{"id":4938,"nodeType":"Block","src":"877:43:17","statements":[{"expression":{"arguments":[{"hexValue":"42524f4e5a45","id":4935,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"903:8:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_4163e3f7a99fc80b57ec838b307c7a27558a888bb048d8e4d5cc03e3134dee47","typeString":"literal_string \"BRONZE\""},"value":"BRONZE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_4163e3f7a99fc80b57ec838b307c7a27558a888bb048d8e4d5cc03e3134dee47","typeString":"literal_string \"BRONZE\""}],"id":4934,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"895:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":4933,"name":"bytes32","nodeType":"ElementaryTypeName","src":"895:7:17","typeDescriptions":{}}},"id":4936,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"895:17:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4932,"id":4937,"nodeType":"Return","src":"888:24:17"}]},"functionSelector":"9a86139b","id":4939,"implemented":true,"kind":"function","modifiers":[],"name":"getColor","nameLocation":"825:8:17","nodeType":"FunctionDefinition","overrides":{"id":4929,"nodeType":"OverrideSpecifier","overrides":[],"src":"850:8:17"},"parameters":{"id":4928,"nodeType":"ParameterList","parameters":[],"src":"833:2:17"},"returnParameters":{"id":4932,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4931,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4939,"src":"868:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4930,"name":"bytes32","nodeType":"ElementaryTypeName","src":"868:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"867:9:17"},"scope":4940,"src":"816:104:17","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":4941,"src":"782:141:17","usedErrors":[],"usedEvents":[]}],"src":"656:269:17"},"id":17},"contracts/balancer/BConst.sol":{"ast":{"absolutePath":"contracts/balancer/BConst.sol","exportedSymbols":{"BBronze":[4940],"BColor":[4925],"BConst":[5028]},"id":5029,"nodeType":"SourceUnit","nodes":[{"id":4942,"literals":["solidity","0.8",".25"],"nodeType":"PragmaDirective","src":"656:23:18"},{"absolutePath":"contracts/balancer/BColor.sol","file":"./BColor.sol","id":4943,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5029,"sourceUnit":4941,"src":"683:22:18","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":4944,"name":"BBronze","nameLocations":["728:7:18"],"nodeType":"IdentifierPath","referencedDeclaration":4940,"src":"728:7:18"},"id":4945,"nodeType":"InheritanceSpecifier","src":"728:7:18"}],"canonicalName":"BConst","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":5028,"linearizedBaseContracts":[5028,4940,4925],"name":"BConst","nameLocation":"718:6:18","nodeType":"ContractDefinition","nodes":[{"constant":true,"functionSelector":"c36596a6","id":4950,"mutability":"constant","name":"BONE","nameLocation":"764:4:18","nodeType":"VariableDeclaration","scope":5028,"src":"743:36:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4946,"name":"uint","nodeType":"ElementaryTypeName","src":"743:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"id":4949,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4947,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"771:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3138","id":4948,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"777:2:18","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"771:8:18","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}},"visibility":"public"},{"constant":true,"functionSelector":"b7b800a4","id":4953,"mutability":"constant","name":"MIN_BOUND_TOKENS","nameLocation":"809:16:18","nodeType":"VariableDeclaration","scope":5028,"src":"788:41:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4951,"name":"uint","nodeType":"ElementaryTypeName","src":"788:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":4952,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"828:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"public"},{"constant":true,"functionSelector":"b0e0d136","id":4956,"mutability":"constant","name":"MAX_BOUND_TOKENS","nameLocation":"857:16:18","nodeType":"VariableDeclaration","scope":5028,"src":"836:41:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4954,"name":"uint","nodeType":"ElementaryTypeName","src":"836:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"38","id":4955,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"876:1:18","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"visibility":"public"},{"constant":true,"functionSelector":"76c7a3c7","id":4963,"mutability":"constant","name":"MIN_FEE","nameLocation":"907:7:18","nodeType":"VariableDeclaration","scope":5028,"src":"886:45:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4957,"name":"uint","nodeType":"ElementaryTypeName","src":"886:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4962,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"id":4958,"name":"BONE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4950,"src":"917:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"commonType":{"typeIdentifier":"t_rational_1000000_by_1","typeString":"int_const 1000000"},"id":4961,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4959,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"924:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"36","id":4960,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"930:1:18","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"924:7:18","typeDescriptions":{"typeIdentifier":"t_rational_1000000_by_1","typeString":"int_const 1000000"}},"src":"917:14:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":true,"functionSelector":"bc063e1a","id":4968,"mutability":"constant","name":"MAX_FEE","nameLocation":"959:7:18","nodeType":"VariableDeclaration","scope":5028,"src":"938:40:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4964,"name":"uint","nodeType":"ElementaryTypeName","src":"938:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4967,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"id":4965,"name":"BONE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4950,"src":"969:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3130","id":4966,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"976:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"969:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":true,"functionSelector":"c6580d12","id":4971,"mutability":"constant","name":"EXIT_FEE","nameLocation":"1006:8:18","nodeType":"VariableDeclaration","scope":5028,"src":"985:33:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4969,"name":"uint","nodeType":"ElementaryTypeName","src":"985:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30","id":4970,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1017:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"visibility":"public"},{"constant":true,"functionSelector":"218b5382","id":4974,"mutability":"constant","name":"MIN_WEIGHT","nameLocation":"1048:10:18","nodeType":"VariableDeclaration","scope":5028,"src":"1027:38:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4972,"name":"uint","nodeType":"ElementaryTypeName","src":"1027:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"id":4973,"name":"BONE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4950,"src":"1061:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":true,"functionSelector":"e4a28a52","id":4979,"mutability":"constant","name":"MAX_WEIGHT","nameLocation":"1093:10:18","nodeType":"VariableDeclaration","scope":5028,"src":"1072:43:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4975,"name":"uint","nodeType":"ElementaryTypeName","src":"1072:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4978,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"id":4976,"name":"BONE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4950,"src":"1106:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3530","id":4977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1113:2:18","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"50"},"src":"1106:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":true,"functionSelector":"09a3bbe4","id":4984,"mutability":"constant","name":"MAX_TOTAL_WEIGHT","nameLocation":"1143:16:18","nodeType":"VariableDeclaration","scope":5028,"src":"1122:49:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4980,"name":"uint","nodeType":"ElementaryTypeName","src":"1122:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4983,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"id":4981,"name":"BONE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4950,"src":"1162:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3530","id":4982,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1169:2:18","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"50"},"src":"1162:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":true,"functionSelector":"867378c5","id":4991,"mutability":"constant","name":"MIN_BALANCE","nameLocation":"1199:11:18","nodeType":"VariableDeclaration","scope":5028,"src":"1178:50:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4985,"name":"uint","nodeType":"ElementaryTypeName","src":"1178:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4990,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"id":4986,"name":"BONE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4950,"src":"1213:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"commonType":{"typeIdentifier":"t_rational_1000000000000_by_1","typeString":"int_const 1000000000000"},"id":4989,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4987,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1220:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3132","id":4988,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1226:2:18","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"12"},"src":"1220:8:18","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000_by_1","typeString":"int_const 1000000000000"}},"src":"1213:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":true,"functionSelector":"9381cd2b","id":4996,"mutability":"constant","name":"INIT_POOL_SUPPLY","nameLocation":"1258:16:18","nodeType":"VariableDeclaration","scope":5028,"src":"1237:50:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4992,"name":"uint","nodeType":"ElementaryTypeName","src":"1237:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4995,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"id":4993,"name":"BONE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4950,"src":"1277:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"313030","id":4994,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1284:3:18","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"1277:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":true,"functionSelector":"ba019dab","id":4999,"mutability":"constant","name":"MIN_BPOW_BASE","nameLocation":"1317:13:18","nodeType":"VariableDeclaration","scope":5028,"src":"1296:42:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4997,"name":"uint","nodeType":"ElementaryTypeName","src":"1296:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":4998,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1333:5:18","subdenomination":"wei","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"public"},{"constant":true,"functionSelector":"bc694ea2","id":5007,"mutability":"constant","name":"MAX_BPOW_BASE","nameLocation":"1366:13:18","nodeType":"VariableDeclaration","scope":5028,"src":"1345:55:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5000,"name":"uint","nodeType":"ElementaryTypeName","src":"1345:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5006,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5003,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5001,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1383:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5002,"name":"BONE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4950,"src":"1387:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1383:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5004,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1382:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5005,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1395:5:18","subdenomination":"wei","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1382:18:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":true,"functionSelector":"189d00ca","id":5014,"mutability":"constant","name":"BPOW_PRECISION","nameLocation":"1428:14:18","nodeType":"VariableDeclaration","scope":5028,"src":"1407:53:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5008,"name":"uint","nodeType":"ElementaryTypeName","src":"1407:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5013,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"id":5009,"name":"BONE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4950,"src":"1445:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000_by_1","typeString":"int_const 10000000000"},"id":5012,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5010,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1452:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3130","id":5011,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1458:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1452:8:18","typeDescriptions":{"typeIdentifier":"t_rational_10000000000_by_1","typeString":"int_const 10000000000"}},"src":"1445:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":true,"functionSelector":"ec093021","id":5019,"mutability":"constant","name":"MAX_IN_RATIO","nameLocation":"1490:12:18","nodeType":"VariableDeclaration","scope":5028,"src":"1469:44:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5015,"name":"uint","nodeType":"ElementaryTypeName","src":"1469:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5018,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"id":5016,"name":"BONE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4950,"src":"1505:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":5017,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1512:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1505:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":true,"functionSelector":"992e2a92","id":5027,"mutability":"constant","name":"MAX_OUT_RATIO","nameLocation":"1541:13:18","nodeType":"VariableDeclaration","scope":5028,"src":"1520:55:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5020,"name":"uint","nodeType":"ElementaryTypeName","src":"1520:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5026,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5023,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"id":5021,"name":"BONE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4950,"src":"1558:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"33","id":5022,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1565:1:18","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"1558:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5024,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1557:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":5025,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1570:5:18","subdenomination":"wei","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1557:18:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"}],"scope":5029,"src":"709:870:18","usedErrors":[],"usedEvents":[]}],"src":"656:925:18"},"id":18},"contracts/balancer/BMath.sol":{"ast":{"absolutePath":"contracts/balancer/BMath.sol","exportedSymbols":{"BBronze":[4940],"BColor":[4925],"BConst":[5028],"BMath":[5600],"BNum":[6073]},"id":5601,"nodeType":"SourceUnit","nodes":[{"id":5030,"literals":["solidity","0.8",".25"],"nodeType":"PragmaDirective","src":"656:23:19"},{"absolutePath":"contracts/balancer/BNum.sol","file":"./BNum.sol","id":5031,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5601,"sourceUnit":6074,"src":"683:20:19","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":5032,"name":"BBronze","nameLocations":["725:7:19"],"nodeType":"IdentifierPath","referencedDeclaration":4940,"src":"725:7:19"},"id":5033,"nodeType":"InheritanceSpecifier","src":"725:7:19"},{"baseName":{"id":5034,"name":"BConst","nameLocations":["734:6:19"],"nodeType":"IdentifierPath","referencedDeclaration":5028,"src":"734:6:19"},"id":5035,"nodeType":"InheritanceSpecifier","src":"734:6:19"},{"baseName":{"id":5036,"name":"BNum","nameLocations":["742:4:19"],"nodeType":"IdentifierPath","referencedDeclaration":6073,"src":"742:4:19"},"id":5037,"nodeType":"InheritanceSpecifier","src":"742:4:19"}],"canonicalName":"BMath","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":5600,"linearizedBaseContracts":[5600,6073,5028,4940,4925],"name":"BMath","nameLocation":"716:5:19","nodeType":"ContractDefinition","nodes":[{"body":{"id":5091,"nodeType":"Block","src":"1896:276:19","statements":[{"assignments":[5053],"declarations":[{"constant":false,"id":5053,"mutability":"mutable","name":"numer","nameLocation":"1912:5:19","nodeType":"VariableDeclaration","scope":5091,"src":"1907:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5052,"name":"uint","nodeType":"ElementaryTypeName","src":"1907:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5058,"initialValue":{"arguments":[{"id":5055,"name":"tokenBalanceIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5039,"src":"1925:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5056,"name":"tokenWeightIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5041,"src":"1941:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5054,"name":"bdiv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5826,"src":"1920:4:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5057,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1920:35:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1907:48:19"},{"assignments":[5060],"declarations":[{"constant":false,"id":5060,"mutability":"mutable","name":"denom","nameLocation":"1971:5:19","nodeType":"VariableDeclaration","scope":5091,"src":"1966:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5059,"name":"uint","nodeType":"ElementaryTypeName","src":"1966:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5065,"initialValue":{"arguments":[{"id":5062,"name":"tokenBalanceOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5043,"src":"1984:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5063,"name":"tokenWeightOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5045,"src":"2001:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5061,"name":"bdiv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5826,"src":"1979:4:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5064,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1979:37:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1966:50:19"},{"assignments":[5067],"declarations":[{"constant":false,"id":5067,"mutability":"mutable","name":"ratio","nameLocation":"2032:5:19","nodeType":"VariableDeclaration","scope":5091,"src":"2027:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5066,"name":"uint","nodeType":"ElementaryTypeName","src":"2027:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5072,"initialValue":{"arguments":[{"id":5069,"name":"numer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5053,"src":"2045:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5070,"name":"denom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5060,"src":"2052:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5068,"name":"bdiv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5826,"src":"2040:4:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5071,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2040:18:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2027:31:19"},{"assignments":[5074],"declarations":[{"constant":false,"id":5074,"mutability":"mutable","name":"scale","nameLocation":"2074:5:19","nodeType":"VariableDeclaration","scope":5091,"src":"2069:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5073,"name":"uint","nodeType":"ElementaryTypeName","src":"2069:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5082,"initialValue":{"arguments":[{"id":5076,"name":"BONE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4950,"src":"2087:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":5078,"name":"BONE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4950,"src":"2098:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5079,"name":"swapFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5047,"src":"2104:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5077,"name":"bsub","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5683,"src":"2093:4:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5080,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2093:19:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5075,"name":"bdiv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5826,"src":"2082:4:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5081,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2082:31:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2069:44:19"},{"expression":{"components":[{"id":5088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5083,"name":"spotPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5050,"src":"2133:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5085,"name":"ratio","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5067,"src":"2150:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5086,"name":"scale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5074,"src":"2157:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5084,"name":"bmul","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5766,"src":"2145:4:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5087,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2145:18:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2133:30:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5089,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2132:32:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5051,"id":5090,"nodeType":"Return","src":"2124:40:19"}]},"functionSelector":"a221ee49","id":5092,"implemented":true,"kind":"function","modifiers":[],"name":"calcSpotPrice","nameLocation":"1672:13:19","nodeType":"FunctionDefinition","parameters":{"id":5048,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5039,"mutability":"mutable","name":"tokenBalanceIn","nameLocation":"1701:14:19","nodeType":"VariableDeclaration","scope":5092,"src":"1696:19:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5038,"name":"uint","nodeType":"ElementaryTypeName","src":"1696:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5041,"mutability":"mutable","name":"tokenWeightIn","nameLocation":"1731:13:19","nodeType":"VariableDeclaration","scope":5092,"src":"1726:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5040,"name":"uint","nodeType":"ElementaryTypeName","src":"1726:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5043,"mutability":"mutable","name":"tokenBalanceOut","nameLocation":"1760:15:19","nodeType":"VariableDeclaration","scope":5092,"src":"1755:20:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5042,"name":"uint","nodeType":"ElementaryTypeName","src":"1755:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5045,"mutability":"mutable","name":"tokenWeightOut","nameLocation":"1791:14:19","nodeType":"VariableDeclaration","scope":5092,"src":"1786:19:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5044,"name":"uint","nodeType":"ElementaryTypeName","src":"1786:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5047,"mutability":"mutable","name":"swapFee","nameLocation":"1821:7:19","nodeType":"VariableDeclaration","scope":5092,"src":"1816:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5046,"name":"uint","nodeType":"ElementaryTypeName","src":"1816:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1685:150:19"},"returnParameters":{"id":5051,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5050,"mutability":"mutable","name":"spotPrice","nameLocation":"1880:9:19","nodeType":"VariableDeclaration","scope":5092,"src":"1875:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5049,"name":"uint","nodeType":"ElementaryTypeName","src":"1875:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1874:16:19"},"scope":5600,"src":"1663:509:19","stateMutability":"pure","virtual":false,"visibility":"public"},{"body":{"id":5163,"nodeType":"Block","src":"3458:415:19","statements":[{"assignments":[5110],"declarations":[{"constant":false,"id":5110,"mutability":"mutable","name":"weightRatio","nameLocation":"3474:11:19","nodeType":"VariableDeclaration","scope":5163,"src":"3469:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5109,"name":"uint","nodeType":"ElementaryTypeName","src":"3469:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5115,"initialValue":{"arguments":[{"id":5112,"name":"tokenWeightIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5096,"src":"3493:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5113,"name":"tokenWeightOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5100,"src":"3508:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5111,"name":"bdiv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5826,"src":"3488:4:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5114,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3488:35:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3469:54:19"},{"assignments":[5117],"declarations":[{"constant":false,"id":5117,"mutability":"mutable","name":"adjustedIn","nameLocation":"3539:10:19","nodeType":"VariableDeclaration","scope":5163,"src":"3534:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5116,"name":"uint","nodeType":"ElementaryTypeName","src":"3534:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5122,"initialValue":{"arguments":[{"id":5119,"name":"BONE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4950,"src":"3557:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5120,"name":"swapFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5104,"src":"3563:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5118,"name":"bsub","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5683,"src":"3552:4:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5121,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3552:19:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3534:37:19"},{"expression":{"id":5128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5123,"name":"adjustedIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5117,"src":"3582:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5125,"name":"tokenAmountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5102,"src":"3600:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5126,"name":"adjustedIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5117,"src":"3615:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5124,"name":"bmul","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5766,"src":"3595:4:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5127,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3595:31:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3582:44:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5129,"nodeType":"ExpressionStatement","src":"3582:44:19"},{"assignments":[5131],"declarations":[{"constant":false,"id":5131,"mutability":"mutable","name":"y","nameLocation":"3642:1:19","nodeType":"VariableDeclaration","scope":5163,"src":"3637:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5130,"name":"uint","nodeType":"ElementaryTypeName","src":"3637:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5139,"initialValue":{"arguments":[{"id":5133,"name":"tokenBalanceIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5094,"src":"3651:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":5135,"name":"tokenBalanceIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5094,"src":"3672:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5136,"name":"adjustedIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5117,"src":"3688:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5134,"name":"badd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5656,"src":"3667:4:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5137,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3667:32:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5132,"name":"bdiv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5826,"src":"3646:4:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5138,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3646:54:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3637:63:19"},{"assignments":[5141],"declarations":[{"constant":false,"id":5141,"mutability":"mutable","name":"foo","nameLocation":"3716:3:19","nodeType":"VariableDeclaration","scope":5163,"src":"3711:8:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5140,"name":"uint","nodeType":"ElementaryTypeName","src":"3711:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5146,"initialValue":{"arguments":[{"id":5143,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5131,"src":"3727:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5144,"name":"weightRatio","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5110,"src":"3730:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5142,"name":"bpow","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5949,"src":"3722:4:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5145,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3722:20:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3711:31:19"},{"assignments":[5148],"declarations":[{"constant":false,"id":5148,"mutability":"mutable","name":"bar","nameLocation":"3758:3:19","nodeType":"VariableDeclaration","scope":5163,"src":"3753:8:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5147,"name":"uint","nodeType":"ElementaryTypeName","src":"3753:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5153,"initialValue":{"arguments":[{"id":5150,"name":"BONE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4950,"src":"3769:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5151,"name":"foo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5141,"src":"3775:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5149,"name":"bsub","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5683,"src":"3764:4:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5152,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3764:15:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3753:26:19"},{"expression":{"id":5159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5154,"name":"tokenAmountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5107,"src":"3790:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5156,"name":"tokenBalanceOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5098,"src":"3812:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5157,"name":"bar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5148,"src":"3829:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5155,"name":"bmul","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5766,"src":"3807:4:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5158,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3807:26:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3790:43:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5160,"nodeType":"ExpressionStatement","src":"3790:43:19"},{"expression":{"id":5161,"name":"tokenAmountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5107,"src":"3851:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5108,"id":5162,"nodeType":"Return","src":"3844:21:19"}]},"functionSelector":"ba9530a6","id":5164,"implemented":true,"kind":"function","modifiers":[],"name":"calcOutGivenIn","nameLocation":"3199:14:19","nodeType":"FunctionDefinition","parameters":{"id":5105,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5094,"mutability":"mutable","name":"tokenBalanceIn","nameLocation":"3229:14:19","nodeType":"VariableDeclaration","scope":5164,"src":"3224:19:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5093,"name":"uint","nodeType":"ElementaryTypeName","src":"3224:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5096,"mutability":"mutable","name":"tokenWeightIn","nameLocation":"3259:13:19","nodeType":"VariableDeclaration","scope":5164,"src":"3254:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5095,"name":"uint","nodeType":"ElementaryTypeName","src":"3254:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5098,"mutability":"mutable","name":"tokenBalanceOut","nameLocation":"3288:15:19","nodeType":"VariableDeclaration","scope":5164,"src":"3283:20:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5097,"name":"uint","nodeType":"ElementaryTypeName","src":"3283:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5100,"mutability":"mutable","name":"tokenWeightOut","nameLocation":"3319:14:19","nodeType":"VariableDeclaration","scope":5164,"src":"3314:19:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5099,"name":"uint","nodeType":"ElementaryTypeName","src":"3314:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5102,"mutability":"mutable","name":"tokenAmountIn","nameLocation":"3349:13:19","nodeType":"VariableDeclaration","scope":5164,"src":"3344:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5101,"name":"uint","nodeType":"ElementaryTypeName","src":"3344:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5104,"mutability":"mutable","name":"swapFee","nameLocation":"3378:7:19","nodeType":"VariableDeclaration","scope":5164,"src":"3373:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5103,"name":"uint","nodeType":"ElementaryTypeName","src":"3373:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3213:179:19"},"returnParameters":{"id":5108,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5107,"mutability":"mutable","name":"tokenAmountOut","nameLocation":"3437:14:19","nodeType":"VariableDeclaration","scope":5164,"src":"3432:19:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5106,"name":"uint","nodeType":"ElementaryTypeName","src":"3432:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3431:21:19"},"scope":5600,"src":"3190:683:19","stateMutability":"pure","virtual":false,"visibility":"public"},{"body":{"id":5235,"nodeType":"Block","src":"5159:404:19","statements":[{"assignments":[5182],"declarations":[{"constant":false,"id":5182,"mutability":"mutable","name":"weightRatio","nameLocation":"5175:11:19","nodeType":"VariableDeclaration","scope":5235,"src":"5170:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5181,"name":"uint","nodeType":"ElementaryTypeName","src":"5170:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5187,"initialValue":{"arguments":[{"id":5184,"name":"tokenWeightOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5172,"src":"5194:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5185,"name":"tokenWeightIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5168,"src":"5210:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5183,"name":"bdiv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5826,"src":"5189:4:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5186,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5189:35:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5170:54:19"},{"assignments":[5189],"declarations":[{"constant":false,"id":5189,"mutability":"mutable","name":"diff","nameLocation":"5240:4:19","nodeType":"VariableDeclaration","scope":5235,"src":"5235:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5188,"name":"uint","nodeType":"ElementaryTypeName","src":"5235:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5194,"initialValue":{"arguments":[{"id":5191,"name":"tokenBalanceOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5170,"src":"5252:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5192,"name":"tokenAmountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5174,"src":"5269:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5190,"name":"bsub","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5683,"src":"5247:4:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5193,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5247:37:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5235:49:19"},{"assignments":[5196],"declarations":[{"constant":false,"id":5196,"mutability":"mutable","name":"y","nameLocation":"5300:1:19","nodeType":"VariableDeclaration","scope":5235,"src":"5295:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5195,"name":"uint","nodeType":"ElementaryTypeName","src":"5295:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5201,"initialValue":{"arguments":[{"id":5198,"name":"tokenBalanceOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5170,"src":"5309:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5199,"name":"diff","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5189,"src":"5326:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5197,"name":"bdiv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5826,"src":"5304:4:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5200,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5304:27:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5295:36:19"},{"assignments":[5203],"declarations":[{"constant":false,"id":5203,"mutability":"mutable","name":"foo","nameLocation":"5347:3:19","nodeType":"VariableDeclaration","scope":5235,"src":"5342:8:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5202,"name":"uint","nodeType":"ElementaryTypeName","src":"5342:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5208,"initialValue":{"arguments":[{"id":5205,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5196,"src":"5358:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5206,"name":"weightRatio","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5182,"src":"5361:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5204,"name":"bpow","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5949,"src":"5353:4:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5207,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5353:20:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5342:31:19"},{"expression":{"id":5214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5209,"name":"foo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5203,"src":"5384:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5211,"name":"foo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5203,"src":"5395:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5212,"name":"BONE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4950,"src":"5400:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5210,"name":"bsub","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5683,"src":"5390:4:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5213,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5390:15:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5384:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5215,"nodeType":"ExpressionStatement","src":"5384:21:19"},{"expression":{"id":5221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5216,"name":"tokenAmountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5179,"src":"5416:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5218,"name":"BONE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4950,"src":"5437:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5219,"name":"swapFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5176,"src":"5443:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5217,"name":"bsub","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5683,"src":"5432:4:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5432:19:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5416:35:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5222,"nodeType":"ExpressionStatement","src":"5416:35:19"},{"expression":{"id":5231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5223,"name":"tokenAmountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5179,"src":"5462:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":5226,"name":"tokenBalanceIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5166,"src":"5488:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5227,"name":"foo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5203,"src":"5504:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5225,"name":"bmul","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5766,"src":"5483:4:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5228,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5483:25:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5229,"name":"tokenAmountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5179,"src":"5510:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5224,"name":"bdiv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5826,"src":"5478:4:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5230,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5478:46:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5462:62:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5232,"nodeType":"ExpressionStatement","src":"5462:62:19"},{"expression":{"id":5233,"name":"tokenAmountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5179,"src":"5542:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5180,"id":5234,"nodeType":"Return","src":"5535:20:19"}]},"functionSelector":"f8d6aed4","id":5236,"implemented":true,"kind":"function","modifiers":[],"name":"calcInGivenOut","nameLocation":"4900:14:19","nodeType":"FunctionDefinition","parameters":{"id":5177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5166,"mutability":"mutable","name":"tokenBalanceIn","nameLocation":"4930:14:19","nodeType":"VariableDeclaration","scope":5236,"src":"4925:19:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5165,"name":"uint","nodeType":"ElementaryTypeName","src":"4925:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5168,"mutability":"mutable","name":"tokenWeightIn","nameLocation":"4960:13:19","nodeType":"VariableDeclaration","scope":5236,"src":"4955:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5167,"name":"uint","nodeType":"ElementaryTypeName","src":"4955:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5170,"mutability":"mutable","name":"tokenBalanceOut","nameLocation":"4989:15:19","nodeType":"VariableDeclaration","scope":5236,"src":"4984:20:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5169,"name":"uint","nodeType":"ElementaryTypeName","src":"4984:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5172,"mutability":"mutable","name":"tokenWeightOut","nameLocation":"5020:14:19","nodeType":"VariableDeclaration","scope":5236,"src":"5015:19:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5171,"name":"uint","nodeType":"ElementaryTypeName","src":"5015:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5174,"mutability":"mutable","name":"tokenAmountOut","nameLocation":"5050:14:19","nodeType":"VariableDeclaration","scope":5236,"src":"5045:19:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5173,"name":"uint","nodeType":"ElementaryTypeName","src":"5045:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5176,"mutability":"mutable","name":"swapFee","nameLocation":"5080:7:19","nodeType":"VariableDeclaration","scope":5236,"src":"5075:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5175,"name":"uint","nodeType":"ElementaryTypeName","src":"5075:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4914:180:19"},"returnParameters":{"id":5180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5179,"mutability":"mutable","name":"tokenAmountIn","nameLocation":"5139:13:19","nodeType":"VariableDeclaration","scope":5236,"src":"5134:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5178,"name":"uint","nodeType":"ElementaryTypeName","src":"5134:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5133:20:19"},"scope":5600,"src":"4891:672:19","stateMutability":"pure","virtual":false,"visibility":"public"},{"body":{"id":5318,"nodeType":"Block","src":"6850:898:19","statements":[{"assignments":[5255],"declarations":[{"constant":false,"id":5255,"mutability":"mutable","name":"normalizedWeight","nameLocation":"7114:16:19","nodeType":"VariableDeclaration","scope":5318,"src":"7109:21:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5254,"name":"uint","nodeType":"ElementaryTypeName","src":"7109:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"documentation":"which is implicitly traded to the other pool tokens.","id":5260,"initialValue":{"arguments":[{"id":5257,"name":"tokenWeightIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5240,"src":"7138:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5258,"name":"totalWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5244,"src":"7153:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5256,"name":"bdiv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5826,"src":"7133:4:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5259,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7133:32:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7109:56:19"},{"assignments":[5262],"declarations":[{"constant":false,"id":5262,"mutability":"mutable","name":"zaz","nameLocation":"7181:3:19","nodeType":"VariableDeclaration","scope":5318,"src":"7176:8:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5261,"name":"uint","nodeType":"ElementaryTypeName","src":"7176:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5270,"initialValue":{"arguments":[{"arguments":[{"id":5265,"name":"BONE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4950,"src":"7197:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5266,"name":"normalizedWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5255,"src":"7203:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5264,"name":"bsub","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5683,"src":"7192:4:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5267,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7192:28:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5268,"name":"swapFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5248,"src":"7222:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5263,"name":"bmul","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5766,"src":"7187:4:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5269,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7187:43:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7176:54:19"},{"assignments":[5272],"declarations":[{"constant":false,"id":5272,"mutability":"mutable","name":"tokenAmountInAfterFee","nameLocation":"7247:21:19","nodeType":"VariableDeclaration","scope":5318,"src":"7242:26:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5271,"name":"uint","nodeType":"ElementaryTypeName","src":"7242:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5280,"initialValue":{"arguments":[{"id":5274,"name":"tokenAmountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5246,"src":"7276:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":5276,"name":"BONE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4950,"src":"7296:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5277,"name":"zaz","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5262,"src":"7302:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5275,"name":"bsub","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5683,"src":"7291:4:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5278,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7291:15:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5273,"name":"bmul","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5766,"src":"7271:4:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5279,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7271:36:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7242:65:19"},{"assignments":[5282],"declarations":[{"constant":false,"id":5282,"mutability":"mutable","name":"newTokenBalanceIn","nameLocation":"7325:17:19","nodeType":"VariableDeclaration","scope":5318,"src":"7320:22:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5281,"name":"uint","nodeType":"ElementaryTypeName","src":"7320:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5287,"initialValue":{"arguments":[{"id":5284,"name":"tokenBalanceIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5238,"src":"7350:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5285,"name":"tokenAmountInAfterFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5272,"src":"7366:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5283,"name":"badd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5656,"src":"7345:4:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5286,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7345:43:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7320:68:19"},{"assignments":[5289],"declarations":[{"constant":false,"id":5289,"mutability":"mutable","name":"tokenInRatio","nameLocation":"7404:12:19","nodeType":"VariableDeclaration","scope":5318,"src":"7399:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5288,"name":"uint","nodeType":"ElementaryTypeName","src":"7399:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5294,"initialValue":{"arguments":[{"id":5291,"name":"newTokenBalanceIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5282,"src":"7424:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5292,"name":"tokenBalanceIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5238,"src":"7443:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5290,"name":"bdiv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5826,"src":"7419:4:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5293,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7419:39:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7399:59:19"},{"assignments":[5296],"declarations":[{"constant":false,"id":5296,"mutability":"mutable","name":"poolRatio","nameLocation":"7544:9:19","nodeType":"VariableDeclaration","scope":5318,"src":"7539:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5295,"name":"uint","nodeType":"ElementaryTypeName","src":"7539:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5301,"initialValue":{"arguments":[{"id":5298,"name":"tokenInRatio","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5289,"src":"7561:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5299,"name":"normalizedWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5255,"src":"7575:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5297,"name":"bpow","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5949,"src":"7556:4:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5300,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7556:36:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7539:53:19"},{"assignments":[5303],"declarations":[{"constant":false,"id":5303,"mutability":"mutable","name":"newPoolSupply","nameLocation":"7608:13:19","nodeType":"VariableDeclaration","scope":5318,"src":"7603:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5302,"name":"uint","nodeType":"ElementaryTypeName","src":"7603:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5308,"initialValue":{"arguments":[{"id":5305,"name":"poolRatio","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5296,"src":"7629:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5306,"name":"poolSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5242,"src":"7640:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5304,"name":"bmul","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5766,"src":"7624:4:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5307,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7624:27:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7603:48:19"},{"expression":{"id":5314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5309,"name":"poolAmountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5251,"src":"7662:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5311,"name":"newPoolSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5303,"src":"7683:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5312,"name":"poolSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5242,"src":"7698:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5310,"name":"bsub","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5683,"src":"7678:4:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5313,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7678:31:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7662:47:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5315,"nodeType":"ExpressionStatement","src":"7662:47:19"},{"expression":{"id":5316,"name":"poolAmountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5251,"src":"7727:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5252,"id":5317,"nodeType":"Return","src":"7720:20:19"}]},"functionSelector":"8656b653","id":5319,"implemented":true,"kind":"function","modifiers":[],"name":"calcPoolOutGivenSingleIn","nameLocation":"6590:24:19","nodeType":"FunctionDefinition","parameters":{"id":5249,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5238,"mutability":"mutable","name":"tokenBalanceIn","nameLocation":"6630:14:19","nodeType":"VariableDeclaration","scope":5319,"src":"6625:19:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5237,"name":"uint","nodeType":"ElementaryTypeName","src":"6625:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5240,"mutability":"mutable","name":"tokenWeightIn","nameLocation":"6660:13:19","nodeType":"VariableDeclaration","scope":5319,"src":"6655:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5239,"name":"uint","nodeType":"ElementaryTypeName","src":"6655:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5242,"mutability":"mutable","name":"poolSupply","nameLocation":"6689:10:19","nodeType":"VariableDeclaration","scope":5319,"src":"6684:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5241,"name":"uint","nodeType":"ElementaryTypeName","src":"6684:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5244,"mutability":"mutable","name":"totalWeight","nameLocation":"6715:11:19","nodeType":"VariableDeclaration","scope":5319,"src":"6710:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5243,"name":"uint","nodeType":"ElementaryTypeName","src":"6710:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5246,"mutability":"mutable","name":"tokenAmountIn","nameLocation":"6742:13:19","nodeType":"VariableDeclaration","scope":5319,"src":"6737:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5245,"name":"uint","nodeType":"ElementaryTypeName","src":"6737:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5248,"mutability":"mutable","name":"swapFee","nameLocation":"6771:7:19","nodeType":"VariableDeclaration","scope":5319,"src":"6766:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5247,"name":"uint","nodeType":"ElementaryTypeName","src":"6766:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6614:171:19"},"returnParameters":{"id":5252,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5251,"mutability":"mutable","name":"poolAmountOut","nameLocation":"6830:13:19","nodeType":"VariableDeclaration","scope":5319,"src":"6825:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5250,"name":"uint","nodeType":"ElementaryTypeName","src":"6825:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6824:20:19"},"scope":5600,"src":"6581:1167:19","stateMutability":"pure","virtual":false,"visibility":"public"},{"body":{"id":5407,"nodeType":"Block","src":"9035:924:19","statements":[{"assignments":[5337],"declarations":[{"constant":false,"id":5337,"mutability":"mutable","name":"normalizedWeight","nameLocation":"9051:16:19","nodeType":"VariableDeclaration","scope":5407,"src":"9046:21:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5336,"name":"uint","nodeType":"ElementaryTypeName","src":"9046:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5342,"initialValue":{"arguments":[{"id":5339,"name":"tokenWeightIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5323,"src":"9075:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5340,"name":"totalWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5327,"src":"9090:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5338,"name":"bdiv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5826,"src":"9070:4:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5341,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9070:32:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9046:56:19"},{"assignments":[5344],"declarations":[{"constant":false,"id":5344,"mutability":"mutable","name":"newPoolSupply","nameLocation":"9118:13:19","nodeType":"VariableDeclaration","scope":5407,"src":"9113:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5343,"name":"uint","nodeType":"ElementaryTypeName","src":"9113:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5349,"initialValue":{"arguments":[{"id":5346,"name":"poolSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5325,"src":"9139:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5347,"name":"poolAmountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5329,"src":"9151:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5345,"name":"badd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5656,"src":"9134:4:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5348,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9134:31:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9113:52:19"},{"assignments":[5351],"declarations":[{"constant":false,"id":5351,"mutability":"mutable","name":"poolRatio","nameLocation":"9181:9:19","nodeType":"VariableDeclaration","scope":5407,"src":"9176:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5350,"name":"uint","nodeType":"ElementaryTypeName","src":"9176:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5356,"initialValue":{"arguments":[{"id":5353,"name":"newPoolSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5344,"src":"9198:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5354,"name":"poolSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5325,"src":"9213:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5352,"name":"bdiv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5826,"src":"9193:4:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9193:31:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9176:48:19"},{"assignments":[5358],"declarations":[{"constant":false,"id":5358,"mutability":"mutable","name":"boo","nameLocation":"9307:3:19","nodeType":"VariableDeclaration","scope":5407,"src":"9302:8:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5357,"name":"uint","nodeType":"ElementaryTypeName","src":"9302:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5363,"initialValue":{"arguments":[{"id":5360,"name":"BONE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4950,"src":"9318:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5361,"name":"normalizedWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5337,"src":"9324:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5359,"name":"bdiv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5826,"src":"9313:4:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5362,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9313:28:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9302:39:19"},{"assignments":[5365],"declarations":[{"constant":false,"id":5365,"mutability":"mutable","name":"tokenInRatio","nameLocation":"9358:12:19","nodeType":"VariableDeclaration","scope":5407,"src":"9353:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5364,"name":"uint","nodeType":"ElementaryTypeName","src":"9353:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5370,"initialValue":{"arguments":[{"id":5367,"name":"poolRatio","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5351,"src":"9378:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5368,"name":"boo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5358,"src":"9389:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5366,"name":"bpow","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5949,"src":"9373:4:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5369,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9373:20:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9353:40:19"},{"assignments":[5372],"declarations":[{"constant":false,"id":5372,"mutability":"mutable","name":"newTokenBalanceIn","nameLocation":"9409:17:19","nodeType":"VariableDeclaration","scope":5407,"src":"9404:22:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5371,"name":"uint","nodeType":"ElementaryTypeName","src":"9404:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5377,"initialValue":{"arguments":[{"id":5374,"name":"tokenInRatio","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5365,"src":"9434:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5375,"name":"tokenBalanceIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5321,"src":"9448:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5373,"name":"bmul","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5766,"src":"9429:4:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5376,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9429:34:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9404:59:19"},{"assignments":[5379],"declarations":[{"constant":false,"id":5379,"mutability":"mutable","name":"tokenAmountInAfterFee","nameLocation":"9479:21:19","nodeType":"VariableDeclaration","scope":5407,"src":"9474:26:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5378,"name":"uint","nodeType":"ElementaryTypeName","src":"9474:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5384,"initialValue":{"arguments":[{"id":5381,"name":"newTokenBalanceIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5372,"src":"9508:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5382,"name":"tokenBalanceIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5321,"src":"9527:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5380,"name":"bsub","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5683,"src":"9503:4:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9503:39:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9474:68:19"},{"assignments":[5386],"declarations":[{"constant":false,"id":5386,"mutability":"mutable","name":"zar","nameLocation":"9800:3:19","nodeType":"VariableDeclaration","scope":5407,"src":"9795:8:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5385,"name":"uint","nodeType":"ElementaryTypeName","src":"9795:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5394,"initialValue":{"arguments":[{"arguments":[{"id":5389,"name":"BONE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4950,"src":"9816:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5390,"name":"normalizedWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5337,"src":"9822:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5388,"name":"bsub","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5683,"src":"9811:4:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5391,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9811:28:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5392,"name":"swapFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5331,"src":"9841:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5387,"name":"bmul","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5766,"src":"9806:4:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5393,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9806:43:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9795:54:19"},{"expression":{"id":5403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5395,"name":"tokenAmountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5334,"src":"9860:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5397,"name":"tokenAmountInAfterFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5379,"src":"9881:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":5399,"name":"BONE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4950,"src":"9909:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5400,"name":"zar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5386,"src":"9915:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5398,"name":"bsub","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5683,"src":"9904:4:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5401,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9904:15:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5396,"name":"bdiv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5826,"src":"9876:4:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5402,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9876:44:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9860:60:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5404,"nodeType":"ExpressionStatement","src":"9860:60:19"},{"expression":{"id":5405,"name":"tokenAmountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5334,"src":"9938:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5335,"id":5406,"nodeType":"Return","src":"9931:20:19"}]},"functionSelector":"5c1bbaf7","id":5408,"implemented":true,"kind":"function","modifiers":[],"name":"calcSingleInGivenPoolOut","nameLocation":"8775:24:19","nodeType":"FunctionDefinition","parameters":{"id":5332,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5321,"mutability":"mutable","name":"tokenBalanceIn","nameLocation":"8815:14:19","nodeType":"VariableDeclaration","scope":5408,"src":"8810:19:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5320,"name":"uint","nodeType":"ElementaryTypeName","src":"8810:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5323,"mutability":"mutable","name":"tokenWeightIn","nameLocation":"8845:13:19","nodeType":"VariableDeclaration","scope":5408,"src":"8840:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5322,"name":"uint","nodeType":"ElementaryTypeName","src":"8840:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5325,"mutability":"mutable","name":"poolSupply","nameLocation":"8874:10:19","nodeType":"VariableDeclaration","scope":5408,"src":"8869:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5324,"name":"uint","nodeType":"ElementaryTypeName","src":"8869:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5327,"mutability":"mutable","name":"totalWeight","nameLocation":"8900:11:19","nodeType":"VariableDeclaration","scope":5408,"src":"8895:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5326,"name":"uint","nodeType":"ElementaryTypeName","src":"8895:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5329,"mutability":"mutable","name":"poolAmountOut","nameLocation":"8927:13:19","nodeType":"VariableDeclaration","scope":5408,"src":"8922:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5328,"name":"uint","nodeType":"ElementaryTypeName","src":"8922:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5331,"mutability":"mutable","name":"swapFee","nameLocation":"8956:7:19","nodeType":"VariableDeclaration","scope":5408,"src":"8951:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5330,"name":"uint","nodeType":"ElementaryTypeName","src":"8951:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8799:171:19"},"returnParameters":{"id":5335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5334,"mutability":"mutable","name":"tokenAmountIn","nameLocation":"9015:13:19","nodeType":"VariableDeclaration","scope":5408,"src":"9010:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5333,"name":"uint","nodeType":"ElementaryTypeName","src":"9010:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9009:20:19"},"scope":5600,"src":"8766:1193:19","stateMutability":"pure","virtual":false,"visibility":"public"},{"body":{"id":5502,"nodeType":"Block","src":"11349:992:19","statements":[{"assignments":[5426],"declarations":[{"constant":false,"id":5426,"mutability":"mutable","name":"normalizedWeight","nameLocation":"11365:16:19","nodeType":"VariableDeclaration","scope":5502,"src":"11360:21:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5425,"name":"uint","nodeType":"ElementaryTypeName","src":"11360:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5431,"initialValue":{"arguments":[{"id":5428,"name":"tokenWeightOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5412,"src":"11389:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5429,"name":"totalWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5416,"src":"11405:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5427,"name":"bdiv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5826,"src":"11384:4:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5430,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11384:33:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11360:57:19"},{"assignments":[5433],"declarations":[{"constant":false,"id":5433,"mutability":"mutable","name":"poolAmountInAfterExitFee","nameLocation":"11530:24:19","nodeType":"VariableDeclaration","scope":5502,"src":"11525:29:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5432,"name":"uint","nodeType":"ElementaryTypeName","src":"11525:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5441,"initialValue":{"arguments":[{"id":5435,"name":"poolAmountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5418,"src":"11562:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":5437,"name":"BONE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4950,"src":"11581:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5438,"name":"EXIT_FEE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4971,"src":"11587:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5436,"name":"bsub","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5683,"src":"11576:4:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5439,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11576:20:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5434,"name":"bmul","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5766,"src":"11557:4:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5440,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11557:40:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11525:72:19"},{"assignments":[5443],"declarations":[{"constant":false,"id":5443,"mutability":"mutable","name":"newPoolSupply","nameLocation":"11613:13:19","nodeType":"VariableDeclaration","scope":5502,"src":"11608:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5442,"name":"uint","nodeType":"ElementaryTypeName","src":"11608:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5448,"initialValue":{"arguments":[{"id":5445,"name":"poolSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5414,"src":"11634:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5446,"name":"poolAmountInAfterExitFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5433,"src":"11646:24:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5444,"name":"bsub","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5683,"src":"11629:4:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5447,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11629:42:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11608:63:19"},{"assignments":[5450],"declarations":[{"constant":false,"id":5450,"mutability":"mutable","name":"poolRatio","nameLocation":"11687:9:19","nodeType":"VariableDeclaration","scope":5502,"src":"11682:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5449,"name":"uint","nodeType":"ElementaryTypeName","src":"11682:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5455,"initialValue":{"arguments":[{"id":5452,"name":"newPoolSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5443,"src":"11704:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5453,"name":"poolSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5414,"src":"11719:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5451,"name":"bdiv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5826,"src":"11699:4:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5454,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11699:31:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11682:48:19"},{"assignments":[5457],"declarations":[{"constant":false,"id":5457,"mutability":"mutable","name":"tokenOutRatio","nameLocation":"11808:13:19","nodeType":"VariableDeclaration","scope":5502,"src":"11803:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5456,"name":"uint","nodeType":"ElementaryTypeName","src":"11803:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5465,"initialValue":{"arguments":[{"id":5459,"name":"poolRatio","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5450,"src":"11829:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":5461,"name":"BONE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4950,"src":"11845:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5462,"name":"normalizedWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5426,"src":"11851:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5460,"name":"bdiv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5826,"src":"11840:4:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5463,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11840:28:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5458,"name":"bpow","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5949,"src":"11824:4:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11824:45:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11803:66:19"},{"assignments":[5467],"declarations":[{"constant":false,"id":5467,"mutability":"mutable","name":"newTokenBalanceOut","nameLocation":"11885:18:19","nodeType":"VariableDeclaration","scope":5502,"src":"11880:23:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5466,"name":"uint","nodeType":"ElementaryTypeName","src":"11880:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5472,"initialValue":{"arguments":[{"id":5469,"name":"tokenOutRatio","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5457,"src":"11911:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5470,"name":"tokenBalanceOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5410,"src":"11926:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5468,"name":"bmul","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5766,"src":"11906:4:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5471,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11906:36:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11880:62:19"},{"assignments":[5474],"declarations":[{"constant":false,"id":5474,"mutability":"mutable","name":"tokenAmountOutBeforeSwapFee","nameLocation":"11960:27:19","nodeType":"VariableDeclaration","scope":5502,"src":"11955:32:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5473,"name":"uint","nodeType":"ElementaryTypeName","src":"11955:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5479,"initialValue":{"arguments":[{"id":5476,"name":"tokenBalanceOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5410,"src":"11995:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5477,"name":"newTokenBalanceOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5467,"src":"12012:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5475,"name":"bsub","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5683,"src":"11990:4:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5478,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11990:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11955:76:19"},{"assignments":[5481],"declarations":[{"constant":false,"id":5481,"mutability":"mutable","name":"zaz","nameLocation":"12173:3:19","nodeType":"VariableDeclaration","scope":5502,"src":"12168:8:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5480,"name":"uint","nodeType":"ElementaryTypeName","src":"12168:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5489,"initialValue":{"arguments":[{"arguments":[{"id":5484,"name":"BONE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4950,"src":"12189:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5485,"name":"normalizedWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5426,"src":"12195:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5483,"name":"bsub","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5683,"src":"12184:4:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5486,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12184:28:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5487,"name":"swapFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5420,"src":"12214:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5482,"name":"bmul","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5766,"src":"12179:4:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5488,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12179:43:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12168:54:19"},{"expression":{"id":5498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5490,"name":"tokenAmountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5423,"src":"12234:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5492,"name":"tokenAmountOutBeforeSwapFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5474,"src":"12256:27:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":5494,"name":"BONE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4950,"src":"12290:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5495,"name":"zaz","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5481,"src":"12296:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5493,"name":"bsub","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5683,"src":"12285:4:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12285:15:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5491,"name":"bmul","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5766,"src":"12251:4:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5497,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12251:50:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12234:67:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5499,"nodeType":"ExpressionStatement","src":"12234:67:19"},{"expression":{"id":5500,"name":"tokenAmountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5423,"src":"12319:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5424,"id":5501,"nodeType":"Return","src":"12312:21:19"}]},"functionSelector":"89298012","id":5503,"implemented":true,"kind":"function","modifiers":[],"name":"calcSingleOutGivenPoolIn","nameLocation":"11087:24:19","nodeType":"FunctionDefinition","parameters":{"id":5421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5410,"mutability":"mutable","name":"tokenBalanceOut","nameLocation":"11127:15:19","nodeType":"VariableDeclaration","scope":5503,"src":"11122:20:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5409,"name":"uint","nodeType":"ElementaryTypeName","src":"11122:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5412,"mutability":"mutable","name":"tokenWeightOut","nameLocation":"11158:14:19","nodeType":"VariableDeclaration","scope":5503,"src":"11153:19:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5411,"name":"uint","nodeType":"ElementaryTypeName","src":"11153:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5414,"mutability":"mutable","name":"poolSupply","nameLocation":"11188:10:19","nodeType":"VariableDeclaration","scope":5503,"src":"11183:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5413,"name":"uint","nodeType":"ElementaryTypeName","src":"11183:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5416,"mutability":"mutable","name":"totalWeight","nameLocation":"11214:11:19","nodeType":"VariableDeclaration","scope":5503,"src":"11209:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5415,"name":"uint","nodeType":"ElementaryTypeName","src":"11209:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5418,"mutability":"mutable","name":"poolAmountIn","nameLocation":"11241:12:19","nodeType":"VariableDeclaration","scope":5503,"src":"11236:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5417,"name":"uint","nodeType":"ElementaryTypeName","src":"11236:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5420,"mutability":"mutable","name":"swapFee","nameLocation":"11269:7:19","nodeType":"VariableDeclaration","scope":5503,"src":"11264:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5419,"name":"uint","nodeType":"ElementaryTypeName","src":"11264:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11111:172:19"},"returnParameters":{"id":5424,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5423,"mutability":"mutable","name":"tokenAmountOut","nameLocation":"11328:14:19","nodeType":"VariableDeclaration","scope":5503,"src":"11323:19:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5422,"name":"uint","nodeType":"ElementaryTypeName","src":"11323:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11322:21:19"},"scope":5600,"src":"11078:1263:19","stateMutability":"pure","virtual":false,"visibility":"public"},{"body":{"id":5598,"nodeType":"Block","src":"13731:1014:19","statements":[{"assignments":[5521],"declarations":[{"constant":false,"id":5521,"mutability":"mutable","name":"normalizedWeight","nameLocation":"13803:16:19","nodeType":"VariableDeclaration","scope":5598,"src":"13798:21:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5520,"name":"uint","nodeType":"ElementaryTypeName","src":"13798:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5526,"initialValue":{"arguments":[{"id":5523,"name":"tokenWeightOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5507,"src":"13827:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5524,"name":"totalWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5511,"src":"13843:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5522,"name":"bdiv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5826,"src":"13822:4:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5525,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13822:33:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13798:57:19"},{"assignments":[5528],"declarations":[{"constant":false,"id":5528,"mutability":"mutable","name":"zoo","nameLocation":"13943:3:19","nodeType":"VariableDeclaration","scope":5598,"src":"13938:8:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5527,"name":"uint","nodeType":"ElementaryTypeName","src":"13938:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5533,"initialValue":{"arguments":[{"id":5530,"name":"BONE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4950,"src":"13954:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5531,"name":"normalizedWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5521,"src":"13960:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5529,"name":"bsub","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5683,"src":"13949:4:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13949:28:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13938:39:19"},{"assignments":[5535],"declarations":[{"constant":false,"id":5535,"mutability":"mutable","name":"zar","nameLocation":"13993:3:19","nodeType":"VariableDeclaration","scope":5598,"src":"13988:8:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5534,"name":"uint","nodeType":"ElementaryTypeName","src":"13988:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5540,"initialValue":{"arguments":[{"id":5537,"name":"zoo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5528,"src":"14004:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5538,"name":"swapFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5515,"src":"14009:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5536,"name":"bmul","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5766,"src":"13999:4:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5539,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13999:18:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13988:29:19"},{"assignments":[5542],"declarations":[{"constant":false,"id":5542,"mutability":"mutable","name":"tokenAmountOutBeforeSwapFee","nameLocation":"14034:27:19","nodeType":"VariableDeclaration","scope":5598,"src":"14029:32:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5541,"name":"uint","nodeType":"ElementaryTypeName","src":"14029:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5550,"initialValue":{"arguments":[{"id":5544,"name":"tokenAmountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5513,"src":"14069:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":5546,"name":"BONE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4950,"src":"14090:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5547,"name":"zar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5535,"src":"14096:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5545,"name":"bsub","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5683,"src":"14085:4:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5548,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14085:15:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5543,"name":"bdiv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5826,"src":"14064:4:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5549,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14064:37:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"14029:72:19"},{"assignments":[5552],"declarations":[{"constant":false,"id":5552,"mutability":"mutable","name":"newTokenBalanceOut","nameLocation":"14119:18:19","nodeType":"VariableDeclaration","scope":5598,"src":"14114:23:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5551,"name":"uint","nodeType":"ElementaryTypeName","src":"14114:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5557,"initialValue":{"arguments":[{"id":5554,"name":"tokenBalanceOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5505,"src":"14145:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5555,"name":"tokenAmountOutBeforeSwapFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5542,"src":"14162:27:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5553,"name":"bsub","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5683,"src":"14140:4:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5556,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14140:50:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"14114:76:19"},{"assignments":[5559],"declarations":[{"constant":false,"id":5559,"mutability":"mutable","name":"tokenOutRatio","nameLocation":"14206:13:19","nodeType":"VariableDeclaration","scope":5598,"src":"14201:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5558,"name":"uint","nodeType":"ElementaryTypeName","src":"14201:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5564,"initialValue":{"arguments":[{"id":5561,"name":"newTokenBalanceOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5552,"src":"14227:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5562,"name":"tokenBalanceOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5505,"src":"14247:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5560,"name":"bdiv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5826,"src":"14222:4:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5563,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14222:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"14201:62:19"},{"assignments":[5566],"declarations":[{"constant":false,"id":5566,"mutability":"mutable","name":"poolRatio","nameLocation":"14348:9:19","nodeType":"VariableDeclaration","scope":5598,"src":"14343:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5565,"name":"uint","nodeType":"ElementaryTypeName","src":"14343:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5571,"initialValue":{"arguments":[{"id":5568,"name":"tokenOutRatio","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5559,"src":"14365:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5569,"name":"normalizedWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5521,"src":"14380:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5567,"name":"bpow","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5949,"src":"14360:4:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5570,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14360:37:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"14343:54:19"},{"assignments":[5573],"declarations":[{"constant":false,"id":5573,"mutability":"mutable","name":"newPoolSupply","nameLocation":"14413:13:19","nodeType":"VariableDeclaration","scope":5598,"src":"14408:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5572,"name":"uint","nodeType":"ElementaryTypeName","src":"14408:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5578,"initialValue":{"arguments":[{"id":5575,"name":"poolRatio","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5566,"src":"14434:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5576,"name":"poolSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5509,"src":"14445:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5574,"name":"bmul","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5766,"src":"14429:4:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5577,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14429:27:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"14408:48:19"},{"assignments":[5580],"declarations":[{"constant":false,"id":5580,"mutability":"mutable","name":"poolAmountInAfterExitFee","nameLocation":"14472:24:19","nodeType":"VariableDeclaration","scope":5598,"src":"14467:29:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5579,"name":"uint","nodeType":"ElementaryTypeName","src":"14467:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5585,"initialValue":{"arguments":[{"id":5582,"name":"poolSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5509,"src":"14504:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5583,"name":"newPoolSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5573,"src":"14516:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5581,"name":"bsub","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5683,"src":"14499:4:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5584,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14499:31:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"14467:63:19"},{"expression":{"id":5594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5586,"name":"poolAmountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5518,"src":"14640:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5588,"name":"poolAmountInAfterExitFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5580,"src":"14660:24:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":5590,"name":"BONE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4950,"src":"14691:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5591,"name":"EXIT_FEE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4971,"src":"14697:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5589,"name":"bsub","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5683,"src":"14686:4:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5592,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14686:20:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5587,"name":"bdiv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5826,"src":"14655:4:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5593,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14655:52:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14640:67:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5595,"nodeType":"ExpressionStatement","src":"14640:67:19"},{"expression":{"id":5596,"name":"poolAmountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5518,"src":"14725:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5519,"id":5597,"nodeType":"Return","src":"14718:19:19"}]},"functionSelector":"82f652ad","id":5599,"implemented":true,"kind":"function","modifiers":[],"name":"calcPoolInGivenSingleOut","nameLocation":"13469:24:19","nodeType":"FunctionDefinition","parameters":{"id":5516,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5505,"mutability":"mutable","name":"tokenBalanceOut","nameLocation":"13509:15:19","nodeType":"VariableDeclaration","scope":5599,"src":"13504:20:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5504,"name":"uint","nodeType":"ElementaryTypeName","src":"13504:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5507,"mutability":"mutable","name":"tokenWeightOut","nameLocation":"13540:14:19","nodeType":"VariableDeclaration","scope":5599,"src":"13535:19:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5506,"name":"uint","nodeType":"ElementaryTypeName","src":"13535:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5509,"mutability":"mutable","name":"poolSupply","nameLocation":"13570:10:19","nodeType":"VariableDeclaration","scope":5599,"src":"13565:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5508,"name":"uint","nodeType":"ElementaryTypeName","src":"13565:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5511,"mutability":"mutable","name":"totalWeight","nameLocation":"13596:11:19","nodeType":"VariableDeclaration","scope":5599,"src":"13591:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5510,"name":"uint","nodeType":"ElementaryTypeName","src":"13591:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5513,"mutability":"mutable","name":"tokenAmountOut","nameLocation":"13623:14:19","nodeType":"VariableDeclaration","scope":5599,"src":"13618:19:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5512,"name":"uint","nodeType":"ElementaryTypeName","src":"13618:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5515,"mutability":"mutable","name":"swapFee","nameLocation":"13653:7:19","nodeType":"VariableDeclaration","scope":5599,"src":"13648:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5514,"name":"uint","nodeType":"ElementaryTypeName","src":"13648:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13493:174:19"},"returnParameters":{"id":5519,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5518,"mutability":"mutable","name":"poolAmountIn","nameLocation":"13712:12:19","nodeType":"VariableDeclaration","scope":5599,"src":"13707:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5517,"name":"uint","nodeType":"ElementaryTypeName","src":"13707:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13706:19:19"},"scope":5600,"src":"13460:1285:19","stateMutability":"pure","virtual":false,"visibility":"public"}],"scope":5601,"src":"707:14045:19","usedErrors":[],"usedEvents":[]}],"src":"656:14098:19"},"id":19},"contracts/balancer/BNum.sol":{"ast":{"absolutePath":"contracts/balancer/BNum.sol","exportedSymbols":{"BBronze":[4940],"BColor":[4925],"BConst":[5028],"BNum":[6073]},"id":6074,"nodeType":"SourceUnit","nodes":[{"id":5602,"literals":["solidity","0.8",".25"],"nodeType":"PragmaDirective","src":"656:23:20"},{"absolutePath":"contracts/balancer/BConst.sol","file":"./BConst.sol","id":5603,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6074,"sourceUnit":5029,"src":"683:22:20","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":5604,"name":"BConst","nameLocations":["726:6:20"],"nodeType":"IdentifierPath","referencedDeclaration":5028,"src":"726:6:20"},"id":5605,"nodeType":"InheritanceSpecifier","src":"726:6:20"}],"canonicalName":"BNum","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":6073,"linearizedBaseContracts":[6073,5028,4940,4925],"name":"BNum","nameLocation":"718:4:20","nodeType":"ContractDefinition","nodes":[{"body":{"id":5616,"nodeType":"Block","src":"817:34:20","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5612,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5607,"src":"835:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5613,"name":"BONE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4950,"src":"839:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"835:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5611,"id":5615,"nodeType":"Return","src":"828:15:20"}]},"id":5617,"implemented":true,"kind":"function","modifiers":[],"name":"btoi","nameLocation":"751:4:20","nodeType":"FunctionDefinition","parameters":{"id":5608,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5607,"mutability":"mutable","name":"a","nameLocation":"761:1:20","nodeType":"VariableDeclaration","scope":5617,"src":"756:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5606,"name":"uint","nodeType":"ElementaryTypeName","src":"756:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"755:8:20"},"returnParameters":{"id":5611,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5610,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5617,"src":"806:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5609,"name":"uint","nodeType":"ElementaryTypeName","src":"806:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"805:6:20"},"scope":6073,"src":"742:109:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5630,"nodeType":"Block","src":"935:40:20","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5625,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5619,"src":"958:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5624,"name":"btoi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5617,"src":"953:4:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5626,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"953:7:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5627,"name":"BONE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4950,"src":"963:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"953:14:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5623,"id":5629,"nodeType":"Return","src":"946:21:20"}]},"id":5631,"implemented":true,"kind":"function","modifiers":[],"name":"bfloor","nameLocation":"868:6:20","nodeType":"FunctionDefinition","parameters":{"id":5620,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5619,"mutability":"mutable","name":"a","nameLocation":"880:1:20","nodeType":"VariableDeclaration","scope":5631,"src":"875:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5618,"name":"uint","nodeType":"ElementaryTypeName","src":"875:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"874:8:20"},"returnParameters":{"id":5623,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5622,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5631,"src":"924:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5621,"name":"uint","nodeType":"ElementaryTypeName","src":"924:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"923:6:20"},"scope":6073,"src":"859:116:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5655,"nodeType":"Block","src":"1065:98:20","statements":[{"assignments":[5641],"declarations":[{"constant":false,"id":5641,"mutability":"mutable","name":"c","nameLocation":"1081:1:20","nodeType":"VariableDeclaration","scope":5655,"src":"1076:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5640,"name":"uint","nodeType":"ElementaryTypeName","src":"1076:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5645,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5642,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5633,"src":"1085:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":5643,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5635,"src":"1089:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1085:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1076:14:20"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5647,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5641,"src":"1109:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":5648,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5633,"src":"1114:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1109:6:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552525f4144445f4f564552464c4f57","id":5650,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1117:18:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_de342110f18fc973afca32abdc8a7df5b7ed8442b65372631902c416e6d73b0c","typeString":"literal_string \"ERR_ADD_OVERFLOW\""},"value":"ERR_ADD_OVERFLOW"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_de342110f18fc973afca32abdc8a7df5b7ed8442b65372631902c416e6d73b0c","typeString":"literal_string \"ERR_ADD_OVERFLOW\""}],"id":5646,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1101:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5651,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1101:35:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5652,"nodeType":"ExpressionStatement","src":"1101:35:20"},{"expression":{"id":5653,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5641,"src":"1154:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5639,"id":5654,"nodeType":"Return","src":"1147:8:20"}]},"id":5656,"implemented":true,"kind":"function","modifiers":[],"name":"badd","nameLocation":"992:4:20","nodeType":"FunctionDefinition","parameters":{"id":5636,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5633,"mutability":"mutable","name":"a","nameLocation":"1002:1:20","nodeType":"VariableDeclaration","scope":5656,"src":"997:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5632,"name":"uint","nodeType":"ElementaryTypeName","src":"997:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5635,"mutability":"mutable","name":"b","nameLocation":"1010:1:20","nodeType":"VariableDeclaration","scope":5656,"src":"1005:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5634,"name":"uint","nodeType":"ElementaryTypeName","src":"1005:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"996:16:20"},"returnParameters":{"id":5639,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5638,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5656,"src":"1054:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5637,"name":"uint","nodeType":"ElementaryTypeName","src":"1054:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1053:6:20"},"scope":6073,"src":"983:180:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5682,"nodeType":"Block","src":"1253:120:20","statements":[{"assignments":[5666,5668],"declarations":[{"constant":false,"id":5666,"mutability":"mutable","name":"c","nameLocation":"1270:1:20","nodeType":"VariableDeclaration","scope":5682,"src":"1265:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5665,"name":"uint","nodeType":"ElementaryTypeName","src":"1265:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5668,"mutability":"mutable","name":"flag","nameLocation":"1278:4:20","nodeType":"VariableDeclaration","scope":5682,"src":"1273:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5667,"name":"bool","nodeType":"ElementaryTypeName","src":"1273:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":5673,"initialValue":{"arguments":[{"id":5670,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5658,"src":"1295:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5671,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5660,"src":"1298:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5669,"name":"bsubSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5713,"src":"1286:8:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_bool_$","typeString":"function (uint256,uint256) pure returns (uint256,bool)"}},"id":5672,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1286:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_bool_$","typeString":"tuple(uint256,bool)"}},"nodeType":"VariableDeclarationStatement","src":"1264:36:20"},{"expression":{"arguments":[{"id":5676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1319:5:20","subExpression":{"id":5675,"name":"flag","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5668,"src":"1320:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552525f5355425f554e444552464c4f57","id":5677,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1326:19:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_dac2cbcd49a571b8a3e692e2763650776bed03103610305e021243e4b192a687","typeString":"literal_string \"ERR_SUB_UNDERFLOW\""},"value":"ERR_SUB_UNDERFLOW"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_dac2cbcd49a571b8a3e692e2763650776bed03103610305e021243e4b192a687","typeString":"literal_string \"ERR_SUB_UNDERFLOW\""}],"id":5674,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1311:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5678,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1311:35:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5679,"nodeType":"ExpressionStatement","src":"1311:35:20"},{"expression":{"id":5680,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5666,"src":"1364:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5664,"id":5681,"nodeType":"Return","src":"1357:8:20"}]},"id":5683,"implemented":true,"kind":"function","modifiers":[],"name":"bsub","nameLocation":"1180:4:20","nodeType":"FunctionDefinition","parameters":{"id":5661,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5658,"mutability":"mutable","name":"a","nameLocation":"1190:1:20","nodeType":"VariableDeclaration","scope":5683,"src":"1185:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5657,"name":"uint","nodeType":"ElementaryTypeName","src":"1185:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5660,"mutability":"mutable","name":"b","nameLocation":"1198:1:20","nodeType":"VariableDeclaration","scope":5683,"src":"1193:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5659,"name":"uint","nodeType":"ElementaryTypeName","src":"1193:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1184:16:20"},"returnParameters":{"id":5664,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5663,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5683,"src":"1242:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5662,"name":"uint","nodeType":"ElementaryTypeName","src":"1242:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1241:6:20"},"scope":6073,"src":"1171:202:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5712,"nodeType":"Block","src":"1473:131:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5694,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5685,"src":"1488:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":5695,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5687,"src":"1493:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1488:6:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":5710,"nodeType":"Block","src":"1550:47:20","statements":[{"expression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5704,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5687,"src":"1573:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":5705,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5685,"src":"1577:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1573:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":5707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1580:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"id":5708,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1572:13:20","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_bool_$","typeString":"tuple(uint256,bool)"}},"functionReturnParameters":5693,"id":5709,"nodeType":"Return","src":"1565:20:20"}]},"id":5711,"nodeType":"IfStatement","src":"1484:113:20","trueBody":{"id":5703,"nodeType":"Block","src":"1496:48:20","statements":[{"expression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5697,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5685,"src":"1519:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":5698,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5687,"src":"1523:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1519:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":5700,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1526:5:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"id":5701,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1518:14:20","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_bool_$","typeString":"tuple(uint256,bool)"}},"functionReturnParameters":5693,"id":5702,"nodeType":"Return","src":"1511:21:20"}]}}]},"id":5713,"implemented":true,"kind":"function","modifiers":[],"name":"bsubSign","nameLocation":"1390:8:20","nodeType":"FunctionDefinition","parameters":{"id":5688,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5685,"mutability":"mutable","name":"a","nameLocation":"1404:1:20","nodeType":"VariableDeclaration","scope":5713,"src":"1399:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5684,"name":"uint","nodeType":"ElementaryTypeName","src":"1399:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5687,"mutability":"mutable","name":"b","nameLocation":"1412:1:20","nodeType":"VariableDeclaration","scope":5713,"src":"1407:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5686,"name":"uint","nodeType":"ElementaryTypeName","src":"1407:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1398:16:20"},"returnParameters":{"id":5693,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5690,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5713,"src":"1456:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5689,"name":"uint","nodeType":"ElementaryTypeName","src":"1456:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5692,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5713,"src":"1462:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5691,"name":"bool","nodeType":"ElementaryTypeName","src":"1462:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1455:12:20"},"scope":6073,"src":"1381:223:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5765,"nodeType":"Block","src":"1694:229:20","statements":[{"assignments":[5723],"declarations":[{"constant":false,"id":5723,"mutability":"mutable","name":"c0","nameLocation":"1710:2:20","nodeType":"VariableDeclaration","scope":5765,"src":"1705:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5722,"name":"uint","nodeType":"ElementaryTypeName","src":"1705:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5727,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5724,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5715,"src":"1715:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5725,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5717,"src":"1719:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1715:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1705:15:20"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5729,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5715,"src":"1739:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5730,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1744:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1739:6:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5732,"name":"c0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5723,"src":"1749:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5733,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5715,"src":"1754:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1749:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5735,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5717,"src":"1759:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1749:11:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1739:21:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552525f4d554c5f4f564552464c4f57","id":5738,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1762:18:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_aa158ef700dfe53f1ea66be55a14e10c48fd667bb2e5b5d00214c58598497d7c","typeString":"literal_string \"ERR_MUL_OVERFLOW\""},"value":"ERR_MUL_OVERFLOW"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_aa158ef700dfe53f1ea66be55a14e10c48fd667bb2e5b5d00214c58598497d7c","typeString":"literal_string \"ERR_MUL_OVERFLOW\""}],"id":5728,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1731:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5739,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1731:50:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5740,"nodeType":"ExpressionStatement","src":"1731:50:20"},{"assignments":[5742],"declarations":[{"constant":false,"id":5742,"mutability":"mutable","name":"c1","nameLocation":"1797:2:20","nodeType":"VariableDeclaration","scope":5765,"src":"1792:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5741,"name":"uint","nodeType":"ElementaryTypeName","src":"1792:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5749,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5743,"name":"c0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5723,"src":"1802:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5746,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"id":5744,"name":"BONE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4950,"src":"1808:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":5745,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1815:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1808:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5747,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1807:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1802:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1792:25:20"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5751,"name":"c1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5742,"src":"1836:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":5752,"name":"c0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5723,"src":"1842:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1836:8:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552525f4d554c5f4f564552464c4f57","id":5754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1846:18:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_aa158ef700dfe53f1ea66be55a14e10c48fd667bb2e5b5d00214c58598497d7c","typeString":"literal_string \"ERR_MUL_OVERFLOW\""},"value":"ERR_MUL_OVERFLOW"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_aa158ef700dfe53f1ea66be55a14e10c48fd667bb2e5b5d00214c58598497d7c","typeString":"literal_string \"ERR_MUL_OVERFLOW\""}],"id":5750,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1828:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5755,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1828:37:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5756,"nodeType":"ExpressionStatement","src":"1828:37:20"},{"assignments":[5758],"declarations":[{"constant":false,"id":5758,"mutability":"mutable","name":"c2","nameLocation":"1881:2:20","nodeType":"VariableDeclaration","scope":5765,"src":"1876:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5757,"name":"uint","nodeType":"ElementaryTypeName","src":"1876:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5762,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5759,"name":"c1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5742,"src":"1886:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5760,"name":"BONE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4950,"src":"1891:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1886:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1876:19:20"},{"expression":{"id":5763,"name":"c2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5758,"src":"1913:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5721,"id":5764,"nodeType":"Return","src":"1906:9:20"}]},"id":5766,"implemented":true,"kind":"function","modifiers":[],"name":"bmul","nameLocation":"1621:4:20","nodeType":"FunctionDefinition","parameters":{"id":5718,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5715,"mutability":"mutable","name":"a","nameLocation":"1631:1:20","nodeType":"VariableDeclaration","scope":5766,"src":"1626:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5714,"name":"uint","nodeType":"ElementaryTypeName","src":"1626:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5717,"mutability":"mutable","name":"b","nameLocation":"1639:1:20","nodeType":"VariableDeclaration","scope":5766,"src":"1634:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5716,"name":"uint","nodeType":"ElementaryTypeName","src":"1634:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1625:16:20"},"returnParameters":{"id":5721,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5720,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5766,"src":"1683:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5719,"name":"uint","nodeType":"ElementaryTypeName","src":"1683:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1682:6:20"},"scope":6073,"src":"1612:311:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5825,"nodeType":"Block","src":"2013:305:20","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5776,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5770,"src":"2032:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":5777,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2037:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2032:6:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552525f4449565f5a45524f","id":5779,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2040:14:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_b991f14436c8a6c8e4a1be4516702e33284b5463d2b720d5d2b1084f857b5d11","typeString":"literal_string \"ERR_DIV_ZERO\""},"value":"ERR_DIV_ZERO"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b991f14436c8a6c8e4a1be4516702e33284b5463d2b720d5d2b1084f857b5d11","typeString":"literal_string \"ERR_DIV_ZERO\""}],"id":5775,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2024:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5780,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2024:31:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5781,"nodeType":"ExpressionStatement","src":"2024:31:20"},{"assignments":[5783],"declarations":[{"constant":false,"id":5783,"mutability":"mutable","name":"c0","nameLocation":"2071:2:20","nodeType":"VariableDeclaration","scope":5825,"src":"2066:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5782,"name":"uint","nodeType":"ElementaryTypeName","src":"2066:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5787,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5784,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5768,"src":"2076:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5785,"name":"BONE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4950,"src":"2080:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2076:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2066:18:20"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5789,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5768,"src":"2103:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5790,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2108:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2103:6:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5792,"name":"c0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5783,"src":"2113:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5793,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5768,"src":"2118:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2113:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5795,"name":"BONE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4950,"src":"2123:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2113:14:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2103:24:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552525f4449565f494e5445524e414c","id":5798,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2129:18:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_7bb2cd205e4c8c10985e7a8998fb4ecbc62c821542a86b1082a507fd8e2bac71","typeString":"literal_string \"ERR_DIV_INTERNAL\""},"value":"ERR_DIV_INTERNAL"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7bb2cd205e4c8c10985e7a8998fb4ecbc62c821542a86b1082a507fd8e2bac71","typeString":"literal_string \"ERR_DIV_INTERNAL\""}],"id":5788,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2095:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5799,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2095:53:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5800,"nodeType":"ExpressionStatement","src":"2095:53:20"},{"assignments":[5802],"declarations":[{"constant":false,"id":5802,"mutability":"mutable","name":"c1","nameLocation":"2181:2:20","nodeType":"VariableDeclaration","scope":5825,"src":"2176:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5801,"name":"uint","nodeType":"ElementaryTypeName","src":"2176:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5809,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5803,"name":"c0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5783,"src":"2186:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5804,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5770,"src":"2192:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":5805,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2196:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2192:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5807,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2191:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2186:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2176:22:20"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5811,"name":"c1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5802,"src":"2217:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":5812,"name":"c0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5783,"src":"2223:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2217:8:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552525f4449565f494e5445524e414c","id":5814,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2227:18:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_7bb2cd205e4c8c10985e7a8998fb4ecbc62c821542a86b1082a507fd8e2bac71","typeString":"literal_string \"ERR_DIV_INTERNAL\""},"value":"ERR_DIV_INTERNAL"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7bb2cd205e4c8c10985e7a8998fb4ecbc62c821542a86b1082a507fd8e2bac71","typeString":"literal_string \"ERR_DIV_INTERNAL\""}],"id":5810,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2209:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5815,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2209:37:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5816,"nodeType":"ExpressionStatement","src":"2209:37:20"},{"assignments":[5818],"declarations":[{"constant":false,"id":5818,"mutability":"mutable","name":"c2","nameLocation":"2279:2:20","nodeType":"VariableDeclaration","scope":5825,"src":"2274:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5817,"name":"uint","nodeType":"ElementaryTypeName","src":"2274:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5822,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5819,"name":"c1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5802,"src":"2284:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5820,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5770,"src":"2289:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2284:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2274:16:20"},{"expression":{"id":5823,"name":"c2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5818,"src":"2308:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5774,"id":5824,"nodeType":"Return","src":"2301:9:20"}]},"id":5826,"implemented":true,"kind":"function","modifiers":[],"name":"bdiv","nameLocation":"1940:4:20","nodeType":"FunctionDefinition","parameters":{"id":5771,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5768,"mutability":"mutable","name":"a","nameLocation":"1950:1:20","nodeType":"VariableDeclaration","scope":5826,"src":"1945:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5767,"name":"uint","nodeType":"ElementaryTypeName","src":"1945:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5770,"mutability":"mutable","name":"b","nameLocation":"1958:1:20","nodeType":"VariableDeclaration","scope":5826,"src":"1953:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5769,"name":"uint","nodeType":"ElementaryTypeName","src":"1953:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1944:16:20"},"returnParameters":{"id":5774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5773,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5826,"src":"2002:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5772,"name":"uint","nodeType":"ElementaryTypeName","src":"2002:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2001:6:20"},"scope":6073,"src":"1931:387:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5882,"nodeType":"Block","src":"2429:231:20","statements":[{"assignments":[5836],"declarations":[{"constant":false,"id":5836,"mutability":"mutable","name":"z","nameLocation":"2445:1:20","nodeType":"VariableDeclaration","scope":5882,"src":"2440:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5835,"name":"uint","nodeType":"ElementaryTypeName","src":"2440:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5845,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5837,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5830,"src":"2449:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":5838,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2453:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2449:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":5840,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2458:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2449:10:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":5843,"name":"BONE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4950,"src":"2466:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2449:21:20","trueExpression":{"id":5842,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5828,"src":"2462:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2440:30:20"},{"body":{"id":5878,"nodeType":"Block","src":"2512:122:20","statements":[{"expression":{"id":5862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5857,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5828,"src":"2527:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5859,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5828,"src":"2536:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5860,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5828,"src":"2539:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5858,"name":"bmul","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5766,"src":"2531:4:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5861,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2531:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2527:14:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5863,"nodeType":"ExpressionStatement","src":"2527:14:20"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5864,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5830,"src":"2562:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":5865,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2566:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2562:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":5867,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2571:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2562:10:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5877,"nodeType":"IfStatement","src":"2558:65:20","trueBody":{"id":5876,"nodeType":"Block","src":"2574:49:20","statements":[{"expression":{"id":5874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5869,"name":"z","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5836,"src":"2593:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5871,"name":"z","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5836,"src":"2602:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5872,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5828,"src":"2605:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5870,"name":"bmul","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5766,"src":"2597:4:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5873,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2597:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2593:14:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5875,"nodeType":"ExpressionStatement","src":"2593:14:20"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5850,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5830,"src":"2496:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":5851,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2501:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2496:6:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5879,"initializationExpression":{"expression":{"id":5848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5846,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5830,"src":"2488:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"32","id":5847,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2493:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2488:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5849,"nodeType":"ExpressionStatement","src":"2488:6:20"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":5855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5853,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5830,"src":"2504:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"32","id":5854,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2509:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2504:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5856,"nodeType":"ExpressionStatement","src":"2504:6:20"},"nodeType":"ForStatement","src":"2483:151:20"},{"expression":{"id":5880,"name":"z","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5836,"src":"2651:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5834,"id":5881,"nodeType":"Return","src":"2644:8:20"}]},"id":5883,"implemented":true,"kind":"function","modifiers":[],"name":"bpowi","nameLocation":"2355:5:20","nodeType":"FunctionDefinition","parameters":{"id":5831,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5828,"mutability":"mutable","name":"a","nameLocation":"2366:1:20","nodeType":"VariableDeclaration","scope":5883,"src":"2361:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5827,"name":"uint","nodeType":"ElementaryTypeName","src":"2361:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5830,"mutability":"mutable","name":"n","nameLocation":"2374:1:20","nodeType":"VariableDeclaration","scope":5883,"src":"2369:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5829,"name":"uint","nodeType":"ElementaryTypeName","src":"2369:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2360:16:20"},"returnParameters":{"id":5834,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5833,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5883,"src":"2418:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5832,"name":"uint","nodeType":"ElementaryTypeName","src":"2418:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2417:6:20"},"scope":6073,"src":"2346:314:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5948,"nodeType":"Block","src":"2908:468:20","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5893,"name":"base","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5885,"src":"2927:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":5894,"name":"MIN_BPOW_BASE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4999,"src":"2935:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2927:21:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552525f42504f575f424153455f544f4f5f4c4f57","id":5896,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2950:23:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_c3c6d86eb18220ce6fabad4730713483274140acdfd45cb0464b732f664f22a2","typeString":"literal_string \"ERR_BPOW_BASE_TOO_LOW\""},"value":"ERR_BPOW_BASE_TOO_LOW"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c3c6d86eb18220ce6fabad4730713483274140acdfd45cb0464b732f664f22a2","typeString":"literal_string \"ERR_BPOW_BASE_TOO_LOW\""}],"id":5892,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2919:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5897,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2919:55:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5898,"nodeType":"ExpressionStatement","src":"2919:55:20"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5900,"name":"base","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5885,"src":"2993:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":5901,"name":"MAX_BPOW_BASE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5007,"src":"3001:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2993:21:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552525f42504f575f424153455f544f4f5f48494748","id":5903,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3016:24:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_fae8d286b68d43b79d9a68b43f60ff4a50d029bf671f8f7bc816beced90009f1","typeString":"literal_string \"ERR_BPOW_BASE_TOO_HIGH\""},"value":"ERR_BPOW_BASE_TOO_HIGH"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fae8d286b68d43b79d9a68b43f60ff4a50d029bf671f8f7bc816beced90009f1","typeString":"literal_string \"ERR_BPOW_BASE_TOO_HIGH\""}],"id":5899,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2985:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5904,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2985:56:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5905,"nodeType":"ExpressionStatement","src":"2985:56:20"},{"assignments":[5907],"declarations":[{"constant":false,"id":5907,"mutability":"mutable","name":"whole","nameLocation":"3059:5:20","nodeType":"VariableDeclaration","scope":5948,"src":"3054:10:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5906,"name":"uint","nodeType":"ElementaryTypeName","src":"3054:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5911,"initialValue":{"arguments":[{"id":5909,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5887,"src":"3075:3:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5908,"name":"bfloor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5631,"src":"3068:6:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5910,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3068:11:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3054:25:20"},{"assignments":[5913],"declarations":[{"constant":false,"id":5913,"mutability":"mutable","name":"remain","nameLocation":"3098:6:20","nodeType":"VariableDeclaration","scope":5948,"src":"3093:11:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5912,"name":"uint","nodeType":"ElementaryTypeName","src":"3093:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5918,"initialValue":{"arguments":[{"id":5915,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5887,"src":"3112:3:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5916,"name":"whole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5907,"src":"3117:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5914,"name":"bsub","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5683,"src":"3107:4:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5917,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3107:16:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3093:30:20"},{"assignments":[5920],"declarations":[{"constant":false,"id":5920,"mutability":"mutable","name":"wholePow","nameLocation":"3141:8:20","nodeType":"VariableDeclaration","scope":5948,"src":"3136:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5919,"name":"uint","nodeType":"ElementaryTypeName","src":"3136:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5927,"initialValue":{"arguments":[{"id":5922,"name":"base","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5885,"src":"3158:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":5924,"name":"whole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5907,"src":"3169:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5923,"name":"btoi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5617,"src":"3164:4:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5925,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3164:11:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5921,"name":"bpowi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5883,"src":"3152:5:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5926,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3152:24:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3136:40:20"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5928,"name":"remain","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5913,"src":"3193:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5929,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3203:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3193:11:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5934,"nodeType":"IfStatement","src":"3189:59:20","trueBody":{"id":5933,"nodeType":"Block","src":"3206:42:20","statements":[{"expression":{"id":5931,"name":"wholePow","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5920,"src":"3228:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5891,"id":5932,"nodeType":"Return","src":"3221:15:20"}]}},{"assignments":[5936],"declarations":[{"constant":false,"id":5936,"mutability":"mutable","name":"partialResult","nameLocation":"3265:13:20","nodeType":"VariableDeclaration","scope":5948,"src":"3260:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5935,"name":"uint","nodeType":"ElementaryTypeName","src":"3260:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5942,"initialValue":{"arguments":[{"id":5938,"name":"base","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5885,"src":"3292:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5939,"name":"remain","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5913,"src":"3298:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5940,"name":"BPOW_PRECISION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5014,"src":"3306:14:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5937,"name":"bpowApprox","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6072,"src":"3281:10:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":5941,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3281:40:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3260:61:20"},{"expression":{"arguments":[{"id":5944,"name":"wholePow","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5920,"src":"3344:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5945,"name":"partialResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5936,"src":"3354:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5943,"name":"bmul","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5766,"src":"3339:4:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5946,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3339:29:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5891,"id":5947,"nodeType":"Return","src":"3332:36:20"}]},"id":5949,"implemented":true,"kind":"function","modifiers":[],"name":"bpow","nameLocation":"2830:4:20","nodeType":"FunctionDefinition","parameters":{"id":5888,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5885,"mutability":"mutable","name":"base","nameLocation":"2840:4:20","nodeType":"VariableDeclaration","scope":5949,"src":"2835:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5884,"name":"uint","nodeType":"ElementaryTypeName","src":"2835:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5887,"mutability":"mutable","name":"exp","nameLocation":"2851:3:20","nodeType":"VariableDeclaration","scope":5949,"src":"2846:8:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5886,"name":"uint","nodeType":"ElementaryTypeName","src":"2846:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2834:21:20"},"returnParameters":{"id":5891,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5890,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5949,"src":"2897:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5889,"name":"uint","nodeType":"ElementaryTypeName","src":"2897:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2896:6:20"},"scope":6073,"src":"2821:555:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6071,"nodeType":"Block","src":"3493:971:20","statements":[{"assignments":[5961],"declarations":[{"constant":false,"id":5961,"mutability":"mutable","name":"a","nameLocation":"3529:1:20","nodeType":"VariableDeclaration","scope":6071,"src":"3524:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5960,"name":"uint","nodeType":"ElementaryTypeName","src":"3524:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5963,"initialValue":{"id":5962,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5953,"src":"3537:3:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3524:16:20"},{"assignments":[5965,5967],"declarations":[{"constant":false,"id":5965,"mutability":"mutable","name":"x","nameLocation":"3557:1:20","nodeType":"VariableDeclaration","scope":6071,"src":"3552:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5964,"name":"uint","nodeType":"ElementaryTypeName","src":"3552:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5967,"mutability":"mutable","name":"xneg","nameLocation":"3565:4:20","nodeType":"VariableDeclaration","scope":6071,"src":"3560:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5966,"name":"bool","nodeType":"ElementaryTypeName","src":"3560:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":5972,"initialValue":{"arguments":[{"id":5969,"name":"base","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5951,"src":"3583:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5970,"name":"BONE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4950,"src":"3589:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5968,"name":"bsubSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5713,"src":"3574:8:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_bool_$","typeString":"function (uint256,uint256) pure returns (uint256,bool)"}},"id":5971,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3574:20:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_bool_$","typeString":"tuple(uint256,bool)"}},"nodeType":"VariableDeclarationStatement","src":"3551:43:20"},{"assignments":[5974],"declarations":[{"constant":false,"id":5974,"mutability":"mutable","name":"term","nameLocation":"3610:4:20","nodeType":"VariableDeclaration","scope":6071,"src":"3605:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5973,"name":"uint","nodeType":"ElementaryTypeName","src":"3605:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5976,"initialValue":{"id":5975,"name":"BONE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4950,"src":"3617:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3605:16:20"},{"assignments":[5978],"declarations":[{"constant":false,"id":5978,"mutability":"mutable","name":"sum","nameLocation":"3637:3:20","nodeType":"VariableDeclaration","scope":6071,"src":"3632:8:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5977,"name":"uint","nodeType":"ElementaryTypeName","src":"3632:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5980,"initialValue":{"id":5979,"name":"term","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5974,"src":"3645:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3632:17:20"},{"assignments":[5982],"declarations":[{"constant":false,"id":5982,"mutability":"mutable","name":"negative","nameLocation":"3665:8:20","nodeType":"VariableDeclaration","scope":6071,"src":"3660:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5981,"name":"bool","nodeType":"ElementaryTypeName","src":"3660:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":5984,"initialValue":{"hexValue":"66616c7365","id":5983,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3676:5:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"nodeType":"VariableDeclarationStatement","src":"3660:21:20"},{"body":{"id":6067,"nodeType":"Block","src":"3966:468:20","statements":[{"assignments":[5996],"declarations":[{"constant":false,"id":5996,"mutability":"mutable","name":"bigK","nameLocation":"3986:4:20","nodeType":"VariableDeclaration","scope":6067,"src":"3981:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5995,"name":"uint","nodeType":"ElementaryTypeName","src":"3981:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6000,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5997,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5986,"src":"3993:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5998,"name":"BONE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4950,"src":"3997:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3993:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3981:20:20"},{"assignments":[6002,6004],"declarations":[{"constant":false,"id":6002,"mutability":"mutable","name":"c","nameLocation":"4022:1:20","nodeType":"VariableDeclaration","scope":6067,"src":"4017:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6001,"name":"uint","nodeType":"ElementaryTypeName","src":"4017:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6004,"mutability":"mutable","name":"cneg","nameLocation":"4030:4:20","nodeType":"VariableDeclaration","scope":6067,"src":"4025:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6003,"name":"bool","nodeType":"ElementaryTypeName","src":"4025:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":6012,"initialValue":{"arguments":[{"id":6006,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5961,"src":"4047:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":6008,"name":"bigK","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5996,"src":"4055:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6009,"name":"BONE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4950,"src":"4061:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6007,"name":"bsub","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5683,"src":"4050:4:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":6010,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4050:16:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6005,"name":"bsubSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5713,"src":"4038:8:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_bool_$","typeString":"function (uint256,uint256) pure returns (uint256,bool)"}},"id":6011,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4038:29:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_bool_$","typeString":"tuple(uint256,bool)"}},"nodeType":"VariableDeclarationStatement","src":"4016:51:20"},{"expression":{"id":6021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6013,"name":"term","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5974,"src":"4082:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6015,"name":"term","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5974,"src":"4094:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":6017,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6002,"src":"4105:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6018,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5965,"src":"4108:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6016,"name":"bmul","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5766,"src":"4100:4:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":6019,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4100:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6014,"name":"bmul","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5766,"src":"4089:4:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":6020,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4089:22:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4082:29:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6022,"nodeType":"ExpressionStatement","src":"4082:29:20"},{"expression":{"id":6028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6023,"name":"term","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5974,"src":"4126:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6025,"name":"term","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5974,"src":"4138:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6026,"name":"bigK","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5996,"src":"4144:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6024,"name":"bdiv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5826,"src":"4133:4:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":6027,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4133:16:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4126:23:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6029,"nodeType":"ExpressionStatement","src":"4126:23:20"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6030,"name":"term","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5974,"src":"4168:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":6031,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4176:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4168:9:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6034,"nodeType":"IfStatement","src":"4164:20:20","trueBody":{"id":6033,"nodeType":"Break","src":"4179:5:20"}},{"condition":{"id":6035,"name":"xneg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5967,"src":"4205:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6041,"nodeType":"IfStatement","src":"4201:30:20","trueBody":{"expression":{"id":6039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6036,"name":"negative","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5982,"src":"4211:8:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4222:9:20","subExpression":{"id":6037,"name":"negative","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5982,"src":"4223:8:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4211:20:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6040,"nodeType":"ExpressionStatement","src":"4211:20:20"}},{"condition":{"id":6042,"name":"cneg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6004,"src":"4250:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6048,"nodeType":"IfStatement","src":"4246:30:20","trueBody":{"expression":{"id":6046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6043,"name":"negative","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5982,"src":"4256:8:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4267:9:20","subExpression":{"id":6044,"name":"negative","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5982,"src":"4268:8:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4256:20:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6047,"nodeType":"ExpressionStatement","src":"4256:20:20"}},{"condition":{"id":6049,"name":"negative","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5982,"src":"4295:8:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":6065,"nodeType":"Block","src":"4367:56:20","statements":[{"expression":{"id":6063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6058,"name":"sum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5978,"src":"4386:3:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6060,"name":"sum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5978,"src":"4397:3:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6061,"name":"term","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5974,"src":"4402:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6059,"name":"badd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5656,"src":"4392:4:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":6062,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4392:15:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4386:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6064,"nodeType":"ExpressionStatement","src":"4386:21:20"}]},"id":6066,"nodeType":"IfStatement","src":"4291:132:20","trueBody":{"id":6057,"nodeType":"Block","src":"4305:56:20","statements":[{"expression":{"id":6055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6050,"name":"sum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5978,"src":"4324:3:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6052,"name":"sum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5978,"src":"4335:3:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6053,"name":"term","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5974,"src":"4340:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6051,"name":"bsub","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5683,"src":"4330:4:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":6054,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4330:15:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4324:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6056,"nodeType":"ExpressionStatement","src":"4324:21:20"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5989,"name":"term","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5974,"src":"3942:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":5990,"name":"precision","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5955,"src":"3950:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3942:17:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6068,"initializationExpression":{"assignments":[5986],"declarations":[{"constant":false,"id":5986,"mutability":"mutable","name":"i","nameLocation":"3935:1:20","nodeType":"VariableDeclaration","scope":6068,"src":"3930:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5985,"name":"uint","nodeType":"ElementaryTypeName","src":"3930:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5988,"initialValue":{"hexValue":"31","id":5987,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3939:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"3930:10:20"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":5993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3961:3:20","subExpression":{"id":5992,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5986,"src":"3961:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5994,"nodeType":"ExpressionStatement","src":"3961:3:20"},"nodeType":"ForStatement","src":"3925:509:20"},{"expression":{"id":6069,"name":"sum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5978,"src":"4453:3:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5959,"id":6070,"nodeType":"Return","src":"4446:10:20"}]},"id":6072,"implemented":true,"kind":"function","modifiers":[],"name":"bpowApprox","nameLocation":"3393:10:20","nodeType":"FunctionDefinition","parameters":{"id":5956,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5951,"mutability":"mutable","name":"base","nameLocation":"3409:4:20","nodeType":"VariableDeclaration","scope":6072,"src":"3404:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5950,"name":"uint","nodeType":"ElementaryTypeName","src":"3404:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5953,"mutability":"mutable","name":"exp","nameLocation":"3420:3:20","nodeType":"VariableDeclaration","scope":6072,"src":"3415:8:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5952,"name":"uint","nodeType":"ElementaryTypeName","src":"3415:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5955,"mutability":"mutable","name":"precision","nameLocation":"3430:9:20","nodeType":"VariableDeclaration","scope":6072,"src":"3425:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5954,"name":"uint","nodeType":"ElementaryTypeName","src":"3425:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3403:37:20"},"returnParameters":{"id":5959,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5958,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6072,"src":"3482:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5957,"name":"uint","nodeType":"ElementaryTypeName","src":"3482:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3481:6:20"},"scope":6073,"src":"3384:1080:20","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":6074,"src":"709:3760:20","usedErrors":[],"usedEvents":[]}],"src":"656:3815:20"},"id":20},"contracts/interfaces/I1inchSpotAgg.sol":{"ast":{"absolutePath":"contracts/interfaces/I1inchSpotAgg.sol","exportedSymbols":{"I1inchSpotAgg":[6100],"IERC20":[1729]},"id":6101,"license":"GNU AGPLv3","nodeType":"SourceUnit","nodes":[{"id":6075,"literals":["solidity","0.8",".25"],"nodeType":"PragmaDirective","src":"40:23:21"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":6076,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6101,"sourceUnit":1730,"src":"65:56:21","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"I1inchSpotAgg","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":6100,"linearizedBaseContracts":[6100],"name":"I1inchSpotAgg","nameLocation":"135:13:21","nodeType":"ContractDefinition","nodes":[{"functionSelector":"802431fb","id":6089,"implemented":false,"kind":"function","modifiers":[],"name":"getRate","nameLocation":"163:7:21","nodeType":"FunctionDefinition","parameters":{"id":6085,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6079,"mutability":"mutable","name":"srcToken","nameLocation":"178:8:21","nodeType":"VariableDeclaration","scope":6089,"src":"171:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"},"typeName":{"id":6078,"nodeType":"UserDefinedTypeName","pathNode":{"id":6077,"name":"IERC20","nameLocations":["171:6:21"],"nodeType":"IdentifierPath","referencedDeclaration":1729,"src":"171:6:21"},"referencedDeclaration":1729,"src":"171:6:21","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":6082,"mutability":"mutable","name":"dstToken","nameLocation":"195:8:21","nodeType":"VariableDeclaration","scope":6089,"src":"188:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"},"typeName":{"id":6081,"nodeType":"UserDefinedTypeName","pathNode":{"id":6080,"name":"IERC20","nameLocations":["188:6:21"],"nodeType":"IdentifierPath","referencedDeclaration":1729,"src":"188:6:21"},"referencedDeclaration":1729,"src":"188:6:21","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":6084,"mutability":"mutable","name":"useWrappers","nameLocation":"210:11:21","nodeType":"VariableDeclaration","scope":6089,"src":"205:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6083,"name":"bool","nodeType":"ElementaryTypeName","src":"205:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"170:52:21"},"returnParameters":{"id":6088,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6087,"mutability":"mutable","name":"weightedRate","nameLocation":"254:12:21","nodeType":"VariableDeclaration","scope":6089,"src":"246:20:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6086,"name":"uint256","nodeType":"ElementaryTypeName","src":"246:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"245:22:21"},"scope":6100,"src":"154:114:21","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"7de4fd10","id":6099,"implemented":false,"kind":"function","modifiers":[],"name":"getRateToEth","nameLocation":"283:12:21","nodeType":"FunctionDefinition","parameters":{"id":6095,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6092,"mutability":"mutable","name":"srcToken","nameLocation":"303:8:21","nodeType":"VariableDeclaration","scope":6099,"src":"296:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"},"typeName":{"id":6091,"nodeType":"UserDefinedTypeName","pathNode":{"id":6090,"name":"IERC20","nameLocations":["296:6:21"],"nodeType":"IdentifierPath","referencedDeclaration":1729,"src":"296:6:21"},"referencedDeclaration":1729,"src":"296:6:21","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":6094,"mutability":"mutable","name":"useWrappers","nameLocation":"318:11:21","nodeType":"VariableDeclaration","scope":6099,"src":"313:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6093,"name":"bool","nodeType":"ElementaryTypeName","src":"313:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"295:35:21"},"returnParameters":{"id":6098,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6097,"mutability":"mutable","name":"weightedRate","nameLocation":"362:12:21","nodeType":"VariableDeclaration","scope":6099,"src":"354:20:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6096,"name":"uint256","nodeType":"ElementaryTypeName","src":"354:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"353:22:21"},"scope":6100,"src":"274:102:21","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":6101,"src":"125:254:21","usedErrors":[],"usedEvents":[]}],"src":"40:341:21"},"id":21},"contracts/interfaces/IBaluniV1Agent.sol":{"ast":{"absolutePath":"contracts/interfaces/IBaluniV1Agent.sol","exportedSymbols":{"IBaluniV1Agent":[6120]},"id":6121,"license":"GNU AGPLv3","nodeType":"SourceUnit","nodes":[{"id":6102,"literals":["solidity","0.8",".25"],"nodeType":"PragmaDirective","src":"40:23:22"},{"abstract":false,"baseContracts":[],"canonicalName":"IBaluniV1Agent","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":6120,"linearizedBaseContracts":[6120],"name":"IBaluniV1Agent","nameLocation":"77:14:22","nodeType":"ContractDefinition","nodes":[{"canonicalName":"IBaluniV1Agent.Call","id":6109,"members":[{"constant":false,"id":6104,"mutability":"mutable","name":"to","nameLocation":"124:2:22","nodeType":"VariableDeclaration","scope":6109,"src":"116:10:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6103,"name":"address","nodeType":"ElementaryTypeName","src":"116:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6106,"mutability":"mutable","name":"value","nameLocation":"141:5:22","nodeType":"VariableDeclaration","scope":6109,"src":"133:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6105,"name":"uint256","nodeType":"ElementaryTypeName","src":"133:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6108,"mutability":"mutable","name":"data","nameLocation":"159:4:22","nodeType":"VariableDeclaration","scope":6109,"src":"153:10:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":6107,"name":"bytes","nodeType":"ElementaryTypeName","src":"153:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"Call","nameLocation":"104:4:22","nodeType":"StructDefinition","scope":6120,"src":"97:72:22","visibility":"public"},{"functionSelector":"eedc3c50","id":6119,"implemented":false,"kind":"function","modifiers":[],"name":"execute","nameLocation":"184:7:22","nodeType":"FunctionDefinition","parameters":{"id":6117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6113,"mutability":"mutable","name":"calls","nameLocation":"206:5:22","nodeType":"VariableDeclaration","scope":6119,"src":"192:19:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Call_$6109_memory_ptr_$dyn_memory_ptr","typeString":"struct IBaluniV1Agent.Call[]"},"typeName":{"baseType":{"id":6111,"nodeType":"UserDefinedTypeName","pathNode":{"id":6110,"name":"Call","nameLocations":["192:4:22"],"nodeType":"IdentifierPath","referencedDeclaration":6109,"src":"192:4:22"},"referencedDeclaration":6109,"src":"192:4:22","typeDescriptions":{"typeIdentifier":"t_struct$_Call_$6109_storage_ptr","typeString":"struct IBaluniV1Agent.Call"}},"id":6112,"nodeType":"ArrayTypeName","src":"192:6:22","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Call_$6109_storage_$dyn_storage_ptr","typeString":"struct IBaluniV1Agent.Call[]"}},"visibility":"internal"},{"constant":false,"id":6116,"mutability":"mutable","name":"tokensReturn","nameLocation":"230:12:22","nodeType":"VariableDeclaration","scope":6119,"src":"213:29:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":6114,"name":"address","nodeType":"ElementaryTypeName","src":"213:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6115,"nodeType":"ArrayTypeName","src":"213:9:22","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"191:52:22"},"returnParameters":{"id":6118,"nodeType":"ParameterList","parameters":[],"src":"252:0:22"},"scope":6120,"src":"175:78:22","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":6121,"src":"67:189:22","usedErrors":[],"usedEvents":[]}],"src":"40:218:22"},"id":22},"contracts/interfaces/IBaluniV1PoolPeriphery.sol":{"ast":{"absolutePath":"contracts/interfaces/IBaluniV1PoolPeriphery.sol","exportedSymbols":{"IBaluniV1PoolPeriphery":[6140]},"id":6141,"license":"GNU AGPLv3","nodeType":"SourceUnit","nodes":[{"id":6122,"literals":["solidity","0.8",".25"],"nodeType":"PragmaDirective","src":"40:23:23"},{"abstract":false,"baseContracts":[],"canonicalName":"IBaluniV1PoolPeriphery","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":6140,"linearizedBaseContracts":[6140],"name":"IBaluniV1PoolPeriphery","nameLocation":"77:22:23","nodeType":"ContractDefinition","nodes":[{"functionSelector":"3e99c1e4","id":6130,"implemented":false,"kind":"function","modifiers":[],"name":"getReserves","nameLocation":"116:11:23","nodeType":"FunctionDefinition","parameters":{"id":6125,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6124,"mutability":"mutable","name":"pool","nameLocation":"136:4:23","nodeType":"VariableDeclaration","scope":6130,"src":"128:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6123,"name":"address","nodeType":"ElementaryTypeName","src":"128:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"127:14:23"},"returnParameters":{"id":6129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6128,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6130,"src":"165:16:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":6126,"name":"uint256","nodeType":"ElementaryTypeName","src":"165:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6127,"nodeType":"ArrayTypeName","src":"165:9:23","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"164:18:23"},"scope":6140,"src":"107:76:23","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"a3e113fb","id":6139,"implemented":false,"kind":"function","modifiers":[],"name":"getAssetReserve","nameLocation":"200:15:23","nodeType":"FunctionDefinition","parameters":{"id":6135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6132,"mutability":"mutable","name":"pool","nameLocation":"224:4:23","nodeType":"VariableDeclaration","scope":6139,"src":"216:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6131,"name":"address","nodeType":"ElementaryTypeName","src":"216:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6134,"mutability":"mutable","name":"asset","nameLocation":"238:5:23","nodeType":"VariableDeclaration","scope":6139,"src":"230:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6133,"name":"address","nodeType":"ElementaryTypeName","src":"230:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"215:29:23"},"returnParameters":{"id":6138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6137,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6139,"src":"268:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6136,"name":"uint256","nodeType":"ElementaryTypeName","src":"268:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"267:9:23"},"scope":6140,"src":"191:86:23","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":6141,"src":"67:213:23","usedErrors":[],"usedEvents":[]}],"src":"40:242:23"},"id":23},"contracts/interfaces/IBaluniV1Rebalancer.sol":{"ast":{"absolutePath":"contracts/interfaces/IBaluniV1Rebalancer.sol","exportedSymbols":{"I1inchSpotAgg":[6100],"IBaluniV1Agent":[6120],"IBaluniV1Rebalancer":[6261],"IBaluniV1Router":[6519],"IERC20":[1729],"IERC20Metadata":[1755]},"id":6262,"license":"GNU AGPLv3","nodeType":"SourceUnit","nodes":[{"id":6142,"literals":["solidity","0.8",".25"],"nodeType":"PragmaDirective","src":"40:23:24"},{"absolutePath":"contracts/interfaces/IBaluniV1Router.sol","file":"./IBaluniV1Router.sol","id":6143,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6262,"sourceUnit":6520,"src":"67:31:24","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IBaluniV1Rebalancer","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":6261,"linearizedBaseContracts":[6261],"name":"IBaluniV1Rebalancer","nameLocation":"112:19:24","nodeType":"ContractDefinition","nodes":[{"canonicalName":"IBaluniV1Rebalancer.RebalanceVars","id":6173,"members":[{"constant":false,"id":6145,"mutability":"mutable","name":"length","nameLocation":"173:6:24","nodeType":"VariableDeclaration","scope":6173,"src":"165:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6144,"name":"uint256","nodeType":"ElementaryTypeName","src":"165:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6147,"mutability":"mutable","name":"totalValue","nameLocation":"194:10:24","nodeType":"VariableDeclaration","scope":6173,"src":"186:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6146,"name":"uint256","nodeType":"ElementaryTypeName","src":"186:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6149,"mutability":"mutable","name":"finalUsdBalance","nameLocation":"219:15:24","nodeType":"VariableDeclaration","scope":6173,"src":"211:23:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6148,"name":"uint256","nodeType":"ElementaryTypeName","src":"211:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6151,"mutability":"mutable","name":"overweightVaultsLength","nameLocation":"249:22:24","nodeType":"VariableDeclaration","scope":6173,"src":"241:30:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6150,"name":"uint256","nodeType":"ElementaryTypeName","src":"241:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6153,"mutability":"mutable","name":"underweightVaultsLength","nameLocation":"286:23:24","nodeType":"VariableDeclaration","scope":6173,"src":"278:31:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6152,"name":"uint256","nodeType":"ElementaryTypeName","src":"278:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6155,"mutability":"mutable","name":"totalActiveWeight","nameLocation":"324:17:24","nodeType":"VariableDeclaration","scope":6173,"src":"316:25:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6154,"name":"uint256","nodeType":"ElementaryTypeName","src":"316:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6157,"mutability":"mutable","name":"amountOut","nameLocation":"356:9:24","nodeType":"VariableDeclaration","scope":6173,"src":"348:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6156,"name":"uint256","nodeType":"ElementaryTypeName","src":"348:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6160,"mutability":"mutable","name":"overweightVaults","nameLocation":"382:16:24","nodeType":"VariableDeclaration","scope":6173,"src":"372:26:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":6158,"name":"uint256","nodeType":"ElementaryTypeName","src":"372:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6159,"nodeType":"ArrayTypeName","src":"372:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":6163,"mutability":"mutable","name":"overweightAmounts","nameLocation":"415:17:24","nodeType":"VariableDeclaration","scope":6173,"src":"405:27:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":6161,"name":"uint256","nodeType":"ElementaryTypeName","src":"405:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6162,"nodeType":"ArrayTypeName","src":"405:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":6166,"mutability":"mutable","name":"underweightVaults","nameLocation":"449:17:24","nodeType":"VariableDeclaration","scope":6173,"src":"439:27:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":6164,"name":"uint256","nodeType":"ElementaryTypeName","src":"439:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6165,"nodeType":"ArrayTypeName","src":"439:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":6169,"mutability":"mutable","name":"underweightAmounts","nameLocation":"483:18:24","nodeType":"VariableDeclaration","scope":6173,"src":"473:28:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":6167,"name":"uint256","nodeType":"ElementaryTypeName","src":"473:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6168,"nodeType":"ArrayTypeName","src":"473:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":6172,"mutability":"mutable","name":"balances","nameLocation":"518:8:24","nodeType":"VariableDeclaration","scope":6173,"src":"508:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":6170,"name":"uint256","nodeType":"ElementaryTypeName","src":"508:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6171,"nodeType":"ArrayTypeName","src":"508:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"name":"RebalanceVars","nameLocation":"144:13:24","nodeType":"StructDefinition","scope":6261,"src":"137:395:24","visibility":"public"},{"functionSelector":"39b65140","id":6178,"implemented":false,"kind":"function","modifiers":[],"name":"baluniRouter","nameLocation":"563:12:24","nodeType":"FunctionDefinition","parameters":{"id":6174,"nodeType":"ParameterList","parameters":[],"src":"575:2:24"},"returnParameters":{"id":6177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6176,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6178,"src":"601:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6175,"name":"address","nodeType":"ElementaryTypeName","src":"601:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"600:9:24"},"scope":6261,"src":"554:56:24","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"89a30271","id":6183,"implemented":false,"kind":"function","modifiers":[],"name":"USDC","nameLocation":"625:4:24","nodeType":"FunctionDefinition","parameters":{"id":6179,"nodeType":"ParameterList","parameters":[],"src":"629:2:24"},"returnParameters":{"id":6182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6181,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6183,"src":"655:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6180,"name":"address","nodeType":"ElementaryTypeName","src":"655:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"654:9:24"},"scope":6261,"src":"616:48:24","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"b381cf40","id":6188,"implemented":false,"kind":"function","modifiers":[],"name":"WNATIVE","nameLocation":"679:7:24","nodeType":"FunctionDefinition","parameters":{"id":6184,"nodeType":"ParameterList","parameters":[],"src":"686:2:24"},"returnParameters":{"id":6187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6186,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6188,"src":"712:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6185,"name":"address","nodeType":"ElementaryTypeName","src":"712:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"711:9:24"},"scope":6261,"src":"670:51:24","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"735de9f7","id":6193,"implemented":false,"kind":"function","modifiers":[],"name":"uniswapRouter","nameLocation":"736:13:24","nodeType":"FunctionDefinition","parameters":{"id":6189,"nodeType":"ParameterList","parameters":[],"src":"749:2:24"},"returnParameters":{"id":6192,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6191,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6193,"src":"775:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6190,"name":"address","nodeType":"ElementaryTypeName","src":"775:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"774:9:24"},"scope":6261,"src":"727:57:24","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"8bdb2afa","id":6198,"implemented":false,"kind":"function","modifiers":[],"name":"uniswapFactory","nameLocation":"799:14:24","nodeType":"FunctionDefinition","parameters":{"id":6194,"nodeType":"ParameterList","parameters":[],"src":"813:2:24"},"returnParameters":{"id":6197,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6196,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6198,"src":"839:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6195,"name":"address","nodeType":"ElementaryTypeName","src":"839:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"838:9:24"},"scope":6261,"src":"790:58:24","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"eb06b29d","id":6203,"implemented":false,"kind":"function","modifiers":[],"name":"_1InchSpotAgg","nameLocation":"863:13:24","nodeType":"FunctionDefinition","parameters":{"id":6199,"nodeType":"ParameterList","parameters":[],"src":"876:2:24"},"returnParameters":{"id":6202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6201,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6203,"src":"902:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6200,"name":"address","nodeType":"ElementaryTypeName","src":"902:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"901:9:24"},"scope":6261,"src":"854:57:24","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"61d027b3","id":6208,"implemented":false,"kind":"function","modifiers":[],"name":"treasury","nameLocation":"926:8:24","nodeType":"FunctionDefinition","parameters":{"id":6204,"nodeType":"ParameterList","parameters":[],"src":"934:2:24"},"returnParameters":{"id":6207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6206,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6208,"src":"960:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6205,"name":"address","nodeType":"ElementaryTypeName","src":"960:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"959:9:24"},"scope":6261,"src":"917:52:24","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"f0bf7714","id":6228,"implemented":false,"kind":"function","modifiers":[],"name":"rebalance","nameLocation":"1000:9:24","nodeType":"FunctionDefinition","parameters":{"id":6226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6211,"mutability":"mutable","name":"balances","nameLocation":"1033:8:24","nodeType":"VariableDeclaration","scope":6228,"src":"1016:25:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":6209,"name":"uint256","nodeType":"ElementaryTypeName","src":"1016:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6210,"nodeType":"ArrayTypeName","src":"1016:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":6214,"mutability":"mutable","name":"assets","nameLocation":"1067:6:24","nodeType":"VariableDeclaration","scope":6228,"src":"1048:25:24","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":6212,"name":"address","nodeType":"ElementaryTypeName","src":"1048:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6213,"nodeType":"ArrayTypeName","src":"1048:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":6217,"mutability":"mutable","name":"weights","nameLocation":"1099:7:24","nodeType":"VariableDeclaration","scope":6228,"src":"1080:26:24","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":6215,"name":"uint256","nodeType":"ElementaryTypeName","src":"1080:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6216,"nodeType":"ArrayTypeName","src":"1080:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":6219,"mutability":"mutable","name":"limit","nameLocation":"1121:5:24","nodeType":"VariableDeclaration","scope":6228,"src":"1113:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6218,"name":"uint256","nodeType":"ElementaryTypeName","src":"1113:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6221,"mutability":"mutable","name":"sender","nameLocation":"1141:6:24","nodeType":"VariableDeclaration","scope":6228,"src":"1133:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6220,"name":"address","nodeType":"ElementaryTypeName","src":"1133:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6223,"mutability":"mutable","name":"receiver","nameLocation":"1162:8:24","nodeType":"VariableDeclaration","scope":6228,"src":"1154:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6222,"name":"address","nodeType":"ElementaryTypeName","src":"1154:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6225,"mutability":"mutable","name":"baseAsset","nameLocation":"1185:9:24","nodeType":"VariableDeclaration","scope":6228,"src":"1177:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6224,"name":"address","nodeType":"ElementaryTypeName","src":"1177:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1009:190:24"},"returnParameters":{"id":6227,"nodeType":"ParameterList","parameters":[],"src":"1208:0:24"},"scope":6261,"src":"991:218:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"997146f5","id":6249,"implemented":false,"kind":"function","modifiers":[],"name":"checkRebalance","nameLocation":"1224:14:24","nodeType":"FunctionDefinition","parameters":{"id":6244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6231,"mutability":"mutable","name":"balances","nameLocation":"1262:8:24","nodeType":"VariableDeclaration","scope":6249,"src":"1245:25:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":6229,"name":"uint256","nodeType":"ElementaryTypeName","src":"1245:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6230,"nodeType":"ArrayTypeName","src":"1245:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":6234,"mutability":"mutable","name":"assets","nameLocation":"1296:6:24","nodeType":"VariableDeclaration","scope":6249,"src":"1277:25:24","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":6232,"name":"address","nodeType":"ElementaryTypeName","src":"1277:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6233,"nodeType":"ArrayTypeName","src":"1277:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":6237,"mutability":"mutable","name":"weights","nameLocation":"1328:7:24","nodeType":"VariableDeclaration","scope":6249,"src":"1309:26:24","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":6235,"name":"uint256","nodeType":"ElementaryTypeName","src":"1309:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6236,"nodeType":"ArrayTypeName","src":"1309:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":6239,"mutability":"mutable","name":"limit","nameLocation":"1350:5:24","nodeType":"VariableDeclaration","scope":6249,"src":"1342:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6238,"name":"uint256","nodeType":"ElementaryTypeName","src":"1342:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6241,"mutability":"mutable","name":"sender","nameLocation":"1370:6:24","nodeType":"VariableDeclaration","scope":6249,"src":"1362:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6240,"name":"address","nodeType":"ElementaryTypeName","src":"1362:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6243,"mutability":"mutable","name":"baseAsset","nameLocation":"1391:9:24","nodeType":"VariableDeclaration","scope":6249,"src":"1383:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6242,"name":"address","nodeType":"ElementaryTypeName","src":"1383:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1238:167:24"},"returnParameters":{"id":6248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6247,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6249,"src":"1429:20:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_RebalanceVars_$6173_memory_ptr","typeString":"struct IBaluniV1Rebalancer.RebalanceVars"},"typeName":{"id":6246,"nodeType":"UserDefinedTypeName","pathNode":{"id":6245,"name":"RebalanceVars","nameLocations":["1429:13:24"],"nodeType":"IdentifierPath","referencedDeclaration":6173,"src":"1429:13:24"},"referencedDeclaration":6173,"src":"1429:13:24","typeDescriptions":{"typeIdentifier":"t_struct$_RebalanceVars_$6173_storage_ptr","typeString":"struct IBaluniV1Rebalancer.RebalanceVars"}},"visibility":"internal"}],"src":"1428:22:24"},"scope":6261,"src":"1215:236:24","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"248391ff","id":6260,"implemented":false,"kind":"function","modifiers":[],"name":"convert","nameLocation":"1466:7:24","nodeType":"FunctionDefinition","parameters":{"id":6256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6251,"mutability":"mutable","name":"fromToken","nameLocation":"1482:9:24","nodeType":"VariableDeclaration","scope":6260,"src":"1474:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6250,"name":"address","nodeType":"ElementaryTypeName","src":"1474:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6253,"mutability":"mutable","name":"toToken","nameLocation":"1501:7:24","nodeType":"VariableDeclaration","scope":6260,"src":"1493:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6252,"name":"address","nodeType":"ElementaryTypeName","src":"1493:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6255,"mutability":"mutable","name":"amount","nameLocation":"1518:6:24","nodeType":"VariableDeclaration","scope":6260,"src":"1510:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6254,"name":"uint256","nodeType":"ElementaryTypeName","src":"1510:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1473:52:24"},"returnParameters":{"id":6259,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6258,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6260,"src":"1549:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6257,"name":"uint256","nodeType":"ElementaryTypeName","src":"1549:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1548:9:24"},"scope":6261,"src":"1457:101:24","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":6262,"src":"102:1459:24","usedErrors":[],"usedEvents":[]}],"src":"40:1523:24"},"id":24},"contracts/interfaces/IBaluniV1Router.sol":{"ast":{"absolutePath":"contracts/interfaces/IBaluniV1Router.sol","exportedSymbols":{"I1inchSpotAgg":[6100],"IBaluniV1Agent":[6120],"IBaluniV1Router":[6519],"IERC20":[1729],"IERC20Metadata":[1755]},"id":6520,"license":"GNU AGPLv3","nodeType":"SourceUnit","nodes":[{"id":6263,"literals":["solidity","0.8",".25"],"nodeType":"PragmaDirective","src":"40:23:25"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":6264,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6520,"sourceUnit":1730,"src":"67:56:25","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","id":6265,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6520,"sourceUnit":1756,"src":"125:75:25","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/I1inchSpotAgg.sol","file":"./I1inchSpotAgg.sol","id":6266,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6520,"sourceUnit":6101,"src":"202:29:25","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IBaluniV1Agent.sol","file":"./IBaluniV1Agent.sol","id":6267,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6520,"sourceUnit":6121,"src":"233:30:25","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IBaluniV1Router","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":6519,"linearizedBaseContracts":[6519],"name":"IBaluniV1Router","nameLocation":"277:15:25","nodeType":"ContractDefinition","nodes":[{"canonicalName":"IBaluniV1Router.Call","id":6274,"members":[{"constant":false,"id":6269,"mutability":"mutable","name":"to","nameLocation":"325:2:25","nodeType":"VariableDeclaration","scope":6274,"src":"317:10:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6268,"name":"address","nodeType":"ElementaryTypeName","src":"317:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6271,"mutability":"mutable","name":"value","nameLocation":"342:5:25","nodeType":"VariableDeclaration","scope":6274,"src":"334:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6270,"name":"uint256","nodeType":"ElementaryTypeName","src":"334:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6273,"mutability":"mutable","name":"data","nameLocation":"360:4:25","nodeType":"VariableDeclaration","scope":6274,"src":"354:10:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":6272,"name":"bytes","nodeType":"ElementaryTypeName","src":"354:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"Call","nameLocation":"305:4:25","nodeType":"StructDefinition","scope":6519,"src":"298:72:25","visibility":"public"},{"functionSelector":"34decfc9","id":6279,"implemented":false,"kind":"function","modifiers":[],"name":"_MAX_BPS_FEE","nameLocation":"401:12:25","nodeType":"FunctionDefinition","parameters":{"id":6275,"nodeType":"ParameterList","parameters":[],"src":"413:2:25"},"returnParameters":{"id":6278,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6277,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6279,"src":"439:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6276,"name":"uint256","nodeType":"ElementaryTypeName","src":"439:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"438:9:25"},"scope":6519,"src":"392:56:25","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"b9f5e617","id":6284,"implemented":false,"kind":"function","modifiers":[],"name":"_BPS_FEE","nameLocation":"463:8:25","nodeType":"FunctionDefinition","parameters":{"id":6280,"nodeType":"ParameterList","parameters":[],"src":"471:2:25"},"returnParameters":{"id":6283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6282,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6284,"src":"497:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6281,"name":"uint256","nodeType":"ElementaryTypeName","src":"497:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"496:9:25"},"scope":6519,"src":"454:52:25","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"85377188","id":6289,"implemented":false,"kind":"function","modifiers":[],"name":"_BPS_BASE","nameLocation":"521:9:25","nodeType":"FunctionDefinition","parameters":{"id":6285,"nodeType":"ParameterList","parameters":[],"src":"530:2:25"},"returnParameters":{"id":6288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6287,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6289,"src":"556:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6286,"name":"uint256","nodeType":"ElementaryTypeName","src":"556:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"555:9:25"},"scope":6519,"src":"512:53:25","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"aa6ca808","id":6295,"implemented":false,"kind":"function","modifiers":[],"name":"getTokens","nameLocation":"580:9:25","nodeType":"FunctionDefinition","parameters":{"id":6290,"nodeType":"ParameterList","parameters":[],"src":"589:2:25"},"returnParameters":{"id":6294,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6293,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6295,"src":"615:16:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":6291,"name":"address","nodeType":"ElementaryTypeName","src":"615:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6292,"nodeType":"ArrayTypeName","src":"615:9:25","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"614:18:25"},"scope":6519,"src":"571:62:25","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"89a30271","id":6301,"implemented":false,"kind":"function","modifiers":[],"name":"USDC","nameLocation":"648:4:25","nodeType":"FunctionDefinition","parameters":{"id":6296,"nodeType":"ParameterList","parameters":[],"src":"652:2:25"},"returnParameters":{"id":6300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6299,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6301,"src":"678:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"},"typeName":{"id":6298,"nodeType":"UserDefinedTypeName","pathNode":{"id":6297,"name":"IERC20","nameLocations":["678:6:25"],"nodeType":"IdentifierPath","referencedDeclaration":1729,"src":"678:6:25"},"referencedDeclaration":1729,"src":"678:6:25","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"}},"visibility":"internal"}],"src":"677:8:25"},"scope":6519,"src":"639:47:25","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"b381cf40","id":6306,"implemented":false,"kind":"function","modifiers":[],"name":"WNATIVE","nameLocation":"701:7:25","nodeType":"FunctionDefinition","parameters":{"id":6302,"nodeType":"ParameterList","parameters":[],"src":"708:2:25"},"returnParameters":{"id":6305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6304,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6306,"src":"734:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6303,"name":"address","nodeType":"ElementaryTypeName","src":"734:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"733:9:25"},"scope":6519,"src":"692:51:25","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"7dc0d1d0","id":6311,"implemented":false,"kind":"function","modifiers":[],"name":"oracle","nameLocation":"758:6:25","nodeType":"FunctionDefinition","parameters":{"id":6307,"nodeType":"ParameterList","parameters":[],"src":"764:2:25"},"returnParameters":{"id":6310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6309,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6311,"src":"790:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6308,"name":"address","nodeType":"ElementaryTypeName","src":"790:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"789:9:25"},"scope":6519,"src":"749:50:25","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"735de9f7","id":6316,"implemented":false,"kind":"function","modifiers":[],"name":"uniswapRouter","nameLocation":"814:13:25","nodeType":"FunctionDefinition","parameters":{"id":6312,"nodeType":"ParameterList","parameters":[],"src":"827:2:25"},"returnParameters":{"id":6315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6314,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6316,"src":"853:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6313,"name":"address","nodeType":"ElementaryTypeName","src":"853:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"852:9:25"},"scope":6519,"src":"805:57:25","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"8bdb2afa","id":6321,"implemented":false,"kind":"function","modifiers":[],"name":"uniswapFactory","nameLocation":"877:14:25","nodeType":"FunctionDefinition","parameters":{"id":6317,"nodeType":"ParameterList","parameters":[],"src":"891:2:25"},"returnParameters":{"id":6320,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6319,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6321,"src":"917:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6318,"name":"address","nodeType":"ElementaryTypeName","src":"917:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"916:9:25"},"scope":6519,"src":"868:58:25","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"7df107ea","id":6326,"implemented":false,"kind":"function","modifiers":[],"name":"agentFactory","nameLocation":"941:12:25","nodeType":"FunctionDefinition","parameters":{"id":6322,"nodeType":"ParameterList","parameters":[],"src":"953:2:25"},"returnParameters":{"id":6325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6324,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6326,"src":"979:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6323,"name":"address","nodeType":"ElementaryTypeName","src":"979:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"978:9:25"},"scope":6519,"src":"932:56:25","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"60961528","id":6331,"implemented":false,"kind":"function","modifiers":[],"name":"marketOracle","nameLocation":"1003:12:25","nodeType":"FunctionDefinition","parameters":{"id":6327,"nodeType":"ParameterList","parameters":[],"src":"1015:2:25"},"returnParameters":{"id":6330,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6329,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6331,"src":"1041:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6328,"name":"address","nodeType":"ElementaryTypeName","src":"1041:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1040:9:25"},"scope":6519,"src":"994:56:25","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"01d22ccd","id":6336,"implemented":false,"kind":"function","modifiers":[],"name":"rebalancer","nameLocation":"1065:10:25","nodeType":"FunctionDefinition","parameters":{"id":6332,"nodeType":"ParameterList","parameters":[],"src":"1075:2:25"},"returnParameters":{"id":6335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6334,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6336,"src":"1101:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6333,"name":"address","nodeType":"ElementaryTypeName","src":"1101:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1100:9:25"},"scope":6519,"src":"1056:54:25","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"61d027b3","id":6341,"implemented":false,"kind":"function","modifiers":[],"name":"treasury","nameLocation":"1125:8:25","nodeType":"FunctionDefinition","parameters":{"id":6337,"nodeType":"ParameterList","parameters":[],"src":"1133:2:25"},"returnParameters":{"id":6340,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6339,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6341,"src":"1159:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6338,"name":"address","nodeType":"ElementaryTypeName","src":"1159:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1158:9:25"},"scope":6519,"src":"1116:52:25","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"cc2a9a5b","id":6356,"implemented":false,"kind":"function","modifiers":[],"name":"initialize","nameLocation":"1199:10:25","nodeType":"FunctionDefinition","parameters":{"id":6354,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6343,"mutability":"mutable","name":"_usdc","nameLocation":"1224:5:25","nodeType":"VariableDeclaration","scope":6356,"src":"1216:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6342,"name":"address","nodeType":"ElementaryTypeName","src":"1216:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6345,"mutability":"mutable","name":"_wnative","nameLocation":"1244:8:25","nodeType":"VariableDeclaration","scope":6356,"src":"1236:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6344,"name":"address","nodeType":"ElementaryTypeName","src":"1236:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6347,"mutability":"mutable","name":"_1inchSpotAgg","nameLocation":"1267:13:25","nodeType":"VariableDeclaration","scope":6356,"src":"1259:21:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6346,"name":"address","nodeType":"ElementaryTypeName","src":"1259:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6349,"mutability":"mutable","name":"_uniRouter","nameLocation":"1295:10:25","nodeType":"VariableDeclaration","scope":6356,"src":"1287:18:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6348,"name":"address","nodeType":"ElementaryTypeName","src":"1287:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6351,"mutability":"mutable","name":"_uniFactory","nameLocation":"1320:11:25","nodeType":"VariableDeclaration","scope":6356,"src":"1312:19:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6350,"name":"address","nodeType":"ElementaryTypeName","src":"1312:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6353,"mutability":"mutable","name":"_rebalancer","nameLocation":"1346:11:25","nodeType":"VariableDeclaration","scope":6356,"src":"1338:19:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6352,"name":"address","nodeType":"ElementaryTypeName","src":"1338:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1209:153:25"},"returnParameters":{"id":6355,"nodeType":"ParameterList","parameters":[],"src":"1371:0:25"},"scope":6519,"src":"1190:182:25","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"b0d60ba0","id":6373,"implemented":false,"kind":"function","modifiers":[],"name":"reinitialize","nameLocation":"1387:12:25","nodeType":"FunctionDefinition","parameters":{"id":6371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6358,"mutability":"mutable","name":"_usdc","nameLocation":"1414:5:25","nodeType":"VariableDeclaration","scope":6373,"src":"1406:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6357,"name":"address","nodeType":"ElementaryTypeName","src":"1406:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6360,"mutability":"mutable","name":"_wnative","nameLocation":"1434:8:25","nodeType":"VariableDeclaration","scope":6373,"src":"1426:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6359,"name":"address","nodeType":"ElementaryTypeName","src":"1426:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6362,"mutability":"mutable","name":"_1inchSpotAgg","nameLocation":"1457:13:25","nodeType":"VariableDeclaration","scope":6373,"src":"1449:21:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6361,"name":"address","nodeType":"ElementaryTypeName","src":"1449:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6364,"mutability":"mutable","name":"_uniRouter","nameLocation":"1485:10:25","nodeType":"VariableDeclaration","scope":6373,"src":"1477:18:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6363,"name":"address","nodeType":"ElementaryTypeName","src":"1477:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6366,"mutability":"mutable","name":"_uniFactory","nameLocation":"1510:11:25","nodeType":"VariableDeclaration","scope":6373,"src":"1502:19:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6365,"name":"address","nodeType":"ElementaryTypeName","src":"1502:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6368,"mutability":"mutable","name":"_rebalancer","nameLocation":"1536:11:25","nodeType":"VariableDeclaration","scope":6373,"src":"1528:19:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6367,"name":"address","nodeType":"ElementaryTypeName","src":"1528:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6370,"mutability":"mutable","name":"version","nameLocation":"1561:7:25","nodeType":"VariableDeclaration","scope":6373,"src":"1554:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":6369,"name":"uint64","nodeType":"ElementaryTypeName","src":"1554:6:25","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"1399:174:25"},"returnParameters":{"id":6372,"nodeType":"ParameterList","parameters":[],"src":"1582:0:25"},"scope":6519,"src":"1378:205:25","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"980d24f9","id":6378,"implemented":false,"kind":"function","modifiers":[],"name":"initializeMarketOracle","nameLocation":"1598:22:25","nodeType":"FunctionDefinition","parameters":{"id":6376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6375,"mutability":"mutable","name":"_marketOracle","nameLocation":"1629:13:25","nodeType":"VariableDeclaration","scope":6378,"src":"1621:21:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6374,"name":"address","nodeType":"ElementaryTypeName","src":"1621:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1620:23:25"},"returnParameters":{"id":6377,"nodeType":"ParameterList","parameters":[],"src":"1652:0:25"},"scope":6519,"src":"1589:64:25","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"35aa0efa","id":6383,"implemented":false,"kind":"function","modifiers":[],"name":"changeMarketOracle","nameLocation":"1668:18:25","nodeType":"FunctionDefinition","parameters":{"id":6381,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6380,"mutability":"mutable","name":"_marketOracle","nameLocation":"1695:13:25","nodeType":"VariableDeclaration","scope":6383,"src":"1687:21:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6379,"name":"address","nodeType":"ElementaryTypeName","src":"1687:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1686:23:25"},"returnParameters":{"id":6382,"nodeType":"ParameterList","parameters":[],"src":"1718:0:25"},"scope":6519,"src":"1659:60:25","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"06497cb9","id":6388,"implemented":false,"kind":"function","modifiers":[],"name":"changeBpsFee","nameLocation":"1734:12:25","nodeType":"FunctionDefinition","parameters":{"id":6386,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6385,"mutability":"mutable","name":"_newFee","nameLocation":"1755:7:25","nodeType":"VariableDeclaration","scope":6388,"src":"1747:15:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6384,"name":"uint256","nodeType":"ElementaryTypeName","src":"1747:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1746:17:25"},"returnParameters":{"id":6387,"nodeType":"ParameterList","parameters":[],"src":"1772:0:25"},"scope":6519,"src":"1725:48:25","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"b14f2a39","id":6393,"implemented":false,"kind":"function","modifiers":[],"name":"changeTreasury","nameLocation":"1788:14:25","nodeType":"FunctionDefinition","parameters":{"id":6391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6390,"mutability":"mutable","name":"_newTreasury","nameLocation":"1811:12:25","nodeType":"VariableDeclaration","scope":6393,"src":"1803:20:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6389,"name":"address","nodeType":"ElementaryTypeName","src":"1803:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1802:22:25"},"returnParameters":{"id":6392,"nodeType":"ParameterList","parameters":[],"src":"1833:0:25"},"scope":6519,"src":"1779:55:25","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"0918281b","id":6398,"implemented":false,"kind":"function","modifiers":[],"name":"changeRebalancer","nameLocation":"1849:16:25","nodeType":"FunctionDefinition","parameters":{"id":6396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6395,"mutability":"mutable","name":"_newRebalancer","nameLocation":"1874:14:25","nodeType":"VariableDeclaration","scope":6398,"src":"1866:22:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6394,"name":"address","nodeType":"ElementaryTypeName","src":"1866:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1865:24:25"},"returnParameters":{"id":6397,"nodeType":"ParameterList","parameters":[],"src":"1898:0:25"},"scope":6519,"src":"1840:59:25","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"0a38abab","id":6403,"implemented":false,"kind":"function","modifiers":[],"name":"changeAgentFactory","nameLocation":"1914:18:25","nodeType":"FunctionDefinition","parameters":{"id":6401,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6400,"mutability":"mutable","name":"_agentFactory","nameLocation":"1941:13:25","nodeType":"VariableDeclaration","scope":6403,"src":"1933:21:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6399,"name":"address","nodeType":"ElementaryTypeName","src":"1933:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1932:23:25"},"returnParameters":{"id":6402,"nodeType":"ParameterList","parameters":[],"src":"1964:0:25"},"scope":6519,"src":"1905:60:25","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"eedc3c50","id":6413,"implemented":false,"kind":"function","modifiers":[],"name":"execute","nameLocation":"1980:7:25","nodeType":"FunctionDefinition","parameters":{"id":6411,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6407,"mutability":"mutable","name":"calls","nameLocation":"2017:5:25","nodeType":"VariableDeclaration","scope":6413,"src":"1988:34:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Call_$6109_memory_ptr_$dyn_memory_ptr","typeString":"struct IBaluniV1Agent.Call[]"},"typeName":{"baseType":{"id":6405,"nodeType":"UserDefinedTypeName","pathNode":{"id":6404,"name":"IBaluniV1Agent.Call","nameLocations":["1988:14:25","2003:4:25"],"nodeType":"IdentifierPath","referencedDeclaration":6109,"src":"1988:19:25"},"referencedDeclaration":6109,"src":"1988:19:25","typeDescriptions":{"typeIdentifier":"t_struct$_Call_$6109_storage_ptr","typeString":"struct IBaluniV1Agent.Call"}},"id":6406,"nodeType":"ArrayTypeName","src":"1988:21:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Call_$6109_storage_$dyn_storage_ptr","typeString":"struct IBaluniV1Agent.Call[]"}},"visibility":"internal"},{"constant":false,"id":6410,"mutability":"mutable","name":"tokensReturn","nameLocation":"2041:12:25","nodeType":"VariableDeclaration","scope":6413,"src":"2024:29:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":6408,"name":"address","nodeType":"ElementaryTypeName","src":"2024:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6409,"nodeType":"ArrayTypeName","src":"2024:9:25","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"1987:67:25"},"returnParameters":{"id":6412,"nodeType":"ParameterList","parameters":[],"src":"2063:0:25"},"scope":6519,"src":"1971:93:25","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"2f865568","id":6418,"implemented":false,"kind":"function","modifiers":[],"name":"liquidate","nameLocation":"2079:9:25","nodeType":"FunctionDefinition","parameters":{"id":6416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6415,"mutability":"mutable","name":"token","nameLocation":"2097:5:25","nodeType":"VariableDeclaration","scope":6418,"src":"2089:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6414,"name":"address","nodeType":"ElementaryTypeName","src":"2089:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2088:15:25"},"returnParameters":{"id":6417,"nodeType":"ParameterList","parameters":[],"src":"2112:0:25"},"scope":6519,"src":"2070:43:25","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"3c2066a9","id":6421,"implemented":false,"kind":"function","modifiers":[],"name":"liquidateAll","nameLocation":"2128:12:25","nodeType":"FunctionDefinition","parameters":{"id":6419,"nodeType":"ParameterList","parameters":[],"src":"2140:2:25"},"returnParameters":{"id":6420,"nodeType":"ParameterList","parameters":[],"src":"2151:0:25"},"scope":6519,"src":"2119:33:25","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"1a168da2","id":6426,"implemented":false,"kind":"function","modifiers":[],"name":"burnERC20","nameLocation":"2167:9:25","nodeType":"FunctionDefinition","parameters":{"id":6424,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6423,"mutability":"mutable","name":"burnAmount","nameLocation":"2185:10:25","nodeType":"VariableDeclaration","scope":6426,"src":"2177:18:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6422,"name":"uint256","nodeType":"ElementaryTypeName","src":"2177:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2176:20:25"},"returnParameters":{"id":6425,"nodeType":"ParameterList","parameters":[],"src":"2205:0:25"},"scope":6519,"src":"2158:48:25","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"fe0a4dd1","id":6431,"implemented":false,"kind":"function","modifiers":[],"name":"burnUSDC","nameLocation":"2221:8:25","nodeType":"FunctionDefinition","parameters":{"id":6429,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6428,"mutability":"mutable","name":"burnAmount","nameLocation":"2238:10:25","nodeType":"VariableDeclaration","scope":6431,"src":"2230:18:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6427,"name":"uint256","nodeType":"ElementaryTypeName","src":"2230:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2229:20:25"},"returnParameters":{"id":6430,"nodeType":"ParameterList","parameters":[],"src":"2258:0:25"},"scope":6519,"src":"2212:47:25","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"27d54a92","id":6438,"implemented":false,"kind":"function","modifiers":[],"name":"getAgentAddress","nameLocation":"2274:15:25","nodeType":"FunctionDefinition","parameters":{"id":6434,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6433,"mutability":"mutable","name":"_user","nameLocation":"2298:5:25","nodeType":"VariableDeclaration","scope":6438,"src":"2290:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6432,"name":"address","nodeType":"ElementaryTypeName","src":"2290:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2289:15:25"},"returnParameters":{"id":6437,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6436,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6438,"src":"2328:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6435,"name":"address","nodeType":"ElementaryTypeName","src":"2328:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2327:9:25"},"scope":6519,"src":"2265:72:25","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"0cfc7386","id":6443,"implemented":false,"kind":"function","modifiers":[],"name":"mintWithUSDC","nameLocation":"2352:12:25","nodeType":"FunctionDefinition","parameters":{"id":6441,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6440,"mutability":"mutable","name":"balAmountToMint","nameLocation":"2373:15:25","nodeType":"VariableDeclaration","scope":6443,"src":"2365:23:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6439,"name":"uint256","nodeType":"ElementaryTypeName","src":"2365:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2364:25:25"},"returnParameters":{"id":6442,"nodeType":"ParameterList","parameters":[],"src":"2398:0:25"},"scope":6519,"src":"2343:56:25","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"599f69f7","id":6460,"implemented":false,"kind":"function","modifiers":[],"name":"callRebalance","nameLocation":"2414:13:25","nodeType":"FunctionDefinition","parameters":{"id":6458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6446,"mutability":"mutable","name":"assets","nameLocation":"2453:6:25","nodeType":"VariableDeclaration","scope":6460,"src":"2434:25:25","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":6444,"name":"address","nodeType":"ElementaryTypeName","src":"2434:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6445,"nodeType":"ArrayTypeName","src":"2434:9:25","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":6449,"mutability":"mutable","name":"weights","nameLocation":"2485:7:25","nodeType":"VariableDeclaration","scope":6460,"src":"2466:26:25","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":6447,"name":"uint256","nodeType":"ElementaryTypeName","src":"2466:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6448,"nodeType":"ArrayTypeName","src":"2466:9:25","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":6451,"mutability":"mutable","name":"sender","nameLocation":"2507:6:25","nodeType":"VariableDeclaration","scope":6460,"src":"2499:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6450,"name":"address","nodeType":"ElementaryTypeName","src":"2499:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6453,"mutability":"mutable","name":"receiver","nameLocation":"2528:8:25","nodeType":"VariableDeclaration","scope":6460,"src":"2520:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6452,"name":"address","nodeType":"ElementaryTypeName","src":"2520:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6455,"mutability":"mutable","name":"limit","nameLocation":"2551:5:25","nodeType":"VariableDeclaration","scope":6460,"src":"2543:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6454,"name":"uint256","nodeType":"ElementaryTypeName","src":"2543:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6457,"mutability":"mutable","name":"baseAsset","nameLocation":"2571:9:25","nodeType":"VariableDeclaration","scope":6460,"src":"2563:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6456,"name":"address","nodeType":"ElementaryTypeName","src":"2563:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2427:158:25"},"returnParameters":{"id":6459,"nodeType":"ParameterList","parameters":[],"src":"2594:0:25"},"scope":6519,"src":"2405:190:25","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"aa95d893","id":6467,"implemented":false,"kind":"function","modifiers":[],"name":"requiredUSDCtoMint","nameLocation":"2610:18:25","nodeType":"FunctionDefinition","parameters":{"id":6463,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6462,"mutability":"mutable","name":"balAmountToMint","nameLocation":"2637:15:25","nodeType":"VariableDeclaration","scope":6467,"src":"2629:23:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6461,"name":"uint256","nodeType":"ElementaryTypeName","src":"2629:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2628:25:25"},"returnParameters":{"id":6466,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6465,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6467,"src":"2677:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6464,"name":"uint256","nodeType":"ElementaryTypeName","src":"2677:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2676:9:25"},"scope":6519,"src":"2601:85:25","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"fe330a51","id":6480,"implemented":false,"kind":"function","modifiers":[],"name":"calculateTokenShare","nameLocation":"2701:19:25","nodeType":"FunctionDefinition","parameters":{"id":6476,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6469,"mutability":"mutable","name":"totalBaluni","nameLocation":"2735:11:25","nodeType":"VariableDeclaration","scope":6480,"src":"2727:19:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6468,"name":"uint256","nodeType":"ElementaryTypeName","src":"2727:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6471,"mutability":"mutable","name":"totalERC20Balance","nameLocation":"2761:17:25","nodeType":"VariableDeclaration","scope":6480,"src":"2753:25:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6470,"name":"uint256","nodeType":"ElementaryTypeName","src":"2753:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6473,"mutability":"mutable","name":"baluniAmount","nameLocation":"2793:12:25","nodeType":"VariableDeclaration","scope":6480,"src":"2785:20:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6472,"name":"uint256","nodeType":"ElementaryTypeName","src":"2785:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6475,"mutability":"mutable","name":"tokenDecimals","nameLocation":"2820:13:25","nodeType":"VariableDeclaration","scope":6480,"src":"2812:21:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6474,"name":"uint256","nodeType":"ElementaryTypeName","src":"2812:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2720:118:25"},"returnParameters":{"id":6479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6478,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6480,"src":"2862:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6477,"name":"uint256","nodeType":"ElementaryTypeName","src":"2862:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2861:9:25"},"scope":6519,"src":"2692:179:25","stateMutability":"pure","virtual":false,"visibility":"external"},{"functionSelector":"2bdd955a","id":6489,"implemented":false,"kind":"function","modifiers":[],"name":"tokenValuation","nameLocation":"2886:14:25","nodeType":"FunctionDefinition","parameters":{"id":6485,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6482,"mutability":"mutable","name":"amount","nameLocation":"2909:6:25","nodeType":"VariableDeclaration","scope":6489,"src":"2901:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6481,"name":"uint256","nodeType":"ElementaryTypeName","src":"2901:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6484,"mutability":"mutable","name":"token","nameLocation":"2925:5:25","nodeType":"VariableDeclaration","scope":6489,"src":"2917:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6483,"name":"address","nodeType":"ElementaryTypeName","src":"2917:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2900:31:25"},"returnParameters":{"id":6488,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6487,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6489,"src":"2955:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6486,"name":"uint256","nodeType":"ElementaryTypeName","src":"2955:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2954:9:25"},"scope":6519,"src":"2877:87:25","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"295b9300","id":6494,"implemented":false,"kind":"function","modifiers":[],"name":"totalValuation","nameLocation":"2979:14:25","nodeType":"FunctionDefinition","parameters":{"id":6490,"nodeType":"ParameterList","parameters":[],"src":"2993:2:25"},"returnParameters":{"id":6493,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6492,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6494,"src":"3019:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6491,"name":"uint256","nodeType":"ElementaryTypeName","src":"3019:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3018:9:25"},"scope":6519,"src":"2970:58:25","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"71ddcfb8","id":6501,"implemented":false,"kind":"function","modifiers":[],"name":"getUSDCShareValue","nameLocation":"3043:17:25","nodeType":"FunctionDefinition","parameters":{"id":6497,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6496,"mutability":"mutable","name":"amount","nameLocation":"3069:6:25","nodeType":"VariableDeclaration","scope":6501,"src":"3061:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6495,"name":"uint256","nodeType":"ElementaryTypeName","src":"3061:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3060:16:25"},"returnParameters":{"id":6500,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6499,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6501,"src":"3100:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6498,"name":"uint256","nodeType":"ElementaryTypeName","src":"3100:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3099:9:25"},"scope":6519,"src":"3034:75:25","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"8d483df1","id":6508,"implemented":false,"kind":"function","modifiers":[],"name":"fetchMarketPrices","nameLocation":"3124:17:25","nodeType":"FunctionDefinition","parameters":{"id":6502,"nodeType":"ParameterList","parameters":[],"src":"3141:2:25"},"returnParameters":{"id":6507,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6504,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6508,"src":"3167:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6503,"name":"uint256","nodeType":"ElementaryTypeName","src":"3167:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6506,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6508,"src":"3176:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6505,"name":"uint256","nodeType":"ElementaryTypeName","src":"3176:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3166:18:25"},"scope":6519,"src":"3115:70:25","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"0d8e6e2c","id":6513,"implemented":false,"kind":"function","modifiers":[],"name":"getVersion","nameLocation":"3200:10:25","nodeType":"FunctionDefinition","parameters":{"id":6509,"nodeType":"ParameterList","parameters":[],"src":"3210:2:25"},"returnParameters":{"id":6512,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6511,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6513,"src":"3236:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":6510,"name":"uint64","nodeType":"ElementaryTypeName","src":"3236:6:25","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"3235:8:25"},"scope":6519,"src":"3191:53:25","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"e73faa2d","id":6518,"implemented":false,"kind":"function","modifiers":[],"name":"unitPrice","nameLocation":"3259:9:25","nodeType":"FunctionDefinition","parameters":{"id":6514,"nodeType":"ParameterList","parameters":[],"src":"3268:2:25"},"returnParameters":{"id":6517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6516,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6518,"src":"3294:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6515,"name":"uint256","nodeType":"ElementaryTypeName","src":"3294:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3293:9:25"},"scope":6519,"src":"3250:53:25","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":6520,"src":"267:3043:25","usedErrors":[],"usedEvents":[]}],"src":"40:3272:25"},"id":25}},"contracts":{"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"OwnableUpgradeable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.","errors":{"InvalidInitialization()":[{"details":"The contract is already initialized."}],"NotInitializing()":[{"details":"The contract is not initializing."}],"OwnableInvalidOwner(address)":[{"details":"The owner is not a valid owner account. (eg. `address(0)`)"}],"OwnableUnauthorizedAccount(address)":[{"details":"The caller account is not authorized to perform an operation."}]},"events":{"Initialized(uint64)":{"details":"Triggered when the contract has been initialized or reinitialized."}},"kind":"dev","methods":{"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":\"OwnableUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {ContextUpgradeable} from \\\"../utils/ContextUpgradeable.sol\\\";\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\\n    /// @custom:storage-location erc7201:openzeppelin.storage.Ownable\\n    struct OwnableStorage {\\n        address _owner;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.Ownable\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant OwnableStorageLocation = 0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300;\\n\\n    function _getOwnableStorage() private pure returns (OwnableStorage storage $) {\\n        assembly {\\n            $.slot := OwnableStorageLocation\\n        }\\n    }\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    function __Ownable_init(address initialOwner) internal onlyInitializing {\\n        __Ownable_init_unchained(initialOwner);\\n    }\\n\\n    function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        OwnableStorage storage $ = _getOwnableStorage();\\n        return $._owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        OwnableStorage storage $ = _getOwnableStorage();\\n        address oldOwner = $._owner;\\n        $._owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Storage of the initializable contract.\\n     *\\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\\n     * when using with upgradeable contracts.\\n     *\\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\\n     */\\n    struct InitializableStorage {\\n        /**\\n         * @dev Indicates that the contract has been initialized.\\n         */\\n        uint64 _initialized;\\n        /**\\n         * @dev Indicates that the contract is in the process of being initialized.\\n         */\\n        bool _initializing;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.Initializable\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\\n\\n    /**\\n     * @dev The contract is already initialized.\\n     */\\n    error InvalidInitialization();\\n\\n    /**\\n     * @dev The contract is not initializing.\\n     */\\n    error NotInitializing();\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint64 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\\n     * production.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        // Cache values to avoid duplicated sloads\\n        bool isTopLevelCall = !$._initializing;\\n        uint64 initialized = $._initialized;\\n\\n        // Allowed calls:\\n        // - initialSetup: the contract is not in the initializing state and no previous version was\\n        //                 initialized\\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\\n        //                 current contract is just being deployed\\n        bool initialSetup = initialized == 0 && isTopLevelCall;\\n        bool construction = initialized == 1 && address(this).code.length == 0;\\n\\n        if (!initialSetup && !construction) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = 1;\\n        if (isTopLevelCall) {\\n            $._initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            $._initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint64 version) {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing || $._initialized >= version) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = version;\\n        $._initializing = true;\\n        _;\\n        $._initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        _checkInitializing();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\\n     */\\n    function _checkInitializing() internal view virtual {\\n        if (!_isInitializing()) {\\n            revert NotInitializing();\\n        }\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing) {\\n            revert InvalidInitialization();\\n        }\\n        if ($._initialized != type(uint64).max) {\\n            $._initialized = type(uint64).max;\\n            emit Initialized(type(uint64).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint64) {\\n        return _getInitializableStorage()._initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _getInitializableStorage()._initializing;\\n    }\\n\\n    /**\\n     * @dev Returns a pointer to the storage namespace.\\n     */\\n    // solhint-disable-next-line var-name-mixedcase\\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\\n        assembly {\\n            $.slot := INITIALIZABLE_STORAGE\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"Initializable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"}],"devdoc":{"custom:oz-upgrades-unsafe-allow":"constructor constructor() {     _disableInitializers(); } ``` ====","details":"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```","errors":{"InvalidInitialization()":[{"details":"The contract is already initialized."}],"NotInitializing()":[{"details":"The contract is not initializing."}]},"events":{"Initialized(uint64)":{"details":"Triggered when the contract has been initialized or reinitialized."}},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Storage of the initializable contract.\\n     *\\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\\n     * when using with upgradeable contracts.\\n     *\\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\\n     */\\n    struct InitializableStorage {\\n        /**\\n         * @dev Indicates that the contract has been initialized.\\n         */\\n        uint64 _initialized;\\n        /**\\n         * @dev Indicates that the contract is in the process of being initialized.\\n         */\\n        bool _initializing;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.Initializable\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\\n\\n    /**\\n     * @dev The contract is already initialized.\\n     */\\n    error InvalidInitialization();\\n\\n    /**\\n     * @dev The contract is not initializing.\\n     */\\n    error NotInitializing();\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint64 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\\n     * production.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        // Cache values to avoid duplicated sloads\\n        bool isTopLevelCall = !$._initializing;\\n        uint64 initialized = $._initialized;\\n\\n        // Allowed calls:\\n        // - initialSetup: the contract is not in the initializing state and no previous version was\\n        //                 initialized\\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\\n        //                 current contract is just being deployed\\n        bool initialSetup = initialized == 0 && isTopLevelCall;\\n        bool construction = initialized == 1 && address(this).code.length == 0;\\n\\n        if (!initialSetup && !construction) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = 1;\\n        if (isTopLevelCall) {\\n            $._initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            $._initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint64 version) {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing || $._initialized >= version) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = version;\\n        $._initializing = true;\\n        _;\\n        $._initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        _checkInitializing();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\\n     */\\n    function _checkInitializing() internal view virtual {\\n        if (!_isInitializing()) {\\n            revert NotInitializing();\\n        }\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing) {\\n            revert InvalidInitialization();\\n        }\\n        if ($._initialized != type(uint64).max) {\\n            $._initialized = type(uint64).max;\\n            emit Initialized(type(uint64).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint64) {\\n        return _getInitializableStorage()._initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _getInitializableStorage()._initializing;\\n    }\\n\\n    /**\\n     * @dev Returns a pointer to the storage namespace.\\n     */\\n    // solhint-disable-next-line var-name-mixedcase\\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\\n        assembly {\\n            $.slot := INITIALIZABLE_STORAGE\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol":{"UUPSUpgradeable":{"abi":[{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"},{"inputs":[{"internalType":"address","name":"implementation","type":"address"}],"name":"ERC1967InvalidImplementation","type":"error"},{"inputs":[],"name":"ERC1967NonPayable","type":"error"},{"inputs":[],"name":"FailedInnerCall","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"inputs":[],"name":"UUPSUnauthorizedCallContext","type":"error"},{"inputs":[{"internalType":"bytes32","name":"slot","type":"bytes32"}],"name":"UUPSUnsupportedProxiableUUID","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"inputs":[],"name":"UPGRADE_INTERFACE_VERSION","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"upgradeToAndCall","outputs":[],"stateMutability":"payable","type":"function"}],"devdoc":{"details":"An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.","errors":{"AddressEmptyCode(address)":[{"details":"There's no code at `target` (it is not a contract)."}],"ERC1967InvalidImplementation(address)":[{"details":"The `implementation` of the proxy is invalid."}],"ERC1967NonPayable()":[{"details":"An upgrade function sees `msg.value > 0` that may be lost."}],"FailedInnerCall()":[{"details":"A call to an address target failed. The target may have reverted."}],"InvalidInitialization()":[{"details":"The contract is already initialized."}],"NotInitializing()":[{"details":"The contract is not initializing."}],"UUPSUnauthorizedCallContext()":[{"details":"The call is from an unauthorized context."}],"UUPSUnsupportedProxiableUUID(bytes32)":[{"details":"The storage `slot` is unsupported as a UUID."}]},"events":{"Initialized(uint64)":{"details":"Triggered when the contract has been initialized or reinitialized."},"Upgraded(address)":{"details":"Emitted when the implementation is upgraded."}},"kind":"dev","methods":{"proxiableUUID()":{"details":"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."},"upgradeToAndCall(address,bytes)":{"custom:oz-upgrades-unsafe-allow-reachable":"delegatecall","details":"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."}},"stateVariables":{"UPGRADE_INTERFACE_VERSION":{"details":"The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)` and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called, while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string. If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must be the empty byte string if no function should be called, making it impossible to invoke the `receive` function during an upgrade."},"__self":{"custom:oz-upgrades-unsafe-allow":"state-variable-immutable"}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"UPGRADE_INTERFACE_VERSION()":"ad3cb1cc","proxiableUUID()":"52d1902d","upgradeToAndCall(address,bytes)":"4f1ef286"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"stateVariables\":{\"UPGRADE_INTERFACE_VERSION\":{\"details\":\"The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)` and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called, while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string. If the getter returns `\\\"5.0.0\\\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must be the empty byte string if no function should be called, making it impossible to invoke the `receive` function during an upgrade.\"},\"__self\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":\"UUPSUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Storage of the initializable contract.\\n     *\\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\\n     * when using with upgradeable contracts.\\n     *\\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\\n     */\\n    struct InitializableStorage {\\n        /**\\n         * @dev Indicates that the contract has been initialized.\\n         */\\n        uint64 _initialized;\\n        /**\\n         * @dev Indicates that the contract is in the process of being initialized.\\n         */\\n        bool _initializing;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.Initializable\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\\n\\n    /**\\n     * @dev The contract is already initialized.\\n     */\\n    error InvalidInitialization();\\n\\n    /**\\n     * @dev The contract is not initializing.\\n     */\\n    error NotInitializing();\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint64 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\\n     * production.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        // Cache values to avoid duplicated sloads\\n        bool isTopLevelCall = !$._initializing;\\n        uint64 initialized = $._initialized;\\n\\n        // Allowed calls:\\n        // - initialSetup: the contract is not in the initializing state and no previous version was\\n        //                 initialized\\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\\n        //                 current contract is just being deployed\\n        bool initialSetup = initialized == 0 && isTopLevelCall;\\n        bool construction = initialized == 1 && address(this).code.length == 0;\\n\\n        if (!initialSetup && !construction) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = 1;\\n        if (isTopLevelCall) {\\n            $._initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            $._initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint64 version) {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing || $._initialized >= version) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = version;\\n        $._initializing = true;\\n        _;\\n        $._initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        _checkInitializing();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\\n     */\\n    function _checkInitializing() internal view virtual {\\n        if (!_isInitializing()) {\\n            revert NotInitializing();\\n        }\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing) {\\n            revert InvalidInitialization();\\n        }\\n        if ($._initialized != type(uint64).max) {\\n            $._initialized = type(uint64).max;\\n            emit Initialized(type(uint64).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint64) {\\n        return _getInitializableStorage()._initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _getInitializableStorage()._initializing;\\n    }\\n\\n    /**\\n     * @dev Returns a pointer to the storage namespace.\\n     */\\n    // solhint-disable-next-line var-name-mixedcase\\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\\n        assembly {\\n            $.slot := INITIALIZABLE_STORAGE\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/UUPSUpgradeable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC1822Proxiable} from \\\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\\\";\\nimport {ERC1967Utils} from \\\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\\\";\\nimport {Initializable} from \\\"./Initializable.sol\\\";\\n\\n/**\\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\\n *\\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\\n * `UUPSUpgradeable` with a custom implementation of upgrades.\\n *\\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\\n */\\nabstract contract UUPSUpgradeable is Initializable, IERC1822Proxiable {\\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable\\n    address private immutable __self = address(this);\\n\\n    /**\\n     * @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\\n     * and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\\n     * while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\\n     * If the getter returns `\\\"5.0.0\\\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\\n     * be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\\n     * during an upgrade.\\n     */\\n    string public constant UPGRADE_INTERFACE_VERSION = \\\"5.0.0\\\";\\n\\n    /**\\n     * @dev The call is from an unauthorized context.\\n     */\\n    error UUPSUnauthorizedCallContext();\\n\\n    /**\\n     * @dev The storage `slot` is unsupported as a UUID.\\n     */\\n    error UUPSUnsupportedProxiableUUID(bytes32 slot);\\n\\n    /**\\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\\n     * a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\\n     * function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\\n     * fail.\\n     */\\n    modifier onlyProxy() {\\n        _checkProxy();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\\n     * callable on the implementing contract but not through proxies.\\n     */\\n    modifier notDelegated() {\\n        _checkNotDelegated();\\n        _;\\n    }\\n\\n    function __UUPSUpgradeable_init() internal onlyInitializing {\\n    }\\n\\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\\n    }\\n    /**\\n     * @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\\n     */\\n    function proxiableUUID() external view virtual notDelegated returns (bytes32) {\\n        return ERC1967Utils.IMPLEMENTATION_SLOT;\\n    }\\n\\n    /**\\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\\n     * encoded in `data`.\\n     *\\n     * Calls {_authorizeUpgrade}.\\n     *\\n     * Emits an {Upgraded} event.\\n     *\\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\\n     */\\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {\\n        _authorizeUpgrade(newImplementation);\\n        _upgradeToAndCallUUPS(newImplementation, data);\\n    }\\n\\n    /**\\n     * @dev Reverts if the execution is not performed via delegatecall or the execution\\n     * context is not of a proxy with an ERC1967-compliant implementation pointing to self.\\n     * See {_onlyProxy}.\\n     */\\n    function _checkProxy() internal view virtual {\\n        if (\\n            address(this) == __self || // Must be called through delegatecall\\n            ERC1967Utils.getImplementation() != __self // Must be called through an active proxy\\n        ) {\\n            revert UUPSUnauthorizedCallContext();\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts if the execution is performed via delegatecall.\\n     * See {notDelegated}.\\n     */\\n    function _checkNotDelegated() internal view virtual {\\n        if (address(this) != __self) {\\n            // Must not be called through delegatecall\\n            revert UUPSUnauthorizedCallContext();\\n        }\\n    }\\n\\n    /**\\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\\n     * {upgradeToAndCall}.\\n     *\\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\\n     *\\n     * ```solidity\\n     * function _authorizeUpgrade(address) internal onlyOwner {}\\n     * ```\\n     */\\n    function _authorizeUpgrade(address newImplementation) internal virtual;\\n\\n    /**\\n     * @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\\n     *\\n     * As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\\n     * is expected to be the implementation slot in ERC1967.\\n     *\\n     * Emits an {IERC1967-Upgraded} event.\\n     */\\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {\\n        try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\\n            if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {\\n                revert UUPSUnsupportedProxiableUUID(slot);\\n            }\\n            ERC1967Utils.upgradeToAndCall(newImplementation, data);\\n        } catch {\\n            // The implementation is not UUPS\\n            revert ERC1967Utils.ERC1967InvalidImplementation(newImplementation);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x3f13b947637c4969c0644cab4ef399cdc4b67f101463b8775c5a43b118558e53\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC1822.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\\n * proxy whose upgrades are fully controlled by the current implementation.\\n */\\ninterface IERC1822Proxiable {\\n    /**\\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\\n     * address.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy.\\n     */\\n    function proxiableUUID() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/ERC1967/ERC1967Utils.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IBeacon} from \\\"../beacon/IBeacon.sol\\\";\\nimport {Address} from \\\"../../utils/Address.sol\\\";\\nimport {StorageSlot} from \\\"../../utils/StorageSlot.sol\\\";\\n\\n/**\\n * @dev This abstract contract provides getters and event emitting update functions for\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\\n */\\nlibrary ERC1967Utils {\\n    // We re-declare ERC-1967 events here because they can't be used directly from IERC1967.\\n    // This will be fixed in Solidity 0.8.21. At that point we should remove these events.\\n    /**\\n     * @dev Emitted when the implementation is upgraded.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Emitted when the admin account has changed.\\n     */\\n    event AdminChanged(address previousAdmin, address newAdmin);\\n\\n    /**\\n     * @dev Emitted when the beacon is changed.\\n     */\\n    event BeaconUpgraded(address indexed beacon);\\n\\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /**\\n     * @dev The `implementation` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidImplementation(address implementation);\\n\\n    /**\\n     * @dev The `admin` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidAdmin(address admin);\\n\\n    /**\\n     * @dev The `beacon` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidBeacon(address beacon);\\n\\n    /**\\n     * @dev An upgrade function sees `msg.value > 0` that may be lost.\\n     */\\n    error ERC1967NonPayable();\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function getImplementation() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 implementation slot.\\n     */\\n    function _setImplementation(address newImplementation) private {\\n        if (newImplementation.code.length == 0) {\\n            revert ERC1967InvalidImplementation(newImplementation);\\n        }\\n        StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation;\\n    }\\n\\n    /**\\n     * @dev Performs implementation upgrade with additional setup call if data is nonempty.\\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\\n     * to avoid stuck value in the contract.\\n     *\\n     * Emits an {IERC1967-Upgraded} event.\\n     */\\n    function upgradeToAndCall(address newImplementation, bytes memory data) internal {\\n        _setImplementation(newImplementation);\\n        emit Upgraded(newImplementation);\\n\\n        if (data.length > 0) {\\n            Address.functionDelegateCall(newImplementation, data);\\n        } else {\\n            _checkNonPayable();\\n        }\\n    }\\n\\n    /**\\n     * @dev Storage slot with the admin of the contract.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n\\n    /**\\n     * @dev Returns the current admin.\\n     *\\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using\\n     * the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\\n     */\\n    function getAdmin() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(ADMIN_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 admin slot.\\n     */\\n    function _setAdmin(address newAdmin) private {\\n        if (newAdmin == address(0)) {\\n            revert ERC1967InvalidAdmin(address(0));\\n        }\\n        StorageSlot.getAddressSlot(ADMIN_SLOT).value = newAdmin;\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {IERC1967-AdminChanged} event.\\n     */\\n    function changeAdmin(address newAdmin) internal {\\n        emit AdminChanged(getAdmin(), newAdmin);\\n        _setAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.beacon\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\\n\\n    /**\\n     * @dev Returns the current beacon.\\n     */\\n    function getBeacon() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(BEACON_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\\n     */\\n    function _setBeacon(address newBeacon) private {\\n        if (newBeacon.code.length == 0) {\\n            revert ERC1967InvalidBeacon(newBeacon);\\n        }\\n\\n        StorageSlot.getAddressSlot(BEACON_SLOT).value = newBeacon;\\n\\n        address beaconImplementation = IBeacon(newBeacon).implementation();\\n        if (beaconImplementation.code.length == 0) {\\n            revert ERC1967InvalidImplementation(beaconImplementation);\\n        }\\n    }\\n\\n    /**\\n     * @dev Change the beacon and trigger a setup call if data is nonempty.\\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\\n     * to avoid stuck value in the contract.\\n     *\\n     * Emits an {IERC1967-BeaconUpgraded} event.\\n     *\\n     * CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\\n     * it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\\n     * efficiency.\\n     */\\n    function upgradeBeaconToAndCall(address newBeacon, bytes memory data) internal {\\n        _setBeacon(newBeacon);\\n        emit BeaconUpgraded(newBeacon);\\n\\n        if (data.length > 0) {\\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\\n        } else {\\n            _checkNonPayable();\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\\n     * if an upgrade doesn't perform an initialization call.\\n     */\\n    function _checkNonPayable() private {\\n        if (msg.value > 0) {\\n            revert ERC1967NonPayable();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeacon {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {UpgradeableBeacon} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev The ETH balance of the account is not enough to perform the operation.\\n     */\\n    error AddressInsufficientBalance(address account);\\n\\n    /**\\n     * @dev There's no code at `target` (it is not a contract).\\n     */\\n    error AddressEmptyCode(address target);\\n\\n    /**\\n     * @dev A call to an address target failed. The target may have reverted.\\n     */\\n    error FailedInnerCall();\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        if (address(this).balance < amount) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        if (!success) {\\n            revert FailedInnerCall();\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason or custom error, it is bubbled\\n     * up by this function (like regular Solidity function calls). However, if\\n     * the call reverted with no returned reason, this function reverts with a\\n     * {FailedInnerCall} error.\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        if (address(this).balance < value) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\\n     * unsuccessful call.\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata\\n    ) internal view returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            // only check if target is a contract if the call was successful and the return data is empty\\n            // otherwise we already know that it was a contract\\n            if (returndata.length == 0 && target.code.length == 0) {\\n                revert AddressEmptyCode(target);\\n            }\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\\n     * revert reason or with a default {FailedInnerCall} error.\\n     */\\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\\n     */\\n    function _revert(bytes memory returndata) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert FailedInnerCall();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```solidity\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(newImplementation.code.length > 0);\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    struct StringSlot {\\n        string value;\\n    }\\n\\n    struct BytesSlot {\\n        bytes value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\\n     */\\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\\n     */\\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\\n     */\\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\\n     */\\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ContextUpgradeable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"}],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","errors":{"InvalidInitialization()":[{"details":"The contract is already initialized."}],"NotInitializing()":[{"details":"The contract is not initializing."}]},"events":{"Initialized(uint64)":{"details":"Triggered when the contract has been initialized or reinitialized."}},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Storage of the initializable contract.\\n     *\\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\\n     * when using with upgradeable contracts.\\n     *\\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\\n     */\\n    struct InitializableStorage {\\n        /**\\n         * @dev Indicates that the contract has been initialized.\\n         */\\n        uint64 _initialized;\\n        /**\\n         * @dev Indicates that the contract is in the process of being initialized.\\n         */\\n        bool _initializing;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.Initializable\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\\n\\n    /**\\n     * @dev The contract is already initialized.\\n     */\\n    error InvalidInitialization();\\n\\n    /**\\n     * @dev The contract is not initializing.\\n     */\\n    error NotInitializing();\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint64 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\\n     * production.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        // Cache values to avoid duplicated sloads\\n        bool isTopLevelCall = !$._initializing;\\n        uint64 initialized = $._initialized;\\n\\n        // Allowed calls:\\n        // - initialSetup: the contract is not in the initializing state and no previous version was\\n        //                 initialized\\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\\n        //                 current contract is just being deployed\\n        bool initialSetup = initialized == 0 && isTopLevelCall;\\n        bool construction = initialized == 1 && address(this).code.length == 0;\\n\\n        if (!initialSetup && !construction) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = 1;\\n        if (isTopLevelCall) {\\n            $._initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            $._initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint64 version) {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing || $._initialized >= version) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = version;\\n        $._initializing = true;\\n        _;\\n        $._initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        _checkInitializing();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\\n     */\\n    function _checkInitializing() internal view virtual {\\n        if (!_isInitializing()) {\\n            revert NotInitializing();\\n        }\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing) {\\n            revert InvalidInitialization();\\n        }\\n        if ($._initialized != type(uint64).max) {\\n            $._initialized = type(uint64).max;\\n            emit Initialized(type(uint64).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint64) {\\n        return _getInitializableStorage()._initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _getInitializableStorage()._initializing;\\n    }\\n\\n    /**\\n     * @dev Returns a pointer to the storage namespace.\\n     */\\n    // solhint-disable-next-line var-name-mixedcase\\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\\n        assembly {\\n            $.slot := INITIALIZABLE_STORAGE\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/interfaces/draft-IERC1822.sol":{"IERC1822Proxiable":{"abi":[{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.","kind":"dev","methods":{"proxiableUUID()":{"details":"Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"proxiableUUID()":"52d1902d"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.\",\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":\"IERC1822Proxiable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC1822.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\\n * proxy whose upgrades are fully controlled by the current implementation.\\n */\\ninterface IERC1822Proxiable {\\n    /**\\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\\n     * address.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy.\\n     */\\n    function proxiableUUID() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"IERC1155Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"}],"devdoc":{"details":"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.","errors":{"ERC1155InsufficientBalance(address,uint256,uint256,uint256)":[{"details":"Indicates an error related to the current `balance` of a `sender`. Used in transfers.","params":{"balance":"Current balance for the interacting account.","needed":"Minimum amount required to perform a transfer.","sender":"Address whose tokens are being transferred.","tokenId":"Identifier number of a token."}}],"ERC1155InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC1155InvalidArrayLength(uint256,uint256)":[{"details":"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.","params":{"idsLength":"Length of the array of token identifiers","valuesLength":"Length of the array of token amounts"}}],"ERC1155InvalidOperator(address)":[{"details":"Indicates a failure with the `operator` to be approved. Used in approvals.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC1155InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC1155InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC1155MissingApprovalForAll(address,address)":[{"details":"Indicates a failure with the `operator`’s approval. Used in transfers.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner.","owner":"Address of the current owner of a token."}}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}},"IERC20Errors":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"}],"devdoc":{"details":"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.","errors":{"ERC20InsufficientAllowance(address,uint256,uint256)":[{"details":"Indicates a failure with the `spender`’s `allowance`. Used in transfers.","params":{"allowance":"Amount of tokens a `spender` is allowed to operate with.","needed":"Minimum amount required to perform a transfer.","spender":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC20InsufficientBalance(address,uint256,uint256)":[{"details":"Indicates an error related to the current `balance` of a `sender`. Used in transfers.","params":{"balance":"Current balance for the interacting account.","needed":"Minimum amount required to perform a transfer.","sender":"Address whose tokens are being transferred."}}],"ERC20InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC20InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC20InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC20InvalidSpender(address)":[{"details":"Indicates a failure with the `spender` to be approved. Used in approvals.","params":{"spender":"Address that may be allowed to operate on tokens without being their owner."}}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}},"IERC721Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"}],"devdoc":{"details":"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.","errors":{"ERC721IncorrectOwner(address,uint256,address)":[{"details":"Indicates an error related to the ownership over a particular token. Used in transfers.","params":{"owner":"Address of the current owner of a token.","sender":"Address whose tokens are being transferred.","tokenId":"Identifier number of a token."}}],"ERC721InsufficientApproval(address,uint256)":[{"details":"Indicates a failure with the `operator`’s approval. Used in transfers.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner.","tokenId":"Identifier number of a token."}}],"ERC721InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC721InvalidOperator(address)":[{"details":"Indicates a failure with the `operator` to be approved. Used in approvals.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC721InvalidOwner(address)":[{"details":"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.","params":{"owner":"Address of the current owner of a token."}}],"ERC721InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC721InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC721NonexistentToken(uint256)":[{"details":"Indicates a `tokenId` whose `owner` is the zero address.","params":{"tokenId":"Identifier number of a token."}}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol":{"ERC1967Utils":{"abi":[{"inputs":[{"internalType":"address","name":"admin","type":"address"}],"name":"ERC1967InvalidAdmin","type":"error"},{"inputs":[{"internalType":"address","name":"beacon","type":"address"}],"name":"ERC1967InvalidBeacon","type":"error"},{"inputs":[{"internalType":"address","name":"implementation","type":"address"}],"name":"ERC1967InvalidImplementation","type":"error"},{"inputs":[],"name":"ERC1967NonPayable","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousAdmin","type":"address"},{"indexed":false,"internalType":"address","name":"newAdmin","type":"address"}],"name":"AdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"beacon","type":"address"}],"name":"BeaconUpgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"}],"devdoc":{"details":"This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.","errors":{"ERC1967InvalidAdmin(address)":[{"details":"The `admin` of the proxy is invalid."}],"ERC1967InvalidBeacon(address)":[{"details":"The `beacon` of the proxy is invalid."}],"ERC1967InvalidImplementation(address)":[{"details":"The `implementation` of the proxy is invalid."}],"ERC1967NonPayable()":[{"details":"An upgrade function sees `msg.value > 0` that may be lost."}]},"events":{"AdminChanged(address,address)":{"details":"Emitted when the admin account has changed."},"BeaconUpgraded(address)":{"details":"Emitted when the beacon is changed."},"Upgraded(address)":{"details":"Emitted when the implementation is upgraded."}},"kind":"dev","methods":{},"stateVariables":{"ADMIN_SLOT":{"details":"Storage slot with the admin of the contract. This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1."},"BEACON_SLOT":{"details":"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1."},"IMPLEMENTATION_SLOT":{"details":"Storage slot with the address of the current implementation. This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080806040523460175760399081601c823930815050f35b5f80fdfe5f80fdfea264697066735822122099005689d8ee280502f7a9ed0831b2aacdc1ae64fd05b81ebd15e0f9d60fce7f64736f6c63430008190033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x39 SWAP1 DUP2 PUSH1 0x1C DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH0 DUP1 REVERT INVALID PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP10 STOP JUMP DUP10 0xD8 0xEE 0x28 SDIV MUL 0xF7 0xA9 0xED ADDMOD BALANCE 0xB2 0xAA 0xCD 0xC1 0xAE PUSH5 0xFD05B81EBD ISZERO 0xE0 0xF9 0xD6 0xF 0xCE PUSH32 0x64736F6C63430008190033000000000000000000000000000000000000000000 ","sourceMap":"449:6273:6:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"5f80fdfea264697066735822122099005689d8ee280502f7a9ed0831b2aacdc1ae64fd05b81ebd15e0f9d60fce7f64736f6c63430008190033","opcodes":"PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP10 STOP JUMP DUP10 0xD8 0xEE 0x28 SDIV MUL 0xF7 0xA9 0xED ADDMOD BALANCE 0xB2 0xAA 0xCD 0xC1 0xAE PUSH5 0xFD05B81EBD ISZERO 0xE0 0xF9 0xD6 0xF 0xCE PUSH32 0x64736F6C63430008190033000000000000000000000000000000000000000000 ","sourceMap":"449:6273:6:-:0;;"},"gasEstimates":{"creation":{"codeDepositCost":"11400","executionCost":"infinite","totalCost":"infinite"},"internal":{"_checkNonPayable()":"infinite","_setAdmin(address)":"infinite","_setBeacon(address)":"infinite","_setImplementation(address)":"infinite","changeAdmin(address)":"infinite","getAdmin()":"infinite","getBeacon()":"infinite","getImplementation()":"infinite","upgradeBeaconToAndCall(address,bytes memory)":"infinite","upgradeToAndCall(address,bytes memory)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidAdmin\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidBeacon\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\",\"errors\":{\"ERC1967InvalidAdmin(address)\":[{\"details\":\"The `admin` of the proxy is invalid.\"}],\"ERC1967InvalidBeacon(address)\":[{\"details\":\"The `beacon` of the proxy is invalid.\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}]},\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ADMIN_SLOT\":{\"details\":\"Storage slot with the admin of the contract. This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1.\"},\"BEACON_SLOT\":{\"details\":\"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is the keccak-256 hash of \\\"eip1967.proxy.beacon\\\" subtracted by 1.\"},\"IMPLEMENTATION_SLOT\":{\"details\":\"Storage slot with the address of the current implementation. This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":\"ERC1967Utils\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/ERC1967/ERC1967Utils.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IBeacon} from \\\"../beacon/IBeacon.sol\\\";\\nimport {Address} from \\\"../../utils/Address.sol\\\";\\nimport {StorageSlot} from \\\"../../utils/StorageSlot.sol\\\";\\n\\n/**\\n * @dev This abstract contract provides getters and event emitting update functions for\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\\n */\\nlibrary ERC1967Utils {\\n    // We re-declare ERC-1967 events here because they can't be used directly from IERC1967.\\n    // This will be fixed in Solidity 0.8.21. At that point we should remove these events.\\n    /**\\n     * @dev Emitted when the implementation is upgraded.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Emitted when the admin account has changed.\\n     */\\n    event AdminChanged(address previousAdmin, address newAdmin);\\n\\n    /**\\n     * @dev Emitted when the beacon is changed.\\n     */\\n    event BeaconUpgraded(address indexed beacon);\\n\\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /**\\n     * @dev The `implementation` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidImplementation(address implementation);\\n\\n    /**\\n     * @dev The `admin` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidAdmin(address admin);\\n\\n    /**\\n     * @dev The `beacon` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidBeacon(address beacon);\\n\\n    /**\\n     * @dev An upgrade function sees `msg.value > 0` that may be lost.\\n     */\\n    error ERC1967NonPayable();\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function getImplementation() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 implementation slot.\\n     */\\n    function _setImplementation(address newImplementation) private {\\n        if (newImplementation.code.length == 0) {\\n            revert ERC1967InvalidImplementation(newImplementation);\\n        }\\n        StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation;\\n    }\\n\\n    /**\\n     * @dev Performs implementation upgrade with additional setup call if data is nonempty.\\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\\n     * to avoid stuck value in the contract.\\n     *\\n     * Emits an {IERC1967-Upgraded} event.\\n     */\\n    function upgradeToAndCall(address newImplementation, bytes memory data) internal {\\n        _setImplementation(newImplementation);\\n        emit Upgraded(newImplementation);\\n\\n        if (data.length > 0) {\\n            Address.functionDelegateCall(newImplementation, data);\\n        } else {\\n            _checkNonPayable();\\n        }\\n    }\\n\\n    /**\\n     * @dev Storage slot with the admin of the contract.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n\\n    /**\\n     * @dev Returns the current admin.\\n     *\\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using\\n     * the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\\n     */\\n    function getAdmin() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(ADMIN_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 admin slot.\\n     */\\n    function _setAdmin(address newAdmin) private {\\n        if (newAdmin == address(0)) {\\n            revert ERC1967InvalidAdmin(address(0));\\n        }\\n        StorageSlot.getAddressSlot(ADMIN_SLOT).value = newAdmin;\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {IERC1967-AdminChanged} event.\\n     */\\n    function changeAdmin(address newAdmin) internal {\\n        emit AdminChanged(getAdmin(), newAdmin);\\n        _setAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.beacon\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\\n\\n    /**\\n     * @dev Returns the current beacon.\\n     */\\n    function getBeacon() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(BEACON_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\\n     */\\n    function _setBeacon(address newBeacon) private {\\n        if (newBeacon.code.length == 0) {\\n            revert ERC1967InvalidBeacon(newBeacon);\\n        }\\n\\n        StorageSlot.getAddressSlot(BEACON_SLOT).value = newBeacon;\\n\\n        address beaconImplementation = IBeacon(newBeacon).implementation();\\n        if (beaconImplementation.code.length == 0) {\\n            revert ERC1967InvalidImplementation(beaconImplementation);\\n        }\\n    }\\n\\n    /**\\n     * @dev Change the beacon and trigger a setup call if data is nonempty.\\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\\n     * to avoid stuck value in the contract.\\n     *\\n     * Emits an {IERC1967-BeaconUpgraded} event.\\n     *\\n     * CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\\n     * it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\\n     * efficiency.\\n     */\\n    function upgradeBeaconToAndCall(address newBeacon, bytes memory data) internal {\\n        _setBeacon(newBeacon);\\n        emit BeaconUpgraded(newBeacon);\\n\\n        if (data.length > 0) {\\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\\n        } else {\\n            _checkNonPayable();\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\\n     * if an upgrade doesn't perform an initialization call.\\n     */\\n    function _checkNonPayable() private {\\n        if (msg.value > 0) {\\n            revert ERC1967NonPayable();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeacon {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {UpgradeableBeacon} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev The ETH balance of the account is not enough to perform the operation.\\n     */\\n    error AddressInsufficientBalance(address account);\\n\\n    /**\\n     * @dev There's no code at `target` (it is not a contract).\\n     */\\n    error AddressEmptyCode(address target);\\n\\n    /**\\n     * @dev A call to an address target failed. The target may have reverted.\\n     */\\n    error FailedInnerCall();\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        if (address(this).balance < amount) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        if (!success) {\\n            revert FailedInnerCall();\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason or custom error, it is bubbled\\n     * up by this function (like regular Solidity function calls). However, if\\n     * the call reverted with no returned reason, this function reverts with a\\n     * {FailedInnerCall} error.\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        if (address(this).balance < value) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\\n     * unsuccessful call.\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata\\n    ) internal view returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            // only check if target is a contract if the call was successful and the return data is empty\\n            // otherwise we already know that it was a contract\\n            if (returndata.length == 0 && target.code.length == 0) {\\n                revert AddressEmptyCode(target);\\n            }\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\\n     * revert reason or with a default {FailedInnerCall} error.\\n     */\\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\\n     */\\n    function _revert(bytes memory returndata) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert FailedInnerCall();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```solidity\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(newImplementation.code.length > 0);\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    struct StringSlot {\\n        string value;\\n    }\\n\\n    struct BytesSlot {\\n        bytes value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\\n     */\\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\\n     */\\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\\n     */\\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\\n     */\\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/proxy/beacon/IBeacon.sol":{"IBeacon":{"abi":[{"inputs":[],"name":"implementation","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"This is the interface that {BeaconProxy} expects of its beacon.","kind":"dev","methods":{"implementation()":{"details":"Must return an address that can be used as a delegate call target. {UpgradeableBeacon} will check that this address is a contract."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"implementation()":"5c60da1b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is the interface that {BeaconProxy} expects of its beacon.\",\"kind\":\"dev\",\"methods\":{\"implementation()\":{\"details\":\"Must return an address that can be used as a delegate call target. {UpgradeableBeacon} will check that this address is a contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":\"IBeacon\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeacon {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {UpgradeableBeacon} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ERC20":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.","errors":{"ERC20InsufficientAllowance(address,uint256,uint256)":[{"details":"Indicates a failure with the `spender`’s `allowance`. Used in transfers.","params":{"allowance":"Amount of tokens a `spender` is allowed to operate with.","needed":"Minimum amount required to perform a transfer.","spender":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC20InsufficientBalance(address,uint256,uint256)":[{"details":"Indicates an error related to the current `balance` of a `sender`. Used in transfers.","params":{"balance":"Current balance for the interacting account.","needed":"Minimum amount required to perform a transfer.","sender":"Address whose tokens are being transferred."}}],"ERC20InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC20InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC20InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC20InvalidSpender(address)":[{"details":"Indicates a failure with the `spender` to be approved. Used in approvals.","params":{"spender":"Address that may be allowed to operate on tokens without being their owner."}}]},"events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"See {IERC20-allowance}."},"approve(address,uint256)":{"details":"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{"details":"See {IERC20-balanceOf}."},"constructor":{"details":"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."},"decimals()":{"details":"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{"details":"See {IERC20-totalSupply}."},"transfer(address,uint256)":{"details":"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."},"transferFrom(address,address,uint256)":{"details":"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"./IERC20.sol\\\";\\nimport {IERC20Metadata} from \\\"./extensions/IERC20Metadata.sol\\\";\\nimport {Context} from \\\"../../utils/Context.sol\\\";\\nimport {IERC20Errors} from \\\"../../interfaces/draft-IERC6093.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n */\\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\\n    mapping(address account => uint256) private _balances;\\n\\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `value`.\\n     */\\n    function transfer(address to, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `value`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `value`.\\n     */\\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, value);\\n        _transfer(from, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _transfer(address from, address to, uint256 value) internal {\\n        if (from == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        if (to == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\\n     * this function.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _update(address from, address to, uint256 value) internal virtual {\\n        if (from == address(0)) {\\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\\n            _totalSupply += value;\\n        } else {\\n            uint256 fromBalance = _balances[from];\\n            if (fromBalance < value) {\\n                revert ERC20InsufficientBalance(from, fromBalance, value);\\n            }\\n            unchecked {\\n                // Overflow not possible: value <= fromBalance <= totalSupply.\\n                _balances[from] = fromBalance - value;\\n            }\\n        }\\n\\n        if (to == address(0)) {\\n            unchecked {\\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\\n                _totalSupply -= value;\\n            }\\n        } else {\\n            unchecked {\\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\\n                _balances[to] += value;\\n            }\\n        }\\n\\n        emit Transfer(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\\n     * Relies on the `_update` mechanism\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _mint(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(address(0), account, value);\\n    }\\n\\n    /**\\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\\n     * Relies on the `_update` mechanism.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead\\n     */\\n    function _burn(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        _update(account, address(0), value);\\n    }\\n\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     *\\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\\n     */\\n    function _approve(address owner, address spender, uint256 value) internal {\\n        _approve(owner, spender, value, true);\\n    }\\n\\n    /**\\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\\n     *\\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\\n     * `Approval` event during `transferFrom` operations.\\n     *\\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\\n     * true using the following override:\\n     * ```\\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\\n     *     super._approve(owner, spender, value, true);\\n     * }\\n     * ```\\n     *\\n     * Requirements are the same as {_approve}.\\n     */\\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\\n        if (owner == address(0)) {\\n            revert ERC20InvalidApprover(address(0));\\n        }\\n        if (spender == address(0)) {\\n            revert ERC20InvalidSpender(address(0));\\n        }\\n        _allowances[owner][spender] = value;\\n        if (emitEvent) {\\n            emit Approval(owner, spender, value);\\n        }\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\\n     *\\n     * Does not update the allowance value in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Does not emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            if (currentAllowance < value) {\\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\\n            }\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - value, false);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1159,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":1165,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_allowances","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":1167,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":1169,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_name","offset":0,"slot":"3","type":"t_string_storage"},{"astId":1171,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_symbol","offset":0,"slot":"4","type":"t_string_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface of the ERC20 standard as defined in the EIP.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the value of tokens owned by `account`."},"totalSupply()":{"details":"Returns the value of tokens in existence."},"transfer(address,uint256)":{"details":"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface for the optional metadata functions from the ERC20 standard.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the value of tokens owned by `account`."},"decimals()":{"details":"Returns the decimals places of the token."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token."},"totalSupply()":{"details":"Returns the value of tokens in existence."},"transfer(address,uint256)":{"details":"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"AddressInsufficientBalance","type":"error"},{"inputs":[],"name":"FailedInnerCall","type":"error"}],"devdoc":{"details":"Collection of functions related to the address type","errors":{"AddressEmptyCode(address)":[{"details":"There's no code at `target` (it is not a contract)."}],"AddressInsufficientBalance(address)":[{"details":"The ETH balance of the account is not enough to perform the operation."}],"FailedInnerCall()":[{"details":"A call to an address target failed. The target may have reverted."}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080806040523460175760399081601c823930815050f35b5f80fdfe5f80fdfea2646970667358221220e629626646d1d2bc1379505bf1e85b3b108993263cd5a4564554fb4f0d923bfe64736f6c63430008190033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x39 SWAP1 DUP2 PUSH1 0x1C DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH0 DUP1 REVERT INVALID PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE6 0x29 PUSH3 0x6646D1 0xD2 0xBC SGT PUSH26 0x505BF1E85B3B108993263CD5A4564554FB4F0D923BFE64736F6C PUSH4 0x43000819 STOP CALLER ","sourceMap":"195:6066:11:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"5f80fdfea2646970667358221220e629626646d1d2bc1379505bf1e85b3b108993263cd5a4564554fb4f0d923bfe64736f6c63430008190033","opcodes":"PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE6 0x29 PUSH3 0x6646D1 0xD2 0xBC SGT PUSH26 0x505BF1E85B3B108993263CD5A4564554FB4F0D923BFE64736F6C PUSH4 0x43000819 STOP CALLER ","sourceMap":"195:6066:11:-:0;;"},"gasEstimates":{"creation":{"codeDepositCost":"11400","executionCost":"infinite","totalCost":"infinite"},"internal":{"_revert(bytes memory)":"infinite","functionCall(address,bytes memory)":"infinite","functionCallWithValue(address,bytes memory,uint256)":"infinite","functionDelegateCall(address,bytes memory)":"infinite","functionStaticCall(address,bytes memory)":"infinite","sendValue(address payable,uint256)":"infinite","verifyCallResult(bool,bytes memory)":"infinite","verifyCallResultFromTarget(address,bool,bytes memory)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev The ETH balance of the account is not enough to perform the operation.\\n     */\\n    error AddressInsufficientBalance(address account);\\n\\n    /**\\n     * @dev There's no code at `target` (it is not a contract).\\n     */\\n    error AddressEmptyCode(address target);\\n\\n    /**\\n     * @dev A call to an address target failed. The target may have reverted.\\n     */\\n    error FailedInnerCall();\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        if (address(this).balance < amount) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        if (!success) {\\n            revert FailedInnerCall();\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason or custom error, it is bubbled\\n     * up by this function (like regular Solidity function calls). However, if\\n     * the call reverted with no returned reason, this function reverts with a\\n     * {FailedInnerCall} error.\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        if (address(this).balance < value) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\\n     * unsuccessful call.\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata\\n    ) internal view returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            // only check if target is a contract if the call was successful and the return data is empty\\n            // otherwise we already know that it was a contract\\n            if (returndata.length == 0 && target.code.length == 0) {\\n                revert AddressEmptyCode(target);\\n            }\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\\n     * revert reason or with a default {FailedInnerCall} error.\\n     */\\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\\n     */\\n    function _revert(bytes memory returndata) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert FailedInnerCall();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"ReentrancyGuard":{"abi":[{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"}],"devdoc":{"details":"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].","errors":{"ReentrancyGuardReentrantCall()":[{"details":"Unauthorized reentrant call."}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant NOT_ENTERED = 1;\\n    uint256 private constant ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    /**\\n     * @dev Unauthorized reentrant call.\\n     */\\n    error ReentrancyGuardReentrantCall();\\n\\n    constructor() {\\n        _status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\\n        if (_status == ENTERED) {\\n            revert ReentrancyGuardReentrantCall();\\n        }\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Returns true if the reentrancy guard is currently set to \\\"entered\\\", which indicates there is a\\n     * `nonReentrant` function in the call stack.\\n     */\\n    function _reentrancyGuardEntered() internal view returns (bool) {\\n        return _status == ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":2049,"contract":"@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard","label":"_status","offset":0,"slot":"0","type":"t_uint256"}],"types":{"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/StorageSlot.sol":{"StorageSlot":{"abi":[],"devdoc":{"details":"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080806040523460175760399081601c823930815050f35b5f80fdfe5f80fdfea2646970667358221220369bb9cb24b5a45a41b5d61f09cfcbb3b81fd65fb733bfc24b7c89345473a26464736f6c63430008190033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x39 SWAP1 DUP2 PUSH1 0x1C DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH0 DUP1 REVERT INVALID PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATASIZE SWAP12 0xB9 0xCB 0x24 0xB5 LOG4 GAS COINBASE 0xB5 0xD6 0x1F MULMOD 0xCF 0xCB 0xB3 0xB8 0x1F 0xD6 PUSH0 0xB7 CALLER 0xBF 0xC2 0x4B PUSH29 0x89345473A26464736F6C63430008190033000000000000000000000000 ","sourceMap":"1245:2685:14:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"5f80fdfea2646970667358221220369bb9cb24b5a45a41b5d61f09cfcbb3b81fd65fb733bfc24b7c89345473a26464736f6c63430008190033","opcodes":"PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATASIZE SWAP12 0xB9 0xCB 0x24 0xB5 LOG4 GAS COINBASE 0xB5 0xD6 0x1F MULMOD 0xCF 0xCB 0xB3 0xB8 0x1F 0xD6 PUSH0 0xB7 CALLER 0xBF 0xC2 0x4B PUSH29 0x89345473A26464736F6C63430008190033000000000000000000000000 ","sourceMap":"1245:2685:14:-:0;;"},"gasEstimates":{"creation":{"codeDepositCost":"11400","executionCost":"infinite","totalCost":"infinite"},"internal":{"getAddressSlot(bytes32)":"infinite","getBooleanSlot(bytes32)":"infinite","getBytes32Slot(bytes32)":"infinite","getBytesSlot(bytes storage pointer)":"infinite","getBytesSlot(bytes32)":"infinite","getStringSlot(bytes32)":"infinite","getStringSlot(string storage pointer)":"infinite","getUint256Slot(bytes32)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```solidity\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(newImplementation.code.length > 0);\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    struct StringSlot {\\n        string value;\\n    }\\n\\n    struct BytesSlot {\\n        bytes value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\\n     */\\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\\n     */\\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\\n     */\\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\\n     */\\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/BaluniV1Pool.sol":{"BaluniV1Pool":{"abi":[{"inputs":[{"internalType":"address","name":"_rebalancer","type":"address"},{"internalType":"address[]","name":"_assets","type":"address[]"},{"internalType":"uint256[]","name":"_weights","type":"uint256[]"},{"internalType":"uint256","name":"_trigger","type":"uint256"},{"internalType":"address","name":"_periphery","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"sharesBurned","type":"uint256"}],"name":"Burn","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"sharesMinted","type":"uint256"}],"name":"Mint","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"by","type":"address"},{"indexed":false,"internalType":"address[]","name":"assets","type":"address[]"}],"name":"RebalancePerformed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"address","name":"fromToken","type":"address"},{"indexed":true,"internalType":"address","name":"toToken","type":"address"},{"indexed":false,"internalType":"uint256","name":"amountIn","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amountOut","type":"uint256"}],"name":"Swap","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"amountsAdded","type":"uint256[]"}],"name":"WeightsRebalanced","type":"event"},{"inputs":[],"name":"BONE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"BPOW_PRECISION","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"EXIT_FEE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"INIT_POOL_SUPPLY","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MAX_BOUND_TOKENS","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MAX_BPOW_BASE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MAX_FEE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MAX_IN_RATIO","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MAX_OUT_RATIO","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MAX_TOTAL_WEIGHT","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MAX_WEIGHT","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MIN_BALANCE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MIN_BOUND_TOKENS","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MIN_BPOW_BASE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MIN_FEE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MIN_WEIGHT","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"ONE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"SWAP_FEE_BPS","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"assetInfos","outputs":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"uint256","name":"weight","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"assetIndex","type":"uint256"}],"name":"assetLiquidity","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"baseAsset","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"}],"name":"burn","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenBalanceIn","type":"uint256"},{"internalType":"uint256","name":"tokenWeightIn","type":"uint256"},{"internalType":"uint256","name":"tokenBalanceOut","type":"uint256"},{"internalType":"uint256","name":"tokenWeightOut","type":"uint256"},{"internalType":"uint256","name":"tokenAmountOut","type":"uint256"},{"internalType":"uint256","name":"swapFee","type":"uint256"}],"name":"calcInGivenOut","outputs":[{"internalType":"uint256","name":"tokenAmountIn","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"address","name":"fromToken","type":"address"},{"internalType":"address","name":"toToken","type":"address"}],"name":"calcOraclePrice","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenBalanceIn","type":"uint256"},{"internalType":"uint256","name":"tokenWeightIn","type":"uint256"},{"internalType":"uint256","name":"tokenBalanceOut","type":"uint256"},{"internalType":"uint256","name":"tokenWeightOut","type":"uint256"},{"internalType":"uint256","name":"tokenAmountIn","type":"uint256"},{"internalType":"uint256","name":"swapFee","type":"uint256"}],"name":"calcOutGivenIn","outputs":[{"internalType":"uint256","name":"tokenAmountOut","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenBalanceOut","type":"uint256"},{"internalType":"uint256","name":"tokenWeightOut","type":"uint256"},{"internalType":"uint256","name":"poolSupply","type":"uint256"},{"internalType":"uint256","name":"totalWeight","type":"uint256"},{"internalType":"uint256","name":"tokenAmountOut","type":"uint256"},{"internalType":"uint256","name":"swapFee","type":"uint256"}],"name":"calcPoolInGivenSingleOut","outputs":[{"internalType":"uint256","name":"poolAmountIn","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenBalanceIn","type":"uint256"},{"internalType":"uint256","name":"tokenWeightIn","type":"uint256"},{"internalType":"uint256","name":"poolSupply","type":"uint256"},{"internalType":"uint256","name":"totalWeight","type":"uint256"},{"internalType":"uint256","name":"tokenAmountIn","type":"uint256"},{"internalType":"uint256","name":"swapFee","type":"uint256"}],"name":"calcPoolOutGivenSingleIn","outputs":[{"internalType":"uint256","name":"poolAmountOut","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenBalanceIn","type":"uint256"},{"internalType":"uint256","name":"tokenWeightIn","type":"uint256"},{"internalType":"uint256","name":"poolSupply","type":"uint256"},{"internalType":"uint256","name":"totalWeight","type":"uint256"},{"internalType":"uint256","name":"poolAmountOut","type":"uint256"},{"internalType":"uint256","name":"swapFee","type":"uint256"}],"name":"calcSingleInGivenPoolOut","outputs":[{"internalType":"uint256","name":"tokenAmountIn","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenBalanceOut","type":"uint256"},{"internalType":"uint256","name":"tokenWeightOut","type":"uint256"},{"internalType":"uint256","name":"poolSupply","type":"uint256"},{"internalType":"uint256","name":"totalWeight","type":"uint256"},{"internalType":"uint256","name":"poolAmountIn","type":"uint256"},{"internalType":"uint256","name":"swapFee","type":"uint256"}],"name":"calcSingleOutGivenPoolIn","outputs":[{"internalType":"uint256","name":"tokenAmountOut","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"address","name":"fromToken","type":"address"},{"internalType":"address","name":"toToken","type":"address"}],"name":"calcSpotPrice","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenBalanceIn","type":"uint256"},{"internalType":"uint256","name":"tokenWeightIn","type":"uint256"},{"internalType":"uint256","name":"tokenBalanceOut","type":"uint256"},{"internalType":"uint256","name":"tokenWeightOut","type":"uint256"},{"internalType":"uint256","name":"swapFee","type":"uint256"}],"name":"calcSpotPrice","outputs":[{"internalType":"uint256","name":"spotPrice","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"computeTotalValuation","outputs":[{"internalType":"uint256","name":"totalVal","type":"uint256"},{"internalType":"uint256[]","name":"valuations","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"factory","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"fromToken","type":"address"},{"internalType":"address","name":"toToken","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"getAmountOut","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"}],"name":"getAssetReserve","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getAssets","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getColor","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getDeviation","outputs":[{"internalType":"bool[]","name":"directions","type":"bool[]"},{"internalType":"uint256[]","name":"deviations","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getReserves","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getWeights","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"isRebalanceNeeded","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"liquidity","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"name":"mint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"performRebalanceIfNeeded","outputs":[{"internalType":"uint256[]","name":"amountsToAdd","type":"uint256[]"},{"internalType":"uint256[]","name":"amountsToRemove","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"periphery","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"rebalanceWeights","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"rebalancer","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"fromToken","type":"address"},{"internalType":"address","name":"toToken","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"receiver","type":"address"}],"name":"swap","outputs":[{"internalType":"uint256","name":"toSend","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"trigger","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"unitPrice","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"errors":{"ERC20InsufficientAllowance(address,uint256,uint256)":[{"details":"Indicates a failure with the `spender`’s `allowance`. Used in transfers.","params":{"allowance":"Amount of tokens a `spender` is allowed to operate with.","needed":"Minimum amount required to perform a transfer.","spender":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC20InsufficientBalance(address,uint256,uint256)":[{"details":"Indicates an error related to the current `balance` of a `sender`. Used in transfers.","params":{"balance":"Current balance for the interacting account.","needed":"Minimum amount required to perform a transfer.","sender":"Address whose tokens are being transferred."}}],"ERC20InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC20InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC20InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC20InvalidSpender(address)":[{"details":"Indicates a failure with the `spender` to be approved. Used in approvals.","params":{"spender":"Address that may be allowed to operate on tokens without being their owner."}}],"ReentrancyGuardReentrantCall()":[{"details":"Unauthorized reentrant call."}]},"events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"See {IERC20-allowance}."},"approve(address,uint256)":{"details":"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."},"assetLiquidity(uint256)":{"details":"Returns the liquidity of a specific asset in the pool.","params":{"assetIndex":"The index of the asset."},"returns":{"_0":"The liquidity of the asset."}},"balanceOf(address)":{"details":"See {IERC20-balanceOf}."},"burn(address)":{"details":"Burns the pool tokens and transfers the underlying assets to the specified address.","params":{"to":"The address to transfer the underlying assets to."}},"computeTotalValuation()":{"details":"Computes the total valuation of the pool and returns the total valuation and an array of individual valuations.","returns":{"totalVal":"The total valuation of the pool.","valuations":"An array of individual valuations."}},"constructor":{"details":"Initializes a new instance of the BaluniV1Pool contract.","params":{"_assets":"An array of addresses representing the assets in the pool.","_periphery":"The address of the periphery contract.","_rebalancer":"The address of the rebalancer contract.","_trigger":"The trigger value for rebalancing the pool.","_weights":"An array of weights corresponding to the assets in the pool."}},"decimals()":{"details":"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"getAmountOut(address,address,uint256)":{"details":"Calculates the amount of `toToken` that will be received when swapping `fromToken` for `toToken`.","params":{"amount":"The amount of `fromToken` being swapped.","fromToken":"The address of the token being swapped from.","toToken":"The address of the token being swapped to."},"returns":{"_0":"The amount of `toToken` that will be received."}},"getAssetReserve(address)":{"details":"Returns the reserve amount of the specified asset.","params":{"asset":"The address of the asset."},"returns":{"_0":"The reserve amount of the asset."}},"getAssets()":{"details":"Retrieves the list of assets in the pool.","returns":{"_0":"An array of addresses representing the assets."}},"getDeviation()":{"details":"Returns the deviation between the current weights and target weights of the assets in the pool.","returns":{"directions":"An array of boolean values indicating whether the current weight is higher (true) or lower (false) than the target weight."}},"getReserves()":{"details":"Returns an array of reserves for each asset in the pool.","returns":{"_0":"An array of reserves."}},"getWeights()":{"details":"Retrieves the list of weights associated with the assets in the pool.","returns":{"_0":"An array of uint256 values representing the weights."}},"isRebalanceNeeded()":{"details":"Checks if rebalancing is needed for the pool.","returns":{"_0":"A boolean value indicating whether rebalancing is needed or not."}},"liquidity()":{"details":"Returns the total liquidity of the pool.","returns":{"_0":"The total liquidity of the pool."}},"mint(address,uint256[])":{"details":"Mints new tokens and adds them to the specified address.","params":{"to":"The address to which the new tokens will be minted."},"returns":{"_0":"The amount of tokens minted."}},"name()":{"details":"Returns the name of the token."},"performRebalanceIfNeeded()":{"details":"Performs rebalance"},"rebalanceWeights(address)":{"details":"Rebalances the weights of the pool by calculating the amounts to add for each token, transferring the calculated amounts from the user to the pool, minting the total added liquidity, updating the reserves, and emitting an event to indicate the rebalancing of weights.","params":{"receiver":"The address to receive the minted liquidity tokens."}},"swap(address,address,uint256,address)":{"details":"Swaps `amount` of `fromToken` to `toToken` and transfers the received amount to `receiver`. Requirements: - `fromToken` and `toToken` must be different tokens. - `amount` must be greater than zero. - Sufficient liquidity of `toToken` must be available in the contract. Emits a `Swap` event with the details of the swap. Updates the reserves after the swap.","params":{"amount":"The amount of `fromToken` to swap.","fromToken":"The address of the token to swap from.","receiver":"The address to receive the swapped tokens.","toToken":"The address of the token to swap to."},"returns":{"toSend":"The amount of `toToken` received after the swap."}},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{"details":"See {IERC20-totalSupply}."},"transfer(address,uint256)":{"details":"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."},"transferFrom(address,address,uint256)":{"details":"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."},"unitPrice()":{"details":"Returns the unit price of the pool.","returns":{"_0":"The unit price of the pool."}}},"version":1},"evm":{"bytecode":{"functionDebugData":{"abi_decode_address_fromMemory":{"entryPoint":2337,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_array_address_dyn":{"entryPoint":2357,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":2302,"id":null,"parameterSlots":2,"returnSlots":0},"finalize_allocation_12152":{"entryPoint":2275,"id":null,"parameterSlots":1,"returnSlots":0},"memory_array_index_access_uint256_dyn":{"entryPoint":2380,"id":null,"parameterSlots":2,"returnSlots":1}},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x439 JUMPI PUSH2 0x3CD5 DUP1 CODESIZE SUB DUP1 SWAP2 PUSH2 0x1C DUP3 DUP6 PUSH2 0x8FE JUMP JUMPDEST DUP4 CODECOPY DUP2 ADD PUSH1 0xA0 DUP3 DUP3 SUB SLT PUSH2 0x439 JUMPI PUSH2 0x33 DUP3 PUSH2 0x921 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MLOAD SWAP1 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x439 JUMPI DUP4 ADD SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x439 JUMPI DUP3 MLOAD SWAP3 PUSH2 0x63 DUP5 PUSH2 0x935 JUMP JUMPDEST SWAP4 PUSH2 0x71 PUSH1 0x40 MLOAD SWAP6 DUP7 PUSH2 0x8FE JUMP JUMPDEST DUP1 DUP6 MSTORE PUSH1 0x20 DUP1 DUP7 ADD SWAP2 PUSH1 0x5 SHL DUP4 ADD ADD SWAP2 DUP5 DUP4 GT PUSH2 0x439 JUMPI PUSH1 0x20 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x8CB JUMPI POP POP POP PUSH1 0x40 DUP5 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x439 JUMPI DUP5 ADD SWAP2 DUP1 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x439 JUMPI DUP3 MLOAD PUSH2 0xC3 DUP2 PUSH2 0x935 JUMP JUMPDEST SWAP4 PUSH2 0xD1 PUSH1 0x40 MLOAD SWAP6 DUP7 PUSH2 0x8FE JUMP JUMPDEST DUP2 DUP6 MSTORE PUSH1 0x20 DUP1 DUP7 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x439 JUMPI PUSH1 0x20 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x8BB JUMPI POP POP POP PUSH2 0x107 PUSH1 0x80 PUSH1 0x60 DUP7 ADD MLOAD SWAP6 ADD PUSH2 0x921 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x113 DUP2 PUSH2 0x8E3 JUMP JUMPDEST PUSH1 0x9 DUP2 MSTORE PUSH9 0x42616C756E69204C5 PUSH1 0xBC SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP1 PUSH2 0x136 DUP3 PUSH2 0x8E3 JUMP JUMPDEST PUSH1 0x9 DUP3 MSTORE PUSH9 0x42414C554E492D4C5 PUSH1 0xBC SHL PUSH1 0x20 DUP4 ADD MSTORE DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x496 JUMPI PUSH1 0x3 SLOAD SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x8B1 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x792 JUMPI DUP2 PUSH1 0x1F DUP5 SWAP4 GT PUSH2 0x843 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x7BB JUMPI PUSH0 SWAP3 PUSH2 0x7B0 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x3 SSTORE JUMPDEST DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x496 JUMPI PUSH1 0x4 SLOAD SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x7A6 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x792 JUMPI DUP2 PUSH1 0x1F DUP5 SWAP4 GT PUSH2 0x724 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x6A0 JUMPI PUSH0 SWAP3 PUSH2 0x695 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x4 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x5 SSTORE PUSH1 0x9 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND OR SWAP1 SWAP2 SSTORE PUSH1 0xA DUP1 SLOAD DUP3 AND CALLER OR SWAP1 SSTORE PUSH1 0xC DUP1 SLOAD SWAP1 SWAP2 AND SWAP2 DUP4 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH8 0xDE0B6B3A7640000 PUSH1 0x8 SSTORE DUP3 MLOAD DUP3 MLOAD SUB PUSH2 0x645 JUMPI PUSH0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x525 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x280 DUP3 DUP7 PUSH2 0x94C JUMP JUMPDEST MLOAD AND ISZERO PUSH2 0x4E0 JUMPI PUSH2 0x291 DUP2 DUP5 PUSH2 0x94C JUMP JUMPDEST MLOAD ISZERO PUSH2 0x4AA JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x2A9 DUP3 DUP7 PUSH2 0x94C JUMP JUMPDEST MLOAD AND PUSH2 0x2B5 DUP3 DUP6 PUSH2 0x94C JUMP JUMPDEST MLOAD PUSH1 0x40 DUP1 MLOAD SWAP3 SWAP1 DUP4 ADD DUP1 DUP5 GT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 SWAP2 GT OR PUSH2 0x496 JUMPI PUSH1 0x40 DUP4 ADD PUSH1 0x40 MSTORE DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x6 SLOAD PUSH9 0x10000000000000000 DUP2 LT ISZERO PUSH2 0x496 JUMPI PUSH1 0x1 DUP2 ADD DUP1 PUSH1 0x6 SSTORE DUP2 LT ISZERO PUSH2 0x482 JUMPI PUSH1 0x6 PUSH0 MSTORE DUP2 MLOAD PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F PUSH1 0x1 SWAP3 SWAP1 SWAP3 SHL SWAP2 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE PUSH1 0x20 SWAP1 SWAP3 ADD MLOAD PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D40 SWAP1 SWAP2 ADD SSTORE PUSH2 0x383 DUP3 DUP7 PUSH2 0x94C JUMP JUMPDEST MLOAD AND PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0xC SLOAD AND PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE DUP2 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x44 DUP2 DUP7 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x445 JUMPI PUSH0 SWAP2 PUSH2 0x450 JUMPI JUMPDEST POP ISZERO PUSH2 0x3D1 JUMPI JUMPDEST POP POP PUSH1 0x1 ADD PUSH2 0x265 JUMP JUMPDEST PUSH0 SWAP2 PUSH1 0x44 PUSH1 0x20 SWAP3 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP4 DUP5 SWAP3 PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE DUP2 NOT PUSH1 0x24 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x445 JUMPI PUSH2 0x409 JUMPI JUMPDEST DUP1 PUSH2 0x3C7 JUMP JUMPDEST PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x43D JUMPI JUMPDEST DUP2 PUSH2 0x422 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x8FE JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x439 JUMPI MLOAD DUP1 ISZERO ISZERO SUB PUSH2 0x439 JUMPI PUSH0 PUSH2 0x403 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x415 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x47A JUMPI JUMPDEST DUP2 PUSH2 0x46B PUSH1 0x20 SWAP4 DUP4 PUSH2 0x8FE JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x439 JUMPI MLOAD PUSH0 PUSH2 0x3C0 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x45E JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x125B9D985B1A59081DD95A59DA1D PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420617373657420616464726573730000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH1 0x7 DUP5 SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH4 0x89A30271 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x4 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x445 JUMPI PUSH0 SWAP2 PUSH2 0x60B JUMPI JUMPDEST POP PUSH1 0xB DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH0 SWAP1 DUP2 JUMPDEST DUP2 MLOAD DUP4 LT ISZERO PUSH2 0x5BD JUMPI PUSH2 0x594 DUP4 DUP4 PUSH2 0x94C JUMP JUMPDEST MLOAD DUP2 ADD DUP1 SWAP2 GT PUSH2 0x5A9 JUMPI PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 PUSH2 0x581 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x2710 SUB PUSH2 0x5D4 JUMPI PUSH1 0x40 MLOAD PUSH2 0x3374 SWAP1 DUP2 PUSH2 0x961 DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x496E76616C69642077656967687473 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x63D JUMPI JUMPDEST DUP2 PUSH2 0x626 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x8FE JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x439 JUMPI PUSH2 0x637 SWAP1 PUSH2 0x921 JUMP JUMPDEST DUP3 PUSH2 0x55C JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x619 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41737365747320616E642077656967687473206C656E677468206D69736D6174 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0xC6D PUSH1 0xF3 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ADD MLOAD SWAP1 POP PUSH0 DUP1 PUSH2 0x1FB JUMP JUMPDEST PUSH1 0x4 PUSH0 SWAP1 DUP2 MSTORE PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B SWAP4 POP PUSH1 0x1F NOT DUP6 AND SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x70C JUMPI POP SWAP1 DUP5 PUSH1 0x1 SWAP6 SWAP5 SWAP4 SWAP3 LT PUSH2 0x6F4 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x4 SSTORE PUSH2 0x210 JUMP JUMPDEST ADD MLOAD PUSH0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE PUSH0 DUP1 DUP1 PUSH2 0x6E6 JUMP JUMPDEST SWAP3 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH2 0x6D0 JUMP JUMPDEST PUSH1 0x4 PUSH0 MSTORE SWAP1 SWAP2 POP PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP6 LT PUSH2 0x788 JUMPI JUMPDEST SWAP1 PUSH1 0x1F DUP6 SWAP5 SWAP4 SWAP3 ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x77A JUMPI POP PUSH2 0x1E5 JUMP JUMPDEST PUSH0 DUP2 SSTORE DUP5 SWAP4 POP PUSH1 0x1 ADD PUSH2 0x76D JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x75F JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x1D1 JUMP JUMPDEST ADD MLOAD SWAP1 POP PUSH0 DUP1 PUSH2 0x199 JUMP JUMPDEST PUSH1 0x3 PUSH0 SWAP1 DUP2 MSTORE SWAP4 POP PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B SWAP2 SWAP1 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0x828 JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x810 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x3 SSTORE PUSH2 0x1AE JUMP JUMPDEST ADD MLOAD PUSH0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE PUSH0 DUP1 DUP1 PUSH2 0x802 JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x7E7 JUMP JUMPDEST PUSH1 0x3 PUSH0 MSTORE SWAP1 SWAP2 POP PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP6 LT PUSH2 0x8A7 JUMPI JUMPDEST SWAP1 PUSH1 0x1F DUP6 SWAP5 SWAP4 SWAP3 ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x899 JUMPI POP PUSH2 0x183 JUMP JUMPDEST PUSH0 DUP2 SSTORE DUP5 SWAP4 POP PUSH1 0x1 ADD PUSH2 0x88C JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x87E JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x16F JUMP JUMPDEST DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0xEC JUMP JUMPDEST PUSH1 0x20 DUP1 SWAP2 PUSH2 0x8D8 DUP5 PUSH2 0x921 JUMP JUMPDEST DUP2 MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0x8D JUMP JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x496 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT SWAP1 DUP3 LT OR PUSH2 0x496 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x439 JUMPI JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x496 JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x482 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP INVALID PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 SWAP2 DUP3 CALLDATASIZE LT ISZERO PUSH2 0x15 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 SWAP3 PUSH0 CALLDATALOAD PUSH1 0xE0 SHR SWAP2 DUP3 PUSH4 0x1D22CCD EQ PUSH2 0x258D JUMPI POP DUP2 PUSH4 0x6FDDE03 EQ PUSH2 0x2499 JUMPI DUP2 PUSH4 0x723C999 EQ PUSH2 0x21D2 JUMPI DUP2 PUSH4 0x902F1AC EQ PUSH2 0x21A2 JUMPI DUP2 PUSH4 0x95EA7B3 EQ PUSH2 0x20FA JUMPI DUP2 PUSH4 0x9A3BBE4 EQ PUSH2 0x6EC JUMPI DUP2 PUSH4 0xD0FA029 EQ PUSH2 0x1F79 JUMPI DUP2 PUSH4 0x18160DDD EQ PUSH2 0x1F5B JUMPI DUP2 PUSH4 0x189D00CA EQ PUSH2 0x1F3D JUMPI DUP2 PUSH4 0x1A686502 EQ PUSH2 0x1F19 JUMPI DUP2 PUSH4 0x218B5382 EQ PUSH2 0xC3D JUMPI DUP2 PUSH4 0x22ACB867 EQ PUSH2 0x1EBC JUMPI DUP2 PUSH4 0x23B872DD EQ PUSH2 0x1DDB JUMPI DUP2 PUSH4 0x313CE567 EQ PUSH2 0x1DC0 JUMPI DUP2 PUSH4 0x36BF6E39 EQ PUSH2 0x1D8C JUMPI DUP2 PUSH4 0x4AA06652 EQ PUSH2 0x1CE4 JUMPI DUP2 PUSH4 0x58D19698 EQ PUSH2 0x1BA3 JUMPI DUP2 PUSH4 0x5C1BBAF7 EQ PUSH2 0x1B5C JUMPI DUP2 PUSH4 0x67A6C440 EQ PUSH2 0x1B41 JUMPI DUP2 PUSH4 0x67E4AC2C EQ PUSH2 0x1ADE JUMPI DUP2 PUSH4 0x6E81221C EQ PUSH2 0x168C JUMPI DUP2 PUSH4 0x70A08231 EQ PUSH2 0x1656 JUMPI DUP2 PUSH4 0x76C7A3C7 EQ PUSH2 0x1637 JUMPI DUP2 PUSH4 0x77AACE1A EQ PUSH2 0x160F JUMPI DUP2 PUSH4 0x7FEC8D38 EQ PUSH2 0x15F1 JUMPI DUP2 PUSH4 0x82F652AD EQ PUSH2 0x1551 JUMPI DUP2 PUSH4 0x8656B653 EQ PUSH2 0x1506 JUMPI DUP2 PUSH4 0x867378C5 EQ PUSH2 0x14E9 JUMPI DUP2 PUSH4 0x89298012 EQ PUSH2 0x13F5 JUMPI DUP2 PUSH4 0x89AB3532 EQ PUSH2 0x138B JUMPI DUP2 PUSH4 0x89AFCB44 EQ PUSH2 0xF6C JUMPI DUP2 PUSH4 0x8A77C8DC EQ PUSH2 0xF47 JUMPI DUP2 PUSH4 0x9381CD2B EQ PUSH2 0xF24 JUMPI DUP2 PUSH4 0x95D89B41 EQ PUSH2 0xE26 JUMPI DUP2 PUSH4 0x992E2A92 EQ PUSH2 0xE04 JUMPI DUP2 PUSH4 0x9A86139B EQ PUSH2 0xDE1 JUMPI DUP2 PUSH4 0xA221EE49 EQ PUSH2 0xD98 JUMPI DUP2 PUSH4 0xA9059CBB EQ PUSH2 0xD68 JUMPI DUP2 PUSH4 0xB0E0D136 EQ PUSH2 0xD4D JUMPI DUP2 PUSH4 0xB2B55D70 EQ PUSH2 0xD28 JUMPI DUP2 PUSH4 0xB7B800A4 EQ PUSH2 0xD0D JUMPI DUP2 PUSH4 0xBA019DAB EQ PUSH2 0xCF2 JUMPI DUP2 PUSH4 0xBA9530A6 EQ PUSH2 0xCA4 JUMPI DUP2 PUSH4 0xBC063E1A EQ PUSH2 0xC82 JUMPI DUP2 PUSH4 0xBC694EA2 EQ PUSH2 0xC60 JUMPI DUP2 PUSH4 0xC2EE3A08 EQ PUSH2 0xC42 JUMPI DUP2 PUSH4 0xC36596A6 EQ PUSH2 0xC3D JUMPI DUP2 PUSH4 0xC45A0155 EQ PUSH2 0xC15 JUMPI DUP2 PUSH4 0xC6580D12 EQ PUSH2 0xBFB JUMPI DUP2 PUSH4 0xCDF456E1 EQ PUSH2 0xBD3 JUMPI DUP2 PUSH4 0xCF8FA764 EQ PUSH2 0xB5B JUMPI DUP2 PUSH4 0xD14EF46D EQ PUSH2 0xB0F JUMPI DUP2 PUSH4 0xDD62ED3E EQ PUSH2 0xAC6 JUMPI DUP2 PUSH4 0xDE836EBD EQ PUSH2 0x6F1 JUMPI DUP2 PUSH4 0xE4A28A52 EQ PUSH2 0x6EC JUMPI DUP2 PUSH4 0xE73FAA2D EQ PUSH2 0x6D0 JUMPI DUP2 PUSH4 0xEC093021 EQ PUSH2 0x6AE JUMPI DUP2 PUSH4 0xF47B45E8 EQ PUSH2 0x314 JUMPI POP PUSH4 0xF8D6AED4 EQ PUSH2 0x2AB JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x310 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x309 PUSH2 0x2E8 PUSH2 0x304 PUSH2 0x2EE PUSH2 0x2FE PUSH2 0x2F8 PUSH2 0x2F3 PUSH2 0x2E1 PUSH2 0x2D4 CALLDATASIZE PUSH2 0x26F8 JUMP JUMPDEST SWAP10 SWAP5 SWAP12 SWAP3 SWAP4 SWAP1 SWAP6 SWAP2 PUSH2 0x2E60 JUMP JUMPDEST SWAP4 DUP3 PUSH2 0x321B JUMP JUMPDEST SWAP1 PUSH2 0x2E60 JUMP JUMPDEST PUSH2 0x2F12 JUMP JUMPDEST PUSH2 0x3212 JUMP JUMPDEST SWAP2 PUSH2 0x31C9 JUMP JUMPDEST SWAP3 PUSH2 0x31AA JUMP JUMPDEST PUSH2 0x2E60 JUMP JUMPDEST SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x5A9 JUMPI PUSH1 0x3 NOT PUSH0 CALLDATASIZE DUP3 ADD SLT PUSH2 0x5A9 JUMPI PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 DUP6 AND SWAP2 PUSH2 0x342 CALLER DUP5 EQ PUSH2 0x280E JUMP JUMPDEST PUSH2 0x352 PUSH2 0x34D PUSH2 0x2AA9 JUMP JUMPDEST PUSH2 0x284B JUMP JUMPDEST PUSH1 0x6 SLOAD SWAP4 PUSH2 0x35F DUP6 PUSH2 0x28A7 JUMP JUMPDEST SWAP4 PUSH2 0x369 DUP7 PUSH2 0x28A7 JUMP JUMPDEST SWAP8 PUSH2 0x373 DUP8 PUSH2 0x28A7 JUMP JUMPDEST SWAP3 PUSH2 0x37D DUP9 PUSH2 0x28A7 JUMP JUMPDEST SWAP5 PUSH2 0x387 DUP10 PUSH2 0x28A7 JUMP JUMPDEST SWAP11 PUSH2 0x391 DUP11 PUSH2 0x28A7 JUMP JUMPDEST SWAP10 PUSH0 JUMPDEST DUP2 DUP2 LT PUSH2 0x5F5 JUMPI POP POP PUSH2 0x3A5 PUSH2 0x28ED JUMP JUMPDEST DUP5 PUSH1 0xC SLOAD AND SWAP2 PUSH1 0x7 SLOAD DUP7 PUSH1 0xB SLOAD AND DUP5 EXTCODESIZE ISZERO PUSH2 0x5A9 JUMPI DUP15 MLOAD PUSH4 0x3C2FDDC5 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0xE0 DUP2 DUP15 ADD MSTORE DUP14 SWAP10 SWAP1 SWAP7 DUP8 SWAP6 DUP7 SWAP6 SWAP2 SWAP1 PUSH2 0x3E4 SWAP1 PUSH1 0xE4 DUP9 ADD SWAP1 PUSH2 0x2606 JUMP JUMPDEST SWAP12 PUSH1 0x24 SWAP13 DUP3 DUP9 DUP3 SUB ADD PUSH1 0x24 DUP10 ADD MSTORE PUSH2 0x3FB SWAP2 PUSH2 0x271E JUMP JUMPDEST SWAP1 DUP7 DUP3 SUB ADD PUSH1 0x44 DUP8 ADD MSTORE PUSH2 0x40E SWAP2 PUSH2 0x2606 JUMP JUMPDEST SWAP3 PUSH1 0x64 DUP6 ADD MSTORE DUP1 PUSH1 0x84 DUP6 ADD MSTORE PUSH1 0xA4 DUP5 ADD MSTORE PUSH1 0xC4 DUP4 ADD MSTORE SUB DUP2 GAS PUSH0 SWAP5 DUP6 SWAP2 CALL DUP1 ISZERO PUSH2 0x5EB JUMPI PUSH2 0x5BE JUMPI JUMPDEST POP PUSH1 0x6 SLOAD PUSH1 0x9 SLOAD SWAP1 SWAP7 SWAP1 DUP4 AND SWAP3 DUP3 JUMPDEST DUP9 DUP2 LT PUSH2 0x4B3 JUMPI DUP13 DUP13 PUSH2 0x4AF DUP14 DUP14 PUSH32 0x279B343370F587AF7FB675AE7C8578E9C8ABCC373236AD02C501A4771FE7A7B8 DUP5 MLOAD PUSH1 0x20 DUP2 MSTORE DUP1 PUSH2 0x48B CALLER SWAP5 PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x271E JUMP JUMPDEST SUB SWAP1 LOG2 PUSH2 0x4A1 DUP4 MLOAD SWAP5 DUP5 DUP7 SWAP6 DUP7 MSTORE DUP6 ADD SWAP1 PUSH2 0x2606 JUMP JUMPDEST SWAP1 DUP4 DUP3 SUB PUSH1 0x20 DUP6 ADD MSTORE PUSH2 0x2606 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST DUP2 PUSH2 0x4BE DUP3 DUP13 PUSH2 0x28D9 JUMP JUMPDEST MLOAD AND DUP13 MLOAD DUP1 SWAP2 PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP3 MSTORE DUP8 DUP7 DUP4 ADD MSTORE DUP2 DUP10 PUSH1 0x20 SWAP5 DUP6 SWAP4 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x5B4 JUMPI DUP16 SWAP1 DUP11 SWAP5 SWAP4 DUP16 SWAP2 SWAP4 DUP14 SWAP5 DUP11 SWAP3 PUSH2 0x573 JUMPI JUMPDEST POP POP SWAP5 DUP5 SWAP2 PUSH1 0x1 SWAP7 PUSH2 0x506 DUP5 DUP8 PUSH2 0x28D9 JUMP JUMPDEST MSTORE PUSH2 0x511 DUP4 DUP7 PUSH2 0x28D9 JUMP JUMPDEST MLOAD PUSH2 0x51C DUP5 DUP5 PUSH2 0x28D9 JUMP JUMPDEST MLOAD LT ISZERO PUSH2 0x556 JUMPI POP PUSH2 0x548 SWAP1 PUSH2 0x541 DUP4 PUSH2 0x53A DUP2 PUSH2 0x54E SWAP8 SWAP9 PUSH2 0x28D9 JUMP JUMPDEST MLOAD SWAP3 PUSH2 0x28D9 JUMP JUMPDEST MLOAD SWAP1 PUSH2 0x2767 JUMP JUMPDEST SWAP3 PUSH2 0x28D9 JUMP JUMPDEST MSTORE JUMPDEST ADD PUSH2 0x446 JUMP JUMPDEST SWAP4 PUSH2 0x56D SWAP4 POP PUSH2 0x541 DUP4 PUSH2 0x53A DUP2 PUSH2 0x548 SWAP6 PUSH2 0x28D9 JUMP JUMPDEST MSTORE PUSH2 0x550 JUMP JUMPDEST SWAP5 POP SWAP6 POP POP POP POP DUP3 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x5AD JUMPI JUMPDEST PUSH2 0x58E DUP2 DUP4 PUSH2 0x27C0 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x5A9 JUMPI DUP9 DUP15 DUP3 DUP11 DUP16 PUSH1 0x1 SWAP7 MLOAD SWAP2 SWAP7 DUP2 SWAP4 POP PUSH2 0x4F4 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x584 JUMP JUMPDEST DUP15 MLOAD RETURNDATASIZE DUP9 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x5D8 JUMPI DUP9 MSTORE PUSH0 DUP11 PUSH2 0x437 JUMP JUMPDEST PUSH1 0x41 DUP7 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP11 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP6 PUSH2 0x5FF DUP3 PUSH2 0x2774 JUMP JUMPDEST POP SLOAD AND PUSH2 0x60C DUP3 DUP14 PUSH2 0x28D9 JUMP JUMPDEST MSTORE PUSH1 0x1 PUSH2 0x618 DUP3 PUSH2 0x2774 JUMP JUMPDEST POP ADD SLOAD PUSH2 0x625 DUP3 DUP6 PUSH2 0x28D9 JUMP JUMPDEST MSTORE DUP6 PUSH2 0x631 DUP3 DUP14 PUSH2 0x28D9 JUMP JUMPDEST MLOAD AND SWAP1 DUP14 MLOAD DUP1 SWAP3 PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP3 MSTORE DUP10 DUP14 DUP4 ADD MSTORE DUP2 PUSH1 0x24 PUSH1 0x20 SWAP4 DUP5 SWAP4 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x6A4 JUMPI PUSH0 SWAP2 PUSH2 0x675 JUMPI JUMPDEST POP PUSH1 0x1 SWAP3 POP PUSH2 0x66E DUP3 DUP12 PUSH2 0x28D9 JUMP JUMPDEST MSTORE ADD PUSH2 0x394 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x69D JUMPI JUMPDEST PUSH2 0x68B DUP2 DUP4 PUSH2 0x27C0 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x5A9 JUMPI PUSH1 0x1 SWAP2 MLOAD PUSH0 PUSH2 0x65F JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x681 JUMP JUMPDEST DUP16 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH8 0x6F05B59D3B20000 DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x309 PUSH2 0x2B77 JUMP JUMPDEST PUSH2 0x2660 JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x5A9 JUMPI PUSH2 0x70A PUSH2 0x25DA JUMP JUMPDEST SWAP1 PUSH1 0x24 SWAP2 DUP3 CALLDATALOAD SWAP4 PUSH8 0xFFFFFFFFFFFFFFFF DUP6 GT PUSH2 0x5A9 JUMPI CALLDATASIZE PUSH1 0x23 DUP7 ADD SLT ISZERO PUSH2 0x5A9 JUMPI DUP5 DUP2 ADD CALLDATALOAD SWAP4 PUSH2 0x739 DUP6 PUSH2 0x27F6 JUMP JUMPDEST SWAP5 PUSH2 0x746 DUP6 MLOAD SWAP7 DUP8 PUSH2 0x27C0 JUMP JUMPDEST DUP1 DUP7 MSTORE PUSH1 0x20 SWAP7 DUP3 DUP9 DUP9 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP2 CALLDATASIZE DUP4 GT PUSH2 0x5A9 JUMPI DUP4 DUP10 SWAP3 ADD SWAP1 JUMPDEST DUP4 DUP3 LT PUSH2 0xAB7 JUMPI POP POP PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP8 SWAP3 POP PUSH2 0x78A SWAP2 POP DUP8 AND CALLER EQ PUSH2 0x280E JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 PUSH0 SWAP1 PUSH2 0x798 PUSH2 0x28ED JUMP JUMPDEST SWAP1 PUSH1 0x6 SLOAD SWAP2 MLOAD DUP3 SUB PUSH2 0xA75 JUMPI DUP2 ISZERO PUSH2 0xA47 JUMPI SWAP1 PUSH0 SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0xA0E JUMPI POP POP POP DUP1 ISZERO PUSH2 0x9C1 JUMPI DUP4 DUP9 DUP9 PUSH1 0xB SLOAD AND DUP9 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH4 0x313CE567 PUSH1 0xE0 SHL DUP3 MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x9B7 JUMPI SWAP1 PUSH1 0xFF SWAP2 PUSH0 SWAP2 PUSH2 0x98A JUMPI JUMPDEST POP AND SWAP2 DUP1 PUSH2 0x8EC JUMPI POP PUSH8 0xDE0B6B3A7640000 DUP1 DUP3 MUL SWAP2 DUP3 DIV SUB PUSH2 0x8DA JUMPI SWAP1 PUSH2 0x810 SWAP2 PUSH2 0x2767 JUMP JUMPDEST SWAP5 JUMPDEST DUP6 ISZERO PUSH2 0x8A8 JUMPI PUSH2 0x843 DUP7 SWAP2 CALLER PUSH0 MSTORE PUSH0 DUP10 MSTORE DUP7 PUSH0 KECCAK256 SLOAD SWAP6 PUSH2 0x832 DUP5 DUP3 PUSH2 0x2C36 JUMP JUMPDEST AND SWAP5 DUP6 PUSH0 MSTORE PUSH0 DUP10 MSTORE DUP7 PUSH0 KECCAK256 SLOAD PUSH2 0x2767 JUMP JUMPDEST SUB PUSH2 0x878 JUMPI POP POP PUSH32 0xF6798A560793A54C3BCFE86A93CDE1E73087D944C0EA20544137D4121396885 DUP5 DUP4 MLOAD DUP6 DUP2 MSTORE LOG2 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP4 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP2 DUP3 ADD DUP7 SWAP1 MSTORE PUSH1 0xB SWAP1 DUP3 ADD MSTORE PUSH11 0x135A5B9D0811985A5B1959 PUSH1 0xAA SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP5 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP5 ADD DUP9 SWAP1 MSTORE PUSH1 0xD DUP2 DUP5 ADD MSTORE PUSH13 0x4D696E7420717479206973203 PUSH1 0x9C SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x11 DUP6 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE MSTORE PUSH0 REVERT JUMPDEST PUSH2 0x8F4 PUSH2 0x2BA2 JUMP JUMPDEST POP SWAP2 DUP3 ISZERO PUSH2 0x939 JUMPI PUSH2 0x90F SWAP3 SWAP2 PUSH2 0x90A SWAP2 PUSH2 0x2639 JUMP JUMPDEST PUSH2 0x2683 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 SWAP1 DUP2 DUP2 MUL SWAP2 DUP2 DUP4 DIV EQ SWAP1 ISZERO OR ISZERO PUSH2 0x8DA JUMPI SWAP1 PUSH2 0x933 SWAP2 PUSH2 0x2767 JUMP JUMPDEST SWAP5 PUSH2 0x812 JUMP JUMPDEST DUP8 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP8 ADD DUP12 SWAP1 MSTORE PUSH1 0x26 DUP2 DUP8 ADD MSTORE PUSH32 0x546F74616C206C6971756964697479206D757374206265206772656174657220 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x7468616E203 PUSH1 0xD4 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH2 0x9AA SWAP2 POP DUP11 RETURNDATASIZE DUP13 GT PUSH2 0x9B0 JUMPI JUMPDEST PUSH2 0x9A2 DUP2 DUP4 PUSH2 0x27C0 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x288E JUMP JUMPDEST DUP11 PUSH2 0x7E9 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x998 JUMP JUMPDEST DUP8 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP6 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP6 ADD DUP10 SWAP1 MSTORE PUSH1 0x22 DUP2 DUP6 ADD MSTORE PUSH32 0x546F74616C2076616C7565206D7573742062652067726561746572207468616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x203 PUSH1 0xF4 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 SWAP2 SWAP3 PUSH2 0xA3E PUSH1 0x1 SWAP2 PUSH2 0xA38 DUP13 PUSH2 0xA24 DUP9 PUSH2 0x2774 JUMP JUMPDEST POP SLOAD AND PUSH2 0xA31 DUP9 DUP8 PUSH2 0x28D9 JUMP JUMPDEST MLOAD SWAP1 PUSH2 0x3263 JUMP JUMPDEST SWAP1 PUSH2 0x275A JUMP JUMPDEST SWAP4 ADD SWAP2 SWAP1 PUSH2 0x7AE JUMP JUMPDEST DUP8 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP8 ADD DUP12 SWAP1 MSTORE PUSH1 0x9 DUP2 DUP8 ADD MSTORE PUSH9 0x4E6F20617373657473 PUSH1 0xB8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP8 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP8 ADD DUP12 SWAP1 MSTORE PUSH1 0x17 DUP2 DUP8 ADD MSTORE PUSH32 0x496E76616C6964207265736572766573206C656E677468000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE SWAP1 DUP3 ADD SWAP1 DUP3 ADD PUSH2 0x765 JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x5A9 JUMPI PUSH1 0x20 SWAP1 PUSH2 0xAE2 PUSH2 0x25DA JUMP JUMPDEST PUSH2 0xAEA PUSH2 0x25F0 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP2 AND PUSH0 MSTORE PUSH1 0x1 DUP5 MSTORE DUP3 PUSH0 KECCAK256 SWAP2 AND PUSH0 MSTORE DUP3 MSTORE DUP1 PUSH0 KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x5A9 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI CALLDATALOAD PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x5A9 JUMPI PUSH2 0xB36 SWAP1 PUSH2 0x2774 JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD SWAP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x5A9 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI DUP1 CALLDATALOAD SWAP1 PUSH2 0xB79 PUSH2 0x2BA2 JUMP JUMPDEST DUP1 SWAP3 SWAP2 POP MLOAD DUP4 LT ISZERO PUSH2 0xB9A JUMPI PUSH1 0x20 DUP5 PUSH2 0xB92 DUP6 DUP6 PUSH2 0x28D9 JUMP JUMPDEST MLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x20 DUP6 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x92DCECC2D8D2C840C2E6E6CAE840D2DCC8CAF PUSH1 0x6B SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI PUSH1 0xB SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH0 DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI PUSH1 0xA SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH2 0x26A1 JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x8 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH8 0x1BC16D674EC7FFFF DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH8 0x16345785D8A0000 DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x309 PUSH2 0xCDB PUSH2 0xCE1 PUSH2 0xCED PUSH2 0xCE7 PUSH2 0x2EE PUSH2 0xCE1 PUSH2 0x2E8 PUSH2 0xCCE CALLDATASIZE PUSH2 0x26F8 JUMP JUMPDEST SWAP9 SWAP5 SWAP7 SWAP3 SWAP12 SWAP2 SWAP1 SWAP4 PUSH2 0x2E60 JUMP JUMPDEST SWAP7 PUSH2 0x31C9 JUMP JUMPDEST SWAP1 PUSH2 0x31AA JUMP JUMPDEST DUP3 PUSH2 0x2EC5 JUMP JUMPDEST PUSH2 0x31C9 JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH1 0x2 DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x309 PUSH2 0xD48 PUSH2 0x25DA JUMP JUMPDEST PUSH2 0x2AFF JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH1 0x8 DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x5A9 JUMPI PUSH1 0x20 SWAP1 PUSH2 0xD91 PUSH2 0xD87 PUSH2 0x25DA JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x2CF8 JUMP JUMPDEST MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI PUSH2 0x309 PUSH2 0xDCE PUSH2 0xDC0 PUSH1 0x20 SWAP5 PUSH1 0x24 CALLDATALOAD SWAP1 CALLDATALOAD PUSH2 0x2E60 JUMP JUMPDEST PUSH2 0x2E8 PUSH1 0x64 CALLDATALOAD PUSH1 0x44 CALLDATALOAD PUSH2 0x2E60 JUMP JUMPDEST PUSH2 0xCE1 PUSH2 0xDDC PUSH1 0x84 CALLDATALOAD PUSH2 0x31C9 JUMP JUMPDEST PUSH2 0x2DF9 JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI MLOAD PUSH6 0x42524F4E5A45 PUSH1 0xD0 SHL DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH8 0x4A03CE68D215556 DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI DUP1 MLOAD SWAP1 PUSH0 SWAP3 DUP1 SLOAD SWAP1 PUSH1 0x1 DUP3 PUSH1 0x1 SHR SWAP2 PUSH1 0x1 DUP5 AND SWAP4 DUP5 ISZERO PUSH2 0xF1A JUMPI JUMPDEST PUSH1 0x20 SWAP5 DUP6 DUP6 LT DUP2 EQ PUSH2 0xF07 JUMPI DUP5 DUP9 MSTORE SWAP1 DUP2 ISZERO PUSH2 0xEE5 JUMPI POP PUSH1 0x1 EQ PUSH2 0xE8C JUMPI JUMPDEST PUSH2 0x4AF DUP7 DUP7 PUSH2 0xE82 DUP3 DUP12 SUB DUP4 PUSH2 0x27C0 JUMP JUMPDEST MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x25B0 JUMP JUMPDEST PUSH0 SWAP1 DUP2 MSTORE SWAP3 SWAP6 POP PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B JUMPDEST DUP3 DUP5 LT PUSH2 0xED2 JUMPI POP POP POP DUP3 PUSH2 0x4AF SWAP5 PUSH2 0xE82 SWAP3 DUP3 ADD ADD SWAP5 DUP7 PUSH2 0xE71 JUMP JUMPDEST DUP1 SLOAD DUP7 DUP6 ADD DUP9 ADD MSTORE SWAP3 DUP7 ADD SWAP3 DUP2 ADD PUSH2 0xEB5 JUMP JUMPDEST PUSH1 0xFF NOT AND DUP8 DUP7 ADD MSTORE POP POP POP ISZERO ISZERO PUSH1 0x5 SHL DUP4 ADD ADD SWAP3 POP PUSH2 0xE82 DUP3 PUSH2 0x4AF DUP7 PUSH2 0xE71 JUMP JUMPDEST PUSH1 0x22 DUP4 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP3 PUSH1 0x7F AND SWAP3 PUSH2 0xE52 JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH9 0x56BC75E2D63100000 DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI PUSH1 0x20 SWAP1 PUSH2 0xF63 PUSH2 0x2AA9 JUMP JUMPDEST SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI PUSH1 0x20 SWAP1 DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x5A9 JUMPI PUSH2 0xF88 PUSH2 0x25DA JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 PUSH2 0xFA2 CALLER DUP5 EQ PUSH2 0x280E JUMP JUMPDEST ADDRESS PUSH0 MSTORE PUSH0 DUP6 MSTORE DUP4 PUSH0 KECCAK256 SLOAD SWAP6 DUP7 ISZERO PUSH2 0x1348 JUMPI PUSH1 0x2 SLOAD SWAP7 DUP8 ISZERO PUSH2 0x1316 JUMPI PUSH1 0x6 SLOAD PUSH2 0xFC9 DUP2 PUSH2 0x28A7 JUMP JUMPDEST SWAP9 PUSH1 0x1E DUP4 MUL DUP4 DUP2 DIV PUSH1 0x1E SUB PUSH2 0x1303 JUMPI PUSH2 0x2710 PUSH2 0xFE7 SWAP2 DIV DUP1 SWAP5 PUSH2 0x2767 JUMP JUMPDEST SWAP7 PUSH0 JUMPDEST DUP4 DUP2 LT PUSH2 0x1248 JUMPI POP POP POP POP ADDRESS PUSH0 MSTORE PUSH0 DUP8 MSTORE DUP5 DUP7 PUSH0 KECCAK256 SLOAD LT PUSH2 0x1205 JUMPI DUP2 DUP8 DUP6 PUSH1 0xC SLOAD AND DUP9 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH4 0x61D027B3 PUSH1 0xE0 SHL DUP3 MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x9B7 JUMPI SWAP1 DUP9 SWAP2 PUSH0 SWAP2 PUSH2 0x11CB JUMPI JUMPDEST POP DUP8 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP5 DUP3 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP3 SWAP1 DUP2 SWAP1 PUSH1 0x40 ADD JUMPDEST SUB DUP2 PUSH0 ADDRESS GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x11C1 JUMPI PUSH0 SWAP2 PUSH2 0x118B JUMPI JUMPDEST POP ISZERO PUSH2 0x1152 JUMPI ADDRESS ISZERO PUSH2 0x113C JUMPI ADDRESS PUSH0 MSTORE PUSH0 DUP7 MSTORE DUP5 PUSH0 KECCAK256 SLOAD SWAP1 DUP5 DUP3 LT PUSH2 0x1111 JUMPI POP DUP4 SWAP3 PUSH32 0xCC16F5DBB4873280815C1EE09DBD06736CFFCC184412CF7A71A0FDB75D397CA5 SWAP3 PUSH2 0x4AF SWAP7 SWAP6 DUP9 SWAP4 ADDRESS PUSH0 MSTORE PUSH0 DUP6 MSTORE SUB DUP7 PUSH0 KECCAK256 SSTORE DUP5 PUSH1 0x2 SLOAD SUB PUSH1 0x2 SSTORE PUSH0 DUP7 MLOAD DUP7 DUP2 MSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP6 ADDRESS SWAP3 LOG3 DUP6 MLOAD SWAP5 DUP6 MSTORE AND SWAP3 LOG2 MLOAD SWAP3 DUP3 DUP5 SWAP4 DUP5 MSTORE DUP4 ADD SWAP1 PUSH2 0x2606 JUMP JUMPDEST DUP6 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE ADDRESS SWAP2 DUP2 ADD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 DUP2 ADD DUP6 SWAP1 MSTORE DUP2 SWAP1 PUSH1 0x60 ADD SUB SWAP1 REVERT JUMPDEST PUSH1 0x24 SWAP1 PUSH0 DUP7 MLOAD SWAP2 PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST DUP5 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x119959481D1C985B9CD9995C8819985A5B1959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 POP DUP7 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x11BA JUMPI JUMPDEST PUSH2 0x11A2 DUP2 DUP4 PUSH2 0x27C0 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x5A9 JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x5A9 JUMPI DUP9 PUSH2 0x1072 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1198 JUMP JUMPDEST DUP7 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP3 DUP2 SWAP4 SWAP3 POP RETURNDATASIZE DUP4 GT PUSH2 0x11FE JUMPI JUMPDEST PUSH2 0x11E2 DUP2 DUP4 PUSH2 0x27C0 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x5A9 JUMPI MLOAD DUP5 DUP2 AND DUP2 SUB PUSH2 0x5A9 JUMPI DUP8 SWAP1 PUSH2 0x105E PUSH2 0x102F JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x11D8 JUMP JUMPDEST DUP6 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP4 ADD DUP9 SWAP1 MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E742042414C554E49206C6971756964697479000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x128A DUP12 DUP10 PUSH2 0x1256 DUP5 PUSH2 0x2774 JUMP JUMPDEST POP SLOAD DUP14 MLOAD PUSH4 0xA3E113FB PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS DUP12 DUP3 ADD SWAP1 DUP2 MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP4 ADD MSTORE SWAP3 DUP4 SWAP2 DUP3 SWAP2 PUSH1 0x40 SWAP1 SWAP2 ADD SWAP1 JUMP JUMPDEST SUB DUP2 DUP7 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x12F9 JUMPI DUP11 DUP6 SWAP4 SWAP3 DUP16 SWAP3 PUSH0 SWAP2 PUSH2 0x12BF JUMPI JUMPDEST POP PUSH2 0x548 PUSH1 0x1 SWAP6 PUSH2 0x90A PUSH2 0x12B8 SWAP5 DUP8 SWAP5 PUSH2 0x2639 JUMP JUMPDEST MSTORE ADD PUSH2 0xFEA JUMP JUMPDEST SWAP5 POP POP POP POP DUP12 DUP3 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x12F2 JUMPI JUMPDEST PUSH2 0x12D9 DUP2 DUP4 PUSH2 0x27C0 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x5A9 JUMPI SWAP1 MLOAD DUP4 SWAP2 SWAP1 DUP14 SWAP1 DUP12 SWAP1 PUSH2 0x548 PUSH2 0x12A3 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x12CF JUMP JUMPDEST DUP12 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x11 DUP6 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP6 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP4 ADD DUP9 SWAP1 MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x4E6F206C6971756964697479 PUSH1 0xA0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP5 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5368617265206D7573742062652067726561746572207468616E203000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI PUSH2 0x13A4 PUSH2 0x29C2 JUMP JUMPDEST DUP3 MLOAD SWAP3 DUP4 SWAP2 DUP2 DUP4 ADD SWAP2 DUP4 MSTORE DUP4 MLOAD DUP1 SWAP3 MSTORE PUSH1 0x60 DUP4 ADD SWAP2 PUSH1 0x20 DUP1 SWAP6 ADD SWAP5 PUSH0 JUMPDEST DUP3 DUP2 LT PUSH2 0x13DC JUMPI DUP6 DUP1 PUSH2 0x4AF DUP8 DUP8 DUP4 DUP3 SUB PUSH1 0x20 DUP6 ADD MSTORE PUSH2 0x2606 JUMP JUMPDEST DUP7 MLOAD ISZERO ISZERO DUP6 MSTORE SWAP6 DUP2 ADD SWAP6 DUP8 SWAP6 POP SWAP4 DUP2 ADD SWAP4 PUSH1 0x1 ADD PUSH2 0x13C1 JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI PUSH2 0x1411 PUSH2 0x1407 CALLDATASIZE PUSH2 0x26F8 JUMP JUMPDEST SWAP6 SWAP2 SWAP1 SWAP3 SWAP4 PUSH2 0x2E60 JUMP JUMPDEST SWAP6 PUSH8 0xDE0B6B3A7640000 SWAP2 DUP3 DUP2 MUL SWAP1 DUP1 ISZERO SWAP1 DUP1 DUP4 DIV DUP6 EQ DUP3 OR ISZERO PUSH2 0x14D6 JUMPI SWAP1 DUP5 PUSH2 0x1443 SWAP3 DUP3 ISZERO PUSH2 0x14C2 JUMPI JUMPDEST POP POP PUSH2 0x30FE JUMP JUMPDEST PUSH8 0x6F05B59D3B20000 DUP2 ADD SWAP2 DUP3 DUP3 GT PUSH2 0x14AF JUMPI POP PUSH2 0x14A9 DUP6 PUSH2 0x14A3 PUSH1 0x20 SWAP11 SWAP8 PUSH2 0x149E PUSH2 0x148F PUSH2 0xCE1 SWAP10 PUSH2 0x304 PUSH2 0xCED SWAP11 DUP11 PUSH2 0x309 SWAP16 SWAP12 PUSH2 0x149E SWAP12 PUSH2 0x1488 SWAP2 LT ISZERO PUSH2 0x30FE JUMP JUMPDEST DIV DUP3 PUSH2 0x321B JUMP JUMPDEST PUSH2 0x1498 DUP12 PUSH2 0x2DF9 JUMP JUMPDEST SWAP1 PUSH2 0x2F12 JUMP JUMPDEST PUSH2 0x31AA JUMP JUMPDEST SWAP1 PUSH2 0x321B JUMP JUMPDEST SWAP5 PUSH2 0x31C9 JUMP JUMPDEST PUSH1 0x11 SWAP1 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x14CE SWAP2 SWAP3 POP DUP5 PUSH2 0x2683 JUMP JUMPDEST EQ DUP5 DUP12 PUSH2 0x143C JUMP JUMPDEST PUSH1 0x11 DUP5 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH3 0xF4240 DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x309 PUSH2 0xCED PUSH2 0x154C PUSH2 0x1542 PUSH2 0x149E PUSH2 0xCE7 PUSH2 0x2EE PUSH2 0xCE1 PUSH2 0x304 PUSH2 0x1533 CALLDATASIZE PUSH2 0x26F8 JUMP JUMPDEST SWAP9 SWAP5 SWAP7 SWAP3 SWAP13 SWAP2 DUP14 SWAP12 SWAP2 SWAP5 PUSH2 0x2E60 JUMP JUMPDEST SWAP8 PUSH2 0x149E DUP10 PUSH2 0x31C9 JUMP JUMPDEST PUSH2 0x321B JUMP JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x5A9 JUMPI PUSH2 0x1582 PUSH2 0xCED PUSH2 0x14A3 PUSH2 0x1542 PUSH2 0x149E PUSH2 0x157C PUSH2 0x2EE PUSH2 0x2E8 PUSH2 0x304 PUSH2 0x1533 CALLDATASIZE PUSH2 0x26F8 JUMP JUMPDEST DUP3 PUSH2 0x321B JUMP JUMPDEST SWAP2 PUSH8 0xDE0B6B3A7640000 SWAP1 DUP2 DUP5 MUL SWAP4 DUP1 ISZERO SWAP1 DUP1 DUP7 DIV DUP5 EQ DUP3 OR ISZERO PUSH2 0x1303 JUMPI SWAP1 DUP4 PUSH2 0x15B4 SWAP3 DUP3 ISZERO PUSH2 0x15DD JUMPI JUMPDEST POP POP PUSH2 0x2DBA JUMP JUMPDEST PUSH8 0x6F05B59D3B20000 DUP5 ADD SWAP3 DUP4 DUP6 GT PUSH2 0x14AF JUMPI POP PUSH2 0x15D6 PUSH1 0x20 SWAP5 DUP5 LT ISZERO PUSH2 0x2DBA JUMP JUMPDEST MLOAD SWAP2 DIV DUP2 MSTORE RETURN JUMPDEST PUSH2 0x15E9 SWAP2 SWAP3 POP DUP8 PUSH2 0x2683 JUMP JUMPDEST EQ DUP4 DUP8 PUSH2 0x15AD JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x7 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI PUSH1 0x9 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH5 0xE8D4A51000 DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x167B PUSH2 0x25DA JUMP JUMPDEST AND PUSH0 MSTORE PUSH0 DUP3 MSTORE DUP1 PUSH0 KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x5A9 JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI PUSH2 0x16A7 PUSH2 0x25DA JUMP JUMPDEST SWAP2 PUSH2 0x16B0 PUSH2 0x25F0 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 PUSH1 0x64 CALLDATALOAD DUP4 DUP2 AND SWAP2 SWAP1 DUP3 SWAP1 SUB PUSH2 0x5A9 JUMPI PUSH1 0x2 PUSH1 0x5 SLOAD EQ PUSH2 0x1AD0 JUMPI PUSH1 0x2 PUSH1 0x5 SSTORE DUP4 DUP4 AND SWAP4 DUP8 AND SWAP3 DUP5 DUP5 EQ PUSH2 0x1A8D JUMPI DUP7 ISZERO PUSH2 0x1A4A JUMPI PUSH2 0x16F9 DUP2 PUSH2 0x2AFF JUMP JUMPDEST SWAP8 PUSH2 0x1703 DUP2 PUSH2 0x2AFF JUMP JUMPDEST SWAP1 PUSH2 0x3E8 SWAP1 DUP2 PUSH2 0x1712 DUP3 PUSH2 0x2CAB JUMP JUMPDEST DIV SWAP11 PUSH8 0xDE0B6B3A7640000 SWAP12 DUP13 DUP2 MUL SWAP1 DUP14 DUP2 DUP4 DIV EQ SWAP1 ISZERO OR ISZERO PUSH2 0x1A37 JUMPI DUP13 SWAP1 DUP5 PUSH2 0x173B DUP9 PUSH2 0x2CAB JUMP JUMPDEST DIV DUP3 DUP2 MUL SWAP3 DUP2 DUP5 DIV EQ SWAP1 ISZERO OR ISZERO PUSH2 0x19CB JUMPI PUSH2 0x176C SWAP2 PUSH2 0x2E8 PUSH2 0x1760 PUSH2 0x1767 SWAP4 DUP10 PUSH2 0x2E60 JUMP JUMPDEST SWAP2 DUP6 PUSH2 0x2E60 JUMP JUMPDEST PUSH2 0x313D JUMP JUMPDEST SWAP3 DUP13 DUP2 PUSH2 0x1778 DUP6 PUSH2 0x2CAB JUMP JUMPDEST DIV DUP2 DUP2 MUL SWAP2 DUP2 DUP4 DIV EQ SWAP1 ISZERO OR ISZERO PUSH2 0x19CB JUMPI DUP14 SWAP1 DUP3 PUSH2 0x1795 DUP10 PUSH2 0x2CAB JUMP JUMPDEST DIV DUP3 DUP2 MUL SWAP3 DUP2 DUP5 DIV EQ SWAP1 ISZERO OR ISZERO PUSH2 0x1A24 JUMPI SWAP1 PUSH2 0x17B0 SWAP2 PUSH2 0x2E60 JUMP JUMPDEST DUP13 PUSH8 0xDE0B6B3A763FFE2 DUP1 DUP3 MUL SWAP2 DUP3 DIV DUP2 SUB PUSH2 0x1A11 JUMPI PUSH2 0x17DB SWAP1 DUP16 PUSH2 0x17D5 SWAP1 DUP5 PUSH2 0x2683 JUMP JUMPDEST EQ PUSH2 0x30FE JUMP JUMPDEST PUSH8 0x6F05B59D3B20000 DUP2 ADD SWAP1 DUP2 DUP2 GT PUSH2 0x1A11 JUMPI DUP16 SWAP3 PUSH2 0x2EE PUSH2 0x1814 PUSH2 0x1820 SWAP6 DUP6 PUSH2 0x180D PUSH2 0xCED SWAP7 PUSH2 0x181A SWAP9 LT ISZERO PUSH2 0x30FE JUMP JUMPDEST DIV DUP12 PUSH2 0x2EC5 JUMP JUMPDEST DUP11 PUSH2 0x2E60 JUMP JUMPDEST DUP4 PUSH2 0x31AA JUMP JUMPDEST SWAP5 PUSH1 0x1 DUP7 LT PUSH2 0x19DE JUMPI SWAP1 DUP1 PUSH2 0x184C DUP16 SWAP5 SWAP4 DUP16 PUSH2 0x1840 DUP11 SWAP2 PUSH2 0x1846 SWAP4 PUSH2 0x2EC5 JUMP JUMPDEST SWAP6 PUSH2 0x321B JUMP JUMPDEST SWAP6 PUSH2 0x2CAB JUMP JUMPDEST DIV DUP4 DUP2 MUL SWAP4 DUP2 DUP6 DIV EQ SWAP1 ISZERO OR ISZERO PUSH2 0x19CB JUMPI SWAP1 DUP14 SWAP3 SWAP2 PUSH2 0x186A DUP9 PUSH2 0x2CAB JUMP JUMPDEST DIV DUP4 DUP2 MUL SWAP4 DUP2 DUP6 DIV EQ SWAP1 ISZERO OR ISZERO PUSH2 0x19CB JUMPI PUSH2 0x1767 DUP6 SWAP5 PUSH2 0x2E8 PUSH2 0x18A5 SWAP6 PUSH2 0x1898 PUSH2 0x18AF SWAP10 SWAP7 PUSH2 0x189E SWAP7 PUSH2 0x2E60 JUMP JUMPDEST SWAP3 PUSH2 0x2E60 JUMP JUMPDEST LT ISZERO PUSH2 0x3225 JUMP JUMPDEST PUSH2 0x189E DUP4 DUP12 PUSH2 0x2E60 JUMP JUMPDEST DUP7 MLOAD PUSH4 0x313CE567 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x20 SWAP10 SWAP1 DUP11 DUP2 DUP7 DUP2 DUP12 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x19C1 JUMPI SWAP1 PUSH1 0xFF SWAP2 PUSH0 SWAP2 PUSH2 0x19A4 JUMPI JUMPDEST POP AND SWAP1 SUB PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 DUP2 DUP2 GT PUSH2 0x1303 JUMPI SWAP2 PUSH2 0x18FF SWAP2 PUSH2 0x1907 SWAP6 SWAP5 SWAP4 AND SWAP1 PUSH2 0x2683 JUMP JUMPDEST SWAP3 DUP4 SWAP2 PUSH2 0x2AFF JUMP JUMPDEST LT PUSH2 0x1968 JUMPI PUSH1 0x1E DUP3 MUL SWAP1 DUP3 DUP3 DIV PUSH1 0x1E EQ DUP4 ISZERO OR ISZERO PUSH2 0x14AF JUMPI POP PUSH2 0x1951 PUSH32 0xCD3829A3813DC3CDD188FD3D01DCF3268C16BE2FDD2DD21D0665418816E46062 SWAP3 PUSH2 0x2710 DUP9 SWAP4 DIV SWAP1 PUSH2 0x2767 JUMP JUMPDEST SWAP7 DUP2 MLOAD SWAP1 DUP2 MSTORE DUP8 DUP10 DUP3 ADD MSTORE LOG4 PUSH1 0x1 PUSH1 0x5 SSTORE MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP6 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x496E73756666696369656E74204C6971756964697479 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x19BB SWAP2 POP DUP13 DUP14 RETURNDATASIZE LT PUSH2 0x9B0 JUMPI PUSH2 0x9A2 DUP2 DUP4 PUSH2 0x27C0 JUMP JUMPDEST DUP13 PUSH2 0x18D8 JUMP JUMPDEST DUP10 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x11 DUP9 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP12 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP11 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x11549497D31253525517D3D555 PUSH1 0x9A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x11 DUP11 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x11 DUP10 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x11 DUP8 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP6 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP5 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E207A65726F PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP6 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP5 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F742073776170207468652073616D6520746F6B656E000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP5 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE REVERT JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI PUSH1 0x6 SLOAD PUSH2 0x1AFB DUP2 PUSH2 0x28A7 JUMP JUMPDEST SWAP1 PUSH0 JUMPDEST DUP2 DUP2 LT PUSH2 0x1B1A JUMPI DUP4 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 SWAP1 PUSH2 0x4AF SWAP1 DUP3 ADD DUP7 PUSH2 0x271E JUMP JUMPDEST DUP1 PUSH2 0x1B26 PUSH1 0x1 SWAP3 PUSH2 0x2774 JUMP JUMPDEST POP DUP3 DUP1 PUSH1 0xA0 SHL SUB SWAP1 SLOAD AND PUSH2 0x1B3A DUP3 DUP7 PUSH2 0x28D9 JUMP JUMPDEST MSTORE ADD PUSH2 0x1AFE JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH1 0x1E DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x309 PUSH2 0x1B9C PUSH2 0x2E8 PUSH2 0xCED PUSH2 0x149E PUSH2 0x149E PUSH2 0x14A9 PUSH2 0x148F PUSH2 0x154C PUSH2 0x304 PUSH2 0x1B8C CALLDATASIZE PUSH2 0x26F8 JUMP JUMPDEST SWAP11 SWAP5 SWAP8 SWAP4 SWAP2 DUP9 SWAP7 SWAP3 SWAP15 SWAP2 SWAP15 PUSH2 0x2E60 JUMP JUMPDEST SWAP13 DUP3 PUSH2 0x2EC5 JUMP JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x5A9 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x5A9 JUMPI PUSH2 0x1BBD PUSH2 0x25DA JUMP JUMPDEST SWAP2 PUSH2 0x1BC6 PUSH2 0x25F0 JUMP JUMPDEST PUSH2 0x1BCF DUP5 PUSH2 0x2AFF JUMP JUMPDEST POP PUSH2 0x1BD9 DUP2 PUSH2 0x2AFF JUMP JUMPDEST POP DUP2 MLOAD PUSH4 0x313CE567 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x20 SWAP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP7 DUP2 DUP8 DUP2 DUP6 DUP8 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x1CDA JUMPI SWAP1 PUSH1 0xFF SWAP2 PUSH0 SWAP2 PUSH2 0x1CBD JUMPI JUMPDEST POP AND SWAP2 PUSH1 0xC SLOAD AND SWAP2 PUSH1 0x4D DUP2 GT PUSH2 0x1CAA JUMPI DUP5 MLOAD PUSH4 0x248391FF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP7 DUP2 ADD SWAP7 DUP8 MSTORE SWAP4 SWAP1 SWAP2 AND PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0xA EXP PUSH1 0x40 DUP6 ADD MSTORE SWAP1 SWAP3 DUP5 SWAP2 DUP5 SWAP2 DUP3 SWAP1 DUP2 SWAP1 PUSH1 0x60 ADD SUB SWAP2 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x1CA0 JUMPI PUSH0 SWAP3 PUSH2 0x1C71 JUMPI JUMPDEST POP MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 SWAP2 POP DUP3 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x1C99 JUMPI JUMPDEST PUSH2 0x1C89 DUP2 DUP4 PUSH2 0x27C0 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x5A9 JUMPI MLOAD SWAP1 DUP4 PUSH2 0x1C6A JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1C7F JUMP JUMPDEST POP MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x11 DUP7 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1CD4 SWAP2 POP DUP9 RETURNDATASIZE DUP11 GT PUSH2 0x9B0 JUMPI PUSH2 0x9A2 DUP2 DUP4 PUSH2 0x27C0 JUMP JUMPDEST DUP9 PUSH2 0x1C0D JUMP JUMPDEST DUP6 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI PUSH1 0x20 PUSH2 0x1CF5 CALLDATASIZE PUSH2 0x26C3 JUMP JUMPDEST PUSH1 0xC SLOAD DUP6 MLOAD PUSH4 0x248391FF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND SWAP8 DUP2 ADD SWAP8 DUP9 MSTORE SWAP3 DUP5 AND PUSH1 0x20 DUP9 ADD MSTORE PUSH1 0x40 DUP8 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP5 DUP6 SWAP3 SWAP1 DUP4 SWAP1 SUB PUSH1 0x60 ADD SWAP2 DUP4 SWAP2 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x1D83 JUMPI PUSH0 SWAP2 PUSH2 0x1D4E JUMPI JUMPDEST PUSH1 0x20 SWAP3 POP MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 POP PUSH1 0x20 DUP3 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1D7B JUMPI JUMPDEST DUP2 PUSH2 0x1D69 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x27C0 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x5A9 JUMPI PUSH1 0x20 SWAP2 MLOAD SWAP1 PUSH2 0x1D44 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x1D5C JUMP JUMPDEST MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI PUSH2 0x4AF PUSH2 0x1DA8 PUSH2 0x2BA2 JUMP JUMPDEST DUP4 SWAP3 SWAP2 SWAP3 MLOAD SWAP4 DUP5 SWAP4 DUP5 MSTORE DUP1 PUSH1 0x20 DUP6 ADD MSTORE DUP4 ADD SWAP1 PUSH2 0x2606 JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH1 0x12 DUP2 MSTORE RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x5A9 JUMPI PUSH2 0x1DEB CALLDATASIZE PUSH2 0x26C3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE DUP9 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 MSTORE SWAP1 DUP8 SWAP1 KECCAK256 SLOAD SWAP3 SWAP6 SWAP4 SWAP5 SWAP4 SWAP1 DUP4 ADD PUSH2 0x1E28 JUMPI JUMPDEST PUSH1 0x20 DUP8 PUSH2 0xD91 DUP9 DUP9 DUP9 PUSH2 0x2CF8 JUMP JUMPDEST DUP6 DUP4 LT PUSH2 0x1E90 JUMPI DUP2 ISZERO PUSH2 0x1E7A JUMPI CALLER ISZERO PUSH2 0x1E64 JUMPI POP PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE DUP7 DUP3 KECCAK256 CALLER DUP4 MSTORE DUP2 MSTORE SWAP1 DUP7 SWAP1 KECCAK256 SWAP2 DUP6 SWAP1 SUB SWAP1 SWAP2 SSTORE DUP3 SWAP1 PUSH2 0xD91 PUSH2 0x1E1A JUMP JUMPDEST PUSH1 0x24 SWAP1 PUSH0 DUP9 MLOAD SWAP2 PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x24 SWAP1 PUSH0 DUP9 MLOAD SWAP2 PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST DUP7 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE CALLER SWAP2 DUP2 ADD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 DUP2 ADD DUP7 SWAP1 MSTORE DUP3 SWAP2 POP PUSH1 0x60 ADD SUB SWAP1 REVERT JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI PUSH1 0x6 SLOAD PUSH2 0x1ED9 DUP2 PUSH2 0x28A7 JUMP JUMPDEST SWAP1 PUSH0 JUMPDEST DUP2 DUP2 LT PUSH2 0x1EF8 JUMPI DUP4 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 SWAP1 PUSH2 0x4AF SWAP1 DUP3 ADD DUP7 PUSH2 0x2606 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH2 0x1F05 DUP2 SWAP4 PUSH2 0x2774 JUMP JUMPDEST POP ADD SLOAD PUSH2 0x1F12 DUP3 DUP7 PUSH2 0x28D9 JUMP JUMPDEST MSTORE ADD PUSH2 0x1EDC JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x1F35 PUSH2 0x2BA2 JUMP JUMPDEST POP SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH4 0x5F5E100 DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x2 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x5A9 JUMPI PUSH2 0x1F92 PUSH2 0x25DA JUMP JUMPDEST PUSH2 0x1F9A PUSH2 0x25F0 JUMP JUMPDEST SWAP3 PUSH2 0x1FA4 DUP3 PUSH2 0x2AFF JUMP JUMPDEST SWAP4 PUSH2 0x1FAE DUP2 PUSH2 0x2AFF JUMP JUMPDEST DUP5 MLOAD PUSH4 0x313CE567 PUSH1 0xE0 SHL DUP1 DUP3 MSTORE PUSH1 0x20 SWAP8 SWAP2 SWAP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP10 DUP8 DUP6 DUP2 DUP12 DUP10 AND GAS STATICCALL SWAP7 DUP8 ISZERO PUSH2 0x19C1 JUMPI SWAP1 DUP11 SWAP2 PUSH0 SWAP9 PUSH2 0x20DB JUMPI JUMPDEST POP DUP5 DUP11 MLOAD DUP1 SWAP8 DUP2 SWAP4 DUP3 MSTORE DUP10 AND GAS STATICCALL SWAP4 DUP5 ISZERO PUSH2 0x20D1 JUMPI PUSH0 SWAP5 PUSH2 0x20B2 JUMPI JUMPDEST POP PUSH8 0xDE0B6B3A7640000 SWAP6 DUP7 DUP3 MUL SWAP2 DUP1 DUP4 DIV DUP9 EQ SWAP1 ISZERO OR ISZERO PUSH2 0x14D6 JUMPI SWAP1 PUSH1 0xFF PUSH2 0x202D SWAP3 AND SWAP1 PUSH2 0x2767 JUMP JUMPDEST SWAP3 DUP6 DUP3 MUL SWAP2 DUP1 DUP4 DIV DUP8 EQ SWAP1 ISZERO OR ISZERO PUSH2 0x209F JUMPI PUSH2 0x205C SWAP2 PUSH1 0xFF PUSH2 0x2050 SWAP3 AND SWAP1 PUSH2 0x2767 JUMP JUMPDEST SWAP6 PUSH2 0x3E8 SWAP2 DUP3 SWAP2 PUSH2 0x2CAB JUMP JUMPDEST DIV SWAP4 DUP6 DUP6 MUL SWAP5 DUP1 DUP7 DIV DUP8 EQ SWAP1 ISZERO OR ISZERO PUSH2 0x209F JUMPI PUSH2 0x2078 SWAP1 PUSH2 0x2CAB JUMP JUMPDEST DIV DUP5 DUP2 MUL SWAP5 DUP2 DUP7 DIV EQ SWAP1 ISZERO OR ISZERO PUSH2 0x14AF JUMPI POP PUSH2 0x1767 SWAP3 PUSH2 0x1898 PUSH2 0x309 SWAP6 SWAP4 PUSH2 0x2E8 SWAP4 PUSH2 0x2E60 JUMP JUMPDEST PUSH1 0x11 DUP4 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x20CA SWAP2 SWAP5 POP DUP10 RETURNDATASIZE DUP12 GT PUSH2 0x9B0 JUMPI PUSH2 0x9A2 DUP2 DUP4 PUSH2 0x27C0 JUMP JUMPDEST SWAP3 DUP10 PUSH2 0x2003 JUMP JUMPDEST DUP9 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x20F3 SWAP2 SWAP9 POP DUP3 RETURNDATASIZE DUP5 GT PUSH2 0x9B0 JUMPI PUSH2 0x9A2 DUP2 DUP4 PUSH2 0x27C0 JUMP JUMPDEST SWAP7 DUP12 PUSH2 0x1FE7 JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x5A9 JUMPI PUSH2 0x2113 PUSH2 0x25DA JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER ISZERO PUSH2 0x218C JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x2176 JUMPI PUSH1 0x20 SWAP4 POP CALLER PUSH0 MSTORE PUSH1 0x1 DUP5 MSTORE DUP3 PUSH0 KECCAK256 DUP3 PUSH0 MSTORE DUP5 MSTORE DUP1 DUP4 PUSH0 KECCAK256 SSTORE DUP3 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 CALLER SWAP3 LOG3 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST DUP3 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 DUP2 DUP7 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP3 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 DUP2 DUP7 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI PUSH2 0x4AF SWAP1 PUSH2 0x21BF PUSH2 0x28ED JUMP JUMPDEST SWAP1 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x2606 JUMP JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x5A9 JUMPI PUSH1 0x20 SWAP2 DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x5A9 JUMPI PUSH2 0x21EF PUSH2 0x25DA JUMP JUMPDEST SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP4 PUSH2 0x2207 DUP6 PUSH1 0x9 SLOAD AND CALLER EQ PUSH2 0x280E JUMP JUMPDEST PUSH2 0x2212 PUSH2 0x34D PUSH2 0x2AA9 JUMP JUMPDEST PUSH2 0x221A PUSH2 0x2BA2 JUMP JUMPDEST PUSH1 0x6 SLOAD SWAP5 SWAP2 PUSH2 0x2228 DUP7 PUSH2 0x28A7 JUMP JUMPDEST SWAP2 PUSH0 JUMPDEST DUP8 DUP2 LT PUSH2 0x2444 JUMPI POP POP POP PUSH0 SWAP1 PUSH0 JUMPDEST DUP7 DUP2 LT PUSH2 0x2425 JUMPI POP PUSH1 0xB SLOAD DUP4 MLOAD PUSH4 0x313CE567 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 DUP10 AND SWAP3 DUP6 DUP3 DUP9 DUP2 DUP8 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x1CDA JUMPI PUSH0 SWAP3 PUSH2 0x2406 JUMPI JUMPDEST POP PUSH1 0xFF PUSH8 0xDE0B6B3A7640000 SWAP3 AND DUP3 SUB SWAP2 DUP3 GT PUSH2 0x1A37 JUMPI PUSH2 0x2293 SWAP2 PUSH2 0x228D SWAP2 PUSH2 0x2639 JUMP JUMPDEST SWAP7 PUSH2 0x28A7 JUMP JUMPDEST SWAP6 PUSH0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x23AE JUMPI PUSH2 0x22A9 DUP2 DUP5 PUSH2 0x28D9 JUMP JUMPDEST MLOAD PUSH2 0x22B7 JUMPI JUMPDEST PUSH1 0x1 ADD PUSH2 0x2296 JUMP JUMPDEST PUSH2 0x22C1 DUP2 DUP5 PUSH2 0x28D9 JUMP JUMPDEST MLOAD DUP7 DUP12 PUSH2 0x22CD DUP5 PUSH2 0x2774 JUMP JUMPDEST POP SLOAD PUSH1 0xC SLOAD DUP10 MLOAD PUSH4 0x248391FF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 DUP2 AND DUP15 DUP4 ADD SWAP1 DUP2 MSTORE SWAP5 SWAP1 SWAP4 AND SWAP1 SWAP3 AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP3 DUP4 SWAP2 DUP3 SWAP1 SUB PUSH1 0x60 ADD SWAP1 DUP3 SWAP1 DUP16 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x11C1 JUMPI PUSH0 SWAP2 PUSH2 0x2381 JUMPI JUMPDEST POP DUP1 ISZERO PUSH2 0x233E JUMPI SWAP1 PUSH1 0x1 SWAP2 PUSH2 0x2336 DUP3 DUP12 PUSH2 0x28D9 JUMP JUMPDEST MSTORE SWAP1 POP PUSH2 0x22AF JUMP JUMPDEST DUP6 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP10 ADD DUP9 SWAP1 MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420746F6B656E20616D6F756E7420746F206164640000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 POP DUP7 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x23A7 JUMPI JUMPDEST PUSH2 0x2398 DUP2 DUP4 PUSH2 0x27C0 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x5A9 JUMPI MLOAD DUP12 PUSH2 0x2321 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x238E JUMP JUMPDEST DUP8 DUP7 PUSH2 0x4AF DUP8 DUP7 PUSH2 0x23BF DUP8 DUP16 PUSH2 0x2C36 JUMP JUMPDEST PUSH32 0xA95AD530009C6F929555E70A66AADBEAE7231E45756C5B028CA77FBAA376E73E DUP3 MLOAD DUP6 DUP2 MSTORE DUP1 PUSH2 0x23F4 CALLER SWAP5 DUP9 DUP4 ADD SWAP1 PUSH2 0x2606 JUMP JUMPDEST SUB SWAP1 LOG2 MLOAD SWAP3 DUP3 DUP5 SWAP4 DUP5 MSTORE DUP4 ADD SWAP1 PUSH2 0x2606 JUMP JUMPDEST PUSH2 0x241E SWAP2 SWAP3 POP DUP7 RETURNDATASIZE DUP9 GT PUSH2 0x9B0 JUMPI PUSH2 0x9A2 DUP2 DUP4 PUSH2 0x27C0 JUMP JUMPDEST SWAP1 DUP11 PUSH2 0x2269 JUMP JUMPDEST SWAP2 PUSH2 0x243D PUSH1 0x1 SWAP2 PUSH2 0x2436 DUP6 DUP6 PUSH2 0x28D9 JUMP JUMPDEST MLOAD SWAP1 PUSH2 0x275A JUMP JUMPDEST SWAP3 ADD PUSH2 0x2239 JUMP JUMPDEST DUP1 PUSH2 0x2710 PUSH2 0x2460 PUSH1 0x1 PUSH2 0x2457 DUP2 SWAP6 PUSH2 0x2774 JUMP JUMPDEST POP ADD SLOAD DUP7 PUSH2 0x2639 JUMP JUMPDEST DIV DUP1 PUSH2 0x246C DUP4 DUP7 PUSH2 0x28D9 JUMP JUMPDEST MLOAD LT PUSH2 0x247A JUMPI JUMPDEST POP ADD PUSH2 0x222B JUMP JUMPDEST PUSH2 0x2488 SWAP1 PUSH2 0x541 DUP4 DUP7 PUSH2 0x28D9 JUMP JUMPDEST PUSH2 0x2492 DUP3 DUP8 PUSH2 0x28D9 JUMP JUMPDEST MSTORE DUP12 PUSH2 0x2473 JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI DUP1 MLOAD SWAP1 PUSH0 SWAP3 PUSH1 0x3 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 SHR SWAP2 PUSH1 0x1 DUP2 AND DUP1 ISZERO PUSH2 0x2583 JUMPI JUMPDEST PUSH1 0x20 SWAP5 DUP6 DUP6 LT DUP3 EQ PUSH2 0x2570 JUMPI POP DUP4 DUP8 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x2550 JUMPI POP PUSH1 0x1 EQ PUSH2 0x24F6 JUMPI JUMPDEST POP POP POP PUSH2 0xE82 DUP3 PUSH2 0x4AF SWAP5 SUB DUP4 PUSH2 0x27C0 JUMP JUMPDEST PUSH1 0x3 PUSH0 SWAP1 DUP2 MSTORE SWAP3 SWAP6 POP PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B JUMPDEST DUP3 DUP5 LT PUSH2 0x253D JUMPI POP POP POP DUP3 PUSH2 0x4AF SWAP5 PUSH2 0xE82 SWAP3 DUP3 ADD ADD SWAP5 PUSH2 0x24E4 JUMP JUMPDEST DUP1 SLOAD DUP7 DUP6 ADD DUP9 ADD MSTORE SWAP3 DUP7 ADD SWAP3 DUP2 ADD PUSH2 0x2521 JUMP JUMPDEST PUSH1 0xFF NOT AND DUP7 DUP6 ADD MSTORE POP POP ISZERO ISZERO PUSH1 0x5 SHL DUP4 ADD ADD SWAP3 POP PUSH2 0xE82 DUP3 PUSH2 0x4AF PUSH2 0x24E4 JUMP JUMPDEST PUSH1 0x22 SWAP1 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP3 PUSH1 0x7F AND SWAP3 PUSH2 0x24C4 JUMP JUMPDEST CALLVALUE PUSH2 0x5A9 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH1 0x20 PUSH1 0x40 SWAP3 DUP2 DUP4 MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP2 DUP3 DUP3 DUP7 ADD MSTORE ADD DUP5 DUP5 ADD MCOPY PUSH0 DUP3 DUP3 ADD DUP5 ADD MSTORE PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x5A9 JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x5A9 JUMPI JUMP JUMPDEST SWAP1 DUP2 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP1 SWAP4 ADD SWAP4 ADD SWAP2 PUSH0 JUMPDEST DUP3 DUP2 LT PUSH2 0x2625 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x2617 JUMP JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x264C JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0x5A9 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH9 0x2B5E3AF16B1880000 DUP2 MSTORE RETURN JUMPDEST DUP2 ISZERO PUSH2 0x268D JUMPI DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0x5A9 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH8 0xDE0B6B3A7640000 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x60 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH1 0x4 CALLDATALOAD DUP3 DUP2 AND DUP2 SUB PUSH2 0x5A9 JUMPI SWAP2 PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 AND DUP2 SUB PUSH2 0x5A9 JUMPI SWAP1 PUSH1 0x44 CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0xC0 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x44 CALLDATALOAD SWAP1 PUSH1 0x64 CALLDATALOAD SWAP1 PUSH1 0x84 CALLDATALOAD SWAP1 PUSH1 0xA4 CALLDATALOAD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP1 SWAP4 ADD SWAP4 ADD SWAP2 PUSH0 JUMPDEST DUP3 DUP2 LT PUSH2 0x273D JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x272F JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x264C JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x264C JUMPI JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x27AC JUMPI PUSH1 0x6 PUSH0 MSTORE PUSH1 0x1 SHL PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F ADD SWAP1 PUSH0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x27E2 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x27E2 JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x2815 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x4F6E6C7920506572697068657279 PUSH1 0x90 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x2852 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x149958985B185B98D9481B9BDD081B9959591959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x5A9 JUMPI MLOAD PUSH1 0xFF DUP2 AND DUP2 SUB PUSH2 0x5A9 JUMPI SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x28B1 DUP3 PUSH2 0x27F6 JUMP JUMPDEST PUSH2 0x28BE PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x27C0 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP1 SWAP3 PUSH2 0x28CF PUSH1 0x1F NOT SWAP2 PUSH2 0x27F6 JUMP JUMPDEST ADD SWAP1 PUSH1 0x20 CALLDATASIZE SWAP2 ADD CALLDATACOPY JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x27AC JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD PUSH4 0xFA67079 PUSH1 0xE2 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 PUSH0 SWAP1 DUP3 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x29B7 JUMPI PUSH0 SWAP2 PUSH2 0x2929 JUMPI POP SWAP1 JUMP JUMPDEST SWAP1 POP RETURNDATASIZE DUP1 PUSH0 DUP4 RETURNDATACOPY PUSH2 0x293A DUP2 DUP4 PUSH2 0x27C0 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 SWAP1 DUP2 DUP2 DUP5 SUB SLT PUSH2 0x5A9 JUMPI DUP1 MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x5A9 JUMPI ADD SWAP2 DUP1 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x5A9 JUMPI DUP3 MLOAD PUSH2 0x2973 DUP2 PUSH2 0x27F6 JUMP JUMPDEST SWAP4 PUSH2 0x2981 PUSH1 0x40 MLOAD SWAP6 DUP7 PUSH2 0x27C0 JUMP JUMPDEST DUP2 DUP6 MSTORE DUP4 DUP1 DUP7 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x5A9 JUMPI DUP4 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x29A8 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP2 MLOAD DUP2 MSTORE SWAP1 DUP4 ADD SWAP1 DUP4 ADD PUSH2 0x299A JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x29CA PUSH2 0x2BA2 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x6 SLOAD SWAP1 PUSH2 0x29D9 DUP3 PUSH2 0x27F6 JUMP JUMPDEST SWAP2 PUSH2 0x29E7 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x27C0 JUMP JUMPDEST DUP1 DUP4 MSTORE PUSH1 0x1F NOT PUSH2 0x29F6 DUP3 PUSH2 0x27F6 JUMP JUMPDEST ADD CALLDATASIZE PUSH1 0x20 DUP6 ADD CALLDATACOPY PUSH2 0x2A06 DUP2 PUSH2 0x28A7 JUMP JUMPDEST SWAP5 PUSH0 JUMPDEST DUP3 DUP2 LT PUSH2 0x2A18 JUMPI POP POP POP POP SWAP2 SWAP1 JUMP JUMPDEST PUSH2 0x2A22 DUP2 DUP4 PUSH2 0x28D9 JUMP JUMPDEST MLOAD SWAP1 PUSH2 0x2710 SWAP2 DUP3 DUP2 MUL SWAP3 DUP2 DUP5 DIV EQ SWAP1 ISZERO OR ISZERO PUSH2 0x264C JUMPI PUSH2 0x2A44 DUP6 PUSH1 0x1 SWAP4 PUSH2 0x2683 JUMP JUMPDEST PUSH2 0x2A4D DUP3 PUSH2 0x2774 JUMP JUMPDEST POP DUP4 ADD SLOAD DUP4 SWAP2 DUP2 DUP2 GT ISZERO PUSH2 0x2A82 JUMPI SWAP1 PUSH2 0x2A65 SWAP2 PUSH2 0x2767 JUMP JUMPDEST PUSH2 0x2A6F DUP4 DUP12 PUSH2 0x28D9 JUMP JUMPDEST MSTORE PUSH2 0x2A7A DUP3 DUP9 PUSH2 0x28D9 JUMP JUMPDEST MSTORE JUMPDEST ADD PUSH2 0x2A09 JUMP JUMPDEST SWAP1 PUSH2 0x2A8D SWAP3 POP PUSH2 0x2767 JUMP JUMPDEST PUSH2 0x2A97 DUP3 DUP11 PUSH2 0x28D9 JUMP JUMPDEST MSTORE PUSH0 PUSH2 0x2AA3 DUP3 DUP9 PUSH2 0x28D9 JUMP JUMPDEST MSTORE PUSH2 0x2A7C JUMP JUMPDEST PUSH2 0x2AB1 PUSH2 0x29C2 JUMP JUMPDEST PUSH0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x2AF8 JUMPI PUSH2 0x2AC6 DUP2 DUP5 PUSH2 0x28D9 JUMP JUMPDEST MLOAD ISZERO ISZERO DUP1 PUSH2 0x2AE3 JUMPI JUMPDEST PUSH2 0x2ADB JUMPI PUSH1 0x1 ADD PUSH2 0x2AB3 JUMP JUMPDEST POP POP POP PUSH1 0x1 SWAP1 JUMP JUMPDEST POP PUSH2 0x2AEE DUP2 DUP4 PUSH2 0x28D9 JUMP JUMPDEST MLOAD PUSH1 0x7 SLOAD LT PUSH2 0x2ACF JUMP JUMPDEST POP POP POP PUSH0 SWAP1 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA3E113FB PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE SWAP2 PUSH1 0x20 SWAP2 DUP4 SWAP2 AND DUP2 DUP1 PUSH1 0x44 DUP2 ADD JUMPDEST SUB SWAP2 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x29B7 JUMPI PUSH0 SWAP2 PUSH2 0x2B48 JUMPI POP SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x2B6F JUMPI JUMPDEST DUP2 PUSH2 0x2B63 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x27C0 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x5A9 JUMPI MLOAD SWAP1 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x2B56 JUMP JUMPDEST PUSH2 0x2B7F PUSH2 0x2BA2 JUMP JUMPDEST POP PUSH1 0x2 SLOAD DUP1 ISZERO PUSH2 0x2B9C JUMPI PUSH2 0x90A PUSH2 0x2B99 SWAP3 PUSH1 0x8 SLOAD SWAP1 PUSH2 0x2639 JUMP JUMPDEST SWAP1 JUMP JUMPDEST POP POP PUSH0 SWAP1 JUMP JUMPDEST PUSH1 0x6 SLOAD SWAP1 PUSH0 PUSH2 0x2BB0 DUP4 PUSH2 0x28A7 JUMP JUMPDEST PUSH1 0xB SLOAD SWAP1 SWAP4 PUSH0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 JUMPDEST DUP3 DUP5 LT PUSH2 0x2BD3 JUMPI POP POP POP POP SWAP2 SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 PUSH2 0x2C12 PUSH1 0x1 SWAP2 DUP4 PUSH2 0x2BE7 DUP9 PUSH2 0x2774 JUMP JUMPDEST POP SLOAD AND PUSH2 0x2BF3 DUP2 PUSH2 0x2AFF JUMP JUMPDEST SWAP1 DUP7 DUP2 SUB PUSH2 0x2C1C JUMPI POP PUSH2 0x2C06 DUP9 DUP12 PUSH2 0x28D9 JUMP JUMPDEST MSTORE JUMPDEST PUSH2 0x2436 DUP8 DUP11 PUSH2 0x28D9 JUMP JUMPDEST SWAP5 ADD SWAP3 SWAP2 SWAP1 PUSH2 0x2BC4 JUMP JUMPDEST SWAP1 PUSH2 0x2C26 SWAP2 PUSH2 0x3263 JUMP JUMPDEST PUSH2 0x2C30 DUP9 DUP12 PUSH2 0x28D9 JUMP JUMPDEST MSTORE PUSH2 0x2C08 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x2C93 JUMPI PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x20 DUP3 PUSH2 0x2C77 PUSH0 SWAP5 PUSH1 0x2 SLOAD PUSH2 0x275A JUMP JUMPDEST PUSH1 0x2 SSTORE DUP5 DUP5 MSTORE DUP4 DUP3 MSTORE PUSH1 0x40 DUP5 KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x6 SLOAD SWAP1 PUSH0 JUMPDEST DUP3 DUP2 LT PUSH2 0x2CBF JUMPI POP POP POP PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x2CC8 DUP2 PUSH2 0x2774 JUMP JUMPDEST POP SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 AND EQ PUSH2 0x2CE4 JUMPI PUSH1 0x1 ADD PUSH2 0x2CB1 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP PUSH2 0x2CF2 SWAP2 POP PUSH2 0x2774 JUMP JUMPDEST POP ADD SLOAD SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND SWAP3 DUP4 ISZERO PUSH2 0x2DA2 JUMPI AND SWAP3 DUP4 ISZERO PUSH2 0x2C93 JUMPI DUP3 PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SLOAD SWAP1 DUP3 DUP3 LT PUSH2 0x2D70 JUMPI POP DUP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 PUSH1 0x20 SWAP3 DUP6 PUSH0 MSTORE PUSH0 DUP5 MSTORE SUB PUSH1 0x40 PUSH0 KECCAK256 SSTORE DUP5 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x2DC1 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x11549497D1125597D253951154939053 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP1 ISZERO PUSH2 0x2E2C JUMPI PUSH15 0xC097CE7BC90715B34B9F1000000000 SWAP1 DUP1 PUSH1 0x1 SHR DUP3 ADD DUP1 DUP4 GT PUSH2 0x264C JUMPI PUSH2 0x90A PUSH2 0x2B99 SWAP4 DUP3 LT ISZERO PUSH2 0x2DBA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x4552525F4449565F5A45524F PUSH1 0xA0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 DUP1 ISZERO PUSH2 0x2E2C JUMPI PUSH8 0xDE0B6B3A7640000 SWAP2 DUP3 DUP2 MUL SWAP1 DUP1 ISZERO DUP2 DUP4 DIV DUP6 EQ DUP2 OR ISZERO PUSH2 0x264C JUMPI PUSH2 0x2B99 SWAP5 PUSH2 0x2E98 SWAP3 DUP3 ISZERO PUSH2 0x2EB1 JUMPI POP POP PUSH2 0x2DBA JUMP JUMPDEST PUSH2 0x90A PUSH2 0x2EA8 DUP4 PUSH1 0x1 SHR DUP4 PUSH2 0x275A JUMP JUMPDEST SWAP2 DUP3 LT ISZERO PUSH2 0x2DBA JUMP JUMPDEST PUSH2 0x2EBD SWAP2 SWAP3 POP DUP5 PUSH2 0x2683 JUMP JUMPDEST EQ PUSH0 DUP1 PUSH2 0x15AD JUMP JUMPDEST SWAP1 PUSH2 0x2ED0 SWAP1 DUP3 PUSH2 0x275A JUMP JUMPDEST SWAP1 DUP2 LT PUSH2 0x2EDA JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x4552525F4144445F4F564552464C4F57 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 PUSH1 0x1 SWAP3 DUP4 DUP2 LT PUSH2 0x30C1 JUMPI PUSH8 0x1BC16D674EC7FFFF DUP2 GT PUSH2 0x3083 JUMPI PUSH8 0xDE0B6B3A7640000 SWAP2 DUP3 DUP2 DIV SWAP1 DUP4 DUP3 MUL SWAP2 DUP1 DUP4 DIV DUP6 EQ SWAP1 ISZERO OR ISZERO PUSH2 0x264C JUMPI PUSH2 0x2F57 DUP3 DUP6 SWAP3 PUSH2 0x321B JUMP JUMPDEST SWAP2 DIV SWAP2 DUP1 DUP7 DUP5 AND ISZERO PUSH2 0x307D JUMPI DUP2 JUMPDEST SWAP4 DUP8 SHR SWAP1 DUP2 JUMPDEST PUSH2 0x3050 JUMPI POP POP DUP2 ISZERO PUSH2 0x3048 JUMPI PUSH2 0x2F83 SWAP1 SWAP4 SWAP2 SWAP4 PUSH2 0x32A7 JUMP JUMPDEST DUP3 SWAP5 SWAP2 DUP4 SWAP2 PUSH0 SWAP3 DUP10 SWAP6 JUMPDEST PUSH4 0x5F5E100 DUP3 LT ISZERO PUSH2 0x2FAC JUMPI JUMPDEST POP POP POP POP POP POP POP PUSH2 0x2B99 SWAP3 SWAP4 POP PUSH2 0x31AA JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP8 DUP2 DUP10 MUL SWAP3 DUP10 DUP5 DIV DUP4 EQ DUP11 ISZERO OR ISZERO PUSH2 0x264C JUMPI DUP4 PUSH2 0x304 PUSH2 0x2FE9 SWAP3 PUSH2 0xCE1 PUSH2 0x2FE2 PUSH2 0x2FDC DUP12 SWAP10 PUSH2 0x3212 JUMP JUMPDEST DUP14 PUSH2 0x3319 JUMP JUMPDEST SWAP9 SWAP1 PUSH2 0x31AA JUMP JUMPDEST SWAP3 DUP4 ISZERO PUSH2 0x3041 JUMPI DUP5 PUSH2 0x3039 JUMPI JUMPDEST PUSH2 0x3031 JUMPI JUMPDEST DUP3 DUP7 ISZERO PUSH2 0x3022 JUMPI PUSH2 0x300B SWAP2 PUSH2 0x321B JUMP JUMPDEST SWAP8 JUMPDEST PUSH0 NOT DUP2 EQ PUSH2 0x264C JUMPI DUP11 ADD SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2F8D JUMP JUMPDEST PUSH2 0x302B SWAP2 PUSH2 0x2EC5 JUMP JUMPDEST SWAP8 PUSH2 0x300D JUMP JUMPDEST SWAP5 ISZERO SWAP5 PUSH2 0x2FFB JUMP JUMPDEST SWAP6 ISZERO SWAP6 PUSH2 0x2FF6 JUMP JUMPDEST POP SWAP8 PUSH2 0x2F9A JUMP JUMPDEST POP SWAP1 SWAP4 POP POP POP JUMP JUMPDEST DUP1 PUSH2 0x305A SWAP2 PUSH2 0x31AA JUMP JUMPDEST SWAP1 DUP8 DUP2 AND PUSH2 0x306C JUMPI JUMPDEST DUP8 SHR SWAP1 DUP2 PUSH2 0x2F6B JUMP JUMPDEST SWAP4 DUP2 PUSH2 0x3077 SWAP2 PUSH2 0x31AA JUMP JUMPDEST SWAP4 PUSH2 0x3063 JUMP JUMPDEST DUP5 PUSH2 0x2F65 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x8AA4A4BE84A09EAEBE8482A68ABEA89E9EBE90928E9 PUSH1 0x53 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x4552525F42504F575F424153455F544F4F5F4C4F57 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x3105 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x4552525F4D554C5F4F564552464C4F57 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH8 0xDE0B6B3A764001E SWAP1 DUP2 DUP2 MUL SWAP2 DUP2 ISZERO SWAP1 DUP3 DUP5 DIV DUP2 EQ DUP3 OR ISZERO PUSH2 0x264C JUMPI PUSH2 0x316B SWAP3 DUP3 ISZERO PUSH2 0x3196 JUMPI POP POP PUSH2 0x30FE JUMP JUMPDEST PUSH8 0x6F05B59D3B20000 DUP2 ADD DUP1 DUP3 GT PUSH2 0x264C JUMPI PUSH2 0x3192 PUSH8 0xDE0B6B3A7640000 SWAP3 DUP3 LT ISZERO PUSH2 0x30FE JUMP JUMPDEST DIV SWAP1 JUMP JUMPDEST PUSH2 0x31A2 SWAP2 SWAP3 POP DUP5 PUSH2 0x2683 JUMP JUMPDEST EQ PUSH0 DUP1 PUSH2 0x143C JUMP JUMPDEST PUSH2 0x316B SWAP1 PUSH2 0x31B8 DUP4 DUP3 PUSH2 0x2639 JUMP JUMPDEST SWAP3 DUP2 ISZERO SWAP2 DUP3 ISZERO PUSH2 0x3196 JUMPI POP POP PUSH2 0x30FE JUMP JUMPDEST PUSH2 0x31D2 SWAP1 PUSH2 0x32E0 JUMP JUMPDEST PUSH2 0x31D9 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x4552525F5355425F554E444552464C4F57 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x31D2 SWAP1 PUSH2 0x32A7 JUMP JUMPDEST SWAP1 PUSH2 0x31D2 SWAP2 PUSH2 0x3319 JUMP JUMPDEST ISZERO PUSH2 0x322C JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x8AA4A4BE9A82A890BE82A0A0A49EB PUSH1 0x8B SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0xC SLOAD PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH4 0x248391FF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP1 DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x20 SWAP2 DUP4 SWAP2 AND DUP2 DUP1 PUSH1 0x64 DUP2 ADD PUSH2 0x2B33 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP1 DUP3 LT PUSH2 0x32D0 JUMPI POP PUSH8 0xDE0B6B3A763FFFF NOT DUP2 ADD SWAP1 DUP2 GT PUSH2 0x264C JUMPI SWAP1 PUSH0 SWAP1 JUMP JUMPDEST SWAP1 DUP2 SUB SWAP1 DUP2 GT PUSH2 0x264C JUMPI SWAP1 PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 SWAP1 DUP1 DUP3 LT PUSH2 0x32FF JUMPI DUP2 SUB SWAP1 DUP2 GT PUSH2 0x264C JUMPI SWAP1 PUSH0 SWAP1 JUMP JUMPDEST PUSH8 0xDE0B6B3A763FFFF NOT DUP2 ADD SWAP2 POP DUP2 GT PUSH2 0x264C JUMPI SWAP1 PUSH1 0x1 SWAP1 JUMP JUMPDEST DUP2 DUP2 LT PUSH2 0x332F JUMPI SWAP1 PUSH2 0x332A SWAP2 PUSH2 0x2767 JUMP JUMPDEST SWAP1 PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x3338 SWAP2 PUSH2 0x2767 JUMP JUMPDEST SWAP1 PUSH1 0x1 SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB7 SHL MUL 0xD2 0xC9 0xC6 PUSH17 0x70ABD5EDD7AED54964FA1025337A855A65 JUMPDEST 0xA9 PUSH23 0x286C7BC78B64736F6C6343000819003300000000000000 ","sourceMap":"1763:27673:15:-:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;1763:27673:15;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1763:27673:15;;;;-1:-1:-1;;;;;1763:27673:15;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;-1:-1:-1;;;1763:27673:15;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;1763:27673:15;;;;;;;-1:-1:-1;;;;;1763:27673:15;;;;1962:13:8;1763:27673:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1763:27673:15;;;;;;;;;;;;;1962:13:8;1763:27673:15;;;;;1962:13:8;1763:27673:15;;;;;-1:-1:-1;;;;;1763:27673:15;;;;1985:17:8;1763:27673:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1763:27673:15;;;;;;;;;;;;;1962:13:8;1763:27673:15;;;;;1985:17:8;1763:27673:15;;;;;;;;-1:-1:-1;;;;;;1763:27673:15;;;-1:-1:-1;;;;;1763:27673:15;;;;;;;3380:20;1763:27673;;;;3390:10;1763:27673;;;3411:24;1763:27673;;;;;;;;;;;;;;3452:4;3446:10;1763:27673;;;;;5767:33;1763:27673;;-1:-1:-1;5892:3:15;1763:27673;;5872:18;;;;;-1:-1:-1;;;;;5920:10:15;;;;:::i;:::-;1763:27673;;5920:24;1763:27673;;5993:11;;;;:::i;:::-;1763:27673;5993:15;1763:27673;;-1:-1:-1;;;;;6078:10:15;;;;:::i;:::-;1763:27673;;6098:11;;;;:::i;:::-;1763:27673;;;;;;;;-1:-1:-1;;;;;;;;1763:27673:15;;;;;;;;;;;;;;6060:51;;1763:27673;6044:10;1763:27673;;;;;;;;;;;6044:10;1763:27673;;;;;;6044:10;-1:-1:-1;1763:27673:15;;;;;;;;;;;;;;-1:-1:-1;;;;;1763:27673:15;;;-1:-1:-1;;;;;;1763:27673:15;;;;;;;6060:51;;;1763:27673;;;;;;6151:10;;;;:::i;:::-;1763:27673;;;;;;;3411:24;1763:27673;;;;;;;6181:51;;6205:4;1985:17:8;6181:51:15;;1763:27673;;;;;;;6181:51;1763:27673;6181:51;;;;;;;;;-1:-1:-1;6181:51:15;;;5892:3;6181:56;;6177:150;;5892:3;;;1763:27673;;5857:13;;6177:150;-1:-1:-1;1763:27673:15;;;;;;;;;;;;;;6258:53;;1985:17:8;6258:53:15;;1763:27673;;;;;;;6258:53;;;;;;;;6177:150;;;;6258:53;1763:27673;6258:53;;1763:27673;6258:53;;;;;;1763:27673;6258:53;;;:::i;:::-;;;1763:27673;;;;;;;;;;;6258:53;;;1763:27673;-1:-1:-1;1763:27673:15;;6258:53;;;-1:-1:-1;6258:53:15;;;1763:27673;;;-1:-1:-1;1763:27673:15;;;;;6181:51;;;1763:27673;6181:51;;1763:27673;6181:51;;;;;;1763:27673;6181:51;;;:::i;:::-;;;1763:27673;;;;;6181:51;;;;;;-1:-1:-1;6181:51:15;;1763:27673;;;;-1:-1:-1;1763:27673:15;;1985:17:8;1763:27673:15;;-1:-1:-1;1763:27673:15;;;;;-1:-1:-1;1763:27673:15;;1985:17:8;1763:27673:15;;-1:-1:-1;1763:27673:15;;;;-1:-1:-1;;;1763:27673:15;;;1985:17:8;1763:27673:15;;;;;;;;-1:-1:-1;;;1763:27673:15;;;;;;;;;;-1:-1:-1;;;1763:27673:15;;;1985:17:8;1763:27673:15;;;;;;;;;;;;;;;;5872:18;-1:-1:-1;3589:18:15;1763:27673;;;;;-1:-1:-1;;;3659:39:15;;1763:27673;;;;;1985:17:8;;1763:27673:15;;-1:-1:-1;;;;;1763:27673:15;3659:39;;;;;;;-1:-1:-1;3659:39:15;;;5852:486;-1:-1:-1;3647:51:15;1763:27673;;-1:-1:-1;;;;;;1763:27673:15;-1:-1:-1;;;;;1763:27673:15;;;;;;;;;;-1:-1:-1;;;3904:3:15;1763:27673;;3883:19;;;;;3939:11;;;;:::i;:::-;1763:27673;;;;;;;;;3924:26;3904:3;1763:27673;3868:13;;;1763:27673;;;;-1:-1:-1;1763:27673:15;;1985:17:8;1763:27673:15;;-1:-1:-1;1763:27673:15;3883:19;3995:5;3980:20;1763:27673;;;;;;;;;;;;;;-1:-1:-1;;;1763:27673:15;;;1985:17:8;1763:27673:15;;;;;;;;-1:-1:-1;;;1763:27673:15;;;;;;;3659:39;;;1763:27673;3659:39;;1763:27673;3659:39;;;;;;1763:27673;3659:39;;;:::i;:::-;;;1763:27673;;;;;;;:::i;:::-;3659:39;;;;;;-1:-1:-1;3659:39:15;;1763:27673;;;-1:-1:-1;;;1763:27673:15;;;1985:17:8;1763:27673:15;;;;;;;;;;;;;-1:-1:-1;;;1763:27673:15;;;;;;;;;;;-1:-1:-1;1763:27673:15;;;;;1985:17:8;-1:-1:-1;1763:27673:15;;;;;-1:-1:-1;;;1763:27673:15;;;;;;;;;;;;;;;;;;;;;;;;;;;1985:17:8;1763:27673:15;;;;;;;;;;1962:13:8;1763:27673:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1985:17:8;-1:-1:-1;1763:27673:15;;;-1:-1:-1;1763:27673:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1763:27673:15;;;;-1:-1:-1;1763:27673:15;;;;;;;-1:-1:-1;1763:27673:15;;;;;;;;-1:-1:-1;1763:27673:15;;1985:17:8;1763:27673:15;;-1:-1:-1;1763:27673:15;;;;;;;;;;;;-1:-1:-1;1763:27673:15;;;;;1962:13:8;-1:-1:-1;1763:27673:15;;;-1:-1:-1;;1763:27673:15;;;;-1:-1:-1;;1763:27673:15;;;;;;;;;;;;;;;;;;;;;;;;1962:13:8;1763:27673:15;;;;;;;;;;1962:13:8;1763:27673:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1962:13:8;-1:-1:-1;1763:27673:15;;;-1:-1:-1;1763:27673:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1763:27673:15;;;;-1:-1:-1;1763:27673:15;;;;;;;-1:-1:-1;1763:27673:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1763:27673:15;;;;;;;:::o;:::-;;;;;-1:-1:-1;;1763:27673:15;;;;-1:-1:-1;;;;;1763:27673:15;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;1763:27673:15;;;;;;:::o;:::-;-1:-1:-1;;;;;1763:27673:15;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":9712,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_address_34323":{"entryPoint":9690,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_addresst_addresst_uint256":{"entryPoint":9923,"id":null,"parameterSlots":1,"returnSlots":3},"abi_decode_uint256t_uint256t_uint256t_uint256t_uint256t_uint256":{"entryPoint":9976,"id":null,"parameterSlots":1,"returnSlots":6},"abi_decode_uint8_fromMemory":{"entryPoint":10382,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_address_address":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_address_address_uint256":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_address_uint256":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_address_uint256_uint256":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_array_address_dyn":{"entryPoint":10014,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_array_uint256_dyn":{"entryPoint":9734,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string":{"entryPoint":9648,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_and_zero_memory_array_array_uint256_dyn":{"entryPoint":10407,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_array_uint256_dyn":{"entryPoint":10230,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_uint256":{"entryPoint":10074,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_uint256":{"entryPoint":9859,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_uint256":{"entryPoint":9785,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_uint256":{"entryPoint":10087,"id":null,"parameterSlots":2,"returnSlots":1},"external_fun_MAX_TOTAL_WEIGHT":{"entryPoint":9824,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_MIN_WEIGHT":{"entryPoint":9889,"id":null,"parameterSlots":0,"returnSlots":0},"finalize_allocation":{"entryPoint":10176,"id":null,"parameterSlots":2,"returnSlots":0},"fun_badd":{"entryPoint":11973,"id":5656,"parameterSlots":2,"returnSlots":1},"fun_bdiv":{"entryPoint":11872,"id":5826,"parameterSlots":2,"returnSlots":1},"fun_bdiv_34331":{"entryPoint":11769,"id":5826,"parameterSlots":1,"returnSlots":1},"fun_bmul":{"entryPoint":12714,"id":5766,"parameterSlots":2,"returnSlots":1},"fun_bmul_80147":{"entryPoint":12605,"id":5766,"parameterSlots":1,"returnSlots":1},"fun_bpow":{"entryPoint":12050,"id":5949,"parameterSlots":2,"returnSlots":1},"fun_bsub":{"entryPoint":12827,"id":5683,"parameterSlots":2,"returnSlots":1},"fun_bsubSign":{"entryPoint":13081,"id":5713,"parameterSlots":2,"returnSlots":2},"fun_bsubSign_34519":{"entryPoint":12967,"id":5713,"parameterSlots":1,"returnSlots":2},"fun_bsubSign_53946":{"entryPoint":13024,"id":5713,"parameterSlots":1,"returnSlots":2},"fun_bsubSign_53961":{"entryPoint":null,"id":5713,"parameterSlots":1,"returnSlots":2},"fun_bsub_34340":{"entryPoint":12745,"id":5683,"parameterSlots":1,"returnSlots":1},"fun_bsub_34382":{"entryPoint":12818,"id":5683,"parameterSlots":1,"returnSlots":1},"fun_computeTotalValuation":{"entryPoint":11170,"id":3913,"parameterSlots":0,"returnSlots":2},"fun_convertTokenToBase":{"entryPoint":12899,"id":4342,"parameterSlots":2,"returnSlots":1},"fun_getAssetReserve":{"entryPoint":11007,"id":3732,"parameterSlots":1,"returnSlots":1},"fun_getDeviation":{"entryPoint":10690,"id":3599,"parameterSlots":0,"returnSlots":2},"fun_getReserves":{"entryPoint":10477,"id":3712,"parameterSlots":0,"returnSlots":1},"fun_getTargetWeight":{"entryPoint":11435,"id":4424,"parameterSlots":1,"returnSlots":1},"fun_isRebalanceNeeded":{"entryPoint":10921,"id":4388,"parameterSlots":0,"returnSlots":1},"fun_mint":{"entryPoint":11318,"id":1491,"parameterSlots":2,"returnSlots":0},"fun_transfer":{"entryPoint":11512,"id":1381,"parameterSlots":3,"returnSlots":0},"fun_unitPrice":{"entryPoint":11127,"id":3694,"parameterSlots":0,"returnSlots":1},"memory_array_index_access_uint256_dyn":{"entryPoint":10457,"id":null,"parameterSlots":2,"returnSlots":1},"require_helper_stringliteral":{"entryPoint":12837,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_7bb2":{"entryPoint":11706,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_aa15":{"entryPoint":12542,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_e4fc":{"entryPoint":10315,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_e84c":{"entryPoint":10254,"id":null,"parameterSlots":1,"returnSlots":0},"storage_array_index_access_struct_AssetInfo__dyn":{"entryPoint":10100,"id":null,"parameterSlots":1,"returnSlots":2}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"6080604081815260049182361015610015575f80fd5b5f925f3560e01c91826301d22ccd1461258d5750816306fdde03146124995781630723c999146121d25781630902f1ac146121a2578163095ea7b3146120fa57816309a3bbe4146106ec5781630d0fa02914611f7957816318160ddd14611f5b578163189d00ca14611f3d5781631a68650214611f19578163218b538214610c3d57816322acb86714611ebc57816323b872dd14611ddb578163313ce56714611dc057816336bf6e3914611d8c5781634aa0665214611ce457816358d1969814611ba35781635c1bbaf714611b5c57816367a6c44014611b4157816367e4ac2c14611ade5781636e81221c1461168c57816370a082311461165657816376c7a3c71461163757816377aace1a1461160f5781637fec8d38146115f157816382f652ad146115515781638656b65314611506578163867378c5146114e957816389298012146113f557816389ab35321461138b57816389afcb4414610f6c5781638a77c8dc14610f475781639381cd2b14610f2457816395d89b4114610e26578163992e2a9214610e045781639a86139b14610de1578163a221ee4914610d98578163a9059cbb14610d68578163b0e0d13614610d4d578163b2b55d7014610d28578163b7b800a414610d0d578163ba019dab14610cf2578163ba9530a614610ca4578163bc063e1a14610c82578163bc694ea214610c60578163c2ee3a0814610c42578163c36596a614610c3d578163c45a015514610c15578163c6580d1214610bfb578163cdf456e114610bd3578163cf8fa76414610b5b578163d14ef46d14610b0f578163dd62ed3e14610ac6578163de836ebd146106f1578163e4a28a52146106ec578163e73faa2d146106d0578163ec093021146106ae578163f47b45e814610314575063f8d6aed4146102ab575f80fd5b34610310576020906103096102e86103046102ee6102fe6102f86102f36102e16102d4366126f8565b99949b9293909591612e60565b938261321b565b90612e60565b612f12565b613212565b916131c9565b926131aa565b612e60565b9051908152f35b5080fd5b8284346105a9576003195f368201126105a9576009546001600160a01b03949085169161034233841461280e565b61035261034d612aa9565b61284b565b6006549361035f856128a7565b93610369866128a7565b97610373876128a7565b9261037d886128a7565b94610387896128a7565b9a6103918a6128a7565b995f5b8181106105f55750506103a56128ed565b84600c54169160075486600b5416843b156105a9578e51633c2fddc560e21b815260e0818e01528d9990968795869591906103e49060e4880190612606565b9b60249c828882030160248901526103fb9161271e565b9086820301604487015261040e91612606565b92606485015280608485015260a484015260c483015203815a5f948591f180156105eb576105be575b50600654600954909690831692825b8881106104b3578c8c6104af8d8d7f279b343370f587af7fb675ae7c8578e9c8abcc373236ad02c501a4771fe7a7b88451602081528061048b3394602083019061271e565b0390a26104a18351948486958652850190612606565b908382036020850152612606565b0390f35b816104be828c6128d9565b51168c5180916370a0823160e01b82528786830152818960209485935afa9182156105b4578f908a94938f91938d948a92610573575b505094849160019661050684876128d9565b5261051183866128d9565b5161051c84846128d9565b5110156105565750610548906105418361053a8161054e97986128d9565b51926128d9565b5190612767565b926128d9565b525b01610446565b9361056d93506105418361053a81610548956128d9565b52610550565b9450955050505082813d83116105ad575b61058e81836127c0565b810103126105a957888e828a8f6001965191968193506104f4565b5f80fd5b503d610584565b8e513d88823e3d90fd5b905067ffffffffffffffff81116105d85788525f8a610437565b604186634e487b7160e01b5f525260245ffd5b8a513d5f823e3d90fd5b856105ff82612774565b50541661060c828d6128d9565b52600161061882612774565b50015461062582856128d9565b5285610631828d6128d9565b5116908d5180926370a0823160e01b8252898d83015281602460209384935afa9081156106a4575f91610675575b506001925061066e828b6128d9565b5201610394565b905082813d831161069d575b61068b81836127c0565b810103126105a957600191515f61065f565b503d610681565b8f513d5f823e3d90fd5b82346105a9575f3660031901126105a957602090516706f05b59d3b200008152f35b82346105a9575f3660031901126105a957602090610309612b77565b612660565b82346105a957806003193601126105a95761070a6125da565b9060249182359367ffffffffffffffff85116105a957366023860112156105a9578481013593610739856127f6565b94610746855196876127c0565b808652602096828888019260051b820101913683116105a95783899201905b838210610ab75750506009546001600160a01b0397925061078a91508716331461280e565b600254905f906107986128ed565b9060065491518203610a75578115610a4757905f915b818310610a0e5750505080156109c157838888600b541688519283809263313ce56760e01b82525afa9081156109b7579060ff915f9161098a575b501691806108ec5750670de0b6b3a7640000808202918204036108da579061081091612767565b945b85156108a8576108438691335f525f8952865f2054956108328482612c36565b1694855f525f8952865f2054612767565b036108785750507f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d4121396885848351858152a251908152f35b835162461bcd60e51b8152918201869052600b908201526a135a5b9d0811985a5b195960aa1b6044820152606490fd5b845162461bcd60e51b8152808401889052600d818401526c04d696e7420717479206973203609c1b6044820152606490fd5b82601185634e487b7160e01b5f52525ffd5b6108f4612ba2565b509182156109395761090f929161090a91612639565b612683565b670de0b6b3a7640000908181029181830414901517156108da579061093391612767565b94610812565b875162461bcd60e51b81528087018b90526026818701527f546f74616c206c6971756964697479206d75737420626520677265617465722060448201526507468616e20360d41b6064820152608490fd5b6109aa91508a3d8c116109b0575b6109a281836127c0565b81019061288e565b8a6107e9565b503d610998565b87513d5f823e3d90fd5b855162461bcd60e51b81528085018990526022818501527f546f74616c2076616c7565206d7573742062652067726561746572207468616e604482015261020360f41b6064820152608490fd5b909192610a3e600191610a388c610a2488612774565b505416610a3188876128d9565b5190613263565b9061275a565b930191906107ae565b875162461bcd60e51b81528087018b9052600981870152684e6f2061737365747360b81b6044820152606490fd5b875162461bcd60e51b81528087018b90526017818701527f496e76616c6964207265736572766573206c656e6774680000000000000000006044820152606490fd5b81358152908201908201610765565b82346105a957806003193601126105a957602090610ae26125da565b610aea6125f0565b9060018060a01b038091165f5260018452825f2091165f528252805f20549051908152f35b9050346105a95760203660031901126105a957356006548110156105a957610b3690612774565b50805460019091015491516001600160a01b0390911681526020810191909152604090f35b9050346105a95760203660031901126105a957803590610b79612ba2565b8092915051831015610b9a57602084610b9285856128d9565b519051908152f35b606490602085519162461bcd60e51b83528201526013602482015272092dcecc2d8d2c840c2e6e6cae840d2dcc8caf606b1b6044820152fd5b82346105a9575f3660031901126105a957600b5490516001600160a01b039091168152602090f35b82346105a9575f3660031901126105a957602090515f8152f35b82346105a9575f3660031901126105a957600a5490516001600160a01b039091168152602090f35b6126a1565b82346105a9575f3660031901126105a9576020906008549051908152f35b82346105a9575f3660031901126105a95760209051671bc16d674ec7ffff8152f35b82346105a9575f3660031901126105a9576020905167016345785d8a00008152f35b82346105a957602090610309610cdb610ce1610ced610ce76102ee610ce16102e8610cce366126f8565b989496929b919093612e60565b966131c9565b906131aa565b82612ec5565b6131c9565b82346105a9575f3660031901126105a9576020905160018152f35b82346105a9575f3660031901126105a9576020905160028152f35b82346105a95760203660031901126105a957602090610309610d486125da565b612aff565b82346105a9575f3660031901126105a9576020905160088152f35b82346105a957806003193601126105a957602090610d91610d876125da565b6024359033612cf8565b5160018152f35b82346105a95760a03660031901126105a957610309610dce610dc06020946024359035612e60565b6102e8606435604435612e60565b610ce1610ddc6084356131c9565b612df9565b82346105a9575f3660031901126105a957516542524f4e5a4560d01b8152602090f35b82346105a9575f3660031901126105a957602090516704a03ce68d2155568152f35b82346105a9575f3660031901126105a9578051905f9280549060018260011c9160018416938415610f1a575b6020948585108114610f0757848852908115610ee55750600114610e8c575b6104af8686610e82828b03836127c0565b51918291826125b0565b5f9081529295507f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5b828410610ed257505050826104af94610e82928201019486610e71565b8054868501880152928601928101610eb5565b60ff191687860152505050151560051b8301019250610e82826104af86610e71565b602283634e487b7160e01b5f525260245ffd5b92607f1692610e52565b82346105a9575f3660031901126105a9576020905168056bc75e2d631000008152f35b82346105a9575f3660031901126105a957602090610f63612aa9565b90519015158152f35b82346105a957602090816003193601126105a957610f886125da565b6009546001600160a01b0390811691610fa233841461280e565b305f525f8552835f20549586156113485760025496871561131657600654610fc9816128a7565b98601e8302838104601e0361130357612710610fe791048094612767565b965f5b8381106112485750505050305f525f875284865f20541061120557818785600c54168851928380926361d027b360e01b82525afa9081156109b7579088915f916111cb575b50875163a9059cbb60e01b81526001600160a01b03909116848201908152602081019390935291829081906040015b03815f305af19081156111c1575f9161118b575b501561115257301561113c57305f525f8652845f205490848210611111575083927fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5926104af96958893305f525f855203865f205584600254036002555f86518681527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef853092a385519485521692a251928284938452830190612606565b855163391434e360e21b81523091810191825260208201929092526040810185905281906060010390fd5b6024905f865191634b637e8f60e11b8352820152fd5b845162461bcd60e51b81529081018690526013602482015272119959481d1c985b9cd9995c8819985a5b1959606a1b6044820152606490fd5b90508681813d83116111ba575b6111a281836127c0565b810103126105a9575180151581036105a95788611072565b503d611198565b86513d5f823e3d90fd5b82819392503d83116111fe575b6111e281836127c0565b810103126105a9575184811681036105a957879061105e61102f565b503d6111d8565b855162461bcd60e51b8152808301889052601d60248201527f496e73756666696369656e742042414c554e49206c69717569646974790000006044820152606490fd5b61128a8b8961125684612774565b50548d5163a3e113fb60e01b8152308b8201908152929091166001600160a01b031660208301529283918291604090910190565b0381865afa9081156112f9578a8593928f925f916112bf575b5061054860019561090a6112b8948794612639565b5201610fea565b94505050508b82813d83116112f2575b6112d981836127c0565b810103126105a95790518391908d908b906105486112a3565b503d6112cf565b8b513d5f823e3d90fd5b601185634e487b7160e01b5f525260245ffd5b855162461bcd60e51b8152808301889052600c60248201526b4e6f206c697175696469747960a01b6044820152606490fd5b845162461bcd60e51b8152908101869052601c60248201527f5368617265206d7573742062652067726561746572207468616e2030000000006044820152606490fd5b82346105a9575f3660031901126105a9576113a46129c2565b8251928391818301918352835180925260608301916020809501945f5b8281106113dc5785806104af87878382036020850152612606565b86511515855295810195879550938101936001016113c1565b82346105a957611411611407366126f8565b9591909293612e60565b95670de0b6b3a7640000918281029080159080830485148217156114d65790846114439282156114c2575b50506130fe565b6706f05b59d3b200008101918282116114af57506114a9856114a360209a9761149e61148f610ce199610304610ced9a8a6103099f9b61149e9b6114889110156130fe565b048261321b565b6114988b612df9565b90612f12565b6131aa565b9061321b565b946131c9565b601190634e487b7160e01b5f525260245ffd5b6114ce91925084612683565b14848b61143c565b601184634e487b7160e01b5f525260245ffd5b82346105a9575f3660031901126105a95760209051620f42408152f35b82346105a957602090610309610ced61154c61154261149e610ce76102ee610ce1610304611533366126f8565b989496929c918d9b9194612e60565b9761149e896131c9565b61321b565b9050346105a957611582610ced6114a361154261149e61157c6102ee6102e8610304611533366126f8565b8261321b565b91670de0b6b3a7640000908184029380159080860484148217156113035790836115b49282156115dd575b5050612dba565b6706f05b59d3b200008401928385116114af57506115d6602094841015612dba565b5191048152f35b6115e991925087612683565b1483876115ad565b82346105a9575f3660031901126105a9576020906007549051908152f35b82346105a9575f3660031901126105a95760095490516001600160a01b039091168152602090f35b82346105a9575f3660031901126105a9576020905164e8d4a510008152f35b82346105a95760203660031901126105a9576020906001600160a01b0361167b6125da565b165f525f8252805f20549051908152f35b9050346105a95760803660031901126105a9576116a76125da565b916116b06125f0565b604435926001600160a01b03919060643583811691908290036105a957600260055414611ad057600260055583831693871692848414611a8d578615611a4a576116f981612aff565b9761170381612aff565b906103e8908161171282612cab565b049a670de0b6b3a76400009b8c8102908d8183041490151715611a37578c908461173b88612cab565b048281029281840414901517156119cb5761176c916102e86117606117679389612e60565b9185612e60565b61313d565b928c8161177885612cab565b048181029181830414901517156119cb578d908261179589612cab565b04828102928184041490151715611a2457906117b091612e60565b8c670de0b6b3a763ffe28082029182048103611a11576117db908f6117d59084612683565b146130fe565b6706f05b59d3b20000810190818111611a11578f926102ee611814611820958561180d610ced9661181a9810156130fe565b048b612ec5565b8a612e60565b836131aa565b94600186106119de57908061184c8f94938f6118408a9161184693612ec5565b9561321b565b95612cab565b048381029381850414901517156119cb57908d929161186a88612cab565b048381029381850414901517156119cb5761176785946102e86118a5956118986118af999661189e96612e60565b92612e60565b1015613225565b61189e838b612e60565b865163313ce56760e01b8152602099908a8186818b5afa9081156119c1579060ff915f916119a4575b5016900367ffffffffffffffff9081811161130357916118ff916119079594931690612683565b928391612aff565b1061196857601e820290828204601e14831517156114af57506119517fcd3829a3813dc3cdd188fd3d01dcf3268c16be2fdd2dd21d0665418816e460629261271088930490612767565b9681519081528789820152a4600160055551908152f35b855162461bcd60e51b81529081018890526016602482015275496e73756666696369656e74204c697175696469747960501b6044820152606490fd5b6119bb91508c8d3d106109b0576109a281836127c0565b8c6118d8565b89513d5f823e3d90fd5b601188634e487b7160e01b5f525260245ffd5b8b5162461bcd60e51b81526020818a0152600d60248201526c11549497d31253525517d3d555609a1b6044820152606490fd5b60118a634e487b7160e01b5f525260245ffd5b601189634e487b7160e01b5f525260245ffd5b601187634e487b7160e01b5f525260245ffd5b855162461bcd60e51b8152602081840181905260248201527f416d6f756e74206d7573742062652067726561746572207468616e207a65726f6044820152606490fd5b855162461bcd60e51b8152602081840152601a60248201527f43616e6e6f742073776170207468652073616d6520746f6b656e0000000000006044820152606490fd5b8451633ee5aeb560e01b8152fd5b82346105a9575f3660031901126105a957600654611afb816128a7565b905f5b818110611b1a578351602080825281906104af9082018661271e565b80611b26600192612774565b50828060a01b03905416611b3a82866128d9565b5201611afe565b82346105a9575f3660031901126105a95760209051601e8152f35b82346105a957602090610309611b9c6102e8610ced61149e61149e6114a961148f61154c610304611b8c366126f8565b9a949793918896929e919e612e60565b9c82612ec5565b9050346105a957816003193601126105a957611bbd6125da565b91611bc66125f0565b611bcf84612aff565b50611bd981612aff565b50815163313ce56760e01b81526020946001600160a01b0391868187818587165afa908115611cda579060ff915f91611cbd575b501691600c541691604d8111611caa57845163248391ff60e01b81526001600160a01b03928316968101968752939091166020860152600a0a60408501529092849184918290819060600103915afa918215611ca0575f92611c71575b5051908152f35b9091508281813d8311611c99575b611c8981836127c0565b810103126105a957519083611c6a565b503d611c7f565b50513d5f823e3d90fd5b601186634e487b7160e01b5f525260245ffd5b611cd49150883d8a116109b0576109a281836127c0565b88611c0d565b85513d5f823e3d90fd5b82346105a9576020611cf5366126c3565b600c54855163248391ff60e01b81526001600160a01b03948516978101978852928416602088015260408701919091529094859290839003606001918391165afa908115611d83575f91611d4e575b6020925051908152f35b90506020823d602011611d7b575b81611d69602093836127c0565b810103126105a9576020915190611d44565b3d9150611d5c565b513d5f823e3d90fd5b82346105a9575f3660031901126105a9576104af611da8612ba2565b83929192519384938452806020850152830190612606565b82346105a9575f3660031901126105a9576020905160128152f35b9050346105a957611deb366126c3565b6001600160a01b0383165f81815260016020818152888320338452905290879020549295939493908301611e28575b602087610d91888888612cf8565b858310611e90578115611e7a573315611e6457505f90815260016020908152868220338352815290869020918590039091558290610d91611e1a565b6024905f885191634a1406b160e11b8352820152fd5b6024905f88519163e602df0560e01b8352820152fd5b8651637dc7a0d960e11b8152339181019182526020820193909352604081018690528291506060010390fd5b82346105a9575f3660031901126105a957600654611ed9816128a7565b905f5b818110611ef8578351602080825281906104af90820186612606565b806001611f058193612774565b500154611f1282866128d9565b5201611edc565b82346105a9575f3660031901126105a957602090611f35612ba2565b509051908152f35b82346105a9575f3660031901126105a957602090516305f5e1008152f35b82346105a9575f3660031901126105a9576020906002549051908152f35b82346105a957806003193601126105a957611f926125da565b611f9a6125f0565b92611fa482612aff565b93611fae81612aff565b845163313ce56760e01b80825260209791946001600160a01b039390929091898785818b89165afa9687156119c157908a915f986120db575b50848a5180978193825289165afa9384156120d1575f946120b2575b50670de0b6b3a764000095868202918083048814901517156114d6579060ff61202d921690612767565b928582029180830487149015171561209f5761205c9160ff612050921690612767565b956103e8918291612cab565b04938585029480860487149015171561209f5761207890612cab565b048481029481860414901517156114af57506117679261189861030995936102e893612e60565b601183634e487b7160e01b5f525260245ffd5b6120ca919450893d8b116109b0576109a281836127c0565b9289612003565b88513d5f823e3d90fd5b6120f3919850823d84116109b0576109a281836127c0565b968b611fe7565b82346105a957806003193601126105a9576121136125da565b60243590331561218c576001600160a01b03169081156121765760209350335f5260018452825f20825f52845280835f205582519081527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925843392a35160018152f35b8251634a1406b160e11b81525f81860152602490fd5b825163e602df0560e01b81525f81860152602490fd5b82346105a9575f3660031901126105a9576104af906121bf6128ed565b9051918291602083526020830190612606565b9050346105a957602091826003193601126105a9576121ef6125da565b9160018060a01b03936122078560095416331461280e565b61221261034d612aa9565b61221a612ba2565b6006549491612228866128a7565b915f5b878110612444575050505f905f5b8681106124255750600b54835163313ce56760e01b81529089169285828881875afa918215611cda575f92612406575b5060ff670de0b6b3a764000092168203918211611a37576122939161228d91612639565b966128a7565b955f5b82518110156123ae576122a981846128d9565b516122b7575b600101612296565b6122c181846128d9565b51868b6122cd84612774565b5054600c54895163248391ff60e01b81526001600160a01b038a81168e830190815294909316909216602084015260408301949094529283918290036060019082908f165afa9081156111c1575f91612381575b50801561233e5790600191612336828b6128d9565b5290506122af565b855162461bcd60e51b8152808901889052601b60248201527f496e76616c696420746f6b656e20616d6f756e7420746f2061646400000000006044820152606490fd5b90508681813d83116123a7575b61239881836127c0565b810103126105a957518b612321565b503d61238e565b87866104af87866123bf878f612c36565b7fa95ad530009c6f929555e70a66aadbeae7231e45756c5b028ca77fbaa376e73e8251858152806123f4339488830190612606565b0390a251928284938452830190612606565b61241e919250863d88116109b0576109a281836127c0565b908a612269565b9161243d60019161243685856128d9565b519061275a565b9201612239565b8061271061246060016124578195612774565b50015486612639565b048061246c83866128d9565b511061247a575b500161222b565b6124889061054183866128d9565b61249282876128d9565b528b612473565b82346105a9575f3660031901126105a9578051905f9260035460018160011c91600181168015612583575b6020948585108214612570575083875290811561255057506001146124f6575b505050610e82826104af9403836127c0565b60035f9081529295507fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b82841061253d57505050826104af94610e8292820101946124e4565b8054868501880152928601928101612521565b60ff1916868501525050151560051b8301019250610e82826104af6124e4565b602290634e487b7160e01b5f525260245ffd5b92607f16926124c4565b346105a9575f3660031901126105a957600c546001600160a01b03168152602090f35b602060409281835280519182918282860152018484015e5f828201840152601f01601f1916010190565b600435906001600160a01b03821682036105a957565b602435906001600160a01b03821682036105a957565b9081518082526020808093019301915f5b828110612625575050505090565b835185529381019392810192600101612617565b8181029291811591840414171561264c57565b634e487b7160e01b5f52601160045260245ffd5b346105a9575f3660031901126105a95760206040516802b5e3af16b18800008152f35b811561268d570490565b634e487b7160e01b5f52601260045260245ffd5b346105a9575f3660031901126105a9576020604051670de0b6b3a76400008152f35b60609060031901126105a9576001600160a01b039060043582811681036105a9579160243590811681036105a9579060443590565b60c09060031901126105a957600435906024359060443590606435906084359060a43590565b9081518082526020808093019301915f5b82811061273d575050505090565b83516001600160a01b03168552938101939281019260010161272f565b9190820180921161264c57565b9190820391821161264c57565b6006548110156127ac5760065f5260011b7ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f01905f90565b634e487b7160e01b5f52603260045260245ffd5b90601f8019910116810190811067ffffffffffffffff8211176127e257604052565b634e487b7160e01b5f52604160045260245ffd5b67ffffffffffffffff81116127e25760051b60200190565b1561281557565b60405162461bcd60e51b815260206004820152600e60248201526d4f6e6c792050657269706865727960901b6044820152606490fd5b1561285257565b60405162461bcd60e51b8152602060048201526014602482015273149958985b185b98d9481b9bdd081b995959195960621b6044820152606490fd5b908160209103126105a9575160ff811681036105a95790565b906128b1826127f6565b6128be60405191826127c0565b82815280926128cf601f19916127f6565b0190602036910137565b80518210156127ac5760209160051b010190565b600954604051630fa6707960e21b8152306004820152905f90829060249082906001600160a01b03165afa9081156129b7575f91612929575090565b90503d805f833e61293a81836127c0565b81019060209081818403126105a95780519067ffffffffffffffff82116105a957019180601f840112156105a9578251612973816127f6565b9361298160405195866127c0565b818552838086019260051b8201019283116105a9578301905b8282106129a8575050505090565b8151815290830190830161299a565b6040513d5f823e3d90fd5b6129ca612ba2565b9190600654906129d9826127f6565b916129e760405193846127c0565b808352601f196129f6826127f6565b01366020850137612a06816128a7565b945f5b828110612a1857505050509190565b612a2281836128d9565b51906127109182810292818404149015171561264c57612a4485600193612683565b612a4d82612774565b50830154839181811115612a825790612a6591612767565b612a6f838b6128d9565b52612a7a82886128d9565b525b01612a09565b90612a8d9250612767565b612a97828a6128d9565b525f612aa382886128d9565b52612a7c565b612ab16129c2565b5f5b8151811015612af857612ac681846128d9565b51151580612ae3575b612adb57600101612ab3565b505050600190565b50612aee81836128d9565b5160075410612acf565b5050505f90565b60095460405163a3e113fb60e01b81523060048201526001600160a01b039283166024820152916020918391168180604481015b03915afa9081156129b7575f91612b48575090565b90506020813d602011612b6f575b81612b63602093836127c0565b810103126105a9575190565b3d9150612b56565b612b7f612ba2565b506002548015612b9c5761090a612b999260085490612639565b90565b50505f90565b600654905f612bb0836128a7565b600b5490935f916001600160a01b03908116905b828410612bd357505050509190565b90919293612c1260019183612be788612774565b505416612bf381612aff565b90868103612c1c5750612c06888b6128d9565b525b612436878a6128d9565b9401929190612bc4565b90612c2691613263565b612c30888b6128d9565b52612c08565b6001600160a01b0316908115612c93577fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef602082612c775f9460025461275a565b60025584845283825260408420818154019055604051908152a3565b60405163ec442f0560e01b81525f6004820152602490fd5b600654905f5b828110612cbf575050505f90565b612cc881612774565b50546001600160a01b03838116911614612ce457600101612cb1565b60019250612cf29150612774565b50015490565b916001600160a01b03808416928315612da25716928315612c9357825f525f60205260405f205490828210612d705750817fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92602092855f525f84520360405f2055845f5260405f20818154019055604051908152a3565b60405163391434e360e21b81526001600160a01b03919091166004820152602481019190915260448101829052606490fd5b604051634b637e8f60e11b81525f6004820152602490fd5b15612dc157565b60405162461bcd60e51b815260206004820152601060248201526f11549497d1125597d25395115493905360821b6044820152606490fd5b8015612e2c576ec097ce7bc90715b34b9f1000000000908060011c820180831161264c5761090a612b9993821015612dba565b60405162461bcd60e51b815260206004820152600c60248201526b4552525f4449565f5a45524f60a01b6044820152606490fd5b908015612e2c57670de0b6b3a764000091828102908015818304851481171561264c57612b9994612e98928215612eb1575050612dba565b61090a612ea88360011c8361275a565b91821015612dba565b612ebd91925084612683565b145f806115ad565b90612ed0908261275a565b908110612eda5790565b60405162461bcd60e51b815260206004820152601060248201526f4552525f4144445f4f564552464c4f5760801b6044820152606490fd5b91906001928381106130c157671bc16d674ec7ffff811161308357670de0b6b3a764000091828104908382029180830485149015171561264c57612f5782859261321b565b910491808684161561307d57815b93871c90815b613050575050811561304857612f83909391936132a7565b82949183915f9289955b6305f5e100821015612fac575b50505050505050612b999293506131aa565b909192939495978189029289840483148a15171561264c5783610304612fe992610ce1612fe2612fdc8b99613212565b8d613319565b98906131aa565b9283156130415784613039575b613031575b8286156130225761300b9161321b565b975b5f19811461264c578a01959493929190612f8d565b61302b91612ec5565b9761300d565b941594612ffb565b951595612ff6565b5097612f9a565b509093505050565b8061305a916131aa565b9087811661306c575b871c9081612f6b565b9381613077916131aa565b93613063565b84612f65565b60405162461bcd60e51b815260206004820152601660248201527508aa4a4be84a09eaebe8482a68abea89e9ebe90928e960531b6044820152606490fd5b60405162461bcd60e51b81526020600482015260156024820152744552525f42504f575f424153455f544f4f5f4c4f5760581b6044820152606490fd5b1561310557565b60405162461bcd60e51b815260206004820152601060248201526f4552525f4d554c5f4f564552464c4f5760801b6044820152606490fd5b670de0b6b3a764001e9081810291811590828404811482171561264c5761316b9282156131965750506130fe565b6706f05b59d3b20000810180821161264c57613192670de0b6b3a7640000928210156130fe565b0490565b6131a291925084612683565b145f8061143c565b61316b906131b88382612639565b9281159182156131965750506130fe565b6131d2906132e0565b6131d95790565b60405162461bcd60e51b81526020600482015260116024820152704552525f5355425f554e444552464c4f5760781b6044820152606490fd5b6131d2906132a7565b906131d291613319565b1561322c57565b60405162461bcd60e51b815260206004820152600f60248201526e08aa4a4be9a82a890be82a0a0a49eb608b1b6044820152606490fd5b600c54600b5460405163248391ff60e01b81526001600160a01b03938416600482015290831660248201526044810193909352602091839116818060648101612b33565b670de0b6b3a76400008082106132d05750670de0b6b3a763ffff19810190811161264c57905f90565b90810390811161264c5790600190565b670de0b6b3a7640000908082106132ff57810390811161264c57905f90565b670de0b6b3a763ffff1981019150811161264c5790600190565b81811061332f579061332a91612767565b905f90565b61333891612767565b9060019056fea2646970667358221220b71b02d2c9c67070abd5edd7aed54964fa1025337a855a655ba976286c7bc78b64736f6c63430008190033","opcodes":"PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 SWAP2 DUP3 CALLDATASIZE LT ISZERO PUSH2 0x15 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 SWAP3 PUSH0 CALLDATALOAD PUSH1 0xE0 SHR SWAP2 DUP3 PUSH4 0x1D22CCD EQ PUSH2 0x258D JUMPI POP DUP2 PUSH4 0x6FDDE03 EQ PUSH2 0x2499 JUMPI DUP2 PUSH4 0x723C999 EQ PUSH2 0x21D2 JUMPI DUP2 PUSH4 0x902F1AC EQ PUSH2 0x21A2 JUMPI DUP2 PUSH4 0x95EA7B3 EQ PUSH2 0x20FA JUMPI DUP2 PUSH4 0x9A3BBE4 EQ PUSH2 0x6EC JUMPI DUP2 PUSH4 0xD0FA029 EQ PUSH2 0x1F79 JUMPI DUP2 PUSH4 0x18160DDD EQ PUSH2 0x1F5B JUMPI DUP2 PUSH4 0x189D00CA EQ PUSH2 0x1F3D JUMPI DUP2 PUSH4 0x1A686502 EQ PUSH2 0x1F19 JUMPI DUP2 PUSH4 0x218B5382 EQ PUSH2 0xC3D JUMPI DUP2 PUSH4 0x22ACB867 EQ PUSH2 0x1EBC JUMPI DUP2 PUSH4 0x23B872DD EQ PUSH2 0x1DDB JUMPI DUP2 PUSH4 0x313CE567 EQ PUSH2 0x1DC0 JUMPI DUP2 PUSH4 0x36BF6E39 EQ PUSH2 0x1D8C JUMPI DUP2 PUSH4 0x4AA06652 EQ PUSH2 0x1CE4 JUMPI DUP2 PUSH4 0x58D19698 EQ PUSH2 0x1BA3 JUMPI DUP2 PUSH4 0x5C1BBAF7 EQ PUSH2 0x1B5C JUMPI DUP2 PUSH4 0x67A6C440 EQ PUSH2 0x1B41 JUMPI DUP2 PUSH4 0x67E4AC2C EQ PUSH2 0x1ADE JUMPI DUP2 PUSH4 0x6E81221C EQ PUSH2 0x168C JUMPI DUP2 PUSH4 0x70A08231 EQ PUSH2 0x1656 JUMPI DUP2 PUSH4 0x76C7A3C7 EQ PUSH2 0x1637 JUMPI DUP2 PUSH4 0x77AACE1A EQ PUSH2 0x160F JUMPI DUP2 PUSH4 0x7FEC8D38 EQ PUSH2 0x15F1 JUMPI DUP2 PUSH4 0x82F652AD EQ PUSH2 0x1551 JUMPI DUP2 PUSH4 0x8656B653 EQ PUSH2 0x1506 JUMPI DUP2 PUSH4 0x867378C5 EQ PUSH2 0x14E9 JUMPI DUP2 PUSH4 0x89298012 EQ PUSH2 0x13F5 JUMPI DUP2 PUSH4 0x89AB3532 EQ PUSH2 0x138B JUMPI DUP2 PUSH4 0x89AFCB44 EQ PUSH2 0xF6C JUMPI DUP2 PUSH4 0x8A77C8DC EQ PUSH2 0xF47 JUMPI DUP2 PUSH4 0x9381CD2B EQ PUSH2 0xF24 JUMPI DUP2 PUSH4 0x95D89B41 EQ PUSH2 0xE26 JUMPI DUP2 PUSH4 0x992E2A92 EQ PUSH2 0xE04 JUMPI DUP2 PUSH4 0x9A86139B EQ PUSH2 0xDE1 JUMPI DUP2 PUSH4 0xA221EE49 EQ PUSH2 0xD98 JUMPI DUP2 PUSH4 0xA9059CBB EQ PUSH2 0xD68 JUMPI DUP2 PUSH4 0xB0E0D136 EQ PUSH2 0xD4D JUMPI DUP2 PUSH4 0xB2B55D70 EQ PUSH2 0xD28 JUMPI DUP2 PUSH4 0xB7B800A4 EQ PUSH2 0xD0D JUMPI DUP2 PUSH4 0xBA019DAB EQ PUSH2 0xCF2 JUMPI DUP2 PUSH4 0xBA9530A6 EQ PUSH2 0xCA4 JUMPI DUP2 PUSH4 0xBC063E1A EQ PUSH2 0xC82 JUMPI DUP2 PUSH4 0xBC694EA2 EQ PUSH2 0xC60 JUMPI DUP2 PUSH4 0xC2EE3A08 EQ PUSH2 0xC42 JUMPI DUP2 PUSH4 0xC36596A6 EQ PUSH2 0xC3D JUMPI DUP2 PUSH4 0xC45A0155 EQ PUSH2 0xC15 JUMPI DUP2 PUSH4 0xC6580D12 EQ PUSH2 0xBFB JUMPI DUP2 PUSH4 0xCDF456E1 EQ PUSH2 0xBD3 JUMPI DUP2 PUSH4 0xCF8FA764 EQ PUSH2 0xB5B JUMPI DUP2 PUSH4 0xD14EF46D EQ PUSH2 0xB0F JUMPI DUP2 PUSH4 0xDD62ED3E EQ PUSH2 0xAC6 JUMPI DUP2 PUSH4 0xDE836EBD EQ PUSH2 0x6F1 JUMPI DUP2 PUSH4 0xE4A28A52 EQ PUSH2 0x6EC JUMPI DUP2 PUSH4 0xE73FAA2D EQ PUSH2 0x6D0 JUMPI DUP2 PUSH4 0xEC093021 EQ PUSH2 0x6AE JUMPI DUP2 PUSH4 0xF47B45E8 EQ PUSH2 0x314 JUMPI POP PUSH4 0xF8D6AED4 EQ PUSH2 0x2AB JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x310 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x309 PUSH2 0x2E8 PUSH2 0x304 PUSH2 0x2EE PUSH2 0x2FE PUSH2 0x2F8 PUSH2 0x2F3 PUSH2 0x2E1 PUSH2 0x2D4 CALLDATASIZE PUSH2 0x26F8 JUMP JUMPDEST SWAP10 SWAP5 SWAP12 SWAP3 SWAP4 SWAP1 SWAP6 SWAP2 PUSH2 0x2E60 JUMP JUMPDEST SWAP4 DUP3 PUSH2 0x321B JUMP JUMPDEST SWAP1 PUSH2 0x2E60 JUMP JUMPDEST PUSH2 0x2F12 JUMP JUMPDEST PUSH2 0x3212 JUMP JUMPDEST SWAP2 PUSH2 0x31C9 JUMP JUMPDEST SWAP3 PUSH2 0x31AA JUMP JUMPDEST PUSH2 0x2E60 JUMP JUMPDEST SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x5A9 JUMPI PUSH1 0x3 NOT PUSH0 CALLDATASIZE DUP3 ADD SLT PUSH2 0x5A9 JUMPI PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 DUP6 AND SWAP2 PUSH2 0x342 CALLER DUP5 EQ PUSH2 0x280E JUMP JUMPDEST PUSH2 0x352 PUSH2 0x34D PUSH2 0x2AA9 JUMP JUMPDEST PUSH2 0x284B JUMP JUMPDEST PUSH1 0x6 SLOAD SWAP4 PUSH2 0x35F DUP6 PUSH2 0x28A7 JUMP JUMPDEST SWAP4 PUSH2 0x369 DUP7 PUSH2 0x28A7 JUMP JUMPDEST SWAP8 PUSH2 0x373 DUP8 PUSH2 0x28A7 JUMP JUMPDEST SWAP3 PUSH2 0x37D DUP9 PUSH2 0x28A7 JUMP JUMPDEST SWAP5 PUSH2 0x387 DUP10 PUSH2 0x28A7 JUMP JUMPDEST SWAP11 PUSH2 0x391 DUP11 PUSH2 0x28A7 JUMP JUMPDEST SWAP10 PUSH0 JUMPDEST DUP2 DUP2 LT PUSH2 0x5F5 JUMPI POP POP PUSH2 0x3A5 PUSH2 0x28ED JUMP JUMPDEST DUP5 PUSH1 0xC SLOAD AND SWAP2 PUSH1 0x7 SLOAD DUP7 PUSH1 0xB SLOAD AND DUP5 EXTCODESIZE ISZERO PUSH2 0x5A9 JUMPI DUP15 MLOAD PUSH4 0x3C2FDDC5 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0xE0 DUP2 DUP15 ADD MSTORE DUP14 SWAP10 SWAP1 SWAP7 DUP8 SWAP6 DUP7 SWAP6 SWAP2 SWAP1 PUSH2 0x3E4 SWAP1 PUSH1 0xE4 DUP9 ADD SWAP1 PUSH2 0x2606 JUMP JUMPDEST SWAP12 PUSH1 0x24 SWAP13 DUP3 DUP9 DUP3 SUB ADD PUSH1 0x24 DUP10 ADD MSTORE PUSH2 0x3FB SWAP2 PUSH2 0x271E JUMP JUMPDEST SWAP1 DUP7 DUP3 SUB ADD PUSH1 0x44 DUP8 ADD MSTORE PUSH2 0x40E SWAP2 PUSH2 0x2606 JUMP JUMPDEST SWAP3 PUSH1 0x64 DUP6 ADD MSTORE DUP1 PUSH1 0x84 DUP6 ADD MSTORE PUSH1 0xA4 DUP5 ADD MSTORE PUSH1 0xC4 DUP4 ADD MSTORE SUB DUP2 GAS PUSH0 SWAP5 DUP6 SWAP2 CALL DUP1 ISZERO PUSH2 0x5EB JUMPI PUSH2 0x5BE JUMPI JUMPDEST POP PUSH1 0x6 SLOAD PUSH1 0x9 SLOAD SWAP1 SWAP7 SWAP1 DUP4 AND SWAP3 DUP3 JUMPDEST DUP9 DUP2 LT PUSH2 0x4B3 JUMPI DUP13 DUP13 PUSH2 0x4AF DUP14 DUP14 PUSH32 0x279B343370F587AF7FB675AE7C8578E9C8ABCC373236AD02C501A4771FE7A7B8 DUP5 MLOAD PUSH1 0x20 DUP2 MSTORE DUP1 PUSH2 0x48B CALLER SWAP5 PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x271E JUMP JUMPDEST SUB SWAP1 LOG2 PUSH2 0x4A1 DUP4 MLOAD SWAP5 DUP5 DUP7 SWAP6 DUP7 MSTORE DUP6 ADD SWAP1 PUSH2 0x2606 JUMP JUMPDEST SWAP1 DUP4 DUP3 SUB PUSH1 0x20 DUP6 ADD MSTORE PUSH2 0x2606 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST DUP2 PUSH2 0x4BE DUP3 DUP13 PUSH2 0x28D9 JUMP JUMPDEST MLOAD AND DUP13 MLOAD DUP1 SWAP2 PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP3 MSTORE DUP8 DUP7 DUP4 ADD MSTORE DUP2 DUP10 PUSH1 0x20 SWAP5 DUP6 SWAP4 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x5B4 JUMPI DUP16 SWAP1 DUP11 SWAP5 SWAP4 DUP16 SWAP2 SWAP4 DUP14 SWAP5 DUP11 SWAP3 PUSH2 0x573 JUMPI JUMPDEST POP POP SWAP5 DUP5 SWAP2 PUSH1 0x1 SWAP7 PUSH2 0x506 DUP5 DUP8 PUSH2 0x28D9 JUMP JUMPDEST MSTORE PUSH2 0x511 DUP4 DUP7 PUSH2 0x28D9 JUMP JUMPDEST MLOAD PUSH2 0x51C DUP5 DUP5 PUSH2 0x28D9 JUMP JUMPDEST MLOAD LT ISZERO PUSH2 0x556 JUMPI POP PUSH2 0x548 SWAP1 PUSH2 0x541 DUP4 PUSH2 0x53A DUP2 PUSH2 0x54E SWAP8 SWAP9 PUSH2 0x28D9 JUMP JUMPDEST MLOAD SWAP3 PUSH2 0x28D9 JUMP JUMPDEST MLOAD SWAP1 PUSH2 0x2767 JUMP JUMPDEST SWAP3 PUSH2 0x28D9 JUMP JUMPDEST MSTORE JUMPDEST ADD PUSH2 0x446 JUMP JUMPDEST SWAP4 PUSH2 0x56D SWAP4 POP PUSH2 0x541 DUP4 PUSH2 0x53A DUP2 PUSH2 0x548 SWAP6 PUSH2 0x28D9 JUMP JUMPDEST MSTORE PUSH2 0x550 JUMP JUMPDEST SWAP5 POP SWAP6 POP POP POP POP DUP3 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x5AD JUMPI JUMPDEST PUSH2 0x58E DUP2 DUP4 PUSH2 0x27C0 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x5A9 JUMPI DUP9 DUP15 DUP3 DUP11 DUP16 PUSH1 0x1 SWAP7 MLOAD SWAP2 SWAP7 DUP2 SWAP4 POP PUSH2 0x4F4 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x584 JUMP JUMPDEST DUP15 MLOAD RETURNDATASIZE DUP9 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x5D8 JUMPI DUP9 MSTORE PUSH0 DUP11 PUSH2 0x437 JUMP JUMPDEST PUSH1 0x41 DUP7 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP11 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP6 PUSH2 0x5FF DUP3 PUSH2 0x2774 JUMP JUMPDEST POP SLOAD AND PUSH2 0x60C DUP3 DUP14 PUSH2 0x28D9 JUMP JUMPDEST MSTORE PUSH1 0x1 PUSH2 0x618 DUP3 PUSH2 0x2774 JUMP JUMPDEST POP ADD SLOAD PUSH2 0x625 DUP3 DUP6 PUSH2 0x28D9 JUMP JUMPDEST MSTORE DUP6 PUSH2 0x631 DUP3 DUP14 PUSH2 0x28D9 JUMP JUMPDEST MLOAD AND SWAP1 DUP14 MLOAD DUP1 SWAP3 PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP3 MSTORE DUP10 DUP14 DUP4 ADD MSTORE DUP2 PUSH1 0x24 PUSH1 0x20 SWAP4 DUP5 SWAP4 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x6A4 JUMPI PUSH0 SWAP2 PUSH2 0x675 JUMPI JUMPDEST POP PUSH1 0x1 SWAP3 POP PUSH2 0x66E DUP3 DUP12 PUSH2 0x28D9 JUMP JUMPDEST MSTORE ADD PUSH2 0x394 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x69D JUMPI JUMPDEST PUSH2 0x68B DUP2 DUP4 PUSH2 0x27C0 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x5A9 JUMPI PUSH1 0x1 SWAP2 MLOAD PUSH0 PUSH2 0x65F JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x681 JUMP JUMPDEST DUP16 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH8 0x6F05B59D3B20000 DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x309 PUSH2 0x2B77 JUMP JUMPDEST PUSH2 0x2660 JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x5A9 JUMPI PUSH2 0x70A PUSH2 0x25DA JUMP JUMPDEST SWAP1 PUSH1 0x24 SWAP2 DUP3 CALLDATALOAD SWAP4 PUSH8 0xFFFFFFFFFFFFFFFF DUP6 GT PUSH2 0x5A9 JUMPI CALLDATASIZE PUSH1 0x23 DUP7 ADD SLT ISZERO PUSH2 0x5A9 JUMPI DUP5 DUP2 ADD CALLDATALOAD SWAP4 PUSH2 0x739 DUP6 PUSH2 0x27F6 JUMP JUMPDEST SWAP5 PUSH2 0x746 DUP6 MLOAD SWAP7 DUP8 PUSH2 0x27C0 JUMP JUMPDEST DUP1 DUP7 MSTORE PUSH1 0x20 SWAP7 DUP3 DUP9 DUP9 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP2 CALLDATASIZE DUP4 GT PUSH2 0x5A9 JUMPI DUP4 DUP10 SWAP3 ADD SWAP1 JUMPDEST DUP4 DUP3 LT PUSH2 0xAB7 JUMPI POP POP PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP8 SWAP3 POP PUSH2 0x78A SWAP2 POP DUP8 AND CALLER EQ PUSH2 0x280E JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 PUSH0 SWAP1 PUSH2 0x798 PUSH2 0x28ED JUMP JUMPDEST SWAP1 PUSH1 0x6 SLOAD SWAP2 MLOAD DUP3 SUB PUSH2 0xA75 JUMPI DUP2 ISZERO PUSH2 0xA47 JUMPI SWAP1 PUSH0 SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0xA0E JUMPI POP POP POP DUP1 ISZERO PUSH2 0x9C1 JUMPI DUP4 DUP9 DUP9 PUSH1 0xB SLOAD AND DUP9 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH4 0x313CE567 PUSH1 0xE0 SHL DUP3 MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x9B7 JUMPI SWAP1 PUSH1 0xFF SWAP2 PUSH0 SWAP2 PUSH2 0x98A JUMPI JUMPDEST POP AND SWAP2 DUP1 PUSH2 0x8EC JUMPI POP PUSH8 0xDE0B6B3A7640000 DUP1 DUP3 MUL SWAP2 DUP3 DIV SUB PUSH2 0x8DA JUMPI SWAP1 PUSH2 0x810 SWAP2 PUSH2 0x2767 JUMP JUMPDEST SWAP5 JUMPDEST DUP6 ISZERO PUSH2 0x8A8 JUMPI PUSH2 0x843 DUP7 SWAP2 CALLER PUSH0 MSTORE PUSH0 DUP10 MSTORE DUP7 PUSH0 KECCAK256 SLOAD SWAP6 PUSH2 0x832 DUP5 DUP3 PUSH2 0x2C36 JUMP JUMPDEST AND SWAP5 DUP6 PUSH0 MSTORE PUSH0 DUP10 MSTORE DUP7 PUSH0 KECCAK256 SLOAD PUSH2 0x2767 JUMP JUMPDEST SUB PUSH2 0x878 JUMPI POP POP PUSH32 0xF6798A560793A54C3BCFE86A93CDE1E73087D944C0EA20544137D4121396885 DUP5 DUP4 MLOAD DUP6 DUP2 MSTORE LOG2 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP4 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP2 DUP3 ADD DUP7 SWAP1 MSTORE PUSH1 0xB SWAP1 DUP3 ADD MSTORE PUSH11 0x135A5B9D0811985A5B1959 PUSH1 0xAA SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP5 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP5 ADD DUP9 SWAP1 MSTORE PUSH1 0xD DUP2 DUP5 ADD MSTORE PUSH13 0x4D696E7420717479206973203 PUSH1 0x9C SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x11 DUP6 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE MSTORE PUSH0 REVERT JUMPDEST PUSH2 0x8F4 PUSH2 0x2BA2 JUMP JUMPDEST POP SWAP2 DUP3 ISZERO PUSH2 0x939 JUMPI PUSH2 0x90F SWAP3 SWAP2 PUSH2 0x90A SWAP2 PUSH2 0x2639 JUMP JUMPDEST PUSH2 0x2683 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 SWAP1 DUP2 DUP2 MUL SWAP2 DUP2 DUP4 DIV EQ SWAP1 ISZERO OR ISZERO PUSH2 0x8DA JUMPI SWAP1 PUSH2 0x933 SWAP2 PUSH2 0x2767 JUMP JUMPDEST SWAP5 PUSH2 0x812 JUMP JUMPDEST DUP8 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP8 ADD DUP12 SWAP1 MSTORE PUSH1 0x26 DUP2 DUP8 ADD MSTORE PUSH32 0x546F74616C206C6971756964697479206D757374206265206772656174657220 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x7468616E203 PUSH1 0xD4 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH2 0x9AA SWAP2 POP DUP11 RETURNDATASIZE DUP13 GT PUSH2 0x9B0 JUMPI JUMPDEST PUSH2 0x9A2 DUP2 DUP4 PUSH2 0x27C0 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x288E JUMP JUMPDEST DUP11 PUSH2 0x7E9 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x998 JUMP JUMPDEST DUP8 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP6 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP6 ADD DUP10 SWAP1 MSTORE PUSH1 0x22 DUP2 DUP6 ADD MSTORE PUSH32 0x546F74616C2076616C7565206D7573742062652067726561746572207468616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x203 PUSH1 0xF4 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 SWAP2 SWAP3 PUSH2 0xA3E PUSH1 0x1 SWAP2 PUSH2 0xA38 DUP13 PUSH2 0xA24 DUP9 PUSH2 0x2774 JUMP JUMPDEST POP SLOAD AND PUSH2 0xA31 DUP9 DUP8 PUSH2 0x28D9 JUMP JUMPDEST MLOAD SWAP1 PUSH2 0x3263 JUMP JUMPDEST SWAP1 PUSH2 0x275A JUMP JUMPDEST SWAP4 ADD SWAP2 SWAP1 PUSH2 0x7AE JUMP JUMPDEST DUP8 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP8 ADD DUP12 SWAP1 MSTORE PUSH1 0x9 DUP2 DUP8 ADD MSTORE PUSH9 0x4E6F20617373657473 PUSH1 0xB8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP8 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP8 ADD DUP12 SWAP1 MSTORE PUSH1 0x17 DUP2 DUP8 ADD MSTORE PUSH32 0x496E76616C6964207265736572766573206C656E677468000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE SWAP1 DUP3 ADD SWAP1 DUP3 ADD PUSH2 0x765 JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x5A9 JUMPI PUSH1 0x20 SWAP1 PUSH2 0xAE2 PUSH2 0x25DA JUMP JUMPDEST PUSH2 0xAEA PUSH2 0x25F0 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP2 AND PUSH0 MSTORE PUSH1 0x1 DUP5 MSTORE DUP3 PUSH0 KECCAK256 SWAP2 AND PUSH0 MSTORE DUP3 MSTORE DUP1 PUSH0 KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x5A9 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI CALLDATALOAD PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x5A9 JUMPI PUSH2 0xB36 SWAP1 PUSH2 0x2774 JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD SWAP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x5A9 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI DUP1 CALLDATALOAD SWAP1 PUSH2 0xB79 PUSH2 0x2BA2 JUMP JUMPDEST DUP1 SWAP3 SWAP2 POP MLOAD DUP4 LT ISZERO PUSH2 0xB9A JUMPI PUSH1 0x20 DUP5 PUSH2 0xB92 DUP6 DUP6 PUSH2 0x28D9 JUMP JUMPDEST MLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x20 DUP6 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x92DCECC2D8D2C840C2E6E6CAE840D2DCC8CAF PUSH1 0x6B SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI PUSH1 0xB SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH0 DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI PUSH1 0xA SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH2 0x26A1 JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x8 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH8 0x1BC16D674EC7FFFF DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH8 0x16345785D8A0000 DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x309 PUSH2 0xCDB PUSH2 0xCE1 PUSH2 0xCED PUSH2 0xCE7 PUSH2 0x2EE PUSH2 0xCE1 PUSH2 0x2E8 PUSH2 0xCCE CALLDATASIZE PUSH2 0x26F8 JUMP JUMPDEST SWAP9 SWAP5 SWAP7 SWAP3 SWAP12 SWAP2 SWAP1 SWAP4 PUSH2 0x2E60 JUMP JUMPDEST SWAP7 PUSH2 0x31C9 JUMP JUMPDEST SWAP1 PUSH2 0x31AA JUMP JUMPDEST DUP3 PUSH2 0x2EC5 JUMP JUMPDEST PUSH2 0x31C9 JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH1 0x2 DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x309 PUSH2 0xD48 PUSH2 0x25DA JUMP JUMPDEST PUSH2 0x2AFF JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH1 0x8 DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x5A9 JUMPI PUSH1 0x20 SWAP1 PUSH2 0xD91 PUSH2 0xD87 PUSH2 0x25DA JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x2CF8 JUMP JUMPDEST MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI PUSH2 0x309 PUSH2 0xDCE PUSH2 0xDC0 PUSH1 0x20 SWAP5 PUSH1 0x24 CALLDATALOAD SWAP1 CALLDATALOAD PUSH2 0x2E60 JUMP JUMPDEST PUSH2 0x2E8 PUSH1 0x64 CALLDATALOAD PUSH1 0x44 CALLDATALOAD PUSH2 0x2E60 JUMP JUMPDEST PUSH2 0xCE1 PUSH2 0xDDC PUSH1 0x84 CALLDATALOAD PUSH2 0x31C9 JUMP JUMPDEST PUSH2 0x2DF9 JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI MLOAD PUSH6 0x42524F4E5A45 PUSH1 0xD0 SHL DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH8 0x4A03CE68D215556 DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI DUP1 MLOAD SWAP1 PUSH0 SWAP3 DUP1 SLOAD SWAP1 PUSH1 0x1 DUP3 PUSH1 0x1 SHR SWAP2 PUSH1 0x1 DUP5 AND SWAP4 DUP5 ISZERO PUSH2 0xF1A JUMPI JUMPDEST PUSH1 0x20 SWAP5 DUP6 DUP6 LT DUP2 EQ PUSH2 0xF07 JUMPI DUP5 DUP9 MSTORE SWAP1 DUP2 ISZERO PUSH2 0xEE5 JUMPI POP PUSH1 0x1 EQ PUSH2 0xE8C JUMPI JUMPDEST PUSH2 0x4AF DUP7 DUP7 PUSH2 0xE82 DUP3 DUP12 SUB DUP4 PUSH2 0x27C0 JUMP JUMPDEST MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x25B0 JUMP JUMPDEST PUSH0 SWAP1 DUP2 MSTORE SWAP3 SWAP6 POP PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B JUMPDEST DUP3 DUP5 LT PUSH2 0xED2 JUMPI POP POP POP DUP3 PUSH2 0x4AF SWAP5 PUSH2 0xE82 SWAP3 DUP3 ADD ADD SWAP5 DUP7 PUSH2 0xE71 JUMP JUMPDEST DUP1 SLOAD DUP7 DUP6 ADD DUP9 ADD MSTORE SWAP3 DUP7 ADD SWAP3 DUP2 ADD PUSH2 0xEB5 JUMP JUMPDEST PUSH1 0xFF NOT AND DUP8 DUP7 ADD MSTORE POP POP POP ISZERO ISZERO PUSH1 0x5 SHL DUP4 ADD ADD SWAP3 POP PUSH2 0xE82 DUP3 PUSH2 0x4AF DUP7 PUSH2 0xE71 JUMP JUMPDEST PUSH1 0x22 DUP4 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP3 PUSH1 0x7F AND SWAP3 PUSH2 0xE52 JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH9 0x56BC75E2D63100000 DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI PUSH1 0x20 SWAP1 PUSH2 0xF63 PUSH2 0x2AA9 JUMP JUMPDEST SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI PUSH1 0x20 SWAP1 DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x5A9 JUMPI PUSH2 0xF88 PUSH2 0x25DA JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 PUSH2 0xFA2 CALLER DUP5 EQ PUSH2 0x280E JUMP JUMPDEST ADDRESS PUSH0 MSTORE PUSH0 DUP6 MSTORE DUP4 PUSH0 KECCAK256 SLOAD SWAP6 DUP7 ISZERO PUSH2 0x1348 JUMPI PUSH1 0x2 SLOAD SWAP7 DUP8 ISZERO PUSH2 0x1316 JUMPI PUSH1 0x6 SLOAD PUSH2 0xFC9 DUP2 PUSH2 0x28A7 JUMP JUMPDEST SWAP9 PUSH1 0x1E DUP4 MUL DUP4 DUP2 DIV PUSH1 0x1E SUB PUSH2 0x1303 JUMPI PUSH2 0x2710 PUSH2 0xFE7 SWAP2 DIV DUP1 SWAP5 PUSH2 0x2767 JUMP JUMPDEST SWAP7 PUSH0 JUMPDEST DUP4 DUP2 LT PUSH2 0x1248 JUMPI POP POP POP POP ADDRESS PUSH0 MSTORE PUSH0 DUP8 MSTORE DUP5 DUP7 PUSH0 KECCAK256 SLOAD LT PUSH2 0x1205 JUMPI DUP2 DUP8 DUP6 PUSH1 0xC SLOAD AND DUP9 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH4 0x61D027B3 PUSH1 0xE0 SHL DUP3 MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x9B7 JUMPI SWAP1 DUP9 SWAP2 PUSH0 SWAP2 PUSH2 0x11CB JUMPI JUMPDEST POP DUP8 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP5 DUP3 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP3 SWAP1 DUP2 SWAP1 PUSH1 0x40 ADD JUMPDEST SUB DUP2 PUSH0 ADDRESS GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x11C1 JUMPI PUSH0 SWAP2 PUSH2 0x118B JUMPI JUMPDEST POP ISZERO PUSH2 0x1152 JUMPI ADDRESS ISZERO PUSH2 0x113C JUMPI ADDRESS PUSH0 MSTORE PUSH0 DUP7 MSTORE DUP5 PUSH0 KECCAK256 SLOAD SWAP1 DUP5 DUP3 LT PUSH2 0x1111 JUMPI POP DUP4 SWAP3 PUSH32 0xCC16F5DBB4873280815C1EE09DBD06736CFFCC184412CF7A71A0FDB75D397CA5 SWAP3 PUSH2 0x4AF SWAP7 SWAP6 DUP9 SWAP4 ADDRESS PUSH0 MSTORE PUSH0 DUP6 MSTORE SUB DUP7 PUSH0 KECCAK256 SSTORE DUP5 PUSH1 0x2 SLOAD SUB PUSH1 0x2 SSTORE PUSH0 DUP7 MLOAD DUP7 DUP2 MSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP6 ADDRESS SWAP3 LOG3 DUP6 MLOAD SWAP5 DUP6 MSTORE AND SWAP3 LOG2 MLOAD SWAP3 DUP3 DUP5 SWAP4 DUP5 MSTORE DUP4 ADD SWAP1 PUSH2 0x2606 JUMP JUMPDEST DUP6 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE ADDRESS SWAP2 DUP2 ADD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 DUP2 ADD DUP6 SWAP1 MSTORE DUP2 SWAP1 PUSH1 0x60 ADD SUB SWAP1 REVERT JUMPDEST PUSH1 0x24 SWAP1 PUSH0 DUP7 MLOAD SWAP2 PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST DUP5 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x119959481D1C985B9CD9995C8819985A5B1959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 POP DUP7 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x11BA JUMPI JUMPDEST PUSH2 0x11A2 DUP2 DUP4 PUSH2 0x27C0 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x5A9 JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x5A9 JUMPI DUP9 PUSH2 0x1072 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1198 JUMP JUMPDEST DUP7 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP3 DUP2 SWAP4 SWAP3 POP RETURNDATASIZE DUP4 GT PUSH2 0x11FE JUMPI JUMPDEST PUSH2 0x11E2 DUP2 DUP4 PUSH2 0x27C0 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x5A9 JUMPI MLOAD DUP5 DUP2 AND DUP2 SUB PUSH2 0x5A9 JUMPI DUP8 SWAP1 PUSH2 0x105E PUSH2 0x102F JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x11D8 JUMP JUMPDEST DUP6 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP4 ADD DUP9 SWAP1 MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E742042414C554E49206C6971756964697479000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x128A DUP12 DUP10 PUSH2 0x1256 DUP5 PUSH2 0x2774 JUMP JUMPDEST POP SLOAD DUP14 MLOAD PUSH4 0xA3E113FB PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS DUP12 DUP3 ADD SWAP1 DUP2 MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP4 ADD MSTORE SWAP3 DUP4 SWAP2 DUP3 SWAP2 PUSH1 0x40 SWAP1 SWAP2 ADD SWAP1 JUMP JUMPDEST SUB DUP2 DUP7 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x12F9 JUMPI DUP11 DUP6 SWAP4 SWAP3 DUP16 SWAP3 PUSH0 SWAP2 PUSH2 0x12BF JUMPI JUMPDEST POP PUSH2 0x548 PUSH1 0x1 SWAP6 PUSH2 0x90A PUSH2 0x12B8 SWAP5 DUP8 SWAP5 PUSH2 0x2639 JUMP JUMPDEST MSTORE ADD PUSH2 0xFEA JUMP JUMPDEST SWAP5 POP POP POP POP DUP12 DUP3 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x12F2 JUMPI JUMPDEST PUSH2 0x12D9 DUP2 DUP4 PUSH2 0x27C0 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x5A9 JUMPI SWAP1 MLOAD DUP4 SWAP2 SWAP1 DUP14 SWAP1 DUP12 SWAP1 PUSH2 0x548 PUSH2 0x12A3 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x12CF JUMP JUMPDEST DUP12 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x11 DUP6 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP6 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP4 ADD DUP9 SWAP1 MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x4E6F206C6971756964697479 PUSH1 0xA0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP5 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5368617265206D7573742062652067726561746572207468616E203000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI PUSH2 0x13A4 PUSH2 0x29C2 JUMP JUMPDEST DUP3 MLOAD SWAP3 DUP4 SWAP2 DUP2 DUP4 ADD SWAP2 DUP4 MSTORE DUP4 MLOAD DUP1 SWAP3 MSTORE PUSH1 0x60 DUP4 ADD SWAP2 PUSH1 0x20 DUP1 SWAP6 ADD SWAP5 PUSH0 JUMPDEST DUP3 DUP2 LT PUSH2 0x13DC JUMPI DUP6 DUP1 PUSH2 0x4AF DUP8 DUP8 DUP4 DUP3 SUB PUSH1 0x20 DUP6 ADD MSTORE PUSH2 0x2606 JUMP JUMPDEST DUP7 MLOAD ISZERO ISZERO DUP6 MSTORE SWAP6 DUP2 ADD SWAP6 DUP8 SWAP6 POP SWAP4 DUP2 ADD SWAP4 PUSH1 0x1 ADD PUSH2 0x13C1 JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI PUSH2 0x1411 PUSH2 0x1407 CALLDATASIZE PUSH2 0x26F8 JUMP JUMPDEST SWAP6 SWAP2 SWAP1 SWAP3 SWAP4 PUSH2 0x2E60 JUMP JUMPDEST SWAP6 PUSH8 0xDE0B6B3A7640000 SWAP2 DUP3 DUP2 MUL SWAP1 DUP1 ISZERO SWAP1 DUP1 DUP4 DIV DUP6 EQ DUP3 OR ISZERO PUSH2 0x14D6 JUMPI SWAP1 DUP5 PUSH2 0x1443 SWAP3 DUP3 ISZERO PUSH2 0x14C2 JUMPI JUMPDEST POP POP PUSH2 0x30FE JUMP JUMPDEST PUSH8 0x6F05B59D3B20000 DUP2 ADD SWAP2 DUP3 DUP3 GT PUSH2 0x14AF JUMPI POP PUSH2 0x14A9 DUP6 PUSH2 0x14A3 PUSH1 0x20 SWAP11 SWAP8 PUSH2 0x149E PUSH2 0x148F PUSH2 0xCE1 SWAP10 PUSH2 0x304 PUSH2 0xCED SWAP11 DUP11 PUSH2 0x309 SWAP16 SWAP12 PUSH2 0x149E SWAP12 PUSH2 0x1488 SWAP2 LT ISZERO PUSH2 0x30FE JUMP JUMPDEST DIV DUP3 PUSH2 0x321B JUMP JUMPDEST PUSH2 0x1498 DUP12 PUSH2 0x2DF9 JUMP JUMPDEST SWAP1 PUSH2 0x2F12 JUMP JUMPDEST PUSH2 0x31AA JUMP JUMPDEST SWAP1 PUSH2 0x321B JUMP JUMPDEST SWAP5 PUSH2 0x31C9 JUMP JUMPDEST PUSH1 0x11 SWAP1 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x14CE SWAP2 SWAP3 POP DUP5 PUSH2 0x2683 JUMP JUMPDEST EQ DUP5 DUP12 PUSH2 0x143C JUMP JUMPDEST PUSH1 0x11 DUP5 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH3 0xF4240 DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x309 PUSH2 0xCED PUSH2 0x154C PUSH2 0x1542 PUSH2 0x149E PUSH2 0xCE7 PUSH2 0x2EE PUSH2 0xCE1 PUSH2 0x304 PUSH2 0x1533 CALLDATASIZE PUSH2 0x26F8 JUMP JUMPDEST SWAP9 SWAP5 SWAP7 SWAP3 SWAP13 SWAP2 DUP14 SWAP12 SWAP2 SWAP5 PUSH2 0x2E60 JUMP JUMPDEST SWAP8 PUSH2 0x149E DUP10 PUSH2 0x31C9 JUMP JUMPDEST PUSH2 0x321B JUMP JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x5A9 JUMPI PUSH2 0x1582 PUSH2 0xCED PUSH2 0x14A3 PUSH2 0x1542 PUSH2 0x149E PUSH2 0x157C PUSH2 0x2EE PUSH2 0x2E8 PUSH2 0x304 PUSH2 0x1533 CALLDATASIZE PUSH2 0x26F8 JUMP JUMPDEST DUP3 PUSH2 0x321B JUMP JUMPDEST SWAP2 PUSH8 0xDE0B6B3A7640000 SWAP1 DUP2 DUP5 MUL SWAP4 DUP1 ISZERO SWAP1 DUP1 DUP7 DIV DUP5 EQ DUP3 OR ISZERO PUSH2 0x1303 JUMPI SWAP1 DUP4 PUSH2 0x15B4 SWAP3 DUP3 ISZERO PUSH2 0x15DD JUMPI JUMPDEST POP POP PUSH2 0x2DBA JUMP JUMPDEST PUSH8 0x6F05B59D3B20000 DUP5 ADD SWAP3 DUP4 DUP6 GT PUSH2 0x14AF JUMPI POP PUSH2 0x15D6 PUSH1 0x20 SWAP5 DUP5 LT ISZERO PUSH2 0x2DBA JUMP JUMPDEST MLOAD SWAP2 DIV DUP2 MSTORE RETURN JUMPDEST PUSH2 0x15E9 SWAP2 SWAP3 POP DUP8 PUSH2 0x2683 JUMP JUMPDEST EQ DUP4 DUP8 PUSH2 0x15AD JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x7 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI PUSH1 0x9 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH5 0xE8D4A51000 DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x167B PUSH2 0x25DA JUMP JUMPDEST AND PUSH0 MSTORE PUSH0 DUP3 MSTORE DUP1 PUSH0 KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x5A9 JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI PUSH2 0x16A7 PUSH2 0x25DA JUMP JUMPDEST SWAP2 PUSH2 0x16B0 PUSH2 0x25F0 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 PUSH1 0x64 CALLDATALOAD DUP4 DUP2 AND SWAP2 SWAP1 DUP3 SWAP1 SUB PUSH2 0x5A9 JUMPI PUSH1 0x2 PUSH1 0x5 SLOAD EQ PUSH2 0x1AD0 JUMPI PUSH1 0x2 PUSH1 0x5 SSTORE DUP4 DUP4 AND SWAP4 DUP8 AND SWAP3 DUP5 DUP5 EQ PUSH2 0x1A8D JUMPI DUP7 ISZERO PUSH2 0x1A4A JUMPI PUSH2 0x16F9 DUP2 PUSH2 0x2AFF JUMP JUMPDEST SWAP8 PUSH2 0x1703 DUP2 PUSH2 0x2AFF JUMP JUMPDEST SWAP1 PUSH2 0x3E8 SWAP1 DUP2 PUSH2 0x1712 DUP3 PUSH2 0x2CAB JUMP JUMPDEST DIV SWAP11 PUSH8 0xDE0B6B3A7640000 SWAP12 DUP13 DUP2 MUL SWAP1 DUP14 DUP2 DUP4 DIV EQ SWAP1 ISZERO OR ISZERO PUSH2 0x1A37 JUMPI DUP13 SWAP1 DUP5 PUSH2 0x173B DUP9 PUSH2 0x2CAB JUMP JUMPDEST DIV DUP3 DUP2 MUL SWAP3 DUP2 DUP5 DIV EQ SWAP1 ISZERO OR ISZERO PUSH2 0x19CB JUMPI PUSH2 0x176C SWAP2 PUSH2 0x2E8 PUSH2 0x1760 PUSH2 0x1767 SWAP4 DUP10 PUSH2 0x2E60 JUMP JUMPDEST SWAP2 DUP6 PUSH2 0x2E60 JUMP JUMPDEST PUSH2 0x313D JUMP JUMPDEST SWAP3 DUP13 DUP2 PUSH2 0x1778 DUP6 PUSH2 0x2CAB JUMP JUMPDEST DIV DUP2 DUP2 MUL SWAP2 DUP2 DUP4 DIV EQ SWAP1 ISZERO OR ISZERO PUSH2 0x19CB JUMPI DUP14 SWAP1 DUP3 PUSH2 0x1795 DUP10 PUSH2 0x2CAB JUMP JUMPDEST DIV DUP3 DUP2 MUL SWAP3 DUP2 DUP5 DIV EQ SWAP1 ISZERO OR ISZERO PUSH2 0x1A24 JUMPI SWAP1 PUSH2 0x17B0 SWAP2 PUSH2 0x2E60 JUMP JUMPDEST DUP13 PUSH8 0xDE0B6B3A763FFE2 DUP1 DUP3 MUL SWAP2 DUP3 DIV DUP2 SUB PUSH2 0x1A11 JUMPI PUSH2 0x17DB SWAP1 DUP16 PUSH2 0x17D5 SWAP1 DUP5 PUSH2 0x2683 JUMP JUMPDEST EQ PUSH2 0x30FE JUMP JUMPDEST PUSH8 0x6F05B59D3B20000 DUP2 ADD SWAP1 DUP2 DUP2 GT PUSH2 0x1A11 JUMPI DUP16 SWAP3 PUSH2 0x2EE PUSH2 0x1814 PUSH2 0x1820 SWAP6 DUP6 PUSH2 0x180D PUSH2 0xCED SWAP7 PUSH2 0x181A SWAP9 LT ISZERO PUSH2 0x30FE JUMP JUMPDEST DIV DUP12 PUSH2 0x2EC5 JUMP JUMPDEST DUP11 PUSH2 0x2E60 JUMP JUMPDEST DUP4 PUSH2 0x31AA JUMP JUMPDEST SWAP5 PUSH1 0x1 DUP7 LT PUSH2 0x19DE JUMPI SWAP1 DUP1 PUSH2 0x184C DUP16 SWAP5 SWAP4 DUP16 PUSH2 0x1840 DUP11 SWAP2 PUSH2 0x1846 SWAP4 PUSH2 0x2EC5 JUMP JUMPDEST SWAP6 PUSH2 0x321B JUMP JUMPDEST SWAP6 PUSH2 0x2CAB JUMP JUMPDEST DIV DUP4 DUP2 MUL SWAP4 DUP2 DUP6 DIV EQ SWAP1 ISZERO OR ISZERO PUSH2 0x19CB JUMPI SWAP1 DUP14 SWAP3 SWAP2 PUSH2 0x186A DUP9 PUSH2 0x2CAB JUMP JUMPDEST DIV DUP4 DUP2 MUL SWAP4 DUP2 DUP6 DIV EQ SWAP1 ISZERO OR ISZERO PUSH2 0x19CB JUMPI PUSH2 0x1767 DUP6 SWAP5 PUSH2 0x2E8 PUSH2 0x18A5 SWAP6 PUSH2 0x1898 PUSH2 0x18AF SWAP10 SWAP7 PUSH2 0x189E SWAP7 PUSH2 0x2E60 JUMP JUMPDEST SWAP3 PUSH2 0x2E60 JUMP JUMPDEST LT ISZERO PUSH2 0x3225 JUMP JUMPDEST PUSH2 0x189E DUP4 DUP12 PUSH2 0x2E60 JUMP JUMPDEST DUP7 MLOAD PUSH4 0x313CE567 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x20 SWAP10 SWAP1 DUP11 DUP2 DUP7 DUP2 DUP12 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x19C1 JUMPI SWAP1 PUSH1 0xFF SWAP2 PUSH0 SWAP2 PUSH2 0x19A4 JUMPI JUMPDEST POP AND SWAP1 SUB PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 DUP2 DUP2 GT PUSH2 0x1303 JUMPI SWAP2 PUSH2 0x18FF SWAP2 PUSH2 0x1907 SWAP6 SWAP5 SWAP4 AND SWAP1 PUSH2 0x2683 JUMP JUMPDEST SWAP3 DUP4 SWAP2 PUSH2 0x2AFF JUMP JUMPDEST LT PUSH2 0x1968 JUMPI PUSH1 0x1E DUP3 MUL SWAP1 DUP3 DUP3 DIV PUSH1 0x1E EQ DUP4 ISZERO OR ISZERO PUSH2 0x14AF JUMPI POP PUSH2 0x1951 PUSH32 0xCD3829A3813DC3CDD188FD3D01DCF3268C16BE2FDD2DD21D0665418816E46062 SWAP3 PUSH2 0x2710 DUP9 SWAP4 DIV SWAP1 PUSH2 0x2767 JUMP JUMPDEST SWAP7 DUP2 MLOAD SWAP1 DUP2 MSTORE DUP8 DUP10 DUP3 ADD MSTORE LOG4 PUSH1 0x1 PUSH1 0x5 SSTORE MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP6 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x496E73756666696369656E74204C6971756964697479 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x19BB SWAP2 POP DUP13 DUP14 RETURNDATASIZE LT PUSH2 0x9B0 JUMPI PUSH2 0x9A2 DUP2 DUP4 PUSH2 0x27C0 JUMP JUMPDEST DUP13 PUSH2 0x18D8 JUMP JUMPDEST DUP10 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x11 DUP9 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP12 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP11 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x11549497D31253525517D3D555 PUSH1 0x9A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x11 DUP11 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x11 DUP10 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x11 DUP8 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP6 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP5 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E207A65726F PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP6 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP5 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F742073776170207468652073616D6520746F6B656E000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP5 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE REVERT JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI PUSH1 0x6 SLOAD PUSH2 0x1AFB DUP2 PUSH2 0x28A7 JUMP JUMPDEST SWAP1 PUSH0 JUMPDEST DUP2 DUP2 LT PUSH2 0x1B1A JUMPI DUP4 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 SWAP1 PUSH2 0x4AF SWAP1 DUP3 ADD DUP7 PUSH2 0x271E JUMP JUMPDEST DUP1 PUSH2 0x1B26 PUSH1 0x1 SWAP3 PUSH2 0x2774 JUMP JUMPDEST POP DUP3 DUP1 PUSH1 0xA0 SHL SUB SWAP1 SLOAD AND PUSH2 0x1B3A DUP3 DUP7 PUSH2 0x28D9 JUMP JUMPDEST MSTORE ADD PUSH2 0x1AFE JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH1 0x1E DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x309 PUSH2 0x1B9C PUSH2 0x2E8 PUSH2 0xCED PUSH2 0x149E PUSH2 0x149E PUSH2 0x14A9 PUSH2 0x148F PUSH2 0x154C PUSH2 0x304 PUSH2 0x1B8C CALLDATASIZE PUSH2 0x26F8 JUMP JUMPDEST SWAP11 SWAP5 SWAP8 SWAP4 SWAP2 DUP9 SWAP7 SWAP3 SWAP15 SWAP2 SWAP15 PUSH2 0x2E60 JUMP JUMPDEST SWAP13 DUP3 PUSH2 0x2EC5 JUMP JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x5A9 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x5A9 JUMPI PUSH2 0x1BBD PUSH2 0x25DA JUMP JUMPDEST SWAP2 PUSH2 0x1BC6 PUSH2 0x25F0 JUMP JUMPDEST PUSH2 0x1BCF DUP5 PUSH2 0x2AFF JUMP JUMPDEST POP PUSH2 0x1BD9 DUP2 PUSH2 0x2AFF JUMP JUMPDEST POP DUP2 MLOAD PUSH4 0x313CE567 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x20 SWAP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP7 DUP2 DUP8 DUP2 DUP6 DUP8 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x1CDA JUMPI SWAP1 PUSH1 0xFF SWAP2 PUSH0 SWAP2 PUSH2 0x1CBD JUMPI JUMPDEST POP AND SWAP2 PUSH1 0xC SLOAD AND SWAP2 PUSH1 0x4D DUP2 GT PUSH2 0x1CAA JUMPI DUP5 MLOAD PUSH4 0x248391FF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP7 DUP2 ADD SWAP7 DUP8 MSTORE SWAP4 SWAP1 SWAP2 AND PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0xA EXP PUSH1 0x40 DUP6 ADD MSTORE SWAP1 SWAP3 DUP5 SWAP2 DUP5 SWAP2 DUP3 SWAP1 DUP2 SWAP1 PUSH1 0x60 ADD SUB SWAP2 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x1CA0 JUMPI PUSH0 SWAP3 PUSH2 0x1C71 JUMPI JUMPDEST POP MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 SWAP2 POP DUP3 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x1C99 JUMPI JUMPDEST PUSH2 0x1C89 DUP2 DUP4 PUSH2 0x27C0 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x5A9 JUMPI MLOAD SWAP1 DUP4 PUSH2 0x1C6A JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1C7F JUMP JUMPDEST POP MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x11 DUP7 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1CD4 SWAP2 POP DUP9 RETURNDATASIZE DUP11 GT PUSH2 0x9B0 JUMPI PUSH2 0x9A2 DUP2 DUP4 PUSH2 0x27C0 JUMP JUMPDEST DUP9 PUSH2 0x1C0D JUMP JUMPDEST DUP6 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI PUSH1 0x20 PUSH2 0x1CF5 CALLDATASIZE PUSH2 0x26C3 JUMP JUMPDEST PUSH1 0xC SLOAD DUP6 MLOAD PUSH4 0x248391FF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND SWAP8 DUP2 ADD SWAP8 DUP9 MSTORE SWAP3 DUP5 AND PUSH1 0x20 DUP9 ADD MSTORE PUSH1 0x40 DUP8 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP5 DUP6 SWAP3 SWAP1 DUP4 SWAP1 SUB PUSH1 0x60 ADD SWAP2 DUP4 SWAP2 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x1D83 JUMPI PUSH0 SWAP2 PUSH2 0x1D4E JUMPI JUMPDEST PUSH1 0x20 SWAP3 POP MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 POP PUSH1 0x20 DUP3 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1D7B JUMPI JUMPDEST DUP2 PUSH2 0x1D69 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x27C0 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x5A9 JUMPI PUSH1 0x20 SWAP2 MLOAD SWAP1 PUSH2 0x1D44 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x1D5C JUMP JUMPDEST MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI PUSH2 0x4AF PUSH2 0x1DA8 PUSH2 0x2BA2 JUMP JUMPDEST DUP4 SWAP3 SWAP2 SWAP3 MLOAD SWAP4 DUP5 SWAP4 DUP5 MSTORE DUP1 PUSH1 0x20 DUP6 ADD MSTORE DUP4 ADD SWAP1 PUSH2 0x2606 JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH1 0x12 DUP2 MSTORE RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x5A9 JUMPI PUSH2 0x1DEB CALLDATASIZE PUSH2 0x26C3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE DUP9 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 MSTORE SWAP1 DUP8 SWAP1 KECCAK256 SLOAD SWAP3 SWAP6 SWAP4 SWAP5 SWAP4 SWAP1 DUP4 ADD PUSH2 0x1E28 JUMPI JUMPDEST PUSH1 0x20 DUP8 PUSH2 0xD91 DUP9 DUP9 DUP9 PUSH2 0x2CF8 JUMP JUMPDEST DUP6 DUP4 LT PUSH2 0x1E90 JUMPI DUP2 ISZERO PUSH2 0x1E7A JUMPI CALLER ISZERO PUSH2 0x1E64 JUMPI POP PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE DUP7 DUP3 KECCAK256 CALLER DUP4 MSTORE DUP2 MSTORE SWAP1 DUP7 SWAP1 KECCAK256 SWAP2 DUP6 SWAP1 SUB SWAP1 SWAP2 SSTORE DUP3 SWAP1 PUSH2 0xD91 PUSH2 0x1E1A JUMP JUMPDEST PUSH1 0x24 SWAP1 PUSH0 DUP9 MLOAD SWAP2 PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x24 SWAP1 PUSH0 DUP9 MLOAD SWAP2 PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST DUP7 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE CALLER SWAP2 DUP2 ADD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 DUP2 ADD DUP7 SWAP1 MSTORE DUP3 SWAP2 POP PUSH1 0x60 ADD SUB SWAP1 REVERT JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI PUSH1 0x6 SLOAD PUSH2 0x1ED9 DUP2 PUSH2 0x28A7 JUMP JUMPDEST SWAP1 PUSH0 JUMPDEST DUP2 DUP2 LT PUSH2 0x1EF8 JUMPI DUP4 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 SWAP1 PUSH2 0x4AF SWAP1 DUP3 ADD DUP7 PUSH2 0x2606 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH2 0x1F05 DUP2 SWAP4 PUSH2 0x2774 JUMP JUMPDEST POP ADD SLOAD PUSH2 0x1F12 DUP3 DUP7 PUSH2 0x28D9 JUMP JUMPDEST MSTORE ADD PUSH2 0x1EDC JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x1F35 PUSH2 0x2BA2 JUMP JUMPDEST POP SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH4 0x5F5E100 DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x2 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x5A9 JUMPI PUSH2 0x1F92 PUSH2 0x25DA JUMP JUMPDEST PUSH2 0x1F9A PUSH2 0x25F0 JUMP JUMPDEST SWAP3 PUSH2 0x1FA4 DUP3 PUSH2 0x2AFF JUMP JUMPDEST SWAP4 PUSH2 0x1FAE DUP2 PUSH2 0x2AFF JUMP JUMPDEST DUP5 MLOAD PUSH4 0x313CE567 PUSH1 0xE0 SHL DUP1 DUP3 MSTORE PUSH1 0x20 SWAP8 SWAP2 SWAP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP10 DUP8 DUP6 DUP2 DUP12 DUP10 AND GAS STATICCALL SWAP7 DUP8 ISZERO PUSH2 0x19C1 JUMPI SWAP1 DUP11 SWAP2 PUSH0 SWAP9 PUSH2 0x20DB JUMPI JUMPDEST POP DUP5 DUP11 MLOAD DUP1 SWAP8 DUP2 SWAP4 DUP3 MSTORE DUP10 AND GAS STATICCALL SWAP4 DUP5 ISZERO PUSH2 0x20D1 JUMPI PUSH0 SWAP5 PUSH2 0x20B2 JUMPI JUMPDEST POP PUSH8 0xDE0B6B3A7640000 SWAP6 DUP7 DUP3 MUL SWAP2 DUP1 DUP4 DIV DUP9 EQ SWAP1 ISZERO OR ISZERO PUSH2 0x14D6 JUMPI SWAP1 PUSH1 0xFF PUSH2 0x202D SWAP3 AND SWAP1 PUSH2 0x2767 JUMP JUMPDEST SWAP3 DUP6 DUP3 MUL SWAP2 DUP1 DUP4 DIV DUP8 EQ SWAP1 ISZERO OR ISZERO PUSH2 0x209F JUMPI PUSH2 0x205C SWAP2 PUSH1 0xFF PUSH2 0x2050 SWAP3 AND SWAP1 PUSH2 0x2767 JUMP JUMPDEST SWAP6 PUSH2 0x3E8 SWAP2 DUP3 SWAP2 PUSH2 0x2CAB JUMP JUMPDEST DIV SWAP4 DUP6 DUP6 MUL SWAP5 DUP1 DUP7 DIV DUP8 EQ SWAP1 ISZERO OR ISZERO PUSH2 0x209F JUMPI PUSH2 0x2078 SWAP1 PUSH2 0x2CAB JUMP JUMPDEST DIV DUP5 DUP2 MUL SWAP5 DUP2 DUP7 DIV EQ SWAP1 ISZERO OR ISZERO PUSH2 0x14AF JUMPI POP PUSH2 0x1767 SWAP3 PUSH2 0x1898 PUSH2 0x309 SWAP6 SWAP4 PUSH2 0x2E8 SWAP4 PUSH2 0x2E60 JUMP JUMPDEST PUSH1 0x11 DUP4 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x20CA SWAP2 SWAP5 POP DUP10 RETURNDATASIZE DUP12 GT PUSH2 0x9B0 JUMPI PUSH2 0x9A2 DUP2 DUP4 PUSH2 0x27C0 JUMP JUMPDEST SWAP3 DUP10 PUSH2 0x2003 JUMP JUMPDEST DUP9 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x20F3 SWAP2 SWAP9 POP DUP3 RETURNDATASIZE DUP5 GT PUSH2 0x9B0 JUMPI PUSH2 0x9A2 DUP2 DUP4 PUSH2 0x27C0 JUMP JUMPDEST SWAP7 DUP12 PUSH2 0x1FE7 JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x5A9 JUMPI PUSH2 0x2113 PUSH2 0x25DA JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER ISZERO PUSH2 0x218C JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x2176 JUMPI PUSH1 0x20 SWAP4 POP CALLER PUSH0 MSTORE PUSH1 0x1 DUP5 MSTORE DUP3 PUSH0 KECCAK256 DUP3 PUSH0 MSTORE DUP5 MSTORE DUP1 DUP4 PUSH0 KECCAK256 SSTORE DUP3 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 CALLER SWAP3 LOG3 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST DUP3 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 DUP2 DUP7 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP3 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 DUP2 DUP7 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI PUSH2 0x4AF SWAP1 PUSH2 0x21BF PUSH2 0x28ED JUMP JUMPDEST SWAP1 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x2606 JUMP JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x5A9 JUMPI PUSH1 0x20 SWAP2 DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x5A9 JUMPI PUSH2 0x21EF PUSH2 0x25DA JUMP JUMPDEST SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP4 PUSH2 0x2207 DUP6 PUSH1 0x9 SLOAD AND CALLER EQ PUSH2 0x280E JUMP JUMPDEST PUSH2 0x2212 PUSH2 0x34D PUSH2 0x2AA9 JUMP JUMPDEST PUSH2 0x221A PUSH2 0x2BA2 JUMP JUMPDEST PUSH1 0x6 SLOAD SWAP5 SWAP2 PUSH2 0x2228 DUP7 PUSH2 0x28A7 JUMP JUMPDEST SWAP2 PUSH0 JUMPDEST DUP8 DUP2 LT PUSH2 0x2444 JUMPI POP POP POP PUSH0 SWAP1 PUSH0 JUMPDEST DUP7 DUP2 LT PUSH2 0x2425 JUMPI POP PUSH1 0xB SLOAD DUP4 MLOAD PUSH4 0x313CE567 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 DUP10 AND SWAP3 DUP6 DUP3 DUP9 DUP2 DUP8 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x1CDA JUMPI PUSH0 SWAP3 PUSH2 0x2406 JUMPI JUMPDEST POP PUSH1 0xFF PUSH8 0xDE0B6B3A7640000 SWAP3 AND DUP3 SUB SWAP2 DUP3 GT PUSH2 0x1A37 JUMPI PUSH2 0x2293 SWAP2 PUSH2 0x228D SWAP2 PUSH2 0x2639 JUMP JUMPDEST SWAP7 PUSH2 0x28A7 JUMP JUMPDEST SWAP6 PUSH0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x23AE JUMPI PUSH2 0x22A9 DUP2 DUP5 PUSH2 0x28D9 JUMP JUMPDEST MLOAD PUSH2 0x22B7 JUMPI JUMPDEST PUSH1 0x1 ADD PUSH2 0x2296 JUMP JUMPDEST PUSH2 0x22C1 DUP2 DUP5 PUSH2 0x28D9 JUMP JUMPDEST MLOAD DUP7 DUP12 PUSH2 0x22CD DUP5 PUSH2 0x2774 JUMP JUMPDEST POP SLOAD PUSH1 0xC SLOAD DUP10 MLOAD PUSH4 0x248391FF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 DUP2 AND DUP15 DUP4 ADD SWAP1 DUP2 MSTORE SWAP5 SWAP1 SWAP4 AND SWAP1 SWAP3 AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP3 DUP4 SWAP2 DUP3 SWAP1 SUB PUSH1 0x60 ADD SWAP1 DUP3 SWAP1 DUP16 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x11C1 JUMPI PUSH0 SWAP2 PUSH2 0x2381 JUMPI JUMPDEST POP DUP1 ISZERO PUSH2 0x233E JUMPI SWAP1 PUSH1 0x1 SWAP2 PUSH2 0x2336 DUP3 DUP12 PUSH2 0x28D9 JUMP JUMPDEST MSTORE SWAP1 POP PUSH2 0x22AF JUMP JUMPDEST DUP6 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP10 ADD DUP9 SWAP1 MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420746F6B656E20616D6F756E7420746F206164640000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 POP DUP7 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x23A7 JUMPI JUMPDEST PUSH2 0x2398 DUP2 DUP4 PUSH2 0x27C0 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x5A9 JUMPI MLOAD DUP12 PUSH2 0x2321 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x238E JUMP JUMPDEST DUP8 DUP7 PUSH2 0x4AF DUP8 DUP7 PUSH2 0x23BF DUP8 DUP16 PUSH2 0x2C36 JUMP JUMPDEST PUSH32 0xA95AD530009C6F929555E70A66AADBEAE7231E45756C5B028CA77FBAA376E73E DUP3 MLOAD DUP6 DUP2 MSTORE DUP1 PUSH2 0x23F4 CALLER SWAP5 DUP9 DUP4 ADD SWAP1 PUSH2 0x2606 JUMP JUMPDEST SUB SWAP1 LOG2 MLOAD SWAP3 DUP3 DUP5 SWAP4 DUP5 MSTORE DUP4 ADD SWAP1 PUSH2 0x2606 JUMP JUMPDEST PUSH2 0x241E SWAP2 SWAP3 POP DUP7 RETURNDATASIZE DUP9 GT PUSH2 0x9B0 JUMPI PUSH2 0x9A2 DUP2 DUP4 PUSH2 0x27C0 JUMP JUMPDEST SWAP1 DUP11 PUSH2 0x2269 JUMP JUMPDEST SWAP2 PUSH2 0x243D PUSH1 0x1 SWAP2 PUSH2 0x2436 DUP6 DUP6 PUSH2 0x28D9 JUMP JUMPDEST MLOAD SWAP1 PUSH2 0x275A JUMP JUMPDEST SWAP3 ADD PUSH2 0x2239 JUMP JUMPDEST DUP1 PUSH2 0x2710 PUSH2 0x2460 PUSH1 0x1 PUSH2 0x2457 DUP2 SWAP6 PUSH2 0x2774 JUMP JUMPDEST POP ADD SLOAD DUP7 PUSH2 0x2639 JUMP JUMPDEST DIV DUP1 PUSH2 0x246C DUP4 DUP7 PUSH2 0x28D9 JUMP JUMPDEST MLOAD LT PUSH2 0x247A JUMPI JUMPDEST POP ADD PUSH2 0x222B JUMP JUMPDEST PUSH2 0x2488 SWAP1 PUSH2 0x541 DUP4 DUP7 PUSH2 0x28D9 JUMP JUMPDEST PUSH2 0x2492 DUP3 DUP8 PUSH2 0x28D9 JUMP JUMPDEST MSTORE DUP12 PUSH2 0x2473 JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI DUP1 MLOAD SWAP1 PUSH0 SWAP3 PUSH1 0x3 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 SHR SWAP2 PUSH1 0x1 DUP2 AND DUP1 ISZERO PUSH2 0x2583 JUMPI JUMPDEST PUSH1 0x20 SWAP5 DUP6 DUP6 LT DUP3 EQ PUSH2 0x2570 JUMPI POP DUP4 DUP8 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x2550 JUMPI POP PUSH1 0x1 EQ PUSH2 0x24F6 JUMPI JUMPDEST POP POP POP PUSH2 0xE82 DUP3 PUSH2 0x4AF SWAP5 SUB DUP4 PUSH2 0x27C0 JUMP JUMPDEST PUSH1 0x3 PUSH0 SWAP1 DUP2 MSTORE SWAP3 SWAP6 POP PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B JUMPDEST DUP3 DUP5 LT PUSH2 0x253D JUMPI POP POP POP DUP3 PUSH2 0x4AF SWAP5 PUSH2 0xE82 SWAP3 DUP3 ADD ADD SWAP5 PUSH2 0x24E4 JUMP JUMPDEST DUP1 SLOAD DUP7 DUP6 ADD DUP9 ADD MSTORE SWAP3 DUP7 ADD SWAP3 DUP2 ADD PUSH2 0x2521 JUMP JUMPDEST PUSH1 0xFF NOT AND DUP7 DUP6 ADD MSTORE POP POP ISZERO ISZERO PUSH1 0x5 SHL DUP4 ADD ADD SWAP3 POP PUSH2 0xE82 DUP3 PUSH2 0x4AF PUSH2 0x24E4 JUMP JUMPDEST PUSH1 0x22 SWAP1 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP3 PUSH1 0x7F AND SWAP3 PUSH2 0x24C4 JUMP JUMPDEST CALLVALUE PUSH2 0x5A9 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH1 0x20 PUSH1 0x40 SWAP3 DUP2 DUP4 MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP2 DUP3 DUP3 DUP7 ADD MSTORE ADD DUP5 DUP5 ADD MCOPY PUSH0 DUP3 DUP3 ADD DUP5 ADD MSTORE PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x5A9 JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x5A9 JUMPI JUMP JUMPDEST SWAP1 DUP2 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP1 SWAP4 ADD SWAP4 ADD SWAP2 PUSH0 JUMPDEST DUP3 DUP2 LT PUSH2 0x2625 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x2617 JUMP JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x264C JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0x5A9 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH9 0x2B5E3AF16B1880000 DUP2 MSTORE RETURN JUMPDEST DUP2 ISZERO PUSH2 0x268D JUMPI DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0x5A9 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH8 0xDE0B6B3A7640000 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x60 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH1 0x4 CALLDATALOAD DUP3 DUP2 AND DUP2 SUB PUSH2 0x5A9 JUMPI SWAP2 PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 AND DUP2 SUB PUSH2 0x5A9 JUMPI SWAP1 PUSH1 0x44 CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0xC0 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x44 CALLDATALOAD SWAP1 PUSH1 0x64 CALLDATALOAD SWAP1 PUSH1 0x84 CALLDATALOAD SWAP1 PUSH1 0xA4 CALLDATALOAD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP1 SWAP4 ADD SWAP4 ADD SWAP2 PUSH0 JUMPDEST DUP3 DUP2 LT PUSH2 0x273D JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x272F JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x264C JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x264C JUMPI JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x27AC JUMPI PUSH1 0x6 PUSH0 MSTORE PUSH1 0x1 SHL PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F ADD SWAP1 PUSH0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x27E2 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x27E2 JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x2815 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x4F6E6C7920506572697068657279 PUSH1 0x90 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x2852 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x149958985B185B98D9481B9BDD081B9959591959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x5A9 JUMPI MLOAD PUSH1 0xFF DUP2 AND DUP2 SUB PUSH2 0x5A9 JUMPI SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x28B1 DUP3 PUSH2 0x27F6 JUMP JUMPDEST PUSH2 0x28BE PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x27C0 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP1 SWAP3 PUSH2 0x28CF PUSH1 0x1F NOT SWAP2 PUSH2 0x27F6 JUMP JUMPDEST ADD SWAP1 PUSH1 0x20 CALLDATASIZE SWAP2 ADD CALLDATACOPY JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x27AC JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD PUSH4 0xFA67079 PUSH1 0xE2 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 PUSH0 SWAP1 DUP3 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x29B7 JUMPI PUSH0 SWAP2 PUSH2 0x2929 JUMPI POP SWAP1 JUMP JUMPDEST SWAP1 POP RETURNDATASIZE DUP1 PUSH0 DUP4 RETURNDATACOPY PUSH2 0x293A DUP2 DUP4 PUSH2 0x27C0 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 SWAP1 DUP2 DUP2 DUP5 SUB SLT PUSH2 0x5A9 JUMPI DUP1 MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x5A9 JUMPI ADD SWAP2 DUP1 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x5A9 JUMPI DUP3 MLOAD PUSH2 0x2973 DUP2 PUSH2 0x27F6 JUMP JUMPDEST SWAP4 PUSH2 0x2981 PUSH1 0x40 MLOAD SWAP6 DUP7 PUSH2 0x27C0 JUMP JUMPDEST DUP2 DUP6 MSTORE DUP4 DUP1 DUP7 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x5A9 JUMPI DUP4 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x29A8 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP2 MLOAD DUP2 MSTORE SWAP1 DUP4 ADD SWAP1 DUP4 ADD PUSH2 0x299A JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x29CA PUSH2 0x2BA2 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x6 SLOAD SWAP1 PUSH2 0x29D9 DUP3 PUSH2 0x27F6 JUMP JUMPDEST SWAP2 PUSH2 0x29E7 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x27C0 JUMP JUMPDEST DUP1 DUP4 MSTORE PUSH1 0x1F NOT PUSH2 0x29F6 DUP3 PUSH2 0x27F6 JUMP JUMPDEST ADD CALLDATASIZE PUSH1 0x20 DUP6 ADD CALLDATACOPY PUSH2 0x2A06 DUP2 PUSH2 0x28A7 JUMP JUMPDEST SWAP5 PUSH0 JUMPDEST DUP3 DUP2 LT PUSH2 0x2A18 JUMPI POP POP POP POP SWAP2 SWAP1 JUMP JUMPDEST PUSH2 0x2A22 DUP2 DUP4 PUSH2 0x28D9 JUMP JUMPDEST MLOAD SWAP1 PUSH2 0x2710 SWAP2 DUP3 DUP2 MUL SWAP3 DUP2 DUP5 DIV EQ SWAP1 ISZERO OR ISZERO PUSH2 0x264C JUMPI PUSH2 0x2A44 DUP6 PUSH1 0x1 SWAP4 PUSH2 0x2683 JUMP JUMPDEST PUSH2 0x2A4D DUP3 PUSH2 0x2774 JUMP JUMPDEST POP DUP4 ADD SLOAD DUP4 SWAP2 DUP2 DUP2 GT ISZERO PUSH2 0x2A82 JUMPI SWAP1 PUSH2 0x2A65 SWAP2 PUSH2 0x2767 JUMP JUMPDEST PUSH2 0x2A6F DUP4 DUP12 PUSH2 0x28D9 JUMP JUMPDEST MSTORE PUSH2 0x2A7A DUP3 DUP9 PUSH2 0x28D9 JUMP JUMPDEST MSTORE JUMPDEST ADD PUSH2 0x2A09 JUMP JUMPDEST SWAP1 PUSH2 0x2A8D SWAP3 POP PUSH2 0x2767 JUMP JUMPDEST PUSH2 0x2A97 DUP3 DUP11 PUSH2 0x28D9 JUMP JUMPDEST MSTORE PUSH0 PUSH2 0x2AA3 DUP3 DUP9 PUSH2 0x28D9 JUMP JUMPDEST MSTORE PUSH2 0x2A7C JUMP JUMPDEST PUSH2 0x2AB1 PUSH2 0x29C2 JUMP JUMPDEST PUSH0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x2AF8 JUMPI PUSH2 0x2AC6 DUP2 DUP5 PUSH2 0x28D9 JUMP JUMPDEST MLOAD ISZERO ISZERO DUP1 PUSH2 0x2AE3 JUMPI JUMPDEST PUSH2 0x2ADB JUMPI PUSH1 0x1 ADD PUSH2 0x2AB3 JUMP JUMPDEST POP POP POP PUSH1 0x1 SWAP1 JUMP JUMPDEST POP PUSH2 0x2AEE DUP2 DUP4 PUSH2 0x28D9 JUMP JUMPDEST MLOAD PUSH1 0x7 SLOAD LT PUSH2 0x2ACF JUMP JUMPDEST POP POP POP PUSH0 SWAP1 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA3E113FB PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE SWAP2 PUSH1 0x20 SWAP2 DUP4 SWAP2 AND DUP2 DUP1 PUSH1 0x44 DUP2 ADD JUMPDEST SUB SWAP2 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x29B7 JUMPI PUSH0 SWAP2 PUSH2 0x2B48 JUMPI POP SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x2B6F JUMPI JUMPDEST DUP2 PUSH2 0x2B63 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x27C0 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x5A9 JUMPI MLOAD SWAP1 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x2B56 JUMP JUMPDEST PUSH2 0x2B7F PUSH2 0x2BA2 JUMP JUMPDEST POP PUSH1 0x2 SLOAD DUP1 ISZERO PUSH2 0x2B9C JUMPI PUSH2 0x90A PUSH2 0x2B99 SWAP3 PUSH1 0x8 SLOAD SWAP1 PUSH2 0x2639 JUMP JUMPDEST SWAP1 JUMP JUMPDEST POP POP PUSH0 SWAP1 JUMP JUMPDEST PUSH1 0x6 SLOAD SWAP1 PUSH0 PUSH2 0x2BB0 DUP4 PUSH2 0x28A7 JUMP JUMPDEST PUSH1 0xB SLOAD SWAP1 SWAP4 PUSH0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 JUMPDEST DUP3 DUP5 LT PUSH2 0x2BD3 JUMPI POP POP POP POP SWAP2 SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 PUSH2 0x2C12 PUSH1 0x1 SWAP2 DUP4 PUSH2 0x2BE7 DUP9 PUSH2 0x2774 JUMP JUMPDEST POP SLOAD AND PUSH2 0x2BF3 DUP2 PUSH2 0x2AFF JUMP JUMPDEST SWAP1 DUP7 DUP2 SUB PUSH2 0x2C1C JUMPI POP PUSH2 0x2C06 DUP9 DUP12 PUSH2 0x28D9 JUMP JUMPDEST MSTORE JUMPDEST PUSH2 0x2436 DUP8 DUP11 PUSH2 0x28D9 JUMP JUMPDEST SWAP5 ADD SWAP3 SWAP2 SWAP1 PUSH2 0x2BC4 JUMP JUMPDEST SWAP1 PUSH2 0x2C26 SWAP2 PUSH2 0x3263 JUMP JUMPDEST PUSH2 0x2C30 DUP9 DUP12 PUSH2 0x28D9 JUMP JUMPDEST MSTORE PUSH2 0x2C08 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x2C93 JUMPI PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x20 DUP3 PUSH2 0x2C77 PUSH0 SWAP5 PUSH1 0x2 SLOAD PUSH2 0x275A JUMP JUMPDEST PUSH1 0x2 SSTORE DUP5 DUP5 MSTORE DUP4 DUP3 MSTORE PUSH1 0x40 DUP5 KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x6 SLOAD SWAP1 PUSH0 JUMPDEST DUP3 DUP2 LT PUSH2 0x2CBF JUMPI POP POP POP PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x2CC8 DUP2 PUSH2 0x2774 JUMP JUMPDEST POP SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 AND EQ PUSH2 0x2CE4 JUMPI PUSH1 0x1 ADD PUSH2 0x2CB1 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP PUSH2 0x2CF2 SWAP2 POP PUSH2 0x2774 JUMP JUMPDEST POP ADD SLOAD SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND SWAP3 DUP4 ISZERO PUSH2 0x2DA2 JUMPI AND SWAP3 DUP4 ISZERO PUSH2 0x2C93 JUMPI DUP3 PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SLOAD SWAP1 DUP3 DUP3 LT PUSH2 0x2D70 JUMPI POP DUP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 PUSH1 0x20 SWAP3 DUP6 PUSH0 MSTORE PUSH0 DUP5 MSTORE SUB PUSH1 0x40 PUSH0 KECCAK256 SSTORE DUP5 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x2DC1 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x11549497D1125597D253951154939053 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP1 ISZERO PUSH2 0x2E2C JUMPI PUSH15 0xC097CE7BC90715B34B9F1000000000 SWAP1 DUP1 PUSH1 0x1 SHR DUP3 ADD DUP1 DUP4 GT PUSH2 0x264C JUMPI PUSH2 0x90A PUSH2 0x2B99 SWAP4 DUP3 LT ISZERO PUSH2 0x2DBA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x4552525F4449565F5A45524F PUSH1 0xA0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 DUP1 ISZERO PUSH2 0x2E2C JUMPI PUSH8 0xDE0B6B3A7640000 SWAP2 DUP3 DUP2 MUL SWAP1 DUP1 ISZERO DUP2 DUP4 DIV DUP6 EQ DUP2 OR ISZERO PUSH2 0x264C JUMPI PUSH2 0x2B99 SWAP5 PUSH2 0x2E98 SWAP3 DUP3 ISZERO PUSH2 0x2EB1 JUMPI POP POP PUSH2 0x2DBA JUMP JUMPDEST PUSH2 0x90A PUSH2 0x2EA8 DUP4 PUSH1 0x1 SHR DUP4 PUSH2 0x275A JUMP JUMPDEST SWAP2 DUP3 LT ISZERO PUSH2 0x2DBA JUMP JUMPDEST PUSH2 0x2EBD SWAP2 SWAP3 POP DUP5 PUSH2 0x2683 JUMP JUMPDEST EQ PUSH0 DUP1 PUSH2 0x15AD JUMP JUMPDEST SWAP1 PUSH2 0x2ED0 SWAP1 DUP3 PUSH2 0x275A JUMP JUMPDEST SWAP1 DUP2 LT PUSH2 0x2EDA JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x4552525F4144445F4F564552464C4F57 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 PUSH1 0x1 SWAP3 DUP4 DUP2 LT PUSH2 0x30C1 JUMPI PUSH8 0x1BC16D674EC7FFFF DUP2 GT PUSH2 0x3083 JUMPI PUSH8 0xDE0B6B3A7640000 SWAP2 DUP3 DUP2 DIV SWAP1 DUP4 DUP3 MUL SWAP2 DUP1 DUP4 DIV DUP6 EQ SWAP1 ISZERO OR ISZERO PUSH2 0x264C JUMPI PUSH2 0x2F57 DUP3 DUP6 SWAP3 PUSH2 0x321B JUMP JUMPDEST SWAP2 DIV SWAP2 DUP1 DUP7 DUP5 AND ISZERO PUSH2 0x307D JUMPI DUP2 JUMPDEST SWAP4 DUP8 SHR SWAP1 DUP2 JUMPDEST PUSH2 0x3050 JUMPI POP POP DUP2 ISZERO PUSH2 0x3048 JUMPI PUSH2 0x2F83 SWAP1 SWAP4 SWAP2 SWAP4 PUSH2 0x32A7 JUMP JUMPDEST DUP3 SWAP5 SWAP2 DUP4 SWAP2 PUSH0 SWAP3 DUP10 SWAP6 JUMPDEST PUSH4 0x5F5E100 DUP3 LT ISZERO PUSH2 0x2FAC JUMPI JUMPDEST POP POP POP POP POP POP POP PUSH2 0x2B99 SWAP3 SWAP4 POP PUSH2 0x31AA JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP8 DUP2 DUP10 MUL SWAP3 DUP10 DUP5 DIV DUP4 EQ DUP11 ISZERO OR ISZERO PUSH2 0x264C JUMPI DUP4 PUSH2 0x304 PUSH2 0x2FE9 SWAP3 PUSH2 0xCE1 PUSH2 0x2FE2 PUSH2 0x2FDC DUP12 SWAP10 PUSH2 0x3212 JUMP JUMPDEST DUP14 PUSH2 0x3319 JUMP JUMPDEST SWAP9 SWAP1 PUSH2 0x31AA JUMP JUMPDEST SWAP3 DUP4 ISZERO PUSH2 0x3041 JUMPI DUP5 PUSH2 0x3039 JUMPI JUMPDEST PUSH2 0x3031 JUMPI JUMPDEST DUP3 DUP7 ISZERO PUSH2 0x3022 JUMPI PUSH2 0x300B SWAP2 PUSH2 0x321B JUMP JUMPDEST SWAP8 JUMPDEST PUSH0 NOT DUP2 EQ PUSH2 0x264C JUMPI DUP11 ADD SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2F8D JUMP JUMPDEST PUSH2 0x302B SWAP2 PUSH2 0x2EC5 JUMP JUMPDEST SWAP8 PUSH2 0x300D JUMP JUMPDEST SWAP5 ISZERO SWAP5 PUSH2 0x2FFB JUMP JUMPDEST SWAP6 ISZERO SWAP6 PUSH2 0x2FF6 JUMP JUMPDEST POP SWAP8 PUSH2 0x2F9A JUMP JUMPDEST POP SWAP1 SWAP4 POP POP POP JUMP JUMPDEST DUP1 PUSH2 0x305A SWAP2 PUSH2 0x31AA JUMP JUMPDEST SWAP1 DUP8 DUP2 AND PUSH2 0x306C JUMPI JUMPDEST DUP8 SHR SWAP1 DUP2 PUSH2 0x2F6B JUMP JUMPDEST SWAP4 DUP2 PUSH2 0x3077 SWAP2 PUSH2 0x31AA JUMP JUMPDEST SWAP4 PUSH2 0x3063 JUMP JUMPDEST DUP5 PUSH2 0x2F65 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x8AA4A4BE84A09EAEBE8482A68ABEA89E9EBE90928E9 PUSH1 0x53 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x4552525F42504F575F424153455F544F4F5F4C4F57 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x3105 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x4552525F4D554C5F4F564552464C4F57 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH8 0xDE0B6B3A764001E SWAP1 DUP2 DUP2 MUL SWAP2 DUP2 ISZERO SWAP1 DUP3 DUP5 DIV DUP2 EQ DUP3 OR ISZERO PUSH2 0x264C JUMPI PUSH2 0x316B SWAP3 DUP3 ISZERO PUSH2 0x3196 JUMPI POP POP PUSH2 0x30FE JUMP JUMPDEST PUSH8 0x6F05B59D3B20000 DUP2 ADD DUP1 DUP3 GT PUSH2 0x264C JUMPI PUSH2 0x3192 PUSH8 0xDE0B6B3A7640000 SWAP3 DUP3 LT ISZERO PUSH2 0x30FE JUMP JUMPDEST DIV SWAP1 JUMP JUMPDEST PUSH2 0x31A2 SWAP2 SWAP3 POP DUP5 PUSH2 0x2683 JUMP JUMPDEST EQ PUSH0 DUP1 PUSH2 0x143C JUMP JUMPDEST PUSH2 0x316B SWAP1 PUSH2 0x31B8 DUP4 DUP3 PUSH2 0x2639 JUMP JUMPDEST SWAP3 DUP2 ISZERO SWAP2 DUP3 ISZERO PUSH2 0x3196 JUMPI POP POP PUSH2 0x30FE JUMP JUMPDEST PUSH2 0x31D2 SWAP1 PUSH2 0x32E0 JUMP JUMPDEST PUSH2 0x31D9 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x4552525F5355425F554E444552464C4F57 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x31D2 SWAP1 PUSH2 0x32A7 JUMP JUMPDEST SWAP1 PUSH2 0x31D2 SWAP2 PUSH2 0x3319 JUMP JUMPDEST ISZERO PUSH2 0x322C JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x8AA4A4BE9A82A890BE82A0A0A49EB PUSH1 0x8B SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0xC SLOAD PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH4 0x248391FF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP1 DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x20 SWAP2 DUP4 SWAP2 AND DUP2 DUP1 PUSH1 0x64 DUP2 ADD PUSH2 0x2B33 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP1 DUP3 LT PUSH2 0x32D0 JUMPI POP PUSH8 0xDE0B6B3A763FFFF NOT DUP2 ADD SWAP1 DUP2 GT PUSH2 0x264C JUMPI SWAP1 PUSH0 SWAP1 JUMP JUMPDEST SWAP1 DUP2 SUB SWAP1 DUP2 GT PUSH2 0x264C JUMPI SWAP1 PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 SWAP1 DUP1 DUP3 LT PUSH2 0x32FF JUMPI DUP2 SUB SWAP1 DUP2 GT PUSH2 0x264C JUMPI SWAP1 PUSH0 SWAP1 JUMP JUMPDEST PUSH8 0xDE0B6B3A763FFFF NOT DUP2 ADD SWAP2 POP DUP2 GT PUSH2 0x264C JUMPI SWAP1 PUSH1 0x1 SWAP1 JUMP JUMPDEST DUP2 DUP2 LT PUSH2 0x332F JUMPI SWAP1 PUSH2 0x332A SWAP2 PUSH2 0x2767 JUMP JUMPDEST SWAP1 PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x3338 SWAP2 PUSH2 0x2767 JUMP JUMPDEST SWAP1 PUSH1 0x1 SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB7 SHL MUL 0xD2 0xC9 0xC6 PUSH17 0x70ABD5EDD7AED54964FA1025337A855A65 JUMPDEST 0xA9 PUSH23 0x286C7BC78B64736F6C6343000819003300000000000000 ","sourceMap":"1763:27673:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17224:67;1763:27673;17224:67;;;1763:27673;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5478:46:19;5247:37;5483:25;5304:27;5432:19;5390:15;5353:20;5189:35;1763:27673:15;;;:::i;:::-;5189:35:19;;;;;;;;;:::i;:::-;5247:37;;;:::i;:::-;5304:27;;:::i;:::-;5353:20;:::i;:::-;5390:15;:::i;:::-;5432:19;;:::i;:::-;5483:25;;:::i;:::-;5478:46;:::i;:::-;1763:27673:15;;;;;;;;;;;;;;;;-1:-1:-1;;1763:27673:15;;;;;;;4094:9;1763:27673;-1:-1:-1;;;;;1763:27673:15;;;;;4072:50;4080:10;:23;;4072:50;:::i;:::-;17533:52;17541:19;;:::i;:::-;17533:52;:::i;:::-;23457:10;1763:27673;23443:32;;;;:::i;:::-;23513;;;;:::i;:::-;23595;;;;:::i;:::-;23680;;;;:::i;:::-;23755;;;;:::i;:::-;23833;;;;:::i;:::-;23883:13;1763:27673;23898:21;;;;;;24150:13;;;;:::i;:::-;1763:27673;24196:10;1763:27673;;;24245:7;1763:27673;;24276:9;1763:27673;;24176:110;;;;;1763:27673;;-1:-1:-1;;;24176:110:15;;1763:27673;24176:110;;;1763:27673;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;24176:110;;;1763:27673;24176:110;;;;;;;;;;23878:232;-1:-1:-1;23457:10:15;1763:27673;4094:9;1763:27673;;;;;;;24304:13;24319:21;;;;;;1763:27673;;;;;24744:38;1763:27673;;24060:38;1763:27673;;4080:10;1763:27673;4080:10;1763:27673;24060:38;1763:27673;;;;:::i;:::-;24744:38;;;1763:27673;;;;;;;;;;;;;:::i;:::-;;;;;24060:38;1763:27673;;;;:::i;:::-;;;;24342:3;24397:9;;;;;:::i;:::-;1763:27673;;;;;;;;;24390:38;;;;;;1763:27673;24060:38;;;24390;;;;;;;;;;;;;;;;;;;;;;;;24342:3;24362:66;;;;;1763:27673;24362:66;;;;;:::i;:::-;1763:27673;24449:25;;;;:::i;:::-;1763:27673;24477:22;;;;:::i;:::-;1763:27673;-1:-1:-1;24477:22:15;;;24538:25;:50;:25;24566:22;24538:25;;;24520:68;24538:25;;;:::i;:::-;1763:27673;24566:22;;:::i;:::-;1763:27673;24538:50;;:::i;:::-;24520:68;;:::i;:::-;1763:27673;24445:271;1763:27673;24304:13;;24445:271;24650:22;24629:71;24650:22;;24675:25;24650:22;;;:50;:22;;:::i;24629:71::-;1763:27673;24445:271;;24390:38;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;1763:27673;;;;;;;;;;;;24390:38;;;;;;;1763:27673;;;;24390:38;;;;;;1763:27673;;;;;;;;;24176:110;1763:27673;;;;;;;;;;24176:110;;;1763:27673;;;;;;;;;;;;24176:110;1763:27673;;;;;;;;;23921:3;23953:13;;;;:::i;:::-;1763:27673;;;23941:31;;;;:::i;:::-;1763:27673;;24000:13;;;:::i;:::-;:20;;1763:27673;23987:33;;;;:::i;:::-;1763:27673;24067:9;;;;;:::i;:::-;1763:27673;;;;;;;;;;24060:38;;;;;;1763:27673;24060:38;1763:27673;24060:38;;;;;;;;;;;1763:27673;24060:38;;;23921:3;24035:63;1763:27673;24035:63;;;;;;:::i;:::-;1763:27673;;23883:13;;24060:38;;;;;;;;;;;;;;;:::i;:::-;;;1763:27673;;;;;;;24060:38;;;;;;;;;1763:27673;;;;;;;;;;;;;;;;-1:-1:-1;;1763:27673:15;;;;;;;;;;;;;;;;;;-1:-1:-1;;1763:27673:15;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4094:9:15;1763:27673;-1:-1:-1;;;;;1763:27673:15;;-1:-1:-1;4072:50:15;;-1:-1:-1;1763:27673:15;;4080:10;:23;4072:50;:::i;:::-;3222:12:8;1763:27673:15;13178:22;1763:27673;13240:13;;;:::i;:::-;1763:27673;13272:10;1763:27673;;;13272:37;;1763:27673;;13356:21;;1763:27673;;13409:13;1763:27673;13404:223;13424:21;;;;;;13647:14;;;;;1763:27673;;;;;13835:9;1763:27673;;;;;;;;;;;13820:36;;;;;;;;;;1763:27673;13820:36;1763:27673;13820:36;;;13404:223;-1:-1:-1;1763:27673:15;;13873:16;;;13928:8;;771::18;;;;;;;;;13915:35:15;;;;:::i;:::-;13869:359;;14246:11;;1763:27673;;14373:18;4080:10;;;1763:27673;;;;;;;;;14343:6;;;;;:::i;:::-;1763:27673;;;;;;;;;;;;14373:18;:::i;:::-;14412:11;1763:27673;;;;14457:16;1763:27673;;;;;;14457:16;1763:27673;;;;;;;;-1:-1:-1;;;1763:27673:15;;;;;;;;13835:9;1763:27673;;;;-1:-1:-1;;;1763:27673:15;;;;;;;;;;-1:-1:-1;;;1763:27673:15;;;;;;;;;;;;;-1:-1:-1;;;1763:27673:15;;;;;;;771:8:18;1763:27673:15;771:8:18;1763:27673:15;;;;;771:8:18;;1763:27673:15;771:8:18;13869:359:15;14012:24;;:::i;:::-;14059:18;;;;1763:27673;;14145:45;14146:26;;;;;:::i;:::-;14145:45;:::i;:::-;14194:8;771::18;;;;;;;;;;;;;;;14144:72:15;;;;:::i;:::-;13869:359;;;1763:27673;;;-1:-1:-1;;;1763:27673:15;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1763:27673:15;;;;;;;13820:36;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;1763:27673;;;;;;;;;;;;-1:-1:-1;;;1763:27673:15;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1763:27673:15;;;;;;;13447:3;13483:13;;;13592:23;1763:27673;13483:13;13539:38;13483:13;;;;:::i;:::-;1763:27673;;;13566:10;;;;:::i;:::-;1763:27673;13539:38;;:::i;:::-;13592:23;;:::i;:::-;13447:3;1763:27673;13409:13;;;;1763:27673;;;-1:-1:-1;;;1763:27673:15;;;;;;;;4094:9;1763:27673;;;;-1:-1:-1;;;1763:27673:15;;;;;;;;;;-1:-1:-1;;;1763:27673:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;3952:11:8;1763:27673:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1763:27673:15;;;;;1825:29;1763:27673;1825:29;;;;;;;;:::i;:::-;-1:-1:-1;1763:27673:15;;;1825:29;;;1763:27673;;;-1:-1:-1;;;;;1763:27673:15;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1763:27673:15;;;;;;19099:24;;;:::i;:::-;1763:27673;;;;;19142:33;;1763:27673;;;;19217:25;;;;;:::i;:::-;1763:27673;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1763:27673:15;;;;;;;;;;;;-1:-1:-1;;1763:27673:15;;;;2031:24;1763:27673;;;-1:-1:-1;;;;;1763:27673:15;;;;;;;;;;;;;;;-1:-1:-1;;1763:27673:15;;;;;;;;;;;;;;;;;;-1:-1:-1;;1763:27673:15;;;;1946:22;1763:27673;;;-1:-1:-1;;;;;1763:27673:15;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;1763:27673:15;;;;;;1890:18;1763:27673;;;;;;;;;;;;;;-1:-1:-1;;1763:27673:15;;;;;;;;;;;;;;;;;;-1:-1:-1;;1763:27673:15;;;;;;;;;;;;;;;;;;3807:26:19;3488:35;3764:15;3722:20;3595:31;3646:54;3552:19;3667:32;1763:27673:15;;;:::i;:::-;3488:35:19;;;;;;;;;:::i;:::-;3552:19;;:::i;:::-;3595:31;;:::i;:::-;3667:32;;:::i;3722:20::-;3764:15;:::i;1763:27673:15:-;;;;;;;-1:-1:-1;;1763:27673:15;;;;;;;1333:5:18;1763:27673:15;;;;;;;;;;-1:-1:-1;;1763:27673:15;;;;;;;828:1:18;1763:27673:15;;;;;;;;;;-1:-1:-1;;1763:27673:15;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;-1:-1:-1;;1763:27673:15;;;;;;;876:1:18;1763:27673:15;;;;;;;;;;;;;;;;;;3754:5:8;1763:27673:15;;:::i;:::-;;;735:10:12;;3754:5:8;:::i;:::-;1763:27673:15;;;;;;;;;;;;-1:-1:-1;;1763:27673:15;;;;2145:18:19;2040;1920:35;1763:27673:15;;;;;;1920:35:19;:::i;:::-;1979:37;1763:27673:15;;;;1979:37:19;:::i;2040:18::-;2082:31;2093:19;1763:27673:15;;2093:19:19;:::i;:::-;2082:31;:::i;1763:27673:15:-;;;;;;;-1:-1:-1;;1763:27673:15;;;;;-1:-1:-1;;;1763:27673:15;;;;;;;;;;;;-1:-1:-1;;1763:27673:15;;;;;;;;;;;;;;;;;;-1:-1:-1;;1763:27673:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;1763:27673:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1763:27673:15;;;;;-1:-1:-1;;;1763:27673:15;;;;;;;;-1:-1:-1;1763:27673:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1763:27673:15;;;;;;;771:8:18;1763:27673:15;;;;;;;;;;-1:-1:-1;;1763:27673:15;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4094:9;1763:27673;-1:-1:-1;;;;;1763:27673:15;;;;4072:50;4080:10;:23;;4072:50;:::i;:::-;15649:4;1763:27673;;;;;;;;;15674:9;;;1763:27673;;3222:12:8;1763:27673:15;15783:15;;;1763:27673;;15869:10;1763:27673;15855:32;;;:::i;:::-;771:8:18;2014:2:15;771:8:18;;;;;2014:2:15;771:8:18;;;15937:5:15;15977:11;1763:27673;;15977:11;;;:::i;:::-;16006:13;1763:27673;16021:21;;;;;;15649:4;;;;;1763:27673;;;;;;;;;;16325:41;1763:27673;;;;;16490:10;1763:27673;;;;;;;;;;;16470:42;;;;;;;;;;;;1763:27673;16470:42;;;16001:304;-1:-1:-1;1763:27673:15;;-1:-1:-1;;;16439:79:15;;-1:-1:-1;;;;;1763:27673:15;;;16439:79;;;1763:27673;;;;;;;;;;;;;;;;;16439:79;;15649:4;1763:27673;15649:4;16439:79;;;;;;;1763:27673;16439:79;;;16001:304;1763:27673;;;;15649:4;8317:21:8;8313:89;;15649:4:15;1763:27673;;;;;;;;;6603:19:8;;;;6599:115;;15649:4:15;;;16645:23;15649:4;1763:27673;15649:4;;;;;1763:27673;;;;;;;;;1755:1:13;1763:27673:15;3222:12:8;1763:27673:15;;3222:12:8;1755:1:13;1763:27673:15;;;;;;7346:25:8;15649:4:15;;7346:25:8;;1763:27673:15;;;;;;16645:23;;1763:27673;;;;;;;;;;;:::i;6599:115:8:-;1763:27673:15;;-1:-1:-1;;;6649:50:8;;15649:4:15;6649:50:8;;;1763:27673:15;;;;;;;;;;;;;;;;;;;;6649:50:8;;;8313:89;1763:27673:15;;;;;8361:30:8;;;;;;;;1763:27673:15;8361:30:8;1763:27673:15;;;-1:-1:-1;;;1763:27673:15;;;;;;;;;;;;;-1:-1:-1;;;1763:27673:15;;;;;;;16439:79;;;;;;;;;;;;;;;;:::i;:::-;;;1763:27673;;;;;;;;;;;;16439:79;;;;;;;;;1763:27673;;;;;;;;;16470:42;;;;;;;;;;;;;;;;:::i;:::-;;;1763:27673;;;;;;;;;;;;16470:42;;16439:79;16470:42;;;;;;;1763:27673;;;-1:-1:-1;;;1763:27673:15;;;;;;;;;;;;;;;;;;;;;16044:3;16087:134;16187:13;;;;;:::i;:::-;-1:-1:-1;1763:27673:15;;;-1:-1:-1;;;16087:134:15;;15649:4;16087:134;;;1763:27673;;;;;;;-1:-1:-1;;;;;1763:27673:15;;;;;;;;;;;;;;;;16087:134;;;;;;;;;;;;;;;;;1763:27673;16087:134;;;16044:3;16250:28;16249:44;1763:27673;16250:28;;16236:57;16250:28;;;;:::i;16236:57::-;1763:27673;;16006:13;;16087:134;;;;;;;;;;;;;;;;;;;:::i;:::-;;;1763:27673;;;;;;;;;;;;;16249:44;16087:134;;;;;;;;1763:27673;;;;;;;;;771:8:18;;1763:27673:15;;;;;771:8:18;;;1763:27673:15;771:8:18;1763:27673:15;;;-1:-1:-1;;;1763:27673:15;;;;;;;;;;;;;-1:-1:-1;;;1763:27673:15;;;;;;;;;;-1:-1:-1;;;1763:27673:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1763:27673:15;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;1763:27673:15;;;;;;;;;;;;;11384:33:19;1763:27673:15;;;:::i;:::-;11384:33:19;;;;;;:::i;:::-;771:8:18;;;;;;;;;;;;;;;;;;;;1739:21:20;;1731:50;1739:21;;;;;1763:27673:15;1731:50:20;;;:::i;:::-;1763:27673:15;;;;;;;;;1836:8:20;11990:41:19;1836:8:20;11906:36:19;1763:27673:15;1836:8:20;;11824:45:19;11699:31;12285:15;1836:8:20;11629:42:19;12179:43;1836:8:20;;12251:50:19;1836:8:20;;12184:28:19;1836:8:20;1828:37;1836:8;;;1828:37;:::i;:::-;1763:27673:15;11629:42:19;;:::i;11699:31::-;11840:28;;;:::i;:::-;11824:45;;:::i;:::-;11906:36;:::i;:::-;11990:41;;:::i;:::-;12184:28;;:::i;1763:27673:15:-;771:8:18;1763:27673:15;;;;;771:8:18;;;1763:27673:15;771:8:18;1739:21:20;1749:6;;;;;;:::i;:::-;:11;1739:21;;;;771:8:18;;1763:27673:15;;;;;771:8:18;;;1763:27673:15;771:8:18;1763:27673:15;;;;;;;-1:-1:-1;;1763:27673:15;;;;;;;;;;;;;;;;;;7678:31:19;7187:43;7624:27;7133:32;7556:36;7271;7419:39;7291:15;7345:43;1763:27673:15;;;:::i;:::-;7133:32:19;;;;;;;;;;;:::i;:::-;7192:28;;;;:::i;7624:27::-;7678:31;:::i;1763:27673:15:-;;;;;;14499:31:19;13999:18;14429:27;13822:33;14360:37;14064;14222:41;14085:15;14140:50;1763:27673:15;;;:::i;14064:37:19:-;14140:50;;:::i;14499:31::-;771:8:18;;;;;;;;;;;;;;;;;;;;2103:24:20;;2095:53;2103:24;;;;;1763:27673:15;2095:53:20;;;:::i;:::-;1763:27673:15;;;;;;;;;2217:8:20;2209:37;1763:27673:15;2217:8:20;;;;2209:37;:::i;:::-;1763:27673:15;;;;;;2103:24:20;2113:6;;;;;;:::i;:::-;:14;2103:24;;;;1763:27673:15;;;;;;;-1:-1:-1;;1763:27673:15;;;;;;1861:22;1763:27673;;;;;;;;;;;;;;-1:-1:-1;;1763:27673:15;;;;1915:24;1763:27673;;;-1:-1:-1;;;;;1763:27673:15;;;;;;;;;;;;;;;-1:-1:-1;;1763:27673:15;;;;;;;;;;;;;;;;;;-1:-1:-1;;1763:27673:15;;;;;;-1:-1:-1;;;;;1763:27673:15;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1763:27673:15;;;;;;:::i;:::-;;;;:::i;:::-;;;;-1:-1:-1;;;;;1763:27673:15;;;;;;;;;;;;;;828:1:18;2558:7:13;1763:27673:15;2558:18:13;2554:86;;828:1:18;2558:7:13;1755:1;1763:27673:15;;;;;;8764:20;;;;1763:27673;;8834:10;;1763:27673;;9890:25;;;:::i;:::-;9951:24;;;;:::i;:::-;10165:4;;10137:25;;;;;:::i;:::-;1763:27673;10173:4;;771:8:18;;;;;;;;;;;;;;;;10223:26:15;;;;;;:::i;:::-;1763:27673;771:8:18;;;;;;;;;;;;;;2145:18:19;1920:35;1979:37;1920:35;2040:18;1920:35;;;:::i;:::-;1979:37;;;:::i;2040:18::-;2145;:::i;:::-;10465:25:15;;;;;;:::i;:::-;1763:27673;771:8:18;;;;;;;;;;;;;;10551:26:15;;;;;;:::i;:::-;1763:27673;771:8:18;;;;;;;;;;;;;;3488:35:19;;;;:::i;:::-;1763:27673:15;;771:8:18;;;;;;;;;;1731:50:20;1749:6;;;;;;:::i;:::-;:11;1731:50;:::i;:::-;1763:27673:15;;;;;;;;;1836:8:20;;3646:54:19;3667:32;3807:26;1836:8:20;;1828:37;3722:20:19;1836:8:20;3764:15:19;1836:8:20;;;1828:37;:::i;:::-;1763:27673:15;3667:32:19;;:::i;:::-;3646:54;;:::i;3764:15::-;3807:26;;:::i;:::-;10677:30:15;1739:21:20;10677:30:15;;1763:27673;;10755:35;;10952:25;10755:35;;;;;;;10819:37;10755:35;;:::i;:::-;10819:37;;:::i;:::-;10952:25;;:::i;:::-;1763:27673;771:8:18;;;;;;;;;;;;;;11038:26:15;;;;;;;:::i;:::-;1763:27673;771:8:18;;;;;;;;;;;;;;2040:18:19;1920:35;;1979:37;11128:61:15;1920:35:19;;11267:82:15;1920:35:19;;2145:18;1920:35;;:::i;:::-;1979:37;;:::i;2145:18::-;11136:33:15;;11128:61;:::i;:::-;11294:35;;;;:::i;11267:82::-;1763:27673;;-1:-1:-1;;;9094:34:15;;1763:27673;;;;;9094:34;1763:27673;9094:34;;;;;;;;;1763:27673;9094:34;1763:27673;9094:34;;;1763:27673;;;;;;;;;;;;;9065:63;1763:27673;9360:24;1763:27673;;;;9065:63;;:::i;:::-;9360:24;;;;:::i;:::-;:42;1763:27673;;2014:2;771:8:18;;;;;;2014:2:15;771:8:18;;;;;;;1763:27673:15;9515:20;9553:50;1763:27673;9490:5;1763:27673;;;9515:20;;:::i;:::-;1763:27673;;;;;;;;;;;9553:50;1739:21:20;2558:7:13;1755:1;1763:27673:15;;;;;;;;-1:-1:-1;;;1763:27673:15;;;;;;;;;;;;;-1:-1:-1;;;1763:27673:15;;;;;;;9094:34;;;;;;;-1:-1:-1;9094:34:15;;;;;;:::i;:::-;;;;;1763:27673;;;;;;;;;771:8:18;;1763:27673:15;;;;;771:8:18;;1763:27673:15;;771:8:18;1763:27673:15;;;-1:-1:-1;;;1763:27673:15;;;;;;;;;;;;-1:-1:-1;;;1763:27673:15;;;;;;;;771:8:18;1763:27673:15;;;;;771:8:18;;;1763:27673:15;771:8:18;;;1763:27673:15;;;;;771:8:18;;1763:27673:15;;771:8:18;;;1763:27673:15;;;;;771:8:18;;1763:27673:15;;771:8:18;1763:27673:15;;;-1:-1:-1;;;1763:27673:15;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1763:27673:15;;;;;;;;;;;;;;;;;;;;2554:86:13;1763:27673:15;;-1:-1:-1;;;2599:30:13;;;1763:27673:15;;;;;;;-1:-1:-1;;1763:27673:15;;;;21297:10;1763:27673;21283:32;;;:::i;:::-;21331:13;1763:27673;21346:21;;;;;;1763:27673;;;;;;;;;;;;;;:::i;21369:3::-;21401:13;;1763:27673;21401:13;;:::i;:::-;1763:27673;;;;;;;;;21389:31;;;;:::i;:::-;1763:27673;;21331:13;;1763:27673;;;;;;;-1:-1:-1;;1763:27673:15;;;;;;;2014:2;1763:27673;;;;;;;;;;9876:44:19;9070:32;9904:15;9806:43;9373:20;9811:28;9503:39;9193:31;9429:34;9134:31;1763:27673:15;;;:::i;:::-;9070:32:19;;;;;;;;;;;;:::i;:::-;9134:31;;;:::i;1763:27673:15:-;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;5184:26;;;:::i;:::-;;5241:24;;;:::i;:::-;-1:-1:-1;1763:27673:15;;-1:-1:-1;;;5295:36:15;;1763:27673;;-1:-1:-1;;;;;1763:27673:15;;;;;;;;5295:36;;;;;;;;1763:27673;5295:36;1763:27673;5295:36;;;1763:27673;;;;5369:10;1763:27673;;;;;;;;;;-1:-1:-1;;;5349:82:15;;-1:-1:-1;;;;;1763:27673:15;;;5349:82;;;1763:27673;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5349:82;;;;;;;;;1763:27673;5349:82;;;1763:27673;;;;;;;5349:82;;;;;;;;;;;;;;;;;:::i;:::-;;;1763:27673;;;;;5349:82;;;;;;;;;;1763:27673;;;;;;;;;;771:8:18;1763:27673:15;;;;;771:8:18;;1763:27673:15;;771:8:18;5295:36:15;;;;;;;;;;;;;;:::i;:::-;;;;;1763:27673;;;;;;;;;;;;;;17224:67;1763:27673;;;:::i;:::-;17244:10;1763:27673;;;-1:-1:-1;;;17224:67:15;;-1:-1:-1;;;;;1763:27673:15;;;17224:67;;;1763:27673;;;;;;;;;;;;;;;;;;;;;17224:67;;;;1763:27673;17224:67;;1763:27673;;;17224:67;;;;;;;1763:27673;17224:67;;;1763:27673;17224:67;1763:27673;;;;;;;17224:67;;;;;;;;;;;;;;;;;:::i;:::-;;;1763:27673;;;;17224:67;1763:27673;;17224:67;;;;;;-1:-1:-1;17224:67:15;;;1763:27673;;;;;;;;;;;;;;;-1:-1:-1;;1763:27673:15;;;;;19660:24;;:::i;:::-;1763:27673;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;1763:27673:15;;;;;;;3075:2:8;1763:27673:15;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1763:27673:15;;;;;;;;;;;;;;735:10:12;1763:27673:15;;;;;;;;;;;;;;;10828:37:8;;10824:310;;1763:27673:15;;5249:5:8;;;;;;:::i;10824:310::-;10885:24;;;10881:130;;10061:19;;10057:89;;735:10:12;10159:21:8;10155:90;;-1:-1:-1;1763:27673:15;;;;3952:11:8;1763:27673:15;;;;;;;735:10:12;1763:27673:15;;;;;;;;;;;;1755:1:13;;;1763:27673:15;;5249:5:8;10824:310;;10155:90;1763:27673:15;;;;;10203:31:8;;;;;;;;1763:27673:15;10203:31:8;10057:89;1763:27673:15;;;;;10103:32:8;;;;;;;;1763:27673:15;10103:32:8;10881:130;1763:27673:15;;-1:-1:-1;;;10936:60:8;;735:10:12;10936:60:8;;;1763:27673:15;;;;;;;;;;;;;;;;;;-1:-1:-1;1763:27673:15;;6649:50:8;;;1763:27673:15;;;;;;;-1:-1:-1;;1763:27673:15;;;;21756:10;1763:27673;21742:32;;;:::i;:::-;21790:13;1763:27673;21805:21;;;;;;1763:27673;;;;;;;;;;;;;;:::i;21828:3::-;21861:13;1763:27673;21861:13;;;;:::i;:::-;:20;;1763:27673;21848:33;;;;:::i;:::-;1763:27673;;21790:13;;1763:27673;;;;;;;-1:-1:-1;;1763:27673:15;;;;;19948:24;;;:::i;:::-;1763:27673;;;;;;;;;;;;;;-1:-1:-1;;1763:27673:15;;;;;;;;;;;;;;;;;;-1:-1:-1;;1763:27673:15;;;;;;3222:12:8;1763:27673:15;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;4272:26;;;;:::i;:::-;4329:24;;;;:::i;:::-;1763:27673;;-1:-1:-1;;;4459:36:15;;;1763:27673;;;;-1:-1:-1;;;;;1763:27673:15;;;;;;;;;;;;4459:36;;;;;;;;;;1763:27673;4459:36;;;1763:27673;;;;;4526:34;;;;;;1763:27673;;4526:34;;;;;;;1763:27673;4526:34;;;1763:27673;4612:8;;771::18;;;;;;;;;;;;;;;;1763:27673:15;;4598:36;1763:27673;;4598:36;;:::i;:::-;771:8:18;;;;;;;;;;;;;;;;4798:27:15;1763:27673;;4671:32;1763:27673;;4671:32;;:::i;:::-;4828:4;;4798:27;;;;:::i;:::-;1763:27673;771:8:18;;;;;;;;;;;;;;;;4881:25:15;;;:::i;:::-;1763:27673;771:8:18;;;;;;;;;;;;;;1920:35:19;2040:18;1920:35;;2145:18;1920:35;;1979:37;1920:35;;:::i;771:8:18:-;;1763:27673:15;;;;;771:8:18;;1763:27673:15;;771:8:18;4526:34:15;;;;;;;;;;;;;;;:::i;:::-;;;;;;1763:27673;;;;;;;;;4459:36;;;;;;;;;;;;;;;:::i;:::-;;;;;1763:27673;;;;;;;;;;;;;;;:::i;:::-;;;735:10:12;;10061:19:8;10057:89;;-1:-1:-1;;;;;1763:27673:15;;10159:21:8;;10155:90;;1763:27673:15;735:10:12;;;1763:27673:15;;9105:4:8;1763:27673:15;;;;;;;;;;;;;;1755:1:13;1763:27673:15;;;;;10333:31:8;735:10:12;;10333:31:8;;1763:27673:15;9105:4:8;1763:27673:15;;;10155:90:8;1763:27673:15;;-1:-1:-1;;;10203:31:8;;1763:27673:15;10203:31:8;;;1763:27673:15;;;10203:31:8;10057:89;1763:27673:15;;-1:-1:-1;;;10103:32:8;;1763:27673:15;10103:32:8;;;1763:27673:15;;;10103:32:8;1763:27673:15;;;;;;;-1:-1:-1;;1763:27673:15;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;4072:50;1763:27673;4094:9;1763:27673;;4080:10;:23;4072:50;:::i;:::-;6849:52;6857:19;;:::i;6849:52::-;6968:24;;:::i;:::-;25933:10;1763:27673;;;25919:32;1763:27673;25919:32;:::i;:::-;25967:13;1763:27673;25982:21;;;;;;7189:43;;;1763:27673;25234:13;1763:27673;25249:21;;;;;;-1:-1:-1;7279:9:15;1763:27673;;;-1:-1:-1;;;7264:36:15;;1763:27673;;;;7264:36;1763:27673;7264:36;1763:27673;;7264:36;;;;;;;1763:27673;7264:36;;;25229:113;7336:8;1763:27673;7336:8;1763:27673;;;;;;;;;7398:32;7313:45;;;;:::i;:::-;7398:32;;:::i;:::-;7448:13;1763:27673;7488:3;1763:27673;;7463:23;;;;;7512:15;;;;:::i;:::-;1763:27673;7508:112;;7488:3;1763:27673;;7448:13;;7508:112;7588:15;;;;:::i;:::-;1763:27673;26714:17;;;;;:::i;:::-;-1:-1:-1;1763:27673:15;27306:10;1763:27673;;;-1:-1:-1;;;27286:69:15;;-1:-1:-1;;;;;1763:27673:15;;;27286:69;;;1763:27673;;;;;;;;;;;;;;;;;;;;;;;;27286:69;;;1763:27673;27286:69;;1763:27673;;;;27286:69;;;;;;;1763:27673;27286:69;;;7508:112;26770:15;;;1763:27673;;7552:52;1763:27673;7552:52;;;;;:::i;:::-;1763:27673;7508:112;;;;1763:27673;;;-1:-1:-1;;;1763:27673:15;;;;;;;;;;;;;;;;;;;;;27286:69;;;;;;;;;;;;;;;;:::i;:::-;;;1763:27673;;;;;27286:69;;;;;;;;7463:23;;;1763:27673;7463:23;;7659:19;7463:23;;7659:19;:::i;:::-;7697:43;1763:27673;;;;;4080:10;1763:27673;4080:10;1763:27673;;;;;;:::i;:::-;7697:43;;;1763:27673;;;;;;;;;;;:::i;7264:36::-;;;;;;;;;;;;;;;:::i;:::-;;;;;25272:3;25315:15;25292:38;1763:27673;25315:15;;;;;:::i;:::-;1763:27673;25292:38;;:::i;:::-;25272:3;1763:27673;25234:13;;26005:3;26069:13;26093:5;26052:37;1763:27673;26069:13;;;;:::i;:::-;:20;;1763:27673;26052:37;;:::i;:::-;1763:27673;26117:13;;;;;:::i;:::-;1763:27673;26117:31;26113:121;;26005:3;;1763:27673;25967:13;;26113:121;26187:31;26205:13;;;;;:::i;26187:31::-;26169:49;;;;:::i;:::-;1763:27673;26113:121;;;1763:27673;;;;;;;-1:-1:-1;;1763:27673:15;;;;;;;;;2151:5:8;1763:27673:15;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1763:27673:15;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2151:5:8;1763:27673:15;;;;;;-1:-1:-1;1763:27673:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1763:27673:15;;;;;-1:-1:-1;;1763:27673:15;;;;;;;;-1:-1:-1;1763:27673:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1763:27673:15;;;;2062:25;1763:27673;-1:-1:-1;;;;;1763:27673:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1763:27673:15;;;;:::o;:::-;;;;-1:-1:-1;;;;;1763:27673:15;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;1763:27673:15;;;;;;:::o;:::-;;;;;;;;;;;;;;;-1:-1:-1;1763:27673:15;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;771:8:18;;;;;;;;;;;;;;;;:::o;:::-;1763:27673:15;;;771:8:18;;;;;;;;1763:27673:15;;;;;;-1:-1:-1;;1763:27673:15;;;;;;;771:8:18;1763:27673:15;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;-1:-1:-1;;1763:27673:15;;;;;;;771:8:18;1763:27673:15;;;;;;;;;;;;-1:-1:-1;;;;;1763:27673:15;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;-1:-1:-1;1763:27673:15;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;1763:27673:15;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;25933:10;1763:27673;;;;;;25933:10;-1:-1:-1;1763:27673:15;;;;;;-1:-1:-1;1763:27673:15;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;1763:27673:15;;;;;;;;;;;;-1:-1:-1;;;1763:27673:15;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;1763:27673:15;;;;;;;;;;;;-1:-1:-1;;;1763:27673:15;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;20539:148::-;20642:9;1763:27673;;;-1:-1:-1;;;20619:60:15;;20673:4;20619:60;;;1763:27673;;-1:-1:-1;;1763:27673:15;;;;;;-1:-1:-1;;;;;1763:27673:15;20619:60;;;;;;;-1:-1:-1;20619:60:15;;;20612:67;20539:148;:::o;20619:60::-;;;;;-1:-1:-1;20619:60:15;;;;;;:::i;:::-;;;1763:27673;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;20619:60;;;;20539:148;:::o;1763:27673::-;;;;;;;;;;;;;20619:60;1763:27673;;;-1:-1:-1;1763:27673:15;;;;;17923:864;18082:24;;:::i;:::-;1763:27673;;18137:10;1763:27673;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;-1:-1:-1;;1763:27673:15;;;:::i;:::-;;;;;;;18225:24;;;:::i;:::-;18267:13;-1:-1:-1;18282:13:15;;;;;;18748:31;;;;;17923:864;:::o;18297:3::-;18342:13;;;;:::i;:::-;1763:27673;18358:5;;771:8:18;;;;;;;;;;;;;;;18341:32:15;;1763:27673;18341:32;;:::i;:::-;18411:13;;;:::i;:::-;-1:-1:-1;18411:20:15;;1763:27673;;;18452:28;;;;;;18517;;;;:::i;:::-;18501:44;;;;:::i;:::-;1763:27673;18564:20;;;;:::i;:::-;1763:27673;18448:277;1763:27673;18267:13;;18448:277;18641:28;;;;;:::i;:::-;18625:44;;;;:::i;:::-;1763:27673;-1:-1:-1;18688:21:15;;;;:::i;:::-;1763:27673;18448:277;;28797:346;28922:14;;:::i;:::-;28964:1;28990:3;1763:27673;;28967:21;;;;;29014:13;;;;:::i;:::-;1763:27673;;;29014:40;;;28990:3;29010:92;;1763:27673;;28952:13;;29010:92;29075:11;;;1763:27673;29075:11;:::o;29014:40::-;29031:13;;;;;:::i;:::-;1763:27673;29047:7;1763:27673;-1:-1:-1;29014:40:15;;28967:21;;;;28964:1;28797:346;:::o;20873:167::-;20984:9;1763:27673;;;-1:-1:-1;;;20961:71:15;;21019:4;20961:71;;;1763:27673;-1:-1:-1;;;;;1763:27673:15;;;;;;;;20961:71;;1763:27673;;;;;;;;20961:71;;;;;;;;;;-1:-1:-1;20961:71:15;;;20954:78;20873:167;:::o;20961:71::-;;;;;;;;;;;;;;;;;:::i;:::-;;;1763:27673;;;;;20873:167;:::o;20961:71::-;;;-1:-1:-1;20961:71:15;;20125:280;20212:24;;:::i;:::-;1763:27673;3222:12:8;1763:27673:15;20297:16;;20293:57;;20368:14;20367:30;1763:27673;20379:3;1763:27673;20368:14;;:::i;20367:30::-;20125:280;:::o;20293:57::-;20330:8;;-1:-1:-1;20330:8:15;:::o;22164:755::-;22305:10;1763:27673;;;22346:24;1763:27673;22346:24;:::i;:::-;22580:9;1763:27673;22386:13;;1763:27673;;-1:-1:-1;;;;;1763:27673:15;;;;22401:13;;;;;;22876:35;;;;;22164:755;:::o;22416:3::-;22452:13;;;;22823:31;1763:27673;22452:13;;;;;:::i;:::-;1763:27673;;;22509:31;;;:::i;:::-;22562:27;;;;;;22611:28;;;;;:::i;:::-;1763:27673;22557:252;22841:13;;;;:::i;22823:31::-;22416:3;1763:27673;22386:13;;;;;22557:252;22700:49;;;;:::i;:::-;22768:25;;;;:::i;:::-;1763:27673;22557:252;;7721:208:8;-1:-1:-1;;;;;1763:27673:15;;7791:21:8;;7787:91;;7346:25;1763:27673:15;;6496:21:8;6906:425;1763:27673:15;6496:21:8;1763:27673:15;6496:21:8;:::i;:::-;;1755:1:13;1763:27673:15;;;;;;;;;;;;;1755:1:13;;1763:27673:15;;;;;7346:25:8;7721:208::o;7787:91::-;1763:27673:15;;-1:-1:-1;;;7835:32:8;;7810:1;7835:32;;;1763:27673:15;;;7835:32:8;29151:282:15;29260:10;1763:27673;;29253:1;29256:21;;;;;;29417:8;;;29253:1;29151:282;:::o;29279:3::-;29303:13;;;:::i;:::-;-1:-1:-1;1763:27673:15;-1:-1:-1;;;;;1763:27673:15;;;;;29303:29;29299:97;;1763:27673;;29241:13;;29299:97;1763:27673;29360:13;;;;;;:::i;:::-;:20;;1763:27673;29353:27;:::o;5656:300:8:-;;-1:-1:-1;;;;;1763:27673:15;;;;5739:18:8;;5735:86;;1763:27673:15;5834:16:8;;;5830:86;;1763:27673:15;6356:540:8;1763:27673:15;6356:540:8;1763:27673:15;;;6356:540:8;1763:27673:15;;6603:19:8;;;;6599:115;;1763:27673:15;;7346:25:8;1763:27673:15;;;;6356:540:8;1763:27673:15;6356:540:8;1763:27673:15;;;;6356:540:8;1763:27673:15;1755:1:13;1763:27673:15;6356:540:8;1763:27673:15;;6356:540:8;1763:27673:15;;;;;1755:1:13;;1763:27673:15;;;;;7346:25:8;5656:300::o;6599:115::-;1763:27673:15;;-1:-1:-1;;;6649:50:8;;-1:-1:-1;;;;;1763:27673:15;;;;6649:50:8;;;1763:27673:15;;;;;;;;;;;;;;;;6649:50:8;5735:86;1763:27673:15;;-1:-1:-1;;;5780:30:8;;5755:1;5780:30;;;1763:27673:15;;;5780:30:8;1763:27673:15;;;;:::o;:::-;;;-1:-1:-1;;;1763:27673:15;;;;;;;;;;;;-1:-1:-1;;;1763:27673:15;;;;;;;1931:387:20;2032:6;;1763:27673:15;;771:8:18;1763:27673:15;;2113:14:20;1763:27673:15;;;;;;;;2209:37:20;2284:6;2217:8;;;;2209:37;:::i;1763:27673:15:-;;;-1:-1:-1;;;1763:27673:15;;;;;;;;;;;;-1:-1:-1;;;1763:27673:15;;;;;;;1931:387:20;;2032:6;;1763:27673:15;;771:8:18;;;;;;;;;;;;;;;;;;2284:6:20;2103:24;2095:53;2103:24;;;;;2095:53;;;:::i;:::-;2209:37;2186:12;1763:27673:15;;;2186:12:20;;:::i;:::-;2217:8;;;;2209:37;:::i;2103:24::-;2113:6;;;;;;:::i;:::-;:14;2103:24;;;;983:180;;1085:5;983:180;1085:5;;:::i;:::-;1109:6;;;1763:27673:15;;983:180:20;:::o;1763:27673:15:-;;;-1:-1:-1;;;1763:27673:15;;;;;;;;;;;;-1:-1:-1;;;1763:27673:15;;;;;;;2821:555:20;;;1333:5:18;2927:21:20;;;;1763:27673:15;;;2993:21:20;;1763:27673:15;;771:8:18;1763:27673:15;;;;771:8:18;;;;;;;;;;;;;;;;3107:16:20;;;;;:::i;:::-;1763:27673:15;;;3152:24:20;1763:27673:15;;;2449:10:20;1333:5:18;;2449:21:20;;1763:27673:15;;;2483:151:20;;2496:6;;;3193:11;;;;3189:59;;3574:20;;;;;;:::i;:::-;3632:17;;;3605:16;3660:21;-1:-1:-1;3930:10:20;;3925:509;3942:17;1763:27673:15;3942:17:20;;;;;3925:509;3339:29;;;;;;;;;;;;:::i;3961:3::-;771:8:18;;;;;;;;;;;;;;;;;;;;;;4050:16:20;4089:22;4133:16;4050;4100:10;4038:29;4050:16;;;;:::i;:::-;4038:29;;:::i;:::-;4100:10;;;:::i;4133:16::-;4168:9;;;4164:20;;4201:30;;;3961:3;4246:30;;3961:3;4291:132;;;;;4330:15;;;:::i;:::-;4291:132;;-1:-1:-1;;1763:27673:15;;;;;;3930:10:20;;;;;;;;4291:132;4392:15;;;:::i;:::-;4291:132;;;4246:30;4267:9;;4246:30;;;4201;4222:9;;4201:30;;;4164:20;4179:5;;;;3189:59;-1:-1:-1;3221:15:20;;-1:-1:-1;;;3221:15:20:o;2504:6::-;2531:10;;;;:::i;:::-;1763:27673:15;;;;2558:65:20;;2504:6;1763:27673:15;;2488:6:20;;;;2558:65;2597:10;;;;;:::i;:::-;2558:65;;;2449:21;;;;1763:27673:15;;;-1:-1:-1;;;1763:27673:15;;;;;;;;;;;;-1:-1:-1;;;1763:27673:15;;;;;;;;;;-1:-1:-1;;;1763:27673:15;;;;;;;;;;;;-1:-1:-1;;;1763:27673:15;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;1763:27673:15;;;;;;;;;;;;-1:-1:-1;;;1763:27673:15;;;;;;;1612:311:20;1763:27673:15;771:8:18;;;;;;;;;;;;;;;;;;1731:50:20;1739:21;;;;;1731:50;;;:::i;:::-;1763:27673:15;;;;;;;;1828:37:20;771:8:18;1836::20;;;;1828:37;:::i;:::-;1763:27673:15;1612:311:20;:::o;1739:21::-;1749:6;;;;;;:::i;:::-;:11;1739:21;;;;1612:311;1731:50;1612:311;1715:5;;;;:::i;:::-;1739:6;;;:21;;;;;1731:50;;;:::i;1171:202::-;1286:14;1171:202;1286:14;:::i;:::-;1763:27673:15;;1171:202:20;:::o;1763:27673:15:-;;;-1:-1:-1;;;1763:27673:15;;;;;;;;;;;;-1:-1:-1;;;1763:27673:15;;;;;;;1171:202:20;1286:14;1171:202;1286:14;:::i;1171:202::-;;1286:14;1171:202;1286:14;:::i;1763:27673:15:-;;;;:::o;:::-;;;-1:-1:-1;;;1763:27673:15;;;;;;;;;;;;-1:-1:-1;;;1763:27673:15;;;;;;;28318:248;28480:10;1763:27673;28511:9;1763:27673;;;-1:-1:-1;;;28460:69:15;;-1:-1:-1;;;;;1763:27673:15;;;28460:69;;;1763:27673;;;;;;;;;;;;;;;28460:69;;1763:27673;;;;;;;;28460:69;1763:27673;1381:223:20;771:8:18;1488:6:20;;;771:8:18;;-1:-1:-1;;;1763:27673:15;;;;;;;1511:21:20;-1:-1:-1;1511:21:20;:::o;1484:113::-;1763:27673:15;;;;;;;;1565:20:20;1580:4;1565:20;:::o;1381:223::-;771:8:18;;1488:6:20;;;;;1763:27673:15;;;;;;;1511:21:20;-1:-1:-1;1511:21:20;:::o;1484:113::-;-1:-1:-1;;1763:27673:15;;;-1:-1:-1;1763:27673:15;;;;1565:20:20;1580:4;1565:20;:::o;1381:223::-;1488:6;;;;;1519:5;;;;:::i;:::-;1511:21;1526:5;1511:21;:::o;1484:113::-;1573:5;;;:::i;:::-;1565:20;1580:4;1565:20;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"2634400","executionCost":"infinite","totalCost":"infinite"},"external":{"BONE()":"1191","BPOW_PRECISION()":"346","EXIT_FEE()":"1225","INIT_POOL_SUPPLY()":"874","MAX_BOUND_TOKENS()":"1006","MAX_BPOW_BASE()":"1138","MAX_FEE()":"1116","MAX_IN_RATIO()":"1402","MAX_OUT_RATIO()":"918","MAX_TOTAL_WEIGHT()":"289","MAX_WEIGHT()":"1367","MIN_BALANCE()":"764","MIN_BOUND_TOKENS()":"1050","MIN_BPOW_BASE()":"1072","MIN_FEE()":"654","MIN_WEIGHT()":"399","ONE()":"3266","SWAP_FEE_BPS()":"566","allowance(address,address)":"3716","approve(address,uint256)":"24410","assetInfos(uint256)":"9868","assetLiquidity(uint256)":"infinite","balanceOf(address)":"2887","baseAsset()":"3375","burn(address)":"infinite","calcInGivenOut(uint256,uint256,uint256,uint256,uint256,uint256)":"infinite","calcOraclePrice(address,address)":"infinite","calcOutGivenIn(uint256,uint256,uint256,uint256,uint256,uint256)":"infinite","calcPoolInGivenSingleOut(uint256,uint256,uint256,uint256,uint256,uint256)":"infinite","calcPoolOutGivenSingleIn(uint256,uint256,uint256,uint256,uint256,uint256)":"infinite","calcSingleInGivenPoolOut(uint256,uint256,uint256,uint256,uint256,uint256)":"infinite","calcSingleOutGivenPoolIn(uint256,uint256,uint256,uint256,uint256,uint256)":"infinite","calcSpotPrice(address,address)":"infinite","calcSpotPrice(uint256,uint256,uint256,uint256,uint256)":"infinite","computeTotalValuation()":"infinite","decimals()":"456","factory()":"3331","getAmountOut(address,address,uint256)":"infinite","getAssetReserve(address)":"infinite","getAssets()":"infinite","getColor()":"946","getDeviation()":"infinite","getReserves()":"infinite","getWeights()":"infinite","isRebalanceNeeded()":"infinite","liquidity()":"infinite","mint(address,uint256[])":"infinite","name()":"infinite","performRebalanceIfNeeded()":"infinite","periphery()":"2803","rebalanceWeights(address)":"infinite","rebalancer()":"2280","swap(address,address,uint256,address)":"infinite","symbol()":"infinite","totalSupply()":"2430","transfer(address,uint256)":"51576","transferFrom(address,address,uint256)":"75718","trigger()":"2804","unitPrice()":"infinite"},"internal":{"_calculateAmountsToAdd(uint256,uint256[] memory)":"infinite","_calculateLiquidity(uint256,uint256)":"infinite","_calculateTotalAddedLiquidity(uint256[] memory)":"infinite","_computeTotalValuation()":"infinite","_convertBaseToToken(address,uint256)":"infinite","_convertTokenToBase(address,uint256)":"infinite","_getTargetWeight(address)":"infinite","_performRebalanceIfNeeded()":"infinite","_swapExactAmountIn(address,uint256,address,uint256,uint256)":"infinite","_swapExactAmountOut(address,uint256,address,uint256,uint256)":"infinite","initializeAssets(address[] memory,uint256[] memory)":"infinite","max(uint8,uint8)":"infinite","min(uint8,uint8)":"infinite"}},"methodIdentifiers":{"BONE()":"c36596a6","BPOW_PRECISION()":"189d00ca","EXIT_FEE()":"c6580d12","INIT_POOL_SUPPLY()":"9381cd2b","MAX_BOUND_TOKENS()":"b0e0d136","MAX_BPOW_BASE()":"bc694ea2","MAX_FEE()":"bc063e1a","MAX_IN_RATIO()":"ec093021","MAX_OUT_RATIO()":"992e2a92","MAX_TOTAL_WEIGHT()":"09a3bbe4","MAX_WEIGHT()":"e4a28a52","MIN_BALANCE()":"867378c5","MIN_BOUND_TOKENS()":"b7b800a4","MIN_BPOW_BASE()":"ba019dab","MIN_FEE()":"76c7a3c7","MIN_WEIGHT()":"218b5382","ONE()":"c2ee3a08","SWAP_FEE_BPS()":"67a6c440","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","assetInfos(uint256)":"d14ef46d","assetLiquidity(uint256)":"cf8fa764","balanceOf(address)":"70a08231","baseAsset()":"cdf456e1","burn(address)":"89afcb44","calcInGivenOut(uint256,uint256,uint256,uint256,uint256,uint256)":"f8d6aed4","calcOraclePrice(address,address)":"58d19698","calcOutGivenIn(uint256,uint256,uint256,uint256,uint256,uint256)":"ba9530a6","calcPoolInGivenSingleOut(uint256,uint256,uint256,uint256,uint256,uint256)":"82f652ad","calcPoolOutGivenSingleIn(uint256,uint256,uint256,uint256,uint256,uint256)":"8656b653","calcSingleInGivenPoolOut(uint256,uint256,uint256,uint256,uint256,uint256)":"5c1bbaf7","calcSingleOutGivenPoolIn(uint256,uint256,uint256,uint256,uint256,uint256)":"89298012","calcSpotPrice(address,address)":"0d0fa029","calcSpotPrice(uint256,uint256,uint256,uint256,uint256)":"a221ee49","computeTotalValuation()":"36bf6e39","decimals()":"313ce567","factory()":"c45a0155","getAmountOut(address,address,uint256)":"4aa06652","getAssetReserve(address)":"b2b55d70","getAssets()":"67e4ac2c","getColor()":"9a86139b","getDeviation()":"89ab3532","getReserves()":"0902f1ac","getWeights()":"22acb867","isRebalanceNeeded()":"8a77c8dc","liquidity()":"1a686502","mint(address,uint256[])":"de836ebd","name()":"06fdde03","performRebalanceIfNeeded()":"f47b45e8","periphery()":"77aace1a","rebalanceWeights(address)":"0723c999","rebalancer()":"01d22ccd","swap(address,address,uint256,address)":"6e81221c","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","trigger()":"7fec8d38","unitPrice()":"e73faa2d"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_rebalancer\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"_assets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_weights\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"_trigger\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_periphery\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"sharesBurned\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"sharesMinted\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"by\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"}],\"name\":\"RebalancePerformed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromToken\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"amountsAdded\",\"type\":\"uint256[]\"}],\"name\":\"WeightsRebalanced\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BONE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"BPOW_PRECISION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"EXIT_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"INIT_POOL_SUPPLY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_BOUND_TOKENS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_BPOW_BASE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_IN_RATIO\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_OUT_RATIO\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_TOTAL_WEIGHT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_WEIGHT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_BALANCE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_BOUND_TOKENS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_BPOW_BASE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_WEIGHT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ONE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SWAP_FEE_BPS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"assetInfos\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assetIndex\",\"type\":\"uint256\"}],\"name\":\"assetLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseAsset\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenBalanceIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenWeightIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenBalanceOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenWeightOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenAmountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"swapFee\",\"type\":\"uint256\"}],\"name\":\"calcInGivenOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenAmountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"toToken\",\"type\":\"address\"}],\"name\":\"calcOraclePrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenBalanceIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenWeightIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenBalanceOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenWeightOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenAmountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"swapFee\",\"type\":\"uint256\"}],\"name\":\"calcOutGivenIn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenAmountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenBalanceOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenWeightOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"poolSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalWeight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenAmountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"swapFee\",\"type\":\"uint256\"}],\"name\":\"calcPoolInGivenSingleOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"poolAmountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenBalanceIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenWeightIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"poolSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalWeight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenAmountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"swapFee\",\"type\":\"uint256\"}],\"name\":\"calcPoolOutGivenSingleIn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"poolAmountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenBalanceIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenWeightIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"poolSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalWeight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"poolAmountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"swapFee\",\"type\":\"uint256\"}],\"name\":\"calcSingleInGivenPoolOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenAmountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenBalanceOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenWeightOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"poolSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalWeight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"poolAmountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"swapFee\",\"type\":\"uint256\"}],\"name\":\"calcSingleOutGivenPoolIn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenAmountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"toToken\",\"type\":\"address\"}],\"name\":\"calcSpotPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenBalanceIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenWeightIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenBalanceOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenWeightOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"swapFee\",\"type\":\"uint256\"}],\"name\":\"calcSpotPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"spotPrice\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"computeTotalValuation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalVal\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"valuations\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"toToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"getAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getAssetReserve\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAssets\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getColor\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDeviation\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"directions\",\"type\":\"bool[]\"},{\"internalType\":\"uint256[]\",\"name\":\"deviations\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReserves\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getWeights\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isRebalanceNeeded\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"performRebalanceIfNeeded\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amountsToAdd\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amountsToRemove\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"periphery\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"rebalanceWeights\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rebalancer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"toToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"toSend\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"trigger\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unitPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"assetLiquidity(uint256)\":{\"details\":\"Returns the liquidity of a specific asset in the pool.\",\"params\":{\"assetIndex\":\"The index of the asset.\"},\"returns\":{\"_0\":\"The liquidity of the asset.\"}},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(address)\":{\"details\":\"Burns the pool tokens and transfers the underlying assets to the specified address.\",\"params\":{\"to\":\"The address to transfer the underlying assets to.\"}},\"computeTotalValuation()\":{\"details\":\"Computes the total valuation of the pool and returns the total valuation and an array of individual valuations.\",\"returns\":{\"totalVal\":\"The total valuation of the pool.\",\"valuations\":\"An array of individual valuations.\"}},\"constructor\":{\"details\":\"Initializes a new instance of the BaluniV1Pool contract.\",\"params\":{\"_assets\":\"An array of addresses representing the assets in the pool.\",\"_periphery\":\"The address of the periphery contract.\",\"_rebalancer\":\"The address of the rebalancer contract.\",\"_trigger\":\"The trigger value for rebalancing the pool.\",\"_weights\":\"An array of weights corresponding to the assets in the pool.\"}},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"getAmountOut(address,address,uint256)\":{\"details\":\"Calculates the amount of `toToken` that will be received when swapping `fromToken` for `toToken`.\",\"params\":{\"amount\":\"The amount of `fromToken` being swapped.\",\"fromToken\":\"The address of the token being swapped from.\",\"toToken\":\"The address of the token being swapped to.\"},\"returns\":{\"_0\":\"The amount of `toToken` that will be received.\"}},\"getAssetReserve(address)\":{\"details\":\"Returns the reserve amount of the specified asset.\",\"params\":{\"asset\":\"The address of the asset.\"},\"returns\":{\"_0\":\"The reserve amount of the asset.\"}},\"getAssets()\":{\"details\":\"Retrieves the list of assets in the pool.\",\"returns\":{\"_0\":\"An array of addresses representing the assets.\"}},\"getDeviation()\":{\"details\":\"Returns the deviation between the current weights and target weights of the assets in the pool.\",\"returns\":{\"directions\":\"An array of boolean values indicating whether the current weight is higher (true) or lower (false) than the target weight.\"}},\"getReserves()\":{\"details\":\"Returns an array of reserves for each asset in the pool.\",\"returns\":{\"_0\":\"An array of reserves.\"}},\"getWeights()\":{\"details\":\"Retrieves the list of weights associated with the assets in the pool.\",\"returns\":{\"_0\":\"An array of uint256 values representing the weights.\"}},\"isRebalanceNeeded()\":{\"details\":\"Checks if rebalancing is needed for the pool.\",\"returns\":{\"_0\":\"A boolean value indicating whether rebalancing is needed or not.\"}},\"liquidity()\":{\"details\":\"Returns the total liquidity of the pool.\",\"returns\":{\"_0\":\"The total liquidity of the pool.\"}},\"mint(address,uint256[])\":{\"details\":\"Mints new tokens and adds them to the specified address.\",\"params\":{\"to\":\"The address to which the new tokens will be minted.\"},\"returns\":{\"_0\":\"The amount of tokens minted.\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"performRebalanceIfNeeded()\":{\"details\":\"Performs rebalance\"},\"rebalanceWeights(address)\":{\"details\":\"Rebalances the weights of the pool by calculating the amounts to add for each token, transferring the calculated amounts from the user to the pool, minting the total added liquidity, updating the reserves, and emitting an event to indicate the rebalancing of weights.\",\"params\":{\"receiver\":\"The address to receive the minted liquidity tokens.\"}},\"swap(address,address,uint256,address)\":{\"details\":\"Swaps `amount` of `fromToken` to `toToken` and transfers the received amount to `receiver`. Requirements: - `fromToken` and `toToken` must be different tokens. - `amount` must be greater than zero. - Sufficient liquidity of `toToken` must be available in the contract. Emits a `Swap` event with the details of the swap. Updates the reserves after the swap.\",\"params\":{\"amount\":\"The amount of `fromToken` to swap.\",\"fromToken\":\"The address of the token to swap from.\",\"receiver\":\"The address to receive the swapped tokens.\",\"toToken\":\"The address of the token to swap to.\"},\"returns\":{\"toSend\":\"The amount of `toToken` received after the swap.\"}},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"unitPrice()\":{\"details\":\"Returns the unit price of the pool.\",\"returns\":{\"_0\":\"The unit price of the pool.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"burn(address)\":{\"notice\":\"This function can only be called by the periphery contract.The pool tokens must have a balance greater than 0.The total supply of pool tokens must be greater than 0.The function calculates the amounts of each underlying asset to transfer based on the share of pool tokens being burned.A fee is deducted from the share of pool tokens being burned and transferred to the treasury address.The function checks if the pool has sufficient liquidity before performing any transfers.If any transfer fails, the function reverts the entire operation.After the transfers, the function updates the reserves of the pool.Emits a `Burn` event with the address and share of pool tokens burned.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BaluniV1Pool.sol\":\"BaluniV1Pool\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"./IERC20.sol\\\";\\nimport {IERC20Metadata} from \\\"./extensions/IERC20Metadata.sol\\\";\\nimport {Context} from \\\"../../utils/Context.sol\\\";\\nimport {IERC20Errors} from \\\"../../interfaces/draft-IERC6093.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n */\\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\\n    mapping(address account => uint256) private _balances;\\n\\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `value`.\\n     */\\n    function transfer(address to, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `value`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `value`.\\n     */\\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, value);\\n        _transfer(from, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _transfer(address from, address to, uint256 value) internal {\\n        if (from == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        if (to == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\\n     * this function.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _update(address from, address to, uint256 value) internal virtual {\\n        if (from == address(0)) {\\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\\n            _totalSupply += value;\\n        } else {\\n            uint256 fromBalance = _balances[from];\\n            if (fromBalance < value) {\\n                revert ERC20InsufficientBalance(from, fromBalance, value);\\n            }\\n            unchecked {\\n                // Overflow not possible: value <= fromBalance <= totalSupply.\\n                _balances[from] = fromBalance - value;\\n            }\\n        }\\n\\n        if (to == address(0)) {\\n            unchecked {\\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\\n                _totalSupply -= value;\\n            }\\n        } else {\\n            unchecked {\\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\\n                _balances[to] += value;\\n            }\\n        }\\n\\n        emit Transfer(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\\n     * Relies on the `_update` mechanism\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _mint(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(address(0), account, value);\\n    }\\n\\n    /**\\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\\n     * Relies on the `_update` mechanism.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead\\n     */\\n    function _burn(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        _update(account, address(0), value);\\n    }\\n\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     *\\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\\n     */\\n    function _approve(address owner, address spender, uint256 value) internal {\\n        _approve(owner, spender, value, true);\\n    }\\n\\n    /**\\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\\n     *\\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\\n     * `Approval` event during `transferFrom` operations.\\n     *\\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\\n     * true using the following override:\\n     * ```\\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\\n     *     super._approve(owner, spender, value, true);\\n     * }\\n     * ```\\n     *\\n     * Requirements are the same as {_approve}.\\n     */\\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\\n        if (owner == address(0)) {\\n            revert ERC20InvalidApprover(address(0));\\n        }\\n        if (spender == address(0)) {\\n            revert ERC20InvalidSpender(address(0));\\n        }\\n        _allowances[owner][spender] = value;\\n        if (emitEvent) {\\n            emit Approval(owner, spender, value);\\n        }\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\\n     *\\n     * Does not update the allowance value in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Does not emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            if (currentAllowance < value) {\\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\\n            }\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - value, false);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant NOT_ENTERED = 1;\\n    uint256 private constant ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    /**\\n     * @dev Unauthorized reentrant call.\\n     */\\n    error ReentrancyGuardReentrantCall();\\n\\n    constructor() {\\n        _status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\\n        if (_status == ENTERED) {\\n            revert ReentrancyGuardReentrantCall();\\n        }\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Returns true if the reentrancy guard is currently set to \\\"entered\\\", which indicates there is a\\n     * `nonReentrant` function in the call stack.\\n     */\\n    function _reentrancyGuardEntered() internal view returns (bool) {\\n        return _status == ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236\",\"license\":\"MIT\"},\"contracts/BaluniV1Pool.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n/**\\r\\n *  __                  __                      __\\r\\n * /  |                /  |                    /  |\\r\\n * $$ |____    ______  $$ | __    __  _______  $$/\\r\\n * $$      \\\\  /      \\\\ $$ |/  |  /  |/       \\\\ /  |\\r\\n * $$$$$$$  | $$$$$$  |$$ |$$ |  $$ |$$$$$$$  |$$ |\\r\\n * $$ |  $$ | /    $$ |$$ |$$ |  $$ |$$ |  $$ |$$ |\\r\\n * $$ |__$$ |/$$$$$$$ |$$ |$$ \\\\__$$ |$$ |  $$ |$$ |\\r\\n * $$    $$/ $$    $$ |$$ |$$    $$/ $$ |  $$ |$$ |\\r\\n * $$$$$$$/   $$$$$$$/ $$/  $$$$$$/  $$/   $$/ $$/\\r\\n *\\r\\n *\\r\\n *                  ,-\\\"\\\"\\\"\\\"-.\\r\\n *                ,'      _ `.\\r\\n *               /       )_)  \\\\\\r\\n *              :              :\\r\\n *              \\\\              /\\r\\n *               \\\\            /\\r\\n *                `.        ,'\\r\\n *                  `.    ,'\\r\\n *                    `.,'\\r\\n *                     /\\\\`.   ,-._\\r\\n *                         `-'    \\\\__\\r\\n *                              .\\r\\n *               s                \\\\\\r\\n *                                \\\\\\\\\\r\\n *                                 \\\\\\\\\\r\\n *                                  >\\\\/7\\r\\n *                              _.-(6'  \\\\\\r\\n *                             (=___._/` \\\\\\r\\n *                                  )  \\\\ |\\r\\n *                                 /   / |\\r\\n *                                /    > /\\r\\n *                               j    < _\\\\\\r\\n *                           _.-' :      ``.\\r\\n *                           \\\\ r=._\\\\        `.\\r\\n */\\r\\nimport './interfaces/IBaluniV1Rebalancer.sol';\\r\\nimport './interfaces/IBaluniV1Router.sol';\\r\\nimport '@openzeppelin/contracts/token/ERC20/ERC20.sol';\\r\\nimport '@openzeppelin/contracts/utils/ReentrancyGuard.sol';\\r\\n\\r\\nimport './interfaces/IBaluniV1PoolPeriphery.sol';\\r\\nimport './balancer/BMath.sol';\\r\\n\\r\\ncontract BaluniV1Pool is ERC20, ReentrancyGuard, BMath {\\r\\n    AssetInfo[] public assetInfos;\\r\\n    uint256 public trigger;\\r\\n    uint256 public ONE;\\r\\n    address public periphery;\\r\\n    address public factory;\\r\\n    uint256 public constant SWAP_FEE_BPS = 30; // 0.3%\\r\\n    address public baseAsset;\\r\\n    address public rebalancer;\\r\\n\\r\\n    struct AssetInfo {\\r\\n        address asset;\\r\\n        uint256 weight;\\r\\n    }\\r\\n\\r\\n    event RebalancePerformed(address indexed by, address[] assets);\\r\\n    event WeightsRebalanced(address indexed user, uint256[] amountsAdded);\\r\\n    event Burn(address indexed user, uint256 sharesBurned);\\r\\n    event Mint(address indexed to, uint256 sharesMinted);\\r\\n    event Swap(\\r\\n        address indexed user,\\r\\n        address indexed fromToken,\\r\\n        address indexed toToken,\\r\\n        uint256 amountIn,\\r\\n        uint256 amountOut\\r\\n    );\\r\\n\\r\\n    /**\\r\\n     * @dev Initializes a new instance of the BaluniV1Pool contract.\\r\\n     * @param _rebalancer The address of the rebalancer contract.\\r\\n     * @param _assets An array of addresses representing the assets in the pool.\\r\\n     * @param _weights An array of weights corresponding to the assets in the pool.\\r\\n     * @param _trigger The trigger value for rebalancing the pool.\\r\\n     * @param _periphery The address of the periphery contract.\\r\\n     */\\r\\n    constructor(\\r\\n        address _rebalancer,\\r\\n        address[] memory _assets,\\r\\n        uint256[] memory _weights,\\r\\n        uint256 _trigger,\\r\\n        address _periphery\\r\\n    ) ERC20('Baluni LP', 'BALUNI-LP') {\\r\\n        // Initialize contract state variables\\r\\n        periphery = _periphery;\\r\\n        factory = msg.sender;\\r\\n        rebalancer = _rebalancer;\\r\\n        ONE = 1e18;\\r\\n\\r\\n        // Initialize assets and weights\\r\\n        initializeAssets(_assets, _weights);\\r\\n\\r\\n        // Set trigger value\\r\\n        trigger = _trigger;\\r\\n\\r\\n        // Set base asset\\r\\n        baseAsset = IBaluniV1Rebalancer(_rebalancer).USDC();\\r\\n        //baseAsset = IBaluniV1Rebalancer(_rebalancer).WNATIVE();\\r\\n\\r\\n        // Ensure the sum of weights equals 10000\\r\\n        uint256 totalWeight = 0;\\r\\n        for (uint256 i = 0; i < _weights.length; i++) {\\r\\n            totalWeight += _weights[i];\\r\\n        }\\r\\n        require(totalWeight == 10000, 'Invalid weights');\\r\\n    }\\r\\n\\r\\n    modifier onlyPeriphery() {\\r\\n        require(msg.sender == periphery, 'Only Periphery');\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    function calcSpotPrice(address fromToken, address toToken) public view returns (uint256) {\\r\\n        uint256 reserveFrom = getAssetReserve(fromToken);\\r\\n        uint256 reserveTo = getAssetReserve(toToken);\\r\\n\\r\\n        // check decimal of from and to token and scale to 18 decimal\\r\\n        uint256 fromDecimal = IERC20Metadata(fromToken).decimals();\\r\\n        uint256 toDecimal = IERC20Metadata(toToken).decimals();\\r\\n\\r\\n        uint256 tokenBalanceIn = reserveFrom * 10 ** 18 - fromDecimal;\\r\\n        uint256 tokenBalanceOut = reserveTo * 10 ** 18 - toDecimal;\\r\\n\\r\\n        // convert the weight 3000 into 0.1*1e18 format\\r\\n        uint256 tokenWeightIn = (_getTargetWeight(fromToken) / 1000) * 10 ** 18;\\r\\n        uint256 tokenWeightOut = (_getTargetWeight(toToken) / 1000) * 10 ** 18;\\r\\n\\r\\n        return BMath.calcSpotPrice(tokenBalanceIn, tokenWeightIn, tokenBalanceOut, tokenWeightOut, SWAP_FEE_BPS);\\r\\n    }\\r\\n\\r\\n    function calcOraclePrice(address fromToken, address toToken) external view returns (uint256) {\\r\\n        uint256 reserveFrom = getAssetReserve(fromToken);\\r\\n        uint256 reserveTo = getAssetReserve(toToken);\\r\\n        uint fromDecimal = IERC20Metadata(fromToken).decimals();\\r\\n        return IBaluniV1Rebalancer(rebalancer).convert(fromToken, toToken, 1 * 10 ** fromDecimal);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Initializes the assets and their weights for the pool.\\r\\n     * @param _assets The array of asset addresses.\\r\\n     * @param _weights The array of weights corresponding to each asset.\\r\\n     */\\r\\n    function initializeAssets(address[] memory _assets, uint256[] memory _weights) internal {\\r\\n        require(_assets.length == _weights.length, 'Assets and weights length mismatch');\\r\\n\\r\\n        for (uint256 i = 0; i < _assets.length; i++) {\\r\\n            require(_assets[i] != address(0), 'Invalid asset address');\\r\\n            require(_weights[i] > 0, 'Invalid weight');\\r\\n\\r\\n            assetInfos.push(AssetInfo({asset: _assets[i], weight: _weights[i]}));\\r\\n\\r\\n            IERC20 asset = IERC20(_assets[i]);\\r\\n            if (asset.allowance(address(this), address(rebalancer)) == 0) {\\r\\n                asset.approve(address(rebalancer), type(uint256).max);\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Rebalances the weights of the pool by calculating the amounts to add for each token,\\r\\n     * transferring the calculated amounts from the user to the pool, minting the total added liquidity,\\r\\n     * updating the reserves, and emitting an event to indicate the rebalancing of weights.\\r\\n     * @param receiver The address to receive the minted liquidity tokens.\\r\\n     */\\r\\n    function rebalanceWeights(address receiver) external onlyPeriphery returns (uint256[] memory) {\\r\\n        require(isRebalanceNeeded(), 'Rebalance not needed');\\r\\n        (uint256 totalValuation, uint256[] memory valuations) = _computeTotalValuation();\\r\\n\\r\\n        uint256[] memory amountsToAdd = _calculateAmountsToAdd(totalValuation, valuations);\\r\\n\\r\\n        // Calculate total added liquidity before minting\\r\\n        uint256 totalAddedLiquidity = _calculateTotalAddedLiquidity(amountsToAdd);\\r\\n\\r\\n        uint baseDecimal = IERC20Metadata(baseAsset).decimals();\\r\\n\\r\\n        totalAddedLiquidity *= 10 ** 18 - baseDecimal;\\r\\n\\r\\n        uint256[] memory amounts = new uint256[](assetInfos.length);\\r\\n\\r\\n        for (uint256 i = 0; i < amountsToAdd.length; i++) {\\r\\n            if (amountsToAdd[i] > 0) {\\r\\n                amounts[i] = _calculateLiquidity(i, amountsToAdd[i]);\\r\\n            }\\r\\n        }\\r\\n\\r\\n        _mint(receiver, totalAddedLiquidity);\\r\\n\\r\\n        emit WeightsRebalanced(msg.sender, amountsToAdd);\\r\\n\\r\\n        return amounts;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Swaps `amount` of `fromToken` to `toToken` and transfers the received amount to `receiver`.\\r\\n     *\\r\\n     * Requirements:\\r\\n     * - `fromToken` and `toToken` must be different tokens.\\r\\n     * - `amount` must be greater than zero.\\r\\n     * - Sufficient liquidity of `toToken` must be available in the contract.\\r\\n     *\\r\\n     * Emits a `Swap` event with the details of the swap.\\r\\n     *\\r\\n     * Updates the reserves after the swap.\\r\\n     *\\r\\n     * @param fromToken The address of the token to swap from.\\r\\n     * @param toToken The address of the token to swap to.\\r\\n     * @param amount The amount of `fromToken` to swap.\\r\\n     * @param receiver The address to receive the swapped tokens.\\r\\n     * @return toSend The amount of `toToken` received after the swap.\\r\\n     */\\r\\n    function swap(\\r\\n        address fromToken,\\r\\n        address toToken,\\r\\n        uint256 amount,\\r\\n        address receiver\\r\\n    ) external nonReentrant returns (uint256 toSend) {\\r\\n        require(fromToken != toToken, 'Cannot swap the same token');\\r\\n        require(amount > 0, 'Amount must be greater than zero');\\r\\n\\r\\n        //uint256 receivedAmount = getAmountOut(fromToken, toToken, amount);\\r\\n\\r\\n        uint256 receivedAmount = _swapExactAmountIn(fromToken, amount, toToken, 1, 1e18);\\r\\n        receivedAmount /= 10 ** 18 - IERC20Metadata(toToken).decimals();\\r\\n\\r\\n        // uint256 toDecimal = IERC20Metadata(toToken).decimals();\\r\\n        // uint256 price = calcSpotPrice(fromToken, toToken);\\r\\n        // uint256 receivedAmount = (amount * price) / 10 ** 18 - toDecimal;\\r\\n\\r\\n        require(getAssetReserve(toToken) >= receivedAmount, 'Insufficient Liquidity');\\r\\n\\r\\n        uint256 fee = (receivedAmount * SWAP_FEE_BPS) / 10000;\\r\\n        toSend = receivedAmount - fee;\\r\\n\\r\\n        emit Swap(receiver, fromToken, toToken, amount, toSend);\\r\\n\\r\\n        return toSend;\\r\\n    }\\r\\n\\r\\n    function _swapExactAmountIn(\\r\\n        address tokenIn,\\r\\n        uint tokenAmountIn,\\r\\n        address tokenOut,\\r\\n        uint minAmountOut,\\r\\n        uint maxPrice\\r\\n    ) internal returns (uint tokenAmountOut) {\\r\\n        uint256 tokenOutReserve = getAssetReserve(tokenOut);\\r\\n        uint256 tokenInReserve = getAssetReserve(tokenIn);\\r\\n\\r\\n        //uint spotPriceBefore = calcSpotPrice(tokenIn, tokenOut);\\r\\n        uint spotPriceBefore = calcSpotPrice(\\r\\n            tokenInReserve,\\r\\n            (_getTargetWeight(tokenIn) / 1000) * 1e18,\\r\\n            tokenOutReserve,\\r\\n            (_getTargetWeight(tokenOut) / 1000) * 1e18,\\r\\n            SWAP_FEE_BPS\\r\\n        );\\r\\n\\r\\n        //require(spotPriceBefore <= maxPrice, 'ERR_BAD_LIMIT_PRICE');\\r\\n\\r\\n        tokenAmountOut = calcOutGivenIn(\\r\\n            tokenInReserve,\\r\\n            (_getTargetWeight(tokenIn) / 1000) * 1e18,\\r\\n            tokenOutReserve,\\r\\n            (_getTargetWeight(tokenOut) / 1000) * 1e18,\\r\\n            tokenAmountIn,\\r\\n            SWAP_FEE_BPS\\r\\n        );\\r\\n        require(tokenAmountOut >= minAmountOut, 'ERR_LIMIT_OUT');\\r\\n\\r\\n        tokenInReserve = badd(tokenInReserve, tokenAmountIn);\\r\\n        tokenOutReserve = bsub(tokenOutReserve, tokenAmountOut);\\r\\n\\r\\n        uint256 spotPriceAfter = calcSpotPrice(\\r\\n            tokenInReserve,\\r\\n            (_getTargetWeight(tokenIn) / 1000) * 1e18,\\r\\n            tokenOutReserve,\\r\\n            (_getTargetWeight(tokenOut) / 1000) * 1e18,\\r\\n            SWAP_FEE_BPS\\r\\n        );\\r\\n        require(spotPriceAfter >= spotPriceBefore, 'ERR_MATH_APPROX');\\r\\n        //require(spotPriceAfter <= maxPrice, 'ERR_LIMIT_PRICE');\\r\\n        require(spotPriceBefore <= bdiv(tokenAmountIn, tokenAmountOut), 'ERR_MATH_APPROX');\\r\\n\\r\\n        return (tokenAmountOut);\\r\\n    }\\r\\n\\r\\n    function _swapExactAmountOut(\\r\\n        address tokenIn,\\r\\n        uint maxAmountIn,\\r\\n        address tokenOut,\\r\\n        uint tokenAmountOut,\\r\\n        uint maxPrice\\r\\n    ) internal returns (uint tokenAmountIn) {\\r\\n        uint256 tokenOutReserve = getAssetReserve(tokenOut);\\r\\n        uint256 tokenInReserve = getAssetReserve(tokenIn);\\r\\n\\r\\n        uint spotPriceBefore = calcSpotPrice(tokenIn, tokenOut);\\r\\n        require(spotPriceBefore <= maxPrice, 'ERR_BAD_LIMIT_PRICE');\\r\\n\\r\\n        tokenAmountIn = calcInGivenOut(\\r\\n            tokenInReserve,\\r\\n            (_getTargetWeight(tokenIn) / 1000) * 1e18,\\r\\n            tokenOutReserve,\\r\\n            (_getTargetWeight(tokenOut) / 1000) * 1e18,\\r\\n            tokenAmountOut,\\r\\n            SWAP_FEE_BPS\\r\\n        );\\r\\n\\r\\n        tokenInReserve = badd(tokenInReserve, tokenAmountIn);\\r\\n        tokenOutReserve = bsub(tokenOutReserve, tokenAmountOut);\\r\\n\\r\\n        uint256 spotPriceAfter = calcSpotPrice(\\r\\n            tokenInReserve,\\r\\n            (_getTargetWeight(tokenIn) / 1000) * 1e18,\\r\\n            tokenOutReserve,\\r\\n            (_getTargetWeight(tokenOut) / 1000) * 1e18,\\r\\n            SWAP_FEE_BPS\\r\\n        );\\r\\n        require(spotPriceAfter >= spotPriceBefore, 'ERR_MATH_APPROX');\\r\\n        require(spotPriceAfter <= maxPrice, 'ERR_LIMIT_PRICE');\\r\\n        require(spotPriceBefore <= bdiv(tokenAmountIn, tokenAmountOut), 'ERR_MATH_APPROX');\\r\\n\\r\\n        return (tokenAmountOut);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Mints new tokens and adds them to the specified address.\\r\\n     * @param to The address to which the new tokens will be minted.\\r\\n     * @return The amount of tokens minted.\\r\\n     */\\r\\n    function mint(address to, uint256[] memory amounts) external onlyPeriphery returns (uint256) {\\r\\n        uint256 totalSupply = totalSupply();\\r\\n        uint256 totalValue = 0;\\r\\n        uint256[] memory _reserves = getReserves();\\r\\n        require(assetInfos.length == _reserves.length, 'Invalid reserves length');\\r\\n        require(assetInfos.length > 0, 'No assets');\\r\\n\\r\\n        for (uint256 i = 0; i < assetInfos.length; i++) {\\r\\n            address asset = assetInfos[i].asset;\\r\\n\\r\\n            uint256 valuation = _convertTokenToBase(asset, amounts[i]);\\r\\n            totalValue += valuation;\\r\\n        }\\r\\n\\r\\n        require(totalValue > 0, 'Total value must be greater than 0');\\r\\n\\r\\n        uint256 toMint;\\r\\n\\r\\n        // Calculate total added liquidity before minting\\r\\n\\r\\n        uint baseDecimal = IERC20Metadata(baseAsset).decimals();\\r\\n\\r\\n        if (totalSupply == 0) {\\r\\n            toMint = totalValue * 10 ** 18 - baseDecimal;\\r\\n        } else {\\r\\n            (uint256 totalLiquidity, ) = _computeTotalValuation();\\r\\n            require(totalLiquidity > 0, 'Total liquidity must be greater than 0');\\r\\n            toMint = (((totalValue) * totalSupply) / totalLiquidity) * 10 ** 18 - baseDecimal;\\r\\n        }\\r\\n        require(toMint != 0, 'Mint qty is 0');\\r\\n\\r\\n        uint256 b4 = balanceOf(msg.sender);\\r\\n        _mint(to, toMint);\\r\\n        uint256 b = balanceOf(to) - b4;\\r\\n\\r\\n        require(b == toMint, 'Mint Failed');\\r\\n\\r\\n        emit Mint(to, toMint);\\r\\n\\r\\n        return toMint;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Burns the pool tokens and transfers the underlying assets to the specified address.\\r\\n     * @param to The address to transfer the underlying assets to.\\r\\n     * @notice This function can only be called by the periphery contract.\\r\\n     * @notice The pool tokens must have a balance greater than 0.\\r\\n     * @notice The total supply of pool tokens must be greater than 0.\\r\\n     * @notice The function calculates the amounts of each underlying asset to transfer based on the share of pool tokens being burned.\\r\\n     * @notice A fee is deducted from the share of pool tokens being burned and transferred to the treasury address.\\r\\n     * @notice The function checks if the pool has sufficient liquidity before performing any transfers.\\r\\n     * @notice If any transfer fails, the function reverts the entire operation.\\r\\n     * @notice After the transfers, the function updates the reserves of the pool.\\r\\n     * @notice Emits a `Burn` event with the address and share of pool tokens burned.\\r\\n     */\\r\\n    function burn(address to) external onlyPeriphery returns (uint256[] memory) {\\r\\n        uint256 share = balanceOf(address(this));\\r\\n        require(share > 0, 'Share must be greater than 0');\\r\\n\\r\\n        uint256 totalSupply = totalSupply();\\r\\n        require(totalSupply > 0, 'No liquidity');\\r\\n\\r\\n        uint256[] memory amounts = new uint256[](assetInfos.length);\\r\\n        uint256 fee = (share * SWAP_FEE_BPS) / 10000;\\r\\n        uint256 shareAfterFee = share - fee;\\r\\n\\r\\n        for (uint256 i = 0; i < assetInfos.length; i++) {\\r\\n            uint256 assetBalance = IBaluniV1PoolPeriphery(periphery).getAssetReserve(\\r\\n                address(this),\\r\\n                assetInfos[i].asset\\r\\n            );\\r\\n            amounts[i] = (assetBalance * shareAfterFee) / totalSupply;\\r\\n        }\\r\\n\\r\\n        require(balanceOf(address(this)) >= shareAfterFee, 'Insufficient BALUNI liquidity');\\r\\n\\r\\n        bool feeTransferSuccess = IERC20(address(this)).transfer(IBaluniV1Rebalancer(rebalancer).treasury(), fee);\\r\\n        require(feeTransferSuccess, 'Fee transfer failed');\\r\\n\\r\\n        _burn(address(this), shareAfterFee);\\r\\n\\r\\n        emit Burn(to, shareAfterFee);\\r\\n\\r\\n        return amounts;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Calculates the amount of `toToken` that will be received when swapping `fromToken` for `toToken`.\\r\\n     * @param fromToken The address of the token being swapped from.\\r\\n     * @param toToken The address of the token being swapped to.\\r\\n     * @param amount The amount of `fromToken` being swapped.\\r\\n     * @return The amount of `toToken` that will be received.\\r\\n     */\\r\\n    function getAmountOut(address fromToken, address toToken, uint256 amount) public view returns (uint256) {\\r\\n        return IBaluniV1Rebalancer(rebalancer).convert(fromToken, toToken, amount);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Performs rebalance\\r\\n     */\\r\\n    function performRebalanceIfNeeded()\\r\\n        external\\r\\n        onlyPeriphery\\r\\n        returns (uint256[] memory amountsToAdd, uint256[] memory amountsToRemove)\\r\\n    {\\r\\n        require(isRebalanceNeeded(), 'Rebalance not needed');\\r\\n        return _performRebalanceIfNeeded();\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the deviation between the current weights and target weights of the assets in the pool.\\r\\n     * @return directions An array of boolean values indicating whether the current weight is higher (true) or lower (false) than the target weight.\\r\\n     */\\r\\n    function getDeviation() public view returns (bool[] memory directions, uint256[] memory deviations) {\\r\\n        (uint256 totVal, uint256[] memory valuations) = _computeTotalValuation();\\r\\n        uint256 numAssets = assetInfos.length;\\r\\n\\r\\n        directions = new bool[](numAssets);\\r\\n        deviations = new uint256[](numAssets);\\r\\n\\r\\n        for (uint256 i = 0; i < numAssets; i++) {\\r\\n            uint256 currentWeight = (valuations[i] * 10000) / totVal;\\r\\n            uint256 targetWeight = assetInfos[i].weight;\\r\\n\\r\\n            if (currentWeight > targetWeight) {\\r\\n                deviations[i] = currentWeight - targetWeight;\\r\\n                directions[i] = true;\\r\\n            } else {\\r\\n                deviations[i] = targetWeight - currentWeight;\\r\\n                directions[i] = false;\\r\\n            }\\r\\n        }\\r\\n\\r\\n        return (directions, deviations);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the liquidity of a specific asset in the pool.\\r\\n     * @param assetIndex The index of the asset.\\r\\n     * @return The liquidity of the asset.\\r\\n     */\\r\\n    function assetLiquidity(uint256 assetIndex) external view returns (uint256) {\\r\\n        (, uint256[] memory usdValuations) = _computeTotalValuation();\\r\\n        require(assetIndex < usdValuations.length, 'Invalid asset index');\\r\\n        return usdValuations[assetIndex];\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Computes the total valuation of the pool and returns the total valuation and an array of individual valuations.\\r\\n     * @return totalVal The total valuation of the pool.\\r\\n     * @return valuations An array of individual valuations.\\r\\n     */\\r\\n    function computeTotalValuation() external view returns (uint256 totalVal, uint256[] memory valuations) {\\r\\n        (totalVal, valuations) = _computeTotalValuation();\\r\\n        return (totalVal, valuations);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the total liquidity of the pool.\\r\\n     * @return The total liquidity of the pool.\\r\\n     */\\r\\n    function liquidity() external view returns (uint256) {\\r\\n        (uint256 totalVal, ) = _computeTotalValuation();\\r\\n        return totalVal;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the unit price of the pool.\\r\\n     * @return The unit price of the pool.\\r\\n     */\\r\\n    function unitPrice() external view returns (uint256) {\\r\\n        (uint256 totalVal, ) = _computeTotalValuation();\\r\\n        uint256 totalSupply = totalSupply();\\r\\n        if (totalSupply == 0) {\\r\\n            return 0;\\r\\n        }\\r\\n        return (totalVal * ONE) / totalSupply;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns an array of reserves for each asset in the pool.\\r\\n     * @return An array of reserves.\\r\\n     */\\r\\n    function getReserves() public view returns (uint256[] memory) {\\r\\n        return IBaluniV1PoolPeriphery(periphery).getReserves(address(this));\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the reserve amount of the specified asset.\\r\\n     * @param asset The address of the asset.\\r\\n     * @return The reserve amount of the asset.\\r\\n     */\\r\\n    function getAssetReserve(address asset) public view returns (uint256) {\\r\\n        return IBaluniV1PoolPeriphery(periphery).getAssetReserve(address(this), asset);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Retrieves the list of assets in the pool.\\r\\n     * @return An array of addresses representing the assets.\\r\\n     */\\r\\n    function getAssets() external view returns (address[] memory) {\\r\\n        address[] memory assets = new address[](assetInfos.length);\\r\\n        for (uint256 i = 0; i < assetInfos.length; i++) {\\r\\n            assets[i] = assetInfos[i].asset;\\r\\n        }\\r\\n        return assets;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Retrieves the list of weights associated with the assets in the pool.\\r\\n     * @return An array of uint256 values representing the weights.\\r\\n     */\\r\\n    function getWeights() external view returns (uint256[] memory) {\\r\\n        uint256[] memory weights = new uint256[](assetInfos.length);\\r\\n        for (uint256 i = 0; i < assetInfos.length; i++) {\\r\\n            weights[i] = assetInfos[i].weight;\\r\\n        }\\r\\n        return weights;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Computes the total valuation of the assets in the pool.\\r\\n     * @return totalValuation The total valuation of the assets.\\r\\n     * @return valuations An array of valuations for each asset in the pool.\\r\\n     */\\r\\n    function _computeTotalValuation() internal view returns (uint256 totalValuation, uint256[] memory valuations) {\\r\\n        uint256 numAssets = assetInfos.length;\\r\\n        valuations = new uint256[](numAssets);\\r\\n        for (uint256 i = 0; i < numAssets; i++) {\\r\\n            address asset = assetInfos[i].asset;\\r\\n            uint256 assetReserve = getAssetReserve(address(asset));\\r\\n\\r\\n            if ((address(asset) == baseAsset)) {\\r\\n                valuations[i] = assetReserve;\\r\\n            } else {\\r\\n                uint256 valuation = _convertTokenToBase(address(asset), assetReserve);\\r\\n                valuations[i] = valuation;\\r\\n            }\\r\\n            totalValuation += valuations[i];\\r\\n        }\\r\\n        return (totalValuation, valuations);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Performs rebalance if needed.\\r\\n     * This function retrieves the assets and weights from the `assetInfos` array,\\r\\n     * and calls the `rebalance` function of the `rebalancer` contract with the retrieved values.\\r\\n     * It emits a `RebalancePerformed` event after the rebalance is performed.\\r\\n     * @notice This function should only be called internally.\\r\\n     */\\r\\n    function _performRebalanceIfNeeded() internal returns (uint256[] memory, uint256[] memory) {\\r\\n        address[] memory assets = new address[](assetInfos.length);\\r\\n        uint256[] memory weights = new uint256[](assetInfos.length);\\r\\n        uint256[] memory peripheryBalancesB4 = new uint256[](assetInfos.length);\\r\\n        uint256[] memory peripheryBalancesAfter = new uint256[](assetInfos.length);\\r\\n        uint256[] memory amountsToAdd = new uint256[](assetInfos.length);\\r\\n        uint256[] memory amountsToRemove = new uint256[](assetInfos.length);\\r\\n\\r\\n        for (uint256 i = 0; i < assetInfos.length; i++) {\\r\\n            assets[i] = assetInfos[i].asset;\\r\\n            weights[i] = assetInfos[i].weight;\\r\\n            peripheryBalancesB4[i] = IERC20(assets[i]).balanceOf(periphery);\\r\\n        }\\r\\n\\r\\n        uint256[] memory balances = getReserves();\\r\\n\\r\\n        IBaluniV1Rebalancer(rebalancer).rebalance(balances, assets, weights, trigger, periphery, periphery, baseAsset);\\r\\n\\r\\n        for (uint256 i = 0; i < assetInfos.length; i++) {\\r\\n            peripheryBalancesAfter[i] = IERC20(assets[i]).balanceOf(periphery);\\r\\n\\r\\n            if (peripheryBalancesAfter[i] > peripheryBalancesB4[i]) {\\r\\n                amountsToAdd[i] = peripheryBalancesAfter[i] - peripheryBalancesB4[i];\\r\\n            } else {\\r\\n                amountsToRemove[i] = peripheryBalancesB4[i] - peripheryBalancesAfter[i];\\r\\n            }\\r\\n        }\\r\\n\\r\\n        emit RebalancePerformed(msg.sender, assets);\\r\\n\\r\\n        return (amountsToAdd, amountsToRemove);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Calculates the total added liquidity based on the amounts to add.\\r\\n     * @param amountsToAdd An array of amounts to add for each asset.\\r\\n     * @return totalAddedLiquidity The total added liquidity.\\r\\n     */\\r\\n    function _calculateTotalAddedLiquidity(\\r\\n        uint256[] memory amountsToAdd\\r\\n    ) internal view returns (uint256 totalAddedLiquidity) {\\r\\n        for (uint256 i = 0; i < assetInfos.length; i++) {\\r\\n            totalAddedLiquidity += amountsToAdd[i];\\r\\n        }\\r\\n        return totalAddedLiquidity;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Calculates the amounts to add to each asset based on the total valuation and current valuations.\\r\\n     * @param totalValuation The total valuation of the pool.\\r\\n     * @param valuations An array of current valuations for each asset.\\r\\n     * @return amountsToAdd An array of amounts to add to each asset.\\r\\n     */\\r\\n    function _calculateAmountsToAdd(\\r\\n        uint256 totalValuation,\\r\\n        uint256[] memory valuations\\r\\n    ) internal view returns (uint256[] memory amountsToAdd) {\\r\\n        amountsToAdd = new uint256[](assetInfos.length);\\r\\n        for (uint256 i = 0; i < assetInfos.length; i++) {\\r\\n            uint256 targetValuation = (totalValuation * assetInfos[i].weight) / 10000;\\r\\n            if (valuations[i] < targetValuation) {\\r\\n                amountsToAdd[i] = targetValuation - valuations[i];\\r\\n            }\\r\\n        }\\r\\n        return amountsToAdd;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Internal function to transfer tokens from the caller to the contract and calculate the liquidity.\\r\\n     * @param index The index of the asset in the assetInfos array.\\r\\n     * @param amountToAdd The amount of native tokens to add as liquidity.\\r\\n     */\\r\\n    function _calculateLiquidity(uint256 index, uint256 amountToAdd) internal view returns (uint256) {\\r\\n        uint256 tokenAmount = _convertBaseToToken(assetInfos[index].asset, amountToAdd);\\r\\n        require(tokenAmount > 0, 'Invalid token amount to add');\\r\\n        return tokenAmount;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Converts the specified amount of native token to the corresponding token amount.\\r\\n     * @param fromToken The address of the native token to convert from.\\r\\n     * @param amount The amount of native token to convert.\\r\\n     * @return The corresponding token amount.\\r\\n     */\\r\\n    function _convertBaseToToken(address fromToken, uint256 amount) internal view returns (uint256) {\\r\\n        uint256 tokenAmount = IBaluniV1Rebalancer(rebalancer).convert(baseAsset, fromToken, amount);\\r\\n        return tokenAmount;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the maximum of two uint8 values.\\r\\n     * @param a The first uint8 value.\\r\\n     * @param b The second uint8 value.\\r\\n     * @return The maximum value between a and b.\\r\\n     */\\r\\n    function max(uint8 a, uint8 b) private pure returns (uint8) {\\r\\n        return a >= b ? a : b;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the minimum of two uint8 values.\\r\\n     * @param a The first uint8 value.\\r\\n     * @param b The second uint8 value.\\r\\n     * @return The minimum value between a and b.\\r\\n     */\\r\\n    function min(uint8 a, uint8 b) private pure returns (uint8) {\\r\\n        return a <= b ? a : b;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Converts the specified token to the native token using the rebalancer contract.\\r\\n     * @param fromToken The address of the token to convert from.\\r\\n     * @param amount The amount of tokens to convert.\\r\\n     * @return scaledAmount The converted amount of tokens.\\r\\n     */\\r\\n    function _convertTokenToBase(address fromToken, uint256 amount) internal view returns (uint256 scaledAmount) {\\r\\n        uint256 tokenAmount = IBaluniV1Rebalancer(rebalancer).convert(fromToken, baseAsset, amount);\\r\\n        return tokenAmount;\\r\\n    }\\r\\n\\r\\n    // return true if one of the deviation overcome the trigger\\r\\n    /**\\r\\n     * @dev Checks if rebalancing is needed for the pool.\\r\\n     * @return A boolean value indicating whether rebalancing is needed or not.\\r\\n     */\\r\\n    function isRebalanceNeeded() public view returns (bool) {\\r\\n        (bool[] memory directions, uint256[] memory deviations) = getDeviation();\\r\\n        for (uint256 i = 0; i < deviations.length; i++) {\\r\\n            if (directions[i] && deviations[i] > trigger) {\\r\\n                return true;\\r\\n            }\\r\\n        }\\r\\n        return false;\\r\\n    }\\r\\n\\r\\n    function _getTargetWeight(address _token) internal view returns (uint256) {\\r\\n        for (uint256 i = 0; i < assetInfos.length; i++) {\\r\\n            if (assetInfos[i].asset == _token) {\\r\\n                return assetInfos[i].weight;\\r\\n            }\\r\\n        }\\r\\n        return 0;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x62d5ba024cc01d43e5870bc495d04f98671f6244e251df64a27cec359c0e7ea7\",\"license\":\"GNU AGPLv3\"},\"contracts/balancer/BColor.sol\":{\"content\":\"// This program is free software: you can redistribute it and/or modify\\r\\n// it under the terms of the GNU General Public License as published by\\r\\n// the Free Software Foundation, either version 3 of the License, or\\r\\n// (at your option) any later version.\\r\\n\\r\\n// This program is distributed in the hope that it will be useful,\\r\\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\\r\\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\r\\n// GNU General Public License for more details.\\r\\n\\r\\n// You should have received a copy of the GNU General Public License\\r\\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\\r\\n\\r\\npragma solidity 0.8.25;\\r\\n\\r\\nabstract contract BColor {\\r\\n    function getColor() external view virtual returns (bytes32);\\r\\n}\\r\\n\\r\\ncontract BBronze is BColor {\\r\\n    function getColor() external view override returns (bytes32) {\\r\\n        return bytes32('BRONZE');\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xfebf562cc76ad2f7d522afc383f11c4802fc39fc675bad0da602bde5e2212710\"},\"contracts/balancer/BConst.sol\":{\"content\":\"// This program is free software: you can redistribute it and/or modify\\r\\n// it under the terms of the GNU General Public License as published by\\r\\n// the Free Software Foundation, either version 3 of the License, or\\r\\n// (at your option) any later version.\\r\\n\\r\\n// This program is distributed in the hope that it will be useful,\\r\\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\\r\\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\r\\n// GNU General Public License for more details.\\r\\n\\r\\n// You should have received a copy of the GNU General Public License\\r\\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\\r\\n\\r\\npragma solidity 0.8.25;\\r\\n\\r\\nimport './BColor.sol';\\r\\n\\r\\ncontract BConst is BBronze {\\r\\n    uint public constant BONE = 10 ** 18;\\r\\n\\r\\n    uint public constant MIN_BOUND_TOKENS = 2;\\r\\n    uint public constant MAX_BOUND_TOKENS = 8;\\r\\n\\r\\n    uint public constant MIN_FEE = BONE / 10 ** 6;\\r\\n    uint public constant MAX_FEE = BONE / 10;\\r\\n    uint public constant EXIT_FEE = 0;\\r\\n\\r\\n    uint public constant MIN_WEIGHT = BONE;\\r\\n    uint public constant MAX_WEIGHT = BONE * 50;\\r\\n    uint public constant MAX_TOTAL_WEIGHT = BONE * 50;\\r\\n    uint public constant MIN_BALANCE = BONE / 10 ** 12;\\r\\n\\r\\n    uint public constant INIT_POOL_SUPPLY = BONE * 100;\\r\\n\\r\\n    uint public constant MIN_BPOW_BASE = 1 wei;\\r\\n    uint public constant MAX_BPOW_BASE = (2 * BONE) - 1 wei;\\r\\n    uint public constant BPOW_PRECISION = BONE / 10 ** 10;\\r\\n\\r\\n    uint public constant MAX_IN_RATIO = BONE / 2;\\r\\n    uint public constant MAX_OUT_RATIO = (BONE / 3) + 1 wei;\\r\\n}\\r\\n\",\"keccak256\":\"0xdda4746d3e2d40d8ecd62b61fec957d560ad405dd82aaf3e43d7e708168b7df6\"},\"contracts/balancer/BMath.sol\":{\"content\":\"// This program is free software: you can redistribute it and/or modify\\r\\n// it under the terms of the GNU General Public License as published by\\r\\n// the Free Software Foundation, either version 3 of the License, or\\r\\n// (at your option) any later version.\\r\\n\\r\\n// This program is distributed in the hope that it will be useful,\\r\\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\\r\\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\r\\n// GNU General Public License for more details.\\r\\n\\r\\n// You should have received a copy of the GNU General Public License\\r\\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\\r\\n\\r\\npragma solidity 0.8.25;\\r\\n\\r\\nimport \\\"./BNum.sol\\\";\\r\\n\\r\\ncontract BMath is BBronze, BConst, BNum {\\r\\n    /**********************************************************************************************\\r\\n    // calcSpotPrice                                                                             //\\r\\n    // sP = spotPrice                                                                            //\\r\\n    // bI = tokenBalanceIn                ( bI / wI )         1                                  //\\r\\n    // bO = tokenBalanceOut         sP =  -----------  *  ----------                             //\\r\\n    // wI = tokenWeightIn                 ( bO / wO )     ( 1 - sF )                             //\\r\\n    // wO = tokenWeightOut                                                                       //\\r\\n    // sF = swapFee                                                                              //\\r\\n    **********************************************************************************************/\\r\\n    function calcSpotPrice(\\r\\n        uint tokenBalanceIn,\\r\\n        uint tokenWeightIn,\\r\\n        uint tokenBalanceOut,\\r\\n        uint tokenWeightOut,\\r\\n        uint swapFee\\r\\n    )\\r\\n        public pure\\r\\n        returns (uint spotPrice)\\r\\n    {\\r\\n        uint numer = bdiv(tokenBalanceIn, tokenWeightIn);\\r\\n        uint denom = bdiv(tokenBalanceOut, tokenWeightOut);\\r\\n        uint ratio = bdiv(numer, denom);\\r\\n        uint scale = bdiv(BONE, bsub(BONE, swapFee));\\r\\n        return  (spotPrice = bmul(ratio, scale));\\r\\n    }\\r\\n\\r\\n    /**********************************************************************************************\\r\\n    // calcOutGivenIn                                                                            //\\r\\n    // aO = tokenAmountOut                                                                       //\\r\\n    // bO = tokenBalanceOut                                                                      //\\r\\n    // bI = tokenBalanceIn              /      /            bI             \\\\    (wI / wO) \\\\      //\\r\\n    // aI = tokenAmountIn    aO = bO * |  1 - | --------------------------  | ^            |     //\\r\\n    // wI = tokenWeightIn               \\\\      \\\\ ( bI + ( aI * ( 1 - sF )) /              /      //\\r\\n    // wO = tokenWeightOut                                                                       //\\r\\n    // sF = swapFee                                                                              //\\r\\n    **********************************************************************************************/\\r\\n    function calcOutGivenIn(\\r\\n        uint tokenBalanceIn,\\r\\n        uint tokenWeightIn,\\r\\n        uint tokenBalanceOut,\\r\\n        uint tokenWeightOut,\\r\\n        uint tokenAmountIn,\\r\\n        uint swapFee\\r\\n    )\\r\\n        public pure\\r\\n        returns (uint tokenAmountOut)\\r\\n    {\\r\\n        uint weightRatio = bdiv(tokenWeightIn, tokenWeightOut);\\r\\n        uint adjustedIn = bsub(BONE, swapFee);\\r\\n        adjustedIn = bmul(tokenAmountIn, adjustedIn);\\r\\n        uint y = bdiv(tokenBalanceIn, badd(tokenBalanceIn, adjustedIn));\\r\\n        uint foo = bpow(y, weightRatio);\\r\\n        uint bar = bsub(BONE, foo);\\r\\n        tokenAmountOut = bmul(tokenBalanceOut, bar);\\r\\n        return tokenAmountOut;\\r\\n    }\\r\\n\\r\\n    /**********************************************************************************************\\r\\n    // calcInGivenOut                                                                            //\\r\\n    // aI = tokenAmountIn                                                                        //\\r\\n    // bO = tokenBalanceOut               /  /     bO      \\\\    (wO / wI)      \\\\                 //\\r\\n    // bI = tokenBalanceIn          bI * |  | ------------  | ^            - 1  |                //\\r\\n    // aO = tokenAmountOut    aI =        \\\\  \\\\ ( bO - aO ) /                   /                 //\\r\\n    // wI = tokenWeightIn           --------------------------------------------                 //\\r\\n    // wO = tokenWeightOut                          ( 1 - sF )                                   //\\r\\n    // sF = swapFee                                                                              //\\r\\n    **********************************************************************************************/\\r\\n    function calcInGivenOut(\\r\\n        uint tokenBalanceIn,\\r\\n        uint tokenWeightIn,\\r\\n        uint tokenBalanceOut,\\r\\n        uint tokenWeightOut,\\r\\n        uint tokenAmountOut,\\r\\n        uint swapFee\\r\\n    )\\r\\n        public pure\\r\\n        returns (uint tokenAmountIn)\\r\\n    {\\r\\n        uint weightRatio = bdiv(tokenWeightOut, tokenWeightIn);\\r\\n        uint diff = bsub(tokenBalanceOut, tokenAmountOut);\\r\\n        uint y = bdiv(tokenBalanceOut, diff);\\r\\n        uint foo = bpow(y, weightRatio);\\r\\n        foo = bsub(foo, BONE);\\r\\n        tokenAmountIn = bsub(BONE, swapFee);\\r\\n        tokenAmountIn = bdiv(bmul(tokenBalanceIn, foo), tokenAmountIn);\\r\\n        return tokenAmountIn;\\r\\n    }\\r\\n\\r\\n    /**********************************************************************************************\\r\\n    // calcPoolOutGivenSingleIn                                                                  //\\r\\n    // pAo = poolAmountOut         /                                              \\\\              //\\r\\n    // tAi = tokenAmountIn        ///      /     //    wI \\\\      \\\\\\\\       \\\\     wI \\\\             //\\r\\n    // wI = tokenWeightIn        //| tAi *| 1 - || 1 - --  | * sF || + tBi \\\\    --  \\\\            //\\r\\n    // tW = totalWeight     pAo=||  \\\\      \\\\     \\\\\\\\    tW /      //         | ^ tW   | * pS - pS //\\r\\n    // tBi = tokenBalanceIn      \\\\\\\\  ------------------------------------- /        /            //\\r\\n    // pS = poolSupply            \\\\\\\\                    tBi               /        /             //\\r\\n    // sF = swapFee                \\\\                                              /              //\\r\\n    **********************************************************************************************/\\r\\n    function calcPoolOutGivenSingleIn(\\r\\n        uint tokenBalanceIn,\\r\\n        uint tokenWeightIn,\\r\\n        uint poolSupply,\\r\\n        uint totalWeight,\\r\\n        uint tokenAmountIn,\\r\\n        uint swapFee\\r\\n    )\\r\\n        public pure\\r\\n        returns (uint poolAmountOut)\\r\\n    {\\r\\n        // Charge the trading fee for the proportion of tokenAi\\r\\n        ///  which is implicitly traded to the other pool tokens.\\r\\n        // That proportion is (1- weightTokenIn)\\r\\n        // tokenAiAfterFee = tAi * (1 - (1-weightTi) * poolFee);\\r\\n        uint normalizedWeight = bdiv(tokenWeightIn, totalWeight);\\r\\n        uint zaz = bmul(bsub(BONE, normalizedWeight), swapFee); \\r\\n        uint tokenAmountInAfterFee = bmul(tokenAmountIn, bsub(BONE, zaz));\\r\\n\\r\\n        uint newTokenBalanceIn = badd(tokenBalanceIn, tokenAmountInAfterFee);\\r\\n        uint tokenInRatio = bdiv(newTokenBalanceIn, tokenBalanceIn);\\r\\n\\r\\n        // uint newPoolSupply = (ratioTi ^ weightTi) * poolSupply;\\r\\n        uint poolRatio = bpow(tokenInRatio, normalizedWeight);\\r\\n        uint newPoolSupply = bmul(poolRatio, poolSupply);\\r\\n        poolAmountOut = bsub(newPoolSupply, poolSupply);\\r\\n        return poolAmountOut;\\r\\n    }\\r\\n\\r\\n    /**********************************************************************************************\\r\\n    // calcSingleInGivenPoolOut                                                                  //\\r\\n    // tAi = tokenAmountIn              //(pS + pAo)\\\\     /    1    \\\\\\\\                           //\\r\\n    // pS = poolSupply                 || ---------  | ^ | --------- || * bI - bI                //\\r\\n    // pAo = poolAmountOut              \\\\\\\\    pS    /     \\\\(wI / tW)//                           //\\r\\n    // bI = balanceIn          tAi =  --------------------------------------------               //\\r\\n    // wI = weightIn                              /      wI  \\\\                                   //\\r\\n    // tW = totalWeight                          |  1 - ----  |  * sF                            //\\r\\n    // sF = swapFee                               \\\\      tW  /                                   //\\r\\n    **********************************************************************************************/\\r\\n    function calcSingleInGivenPoolOut(\\r\\n        uint tokenBalanceIn,\\r\\n        uint tokenWeightIn,\\r\\n        uint poolSupply,\\r\\n        uint totalWeight,\\r\\n        uint poolAmountOut,\\r\\n        uint swapFee\\r\\n    )\\r\\n        public pure\\r\\n        returns (uint tokenAmountIn)\\r\\n    {\\r\\n        uint normalizedWeight = bdiv(tokenWeightIn, totalWeight);\\r\\n        uint newPoolSupply = badd(poolSupply, poolAmountOut);\\r\\n        uint poolRatio = bdiv(newPoolSupply, poolSupply);\\r\\n      \\r\\n        //uint newBalTi = poolRatio^(1/weightTi) * balTi;\\r\\n        uint boo = bdiv(BONE, normalizedWeight); \\r\\n        uint tokenInRatio = bpow(poolRatio, boo);\\r\\n        uint newTokenBalanceIn = bmul(tokenInRatio, tokenBalanceIn);\\r\\n        uint tokenAmountInAfterFee = bsub(newTokenBalanceIn, tokenBalanceIn);\\r\\n        // Do reverse order of fees charged in joinswap_ExternAmountIn, this way \\r\\n        //     ``` pAo == joinswap_ExternAmountIn(Ti, joinswap_PoolAmountOut(pAo, Ti)) ```\\r\\n        //uint tAi = tAiAfterFee / (1 - (1-weightTi) * swapFee) ;\\r\\n        uint zar = bmul(bsub(BONE, normalizedWeight), swapFee);\\r\\n        tokenAmountIn = bdiv(tokenAmountInAfterFee, bsub(BONE, zar));\\r\\n        return tokenAmountIn;\\r\\n    }\\r\\n\\r\\n    /**********************************************************************************************\\r\\n    // calcSingleOutGivenPoolIn                                                                  //\\r\\n    // tAo = tokenAmountOut            /      /                                             \\\\\\\\   //\\r\\n    // bO = tokenBalanceOut           /      // pS - (pAi * (1 - eF)) \\\\     /    1    \\\\      \\\\\\\\  //\\r\\n    // pAi = poolAmountIn            | bO - || ----------------------- | ^ | --------- | * b0 || //\\r\\n    // ps = poolSupply                \\\\      \\\\\\\\          pS           /     \\\\(wO / tW)/      //  //\\r\\n    // wI = tokenWeightIn      tAo =   \\\\      \\\\                                             //   //\\r\\n    // tW = totalWeight                    /     /      wO \\\\       \\\\                             //\\r\\n    // sF = swapFee                    *  | 1 - |  1 - ---- | * sF  |                            //\\r\\n    // eF = exitFee                        \\\\     \\\\      tW /       /                             //\\r\\n    **********************************************************************************************/\\r\\n    function calcSingleOutGivenPoolIn(\\r\\n        uint tokenBalanceOut,\\r\\n        uint tokenWeightOut,\\r\\n        uint poolSupply,\\r\\n        uint totalWeight,\\r\\n        uint poolAmountIn,\\r\\n        uint swapFee\\r\\n    )\\r\\n        public pure\\r\\n        returns (uint tokenAmountOut)\\r\\n    {\\r\\n        uint normalizedWeight = bdiv(tokenWeightOut, totalWeight);\\r\\n        // charge exit fee on the pool token side\\r\\n        // pAiAfterExitFee = pAi*(1-exitFee)\\r\\n        uint poolAmountInAfterExitFee = bmul(poolAmountIn, bsub(BONE, EXIT_FEE));\\r\\n        uint newPoolSupply = bsub(poolSupply, poolAmountInAfterExitFee);\\r\\n        uint poolRatio = bdiv(newPoolSupply, poolSupply);\\r\\n     \\r\\n        // newBalTo = poolRatio^(1/weightTo) * balTo;\\r\\n        uint tokenOutRatio = bpow(poolRatio, bdiv(BONE, normalizedWeight));\\r\\n        uint newTokenBalanceOut = bmul(tokenOutRatio, tokenBalanceOut);\\r\\n\\r\\n        uint tokenAmountOutBeforeSwapFee = bsub(tokenBalanceOut, newTokenBalanceOut);\\r\\n\\r\\n        // charge swap fee on the output token side \\r\\n        //uint tAo = tAoBeforeSwapFee * (1 - (1-weightTo) * swapFee)\\r\\n        uint zaz = bmul(bsub(BONE, normalizedWeight), swapFee); \\r\\n        tokenAmountOut = bmul(tokenAmountOutBeforeSwapFee, bsub(BONE, zaz));\\r\\n        return tokenAmountOut;\\r\\n    }\\r\\n\\r\\n    /**********************************************************************************************\\r\\n    // calcPoolInGivenSingleOut                                                                  //\\r\\n    // pAi = poolAmountIn               // /               tAo             \\\\\\\\     / wO \\\\     \\\\   //\\r\\n    // bO = tokenBalanceOut            // | bO - -------------------------- |\\\\   | ---- |     \\\\  //\\r\\n    // tAo = tokenAmountOut      pS - ||   \\\\     1 - ((1 - (tO / tW)) * sF)/  | ^ \\\\ tW /  * pS | //\\r\\n    // ps = poolSupply                 \\\\\\\\ -----------------------------------/                /  //\\r\\n    // wO = tokenWeightOut  pAi =       \\\\\\\\               bO                 /                /   //\\r\\n    // tW = totalWeight           -------------------------------------------------------------  //\\r\\n    // sF = swapFee                                        ( 1 - eF )                            //\\r\\n    // eF = exitFee                                                                              //\\r\\n    **********************************************************************************************/\\r\\n    function calcPoolInGivenSingleOut(\\r\\n        uint tokenBalanceOut,\\r\\n        uint tokenWeightOut,\\r\\n        uint poolSupply,\\r\\n        uint totalWeight,\\r\\n        uint tokenAmountOut,\\r\\n        uint swapFee\\r\\n    )\\r\\n        public pure\\r\\n        returns (uint poolAmountIn)\\r\\n    {\\r\\n\\r\\n        // charge swap fee on the output token side \\r\\n        uint normalizedWeight = bdiv(tokenWeightOut, totalWeight);\\r\\n        //uint tAoBeforeSwapFee = tAo / (1 - (1-weightTo) * swapFee) ;\\r\\n        uint zoo = bsub(BONE, normalizedWeight);\\r\\n        uint zar = bmul(zoo, swapFee); \\r\\n        uint tokenAmountOutBeforeSwapFee = bdiv(tokenAmountOut, bsub(BONE, zar));\\r\\n\\r\\n        uint newTokenBalanceOut = bsub(tokenBalanceOut, tokenAmountOutBeforeSwapFee);\\r\\n        uint tokenOutRatio = bdiv(newTokenBalanceOut, tokenBalanceOut);\\r\\n\\r\\n        //uint newPoolSupply = (ratioTo ^ weightTo) * poolSupply;\\r\\n        uint poolRatio = bpow(tokenOutRatio, normalizedWeight);\\r\\n        uint newPoolSupply = bmul(poolRatio, poolSupply);\\r\\n        uint poolAmountInAfterExitFee = bsub(poolSupply, newPoolSupply);\\r\\n\\r\\n        // charge exit fee on the pool token side\\r\\n        // pAi = pAiAfterExitFee/(1-exitFee)\\r\\n        poolAmountIn = bdiv(poolAmountInAfterExitFee, bsub(BONE, EXIT_FEE));\\r\\n        return poolAmountIn;\\r\\n    }\\r\\n\\r\\n\\r\\n}\\r\\n\",\"keccak256\":\"0x910359d7e653af19e0479399fd651af8014a530be1abc0b4b589ba08cfa63fb6\"},\"contracts/balancer/BNum.sol\":{\"content\":\"// This program is free software: you can redistribute it and/or modify\\r\\n// it under the terms of the GNU General Public License as published by\\r\\n// the Free Software Foundation, either version 3 of the License, or\\r\\n// (at your option) any later version.\\r\\n\\r\\n// This program is distributed in the hope that it will be useful,\\r\\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\\r\\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\r\\n// GNU General Public License for more details.\\r\\n\\r\\n// You should have received a copy of the GNU General Public License\\r\\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\\r\\n\\r\\npragma solidity 0.8.25;\\r\\n\\r\\nimport \\\"./BConst.sol\\\";\\r\\n\\r\\ncontract BNum is BConst {\\r\\n\\r\\n    function btoi(uint a)\\r\\n        internal pure \\r\\n        returns (uint)\\r\\n    {\\r\\n        return a / BONE;\\r\\n    }\\r\\n\\r\\n    function bfloor(uint a)\\r\\n        internal pure\\r\\n        returns (uint)\\r\\n    {\\r\\n        return btoi(a) * BONE;\\r\\n    }\\r\\n\\r\\n    function badd(uint a, uint b)\\r\\n        internal pure\\r\\n        returns (uint)\\r\\n    {\\r\\n        uint c = a + b;\\r\\n        require(c >= a, \\\"ERR_ADD_OVERFLOW\\\");\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    function bsub(uint a, uint b)\\r\\n        internal pure\\r\\n        returns (uint)\\r\\n    {\\r\\n        (uint c, bool flag) = bsubSign(a, b);\\r\\n        require(!flag, \\\"ERR_SUB_UNDERFLOW\\\");\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    function bsubSign(uint a, uint b)\\r\\n        internal pure\\r\\n        returns (uint, bool)\\r\\n    {\\r\\n        if (a >= b) {\\r\\n            return (a - b, false);\\r\\n        } else {\\r\\n            return (b - a, true);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function bmul(uint a, uint b)\\r\\n        internal pure\\r\\n        returns (uint)\\r\\n    {\\r\\n        uint c0 = a * b;\\r\\n        require(a == 0 || c0 / a == b, \\\"ERR_MUL_OVERFLOW\\\");\\r\\n        uint c1 = c0 + (BONE / 2);\\r\\n        require(c1 >= c0, \\\"ERR_MUL_OVERFLOW\\\");\\r\\n        uint c2 = c1 / BONE;\\r\\n        return c2;\\r\\n    }\\r\\n\\r\\n    function bdiv(uint a, uint b)\\r\\n        internal pure\\r\\n        returns (uint)\\r\\n    {\\r\\n        require(b != 0, \\\"ERR_DIV_ZERO\\\");\\r\\n        uint c0 = a * BONE;\\r\\n        require(a == 0 || c0 / a == BONE, \\\"ERR_DIV_INTERNAL\\\"); // bmul overflow\\r\\n        uint c1 = c0 + (b / 2);\\r\\n        require(c1 >= c0, \\\"ERR_DIV_INTERNAL\\\"); //  badd require\\r\\n        uint c2 = c1 / b;\\r\\n        return c2;\\r\\n    }\\r\\n\\r\\n    // DSMath.wpow\\r\\n    function bpowi(uint a, uint n)\\r\\n        internal pure\\r\\n        returns (uint)\\r\\n    {\\r\\n        uint z = n % 2 != 0 ? a : BONE;\\r\\n\\r\\n        for (n /= 2; n != 0; n /= 2) {\\r\\n            a = bmul(a, a);\\r\\n\\r\\n            if (n % 2 != 0) {\\r\\n                z = bmul(z, a);\\r\\n            }\\r\\n        }\\r\\n        return z;\\r\\n    }\\r\\n\\r\\n    // Compute b^(e.w) by splitting it into (b^e)*(b^0.w).\\r\\n    // Use `bpowi` for `b^e` and `bpowK` for k iterations\\r\\n    // of approximation of b^0.w\\r\\n    function bpow(uint base, uint exp)\\r\\n        internal pure\\r\\n        returns (uint)\\r\\n    {\\r\\n        require(base >= MIN_BPOW_BASE, \\\"ERR_BPOW_BASE_TOO_LOW\\\");\\r\\n        require(base <= MAX_BPOW_BASE, \\\"ERR_BPOW_BASE_TOO_HIGH\\\");\\r\\n\\r\\n        uint whole  = bfloor(exp);   \\r\\n        uint remain = bsub(exp, whole);\\r\\n\\r\\n        uint wholePow = bpowi(base, btoi(whole));\\r\\n\\r\\n        if (remain == 0) {\\r\\n            return wholePow;\\r\\n        }\\r\\n\\r\\n        uint partialResult = bpowApprox(base, remain, BPOW_PRECISION);\\r\\n        return bmul(wholePow, partialResult);\\r\\n    }\\r\\n\\r\\n    function bpowApprox(uint base, uint exp, uint precision)\\r\\n        internal pure\\r\\n        returns (uint)\\r\\n    {\\r\\n        // term 0:\\r\\n        uint a     = exp;\\r\\n        (uint x, bool xneg)  = bsubSign(base, BONE);\\r\\n        uint term = BONE;\\r\\n        uint sum   = term;\\r\\n        bool negative = false;\\r\\n\\r\\n\\r\\n        // term(k) = numer / denom \\r\\n        //         = (product(a - i - 1, i=1-->k) * x^k) / (k!)\\r\\n        // each iteration, multiply previous term by (a-(k-1)) * x / k\\r\\n        // continue until term is less than precision\\r\\n        for (uint i = 1; term >= precision; i++) {\\r\\n            uint bigK = i * BONE;\\r\\n            (uint c, bool cneg) = bsubSign(a, bsub(bigK, BONE));\\r\\n            term = bmul(term, bmul(c, x));\\r\\n            term = bdiv(term, bigK);\\r\\n            if (term == 0) break;\\r\\n\\r\\n            if (xneg) negative = !negative;\\r\\n            if (cneg) negative = !negative;\\r\\n            if (negative) {\\r\\n                sum = bsub(sum, term);\\r\\n            } else {\\r\\n                sum = badd(sum, term);\\r\\n            }\\r\\n        }\\r\\n\\r\\n        return sum;\\r\\n    }\\r\\n\\r\\n}\\r\\n\",\"keccak256\":\"0x202057e3b3eb9ac515caa18b50148fc342bd8065e37c4ff08dd9ade76daee5ce\"},\"contracts/interfaces/I1inchSpotAgg.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\nimport '@openzeppelin/contracts/token/ERC20/IERC20.sol';\\r\\n\\r\\ninterface I1inchSpotAgg {\\r\\n  function getRate(IERC20 srcToken, IERC20 dstToken, bool useWrappers) external view returns (uint256 weightedRate);\\r\\n\\r\\n  function getRateToEth(IERC20 srcToken, bool useWrappers) external view returns (uint256 weightedRate);\\r\\n}\\r\\n\",\"keccak256\":\"0x29417a441b068263f01adb36906270f1b76431d3017d214f506824ee41ada1b3\",\"license\":\"GNU AGPLv3\"},\"contracts/interfaces/IBaluniV1Agent.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n\\r\\ninterface IBaluniV1Agent {\\r\\n  struct Call {\\r\\n    address to;\\r\\n    uint256 value;\\r\\n    bytes data;\\r\\n  }\\r\\n\\r\\n  function execute(Call[] memory calls, address[] memory tokensReturn) external;\\r\\n}\\r\\n\",\"keccak256\":\"0x1bbf5ddbc4f525451e727d6997e6a20a6238d69232b58b3813760a16e7f60bbe\",\"license\":\"GNU AGPLv3\"},\"contracts/interfaces/IBaluniV1PoolPeriphery.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n\\r\\ninterface IBaluniV1PoolPeriphery {\\r\\n    function getReserves(address pool) external view returns (uint256[] memory);\\r\\n\\r\\n    function getAssetReserve(address pool, address asset) external view returns (uint256);\\r\\n}\\r\\n\",\"keccak256\":\"0x07a47e40a96a436f7dab0a5bb58c27622fd7f9a7c98b5c3f3d223ce848cbdf28\",\"license\":\"GNU AGPLv3\"},\"contracts/interfaces/IBaluniV1Rebalancer.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n\\r\\nimport './IBaluniV1Router.sol';\\r\\n\\r\\ninterface IBaluniV1Rebalancer {\\r\\n  struct RebalanceVars {\\r\\n    uint256 length;\\r\\n    uint256 totalValue;\\r\\n    uint256 finalUsdBalance;\\r\\n    uint256 overweightVaultsLength;\\r\\n    uint256 underweightVaultsLength;\\r\\n    uint256 totalActiveWeight;\\r\\n    uint256 amountOut;\\r\\n    uint256[] overweightVaults;\\r\\n    uint256[] overweightAmounts;\\r\\n    uint256[] underweightVaults;\\r\\n    uint256[] underweightAmounts;\\r\\n    uint256[] balances;\\r\\n  }\\r\\n\\r\\n  // Variables\\r\\n  function baluniRouter() external view returns (address);\\r\\n\\r\\n  function USDC() external view returns (address);\\r\\n\\r\\n  function WNATIVE() external view returns (address);\\r\\n\\r\\n  function uniswapRouter() external view returns (address);\\r\\n\\r\\n  function uniswapFactory() external view returns (address);\\r\\n\\r\\n  function _1InchSpotAgg() external view returns (address);\\r\\n\\r\\n  function treasury() external view returns (address);\\r\\n\\r\\n  // Functions\\r\\n  function rebalance(\\r\\n    uint256[] memory balances,\\r\\n    address[] calldata assets,\\r\\n    uint256[] calldata weights,\\r\\n    uint256 limit,\\r\\n    address sender,\\r\\n    address receiver,\\r\\n    address baseAsset\\r\\n  ) external;\\r\\n\\r\\n  function checkRebalance(\\r\\n    uint256[] memory balances,\\r\\n    address[] calldata assets,\\r\\n    uint256[] calldata weights,\\r\\n    uint256 limit,\\r\\n    address sender,\\r\\n    address baseAsset\\r\\n  ) external view returns (RebalanceVars memory);\\r\\n\\r\\n  function convert(address fromToken, address toToken, uint256 amount) external view returns (uint256);\\r\\n}\\r\\n\",\"keccak256\":\"0xe7e9c4fbe80061f09e49a3c9861c415d023383069ee1c59b39f85290791e8c3f\",\"license\":\"GNU AGPLv3\"},\"contracts/interfaces/IBaluniV1Router.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n\\r\\nimport '@openzeppelin/contracts/token/ERC20/IERC20.sol';\\r\\nimport '@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol';\\r\\nimport './I1inchSpotAgg.sol';\\r\\nimport './IBaluniV1Agent.sol';\\r\\n\\r\\ninterface IBaluniV1Router {\\r\\n  struct Call {\\r\\n    address to;\\r\\n    uint256 value;\\r\\n    bytes data;\\r\\n  }\\r\\n\\r\\n  // Variables\\r\\n  function _MAX_BPS_FEE() external view returns (uint256);\\r\\n\\r\\n  function _BPS_FEE() external view returns (uint256);\\r\\n\\r\\n  function _BPS_BASE() external view returns (uint256);\\r\\n\\r\\n  function getTokens() external view returns (address[] memory);\\r\\n\\r\\n  function USDC() external view returns (IERC20);\\r\\n\\r\\n  function WNATIVE() external view returns (address);\\r\\n\\r\\n  function oracle() external view returns (address);\\r\\n\\r\\n  function uniswapRouter() external view returns (address);\\r\\n\\r\\n  function uniswapFactory() external view returns (address);\\r\\n\\r\\n  function agentFactory() external view returns (address);\\r\\n\\r\\n  function marketOracle() external view returns (address);\\r\\n\\r\\n  function rebalancer() external view returns (address);\\r\\n\\r\\n  function treasury() external view returns (address);\\r\\n\\r\\n  // Functions\\r\\n  function initialize(\\r\\n    address _usdc,\\r\\n    address _wnative,\\r\\n    address _1inchSpotAgg,\\r\\n    address _uniRouter,\\r\\n    address _uniFactory,\\r\\n    address _rebalancer\\r\\n  ) external;\\r\\n\\r\\n  function reinitialize(\\r\\n    address _usdc,\\r\\n    address _wnative,\\r\\n    address _1inchSpotAgg,\\r\\n    address _uniRouter,\\r\\n    address _uniFactory,\\r\\n    address _rebalancer,\\r\\n    uint64 version\\r\\n  ) external;\\r\\n\\r\\n  function initializeMarketOracle(address _marketOracle) external;\\r\\n\\r\\n  function changeMarketOracle(address _marketOracle) external;\\r\\n\\r\\n  function changeBpsFee(uint256 _newFee) external;\\r\\n\\r\\n  function changeTreasury(address _newTreasury) external;\\r\\n\\r\\n  function changeRebalancer(address _newRebalancer) external;\\r\\n\\r\\n  function changeAgentFactory(address _agentFactory) external;\\r\\n\\r\\n  function execute(IBaluniV1Agent.Call[] memory calls, address[] memory tokensReturn) external;\\r\\n\\r\\n  function liquidate(address token) external;\\r\\n\\r\\n  function liquidateAll() external;\\r\\n\\r\\n  function burnERC20(uint256 burnAmount) external;\\r\\n\\r\\n  function burnUSDC(uint256 burnAmount) external;\\r\\n\\r\\n  function getAgentAddress(address _user) external view returns (address);\\r\\n\\r\\n  function mintWithUSDC(uint256 balAmountToMint) external;\\r\\n\\r\\n  function callRebalance(\\r\\n    address[] calldata assets,\\r\\n    uint256[] calldata weights,\\r\\n    address sender,\\r\\n    address receiver,\\r\\n    uint256 limit,\\r\\n    address baseAsset\\r\\n  ) external;\\r\\n\\r\\n  function requiredUSDCtoMint(uint256 balAmountToMint) external view returns (uint256);\\r\\n\\r\\n  function calculateTokenShare(\\r\\n    uint256 totalBaluni,\\r\\n    uint256 totalERC20Balance,\\r\\n    uint256 baluniAmount,\\r\\n    uint256 tokenDecimals\\r\\n  ) external pure returns (uint256);\\r\\n\\r\\n  function tokenValuation(uint256 amount, address token) external view returns (uint256);\\r\\n\\r\\n  function totalValuation() external view returns (uint256);\\r\\n\\r\\n  function getUSDCShareValue(uint256 amount) external view returns (uint256);\\r\\n\\r\\n  function fetchMarketPrices() external view returns (uint256, uint256);\\r\\n\\r\\n  function getVersion() external view returns (uint64);\\r\\n\\r\\n  function unitPrice() external view returns (uint256);\\r\\n  \\r\\n}\\r\\n\",\"keccak256\":\"0x0795abf370daca8b74052ab6f425ab982bb4e0aecc4a72de19b3ff505d9e18a5\",\"license\":\"GNU AGPLv3\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1159,"contract":"contracts/BaluniV1Pool.sol:BaluniV1Pool","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":1165,"contract":"contracts/BaluniV1Pool.sol:BaluniV1Pool","label":"_allowances","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":1167,"contract":"contracts/BaluniV1Pool.sol:BaluniV1Pool","label":"_totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":1169,"contract":"contracts/BaluniV1Pool.sol:BaluniV1Pool","label":"_name","offset":0,"slot":"3","type":"t_string_storage"},{"astId":1171,"contract":"contracts/BaluniV1Pool.sol:BaluniV1Pool","label":"_symbol","offset":0,"slot":"4","type":"t_string_storage"},{"astId":2049,"contract":"contracts/BaluniV1Pool.sol:BaluniV1Pool","label":"_status","offset":0,"slot":"5","type":"t_uint256"},{"astId":2235,"contract":"contracts/BaluniV1Pool.sol:BaluniV1Pool","label":"assetInfos","offset":0,"slot":"6","type":"t_array(t_struct(AssetInfo)2255_storage)dyn_storage"},{"astId":2237,"contract":"contracts/BaluniV1Pool.sol:BaluniV1Pool","label":"trigger","offset":0,"slot":"7","type":"t_uint256"},{"astId":2239,"contract":"contracts/BaluniV1Pool.sol:BaluniV1Pool","label":"ONE","offset":0,"slot":"8","type":"t_uint256"},{"astId":2241,"contract":"contracts/BaluniV1Pool.sol:BaluniV1Pool","label":"periphery","offset":0,"slot":"9","type":"t_address"},{"astId":2243,"contract":"contracts/BaluniV1Pool.sol:BaluniV1Pool","label":"factory","offset":0,"slot":"10","type":"t_address"},{"astId":2248,"contract":"contracts/BaluniV1Pool.sol:BaluniV1Pool","label":"baseAsset","offset":0,"slot":"11","type":"t_address"},{"astId":2250,"contract":"contracts/BaluniV1Pool.sol:BaluniV1Pool","label":"rebalancer","offset":0,"slot":"12","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_struct(AssetInfo)2255_storage)dyn_storage":{"base":"t_struct(AssetInfo)2255_storage","encoding":"dynamic_array","label":"struct BaluniV1Pool.AssetInfo[]","numberOfBytes":"32"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_struct(AssetInfo)2255_storage":{"encoding":"inplace","label":"struct BaluniV1Pool.AssetInfo","members":[{"astId":2252,"contract":"contracts/BaluniV1Pool.sol:BaluniV1Pool","label":"asset","offset":0,"slot":"0","type":"t_address"},{"astId":2254,"contract":"contracts/BaluniV1Pool.sol:BaluniV1Pool","label":"weight","offset":0,"slot":"1","type":"t_uint256"}],"numberOfBytes":"64"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{"burn(address)":{"notice":"This function can only be called by the periphery contract.The pool tokens must have a balance greater than 0.The total supply of pool tokens must be greater than 0.The function calculates the amounts of each underlying asset to transfer based on the share of pool tokens being burned.A fee is deducted from the share of pool tokens being burned and transferred to the treasury address.The function checks if the pool has sufficient liquidity before performing any transfers.If any transfer fails, the function reverts the entire operation.After the transfers, the function updates the reserves of the pool.Emits a `Burn` event with the address and share of pool tokens burned."}},"version":1}}},"contracts/BaluniV1PoolFactory.sol":{"BaluniV1PoolFactory":{"abi":[{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"},{"inputs":[{"internalType":"address","name":"implementation","type":"address"}],"name":"ERC1967InvalidImplementation","type":"error"},{"inputs":[],"name":"ERC1967NonPayable","type":"error"},{"inputs":[],"name":"FailedInnerCall","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[],"name":"UUPSUnauthorizedCallContext","type":"error"},{"inputs":[{"internalType":"bytes32","name":"slot","type":"bytes32"}],"name":"UUPSUnsupportedProxiableUUID","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"pool","type":"address"},{"indexed":false,"internalType":"address[]","name":"assets","type":"address[]"},{"indexed":false,"internalType":"address","name":"rebalancer","type":"address"}],"name":"PoolCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"inputs":[],"name":"UPGRADE_INTERFACE_VERSION","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"allPools","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_newPeriphery","type":"address"}],"name":"changePeriphery","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"assets","type":"address[]"},{"internalType":"uint256[]","name":"weights","type":"uint256[]"},{"internalType":"uint256","name":"trigger","type":"uint256"}],"name":"createPool","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getAllPools","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"}],"name":"getPool","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"poolAddress","type":"address"}],"name":"getPoolAssets","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"asset1","type":"address"},{"internalType":"address","name":"asset2","type":"address"}],"name":"getPoolByAssets","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"getPoolsByAsset","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getPoolsCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_rebalancer","type":"address"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"periphery","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_pool","type":"address"}],"name":"poolExist","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"rebalancer","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_rebalancer","type":"address"},{"internalType":"uint64","name":"_version","type":"uint64"}],"name":"reinitialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"upgradeToAndCall","outputs":[],"stateMutability":"payable","type":"function"}],"devdoc":{"errors":{"AddressEmptyCode(address)":[{"details":"There's no code at `target` (it is not a contract)."}],"ERC1967InvalidImplementation(address)":[{"details":"The `implementation` of the proxy is invalid."}],"ERC1967NonPayable()":[{"details":"An upgrade function sees `msg.value > 0` that may be lost."}],"FailedInnerCall()":[{"details":"A call to an address target failed. The target may have reverted."}],"InvalidInitialization()":[{"details":"The contract is already initialized."}],"NotInitializing()":[{"details":"The contract is not initializing."}],"OwnableInvalidOwner(address)":[{"details":"The owner is not a valid owner account. (eg. `address(0)`)"}],"OwnableUnauthorizedAccount(address)":[{"details":"The caller account is not authorized to perform an operation."}],"UUPSUnauthorizedCallContext()":[{"details":"The call is from an unauthorized context."}],"UUPSUnsupportedProxiableUUID(bytes32)":[{"details":"The storage `slot` is unsupported as a UUID."}]},"events":{"Initialized(uint64)":{"details":"Triggered when the contract has been initialized or reinitialized."},"Upgraded(address)":{"details":"Emitted when the implementation is upgraded."}},"kind":"dev","methods":{"changePeriphery(address)":{"details":"Changes the address of the periphery contract.","params":{"_newPeriphery":"The new address of the periphery contract."}},"createPool(address[],uint256[],uint256)":{"details":"Creates a new BaluniV1Pool contract and registers it in the factory.","params":{"assets":"The array of asset addresses to be included in the pool.","trigger":"The trigger value for rebalancing the pool.","weights":"The array of weights corresponding to each asset in the pool."},"returns":{"_0":"The address of the newly created pool."}},"getAllPools()":{"details":"Retrieves all the pools created by the factory.","returns":{"_0":"An array of pool addresses."}},"getPoolAssets(address)":{"details":"Retrieves the assets of a specific pool.","params":{"poolAddress":"The address of the pool."},"returns":{"_0":"An array of asset addresses."}},"getPoolByAssets(address,address)":{"details":"Retrieves the pool address based on the given assets.","params":{"asset1":"The address of the first asset.","asset2":"The address of the second asset."},"returns":{"_0":"The address of the pool."}},"getPoolsByAsset(address)":{"details":"Returns an array of pool addresses that contain the specified token.","params":{"token":"The address of the token to search for."},"returns":{"_0":"An array of pool addresses."}},"getPoolsCount()":{"details":"Retrieves the number of pools created by the factory.","returns":{"_0":"The count of pools."}},"owner()":{"details":"Returns the address of the current owner."},"proxiableUUID()":{"details":"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"upgradeToAndCall(address,bytes)":{"custom:oz-upgrades-unsafe-allow-reachable":"delegatecall","details":"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60a08060405234602957306080526150ef908161002e82396080518181816107a401526108800152f35b5f80fdfe60806040818152600480361015610014575f80fd5b5f3560e01c92836301d22ccd14611022575082632d5e94a7146107435782633069873b14610b1a57826341d1de9714610add5782634276b97b14610a5c5782634f1ef2861461080857826352d1902d14610791578263531aa03e14610743578263715018a6146106dc57826377aace1a146106b457826389345efb146106865782638da5cb5b146106525782638f2248bc14610565578263ad3cb1cc146104e5578263b4340e6a14610370578263b4ac686014610353578263c4d66de81461020257508163d88ff1f41461016e57508063e9b31cff1461012b5763f2fde38b146100fc575f80fd5b3461012757602036600319011261012757610125610118611045565b6101206112e8565b611277565b005b5f80fd5b3461012757602036600319011261012757610144611045565b61014c6112e8565b600380546001600160a01b0319166001600160a01b0392909216919091179055005b34610127575f3660031901126101275780515f8054808352818052602080840194927f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56392915b8282106101e2576101de86866101cc828b0383611071565b51918291602083526020830190611106565b0390f35b83546001600160a01b0316875295860195600193840193909101906101b4565b346101275760203660031901126101275761021b611045565b907ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0091825460ff81861c16159267ffffffffffffffff82168015908161034b575b6001149081610341575b159081610338575b5061032a575067ffffffffffffffff19811660011784558261030b575b50610294611320565b61029c611320565b6102a4611320565b6102ad33611277565b60018060a01b03166bffffffffffffffffffffffff60a01b60025416176002556102d357005b805460ff60401b1916905551600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d290602090a1005b68ffffffffffffffffff1916680100000000000000011783558461028b565b855163f92ee8a960e01b8152fd5b9050158761026e565b303b159150610266565b85915061025c565b5034610127575f366003190112610127576020905f549051908152f35b3461012757602036600319011261012757610389611045565b905f549161039683611245565b925f926001600160a01b039284919084165b8383106103fd575b505050506103bd82611245565b925f5b8381106103dc578551602080825281906101de90820188611106565b80836103ea6001938561115e565b51166103f6828861115e565b52016103c0565b8461040d849794989695986110bf565b90549060031b1c16908851976319f92b0b60e21b89525f898581865afa9889156104db575f996104b7575b505f5b89518110156104a9578287610450838d61115e565b51161461045f5760010161043b565b5093919094959750610471828961115e565b525f19811461049657600101945b865186146104915760010191926103a8565b6103b0565b601182634e487b7160e01b5f525260245ffd5b50939691509394965061047f565b6104d49199503d805f833e6104cc8183611071565b810190611172565b978a610438565b8a513d5f823e3d90fd5b9034610127575f366003190112610127578051918183019083821067ffffffffffffffff83111761055257508152600582526020820191640352e302e360dc1b83528151928391602083525180918160208501528484015e5f828201840152601f01601f19168101030190f35b604190634e487b7160e01b5f525260245ffd5b903461012757806003193601126101275761057e611045565b916024359267ffffffffffffffff90818516809503610127577ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00928354928660ff85881c16918215610645575b505061063757600280546001600160a01b0319166001600160a01b03841617905568ffffffffffffffffff1983168617600160401b1760ff60401b1916845584518681527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d290602090a1005b845163f92ee8a960e01b8152fd5b85161015905086886105cb565b5034610127575f366003190112610127575f8051602061509a8339815191525490516001600160a01b039091168152602090f35b5034610127576020366003190112610127576020906106ab6106a6611045565b6111fc565b90519015158152f35b5034610127575f3660031901126101275760035490516001600160a01b039091168152602090f35b34610127575f366003190112610127576106f46112e8565b5f8051602061509a83398151915280546001600160a01b031981169091555f906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b503461012757806003193601126101275760209061075f611045565b61076761105b565b6001600160a01b039182165f90815260018552838120918316815290845282902054915191168152f35b9034610127575f366003190112610127577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031630036107fb57602090517f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc8152f35b5163703e46dd60e11b8152fd5b816003193601126101275761081b611045565b602492833567ffffffffffffffff81116101275736602382011215610127578084013561084781611142565b9361085484519586611071565b818552602091828601933689838301011161012757815f928a8693018737870101526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116308114908115610a2e575b50610a1e576108b96112e8565b81169484516352d1902d60e01b8152838189818a5afa5f91816109ef575b506108f25750505050505191634c9c8ce360e01b8352820152fd5b9087878794938b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc918281036109da5750853b156109c6575080546001600160a01b031916821790558451907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b5f80a28251156109ac5750505f6101259581925190845af4913d156109a2573d61099461098b82611142565b92519283611071565b81525f81943d92013e611361565b5060609250611361565b94509450505050346109ba57005b63b398979f60e01b8152fd5b8651634c9c8ce360e01b8152808501849052fd5b8751632a87526960e21b815280860191909152fd5b9091508481813d8311610a17575b610a078183611071565b810103126101275751908a6108d7565b503d6109fd565b845163703e46dd60e11b81528790fd5b9050817f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc54161415896108ac565b34610127576020366003190112610127575f6001600160a01b03610a7e611045565b168351928380926319f92b0b60e21b82525afa908115610ad357916101de925f92610ab7575b5051918291602083526020830190611106565b610acc9192503d805f833e6104cc8183611071565b9083610aa4565b82513d5f823e3d90fd5b346101275760203660031901126101275735905f5482101561012757610b046020926110bf565b905491519160018060a01b039160031b1c168152f35b346101275760603660031901126101275767ffffffffffffffff91813583811161012757366023820112156101275780830135936024610b59866110a7565b92610b6685519485611071565b868452602096828886019160051b83010191368311610127578301905b8282106110035750505080358281116101275736602382011215610127578086013590610baf826110a7565b90610bbc87519283611071565b8282528882019260051b81018401908336831161012757858b9201905b838210610ff45750506003546001600160a01b0396604495935090871691508115610fbe576001948589511115610f7e578851855103610f31575f865b610e43575b5050866002541693895194613cd58087019387851090851117610e3157908695949392916113c58739825260a08d8301528c610c5a60a084018c611106565b8381038d8501529151808352910193905f888f5b838310610e1a57505050604435606084015250506080015203905ff08015610e10578316955f54600160401b811015610dfe5790610cb582848a9897969594015f556110bf565b81549060031b908689831b921b1916179055815f905b610d1d575b505050507f93de7d9de9f3e05ba87a0170fcbb71af623439caf5e5079587b9d38c5da9b0d191610d0f9160025416855192839287845287840190611106565b90888301520390a251908152f35b9091929394958651821015610df65750828101808211610de45783929190835b610d4f575b5082018896959493610ccb565b879391929351811015610ddb57819087610d69858b61115e565b51165f52818c52895f2088610d7e838c61115e565b51165f528c52895f206bffffffffffffffffffffffff60a01b908c8282541617905588610dab838c61115e565b51165f52828d528a5f2089610dc0878d61115e565b51165f528d528b8b5f20918254161790550181939291610d3d565b92919092610d42565b84601184634e487b7160e01b5f52525ffd5b959493610cd0565b83604183634e487b7160e01b5f52525ffd5b85513d5f823e3d90fd5b84518852899850968701969093019201888f610c6e565b8860418e634e487b7160e01b5f52525ffd5b8951811015610f2c57868101808211610f1a57879291908b8f8c8f875b610e73575b505050505082019091610c16565b909192939495968451861015610f0d575084610ea39183610e94898861115e565b51165f528d85525f209461115e565b51165f5252898c5f205416610ec2578792919083018b8f8c8f87610e60565b8b5162461bcd60e51b8152808e018f90526021818b01527f506f6f6c20616c72656164792065786973747320666f7220746869732070616981850152603960f91b6064820152608490fd5b9695945090839291610e65565b8860118e634e487b7160e01b5f52525ffd5b610c1b565b895162461bcd60e51b8152808c018d90526022818901527f41737365747320616e642077656967687473206c656e677468206d69736d61746044820152610c6d60f31b6064820152608490fd5b60648b8d89818e519362461bcd60e51b85528401528201527f4174206c656173742074776f20617373657473206172652072657175697265646044820152fd5b885162461bcd60e51b8152808b018c90526011818801527014195c9a5c1a195c9e481b9bdd081cd95d607a1b6044820152606490fd5b81358152908201908201610bd9565b81356001600160a01b0381168103610127578152908801908801610b83565b34610127575f366003190112610127576002546001600160a01b03168152602090f35b600435906001600160a01b038216820361012757565b602435906001600160a01b038216820361012757565b90601f8019910116810190811067ffffffffffffffff82111761109357604052565b634e487b7160e01b5f52604160045260245ffd5b67ffffffffffffffff81116110935760051b60200190565b5f548110156110f2575f80527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56301905f90565b634e487b7160e01b5f52603260045260245ffd5b9081518082526020808093019301915f5b828110611125575050505090565b83516001600160a01b031685529381019392810192600101611117565b67ffffffffffffffff811161109357601f01601f191660200190565b80518210156110f25760209160051b010190565b60209081818403126101275780519067ffffffffffffffff821161012757019180601f840112156101275782516111a8816110a7565b936111b66040519586611071565b818552838086019260051b820101928311610127578301905b8282106111dd575050505090565b81516001600160a01b03811681036101275781529083019083016111cf565b5f905f54915b828110611210575050505f90565b611219816110bf565b905460039190911b1c6001600160a01b039081169083161461123d57600101611202565b505050600190565b9061124f826110a7565b61125c6040519182611071565b828152809261126d601f19916110a7565b0190602036910137565b6001600160a01b039081169081156112d0575f8051602061509a83398151915280546001600160a01b031981168417909155167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e05f80a3565b604051631e4fbdf760e01b81525f6004820152602490fd5b5f8051602061509a833981519152546001600160a01b0316330361130857565b60405163118cdaa760e01b8152336004820152602490fd5b60ff7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a005460401c161561134f57565b604051631afcd79f60e31b8152600490fd5b90611388575080511561137657805190602001fd5b604051630a12f52160e11b8152600490fd5b815115806113bb575b611399575090565b604051639996b31560e01b81526001600160a01b039091166004820152602490fd5b50803b1561139156fe6080806040523461043957613cd5803803809161001c82856108fe565b8339810160a0828203126104395761003382610921565b60208301519091906001600160401b0381116104395783019181601f840112156104395782519261006384610935565b9361007160405195866108fe565b80855260208086019160051b8301019184831161043957602001905b8282106108cb5750505060408401516001600160401b0381116104395784019180601f840112156104395782516100c381610935565b936100d160405195866108fe565b81855260208086019260051b82010192831161043957602001905b8282106108bb57505050610107608060608601519501610921565b604051610113816108e3565b6009815268042616c756e69204c560bc1b602082015260405190610136826108e3565b6009825268042414c554e492d4c560bc1b60208301528051906001600160401b0382116104965760035490600182811c921680156108b1575b60208310146107925781601f849311610843575b50602090601f83116001146107bb575f926107b0575b50508160011b915f199060031b1c1916176003555b8051906001600160401b0382116104965760045490600182811c921680156107a6575b60208310146107925781601f849311610724575b50602090601f83116001146106a0575f92610695575b50508160011b915f199060031b1c1916176004555b6001600555600980546001600160a01b03199081166001600160a01b0393841617909155600a8054821633179055600c8054909116918316919091179055670de0b6b3a76400006008558251825103610645575f5b8351811015610525576001600160a01b03610280828661094c565b5116156104e057610291818461094c565b51156104aa576001600160a01b036102a9828661094c565b51166102b5828561094c565b5160408051929083018084116001600160401b0390911117610496576040830160405282526020820152600654680100000000000000008110156104965760018101806006558110156104825760065f5281517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f60019290921b91820180546001600160a01b039283166001600160a01b03199091161790556020909201517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d4090910155610383828661094c565b511660018060a01b03600c5416604051636eb1769f60e11b8152306004820152816024820152602081604481865afa908115610445575f91610450575b50156103d1575b5050600101610265565b5f916044602092604051948593849263095ea7b360e01b84526004840152811960248401525af1801561044557610409575b806103c7565b6020813d60201161043d575b81610422602093836108fe565b81010312610439575180151503610439575f610403565b5f80fd5b3d9150610415565b6040513d5f823e3d90fd5b90506020813d60201161047a575b8161046b602093836108fe565b8101031261043957515f6103c0565b3d915061045e565b634e487b7160e01b5f52603260045260245ffd5b634e487b7160e01b5f52604160045260245ffd5b60405162461bcd60e51b815260206004820152600e60248201526d125b9d985b1a59081dd95a59da1d60921b6044820152606490fd5b60405162461bcd60e51b815260206004820152601560248201527f496e76616c6964206173736574206164647265737300000000000000000000006044820152606490fd5b5060078490556040516389a3027160e01b815290602090829060049082906001600160a01b03165afa908115610445575f9161060b575b50600b80546001600160a01b0319166001600160a01b03929092169190911790555f90815b81518310156105bd57610594838361094c565b5181018091116105a957600190920191610581565b634e487b7160e01b5f52601160045260245ffd5b612710036105d45760405161337490816109618239f35b60405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964207765696768747360881b6044820152606490fd5b90506020813d60201161063d575b81610626602093836108fe565b810103126104395761063790610921565b8261055c565b3d9150610619565b60405162461bcd60e51b815260206004820152602260248201527f41737365747320616e642077656967687473206c656e677468206d69736d61746044820152610c6d60f31b6064820152608490fd5b015190505f806101fb565b60045f9081527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b9350601f198516905b81811061070c57509084600195949392106106f4575b505050811b01600455610210565b01515f1960f88460031b161c191690555f80806106e6565b929360206001819287860151815501950193016106d0565b60045f529091507f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b601f840160051c81019160208510610788575b90601f859493920160051c01905b81811061077a57506101e5565b5f815584935060010161076d565b909150819061075f565b634e487b7160e01b5f52602260045260245ffd5b91607f16916101d1565b015190505f80610199565b60035f90815293507fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b91905b601f1984168510610828576001945083601f19811610610810575b505050811b016003556101ae565b01515f1960f88460031b161c191690555f8080610802565b818101518355602094850194600190930192909101906107e7565b60035f529091507fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b601f840160051c810191602085106108a7575b90601f859493920160051c01905b8181106108995750610183565b5f815584935060010161088c565b909150819061087e565b91607f169161016f565b81518152602091820191016100ec565b602080916108d884610921565b81520191019061008d565b604081019081106001600160401b0382111761049657604052565b601f909101601f19168101906001600160401b0382119082101761049657604052565b51906001600160a01b038216820361043957565b6001600160401b0381116104965760051b60200190565b80518210156104825760209160051b01019056fe6080604081815260049182361015610015575f80fd5b5f925f3560e01c91826301d22ccd1461258d5750816306fdde03146124995781630723c999146121d25781630902f1ac146121a2578163095ea7b3146120fa57816309a3bbe4146106ec5781630d0fa02914611f7957816318160ddd14611f5b578163189d00ca14611f3d5781631a68650214611f19578163218b538214610c3d57816322acb86714611ebc57816323b872dd14611ddb578163313ce56714611dc057816336bf6e3914611d8c5781634aa0665214611ce457816358d1969814611ba35781635c1bbaf714611b5c57816367a6c44014611b4157816367e4ac2c14611ade5781636e81221c1461168c57816370a082311461165657816376c7a3c71461163757816377aace1a1461160f5781637fec8d38146115f157816382f652ad146115515781638656b65314611506578163867378c5146114e957816389298012146113f557816389ab35321461138b57816389afcb4414610f6c5781638a77c8dc14610f475781639381cd2b14610f2457816395d89b4114610e26578163992e2a9214610e045781639a86139b14610de1578163a221ee4914610d98578163a9059cbb14610d68578163b0e0d13614610d4d578163b2b55d7014610d28578163b7b800a414610d0d578163ba019dab14610cf2578163ba9530a614610ca4578163bc063e1a14610c82578163bc694ea214610c60578163c2ee3a0814610c42578163c36596a614610c3d578163c45a015514610c15578163c6580d1214610bfb578163cdf456e114610bd3578163cf8fa76414610b5b578163d14ef46d14610b0f578163dd62ed3e14610ac6578163de836ebd146106f1578163e4a28a52146106ec578163e73faa2d146106d0578163ec093021146106ae578163f47b45e814610314575063f8d6aed4146102ab575f80fd5b34610310576020906103096102e86103046102ee6102fe6102f86102f36102e16102d4366126f8565b99949b9293909591612e60565b938261321b565b90612e60565b612f12565b613212565b916131c9565b926131aa565b612e60565b9051908152f35b5080fd5b8284346105a9576003195f368201126105a9576009546001600160a01b03949085169161034233841461280e565b61035261034d612aa9565b61284b565b6006549361035f856128a7565b93610369866128a7565b97610373876128a7565b9261037d886128a7565b94610387896128a7565b9a6103918a6128a7565b995f5b8181106105f55750506103a56128ed565b84600c54169160075486600b5416843b156105a9578e51633c2fddc560e21b815260e0818e01528d9990968795869591906103e49060e4880190612606565b9b60249c828882030160248901526103fb9161271e565b9086820301604487015261040e91612606565b92606485015280608485015260a484015260c483015203815a5f948591f180156105eb576105be575b50600654600954909690831692825b8881106104b3578c8c6104af8d8d7f279b343370f587af7fb675ae7c8578e9c8abcc373236ad02c501a4771fe7a7b88451602081528061048b3394602083019061271e565b0390a26104a18351948486958652850190612606565b908382036020850152612606565b0390f35b816104be828c6128d9565b51168c5180916370a0823160e01b82528786830152818960209485935afa9182156105b4578f908a94938f91938d948a92610573575b505094849160019661050684876128d9565b5261051183866128d9565b5161051c84846128d9565b5110156105565750610548906105418361053a8161054e97986128d9565b51926128d9565b5190612767565b926128d9565b525b01610446565b9361056d93506105418361053a81610548956128d9565b52610550565b9450955050505082813d83116105ad575b61058e81836127c0565b810103126105a957888e828a8f6001965191968193506104f4565b5f80fd5b503d610584565b8e513d88823e3d90fd5b905067ffffffffffffffff81116105d85788525f8a610437565b604186634e487b7160e01b5f525260245ffd5b8a513d5f823e3d90fd5b856105ff82612774565b50541661060c828d6128d9565b52600161061882612774565b50015461062582856128d9565b5285610631828d6128d9565b5116908d5180926370a0823160e01b8252898d83015281602460209384935afa9081156106a4575f91610675575b506001925061066e828b6128d9565b5201610394565b905082813d831161069d575b61068b81836127c0565b810103126105a957600191515f61065f565b503d610681565b8f513d5f823e3d90fd5b82346105a9575f3660031901126105a957602090516706f05b59d3b200008152f35b82346105a9575f3660031901126105a957602090610309612b77565b612660565b82346105a957806003193601126105a95761070a6125da565b9060249182359367ffffffffffffffff85116105a957366023860112156105a9578481013593610739856127f6565b94610746855196876127c0565b808652602096828888019260051b820101913683116105a95783899201905b838210610ab75750506009546001600160a01b0397925061078a91508716331461280e565b600254905f906107986128ed565b9060065491518203610a75578115610a4757905f915b818310610a0e5750505080156109c157838888600b541688519283809263313ce56760e01b82525afa9081156109b7579060ff915f9161098a575b501691806108ec5750670de0b6b3a7640000808202918204036108da579061081091612767565b945b85156108a8576108438691335f525f8952865f2054956108328482612c36565b1694855f525f8952865f2054612767565b036108785750507f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d4121396885848351858152a251908152f35b835162461bcd60e51b8152918201869052600b908201526a135a5b9d0811985a5b195960aa1b6044820152606490fd5b845162461bcd60e51b8152808401889052600d818401526c04d696e7420717479206973203609c1b6044820152606490fd5b82601185634e487b7160e01b5f52525ffd5b6108f4612ba2565b509182156109395761090f929161090a91612639565b612683565b670de0b6b3a7640000908181029181830414901517156108da579061093391612767565b94610812565b875162461bcd60e51b81528087018b90526026818701527f546f74616c206c6971756964697479206d75737420626520677265617465722060448201526507468616e20360d41b6064820152608490fd5b6109aa91508a3d8c116109b0575b6109a281836127c0565b81019061288e565b8a6107e9565b503d610998565b87513d5f823e3d90fd5b855162461bcd60e51b81528085018990526022818501527f546f74616c2076616c7565206d7573742062652067726561746572207468616e604482015261020360f41b6064820152608490fd5b909192610a3e600191610a388c610a2488612774565b505416610a3188876128d9565b5190613263565b9061275a565b930191906107ae565b875162461bcd60e51b81528087018b9052600981870152684e6f2061737365747360b81b6044820152606490fd5b875162461bcd60e51b81528087018b90526017818701527f496e76616c6964207265736572766573206c656e6774680000000000000000006044820152606490fd5b81358152908201908201610765565b82346105a957806003193601126105a957602090610ae26125da565b610aea6125f0565b9060018060a01b038091165f5260018452825f2091165f528252805f20549051908152f35b9050346105a95760203660031901126105a957356006548110156105a957610b3690612774565b50805460019091015491516001600160a01b0390911681526020810191909152604090f35b9050346105a95760203660031901126105a957803590610b79612ba2565b8092915051831015610b9a57602084610b9285856128d9565b519051908152f35b606490602085519162461bcd60e51b83528201526013602482015272092dcecc2d8d2c840c2e6e6cae840d2dcc8caf606b1b6044820152fd5b82346105a9575f3660031901126105a957600b5490516001600160a01b039091168152602090f35b82346105a9575f3660031901126105a957602090515f8152f35b82346105a9575f3660031901126105a957600a5490516001600160a01b039091168152602090f35b6126a1565b82346105a9575f3660031901126105a9576020906008549051908152f35b82346105a9575f3660031901126105a95760209051671bc16d674ec7ffff8152f35b82346105a9575f3660031901126105a9576020905167016345785d8a00008152f35b82346105a957602090610309610cdb610ce1610ced610ce76102ee610ce16102e8610cce366126f8565b989496929b919093612e60565b966131c9565b906131aa565b82612ec5565b6131c9565b82346105a9575f3660031901126105a9576020905160018152f35b82346105a9575f3660031901126105a9576020905160028152f35b82346105a95760203660031901126105a957602090610309610d486125da565b612aff565b82346105a9575f3660031901126105a9576020905160088152f35b82346105a957806003193601126105a957602090610d91610d876125da565b6024359033612cf8565b5160018152f35b82346105a95760a03660031901126105a957610309610dce610dc06020946024359035612e60565b6102e8606435604435612e60565b610ce1610ddc6084356131c9565b612df9565b82346105a9575f3660031901126105a957516542524f4e5a4560d01b8152602090f35b82346105a9575f3660031901126105a957602090516704a03ce68d2155568152f35b82346105a9575f3660031901126105a9578051905f9280549060018260011c9160018416938415610f1a575b6020948585108114610f0757848852908115610ee55750600114610e8c575b6104af8686610e82828b03836127c0565b51918291826125b0565b5f9081529295507f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5b828410610ed257505050826104af94610e82928201019486610e71565b8054868501880152928601928101610eb5565b60ff191687860152505050151560051b8301019250610e82826104af86610e71565b602283634e487b7160e01b5f525260245ffd5b92607f1692610e52565b82346105a9575f3660031901126105a9576020905168056bc75e2d631000008152f35b82346105a9575f3660031901126105a957602090610f63612aa9565b90519015158152f35b82346105a957602090816003193601126105a957610f886125da565b6009546001600160a01b0390811691610fa233841461280e565b305f525f8552835f20549586156113485760025496871561131657600654610fc9816128a7565b98601e8302838104601e0361130357612710610fe791048094612767565b965f5b8381106112485750505050305f525f875284865f20541061120557818785600c54168851928380926361d027b360e01b82525afa9081156109b7579088915f916111cb575b50875163a9059cbb60e01b81526001600160a01b03909116848201908152602081019390935291829081906040015b03815f305af19081156111c1575f9161118b575b501561115257301561113c57305f525f8652845f205490848210611111575083927fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5926104af96958893305f525f855203865f205584600254036002555f86518681527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef853092a385519485521692a251928284938452830190612606565b855163391434e360e21b81523091810191825260208201929092526040810185905281906060010390fd5b6024905f865191634b637e8f60e11b8352820152fd5b845162461bcd60e51b81529081018690526013602482015272119959481d1c985b9cd9995c8819985a5b1959606a1b6044820152606490fd5b90508681813d83116111ba575b6111a281836127c0565b810103126105a9575180151581036105a95788611072565b503d611198565b86513d5f823e3d90fd5b82819392503d83116111fe575b6111e281836127c0565b810103126105a9575184811681036105a957879061105e61102f565b503d6111d8565b855162461bcd60e51b8152808301889052601d60248201527f496e73756666696369656e742042414c554e49206c69717569646974790000006044820152606490fd5b61128a8b8961125684612774565b50548d5163a3e113fb60e01b8152308b8201908152929091166001600160a01b031660208301529283918291604090910190565b0381865afa9081156112f9578a8593928f925f916112bf575b5061054860019561090a6112b8948794612639565b5201610fea565b94505050508b82813d83116112f2575b6112d981836127c0565b810103126105a95790518391908d908b906105486112a3565b503d6112cf565b8b513d5f823e3d90fd5b601185634e487b7160e01b5f525260245ffd5b855162461bcd60e51b8152808301889052600c60248201526b4e6f206c697175696469747960a01b6044820152606490fd5b845162461bcd60e51b8152908101869052601c60248201527f5368617265206d7573742062652067726561746572207468616e2030000000006044820152606490fd5b82346105a9575f3660031901126105a9576113a46129c2565b8251928391818301918352835180925260608301916020809501945f5b8281106113dc5785806104af87878382036020850152612606565b86511515855295810195879550938101936001016113c1565b82346105a957611411611407366126f8565b9591909293612e60565b95670de0b6b3a7640000918281029080159080830485148217156114d65790846114439282156114c2575b50506130fe565b6706f05b59d3b200008101918282116114af57506114a9856114a360209a9761149e61148f610ce199610304610ced9a8a6103099f9b61149e9b6114889110156130fe565b048261321b565b6114988b612df9565b90612f12565b6131aa565b9061321b565b946131c9565b601190634e487b7160e01b5f525260245ffd5b6114ce91925084612683565b14848b61143c565b601184634e487b7160e01b5f525260245ffd5b82346105a9575f3660031901126105a95760209051620f42408152f35b82346105a957602090610309610ced61154c61154261149e610ce76102ee610ce1610304611533366126f8565b989496929c918d9b9194612e60565b9761149e896131c9565b61321b565b9050346105a957611582610ced6114a361154261149e61157c6102ee6102e8610304611533366126f8565b8261321b565b91670de0b6b3a7640000908184029380159080860484148217156113035790836115b49282156115dd575b5050612dba565b6706f05b59d3b200008401928385116114af57506115d6602094841015612dba565b5191048152f35b6115e991925087612683565b1483876115ad565b82346105a9575f3660031901126105a9576020906007549051908152f35b82346105a9575f3660031901126105a95760095490516001600160a01b039091168152602090f35b82346105a9575f3660031901126105a9576020905164e8d4a510008152f35b82346105a95760203660031901126105a9576020906001600160a01b0361167b6125da565b165f525f8252805f20549051908152f35b9050346105a95760803660031901126105a9576116a76125da565b916116b06125f0565b604435926001600160a01b03919060643583811691908290036105a957600260055414611ad057600260055583831693871692848414611a8d578615611a4a576116f981612aff565b9761170381612aff565b906103e8908161171282612cab565b049a670de0b6b3a76400009b8c8102908d8183041490151715611a37578c908461173b88612cab565b048281029281840414901517156119cb5761176c916102e86117606117679389612e60565b9185612e60565b61313d565b928c8161177885612cab565b048181029181830414901517156119cb578d908261179589612cab565b04828102928184041490151715611a2457906117b091612e60565b8c670de0b6b3a763ffe28082029182048103611a11576117db908f6117d59084612683565b146130fe565b6706f05b59d3b20000810190818111611a11578f926102ee611814611820958561180d610ced9661181a9810156130fe565b048b612ec5565b8a612e60565b836131aa565b94600186106119de57908061184c8f94938f6118408a9161184693612ec5565b9561321b565b95612cab565b048381029381850414901517156119cb57908d929161186a88612cab565b048381029381850414901517156119cb5761176785946102e86118a5956118986118af999661189e96612e60565b92612e60565b1015613225565b61189e838b612e60565b865163313ce56760e01b8152602099908a8186818b5afa9081156119c1579060ff915f916119a4575b5016900367ffffffffffffffff9081811161130357916118ff916119079594931690612683565b928391612aff565b1061196857601e820290828204601e14831517156114af57506119517fcd3829a3813dc3cdd188fd3d01dcf3268c16be2fdd2dd21d0665418816e460629261271088930490612767565b9681519081528789820152a4600160055551908152f35b855162461bcd60e51b81529081018890526016602482015275496e73756666696369656e74204c697175696469747960501b6044820152606490fd5b6119bb91508c8d3d106109b0576109a281836127c0565b8c6118d8565b89513d5f823e3d90fd5b601188634e487b7160e01b5f525260245ffd5b8b5162461bcd60e51b81526020818a0152600d60248201526c11549497d31253525517d3d555609a1b6044820152606490fd5b60118a634e487b7160e01b5f525260245ffd5b601189634e487b7160e01b5f525260245ffd5b601187634e487b7160e01b5f525260245ffd5b855162461bcd60e51b8152602081840181905260248201527f416d6f756e74206d7573742062652067726561746572207468616e207a65726f6044820152606490fd5b855162461bcd60e51b8152602081840152601a60248201527f43616e6e6f742073776170207468652073616d6520746f6b656e0000000000006044820152606490fd5b8451633ee5aeb560e01b8152fd5b82346105a9575f3660031901126105a957600654611afb816128a7565b905f5b818110611b1a578351602080825281906104af9082018661271e565b80611b26600192612774565b50828060a01b03905416611b3a82866128d9565b5201611afe565b82346105a9575f3660031901126105a95760209051601e8152f35b82346105a957602090610309611b9c6102e8610ced61149e61149e6114a961148f61154c610304611b8c366126f8565b9a949793918896929e919e612e60565b9c82612ec5565b9050346105a957816003193601126105a957611bbd6125da565b91611bc66125f0565b611bcf84612aff565b50611bd981612aff565b50815163313ce56760e01b81526020946001600160a01b0391868187818587165afa908115611cda579060ff915f91611cbd575b501691600c541691604d8111611caa57845163248391ff60e01b81526001600160a01b03928316968101968752939091166020860152600a0a60408501529092849184918290819060600103915afa918215611ca0575f92611c71575b5051908152f35b9091508281813d8311611c99575b611c8981836127c0565b810103126105a957519083611c6a565b503d611c7f565b50513d5f823e3d90fd5b601186634e487b7160e01b5f525260245ffd5b611cd49150883d8a116109b0576109a281836127c0565b88611c0d565b85513d5f823e3d90fd5b82346105a9576020611cf5366126c3565b600c54855163248391ff60e01b81526001600160a01b03948516978101978852928416602088015260408701919091529094859290839003606001918391165afa908115611d83575f91611d4e575b6020925051908152f35b90506020823d602011611d7b575b81611d69602093836127c0565b810103126105a9576020915190611d44565b3d9150611d5c565b513d5f823e3d90fd5b82346105a9575f3660031901126105a9576104af611da8612ba2565b83929192519384938452806020850152830190612606565b82346105a9575f3660031901126105a9576020905160128152f35b9050346105a957611deb366126c3565b6001600160a01b0383165f81815260016020818152888320338452905290879020549295939493908301611e28575b602087610d91888888612cf8565b858310611e90578115611e7a573315611e6457505f90815260016020908152868220338352815290869020918590039091558290610d91611e1a565b6024905f885191634a1406b160e11b8352820152fd5b6024905f88519163e602df0560e01b8352820152fd5b8651637dc7a0d960e11b8152339181019182526020820193909352604081018690528291506060010390fd5b82346105a9575f3660031901126105a957600654611ed9816128a7565b905f5b818110611ef8578351602080825281906104af90820186612606565b806001611f058193612774565b500154611f1282866128d9565b5201611edc565b82346105a9575f3660031901126105a957602090611f35612ba2565b509051908152f35b82346105a9575f3660031901126105a957602090516305f5e1008152f35b82346105a9575f3660031901126105a9576020906002549051908152f35b82346105a957806003193601126105a957611f926125da565b611f9a6125f0565b92611fa482612aff565b93611fae81612aff565b845163313ce56760e01b80825260209791946001600160a01b039390929091898785818b89165afa9687156119c157908a915f986120db575b50848a5180978193825289165afa9384156120d1575f946120b2575b50670de0b6b3a764000095868202918083048814901517156114d6579060ff61202d921690612767565b928582029180830487149015171561209f5761205c9160ff612050921690612767565b956103e8918291612cab565b04938585029480860487149015171561209f5761207890612cab565b048481029481860414901517156114af57506117679261189861030995936102e893612e60565b601183634e487b7160e01b5f525260245ffd5b6120ca919450893d8b116109b0576109a281836127c0565b9289612003565b88513d5f823e3d90fd5b6120f3919850823d84116109b0576109a281836127c0565b968b611fe7565b82346105a957806003193601126105a9576121136125da565b60243590331561218c576001600160a01b03169081156121765760209350335f5260018452825f20825f52845280835f205582519081527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925843392a35160018152f35b8251634a1406b160e11b81525f81860152602490fd5b825163e602df0560e01b81525f81860152602490fd5b82346105a9575f3660031901126105a9576104af906121bf6128ed565b9051918291602083526020830190612606565b9050346105a957602091826003193601126105a9576121ef6125da565b9160018060a01b03936122078560095416331461280e565b61221261034d612aa9565b61221a612ba2565b6006549491612228866128a7565b915f5b878110612444575050505f905f5b8681106124255750600b54835163313ce56760e01b81529089169285828881875afa918215611cda575f92612406575b5060ff670de0b6b3a764000092168203918211611a37576122939161228d91612639565b966128a7565b955f5b82518110156123ae576122a981846128d9565b516122b7575b600101612296565b6122c181846128d9565b51868b6122cd84612774565b5054600c54895163248391ff60e01b81526001600160a01b038a81168e830190815294909316909216602084015260408301949094529283918290036060019082908f165afa9081156111c1575f91612381575b50801561233e5790600191612336828b6128d9565b5290506122af565b855162461bcd60e51b8152808901889052601b60248201527f496e76616c696420746f6b656e20616d6f756e7420746f2061646400000000006044820152606490fd5b90508681813d83116123a7575b61239881836127c0565b810103126105a957518b612321565b503d61238e565b87866104af87866123bf878f612c36565b7fa95ad530009c6f929555e70a66aadbeae7231e45756c5b028ca77fbaa376e73e8251858152806123f4339488830190612606565b0390a251928284938452830190612606565b61241e919250863d88116109b0576109a281836127c0565b908a612269565b9161243d60019161243685856128d9565b519061275a565b9201612239565b8061271061246060016124578195612774565b50015486612639565b048061246c83866128d9565b511061247a575b500161222b565b6124889061054183866128d9565b61249282876128d9565b528b612473565b82346105a9575f3660031901126105a9578051905f9260035460018160011c91600181168015612583575b6020948585108214612570575083875290811561255057506001146124f6575b505050610e82826104af9403836127c0565b60035f9081529295507fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b82841061253d57505050826104af94610e8292820101946124e4565b8054868501880152928601928101612521565b60ff1916868501525050151560051b8301019250610e82826104af6124e4565b602290634e487b7160e01b5f525260245ffd5b92607f16926124c4565b346105a9575f3660031901126105a957600c546001600160a01b03168152602090f35b602060409281835280519182918282860152018484015e5f828201840152601f01601f1916010190565b600435906001600160a01b03821682036105a957565b602435906001600160a01b03821682036105a957565b9081518082526020808093019301915f5b828110612625575050505090565b835185529381019392810192600101612617565b8181029291811591840414171561264c57565b634e487b7160e01b5f52601160045260245ffd5b346105a9575f3660031901126105a95760206040516802b5e3af16b18800008152f35b811561268d570490565b634e487b7160e01b5f52601260045260245ffd5b346105a9575f3660031901126105a9576020604051670de0b6b3a76400008152f35b60609060031901126105a9576001600160a01b039060043582811681036105a9579160243590811681036105a9579060443590565b60c09060031901126105a957600435906024359060443590606435906084359060a43590565b9081518082526020808093019301915f5b82811061273d575050505090565b83516001600160a01b03168552938101939281019260010161272f565b9190820180921161264c57565b9190820391821161264c57565b6006548110156127ac5760065f5260011b7ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f01905f90565b634e487b7160e01b5f52603260045260245ffd5b90601f8019910116810190811067ffffffffffffffff8211176127e257604052565b634e487b7160e01b5f52604160045260245ffd5b67ffffffffffffffff81116127e25760051b60200190565b1561281557565b60405162461bcd60e51b815260206004820152600e60248201526d4f6e6c792050657269706865727960901b6044820152606490fd5b1561285257565b60405162461bcd60e51b8152602060048201526014602482015273149958985b185b98d9481b9bdd081b995959195960621b6044820152606490fd5b908160209103126105a9575160ff811681036105a95790565b906128b1826127f6565b6128be60405191826127c0565b82815280926128cf601f19916127f6565b0190602036910137565b80518210156127ac5760209160051b010190565b600954604051630fa6707960e21b8152306004820152905f90829060249082906001600160a01b03165afa9081156129b7575f91612929575090565b90503d805f833e61293a81836127c0565b81019060209081818403126105a95780519067ffffffffffffffff82116105a957019180601f840112156105a9578251612973816127f6565b9361298160405195866127c0565b818552838086019260051b8201019283116105a9578301905b8282106129a8575050505090565b8151815290830190830161299a565b6040513d5f823e3d90fd5b6129ca612ba2565b9190600654906129d9826127f6565b916129e760405193846127c0565b808352601f196129f6826127f6565b01366020850137612a06816128a7565b945f5b828110612a1857505050509190565b612a2281836128d9565b51906127109182810292818404149015171561264c57612a4485600193612683565b612a4d82612774565b50830154839181811115612a825790612a6591612767565b612a6f838b6128d9565b52612a7a82886128d9565b525b01612a09565b90612a8d9250612767565b612a97828a6128d9565b525f612aa382886128d9565b52612a7c565b612ab16129c2565b5f5b8151811015612af857612ac681846128d9565b51151580612ae3575b612adb57600101612ab3565b505050600190565b50612aee81836128d9565b5160075410612acf565b5050505f90565b60095460405163a3e113fb60e01b81523060048201526001600160a01b039283166024820152916020918391168180604481015b03915afa9081156129b7575f91612b48575090565b90506020813d602011612b6f575b81612b63602093836127c0565b810103126105a9575190565b3d9150612b56565b612b7f612ba2565b506002548015612b9c5761090a612b999260085490612639565b90565b50505f90565b600654905f612bb0836128a7565b600b5490935f916001600160a01b03908116905b828410612bd357505050509190565b90919293612c1260019183612be788612774565b505416612bf381612aff565b90868103612c1c5750612c06888b6128d9565b525b612436878a6128d9565b9401929190612bc4565b90612c2691613263565b612c30888b6128d9565b52612c08565b6001600160a01b0316908115612c93577fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef602082612c775f9460025461275a565b60025584845283825260408420818154019055604051908152a3565b60405163ec442f0560e01b81525f6004820152602490fd5b600654905f5b828110612cbf575050505f90565b612cc881612774565b50546001600160a01b03838116911614612ce457600101612cb1565b60019250612cf29150612774565b50015490565b916001600160a01b03808416928315612da25716928315612c9357825f525f60205260405f205490828210612d705750817fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92602092855f525f84520360405f2055845f5260405f20818154019055604051908152a3565b60405163391434e360e21b81526001600160a01b03919091166004820152602481019190915260448101829052606490fd5b604051634b637e8f60e11b81525f6004820152602490fd5b15612dc157565b60405162461bcd60e51b815260206004820152601060248201526f11549497d1125597d25395115493905360821b6044820152606490fd5b8015612e2c576ec097ce7bc90715b34b9f1000000000908060011c820180831161264c5761090a612b9993821015612dba565b60405162461bcd60e51b815260206004820152600c60248201526b4552525f4449565f5a45524f60a01b6044820152606490fd5b908015612e2c57670de0b6b3a764000091828102908015818304851481171561264c57612b9994612e98928215612eb1575050612dba565b61090a612ea88360011c8361275a565b91821015612dba565b612ebd91925084612683565b145f806115ad565b90612ed0908261275a565b908110612eda5790565b60405162461bcd60e51b815260206004820152601060248201526f4552525f4144445f4f564552464c4f5760801b6044820152606490fd5b91906001928381106130c157671bc16d674ec7ffff811161308357670de0b6b3a764000091828104908382029180830485149015171561264c57612f5782859261321b565b910491808684161561307d57815b93871c90815b613050575050811561304857612f83909391936132a7565b82949183915f9289955b6305f5e100821015612fac575b50505050505050612b999293506131aa565b909192939495978189029289840483148a15171561264c5783610304612fe992610ce1612fe2612fdc8b99613212565b8d613319565b98906131aa565b9283156130415784613039575b613031575b8286156130225761300b9161321b565b975b5f19811461264c578a01959493929190612f8d565b61302b91612ec5565b9761300d565b941594612ffb565b951595612ff6565b5097612f9a565b509093505050565b8061305a916131aa565b9087811661306c575b871c9081612f6b565b9381613077916131aa565b93613063565b84612f65565b60405162461bcd60e51b815260206004820152601660248201527508aa4a4be84a09eaebe8482a68abea89e9ebe90928e960531b6044820152606490fd5b60405162461bcd60e51b81526020600482015260156024820152744552525f42504f575f424153455f544f4f5f4c4f5760581b6044820152606490fd5b1561310557565b60405162461bcd60e51b815260206004820152601060248201526f4552525f4d554c5f4f564552464c4f5760801b6044820152606490fd5b670de0b6b3a764001e9081810291811590828404811482171561264c5761316b9282156131965750506130fe565b6706f05b59d3b20000810180821161264c57613192670de0b6b3a7640000928210156130fe565b0490565b6131a291925084612683565b145f8061143c565b61316b906131b88382612639565b9281159182156131965750506130fe565b6131d2906132e0565b6131d95790565b60405162461bcd60e51b81526020600482015260116024820152704552525f5355425f554e444552464c4f5760781b6044820152606490fd5b6131d2906132a7565b906131d291613319565b1561322c57565b60405162461bcd60e51b815260206004820152600f60248201526e08aa4a4be9a82a890be82a0a0a49eb608b1b6044820152606490fd5b600c54600b5460405163248391ff60e01b81526001600160a01b03938416600482015290831660248201526044810193909352602091839116818060648101612b33565b670de0b6b3a76400008082106132d05750670de0b6b3a763ffff19810190811161264c57905f90565b90810390811161264c5790600190565b670de0b6b3a7640000908082106132ff57810390811161264c57905f90565b670de0b6b3a763ffff1981019150811161264c5790600190565b81811061332f579061332a91612767565b905f90565b61333891612767565b9060019056fea2646970667358221220b71b02d2c9c67070abd5edd7aed54964fa1025337a855a655ba976286c7bc78b64736f6c634300081900339016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300a26469706673582212200e6deb655f5a71ce04c035882674114a2d282c61d02ac892face61502df7871264736f6c63430008190033","opcodes":"PUSH1 0xA0 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x29 JUMPI ADDRESS PUSH1 0x80 MSTORE PUSH2 0x50EF SWAP1 DUP2 PUSH2 0x2E DUP3 CODECOPY PUSH1 0x80 MLOAD DUP2 DUP2 DUP2 PUSH2 0x7A4 ADD MSTORE PUSH2 0x880 ADD MSTORE RETURN JUMPDEST PUSH0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 DUP1 CALLDATASIZE LT ISZERO PUSH2 0x14 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR SWAP3 DUP4 PUSH4 0x1D22CCD EQ PUSH2 0x1022 JUMPI POP DUP3 PUSH4 0x2D5E94A7 EQ PUSH2 0x743 JUMPI DUP3 PUSH4 0x3069873B EQ PUSH2 0xB1A JUMPI DUP3 PUSH4 0x41D1DE97 EQ PUSH2 0xADD JUMPI DUP3 PUSH4 0x4276B97B EQ PUSH2 0xA5C JUMPI DUP3 PUSH4 0x4F1EF286 EQ PUSH2 0x808 JUMPI DUP3 PUSH4 0x52D1902D EQ PUSH2 0x791 JUMPI DUP3 PUSH4 0x531AA03E EQ PUSH2 0x743 JUMPI DUP3 PUSH4 0x715018A6 EQ PUSH2 0x6DC JUMPI DUP3 PUSH4 0x77AACE1A EQ PUSH2 0x6B4 JUMPI DUP3 PUSH4 0x89345EFB EQ PUSH2 0x686 JUMPI DUP3 PUSH4 0x8DA5CB5B EQ PUSH2 0x652 JUMPI DUP3 PUSH4 0x8F2248BC EQ PUSH2 0x565 JUMPI DUP3 PUSH4 0xAD3CB1CC EQ PUSH2 0x4E5 JUMPI DUP3 PUSH4 0xB4340E6A EQ PUSH2 0x370 JUMPI DUP3 PUSH4 0xB4AC6860 EQ PUSH2 0x353 JUMPI DUP3 PUSH4 0xC4D66DE8 EQ PUSH2 0x202 JUMPI POP DUP2 PUSH4 0xD88FF1F4 EQ PUSH2 0x16E JUMPI POP DUP1 PUSH4 0xE9B31CFF EQ PUSH2 0x12B JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0xFC JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x127 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x127 JUMPI PUSH2 0x125 PUSH2 0x118 PUSH2 0x1045 JUMP JUMPDEST PUSH2 0x120 PUSH2 0x12E8 JUMP JUMPDEST PUSH2 0x1277 JUMP JUMPDEST STOP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x127 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x127 JUMPI PUSH2 0x144 PUSH2 0x1045 JUMP JUMPDEST PUSH2 0x14C PUSH2 0x12E8 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE STOP JUMPDEST CALLVALUE PUSH2 0x127 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x127 JUMPI DUP1 MLOAD PUSH0 DUP1 SLOAD DUP1 DUP4 MSTORE DUP2 DUP1 MSTORE PUSH1 0x20 DUP1 DUP5 ADD SWAP5 SWAP3 PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563 SWAP3 SWAP2 JUMPDEST DUP3 DUP3 LT PUSH2 0x1E2 JUMPI PUSH2 0x1DE DUP7 DUP7 PUSH2 0x1CC DUP3 DUP12 SUB DUP4 PUSH2 0x1071 JUMP JUMPDEST MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x1106 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST DUP4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 MSTORE SWAP6 DUP7 ADD SWAP6 PUSH1 0x1 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x1B4 JUMP JUMPDEST CALLVALUE PUSH2 0x127 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x127 JUMPI PUSH2 0x21B PUSH2 0x1045 JUMP JUMPDEST SWAP1 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP2 DUP3 SLOAD PUSH1 0xFF DUP2 DUP7 SHR AND ISZERO SWAP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND DUP1 ISZERO SWAP1 DUP2 PUSH2 0x34B JUMPI JUMPDEST PUSH1 0x1 EQ SWAP1 DUP2 PUSH2 0x341 JUMPI JUMPDEST ISZERO SWAP1 DUP2 PUSH2 0x338 JUMPI JUMPDEST POP PUSH2 0x32A JUMPI POP PUSH8 0xFFFFFFFFFFFFFFFF NOT DUP2 AND PUSH1 0x1 OR DUP5 SSTORE DUP3 PUSH2 0x30B JUMPI JUMPDEST POP PUSH2 0x294 PUSH2 0x1320 JUMP JUMPDEST PUSH2 0x29C PUSH2 0x1320 JUMP JUMPDEST PUSH2 0x2A4 PUSH2 0x1320 JUMP JUMPDEST PUSH2 0x2AD CALLER PUSH2 0x1277 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL PUSH1 0x2 SLOAD AND OR PUSH1 0x2 SSTORE PUSH2 0x2D3 JUMPI STOP JUMPDEST DUP1 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND SWAP1 SSTORE MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 SWAP1 LOG1 STOP JUMPDEST PUSH9 0xFFFFFFFFFFFFFFFFFF NOT AND PUSH9 0x10000000000000001 OR DUP4 SSTORE DUP5 PUSH2 0x28B JUMP JUMPDEST DUP6 MLOAD PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE REVERT JUMPDEST SWAP1 POP ISZERO DUP8 PUSH2 0x26E JUMP JUMPDEST ADDRESS EXTCODESIZE ISZERO SWAP2 POP PUSH2 0x266 JUMP JUMPDEST DUP6 SWAP2 POP PUSH2 0x25C JUMP JUMPDEST POP CALLVALUE PUSH2 0x127 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x127 JUMPI PUSH1 0x20 SWAP1 PUSH0 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x127 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x127 JUMPI PUSH2 0x389 PUSH2 0x1045 JUMP JUMPDEST SWAP1 PUSH0 SLOAD SWAP2 PUSH2 0x396 DUP4 PUSH2 0x1245 JUMP JUMPDEST SWAP3 PUSH0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP5 SWAP2 SWAP1 DUP5 AND JUMPDEST DUP4 DUP4 LT PUSH2 0x3FD JUMPI JUMPDEST POP POP POP POP PUSH2 0x3BD DUP3 PUSH2 0x1245 JUMP JUMPDEST SWAP3 PUSH0 JUMPDEST DUP4 DUP2 LT PUSH2 0x3DC JUMPI DUP6 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 SWAP1 PUSH2 0x1DE SWAP1 DUP3 ADD DUP9 PUSH2 0x1106 JUMP JUMPDEST DUP1 DUP4 PUSH2 0x3EA PUSH1 0x1 SWAP4 DUP6 PUSH2 0x115E JUMP JUMPDEST MLOAD AND PUSH2 0x3F6 DUP3 DUP9 PUSH2 0x115E JUMP JUMPDEST MSTORE ADD PUSH2 0x3C0 JUMP JUMPDEST DUP5 PUSH2 0x40D DUP5 SWAP8 SWAP5 SWAP9 SWAP7 SWAP6 SWAP9 PUSH2 0x10BF JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND SWAP1 DUP9 MLOAD SWAP8 PUSH4 0x19F92B0B PUSH1 0xE2 SHL DUP10 MSTORE PUSH0 DUP10 DUP6 DUP2 DUP7 GAS STATICCALL SWAP9 DUP10 ISZERO PUSH2 0x4DB JUMPI PUSH0 SWAP10 PUSH2 0x4B7 JUMPI JUMPDEST POP PUSH0 JUMPDEST DUP10 MLOAD DUP2 LT ISZERO PUSH2 0x4A9 JUMPI DUP3 DUP8 PUSH2 0x450 DUP4 DUP14 PUSH2 0x115E JUMP JUMPDEST MLOAD AND EQ PUSH2 0x45F JUMPI PUSH1 0x1 ADD PUSH2 0x43B JUMP JUMPDEST POP SWAP4 SWAP2 SWAP1 SWAP5 SWAP6 SWAP8 POP PUSH2 0x471 DUP3 DUP10 PUSH2 0x115E JUMP JUMPDEST MSTORE PUSH0 NOT DUP2 EQ PUSH2 0x496 JUMPI PUSH1 0x1 ADD SWAP5 JUMPDEST DUP7 MLOAD DUP7 EQ PUSH2 0x491 JUMPI PUSH1 0x1 ADD SWAP2 SWAP3 PUSH2 0x3A8 JUMP JUMPDEST PUSH2 0x3B0 JUMP JUMPDEST PUSH1 0x11 DUP3 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP4 SWAP7 SWAP2 POP SWAP4 SWAP5 SWAP7 POP PUSH2 0x47F JUMP JUMPDEST PUSH2 0x4D4 SWAP2 SWAP10 POP RETURNDATASIZE DUP1 PUSH0 DUP4 RETURNDATACOPY PUSH2 0x4CC DUP2 DUP4 PUSH2 0x1071 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x1172 JUMP JUMPDEST SWAP8 DUP11 PUSH2 0x438 JUMP JUMPDEST DUP11 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 CALLVALUE PUSH2 0x127 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x127 JUMPI DUP1 MLOAD SWAP2 DUP2 DUP4 ADD SWAP1 DUP4 DUP3 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT OR PUSH2 0x552 JUMPI POP DUP2 MSTORE PUSH1 0x5 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 PUSH5 0x352E302E3 PUSH1 0xDC SHL DUP4 MSTORE DUP2 MLOAD SWAP3 DUP4 SWAP2 PUSH1 0x20 DUP4 MSTORE MLOAD DUP1 SWAP2 DUP2 PUSH1 0x20 DUP6 ADD MSTORE DUP5 DUP5 ADD MCOPY PUSH0 DUP3 DUP3 ADD DUP5 ADD MSTORE PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SUB ADD SWAP1 RETURN JUMPDEST PUSH1 0x41 SWAP1 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP1 CALLVALUE PUSH2 0x127 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x127 JUMPI PUSH2 0x57E PUSH2 0x1045 JUMP JUMPDEST SWAP2 PUSH1 0x24 CALLDATALOAD SWAP3 PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 DUP2 DUP6 AND DUP1 SWAP6 SUB PUSH2 0x127 JUMPI PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP3 DUP4 SLOAD SWAP3 DUP7 PUSH1 0xFF DUP6 DUP9 SHR AND SWAP2 DUP3 ISZERO PUSH2 0x645 JUMPI JUMPDEST POP POP PUSH2 0x637 JUMPI PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND OR SWAP1 SSTORE PUSH9 0xFFFFFFFFFFFFFFFFFF NOT DUP4 AND DUP7 OR PUSH1 0x1 PUSH1 0x40 SHL OR PUSH1 0xFF PUSH1 0x40 SHL NOT AND DUP5 SSTORE DUP5 MLOAD DUP7 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 SWAP1 LOG1 STOP JUMPDEST DUP5 MLOAD PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE REVERT JUMPDEST DUP6 AND LT ISZERO SWAP1 POP DUP7 DUP9 PUSH2 0x5CB JUMP JUMPDEST POP CALLVALUE PUSH2 0x127 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x127 JUMPI PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x509A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x127 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x127 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x6AB PUSH2 0x6A6 PUSH2 0x1045 JUMP JUMPDEST PUSH2 0x11FC JUMP JUMPDEST SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x127 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x127 JUMPI PUSH1 0x3 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x127 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x127 JUMPI PUSH2 0x6F4 PUSH2 0x12E8 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x509A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND SWAP1 SWAP2 SSTORE PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 STOP JUMPDEST POP CALLVALUE PUSH2 0x127 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x127 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x75F PUSH2 0x1045 JUMP JUMPDEST PUSH2 0x767 PUSH2 0x105B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 DUP6 MSTORE DUP4 DUP2 KECCAK256 SWAP2 DUP4 AND DUP2 MSTORE SWAP1 DUP5 MSTORE DUP3 SWAP1 KECCAK256 SLOAD SWAP2 MLOAD SWAP2 AND DUP2 MSTORE RETURN JUMPDEST SWAP1 CALLVALUE PUSH2 0x127 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x127 JUMPI PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ADDRESS SUB PUSH2 0x7FB JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP2 MSTORE RETURN JUMPDEST MLOAD PUSH4 0x703E46DD PUSH1 0xE1 SHL DUP2 MSTORE REVERT JUMPDEST DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x127 JUMPI PUSH2 0x81B PUSH2 0x1045 JUMP JUMPDEST PUSH1 0x24 SWAP3 DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x127 JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x127 JUMPI DUP1 DUP5 ADD CALLDATALOAD PUSH2 0x847 DUP2 PUSH2 0x1142 JUMP JUMPDEST SWAP4 PUSH2 0x854 DUP5 MLOAD SWAP6 DUP7 PUSH2 0x1071 JUMP JUMPDEST DUP2 DUP6 MSTORE PUSH1 0x20 SWAP2 DUP3 DUP7 ADD SWAP4 CALLDATASIZE DUP10 DUP4 DUP4 ADD ADD GT PUSH2 0x127 JUMPI DUP2 PUSH0 SWAP3 DUP11 DUP7 SWAP4 ADD DUP8 CALLDATACOPY DUP8 ADD ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 DUP2 AND ADDRESS DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0xA2E JUMPI JUMPDEST POP PUSH2 0xA1E JUMPI PUSH2 0x8B9 PUSH2 0x12E8 JUMP JUMPDEST DUP2 AND SWAP5 DUP5 MLOAD PUSH4 0x52D1902D PUSH1 0xE0 SHL DUP2 MSTORE DUP4 DUP2 DUP10 DUP2 DUP11 GAS STATICCALL PUSH0 SWAP2 DUP2 PUSH2 0x9EF JUMPI JUMPDEST POP PUSH2 0x8F2 JUMPI POP POP POP POP POP MLOAD SWAP2 PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 DUP8 DUP8 DUP8 SWAP5 SWAP4 DUP12 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SWAP2 DUP3 DUP2 SUB PUSH2 0x9DA JUMPI POP DUP6 EXTCODESIZE ISZERO PUSH2 0x9C6 JUMPI POP DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP3 OR SWAP1 SSTORE DUP5 MLOAD SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH0 DUP1 LOG2 DUP3 MLOAD ISZERO PUSH2 0x9AC JUMPI POP POP PUSH0 PUSH2 0x125 SWAP6 DUP2 SWAP3 MLOAD SWAP1 DUP5 GAS DELEGATECALL SWAP2 RETURNDATASIZE ISZERO PUSH2 0x9A2 JUMPI RETURNDATASIZE PUSH2 0x994 PUSH2 0x98B DUP3 PUSH2 0x1142 JUMP JUMPDEST SWAP3 MLOAD SWAP3 DUP4 PUSH2 0x1071 JUMP JUMPDEST DUP2 MSTORE PUSH0 DUP2 SWAP5 RETURNDATASIZE SWAP3 ADD RETURNDATACOPY PUSH2 0x1361 JUMP JUMPDEST POP PUSH1 0x60 SWAP3 POP PUSH2 0x1361 JUMP JUMPDEST SWAP5 POP SWAP5 POP POP POP POP CALLVALUE PUSH2 0x9BA JUMPI STOP JUMPDEST PUSH4 0xB398979F PUSH1 0xE0 SHL DUP2 MSTORE REVERT JUMPDEST DUP7 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE DUP1 DUP6 ADD DUP5 SWAP1 MSTORE REVERT JUMPDEST DUP8 MLOAD PUSH4 0x2A875269 PUSH1 0xE2 SHL DUP2 MSTORE DUP1 DUP7 ADD SWAP2 SWAP1 SWAP2 MSTORE REVERT JUMPDEST SWAP1 SWAP2 POP DUP5 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0xA17 JUMPI JUMPDEST PUSH2 0xA07 DUP2 DUP4 PUSH2 0x1071 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x127 JUMPI MLOAD SWAP1 DUP11 PUSH2 0x8D7 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x9FD JUMP JUMPDEST DUP5 MLOAD PUSH4 0x703E46DD PUSH1 0xE1 SHL DUP2 MSTORE DUP8 SWAP1 REVERT JUMPDEST SWAP1 POP DUP2 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD AND EQ ISZERO DUP10 PUSH2 0x8AC JUMP JUMPDEST CALLVALUE PUSH2 0x127 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x127 JUMPI PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xA7E PUSH2 0x1045 JUMP JUMPDEST AND DUP4 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH4 0x19F92B0B PUSH1 0xE2 SHL DUP3 MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xAD3 JUMPI SWAP2 PUSH2 0x1DE SWAP3 PUSH0 SWAP3 PUSH2 0xAB7 JUMPI JUMPDEST POP MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x1106 JUMP JUMPDEST PUSH2 0xACC SWAP2 SWAP3 POP RETURNDATASIZE DUP1 PUSH0 DUP4 RETURNDATACOPY PUSH2 0x4CC DUP2 DUP4 PUSH2 0x1071 JUMP JUMPDEST SWAP1 DUP4 PUSH2 0xAA4 JUMP JUMPDEST DUP3 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x127 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x127 JUMPI CALLDATALOAD SWAP1 PUSH0 SLOAD DUP3 LT ISZERO PUSH2 0x127 JUMPI PUSH2 0xB04 PUSH1 0x20 SWAP3 PUSH2 0x10BF JUMP JUMPDEST SWAP1 SLOAD SWAP2 MLOAD SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 PUSH1 0x3 SHL SHR AND DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x127 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x127 JUMPI PUSH8 0xFFFFFFFFFFFFFFFF SWAP2 DUP2 CALLDATALOAD DUP4 DUP2 GT PUSH2 0x127 JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x127 JUMPI DUP1 DUP4 ADD CALLDATALOAD SWAP4 PUSH1 0x24 PUSH2 0xB59 DUP7 PUSH2 0x10A7 JUMP JUMPDEST SWAP3 PUSH2 0xB66 DUP6 MLOAD SWAP5 DUP6 PUSH2 0x1071 JUMP JUMPDEST DUP7 DUP5 MSTORE PUSH1 0x20 SWAP7 DUP3 DUP9 DUP7 ADD SWAP2 PUSH1 0x5 SHL DUP4 ADD ADD SWAP2 CALLDATASIZE DUP4 GT PUSH2 0x127 JUMPI DUP4 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x1003 JUMPI POP POP POP DUP1 CALLDATALOAD DUP3 DUP2 GT PUSH2 0x127 JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x127 JUMPI DUP1 DUP7 ADD CALLDATALOAD SWAP1 PUSH2 0xBAF DUP3 PUSH2 0x10A7 JUMP JUMPDEST SWAP1 PUSH2 0xBBC DUP8 MLOAD SWAP3 DUP4 PUSH2 0x1071 JUMP JUMPDEST DUP3 DUP3 MSTORE DUP9 DUP3 ADD SWAP3 PUSH1 0x5 SHL DUP2 ADD DUP5 ADD SWAP1 DUP4 CALLDATASIZE DUP4 GT PUSH2 0x127 JUMPI DUP6 DUP12 SWAP3 ADD SWAP1 JUMPDEST DUP4 DUP3 LT PUSH2 0xFF4 JUMPI POP POP PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 PUSH1 0x44 SWAP6 SWAP4 POP SWAP1 DUP8 AND SWAP2 POP DUP2 ISZERO PUSH2 0xFBE JUMPI PUSH1 0x1 SWAP5 DUP6 DUP10 MLOAD GT ISZERO PUSH2 0xF7E JUMPI DUP9 MLOAD DUP6 MLOAD SUB PUSH2 0xF31 JUMPI PUSH0 DUP7 JUMPDEST PUSH2 0xE43 JUMPI JUMPDEST POP POP DUP7 PUSH1 0x2 SLOAD AND SWAP4 DUP10 MLOAD SWAP5 PUSH2 0x3CD5 DUP1 DUP8 ADD SWAP4 DUP8 DUP6 LT SWAP1 DUP6 GT OR PUSH2 0xE31 JUMPI SWAP1 DUP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0x13C5 DUP8 CODECOPY DUP3 MSTORE PUSH1 0xA0 DUP14 DUP4 ADD MSTORE DUP13 PUSH2 0xC5A PUSH1 0xA0 DUP5 ADD DUP13 PUSH2 0x1106 JUMP JUMPDEST DUP4 DUP2 SUB DUP14 DUP6 ADD MSTORE SWAP2 MLOAD DUP1 DUP4 MSTORE SWAP2 ADD SWAP4 SWAP1 PUSH0 DUP9 DUP16 JUMPDEST DUP4 DUP4 LT PUSH2 0xE1A JUMPI POP POP POP PUSH1 0x44 CALLDATALOAD PUSH1 0x60 DUP5 ADD MSTORE POP POP PUSH1 0x80 ADD MSTORE SUB SWAP1 PUSH0 CREATE DUP1 ISZERO PUSH2 0xE10 JUMPI DUP4 AND SWAP6 PUSH0 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0xDFE JUMPI SWAP1 PUSH2 0xCB5 DUP3 DUP5 DUP11 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 ADD PUSH0 SSTORE PUSH2 0x10BF JUMP JUMPDEST DUP2 SLOAD SWAP1 PUSH1 0x3 SHL SWAP1 DUP7 DUP10 DUP4 SHL SWAP3 SHL NOT AND OR SWAP1 SSTORE DUP2 PUSH0 SWAP1 JUMPDEST PUSH2 0xD1D JUMPI JUMPDEST POP POP POP POP PUSH32 0x93DE7D9DE9F3E05BA87A0170FCBB71AF623439CAF5E5079587B9D38C5DA9B0D1 SWAP2 PUSH2 0xD0F SWAP2 PUSH1 0x2 SLOAD AND DUP6 MLOAD SWAP3 DUP4 SWAP3 DUP8 DUP5 MSTORE DUP8 DUP5 ADD SWAP1 PUSH2 0x1106 JUMP JUMPDEST SWAP1 DUP9 DUP4 ADD MSTORE SUB SWAP1 LOG2 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 DUP7 MLOAD DUP3 LT ISZERO PUSH2 0xDF6 JUMPI POP DUP3 DUP2 ADD DUP1 DUP3 GT PUSH2 0xDE4 JUMPI DUP4 SWAP3 SWAP2 SWAP1 DUP4 JUMPDEST PUSH2 0xD4F JUMPI JUMPDEST POP DUP3 ADD DUP9 SWAP7 SWAP6 SWAP5 SWAP4 PUSH2 0xCCB JUMP JUMPDEST DUP8 SWAP4 SWAP2 SWAP3 SWAP4 MLOAD DUP2 LT ISZERO PUSH2 0xDDB JUMPI DUP2 SWAP1 DUP8 PUSH2 0xD69 DUP6 DUP12 PUSH2 0x115E JUMP JUMPDEST MLOAD AND PUSH0 MSTORE DUP2 DUP13 MSTORE DUP10 PUSH0 KECCAK256 DUP9 PUSH2 0xD7E DUP4 DUP13 PUSH2 0x115E JUMP JUMPDEST MLOAD AND PUSH0 MSTORE DUP13 MSTORE DUP10 PUSH0 KECCAK256 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL SWAP1 DUP13 DUP3 DUP3 SLOAD AND OR SWAP1 SSTORE DUP9 PUSH2 0xDAB DUP4 DUP13 PUSH2 0x115E JUMP JUMPDEST MLOAD AND PUSH0 MSTORE DUP3 DUP14 MSTORE DUP11 PUSH0 KECCAK256 DUP10 PUSH2 0xDC0 DUP8 DUP14 PUSH2 0x115E JUMP JUMPDEST MLOAD AND PUSH0 MSTORE DUP14 MSTORE DUP12 DUP12 PUSH0 KECCAK256 SWAP2 DUP3 SLOAD AND OR SWAP1 SSTORE ADD DUP2 SWAP4 SWAP3 SWAP2 PUSH2 0xD3D JUMP JUMPDEST SWAP3 SWAP2 SWAP1 SWAP3 PUSH2 0xD42 JUMP JUMPDEST DUP5 PUSH1 0x11 DUP5 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE MSTORE PUSH0 REVERT JUMPDEST SWAP6 SWAP5 SWAP4 PUSH2 0xCD0 JUMP JUMPDEST DUP4 PUSH1 0x41 DUP4 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE MSTORE PUSH0 REVERT JUMPDEST DUP6 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP5 MLOAD DUP9 MSTORE DUP10 SWAP9 POP SWAP7 DUP8 ADD SWAP7 SWAP1 SWAP4 ADD SWAP3 ADD DUP9 DUP16 PUSH2 0xC6E JUMP JUMPDEST DUP9 PUSH1 0x41 DUP15 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE MSTORE PUSH0 REVERT JUMPDEST DUP10 MLOAD DUP2 LT ISZERO PUSH2 0xF2C JUMPI DUP7 DUP2 ADD DUP1 DUP3 GT PUSH2 0xF1A JUMPI DUP8 SWAP3 SWAP2 SWAP1 DUP12 DUP16 DUP13 DUP16 DUP8 JUMPDEST PUSH2 0xE73 JUMPI JUMPDEST POP POP POP POP POP DUP3 ADD SWAP1 SWAP2 PUSH2 0xC16 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 DUP5 MLOAD DUP7 LT ISZERO PUSH2 0xF0D JUMPI POP DUP5 PUSH2 0xEA3 SWAP2 DUP4 PUSH2 0xE94 DUP10 DUP9 PUSH2 0x115E JUMP JUMPDEST MLOAD AND PUSH0 MSTORE DUP14 DUP6 MSTORE PUSH0 KECCAK256 SWAP5 PUSH2 0x115E JUMP JUMPDEST MLOAD AND PUSH0 MSTORE MSTORE DUP10 DUP13 PUSH0 KECCAK256 SLOAD AND PUSH2 0xEC2 JUMPI DUP8 SWAP3 SWAP2 SWAP1 DUP4 ADD DUP12 DUP16 DUP13 DUP16 DUP8 PUSH2 0xE60 JUMP JUMPDEST DUP12 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP15 ADD DUP16 SWAP1 MSTORE PUSH1 0x21 DUP2 DUP12 ADD MSTORE PUSH32 0x506F6F6C20616C72656164792065786973747320666F72207468697320706169 DUP2 DUP6 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP7 SWAP6 SWAP5 POP SWAP1 DUP4 SWAP3 SWAP2 PUSH2 0xE65 JUMP JUMPDEST DUP9 PUSH1 0x11 DUP15 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE MSTORE PUSH0 REVERT JUMPDEST PUSH2 0xC1B JUMP JUMPDEST DUP10 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP13 ADD DUP14 SWAP1 MSTORE PUSH1 0x22 DUP2 DUP10 ADD MSTORE PUSH32 0x41737365747320616E642077656967687473206C656E677468206D69736D6174 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0xC6D PUSH1 0xF3 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x64 DUP12 DUP14 DUP10 DUP2 DUP15 MLOAD SWAP4 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP6 MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x4174206C656173742074776F2061737365747320617265207265717569726564 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP9 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP12 ADD DUP13 SWAP1 MSTORE PUSH1 0x11 DUP2 DUP9 ADD MSTORE PUSH17 0x14195C9A5C1A195C9E481B9BDD081CD95D PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE SWAP1 DUP3 ADD SWAP1 DUP3 ADD PUSH2 0xBD9 JUMP JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x127 JUMPI DUP2 MSTORE SWAP1 DUP9 ADD SWAP1 DUP9 ADD PUSH2 0xB83 JUMP JUMPDEST CALLVALUE PUSH2 0x127 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x127 JUMPI PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x127 JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x127 JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x1093 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x1093 JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH0 SLOAD DUP2 LT ISZERO PUSH2 0x10F2 JUMPI PUSH0 DUP1 MSTORE PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563 ADD SWAP1 PUSH0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP1 DUP2 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP1 SWAP4 ADD SWAP4 ADD SWAP2 PUSH0 JUMPDEST DUP3 DUP2 LT PUSH2 0x1125 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x1117 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x1093 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x10F2 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 DUP2 DUP5 SUB SLT PUSH2 0x127 JUMPI DUP1 MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x127 JUMPI ADD SWAP2 DUP1 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x127 JUMPI DUP3 MLOAD PUSH2 0x11A8 DUP2 PUSH2 0x10A7 JUMP JUMPDEST SWAP4 PUSH2 0x11B6 PUSH1 0x40 MLOAD SWAP6 DUP7 PUSH2 0x1071 JUMP JUMPDEST DUP2 DUP6 MSTORE DUP4 DUP1 DUP7 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x127 JUMPI DUP4 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x11DD JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x127 JUMPI DUP2 MSTORE SWAP1 DUP4 ADD SWAP1 DUP4 ADD PUSH2 0x11CF JUMP JUMPDEST PUSH0 SWAP1 PUSH0 SLOAD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH2 0x1210 JUMPI POP POP POP PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x1219 DUP2 PUSH2 0x10BF JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x3 SWAP2 SWAP1 SWAP2 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP4 AND EQ PUSH2 0x123D JUMPI PUSH1 0x1 ADD PUSH2 0x1202 JUMP JUMPDEST POP POP POP PUSH1 0x1 SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x124F DUP3 PUSH2 0x10A7 JUMP JUMPDEST PUSH2 0x125C PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x1071 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP1 SWAP3 PUSH2 0x126D PUSH1 0x1F NOT SWAP2 PUSH2 0x10A7 JUMP JUMPDEST ADD SWAP1 PUSH1 0x20 CALLDATASIZE SWAP2 ADD CALLDATACOPY JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x12D0 JUMPI PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x509A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP5 OR SWAP1 SWAP2 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH0 DUP1 LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x509A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x1308 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0xFF PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SLOAD PUSH1 0x40 SHR AND ISZERO PUSH2 0x134F JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1AFCD79F PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0x1388 JUMPI POP DUP1 MLOAD ISZERO PUSH2 0x1376 JUMPI DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA12F521 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST DUP2 MLOAD ISZERO DUP1 PUSH2 0x13BB JUMPI JUMPDEST PUSH2 0x1399 JUMPI POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x9996B315 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST POP DUP1 EXTCODESIZE ISZERO PUSH2 0x1391 JUMP INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x439 JUMPI PUSH2 0x3CD5 DUP1 CODESIZE SUB DUP1 SWAP2 PUSH2 0x1C DUP3 DUP6 PUSH2 0x8FE JUMP JUMPDEST DUP4 CODECOPY DUP2 ADD PUSH1 0xA0 DUP3 DUP3 SUB SLT PUSH2 0x439 JUMPI PUSH2 0x33 DUP3 PUSH2 0x921 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MLOAD SWAP1 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x439 JUMPI DUP4 ADD SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x439 JUMPI DUP3 MLOAD SWAP3 PUSH2 0x63 DUP5 PUSH2 0x935 JUMP JUMPDEST SWAP4 PUSH2 0x71 PUSH1 0x40 MLOAD SWAP6 DUP7 PUSH2 0x8FE JUMP JUMPDEST DUP1 DUP6 MSTORE PUSH1 0x20 DUP1 DUP7 ADD SWAP2 PUSH1 0x5 SHL DUP4 ADD ADD SWAP2 DUP5 DUP4 GT PUSH2 0x439 JUMPI PUSH1 0x20 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x8CB JUMPI POP POP POP PUSH1 0x40 DUP5 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x439 JUMPI DUP5 ADD SWAP2 DUP1 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x439 JUMPI DUP3 MLOAD PUSH2 0xC3 DUP2 PUSH2 0x935 JUMP JUMPDEST SWAP4 PUSH2 0xD1 PUSH1 0x40 MLOAD SWAP6 DUP7 PUSH2 0x8FE JUMP JUMPDEST DUP2 DUP6 MSTORE PUSH1 0x20 DUP1 DUP7 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x439 JUMPI PUSH1 0x20 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x8BB JUMPI POP POP POP PUSH2 0x107 PUSH1 0x80 PUSH1 0x60 DUP7 ADD MLOAD SWAP6 ADD PUSH2 0x921 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x113 DUP2 PUSH2 0x8E3 JUMP JUMPDEST PUSH1 0x9 DUP2 MSTORE PUSH9 0x42616C756E69204C5 PUSH1 0xBC SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP1 PUSH2 0x136 DUP3 PUSH2 0x8E3 JUMP JUMPDEST PUSH1 0x9 DUP3 MSTORE PUSH9 0x42414C554E492D4C5 PUSH1 0xBC SHL PUSH1 0x20 DUP4 ADD MSTORE DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x496 JUMPI PUSH1 0x3 SLOAD SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x8B1 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x792 JUMPI DUP2 PUSH1 0x1F DUP5 SWAP4 GT PUSH2 0x843 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x7BB JUMPI PUSH0 SWAP3 PUSH2 0x7B0 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x3 SSTORE JUMPDEST DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x496 JUMPI PUSH1 0x4 SLOAD SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x7A6 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x792 JUMPI DUP2 PUSH1 0x1F DUP5 SWAP4 GT PUSH2 0x724 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x6A0 JUMPI PUSH0 SWAP3 PUSH2 0x695 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x4 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x5 SSTORE PUSH1 0x9 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND OR SWAP1 SWAP2 SSTORE PUSH1 0xA DUP1 SLOAD DUP3 AND CALLER OR SWAP1 SSTORE PUSH1 0xC DUP1 SLOAD SWAP1 SWAP2 AND SWAP2 DUP4 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH8 0xDE0B6B3A7640000 PUSH1 0x8 SSTORE DUP3 MLOAD DUP3 MLOAD SUB PUSH2 0x645 JUMPI PUSH0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x525 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x280 DUP3 DUP7 PUSH2 0x94C JUMP JUMPDEST MLOAD AND ISZERO PUSH2 0x4E0 JUMPI PUSH2 0x291 DUP2 DUP5 PUSH2 0x94C JUMP JUMPDEST MLOAD ISZERO PUSH2 0x4AA JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x2A9 DUP3 DUP7 PUSH2 0x94C JUMP JUMPDEST MLOAD AND PUSH2 0x2B5 DUP3 DUP6 PUSH2 0x94C JUMP JUMPDEST MLOAD PUSH1 0x40 DUP1 MLOAD SWAP3 SWAP1 DUP4 ADD DUP1 DUP5 GT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 SWAP2 GT OR PUSH2 0x496 JUMPI PUSH1 0x40 DUP4 ADD PUSH1 0x40 MSTORE DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x6 SLOAD PUSH9 0x10000000000000000 DUP2 LT ISZERO PUSH2 0x496 JUMPI PUSH1 0x1 DUP2 ADD DUP1 PUSH1 0x6 SSTORE DUP2 LT ISZERO PUSH2 0x482 JUMPI PUSH1 0x6 PUSH0 MSTORE DUP2 MLOAD PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F PUSH1 0x1 SWAP3 SWAP1 SWAP3 SHL SWAP2 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE PUSH1 0x20 SWAP1 SWAP3 ADD MLOAD PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D40 SWAP1 SWAP2 ADD SSTORE PUSH2 0x383 DUP3 DUP7 PUSH2 0x94C JUMP JUMPDEST MLOAD AND PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0xC SLOAD AND PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE DUP2 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x44 DUP2 DUP7 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x445 JUMPI PUSH0 SWAP2 PUSH2 0x450 JUMPI JUMPDEST POP ISZERO PUSH2 0x3D1 JUMPI JUMPDEST POP POP PUSH1 0x1 ADD PUSH2 0x265 JUMP JUMPDEST PUSH0 SWAP2 PUSH1 0x44 PUSH1 0x20 SWAP3 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP4 DUP5 SWAP3 PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE DUP2 NOT PUSH1 0x24 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x445 JUMPI PUSH2 0x409 JUMPI JUMPDEST DUP1 PUSH2 0x3C7 JUMP JUMPDEST PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x43D JUMPI JUMPDEST DUP2 PUSH2 0x422 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x8FE JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x439 JUMPI MLOAD DUP1 ISZERO ISZERO SUB PUSH2 0x439 JUMPI PUSH0 PUSH2 0x403 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x415 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x47A JUMPI JUMPDEST DUP2 PUSH2 0x46B PUSH1 0x20 SWAP4 DUP4 PUSH2 0x8FE JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x439 JUMPI MLOAD PUSH0 PUSH2 0x3C0 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x45E JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x125B9D985B1A59081DD95A59DA1D PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420617373657420616464726573730000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH1 0x7 DUP5 SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH4 0x89A30271 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x4 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x445 JUMPI PUSH0 SWAP2 PUSH2 0x60B JUMPI JUMPDEST POP PUSH1 0xB DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH0 SWAP1 DUP2 JUMPDEST DUP2 MLOAD DUP4 LT ISZERO PUSH2 0x5BD JUMPI PUSH2 0x594 DUP4 DUP4 PUSH2 0x94C JUMP JUMPDEST MLOAD DUP2 ADD DUP1 SWAP2 GT PUSH2 0x5A9 JUMPI PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 PUSH2 0x581 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x2710 SUB PUSH2 0x5D4 JUMPI PUSH1 0x40 MLOAD PUSH2 0x3374 SWAP1 DUP2 PUSH2 0x961 DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x496E76616C69642077656967687473 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x63D JUMPI JUMPDEST DUP2 PUSH2 0x626 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x8FE JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x439 JUMPI PUSH2 0x637 SWAP1 PUSH2 0x921 JUMP JUMPDEST DUP3 PUSH2 0x55C JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x619 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41737365747320616E642077656967687473206C656E677468206D69736D6174 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0xC6D PUSH1 0xF3 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ADD MLOAD SWAP1 POP PUSH0 DUP1 PUSH2 0x1FB JUMP JUMPDEST PUSH1 0x4 PUSH0 SWAP1 DUP2 MSTORE PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B SWAP4 POP PUSH1 0x1F NOT DUP6 AND SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x70C JUMPI POP SWAP1 DUP5 PUSH1 0x1 SWAP6 SWAP5 SWAP4 SWAP3 LT PUSH2 0x6F4 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x4 SSTORE PUSH2 0x210 JUMP JUMPDEST ADD MLOAD PUSH0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE PUSH0 DUP1 DUP1 PUSH2 0x6E6 JUMP JUMPDEST SWAP3 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH2 0x6D0 JUMP JUMPDEST PUSH1 0x4 PUSH0 MSTORE SWAP1 SWAP2 POP PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP6 LT PUSH2 0x788 JUMPI JUMPDEST SWAP1 PUSH1 0x1F DUP6 SWAP5 SWAP4 SWAP3 ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x77A JUMPI POP PUSH2 0x1E5 JUMP JUMPDEST PUSH0 DUP2 SSTORE DUP5 SWAP4 POP PUSH1 0x1 ADD PUSH2 0x76D JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x75F JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x1D1 JUMP JUMPDEST ADD MLOAD SWAP1 POP PUSH0 DUP1 PUSH2 0x199 JUMP JUMPDEST PUSH1 0x3 PUSH0 SWAP1 DUP2 MSTORE SWAP4 POP PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B SWAP2 SWAP1 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0x828 JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x810 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x3 SSTORE PUSH2 0x1AE JUMP JUMPDEST ADD MLOAD PUSH0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE PUSH0 DUP1 DUP1 PUSH2 0x802 JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x7E7 JUMP JUMPDEST PUSH1 0x3 PUSH0 MSTORE SWAP1 SWAP2 POP PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP6 LT PUSH2 0x8A7 JUMPI JUMPDEST SWAP1 PUSH1 0x1F DUP6 SWAP5 SWAP4 SWAP3 ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x899 JUMPI POP PUSH2 0x183 JUMP JUMPDEST PUSH0 DUP2 SSTORE DUP5 SWAP4 POP PUSH1 0x1 ADD PUSH2 0x88C JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x87E JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x16F JUMP JUMPDEST DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0xEC JUMP JUMPDEST PUSH1 0x20 DUP1 SWAP2 PUSH2 0x8D8 DUP5 PUSH2 0x921 JUMP JUMPDEST DUP2 MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0x8D JUMP JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x496 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT SWAP1 DUP3 LT OR PUSH2 0x496 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x439 JUMPI JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x496 JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x482 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP INVALID PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 SWAP2 DUP3 CALLDATASIZE LT ISZERO PUSH2 0x15 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 SWAP3 PUSH0 CALLDATALOAD PUSH1 0xE0 SHR SWAP2 DUP3 PUSH4 0x1D22CCD EQ PUSH2 0x258D JUMPI POP DUP2 PUSH4 0x6FDDE03 EQ PUSH2 0x2499 JUMPI DUP2 PUSH4 0x723C999 EQ PUSH2 0x21D2 JUMPI DUP2 PUSH4 0x902F1AC EQ PUSH2 0x21A2 JUMPI DUP2 PUSH4 0x95EA7B3 EQ PUSH2 0x20FA JUMPI DUP2 PUSH4 0x9A3BBE4 EQ PUSH2 0x6EC JUMPI DUP2 PUSH4 0xD0FA029 EQ PUSH2 0x1F79 JUMPI DUP2 PUSH4 0x18160DDD EQ PUSH2 0x1F5B JUMPI DUP2 PUSH4 0x189D00CA EQ PUSH2 0x1F3D JUMPI DUP2 PUSH4 0x1A686502 EQ PUSH2 0x1F19 JUMPI DUP2 PUSH4 0x218B5382 EQ PUSH2 0xC3D JUMPI DUP2 PUSH4 0x22ACB867 EQ PUSH2 0x1EBC JUMPI DUP2 PUSH4 0x23B872DD EQ PUSH2 0x1DDB JUMPI DUP2 PUSH4 0x313CE567 EQ PUSH2 0x1DC0 JUMPI DUP2 PUSH4 0x36BF6E39 EQ PUSH2 0x1D8C JUMPI DUP2 PUSH4 0x4AA06652 EQ PUSH2 0x1CE4 JUMPI DUP2 PUSH4 0x58D19698 EQ PUSH2 0x1BA3 JUMPI DUP2 PUSH4 0x5C1BBAF7 EQ PUSH2 0x1B5C JUMPI DUP2 PUSH4 0x67A6C440 EQ PUSH2 0x1B41 JUMPI DUP2 PUSH4 0x67E4AC2C EQ PUSH2 0x1ADE JUMPI DUP2 PUSH4 0x6E81221C EQ PUSH2 0x168C JUMPI DUP2 PUSH4 0x70A08231 EQ PUSH2 0x1656 JUMPI DUP2 PUSH4 0x76C7A3C7 EQ PUSH2 0x1637 JUMPI DUP2 PUSH4 0x77AACE1A EQ PUSH2 0x160F JUMPI DUP2 PUSH4 0x7FEC8D38 EQ PUSH2 0x15F1 JUMPI DUP2 PUSH4 0x82F652AD EQ PUSH2 0x1551 JUMPI DUP2 PUSH4 0x8656B653 EQ PUSH2 0x1506 JUMPI DUP2 PUSH4 0x867378C5 EQ PUSH2 0x14E9 JUMPI DUP2 PUSH4 0x89298012 EQ PUSH2 0x13F5 JUMPI DUP2 PUSH4 0x89AB3532 EQ PUSH2 0x138B JUMPI DUP2 PUSH4 0x89AFCB44 EQ PUSH2 0xF6C JUMPI DUP2 PUSH4 0x8A77C8DC EQ PUSH2 0xF47 JUMPI DUP2 PUSH4 0x9381CD2B EQ PUSH2 0xF24 JUMPI DUP2 PUSH4 0x95D89B41 EQ PUSH2 0xE26 JUMPI DUP2 PUSH4 0x992E2A92 EQ PUSH2 0xE04 JUMPI DUP2 PUSH4 0x9A86139B EQ PUSH2 0xDE1 JUMPI DUP2 PUSH4 0xA221EE49 EQ PUSH2 0xD98 JUMPI DUP2 PUSH4 0xA9059CBB EQ PUSH2 0xD68 JUMPI DUP2 PUSH4 0xB0E0D136 EQ PUSH2 0xD4D JUMPI DUP2 PUSH4 0xB2B55D70 EQ PUSH2 0xD28 JUMPI DUP2 PUSH4 0xB7B800A4 EQ PUSH2 0xD0D JUMPI DUP2 PUSH4 0xBA019DAB EQ PUSH2 0xCF2 JUMPI DUP2 PUSH4 0xBA9530A6 EQ PUSH2 0xCA4 JUMPI DUP2 PUSH4 0xBC063E1A EQ PUSH2 0xC82 JUMPI DUP2 PUSH4 0xBC694EA2 EQ PUSH2 0xC60 JUMPI DUP2 PUSH4 0xC2EE3A08 EQ PUSH2 0xC42 JUMPI DUP2 PUSH4 0xC36596A6 EQ PUSH2 0xC3D JUMPI DUP2 PUSH4 0xC45A0155 EQ PUSH2 0xC15 JUMPI DUP2 PUSH4 0xC6580D12 EQ PUSH2 0xBFB JUMPI DUP2 PUSH4 0xCDF456E1 EQ PUSH2 0xBD3 JUMPI DUP2 PUSH4 0xCF8FA764 EQ PUSH2 0xB5B JUMPI DUP2 PUSH4 0xD14EF46D EQ PUSH2 0xB0F JUMPI DUP2 PUSH4 0xDD62ED3E EQ PUSH2 0xAC6 JUMPI DUP2 PUSH4 0xDE836EBD EQ PUSH2 0x6F1 JUMPI DUP2 PUSH4 0xE4A28A52 EQ PUSH2 0x6EC JUMPI DUP2 PUSH4 0xE73FAA2D EQ PUSH2 0x6D0 JUMPI DUP2 PUSH4 0xEC093021 EQ PUSH2 0x6AE JUMPI DUP2 PUSH4 0xF47B45E8 EQ PUSH2 0x314 JUMPI POP PUSH4 0xF8D6AED4 EQ PUSH2 0x2AB JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x310 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x309 PUSH2 0x2E8 PUSH2 0x304 PUSH2 0x2EE PUSH2 0x2FE PUSH2 0x2F8 PUSH2 0x2F3 PUSH2 0x2E1 PUSH2 0x2D4 CALLDATASIZE PUSH2 0x26F8 JUMP JUMPDEST SWAP10 SWAP5 SWAP12 SWAP3 SWAP4 SWAP1 SWAP6 SWAP2 PUSH2 0x2E60 JUMP JUMPDEST SWAP4 DUP3 PUSH2 0x321B JUMP JUMPDEST SWAP1 PUSH2 0x2E60 JUMP JUMPDEST PUSH2 0x2F12 JUMP JUMPDEST PUSH2 0x3212 JUMP JUMPDEST SWAP2 PUSH2 0x31C9 JUMP JUMPDEST SWAP3 PUSH2 0x31AA JUMP JUMPDEST PUSH2 0x2E60 JUMP JUMPDEST SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x5A9 JUMPI PUSH1 0x3 NOT PUSH0 CALLDATASIZE DUP3 ADD SLT PUSH2 0x5A9 JUMPI PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 DUP6 AND SWAP2 PUSH2 0x342 CALLER DUP5 EQ PUSH2 0x280E JUMP JUMPDEST PUSH2 0x352 PUSH2 0x34D PUSH2 0x2AA9 JUMP JUMPDEST PUSH2 0x284B JUMP JUMPDEST PUSH1 0x6 SLOAD SWAP4 PUSH2 0x35F DUP6 PUSH2 0x28A7 JUMP JUMPDEST SWAP4 PUSH2 0x369 DUP7 PUSH2 0x28A7 JUMP JUMPDEST SWAP8 PUSH2 0x373 DUP8 PUSH2 0x28A7 JUMP JUMPDEST SWAP3 PUSH2 0x37D DUP9 PUSH2 0x28A7 JUMP JUMPDEST SWAP5 PUSH2 0x387 DUP10 PUSH2 0x28A7 JUMP JUMPDEST SWAP11 PUSH2 0x391 DUP11 PUSH2 0x28A7 JUMP JUMPDEST SWAP10 PUSH0 JUMPDEST DUP2 DUP2 LT PUSH2 0x5F5 JUMPI POP POP PUSH2 0x3A5 PUSH2 0x28ED JUMP JUMPDEST DUP5 PUSH1 0xC SLOAD AND SWAP2 PUSH1 0x7 SLOAD DUP7 PUSH1 0xB SLOAD AND DUP5 EXTCODESIZE ISZERO PUSH2 0x5A9 JUMPI DUP15 MLOAD PUSH4 0x3C2FDDC5 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0xE0 DUP2 DUP15 ADD MSTORE DUP14 SWAP10 SWAP1 SWAP7 DUP8 SWAP6 DUP7 SWAP6 SWAP2 SWAP1 PUSH2 0x3E4 SWAP1 PUSH1 0xE4 DUP9 ADD SWAP1 PUSH2 0x2606 JUMP JUMPDEST SWAP12 PUSH1 0x24 SWAP13 DUP3 DUP9 DUP3 SUB ADD PUSH1 0x24 DUP10 ADD MSTORE PUSH2 0x3FB SWAP2 PUSH2 0x271E JUMP JUMPDEST SWAP1 DUP7 DUP3 SUB ADD PUSH1 0x44 DUP8 ADD MSTORE PUSH2 0x40E SWAP2 PUSH2 0x2606 JUMP JUMPDEST SWAP3 PUSH1 0x64 DUP6 ADD MSTORE DUP1 PUSH1 0x84 DUP6 ADD MSTORE PUSH1 0xA4 DUP5 ADD MSTORE PUSH1 0xC4 DUP4 ADD MSTORE SUB DUP2 GAS PUSH0 SWAP5 DUP6 SWAP2 CALL DUP1 ISZERO PUSH2 0x5EB JUMPI PUSH2 0x5BE JUMPI JUMPDEST POP PUSH1 0x6 SLOAD PUSH1 0x9 SLOAD SWAP1 SWAP7 SWAP1 DUP4 AND SWAP3 DUP3 JUMPDEST DUP9 DUP2 LT PUSH2 0x4B3 JUMPI DUP13 DUP13 PUSH2 0x4AF DUP14 DUP14 PUSH32 0x279B343370F587AF7FB675AE7C8578E9C8ABCC373236AD02C501A4771FE7A7B8 DUP5 MLOAD PUSH1 0x20 DUP2 MSTORE DUP1 PUSH2 0x48B CALLER SWAP5 PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x271E JUMP JUMPDEST SUB SWAP1 LOG2 PUSH2 0x4A1 DUP4 MLOAD SWAP5 DUP5 DUP7 SWAP6 DUP7 MSTORE DUP6 ADD SWAP1 PUSH2 0x2606 JUMP JUMPDEST SWAP1 DUP4 DUP3 SUB PUSH1 0x20 DUP6 ADD MSTORE PUSH2 0x2606 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST DUP2 PUSH2 0x4BE DUP3 DUP13 PUSH2 0x28D9 JUMP JUMPDEST MLOAD AND DUP13 MLOAD DUP1 SWAP2 PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP3 MSTORE DUP8 DUP7 DUP4 ADD MSTORE DUP2 DUP10 PUSH1 0x20 SWAP5 DUP6 SWAP4 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x5B4 JUMPI DUP16 SWAP1 DUP11 SWAP5 SWAP4 DUP16 SWAP2 SWAP4 DUP14 SWAP5 DUP11 SWAP3 PUSH2 0x573 JUMPI JUMPDEST POP POP SWAP5 DUP5 SWAP2 PUSH1 0x1 SWAP7 PUSH2 0x506 DUP5 DUP8 PUSH2 0x28D9 JUMP JUMPDEST MSTORE PUSH2 0x511 DUP4 DUP7 PUSH2 0x28D9 JUMP JUMPDEST MLOAD PUSH2 0x51C DUP5 DUP5 PUSH2 0x28D9 JUMP JUMPDEST MLOAD LT ISZERO PUSH2 0x556 JUMPI POP PUSH2 0x548 SWAP1 PUSH2 0x541 DUP4 PUSH2 0x53A DUP2 PUSH2 0x54E SWAP8 SWAP9 PUSH2 0x28D9 JUMP JUMPDEST MLOAD SWAP3 PUSH2 0x28D9 JUMP JUMPDEST MLOAD SWAP1 PUSH2 0x2767 JUMP JUMPDEST SWAP3 PUSH2 0x28D9 JUMP JUMPDEST MSTORE JUMPDEST ADD PUSH2 0x446 JUMP JUMPDEST SWAP4 PUSH2 0x56D SWAP4 POP PUSH2 0x541 DUP4 PUSH2 0x53A DUP2 PUSH2 0x548 SWAP6 PUSH2 0x28D9 JUMP JUMPDEST MSTORE PUSH2 0x550 JUMP JUMPDEST SWAP5 POP SWAP6 POP POP POP POP DUP3 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x5AD JUMPI JUMPDEST PUSH2 0x58E DUP2 DUP4 PUSH2 0x27C0 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x5A9 JUMPI DUP9 DUP15 DUP3 DUP11 DUP16 PUSH1 0x1 SWAP7 MLOAD SWAP2 SWAP7 DUP2 SWAP4 POP PUSH2 0x4F4 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x584 JUMP JUMPDEST DUP15 MLOAD RETURNDATASIZE DUP9 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x5D8 JUMPI DUP9 MSTORE PUSH0 DUP11 PUSH2 0x437 JUMP JUMPDEST PUSH1 0x41 DUP7 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP11 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP6 PUSH2 0x5FF DUP3 PUSH2 0x2774 JUMP JUMPDEST POP SLOAD AND PUSH2 0x60C DUP3 DUP14 PUSH2 0x28D9 JUMP JUMPDEST MSTORE PUSH1 0x1 PUSH2 0x618 DUP3 PUSH2 0x2774 JUMP JUMPDEST POP ADD SLOAD PUSH2 0x625 DUP3 DUP6 PUSH2 0x28D9 JUMP JUMPDEST MSTORE DUP6 PUSH2 0x631 DUP3 DUP14 PUSH2 0x28D9 JUMP JUMPDEST MLOAD AND SWAP1 DUP14 MLOAD DUP1 SWAP3 PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP3 MSTORE DUP10 DUP14 DUP4 ADD MSTORE DUP2 PUSH1 0x24 PUSH1 0x20 SWAP4 DUP5 SWAP4 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x6A4 JUMPI PUSH0 SWAP2 PUSH2 0x675 JUMPI JUMPDEST POP PUSH1 0x1 SWAP3 POP PUSH2 0x66E DUP3 DUP12 PUSH2 0x28D9 JUMP JUMPDEST MSTORE ADD PUSH2 0x394 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x69D JUMPI JUMPDEST PUSH2 0x68B DUP2 DUP4 PUSH2 0x27C0 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x5A9 JUMPI PUSH1 0x1 SWAP2 MLOAD PUSH0 PUSH2 0x65F JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x681 JUMP JUMPDEST DUP16 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH8 0x6F05B59D3B20000 DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x309 PUSH2 0x2B77 JUMP JUMPDEST PUSH2 0x2660 JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x5A9 JUMPI PUSH2 0x70A PUSH2 0x25DA JUMP JUMPDEST SWAP1 PUSH1 0x24 SWAP2 DUP3 CALLDATALOAD SWAP4 PUSH8 0xFFFFFFFFFFFFFFFF DUP6 GT PUSH2 0x5A9 JUMPI CALLDATASIZE PUSH1 0x23 DUP7 ADD SLT ISZERO PUSH2 0x5A9 JUMPI DUP5 DUP2 ADD CALLDATALOAD SWAP4 PUSH2 0x739 DUP6 PUSH2 0x27F6 JUMP JUMPDEST SWAP5 PUSH2 0x746 DUP6 MLOAD SWAP7 DUP8 PUSH2 0x27C0 JUMP JUMPDEST DUP1 DUP7 MSTORE PUSH1 0x20 SWAP7 DUP3 DUP9 DUP9 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP2 CALLDATASIZE DUP4 GT PUSH2 0x5A9 JUMPI DUP4 DUP10 SWAP3 ADD SWAP1 JUMPDEST DUP4 DUP3 LT PUSH2 0xAB7 JUMPI POP POP PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP8 SWAP3 POP PUSH2 0x78A SWAP2 POP DUP8 AND CALLER EQ PUSH2 0x280E JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 PUSH0 SWAP1 PUSH2 0x798 PUSH2 0x28ED JUMP JUMPDEST SWAP1 PUSH1 0x6 SLOAD SWAP2 MLOAD DUP3 SUB PUSH2 0xA75 JUMPI DUP2 ISZERO PUSH2 0xA47 JUMPI SWAP1 PUSH0 SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0xA0E JUMPI POP POP POP DUP1 ISZERO PUSH2 0x9C1 JUMPI DUP4 DUP9 DUP9 PUSH1 0xB SLOAD AND DUP9 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH4 0x313CE567 PUSH1 0xE0 SHL DUP3 MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x9B7 JUMPI SWAP1 PUSH1 0xFF SWAP2 PUSH0 SWAP2 PUSH2 0x98A JUMPI JUMPDEST POP AND SWAP2 DUP1 PUSH2 0x8EC JUMPI POP PUSH8 0xDE0B6B3A7640000 DUP1 DUP3 MUL SWAP2 DUP3 DIV SUB PUSH2 0x8DA JUMPI SWAP1 PUSH2 0x810 SWAP2 PUSH2 0x2767 JUMP JUMPDEST SWAP5 JUMPDEST DUP6 ISZERO PUSH2 0x8A8 JUMPI PUSH2 0x843 DUP7 SWAP2 CALLER PUSH0 MSTORE PUSH0 DUP10 MSTORE DUP7 PUSH0 KECCAK256 SLOAD SWAP6 PUSH2 0x832 DUP5 DUP3 PUSH2 0x2C36 JUMP JUMPDEST AND SWAP5 DUP6 PUSH0 MSTORE PUSH0 DUP10 MSTORE DUP7 PUSH0 KECCAK256 SLOAD PUSH2 0x2767 JUMP JUMPDEST SUB PUSH2 0x878 JUMPI POP POP PUSH32 0xF6798A560793A54C3BCFE86A93CDE1E73087D944C0EA20544137D4121396885 DUP5 DUP4 MLOAD DUP6 DUP2 MSTORE LOG2 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP4 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP2 DUP3 ADD DUP7 SWAP1 MSTORE PUSH1 0xB SWAP1 DUP3 ADD MSTORE PUSH11 0x135A5B9D0811985A5B1959 PUSH1 0xAA SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP5 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP5 ADD DUP9 SWAP1 MSTORE PUSH1 0xD DUP2 DUP5 ADD MSTORE PUSH13 0x4D696E7420717479206973203 PUSH1 0x9C SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x11 DUP6 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE MSTORE PUSH0 REVERT JUMPDEST PUSH2 0x8F4 PUSH2 0x2BA2 JUMP JUMPDEST POP SWAP2 DUP3 ISZERO PUSH2 0x939 JUMPI PUSH2 0x90F SWAP3 SWAP2 PUSH2 0x90A SWAP2 PUSH2 0x2639 JUMP JUMPDEST PUSH2 0x2683 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 SWAP1 DUP2 DUP2 MUL SWAP2 DUP2 DUP4 DIV EQ SWAP1 ISZERO OR ISZERO PUSH2 0x8DA JUMPI SWAP1 PUSH2 0x933 SWAP2 PUSH2 0x2767 JUMP JUMPDEST SWAP5 PUSH2 0x812 JUMP JUMPDEST DUP8 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP8 ADD DUP12 SWAP1 MSTORE PUSH1 0x26 DUP2 DUP8 ADD MSTORE PUSH32 0x546F74616C206C6971756964697479206D757374206265206772656174657220 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x7468616E203 PUSH1 0xD4 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH2 0x9AA SWAP2 POP DUP11 RETURNDATASIZE DUP13 GT PUSH2 0x9B0 JUMPI JUMPDEST PUSH2 0x9A2 DUP2 DUP4 PUSH2 0x27C0 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x288E JUMP JUMPDEST DUP11 PUSH2 0x7E9 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x998 JUMP JUMPDEST DUP8 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP6 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP6 ADD DUP10 SWAP1 MSTORE PUSH1 0x22 DUP2 DUP6 ADD MSTORE PUSH32 0x546F74616C2076616C7565206D7573742062652067726561746572207468616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x203 PUSH1 0xF4 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 SWAP2 SWAP3 PUSH2 0xA3E PUSH1 0x1 SWAP2 PUSH2 0xA38 DUP13 PUSH2 0xA24 DUP9 PUSH2 0x2774 JUMP JUMPDEST POP SLOAD AND PUSH2 0xA31 DUP9 DUP8 PUSH2 0x28D9 JUMP JUMPDEST MLOAD SWAP1 PUSH2 0x3263 JUMP JUMPDEST SWAP1 PUSH2 0x275A JUMP JUMPDEST SWAP4 ADD SWAP2 SWAP1 PUSH2 0x7AE JUMP JUMPDEST DUP8 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP8 ADD DUP12 SWAP1 MSTORE PUSH1 0x9 DUP2 DUP8 ADD MSTORE PUSH9 0x4E6F20617373657473 PUSH1 0xB8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP8 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP8 ADD DUP12 SWAP1 MSTORE PUSH1 0x17 DUP2 DUP8 ADD MSTORE PUSH32 0x496E76616C6964207265736572766573206C656E677468000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE SWAP1 DUP3 ADD SWAP1 DUP3 ADD PUSH2 0x765 JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x5A9 JUMPI PUSH1 0x20 SWAP1 PUSH2 0xAE2 PUSH2 0x25DA JUMP JUMPDEST PUSH2 0xAEA PUSH2 0x25F0 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP2 AND PUSH0 MSTORE PUSH1 0x1 DUP5 MSTORE DUP3 PUSH0 KECCAK256 SWAP2 AND PUSH0 MSTORE DUP3 MSTORE DUP1 PUSH0 KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x5A9 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI CALLDATALOAD PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x5A9 JUMPI PUSH2 0xB36 SWAP1 PUSH2 0x2774 JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD SWAP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x5A9 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI DUP1 CALLDATALOAD SWAP1 PUSH2 0xB79 PUSH2 0x2BA2 JUMP JUMPDEST DUP1 SWAP3 SWAP2 POP MLOAD DUP4 LT ISZERO PUSH2 0xB9A JUMPI PUSH1 0x20 DUP5 PUSH2 0xB92 DUP6 DUP6 PUSH2 0x28D9 JUMP JUMPDEST MLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x20 DUP6 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x92DCECC2D8D2C840C2E6E6CAE840D2DCC8CAF PUSH1 0x6B SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI PUSH1 0xB SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH0 DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI PUSH1 0xA SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH2 0x26A1 JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x8 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH8 0x1BC16D674EC7FFFF DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH8 0x16345785D8A0000 DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x309 PUSH2 0xCDB PUSH2 0xCE1 PUSH2 0xCED PUSH2 0xCE7 PUSH2 0x2EE PUSH2 0xCE1 PUSH2 0x2E8 PUSH2 0xCCE CALLDATASIZE PUSH2 0x26F8 JUMP JUMPDEST SWAP9 SWAP5 SWAP7 SWAP3 SWAP12 SWAP2 SWAP1 SWAP4 PUSH2 0x2E60 JUMP JUMPDEST SWAP7 PUSH2 0x31C9 JUMP JUMPDEST SWAP1 PUSH2 0x31AA JUMP JUMPDEST DUP3 PUSH2 0x2EC5 JUMP JUMPDEST PUSH2 0x31C9 JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH1 0x2 DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x309 PUSH2 0xD48 PUSH2 0x25DA JUMP JUMPDEST PUSH2 0x2AFF JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH1 0x8 DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x5A9 JUMPI PUSH1 0x20 SWAP1 PUSH2 0xD91 PUSH2 0xD87 PUSH2 0x25DA JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x2CF8 JUMP JUMPDEST MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI PUSH2 0x309 PUSH2 0xDCE PUSH2 0xDC0 PUSH1 0x20 SWAP5 PUSH1 0x24 CALLDATALOAD SWAP1 CALLDATALOAD PUSH2 0x2E60 JUMP JUMPDEST PUSH2 0x2E8 PUSH1 0x64 CALLDATALOAD PUSH1 0x44 CALLDATALOAD PUSH2 0x2E60 JUMP JUMPDEST PUSH2 0xCE1 PUSH2 0xDDC PUSH1 0x84 CALLDATALOAD PUSH2 0x31C9 JUMP JUMPDEST PUSH2 0x2DF9 JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI MLOAD PUSH6 0x42524F4E5A45 PUSH1 0xD0 SHL DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH8 0x4A03CE68D215556 DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI DUP1 MLOAD SWAP1 PUSH0 SWAP3 DUP1 SLOAD SWAP1 PUSH1 0x1 DUP3 PUSH1 0x1 SHR SWAP2 PUSH1 0x1 DUP5 AND SWAP4 DUP5 ISZERO PUSH2 0xF1A JUMPI JUMPDEST PUSH1 0x20 SWAP5 DUP6 DUP6 LT DUP2 EQ PUSH2 0xF07 JUMPI DUP5 DUP9 MSTORE SWAP1 DUP2 ISZERO PUSH2 0xEE5 JUMPI POP PUSH1 0x1 EQ PUSH2 0xE8C JUMPI JUMPDEST PUSH2 0x4AF DUP7 DUP7 PUSH2 0xE82 DUP3 DUP12 SUB DUP4 PUSH2 0x27C0 JUMP JUMPDEST MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x25B0 JUMP JUMPDEST PUSH0 SWAP1 DUP2 MSTORE SWAP3 SWAP6 POP PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B JUMPDEST DUP3 DUP5 LT PUSH2 0xED2 JUMPI POP POP POP DUP3 PUSH2 0x4AF SWAP5 PUSH2 0xE82 SWAP3 DUP3 ADD ADD SWAP5 DUP7 PUSH2 0xE71 JUMP JUMPDEST DUP1 SLOAD DUP7 DUP6 ADD DUP9 ADD MSTORE SWAP3 DUP7 ADD SWAP3 DUP2 ADD PUSH2 0xEB5 JUMP JUMPDEST PUSH1 0xFF NOT AND DUP8 DUP7 ADD MSTORE POP POP POP ISZERO ISZERO PUSH1 0x5 SHL DUP4 ADD ADD SWAP3 POP PUSH2 0xE82 DUP3 PUSH2 0x4AF DUP7 PUSH2 0xE71 JUMP JUMPDEST PUSH1 0x22 DUP4 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP3 PUSH1 0x7F AND SWAP3 PUSH2 0xE52 JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH9 0x56BC75E2D63100000 DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI PUSH1 0x20 SWAP1 PUSH2 0xF63 PUSH2 0x2AA9 JUMP JUMPDEST SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI PUSH1 0x20 SWAP1 DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x5A9 JUMPI PUSH2 0xF88 PUSH2 0x25DA JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 PUSH2 0xFA2 CALLER DUP5 EQ PUSH2 0x280E JUMP JUMPDEST ADDRESS PUSH0 MSTORE PUSH0 DUP6 MSTORE DUP4 PUSH0 KECCAK256 SLOAD SWAP6 DUP7 ISZERO PUSH2 0x1348 JUMPI PUSH1 0x2 SLOAD SWAP7 DUP8 ISZERO PUSH2 0x1316 JUMPI PUSH1 0x6 SLOAD PUSH2 0xFC9 DUP2 PUSH2 0x28A7 JUMP JUMPDEST SWAP9 PUSH1 0x1E DUP4 MUL DUP4 DUP2 DIV PUSH1 0x1E SUB PUSH2 0x1303 JUMPI PUSH2 0x2710 PUSH2 0xFE7 SWAP2 DIV DUP1 SWAP5 PUSH2 0x2767 JUMP JUMPDEST SWAP7 PUSH0 JUMPDEST DUP4 DUP2 LT PUSH2 0x1248 JUMPI POP POP POP POP ADDRESS PUSH0 MSTORE PUSH0 DUP8 MSTORE DUP5 DUP7 PUSH0 KECCAK256 SLOAD LT PUSH2 0x1205 JUMPI DUP2 DUP8 DUP6 PUSH1 0xC SLOAD AND DUP9 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH4 0x61D027B3 PUSH1 0xE0 SHL DUP3 MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x9B7 JUMPI SWAP1 DUP9 SWAP2 PUSH0 SWAP2 PUSH2 0x11CB JUMPI JUMPDEST POP DUP8 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP5 DUP3 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP3 SWAP1 DUP2 SWAP1 PUSH1 0x40 ADD JUMPDEST SUB DUP2 PUSH0 ADDRESS GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x11C1 JUMPI PUSH0 SWAP2 PUSH2 0x118B JUMPI JUMPDEST POP ISZERO PUSH2 0x1152 JUMPI ADDRESS ISZERO PUSH2 0x113C JUMPI ADDRESS PUSH0 MSTORE PUSH0 DUP7 MSTORE DUP5 PUSH0 KECCAK256 SLOAD SWAP1 DUP5 DUP3 LT PUSH2 0x1111 JUMPI POP DUP4 SWAP3 PUSH32 0xCC16F5DBB4873280815C1EE09DBD06736CFFCC184412CF7A71A0FDB75D397CA5 SWAP3 PUSH2 0x4AF SWAP7 SWAP6 DUP9 SWAP4 ADDRESS PUSH0 MSTORE PUSH0 DUP6 MSTORE SUB DUP7 PUSH0 KECCAK256 SSTORE DUP5 PUSH1 0x2 SLOAD SUB PUSH1 0x2 SSTORE PUSH0 DUP7 MLOAD DUP7 DUP2 MSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP6 ADDRESS SWAP3 LOG3 DUP6 MLOAD SWAP5 DUP6 MSTORE AND SWAP3 LOG2 MLOAD SWAP3 DUP3 DUP5 SWAP4 DUP5 MSTORE DUP4 ADD SWAP1 PUSH2 0x2606 JUMP JUMPDEST DUP6 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE ADDRESS SWAP2 DUP2 ADD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 DUP2 ADD DUP6 SWAP1 MSTORE DUP2 SWAP1 PUSH1 0x60 ADD SUB SWAP1 REVERT JUMPDEST PUSH1 0x24 SWAP1 PUSH0 DUP7 MLOAD SWAP2 PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST DUP5 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x119959481D1C985B9CD9995C8819985A5B1959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 POP DUP7 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x11BA JUMPI JUMPDEST PUSH2 0x11A2 DUP2 DUP4 PUSH2 0x27C0 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x5A9 JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x5A9 JUMPI DUP9 PUSH2 0x1072 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1198 JUMP JUMPDEST DUP7 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP3 DUP2 SWAP4 SWAP3 POP RETURNDATASIZE DUP4 GT PUSH2 0x11FE JUMPI JUMPDEST PUSH2 0x11E2 DUP2 DUP4 PUSH2 0x27C0 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x5A9 JUMPI MLOAD DUP5 DUP2 AND DUP2 SUB PUSH2 0x5A9 JUMPI DUP8 SWAP1 PUSH2 0x105E PUSH2 0x102F JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x11D8 JUMP JUMPDEST DUP6 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP4 ADD DUP9 SWAP1 MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E742042414C554E49206C6971756964697479000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x128A DUP12 DUP10 PUSH2 0x1256 DUP5 PUSH2 0x2774 JUMP JUMPDEST POP SLOAD DUP14 MLOAD PUSH4 0xA3E113FB PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS DUP12 DUP3 ADD SWAP1 DUP2 MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP4 ADD MSTORE SWAP3 DUP4 SWAP2 DUP3 SWAP2 PUSH1 0x40 SWAP1 SWAP2 ADD SWAP1 JUMP JUMPDEST SUB DUP2 DUP7 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x12F9 JUMPI DUP11 DUP6 SWAP4 SWAP3 DUP16 SWAP3 PUSH0 SWAP2 PUSH2 0x12BF JUMPI JUMPDEST POP PUSH2 0x548 PUSH1 0x1 SWAP6 PUSH2 0x90A PUSH2 0x12B8 SWAP5 DUP8 SWAP5 PUSH2 0x2639 JUMP JUMPDEST MSTORE ADD PUSH2 0xFEA JUMP JUMPDEST SWAP5 POP POP POP POP DUP12 DUP3 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x12F2 JUMPI JUMPDEST PUSH2 0x12D9 DUP2 DUP4 PUSH2 0x27C0 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x5A9 JUMPI SWAP1 MLOAD DUP4 SWAP2 SWAP1 DUP14 SWAP1 DUP12 SWAP1 PUSH2 0x548 PUSH2 0x12A3 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x12CF JUMP JUMPDEST DUP12 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x11 DUP6 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP6 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP4 ADD DUP9 SWAP1 MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x4E6F206C6971756964697479 PUSH1 0xA0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP5 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5368617265206D7573742062652067726561746572207468616E203000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI PUSH2 0x13A4 PUSH2 0x29C2 JUMP JUMPDEST DUP3 MLOAD SWAP3 DUP4 SWAP2 DUP2 DUP4 ADD SWAP2 DUP4 MSTORE DUP4 MLOAD DUP1 SWAP3 MSTORE PUSH1 0x60 DUP4 ADD SWAP2 PUSH1 0x20 DUP1 SWAP6 ADD SWAP5 PUSH0 JUMPDEST DUP3 DUP2 LT PUSH2 0x13DC JUMPI DUP6 DUP1 PUSH2 0x4AF DUP8 DUP8 DUP4 DUP3 SUB PUSH1 0x20 DUP6 ADD MSTORE PUSH2 0x2606 JUMP JUMPDEST DUP7 MLOAD ISZERO ISZERO DUP6 MSTORE SWAP6 DUP2 ADD SWAP6 DUP8 SWAP6 POP SWAP4 DUP2 ADD SWAP4 PUSH1 0x1 ADD PUSH2 0x13C1 JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI PUSH2 0x1411 PUSH2 0x1407 CALLDATASIZE PUSH2 0x26F8 JUMP JUMPDEST SWAP6 SWAP2 SWAP1 SWAP3 SWAP4 PUSH2 0x2E60 JUMP JUMPDEST SWAP6 PUSH8 0xDE0B6B3A7640000 SWAP2 DUP3 DUP2 MUL SWAP1 DUP1 ISZERO SWAP1 DUP1 DUP4 DIV DUP6 EQ DUP3 OR ISZERO PUSH2 0x14D6 JUMPI SWAP1 DUP5 PUSH2 0x1443 SWAP3 DUP3 ISZERO PUSH2 0x14C2 JUMPI JUMPDEST POP POP PUSH2 0x30FE JUMP JUMPDEST PUSH8 0x6F05B59D3B20000 DUP2 ADD SWAP2 DUP3 DUP3 GT PUSH2 0x14AF JUMPI POP PUSH2 0x14A9 DUP6 PUSH2 0x14A3 PUSH1 0x20 SWAP11 SWAP8 PUSH2 0x149E PUSH2 0x148F PUSH2 0xCE1 SWAP10 PUSH2 0x304 PUSH2 0xCED SWAP11 DUP11 PUSH2 0x309 SWAP16 SWAP12 PUSH2 0x149E SWAP12 PUSH2 0x1488 SWAP2 LT ISZERO PUSH2 0x30FE JUMP JUMPDEST DIV DUP3 PUSH2 0x321B JUMP JUMPDEST PUSH2 0x1498 DUP12 PUSH2 0x2DF9 JUMP JUMPDEST SWAP1 PUSH2 0x2F12 JUMP JUMPDEST PUSH2 0x31AA JUMP JUMPDEST SWAP1 PUSH2 0x321B JUMP JUMPDEST SWAP5 PUSH2 0x31C9 JUMP JUMPDEST PUSH1 0x11 SWAP1 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x14CE SWAP2 SWAP3 POP DUP5 PUSH2 0x2683 JUMP JUMPDEST EQ DUP5 DUP12 PUSH2 0x143C JUMP JUMPDEST PUSH1 0x11 DUP5 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH3 0xF4240 DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x309 PUSH2 0xCED PUSH2 0x154C PUSH2 0x1542 PUSH2 0x149E PUSH2 0xCE7 PUSH2 0x2EE PUSH2 0xCE1 PUSH2 0x304 PUSH2 0x1533 CALLDATASIZE PUSH2 0x26F8 JUMP JUMPDEST SWAP9 SWAP5 SWAP7 SWAP3 SWAP13 SWAP2 DUP14 SWAP12 SWAP2 SWAP5 PUSH2 0x2E60 JUMP JUMPDEST SWAP8 PUSH2 0x149E DUP10 PUSH2 0x31C9 JUMP JUMPDEST PUSH2 0x321B JUMP JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x5A9 JUMPI PUSH2 0x1582 PUSH2 0xCED PUSH2 0x14A3 PUSH2 0x1542 PUSH2 0x149E PUSH2 0x157C PUSH2 0x2EE PUSH2 0x2E8 PUSH2 0x304 PUSH2 0x1533 CALLDATASIZE PUSH2 0x26F8 JUMP JUMPDEST DUP3 PUSH2 0x321B JUMP JUMPDEST SWAP2 PUSH8 0xDE0B6B3A7640000 SWAP1 DUP2 DUP5 MUL SWAP4 DUP1 ISZERO SWAP1 DUP1 DUP7 DIV DUP5 EQ DUP3 OR ISZERO PUSH2 0x1303 JUMPI SWAP1 DUP4 PUSH2 0x15B4 SWAP3 DUP3 ISZERO PUSH2 0x15DD JUMPI JUMPDEST POP POP PUSH2 0x2DBA JUMP JUMPDEST PUSH8 0x6F05B59D3B20000 DUP5 ADD SWAP3 DUP4 DUP6 GT PUSH2 0x14AF JUMPI POP PUSH2 0x15D6 PUSH1 0x20 SWAP5 DUP5 LT ISZERO PUSH2 0x2DBA JUMP JUMPDEST MLOAD SWAP2 DIV DUP2 MSTORE RETURN JUMPDEST PUSH2 0x15E9 SWAP2 SWAP3 POP DUP8 PUSH2 0x2683 JUMP JUMPDEST EQ DUP4 DUP8 PUSH2 0x15AD JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x7 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI PUSH1 0x9 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH5 0xE8D4A51000 DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x167B PUSH2 0x25DA JUMP JUMPDEST AND PUSH0 MSTORE PUSH0 DUP3 MSTORE DUP1 PUSH0 KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x5A9 JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI PUSH2 0x16A7 PUSH2 0x25DA JUMP JUMPDEST SWAP2 PUSH2 0x16B0 PUSH2 0x25F0 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 PUSH1 0x64 CALLDATALOAD DUP4 DUP2 AND SWAP2 SWAP1 DUP3 SWAP1 SUB PUSH2 0x5A9 JUMPI PUSH1 0x2 PUSH1 0x5 SLOAD EQ PUSH2 0x1AD0 JUMPI PUSH1 0x2 PUSH1 0x5 SSTORE DUP4 DUP4 AND SWAP4 DUP8 AND SWAP3 DUP5 DUP5 EQ PUSH2 0x1A8D JUMPI DUP7 ISZERO PUSH2 0x1A4A JUMPI PUSH2 0x16F9 DUP2 PUSH2 0x2AFF JUMP JUMPDEST SWAP8 PUSH2 0x1703 DUP2 PUSH2 0x2AFF JUMP JUMPDEST SWAP1 PUSH2 0x3E8 SWAP1 DUP2 PUSH2 0x1712 DUP3 PUSH2 0x2CAB JUMP JUMPDEST DIV SWAP11 PUSH8 0xDE0B6B3A7640000 SWAP12 DUP13 DUP2 MUL SWAP1 DUP14 DUP2 DUP4 DIV EQ SWAP1 ISZERO OR ISZERO PUSH2 0x1A37 JUMPI DUP13 SWAP1 DUP5 PUSH2 0x173B DUP9 PUSH2 0x2CAB JUMP JUMPDEST DIV DUP3 DUP2 MUL SWAP3 DUP2 DUP5 DIV EQ SWAP1 ISZERO OR ISZERO PUSH2 0x19CB JUMPI PUSH2 0x176C SWAP2 PUSH2 0x2E8 PUSH2 0x1760 PUSH2 0x1767 SWAP4 DUP10 PUSH2 0x2E60 JUMP JUMPDEST SWAP2 DUP6 PUSH2 0x2E60 JUMP JUMPDEST PUSH2 0x313D JUMP JUMPDEST SWAP3 DUP13 DUP2 PUSH2 0x1778 DUP6 PUSH2 0x2CAB JUMP JUMPDEST DIV DUP2 DUP2 MUL SWAP2 DUP2 DUP4 DIV EQ SWAP1 ISZERO OR ISZERO PUSH2 0x19CB JUMPI DUP14 SWAP1 DUP3 PUSH2 0x1795 DUP10 PUSH2 0x2CAB JUMP JUMPDEST DIV DUP3 DUP2 MUL SWAP3 DUP2 DUP5 DIV EQ SWAP1 ISZERO OR ISZERO PUSH2 0x1A24 JUMPI SWAP1 PUSH2 0x17B0 SWAP2 PUSH2 0x2E60 JUMP JUMPDEST DUP13 PUSH8 0xDE0B6B3A763FFE2 DUP1 DUP3 MUL SWAP2 DUP3 DIV DUP2 SUB PUSH2 0x1A11 JUMPI PUSH2 0x17DB SWAP1 DUP16 PUSH2 0x17D5 SWAP1 DUP5 PUSH2 0x2683 JUMP JUMPDEST EQ PUSH2 0x30FE JUMP JUMPDEST PUSH8 0x6F05B59D3B20000 DUP2 ADD SWAP1 DUP2 DUP2 GT PUSH2 0x1A11 JUMPI DUP16 SWAP3 PUSH2 0x2EE PUSH2 0x1814 PUSH2 0x1820 SWAP6 DUP6 PUSH2 0x180D PUSH2 0xCED SWAP7 PUSH2 0x181A SWAP9 LT ISZERO PUSH2 0x30FE JUMP JUMPDEST DIV DUP12 PUSH2 0x2EC5 JUMP JUMPDEST DUP11 PUSH2 0x2E60 JUMP JUMPDEST DUP4 PUSH2 0x31AA JUMP JUMPDEST SWAP5 PUSH1 0x1 DUP7 LT PUSH2 0x19DE JUMPI SWAP1 DUP1 PUSH2 0x184C DUP16 SWAP5 SWAP4 DUP16 PUSH2 0x1840 DUP11 SWAP2 PUSH2 0x1846 SWAP4 PUSH2 0x2EC5 JUMP JUMPDEST SWAP6 PUSH2 0x321B JUMP JUMPDEST SWAP6 PUSH2 0x2CAB JUMP JUMPDEST DIV DUP4 DUP2 MUL SWAP4 DUP2 DUP6 DIV EQ SWAP1 ISZERO OR ISZERO PUSH2 0x19CB JUMPI SWAP1 DUP14 SWAP3 SWAP2 PUSH2 0x186A DUP9 PUSH2 0x2CAB JUMP JUMPDEST DIV DUP4 DUP2 MUL SWAP4 DUP2 DUP6 DIV EQ SWAP1 ISZERO OR ISZERO PUSH2 0x19CB JUMPI PUSH2 0x1767 DUP6 SWAP5 PUSH2 0x2E8 PUSH2 0x18A5 SWAP6 PUSH2 0x1898 PUSH2 0x18AF SWAP10 SWAP7 PUSH2 0x189E SWAP7 PUSH2 0x2E60 JUMP JUMPDEST SWAP3 PUSH2 0x2E60 JUMP JUMPDEST LT ISZERO PUSH2 0x3225 JUMP JUMPDEST PUSH2 0x189E DUP4 DUP12 PUSH2 0x2E60 JUMP JUMPDEST DUP7 MLOAD PUSH4 0x313CE567 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x20 SWAP10 SWAP1 DUP11 DUP2 DUP7 DUP2 DUP12 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x19C1 JUMPI SWAP1 PUSH1 0xFF SWAP2 PUSH0 SWAP2 PUSH2 0x19A4 JUMPI JUMPDEST POP AND SWAP1 SUB PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 DUP2 DUP2 GT PUSH2 0x1303 JUMPI SWAP2 PUSH2 0x18FF SWAP2 PUSH2 0x1907 SWAP6 SWAP5 SWAP4 AND SWAP1 PUSH2 0x2683 JUMP JUMPDEST SWAP3 DUP4 SWAP2 PUSH2 0x2AFF JUMP JUMPDEST LT PUSH2 0x1968 JUMPI PUSH1 0x1E DUP3 MUL SWAP1 DUP3 DUP3 DIV PUSH1 0x1E EQ DUP4 ISZERO OR ISZERO PUSH2 0x14AF JUMPI POP PUSH2 0x1951 PUSH32 0xCD3829A3813DC3CDD188FD3D01DCF3268C16BE2FDD2DD21D0665418816E46062 SWAP3 PUSH2 0x2710 DUP9 SWAP4 DIV SWAP1 PUSH2 0x2767 JUMP JUMPDEST SWAP7 DUP2 MLOAD SWAP1 DUP2 MSTORE DUP8 DUP10 DUP3 ADD MSTORE LOG4 PUSH1 0x1 PUSH1 0x5 SSTORE MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP6 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x496E73756666696369656E74204C6971756964697479 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x19BB SWAP2 POP DUP13 DUP14 RETURNDATASIZE LT PUSH2 0x9B0 JUMPI PUSH2 0x9A2 DUP2 DUP4 PUSH2 0x27C0 JUMP JUMPDEST DUP13 PUSH2 0x18D8 JUMP JUMPDEST DUP10 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x11 DUP9 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP12 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP11 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x11549497D31253525517D3D555 PUSH1 0x9A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x11 DUP11 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x11 DUP10 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x11 DUP8 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP6 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP5 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E207A65726F PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP6 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP5 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F742073776170207468652073616D6520746F6B656E000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP5 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE REVERT JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI PUSH1 0x6 SLOAD PUSH2 0x1AFB DUP2 PUSH2 0x28A7 JUMP JUMPDEST SWAP1 PUSH0 JUMPDEST DUP2 DUP2 LT PUSH2 0x1B1A JUMPI DUP4 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 SWAP1 PUSH2 0x4AF SWAP1 DUP3 ADD DUP7 PUSH2 0x271E JUMP JUMPDEST DUP1 PUSH2 0x1B26 PUSH1 0x1 SWAP3 PUSH2 0x2774 JUMP JUMPDEST POP DUP3 DUP1 PUSH1 0xA0 SHL SUB SWAP1 SLOAD AND PUSH2 0x1B3A DUP3 DUP7 PUSH2 0x28D9 JUMP JUMPDEST MSTORE ADD PUSH2 0x1AFE JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH1 0x1E DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x309 PUSH2 0x1B9C PUSH2 0x2E8 PUSH2 0xCED PUSH2 0x149E PUSH2 0x149E PUSH2 0x14A9 PUSH2 0x148F PUSH2 0x154C PUSH2 0x304 PUSH2 0x1B8C CALLDATASIZE PUSH2 0x26F8 JUMP JUMPDEST SWAP11 SWAP5 SWAP8 SWAP4 SWAP2 DUP9 SWAP7 SWAP3 SWAP15 SWAP2 SWAP15 PUSH2 0x2E60 JUMP JUMPDEST SWAP13 DUP3 PUSH2 0x2EC5 JUMP JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x5A9 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x5A9 JUMPI PUSH2 0x1BBD PUSH2 0x25DA JUMP JUMPDEST SWAP2 PUSH2 0x1BC6 PUSH2 0x25F0 JUMP JUMPDEST PUSH2 0x1BCF DUP5 PUSH2 0x2AFF JUMP JUMPDEST POP PUSH2 0x1BD9 DUP2 PUSH2 0x2AFF JUMP JUMPDEST POP DUP2 MLOAD PUSH4 0x313CE567 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x20 SWAP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP7 DUP2 DUP8 DUP2 DUP6 DUP8 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x1CDA JUMPI SWAP1 PUSH1 0xFF SWAP2 PUSH0 SWAP2 PUSH2 0x1CBD JUMPI JUMPDEST POP AND SWAP2 PUSH1 0xC SLOAD AND SWAP2 PUSH1 0x4D DUP2 GT PUSH2 0x1CAA JUMPI DUP5 MLOAD PUSH4 0x248391FF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP7 DUP2 ADD SWAP7 DUP8 MSTORE SWAP4 SWAP1 SWAP2 AND PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0xA EXP PUSH1 0x40 DUP6 ADD MSTORE SWAP1 SWAP3 DUP5 SWAP2 DUP5 SWAP2 DUP3 SWAP1 DUP2 SWAP1 PUSH1 0x60 ADD SUB SWAP2 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x1CA0 JUMPI PUSH0 SWAP3 PUSH2 0x1C71 JUMPI JUMPDEST POP MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 SWAP2 POP DUP3 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x1C99 JUMPI JUMPDEST PUSH2 0x1C89 DUP2 DUP4 PUSH2 0x27C0 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x5A9 JUMPI MLOAD SWAP1 DUP4 PUSH2 0x1C6A JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1C7F JUMP JUMPDEST POP MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x11 DUP7 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1CD4 SWAP2 POP DUP9 RETURNDATASIZE DUP11 GT PUSH2 0x9B0 JUMPI PUSH2 0x9A2 DUP2 DUP4 PUSH2 0x27C0 JUMP JUMPDEST DUP9 PUSH2 0x1C0D JUMP JUMPDEST DUP6 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI PUSH1 0x20 PUSH2 0x1CF5 CALLDATASIZE PUSH2 0x26C3 JUMP JUMPDEST PUSH1 0xC SLOAD DUP6 MLOAD PUSH4 0x248391FF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND SWAP8 DUP2 ADD SWAP8 DUP9 MSTORE SWAP3 DUP5 AND PUSH1 0x20 DUP9 ADD MSTORE PUSH1 0x40 DUP8 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP5 DUP6 SWAP3 SWAP1 DUP4 SWAP1 SUB PUSH1 0x60 ADD SWAP2 DUP4 SWAP2 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x1D83 JUMPI PUSH0 SWAP2 PUSH2 0x1D4E JUMPI JUMPDEST PUSH1 0x20 SWAP3 POP MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 POP PUSH1 0x20 DUP3 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1D7B JUMPI JUMPDEST DUP2 PUSH2 0x1D69 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x27C0 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x5A9 JUMPI PUSH1 0x20 SWAP2 MLOAD SWAP1 PUSH2 0x1D44 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x1D5C JUMP JUMPDEST MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI PUSH2 0x4AF PUSH2 0x1DA8 PUSH2 0x2BA2 JUMP JUMPDEST DUP4 SWAP3 SWAP2 SWAP3 MLOAD SWAP4 DUP5 SWAP4 DUP5 MSTORE DUP1 PUSH1 0x20 DUP6 ADD MSTORE DUP4 ADD SWAP1 PUSH2 0x2606 JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH1 0x12 DUP2 MSTORE RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x5A9 JUMPI PUSH2 0x1DEB CALLDATASIZE PUSH2 0x26C3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE DUP9 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 MSTORE SWAP1 DUP8 SWAP1 KECCAK256 SLOAD SWAP3 SWAP6 SWAP4 SWAP5 SWAP4 SWAP1 DUP4 ADD PUSH2 0x1E28 JUMPI JUMPDEST PUSH1 0x20 DUP8 PUSH2 0xD91 DUP9 DUP9 DUP9 PUSH2 0x2CF8 JUMP JUMPDEST DUP6 DUP4 LT PUSH2 0x1E90 JUMPI DUP2 ISZERO PUSH2 0x1E7A JUMPI CALLER ISZERO PUSH2 0x1E64 JUMPI POP PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE DUP7 DUP3 KECCAK256 CALLER DUP4 MSTORE DUP2 MSTORE SWAP1 DUP7 SWAP1 KECCAK256 SWAP2 DUP6 SWAP1 SUB SWAP1 SWAP2 SSTORE DUP3 SWAP1 PUSH2 0xD91 PUSH2 0x1E1A JUMP JUMPDEST PUSH1 0x24 SWAP1 PUSH0 DUP9 MLOAD SWAP2 PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x24 SWAP1 PUSH0 DUP9 MLOAD SWAP2 PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST DUP7 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE CALLER SWAP2 DUP2 ADD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 DUP2 ADD DUP7 SWAP1 MSTORE DUP3 SWAP2 POP PUSH1 0x60 ADD SUB SWAP1 REVERT JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI PUSH1 0x6 SLOAD PUSH2 0x1ED9 DUP2 PUSH2 0x28A7 JUMP JUMPDEST SWAP1 PUSH0 JUMPDEST DUP2 DUP2 LT PUSH2 0x1EF8 JUMPI DUP4 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 SWAP1 PUSH2 0x4AF SWAP1 DUP3 ADD DUP7 PUSH2 0x2606 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH2 0x1F05 DUP2 SWAP4 PUSH2 0x2774 JUMP JUMPDEST POP ADD SLOAD PUSH2 0x1F12 DUP3 DUP7 PUSH2 0x28D9 JUMP JUMPDEST MSTORE ADD PUSH2 0x1EDC JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x1F35 PUSH2 0x2BA2 JUMP JUMPDEST POP SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH4 0x5F5E100 DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x2 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x5A9 JUMPI PUSH2 0x1F92 PUSH2 0x25DA JUMP JUMPDEST PUSH2 0x1F9A PUSH2 0x25F0 JUMP JUMPDEST SWAP3 PUSH2 0x1FA4 DUP3 PUSH2 0x2AFF JUMP JUMPDEST SWAP4 PUSH2 0x1FAE DUP2 PUSH2 0x2AFF JUMP JUMPDEST DUP5 MLOAD PUSH4 0x313CE567 PUSH1 0xE0 SHL DUP1 DUP3 MSTORE PUSH1 0x20 SWAP8 SWAP2 SWAP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP10 DUP8 DUP6 DUP2 DUP12 DUP10 AND GAS STATICCALL SWAP7 DUP8 ISZERO PUSH2 0x19C1 JUMPI SWAP1 DUP11 SWAP2 PUSH0 SWAP9 PUSH2 0x20DB JUMPI JUMPDEST POP DUP5 DUP11 MLOAD DUP1 SWAP8 DUP2 SWAP4 DUP3 MSTORE DUP10 AND GAS STATICCALL SWAP4 DUP5 ISZERO PUSH2 0x20D1 JUMPI PUSH0 SWAP5 PUSH2 0x20B2 JUMPI JUMPDEST POP PUSH8 0xDE0B6B3A7640000 SWAP6 DUP7 DUP3 MUL SWAP2 DUP1 DUP4 DIV DUP9 EQ SWAP1 ISZERO OR ISZERO PUSH2 0x14D6 JUMPI SWAP1 PUSH1 0xFF PUSH2 0x202D SWAP3 AND SWAP1 PUSH2 0x2767 JUMP JUMPDEST SWAP3 DUP6 DUP3 MUL SWAP2 DUP1 DUP4 DIV DUP8 EQ SWAP1 ISZERO OR ISZERO PUSH2 0x209F JUMPI PUSH2 0x205C SWAP2 PUSH1 0xFF PUSH2 0x2050 SWAP3 AND SWAP1 PUSH2 0x2767 JUMP JUMPDEST SWAP6 PUSH2 0x3E8 SWAP2 DUP3 SWAP2 PUSH2 0x2CAB JUMP JUMPDEST DIV SWAP4 DUP6 DUP6 MUL SWAP5 DUP1 DUP7 DIV DUP8 EQ SWAP1 ISZERO OR ISZERO PUSH2 0x209F JUMPI PUSH2 0x2078 SWAP1 PUSH2 0x2CAB JUMP JUMPDEST DIV DUP5 DUP2 MUL SWAP5 DUP2 DUP7 DIV EQ SWAP1 ISZERO OR ISZERO PUSH2 0x14AF JUMPI POP PUSH2 0x1767 SWAP3 PUSH2 0x1898 PUSH2 0x309 SWAP6 SWAP4 PUSH2 0x2E8 SWAP4 PUSH2 0x2E60 JUMP JUMPDEST PUSH1 0x11 DUP4 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x20CA SWAP2 SWAP5 POP DUP10 RETURNDATASIZE DUP12 GT PUSH2 0x9B0 JUMPI PUSH2 0x9A2 DUP2 DUP4 PUSH2 0x27C0 JUMP JUMPDEST SWAP3 DUP10 PUSH2 0x2003 JUMP JUMPDEST DUP9 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x20F3 SWAP2 SWAP9 POP DUP3 RETURNDATASIZE DUP5 GT PUSH2 0x9B0 JUMPI PUSH2 0x9A2 DUP2 DUP4 PUSH2 0x27C0 JUMP JUMPDEST SWAP7 DUP12 PUSH2 0x1FE7 JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x5A9 JUMPI PUSH2 0x2113 PUSH2 0x25DA JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER ISZERO PUSH2 0x218C JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x2176 JUMPI PUSH1 0x20 SWAP4 POP CALLER PUSH0 MSTORE PUSH1 0x1 DUP5 MSTORE DUP3 PUSH0 KECCAK256 DUP3 PUSH0 MSTORE DUP5 MSTORE DUP1 DUP4 PUSH0 KECCAK256 SSTORE DUP3 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 CALLER SWAP3 LOG3 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST DUP3 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 DUP2 DUP7 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP3 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 DUP2 DUP7 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI PUSH2 0x4AF SWAP1 PUSH2 0x21BF PUSH2 0x28ED JUMP JUMPDEST SWAP1 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x2606 JUMP JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x5A9 JUMPI PUSH1 0x20 SWAP2 DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x5A9 JUMPI PUSH2 0x21EF PUSH2 0x25DA JUMP JUMPDEST SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP4 PUSH2 0x2207 DUP6 PUSH1 0x9 SLOAD AND CALLER EQ PUSH2 0x280E JUMP JUMPDEST PUSH2 0x2212 PUSH2 0x34D PUSH2 0x2AA9 JUMP JUMPDEST PUSH2 0x221A PUSH2 0x2BA2 JUMP JUMPDEST PUSH1 0x6 SLOAD SWAP5 SWAP2 PUSH2 0x2228 DUP7 PUSH2 0x28A7 JUMP JUMPDEST SWAP2 PUSH0 JUMPDEST DUP8 DUP2 LT PUSH2 0x2444 JUMPI POP POP POP PUSH0 SWAP1 PUSH0 JUMPDEST DUP7 DUP2 LT PUSH2 0x2425 JUMPI POP PUSH1 0xB SLOAD DUP4 MLOAD PUSH4 0x313CE567 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 DUP10 AND SWAP3 DUP6 DUP3 DUP9 DUP2 DUP8 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x1CDA JUMPI PUSH0 SWAP3 PUSH2 0x2406 JUMPI JUMPDEST POP PUSH1 0xFF PUSH8 0xDE0B6B3A7640000 SWAP3 AND DUP3 SUB SWAP2 DUP3 GT PUSH2 0x1A37 JUMPI PUSH2 0x2293 SWAP2 PUSH2 0x228D SWAP2 PUSH2 0x2639 JUMP JUMPDEST SWAP7 PUSH2 0x28A7 JUMP JUMPDEST SWAP6 PUSH0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x23AE JUMPI PUSH2 0x22A9 DUP2 DUP5 PUSH2 0x28D9 JUMP JUMPDEST MLOAD PUSH2 0x22B7 JUMPI JUMPDEST PUSH1 0x1 ADD PUSH2 0x2296 JUMP JUMPDEST PUSH2 0x22C1 DUP2 DUP5 PUSH2 0x28D9 JUMP JUMPDEST MLOAD DUP7 DUP12 PUSH2 0x22CD DUP5 PUSH2 0x2774 JUMP JUMPDEST POP SLOAD PUSH1 0xC SLOAD DUP10 MLOAD PUSH4 0x248391FF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 DUP2 AND DUP15 DUP4 ADD SWAP1 DUP2 MSTORE SWAP5 SWAP1 SWAP4 AND SWAP1 SWAP3 AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP3 DUP4 SWAP2 DUP3 SWAP1 SUB PUSH1 0x60 ADD SWAP1 DUP3 SWAP1 DUP16 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x11C1 JUMPI PUSH0 SWAP2 PUSH2 0x2381 JUMPI JUMPDEST POP DUP1 ISZERO PUSH2 0x233E JUMPI SWAP1 PUSH1 0x1 SWAP2 PUSH2 0x2336 DUP3 DUP12 PUSH2 0x28D9 JUMP JUMPDEST MSTORE SWAP1 POP PUSH2 0x22AF JUMP JUMPDEST DUP6 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP10 ADD DUP9 SWAP1 MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420746F6B656E20616D6F756E7420746F206164640000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 POP DUP7 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x23A7 JUMPI JUMPDEST PUSH2 0x2398 DUP2 DUP4 PUSH2 0x27C0 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x5A9 JUMPI MLOAD DUP12 PUSH2 0x2321 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x238E JUMP JUMPDEST DUP8 DUP7 PUSH2 0x4AF DUP8 DUP7 PUSH2 0x23BF DUP8 DUP16 PUSH2 0x2C36 JUMP JUMPDEST PUSH32 0xA95AD530009C6F929555E70A66AADBEAE7231E45756C5B028CA77FBAA376E73E DUP3 MLOAD DUP6 DUP2 MSTORE DUP1 PUSH2 0x23F4 CALLER SWAP5 DUP9 DUP4 ADD SWAP1 PUSH2 0x2606 JUMP JUMPDEST SUB SWAP1 LOG2 MLOAD SWAP3 DUP3 DUP5 SWAP4 DUP5 MSTORE DUP4 ADD SWAP1 PUSH2 0x2606 JUMP JUMPDEST PUSH2 0x241E SWAP2 SWAP3 POP DUP7 RETURNDATASIZE DUP9 GT PUSH2 0x9B0 JUMPI PUSH2 0x9A2 DUP2 DUP4 PUSH2 0x27C0 JUMP JUMPDEST SWAP1 DUP11 PUSH2 0x2269 JUMP JUMPDEST SWAP2 PUSH2 0x243D PUSH1 0x1 SWAP2 PUSH2 0x2436 DUP6 DUP6 PUSH2 0x28D9 JUMP JUMPDEST MLOAD SWAP1 PUSH2 0x275A JUMP JUMPDEST SWAP3 ADD PUSH2 0x2239 JUMP JUMPDEST DUP1 PUSH2 0x2710 PUSH2 0x2460 PUSH1 0x1 PUSH2 0x2457 DUP2 SWAP6 PUSH2 0x2774 JUMP JUMPDEST POP ADD SLOAD DUP7 PUSH2 0x2639 JUMP JUMPDEST DIV DUP1 PUSH2 0x246C DUP4 DUP7 PUSH2 0x28D9 JUMP JUMPDEST MLOAD LT PUSH2 0x247A JUMPI JUMPDEST POP ADD PUSH2 0x222B JUMP JUMPDEST PUSH2 0x2488 SWAP1 PUSH2 0x541 DUP4 DUP7 PUSH2 0x28D9 JUMP JUMPDEST PUSH2 0x2492 DUP3 DUP8 PUSH2 0x28D9 JUMP JUMPDEST MSTORE DUP12 PUSH2 0x2473 JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI DUP1 MLOAD SWAP1 PUSH0 SWAP3 PUSH1 0x3 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 SHR SWAP2 PUSH1 0x1 DUP2 AND DUP1 ISZERO PUSH2 0x2583 JUMPI JUMPDEST PUSH1 0x20 SWAP5 DUP6 DUP6 LT DUP3 EQ PUSH2 0x2570 JUMPI POP DUP4 DUP8 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x2550 JUMPI POP PUSH1 0x1 EQ PUSH2 0x24F6 JUMPI JUMPDEST POP POP POP PUSH2 0xE82 DUP3 PUSH2 0x4AF SWAP5 SUB DUP4 PUSH2 0x27C0 JUMP JUMPDEST PUSH1 0x3 PUSH0 SWAP1 DUP2 MSTORE SWAP3 SWAP6 POP PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B JUMPDEST DUP3 DUP5 LT PUSH2 0x253D JUMPI POP POP POP DUP3 PUSH2 0x4AF SWAP5 PUSH2 0xE82 SWAP3 DUP3 ADD ADD SWAP5 PUSH2 0x24E4 JUMP JUMPDEST DUP1 SLOAD DUP7 DUP6 ADD DUP9 ADD MSTORE SWAP3 DUP7 ADD SWAP3 DUP2 ADD PUSH2 0x2521 JUMP JUMPDEST PUSH1 0xFF NOT AND DUP7 DUP6 ADD MSTORE POP POP ISZERO ISZERO PUSH1 0x5 SHL DUP4 ADD ADD SWAP3 POP PUSH2 0xE82 DUP3 PUSH2 0x4AF PUSH2 0x24E4 JUMP JUMPDEST PUSH1 0x22 SWAP1 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP3 PUSH1 0x7F AND SWAP3 PUSH2 0x24C4 JUMP JUMPDEST CALLVALUE PUSH2 0x5A9 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH1 0x20 PUSH1 0x40 SWAP3 DUP2 DUP4 MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP2 DUP3 DUP3 DUP7 ADD MSTORE ADD DUP5 DUP5 ADD MCOPY PUSH0 DUP3 DUP3 ADD DUP5 ADD MSTORE PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x5A9 JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x5A9 JUMPI JUMP JUMPDEST SWAP1 DUP2 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP1 SWAP4 ADD SWAP4 ADD SWAP2 PUSH0 JUMPDEST DUP3 DUP2 LT PUSH2 0x2625 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x2617 JUMP JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x264C JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0x5A9 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH9 0x2B5E3AF16B1880000 DUP2 MSTORE RETURN JUMPDEST DUP2 ISZERO PUSH2 0x268D JUMPI DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0x5A9 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH8 0xDE0B6B3A7640000 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x60 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH1 0x4 CALLDATALOAD DUP3 DUP2 AND DUP2 SUB PUSH2 0x5A9 JUMPI SWAP2 PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 AND DUP2 SUB PUSH2 0x5A9 JUMPI SWAP1 PUSH1 0x44 CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0xC0 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x44 CALLDATALOAD SWAP1 PUSH1 0x64 CALLDATALOAD SWAP1 PUSH1 0x84 CALLDATALOAD SWAP1 PUSH1 0xA4 CALLDATALOAD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP1 SWAP4 ADD SWAP4 ADD SWAP2 PUSH0 JUMPDEST DUP3 DUP2 LT PUSH2 0x273D JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x272F JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x264C JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x264C JUMPI JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x27AC JUMPI PUSH1 0x6 PUSH0 MSTORE PUSH1 0x1 SHL PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F ADD SWAP1 PUSH0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x27E2 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x27E2 JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x2815 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x4F6E6C7920506572697068657279 PUSH1 0x90 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x2852 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x149958985B185B98D9481B9BDD081B9959591959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x5A9 JUMPI MLOAD PUSH1 0xFF DUP2 AND DUP2 SUB PUSH2 0x5A9 JUMPI SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x28B1 DUP3 PUSH2 0x27F6 JUMP JUMPDEST PUSH2 0x28BE PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x27C0 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP1 SWAP3 PUSH2 0x28CF PUSH1 0x1F NOT SWAP2 PUSH2 0x27F6 JUMP JUMPDEST ADD SWAP1 PUSH1 0x20 CALLDATASIZE SWAP2 ADD CALLDATACOPY JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x27AC JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD PUSH4 0xFA67079 PUSH1 0xE2 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 PUSH0 SWAP1 DUP3 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x29B7 JUMPI PUSH0 SWAP2 PUSH2 0x2929 JUMPI POP SWAP1 JUMP JUMPDEST SWAP1 POP RETURNDATASIZE DUP1 PUSH0 DUP4 RETURNDATACOPY PUSH2 0x293A DUP2 DUP4 PUSH2 0x27C0 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 SWAP1 DUP2 DUP2 DUP5 SUB SLT PUSH2 0x5A9 JUMPI DUP1 MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x5A9 JUMPI ADD SWAP2 DUP1 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x5A9 JUMPI DUP3 MLOAD PUSH2 0x2973 DUP2 PUSH2 0x27F6 JUMP JUMPDEST SWAP4 PUSH2 0x2981 PUSH1 0x40 MLOAD SWAP6 DUP7 PUSH2 0x27C0 JUMP JUMPDEST DUP2 DUP6 MSTORE DUP4 DUP1 DUP7 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x5A9 JUMPI DUP4 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x29A8 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP2 MLOAD DUP2 MSTORE SWAP1 DUP4 ADD SWAP1 DUP4 ADD PUSH2 0x299A JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x29CA PUSH2 0x2BA2 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x6 SLOAD SWAP1 PUSH2 0x29D9 DUP3 PUSH2 0x27F6 JUMP JUMPDEST SWAP2 PUSH2 0x29E7 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x27C0 JUMP JUMPDEST DUP1 DUP4 MSTORE PUSH1 0x1F NOT PUSH2 0x29F6 DUP3 PUSH2 0x27F6 JUMP JUMPDEST ADD CALLDATASIZE PUSH1 0x20 DUP6 ADD CALLDATACOPY PUSH2 0x2A06 DUP2 PUSH2 0x28A7 JUMP JUMPDEST SWAP5 PUSH0 JUMPDEST DUP3 DUP2 LT PUSH2 0x2A18 JUMPI POP POP POP POP SWAP2 SWAP1 JUMP JUMPDEST PUSH2 0x2A22 DUP2 DUP4 PUSH2 0x28D9 JUMP JUMPDEST MLOAD SWAP1 PUSH2 0x2710 SWAP2 DUP3 DUP2 MUL SWAP3 DUP2 DUP5 DIV EQ SWAP1 ISZERO OR ISZERO PUSH2 0x264C JUMPI PUSH2 0x2A44 DUP6 PUSH1 0x1 SWAP4 PUSH2 0x2683 JUMP JUMPDEST PUSH2 0x2A4D DUP3 PUSH2 0x2774 JUMP JUMPDEST POP DUP4 ADD SLOAD DUP4 SWAP2 DUP2 DUP2 GT ISZERO PUSH2 0x2A82 JUMPI SWAP1 PUSH2 0x2A65 SWAP2 PUSH2 0x2767 JUMP JUMPDEST PUSH2 0x2A6F DUP4 DUP12 PUSH2 0x28D9 JUMP JUMPDEST MSTORE PUSH2 0x2A7A DUP3 DUP9 PUSH2 0x28D9 JUMP JUMPDEST MSTORE JUMPDEST ADD PUSH2 0x2A09 JUMP JUMPDEST SWAP1 PUSH2 0x2A8D SWAP3 POP PUSH2 0x2767 JUMP JUMPDEST PUSH2 0x2A97 DUP3 DUP11 PUSH2 0x28D9 JUMP JUMPDEST MSTORE PUSH0 PUSH2 0x2AA3 DUP3 DUP9 PUSH2 0x28D9 JUMP JUMPDEST MSTORE PUSH2 0x2A7C JUMP JUMPDEST PUSH2 0x2AB1 PUSH2 0x29C2 JUMP JUMPDEST PUSH0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x2AF8 JUMPI PUSH2 0x2AC6 DUP2 DUP5 PUSH2 0x28D9 JUMP JUMPDEST MLOAD ISZERO ISZERO DUP1 PUSH2 0x2AE3 JUMPI JUMPDEST PUSH2 0x2ADB JUMPI PUSH1 0x1 ADD PUSH2 0x2AB3 JUMP JUMPDEST POP POP POP PUSH1 0x1 SWAP1 JUMP JUMPDEST POP PUSH2 0x2AEE DUP2 DUP4 PUSH2 0x28D9 JUMP JUMPDEST MLOAD PUSH1 0x7 SLOAD LT PUSH2 0x2ACF JUMP JUMPDEST POP POP POP PUSH0 SWAP1 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA3E113FB PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE SWAP2 PUSH1 0x20 SWAP2 DUP4 SWAP2 AND DUP2 DUP1 PUSH1 0x44 DUP2 ADD JUMPDEST SUB SWAP2 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x29B7 JUMPI PUSH0 SWAP2 PUSH2 0x2B48 JUMPI POP SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x2B6F JUMPI JUMPDEST DUP2 PUSH2 0x2B63 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x27C0 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x5A9 JUMPI MLOAD SWAP1 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x2B56 JUMP JUMPDEST PUSH2 0x2B7F PUSH2 0x2BA2 JUMP JUMPDEST POP PUSH1 0x2 SLOAD DUP1 ISZERO PUSH2 0x2B9C JUMPI PUSH2 0x90A PUSH2 0x2B99 SWAP3 PUSH1 0x8 SLOAD SWAP1 PUSH2 0x2639 JUMP JUMPDEST SWAP1 JUMP JUMPDEST POP POP PUSH0 SWAP1 JUMP JUMPDEST PUSH1 0x6 SLOAD SWAP1 PUSH0 PUSH2 0x2BB0 DUP4 PUSH2 0x28A7 JUMP JUMPDEST PUSH1 0xB SLOAD SWAP1 SWAP4 PUSH0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 JUMPDEST DUP3 DUP5 LT PUSH2 0x2BD3 JUMPI POP POP POP POP SWAP2 SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 PUSH2 0x2C12 PUSH1 0x1 SWAP2 DUP4 PUSH2 0x2BE7 DUP9 PUSH2 0x2774 JUMP JUMPDEST POP SLOAD AND PUSH2 0x2BF3 DUP2 PUSH2 0x2AFF JUMP JUMPDEST SWAP1 DUP7 DUP2 SUB PUSH2 0x2C1C JUMPI POP PUSH2 0x2C06 DUP9 DUP12 PUSH2 0x28D9 JUMP JUMPDEST MSTORE JUMPDEST PUSH2 0x2436 DUP8 DUP11 PUSH2 0x28D9 JUMP JUMPDEST SWAP5 ADD SWAP3 SWAP2 SWAP1 PUSH2 0x2BC4 JUMP JUMPDEST SWAP1 PUSH2 0x2C26 SWAP2 PUSH2 0x3263 JUMP JUMPDEST PUSH2 0x2C30 DUP9 DUP12 PUSH2 0x28D9 JUMP JUMPDEST MSTORE PUSH2 0x2C08 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x2C93 JUMPI PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x20 DUP3 PUSH2 0x2C77 PUSH0 SWAP5 PUSH1 0x2 SLOAD PUSH2 0x275A JUMP JUMPDEST PUSH1 0x2 SSTORE DUP5 DUP5 MSTORE DUP4 DUP3 MSTORE PUSH1 0x40 DUP5 KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x6 SLOAD SWAP1 PUSH0 JUMPDEST DUP3 DUP2 LT PUSH2 0x2CBF JUMPI POP POP POP PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x2CC8 DUP2 PUSH2 0x2774 JUMP JUMPDEST POP SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 AND EQ PUSH2 0x2CE4 JUMPI PUSH1 0x1 ADD PUSH2 0x2CB1 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP PUSH2 0x2CF2 SWAP2 POP PUSH2 0x2774 JUMP JUMPDEST POP ADD SLOAD SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND SWAP3 DUP4 ISZERO PUSH2 0x2DA2 JUMPI AND SWAP3 DUP4 ISZERO PUSH2 0x2C93 JUMPI DUP3 PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SLOAD SWAP1 DUP3 DUP3 LT PUSH2 0x2D70 JUMPI POP DUP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 PUSH1 0x20 SWAP3 DUP6 PUSH0 MSTORE PUSH0 DUP5 MSTORE SUB PUSH1 0x40 PUSH0 KECCAK256 SSTORE DUP5 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x2DC1 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x11549497D1125597D253951154939053 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP1 ISZERO PUSH2 0x2E2C JUMPI PUSH15 0xC097CE7BC90715B34B9F1000000000 SWAP1 DUP1 PUSH1 0x1 SHR DUP3 ADD DUP1 DUP4 GT PUSH2 0x264C JUMPI PUSH2 0x90A PUSH2 0x2B99 SWAP4 DUP3 LT ISZERO PUSH2 0x2DBA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x4552525F4449565F5A45524F PUSH1 0xA0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 DUP1 ISZERO PUSH2 0x2E2C JUMPI PUSH8 0xDE0B6B3A7640000 SWAP2 DUP3 DUP2 MUL SWAP1 DUP1 ISZERO DUP2 DUP4 DIV DUP6 EQ DUP2 OR ISZERO PUSH2 0x264C JUMPI PUSH2 0x2B99 SWAP5 PUSH2 0x2E98 SWAP3 DUP3 ISZERO PUSH2 0x2EB1 JUMPI POP POP PUSH2 0x2DBA JUMP JUMPDEST PUSH2 0x90A PUSH2 0x2EA8 DUP4 PUSH1 0x1 SHR DUP4 PUSH2 0x275A JUMP JUMPDEST SWAP2 DUP3 LT ISZERO PUSH2 0x2DBA JUMP JUMPDEST PUSH2 0x2EBD SWAP2 SWAP3 POP DUP5 PUSH2 0x2683 JUMP JUMPDEST EQ PUSH0 DUP1 PUSH2 0x15AD JUMP JUMPDEST SWAP1 PUSH2 0x2ED0 SWAP1 DUP3 PUSH2 0x275A JUMP JUMPDEST SWAP1 DUP2 LT PUSH2 0x2EDA JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x4552525F4144445F4F564552464C4F57 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 PUSH1 0x1 SWAP3 DUP4 DUP2 LT PUSH2 0x30C1 JUMPI PUSH8 0x1BC16D674EC7FFFF DUP2 GT PUSH2 0x3083 JUMPI PUSH8 0xDE0B6B3A7640000 SWAP2 DUP3 DUP2 DIV SWAP1 DUP4 DUP3 MUL SWAP2 DUP1 DUP4 DIV DUP6 EQ SWAP1 ISZERO OR ISZERO PUSH2 0x264C JUMPI PUSH2 0x2F57 DUP3 DUP6 SWAP3 PUSH2 0x321B JUMP JUMPDEST SWAP2 DIV SWAP2 DUP1 DUP7 DUP5 AND ISZERO PUSH2 0x307D JUMPI DUP2 JUMPDEST SWAP4 DUP8 SHR SWAP1 DUP2 JUMPDEST PUSH2 0x3050 JUMPI POP POP DUP2 ISZERO PUSH2 0x3048 JUMPI PUSH2 0x2F83 SWAP1 SWAP4 SWAP2 SWAP4 PUSH2 0x32A7 JUMP JUMPDEST DUP3 SWAP5 SWAP2 DUP4 SWAP2 PUSH0 SWAP3 DUP10 SWAP6 JUMPDEST PUSH4 0x5F5E100 DUP3 LT ISZERO PUSH2 0x2FAC JUMPI JUMPDEST POP POP POP POP POP POP POP PUSH2 0x2B99 SWAP3 SWAP4 POP PUSH2 0x31AA JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP8 DUP2 DUP10 MUL SWAP3 DUP10 DUP5 DIV DUP4 EQ DUP11 ISZERO OR ISZERO PUSH2 0x264C JUMPI DUP4 PUSH2 0x304 PUSH2 0x2FE9 SWAP3 PUSH2 0xCE1 PUSH2 0x2FE2 PUSH2 0x2FDC DUP12 SWAP10 PUSH2 0x3212 JUMP JUMPDEST DUP14 PUSH2 0x3319 JUMP JUMPDEST SWAP9 SWAP1 PUSH2 0x31AA JUMP JUMPDEST SWAP3 DUP4 ISZERO PUSH2 0x3041 JUMPI DUP5 PUSH2 0x3039 JUMPI JUMPDEST PUSH2 0x3031 JUMPI JUMPDEST DUP3 DUP7 ISZERO PUSH2 0x3022 JUMPI PUSH2 0x300B SWAP2 PUSH2 0x321B JUMP JUMPDEST SWAP8 JUMPDEST PUSH0 NOT DUP2 EQ PUSH2 0x264C JUMPI DUP11 ADD SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2F8D JUMP JUMPDEST PUSH2 0x302B SWAP2 PUSH2 0x2EC5 JUMP JUMPDEST SWAP8 PUSH2 0x300D JUMP JUMPDEST SWAP5 ISZERO SWAP5 PUSH2 0x2FFB JUMP JUMPDEST SWAP6 ISZERO SWAP6 PUSH2 0x2FF6 JUMP JUMPDEST POP SWAP8 PUSH2 0x2F9A JUMP JUMPDEST POP SWAP1 SWAP4 POP POP POP JUMP JUMPDEST DUP1 PUSH2 0x305A SWAP2 PUSH2 0x31AA JUMP JUMPDEST SWAP1 DUP8 DUP2 AND PUSH2 0x306C JUMPI JUMPDEST DUP8 SHR SWAP1 DUP2 PUSH2 0x2F6B JUMP JUMPDEST SWAP4 DUP2 PUSH2 0x3077 SWAP2 PUSH2 0x31AA JUMP JUMPDEST SWAP4 PUSH2 0x3063 JUMP JUMPDEST DUP5 PUSH2 0x2F65 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x8AA4A4BE84A09EAEBE8482A68ABEA89E9EBE90928E9 PUSH1 0x53 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x4552525F42504F575F424153455F544F4F5F4C4F57 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x3105 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x4552525F4D554C5F4F564552464C4F57 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH8 0xDE0B6B3A764001E SWAP1 DUP2 DUP2 MUL SWAP2 DUP2 ISZERO SWAP1 DUP3 DUP5 DIV DUP2 EQ DUP3 OR ISZERO PUSH2 0x264C JUMPI PUSH2 0x316B SWAP3 DUP3 ISZERO PUSH2 0x3196 JUMPI POP POP PUSH2 0x30FE JUMP JUMPDEST PUSH8 0x6F05B59D3B20000 DUP2 ADD DUP1 DUP3 GT PUSH2 0x264C JUMPI PUSH2 0x3192 PUSH8 0xDE0B6B3A7640000 SWAP3 DUP3 LT ISZERO PUSH2 0x30FE JUMP JUMPDEST DIV SWAP1 JUMP JUMPDEST PUSH2 0x31A2 SWAP2 SWAP3 POP DUP5 PUSH2 0x2683 JUMP JUMPDEST EQ PUSH0 DUP1 PUSH2 0x143C JUMP JUMPDEST PUSH2 0x316B SWAP1 PUSH2 0x31B8 DUP4 DUP3 PUSH2 0x2639 JUMP JUMPDEST SWAP3 DUP2 ISZERO SWAP2 DUP3 ISZERO PUSH2 0x3196 JUMPI POP POP PUSH2 0x30FE JUMP JUMPDEST PUSH2 0x31D2 SWAP1 PUSH2 0x32E0 JUMP JUMPDEST PUSH2 0x31D9 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x4552525F5355425F554E444552464C4F57 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x31D2 SWAP1 PUSH2 0x32A7 JUMP JUMPDEST SWAP1 PUSH2 0x31D2 SWAP2 PUSH2 0x3319 JUMP JUMPDEST ISZERO PUSH2 0x322C JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x8AA4A4BE9A82A890BE82A0A0A49EB PUSH1 0x8B SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0xC SLOAD PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH4 0x248391FF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP1 DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x20 SWAP2 DUP4 SWAP2 AND DUP2 DUP1 PUSH1 0x64 DUP2 ADD PUSH2 0x2B33 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP1 DUP3 LT PUSH2 0x32D0 JUMPI POP PUSH8 0xDE0B6B3A763FFFF NOT DUP2 ADD SWAP1 DUP2 GT PUSH2 0x264C JUMPI SWAP1 PUSH0 SWAP1 JUMP JUMPDEST SWAP1 DUP2 SUB SWAP1 DUP2 GT PUSH2 0x264C JUMPI SWAP1 PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 SWAP1 DUP1 DUP3 LT PUSH2 0x32FF JUMPI DUP2 SUB SWAP1 DUP2 GT PUSH2 0x264C JUMPI SWAP1 PUSH0 SWAP1 JUMP JUMPDEST PUSH8 0xDE0B6B3A763FFFF NOT DUP2 ADD SWAP2 POP DUP2 GT PUSH2 0x264C JUMPI SWAP1 PUSH1 0x1 SWAP1 JUMP JUMPDEST DUP2 DUP2 LT PUSH2 0x332F JUMPI SWAP1 PUSH2 0x332A SWAP2 PUSH2 0x2767 JUMP JUMPDEST SWAP1 PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x3338 SWAP2 PUSH2 0x2767 JUMP JUMPDEST SWAP1 PUSH1 0x1 SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB7 SHL MUL 0xD2 0xC9 0xC6 PUSH17 0x70ABD5EDD7AED54964FA1025337A855A65 JUMPDEST 0xA9 PUSH23 0x286C7BC78B64736F6C634300081900339016D09D72D40F 0xDA 0xE2 REVERT DUP13 0xEA 0xC6 0xB6 0x23 0x4C PUSH24 0x6214FD39C1CD1E609A0528C199300A26469706673582212 KECCAK256 0xE PUSH14 0xEB655F5A71CE04C035882674114A 0x2D 0x28 0x2C PUSH2 0xD02A 0xC8 SWAP3 STATICCALL 0xCE PUSH2 0x502D 0xF7 DUP8 SLT PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ","sourceMap":"1731:4718:16:-:0;;;;;;;1171:4:2;1163:13;;1731:4718:16;;;;;;1163:13:2;1731:4718:16;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":4187,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_address_13183":{"entryPoint":4165,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_array_address_dyn_fromMemory":{"entryPoint":4466,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_array_address_dyn":{"entryPoint":4358,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_and_zero_memory_array_array_address_dyn":{"entryPoint":4677,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_array_address_dyn":{"entryPoint":4263,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_bytes":{"entryPoint":4418,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":4209,"id":null,"parameterSlots":2,"returnSlots":0},"fun_checkInitializing":{"entryPoint":4896,"id":370,"parameterSlots":0,"returnSlots":0},"fun_checkOwner":{"entryPoint":4840,"id":122,"parameterSlots":0,"returnSlots":0},"fun_poolExist":{"entryPoint":4604,"id":4916,"parameterSlots":1,"returnSlots":1},"fun_transferOwnership_inner":{"entryPoint":4727,"id":null,"parameterSlots":1,"returnSlots":0},"fun_verifyCallResultFromTarget":{"entryPoint":4961,"id":1967,"parameterSlots":3,"returnSlots":1},"memory_array_index_access_address_dyn":{"entryPoint":4446,"id":null,"parameterSlots":2,"returnSlots":1},"storage_array_index_access_address_dyn":{"entryPoint":4287,"id":null,"parameterSlots":1,"returnSlots":2}},"generatedSources":[],"immutableReferences":{"468":[{"length":32,"start":1956},{"length":32,"start":2176}]},"linkReferences":{},"object":"60806040818152600480361015610014575f80fd5b5f3560e01c92836301d22ccd14611022575082632d5e94a7146107435782633069873b14610b1a57826341d1de9714610add5782634276b97b14610a5c5782634f1ef2861461080857826352d1902d14610791578263531aa03e14610743578263715018a6146106dc57826377aace1a146106b457826389345efb146106865782638da5cb5b146106525782638f2248bc14610565578263ad3cb1cc146104e5578263b4340e6a14610370578263b4ac686014610353578263c4d66de81461020257508163d88ff1f41461016e57508063e9b31cff1461012b5763f2fde38b146100fc575f80fd5b3461012757602036600319011261012757610125610118611045565b6101206112e8565b611277565b005b5f80fd5b3461012757602036600319011261012757610144611045565b61014c6112e8565b600380546001600160a01b0319166001600160a01b0392909216919091179055005b34610127575f3660031901126101275780515f8054808352818052602080840194927f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56392915b8282106101e2576101de86866101cc828b0383611071565b51918291602083526020830190611106565b0390f35b83546001600160a01b0316875295860195600193840193909101906101b4565b346101275760203660031901126101275761021b611045565b907ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0091825460ff81861c16159267ffffffffffffffff82168015908161034b575b6001149081610341575b159081610338575b5061032a575067ffffffffffffffff19811660011784558261030b575b50610294611320565b61029c611320565b6102a4611320565b6102ad33611277565b60018060a01b03166bffffffffffffffffffffffff60a01b60025416176002556102d357005b805460ff60401b1916905551600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d290602090a1005b68ffffffffffffffffff1916680100000000000000011783558461028b565b855163f92ee8a960e01b8152fd5b9050158761026e565b303b159150610266565b85915061025c565b5034610127575f366003190112610127576020905f549051908152f35b3461012757602036600319011261012757610389611045565b905f549161039683611245565b925f926001600160a01b039284919084165b8383106103fd575b505050506103bd82611245565b925f5b8381106103dc578551602080825281906101de90820188611106565b80836103ea6001938561115e565b51166103f6828861115e565b52016103c0565b8461040d849794989695986110bf565b90549060031b1c16908851976319f92b0b60e21b89525f898581865afa9889156104db575f996104b7575b505f5b89518110156104a9578287610450838d61115e565b51161461045f5760010161043b565b5093919094959750610471828961115e565b525f19811461049657600101945b865186146104915760010191926103a8565b6103b0565b601182634e487b7160e01b5f525260245ffd5b50939691509394965061047f565b6104d49199503d805f833e6104cc8183611071565b810190611172565b978a610438565b8a513d5f823e3d90fd5b9034610127575f366003190112610127578051918183019083821067ffffffffffffffff83111761055257508152600582526020820191640352e302e360dc1b83528151928391602083525180918160208501528484015e5f828201840152601f01601f19168101030190f35b604190634e487b7160e01b5f525260245ffd5b903461012757806003193601126101275761057e611045565b916024359267ffffffffffffffff90818516809503610127577ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00928354928660ff85881c16918215610645575b505061063757600280546001600160a01b0319166001600160a01b03841617905568ffffffffffffffffff1983168617600160401b1760ff60401b1916845584518681527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d290602090a1005b845163f92ee8a960e01b8152fd5b85161015905086886105cb565b5034610127575f366003190112610127575f8051602061509a8339815191525490516001600160a01b039091168152602090f35b5034610127576020366003190112610127576020906106ab6106a6611045565b6111fc565b90519015158152f35b5034610127575f3660031901126101275760035490516001600160a01b039091168152602090f35b34610127575f366003190112610127576106f46112e8565b5f8051602061509a83398151915280546001600160a01b031981169091555f906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b503461012757806003193601126101275760209061075f611045565b61076761105b565b6001600160a01b039182165f90815260018552838120918316815290845282902054915191168152f35b9034610127575f366003190112610127577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031630036107fb57602090517f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc8152f35b5163703e46dd60e11b8152fd5b816003193601126101275761081b611045565b602492833567ffffffffffffffff81116101275736602382011215610127578084013561084781611142565b9361085484519586611071565b818552602091828601933689838301011161012757815f928a8693018737870101526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116308114908115610a2e575b50610a1e576108b96112e8565b81169484516352d1902d60e01b8152838189818a5afa5f91816109ef575b506108f25750505050505191634c9c8ce360e01b8352820152fd5b9087878794938b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc918281036109da5750853b156109c6575080546001600160a01b031916821790558451907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b5f80a28251156109ac5750505f6101259581925190845af4913d156109a2573d61099461098b82611142565b92519283611071565b81525f81943d92013e611361565b5060609250611361565b94509450505050346109ba57005b63b398979f60e01b8152fd5b8651634c9c8ce360e01b8152808501849052fd5b8751632a87526960e21b815280860191909152fd5b9091508481813d8311610a17575b610a078183611071565b810103126101275751908a6108d7565b503d6109fd565b845163703e46dd60e11b81528790fd5b9050817f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc54161415896108ac565b34610127576020366003190112610127575f6001600160a01b03610a7e611045565b168351928380926319f92b0b60e21b82525afa908115610ad357916101de925f92610ab7575b5051918291602083526020830190611106565b610acc9192503d805f833e6104cc8183611071565b9083610aa4565b82513d5f823e3d90fd5b346101275760203660031901126101275735905f5482101561012757610b046020926110bf565b905491519160018060a01b039160031b1c168152f35b346101275760603660031901126101275767ffffffffffffffff91813583811161012757366023820112156101275780830135936024610b59866110a7565b92610b6685519485611071565b868452602096828886019160051b83010191368311610127578301905b8282106110035750505080358281116101275736602382011215610127578086013590610baf826110a7565b90610bbc87519283611071565b8282528882019260051b81018401908336831161012757858b9201905b838210610ff45750506003546001600160a01b0396604495935090871691508115610fbe576001948589511115610f7e578851855103610f31575f865b610e43575b5050866002541693895194613cd58087019387851090851117610e3157908695949392916113c58739825260a08d8301528c610c5a60a084018c611106565b8381038d8501529151808352910193905f888f5b838310610e1a57505050604435606084015250506080015203905ff08015610e10578316955f54600160401b811015610dfe5790610cb582848a9897969594015f556110bf565b81549060031b908689831b921b1916179055815f905b610d1d575b505050507f93de7d9de9f3e05ba87a0170fcbb71af623439caf5e5079587b9d38c5da9b0d191610d0f9160025416855192839287845287840190611106565b90888301520390a251908152f35b9091929394958651821015610df65750828101808211610de45783929190835b610d4f575b5082018896959493610ccb565b879391929351811015610ddb57819087610d69858b61115e565b51165f52818c52895f2088610d7e838c61115e565b51165f528c52895f206bffffffffffffffffffffffff60a01b908c8282541617905588610dab838c61115e565b51165f52828d528a5f2089610dc0878d61115e565b51165f528d528b8b5f20918254161790550181939291610d3d565b92919092610d42565b84601184634e487b7160e01b5f52525ffd5b959493610cd0565b83604183634e487b7160e01b5f52525ffd5b85513d5f823e3d90fd5b84518852899850968701969093019201888f610c6e565b8860418e634e487b7160e01b5f52525ffd5b8951811015610f2c57868101808211610f1a57879291908b8f8c8f875b610e73575b505050505082019091610c16565b909192939495968451861015610f0d575084610ea39183610e94898861115e565b51165f528d85525f209461115e565b51165f5252898c5f205416610ec2578792919083018b8f8c8f87610e60565b8b5162461bcd60e51b8152808e018f90526021818b01527f506f6f6c20616c72656164792065786973747320666f7220746869732070616981850152603960f91b6064820152608490fd5b9695945090839291610e65565b8860118e634e487b7160e01b5f52525ffd5b610c1b565b895162461bcd60e51b8152808c018d90526022818901527f41737365747320616e642077656967687473206c656e677468206d69736d61746044820152610c6d60f31b6064820152608490fd5b60648b8d89818e519362461bcd60e51b85528401528201527f4174206c656173742074776f20617373657473206172652072657175697265646044820152fd5b885162461bcd60e51b8152808b018c90526011818801527014195c9a5c1a195c9e481b9bdd081cd95d607a1b6044820152606490fd5b81358152908201908201610bd9565b81356001600160a01b0381168103610127578152908801908801610b83565b34610127575f366003190112610127576002546001600160a01b03168152602090f35b600435906001600160a01b038216820361012757565b602435906001600160a01b038216820361012757565b90601f8019910116810190811067ffffffffffffffff82111761109357604052565b634e487b7160e01b5f52604160045260245ffd5b67ffffffffffffffff81116110935760051b60200190565b5f548110156110f2575f80527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56301905f90565b634e487b7160e01b5f52603260045260245ffd5b9081518082526020808093019301915f5b828110611125575050505090565b83516001600160a01b031685529381019392810192600101611117565b67ffffffffffffffff811161109357601f01601f191660200190565b80518210156110f25760209160051b010190565b60209081818403126101275780519067ffffffffffffffff821161012757019180601f840112156101275782516111a8816110a7565b936111b66040519586611071565b818552838086019260051b820101928311610127578301905b8282106111dd575050505090565b81516001600160a01b03811681036101275781529083019083016111cf565b5f905f54915b828110611210575050505f90565b611219816110bf565b905460039190911b1c6001600160a01b039081169083161461123d57600101611202565b505050600190565b9061124f826110a7565b61125c6040519182611071565b828152809261126d601f19916110a7565b0190602036910137565b6001600160a01b039081169081156112d0575f8051602061509a83398151915280546001600160a01b031981168417909155167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e05f80a3565b604051631e4fbdf760e01b81525f6004820152602490fd5b5f8051602061509a833981519152546001600160a01b0316330361130857565b60405163118cdaa760e01b8152336004820152602490fd5b60ff7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a005460401c161561134f57565b604051631afcd79f60e31b8152600490fd5b90611388575080511561137657805190602001fd5b604051630a12f52160e11b8152600490fd5b815115806113bb575b611399575090565b604051639996b31560e01b81526001600160a01b039091166004820152602490fd5b50803b1561139156fe6080806040523461043957613cd5803803809161001c82856108fe565b8339810160a0828203126104395761003382610921565b60208301519091906001600160401b0381116104395783019181601f840112156104395782519261006384610935565b9361007160405195866108fe565b80855260208086019160051b8301019184831161043957602001905b8282106108cb5750505060408401516001600160401b0381116104395784019180601f840112156104395782516100c381610935565b936100d160405195866108fe565b81855260208086019260051b82010192831161043957602001905b8282106108bb57505050610107608060608601519501610921565b604051610113816108e3565b6009815268042616c756e69204c560bc1b602082015260405190610136826108e3565b6009825268042414c554e492d4c560bc1b60208301528051906001600160401b0382116104965760035490600182811c921680156108b1575b60208310146107925781601f849311610843575b50602090601f83116001146107bb575f926107b0575b50508160011b915f199060031b1c1916176003555b8051906001600160401b0382116104965760045490600182811c921680156107a6575b60208310146107925781601f849311610724575b50602090601f83116001146106a0575f92610695575b50508160011b915f199060031b1c1916176004555b6001600555600980546001600160a01b03199081166001600160a01b0393841617909155600a8054821633179055600c8054909116918316919091179055670de0b6b3a76400006008558251825103610645575f5b8351811015610525576001600160a01b03610280828661094c565b5116156104e057610291818461094c565b51156104aa576001600160a01b036102a9828661094c565b51166102b5828561094c565b5160408051929083018084116001600160401b0390911117610496576040830160405282526020820152600654680100000000000000008110156104965760018101806006558110156104825760065f5281517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f60019290921b91820180546001600160a01b039283166001600160a01b03199091161790556020909201517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d4090910155610383828661094c565b511660018060a01b03600c5416604051636eb1769f60e11b8152306004820152816024820152602081604481865afa908115610445575f91610450575b50156103d1575b5050600101610265565b5f916044602092604051948593849263095ea7b360e01b84526004840152811960248401525af1801561044557610409575b806103c7565b6020813d60201161043d575b81610422602093836108fe565b81010312610439575180151503610439575f610403565b5f80fd5b3d9150610415565b6040513d5f823e3d90fd5b90506020813d60201161047a575b8161046b602093836108fe565b8101031261043957515f6103c0565b3d915061045e565b634e487b7160e01b5f52603260045260245ffd5b634e487b7160e01b5f52604160045260245ffd5b60405162461bcd60e51b815260206004820152600e60248201526d125b9d985b1a59081dd95a59da1d60921b6044820152606490fd5b60405162461bcd60e51b815260206004820152601560248201527f496e76616c6964206173736574206164647265737300000000000000000000006044820152606490fd5b5060078490556040516389a3027160e01b815290602090829060049082906001600160a01b03165afa908115610445575f9161060b575b50600b80546001600160a01b0319166001600160a01b03929092169190911790555f90815b81518310156105bd57610594838361094c565b5181018091116105a957600190920191610581565b634e487b7160e01b5f52601160045260245ffd5b612710036105d45760405161337490816109618239f35b60405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964207765696768747360881b6044820152606490fd5b90506020813d60201161063d575b81610626602093836108fe565b810103126104395761063790610921565b8261055c565b3d9150610619565b60405162461bcd60e51b815260206004820152602260248201527f41737365747320616e642077656967687473206c656e677468206d69736d61746044820152610c6d60f31b6064820152608490fd5b015190505f806101fb565b60045f9081527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b9350601f198516905b81811061070c57509084600195949392106106f4575b505050811b01600455610210565b01515f1960f88460031b161c191690555f80806106e6565b929360206001819287860151815501950193016106d0565b60045f529091507f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b601f840160051c81019160208510610788575b90601f859493920160051c01905b81811061077a57506101e5565b5f815584935060010161076d565b909150819061075f565b634e487b7160e01b5f52602260045260245ffd5b91607f16916101d1565b015190505f80610199565b60035f90815293507fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b91905b601f1984168510610828576001945083601f19811610610810575b505050811b016003556101ae565b01515f1960f88460031b161c191690555f8080610802565b818101518355602094850194600190930192909101906107e7565b60035f529091507fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b601f840160051c810191602085106108a7575b90601f859493920160051c01905b8181106108995750610183565b5f815584935060010161088c565b909150819061087e565b91607f169161016f565b81518152602091820191016100ec565b602080916108d884610921565b81520191019061008d565b604081019081106001600160401b0382111761049657604052565b601f909101601f19168101906001600160401b0382119082101761049657604052565b51906001600160a01b038216820361043957565b6001600160401b0381116104965760051b60200190565b80518210156104825760209160051b01019056fe6080604081815260049182361015610015575f80fd5b5f925f3560e01c91826301d22ccd1461258d5750816306fdde03146124995781630723c999146121d25781630902f1ac146121a2578163095ea7b3146120fa57816309a3bbe4146106ec5781630d0fa02914611f7957816318160ddd14611f5b578163189d00ca14611f3d5781631a68650214611f19578163218b538214610c3d57816322acb86714611ebc57816323b872dd14611ddb578163313ce56714611dc057816336bf6e3914611d8c5781634aa0665214611ce457816358d1969814611ba35781635c1bbaf714611b5c57816367a6c44014611b4157816367e4ac2c14611ade5781636e81221c1461168c57816370a082311461165657816376c7a3c71461163757816377aace1a1461160f5781637fec8d38146115f157816382f652ad146115515781638656b65314611506578163867378c5146114e957816389298012146113f557816389ab35321461138b57816389afcb4414610f6c5781638a77c8dc14610f475781639381cd2b14610f2457816395d89b4114610e26578163992e2a9214610e045781639a86139b14610de1578163a221ee4914610d98578163a9059cbb14610d68578163b0e0d13614610d4d578163b2b55d7014610d28578163b7b800a414610d0d578163ba019dab14610cf2578163ba9530a614610ca4578163bc063e1a14610c82578163bc694ea214610c60578163c2ee3a0814610c42578163c36596a614610c3d578163c45a015514610c15578163c6580d1214610bfb578163cdf456e114610bd3578163cf8fa76414610b5b578163d14ef46d14610b0f578163dd62ed3e14610ac6578163de836ebd146106f1578163e4a28a52146106ec578163e73faa2d146106d0578163ec093021146106ae578163f47b45e814610314575063f8d6aed4146102ab575f80fd5b34610310576020906103096102e86103046102ee6102fe6102f86102f36102e16102d4366126f8565b99949b9293909591612e60565b938261321b565b90612e60565b612f12565b613212565b916131c9565b926131aa565b612e60565b9051908152f35b5080fd5b8284346105a9576003195f368201126105a9576009546001600160a01b03949085169161034233841461280e565b61035261034d612aa9565b61284b565b6006549361035f856128a7565b93610369866128a7565b97610373876128a7565b9261037d886128a7565b94610387896128a7565b9a6103918a6128a7565b995f5b8181106105f55750506103a56128ed565b84600c54169160075486600b5416843b156105a9578e51633c2fddc560e21b815260e0818e01528d9990968795869591906103e49060e4880190612606565b9b60249c828882030160248901526103fb9161271e565b9086820301604487015261040e91612606565b92606485015280608485015260a484015260c483015203815a5f948591f180156105eb576105be575b50600654600954909690831692825b8881106104b3578c8c6104af8d8d7f279b343370f587af7fb675ae7c8578e9c8abcc373236ad02c501a4771fe7a7b88451602081528061048b3394602083019061271e565b0390a26104a18351948486958652850190612606565b908382036020850152612606565b0390f35b816104be828c6128d9565b51168c5180916370a0823160e01b82528786830152818960209485935afa9182156105b4578f908a94938f91938d948a92610573575b505094849160019661050684876128d9565b5261051183866128d9565b5161051c84846128d9565b5110156105565750610548906105418361053a8161054e97986128d9565b51926128d9565b5190612767565b926128d9565b525b01610446565b9361056d93506105418361053a81610548956128d9565b52610550565b9450955050505082813d83116105ad575b61058e81836127c0565b810103126105a957888e828a8f6001965191968193506104f4565b5f80fd5b503d610584565b8e513d88823e3d90fd5b905067ffffffffffffffff81116105d85788525f8a610437565b604186634e487b7160e01b5f525260245ffd5b8a513d5f823e3d90fd5b856105ff82612774565b50541661060c828d6128d9565b52600161061882612774565b50015461062582856128d9565b5285610631828d6128d9565b5116908d5180926370a0823160e01b8252898d83015281602460209384935afa9081156106a4575f91610675575b506001925061066e828b6128d9565b5201610394565b905082813d831161069d575b61068b81836127c0565b810103126105a957600191515f61065f565b503d610681565b8f513d5f823e3d90fd5b82346105a9575f3660031901126105a957602090516706f05b59d3b200008152f35b82346105a9575f3660031901126105a957602090610309612b77565b612660565b82346105a957806003193601126105a95761070a6125da565b9060249182359367ffffffffffffffff85116105a957366023860112156105a9578481013593610739856127f6565b94610746855196876127c0565b808652602096828888019260051b820101913683116105a95783899201905b838210610ab75750506009546001600160a01b0397925061078a91508716331461280e565b600254905f906107986128ed565b9060065491518203610a75578115610a4757905f915b818310610a0e5750505080156109c157838888600b541688519283809263313ce56760e01b82525afa9081156109b7579060ff915f9161098a575b501691806108ec5750670de0b6b3a7640000808202918204036108da579061081091612767565b945b85156108a8576108438691335f525f8952865f2054956108328482612c36565b1694855f525f8952865f2054612767565b036108785750507f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d4121396885848351858152a251908152f35b835162461bcd60e51b8152918201869052600b908201526a135a5b9d0811985a5b195960aa1b6044820152606490fd5b845162461bcd60e51b8152808401889052600d818401526c04d696e7420717479206973203609c1b6044820152606490fd5b82601185634e487b7160e01b5f52525ffd5b6108f4612ba2565b509182156109395761090f929161090a91612639565b612683565b670de0b6b3a7640000908181029181830414901517156108da579061093391612767565b94610812565b875162461bcd60e51b81528087018b90526026818701527f546f74616c206c6971756964697479206d75737420626520677265617465722060448201526507468616e20360d41b6064820152608490fd5b6109aa91508a3d8c116109b0575b6109a281836127c0565b81019061288e565b8a6107e9565b503d610998565b87513d5f823e3d90fd5b855162461bcd60e51b81528085018990526022818501527f546f74616c2076616c7565206d7573742062652067726561746572207468616e604482015261020360f41b6064820152608490fd5b909192610a3e600191610a388c610a2488612774565b505416610a3188876128d9565b5190613263565b9061275a565b930191906107ae565b875162461bcd60e51b81528087018b9052600981870152684e6f2061737365747360b81b6044820152606490fd5b875162461bcd60e51b81528087018b90526017818701527f496e76616c6964207265736572766573206c656e6774680000000000000000006044820152606490fd5b81358152908201908201610765565b82346105a957806003193601126105a957602090610ae26125da565b610aea6125f0565b9060018060a01b038091165f5260018452825f2091165f528252805f20549051908152f35b9050346105a95760203660031901126105a957356006548110156105a957610b3690612774565b50805460019091015491516001600160a01b0390911681526020810191909152604090f35b9050346105a95760203660031901126105a957803590610b79612ba2565b8092915051831015610b9a57602084610b9285856128d9565b519051908152f35b606490602085519162461bcd60e51b83528201526013602482015272092dcecc2d8d2c840c2e6e6cae840d2dcc8caf606b1b6044820152fd5b82346105a9575f3660031901126105a957600b5490516001600160a01b039091168152602090f35b82346105a9575f3660031901126105a957602090515f8152f35b82346105a9575f3660031901126105a957600a5490516001600160a01b039091168152602090f35b6126a1565b82346105a9575f3660031901126105a9576020906008549051908152f35b82346105a9575f3660031901126105a95760209051671bc16d674ec7ffff8152f35b82346105a9575f3660031901126105a9576020905167016345785d8a00008152f35b82346105a957602090610309610cdb610ce1610ced610ce76102ee610ce16102e8610cce366126f8565b989496929b919093612e60565b966131c9565b906131aa565b82612ec5565b6131c9565b82346105a9575f3660031901126105a9576020905160018152f35b82346105a9575f3660031901126105a9576020905160028152f35b82346105a95760203660031901126105a957602090610309610d486125da565b612aff565b82346105a9575f3660031901126105a9576020905160088152f35b82346105a957806003193601126105a957602090610d91610d876125da565b6024359033612cf8565b5160018152f35b82346105a95760a03660031901126105a957610309610dce610dc06020946024359035612e60565b6102e8606435604435612e60565b610ce1610ddc6084356131c9565b612df9565b82346105a9575f3660031901126105a957516542524f4e5a4560d01b8152602090f35b82346105a9575f3660031901126105a957602090516704a03ce68d2155568152f35b82346105a9575f3660031901126105a9578051905f9280549060018260011c9160018416938415610f1a575b6020948585108114610f0757848852908115610ee55750600114610e8c575b6104af8686610e82828b03836127c0565b51918291826125b0565b5f9081529295507f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5b828410610ed257505050826104af94610e82928201019486610e71565b8054868501880152928601928101610eb5565b60ff191687860152505050151560051b8301019250610e82826104af86610e71565b602283634e487b7160e01b5f525260245ffd5b92607f1692610e52565b82346105a9575f3660031901126105a9576020905168056bc75e2d631000008152f35b82346105a9575f3660031901126105a957602090610f63612aa9565b90519015158152f35b82346105a957602090816003193601126105a957610f886125da565b6009546001600160a01b0390811691610fa233841461280e565b305f525f8552835f20549586156113485760025496871561131657600654610fc9816128a7565b98601e8302838104601e0361130357612710610fe791048094612767565b965f5b8381106112485750505050305f525f875284865f20541061120557818785600c54168851928380926361d027b360e01b82525afa9081156109b7579088915f916111cb575b50875163a9059cbb60e01b81526001600160a01b03909116848201908152602081019390935291829081906040015b03815f305af19081156111c1575f9161118b575b501561115257301561113c57305f525f8652845f205490848210611111575083927fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5926104af96958893305f525f855203865f205584600254036002555f86518681527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef853092a385519485521692a251928284938452830190612606565b855163391434e360e21b81523091810191825260208201929092526040810185905281906060010390fd5b6024905f865191634b637e8f60e11b8352820152fd5b845162461bcd60e51b81529081018690526013602482015272119959481d1c985b9cd9995c8819985a5b1959606a1b6044820152606490fd5b90508681813d83116111ba575b6111a281836127c0565b810103126105a9575180151581036105a95788611072565b503d611198565b86513d5f823e3d90fd5b82819392503d83116111fe575b6111e281836127c0565b810103126105a9575184811681036105a957879061105e61102f565b503d6111d8565b855162461bcd60e51b8152808301889052601d60248201527f496e73756666696369656e742042414c554e49206c69717569646974790000006044820152606490fd5b61128a8b8961125684612774565b50548d5163a3e113fb60e01b8152308b8201908152929091166001600160a01b031660208301529283918291604090910190565b0381865afa9081156112f9578a8593928f925f916112bf575b5061054860019561090a6112b8948794612639565b5201610fea565b94505050508b82813d83116112f2575b6112d981836127c0565b810103126105a95790518391908d908b906105486112a3565b503d6112cf565b8b513d5f823e3d90fd5b601185634e487b7160e01b5f525260245ffd5b855162461bcd60e51b8152808301889052600c60248201526b4e6f206c697175696469747960a01b6044820152606490fd5b845162461bcd60e51b8152908101869052601c60248201527f5368617265206d7573742062652067726561746572207468616e2030000000006044820152606490fd5b82346105a9575f3660031901126105a9576113a46129c2565b8251928391818301918352835180925260608301916020809501945f5b8281106113dc5785806104af87878382036020850152612606565b86511515855295810195879550938101936001016113c1565b82346105a957611411611407366126f8565b9591909293612e60565b95670de0b6b3a7640000918281029080159080830485148217156114d65790846114439282156114c2575b50506130fe565b6706f05b59d3b200008101918282116114af57506114a9856114a360209a9761149e61148f610ce199610304610ced9a8a6103099f9b61149e9b6114889110156130fe565b048261321b565b6114988b612df9565b90612f12565b6131aa565b9061321b565b946131c9565b601190634e487b7160e01b5f525260245ffd5b6114ce91925084612683565b14848b61143c565b601184634e487b7160e01b5f525260245ffd5b82346105a9575f3660031901126105a95760209051620f42408152f35b82346105a957602090610309610ced61154c61154261149e610ce76102ee610ce1610304611533366126f8565b989496929c918d9b9194612e60565b9761149e896131c9565b61321b565b9050346105a957611582610ced6114a361154261149e61157c6102ee6102e8610304611533366126f8565b8261321b565b91670de0b6b3a7640000908184029380159080860484148217156113035790836115b49282156115dd575b5050612dba565b6706f05b59d3b200008401928385116114af57506115d6602094841015612dba565b5191048152f35b6115e991925087612683565b1483876115ad565b82346105a9575f3660031901126105a9576020906007549051908152f35b82346105a9575f3660031901126105a95760095490516001600160a01b039091168152602090f35b82346105a9575f3660031901126105a9576020905164e8d4a510008152f35b82346105a95760203660031901126105a9576020906001600160a01b0361167b6125da565b165f525f8252805f20549051908152f35b9050346105a95760803660031901126105a9576116a76125da565b916116b06125f0565b604435926001600160a01b03919060643583811691908290036105a957600260055414611ad057600260055583831693871692848414611a8d578615611a4a576116f981612aff565b9761170381612aff565b906103e8908161171282612cab565b049a670de0b6b3a76400009b8c8102908d8183041490151715611a37578c908461173b88612cab565b048281029281840414901517156119cb5761176c916102e86117606117679389612e60565b9185612e60565b61313d565b928c8161177885612cab565b048181029181830414901517156119cb578d908261179589612cab565b04828102928184041490151715611a2457906117b091612e60565b8c670de0b6b3a763ffe28082029182048103611a11576117db908f6117d59084612683565b146130fe565b6706f05b59d3b20000810190818111611a11578f926102ee611814611820958561180d610ced9661181a9810156130fe565b048b612ec5565b8a612e60565b836131aa565b94600186106119de57908061184c8f94938f6118408a9161184693612ec5565b9561321b565b95612cab565b048381029381850414901517156119cb57908d929161186a88612cab565b048381029381850414901517156119cb5761176785946102e86118a5956118986118af999661189e96612e60565b92612e60565b1015613225565b61189e838b612e60565b865163313ce56760e01b8152602099908a8186818b5afa9081156119c1579060ff915f916119a4575b5016900367ffffffffffffffff9081811161130357916118ff916119079594931690612683565b928391612aff565b1061196857601e820290828204601e14831517156114af57506119517fcd3829a3813dc3cdd188fd3d01dcf3268c16be2fdd2dd21d0665418816e460629261271088930490612767565b9681519081528789820152a4600160055551908152f35b855162461bcd60e51b81529081018890526016602482015275496e73756666696369656e74204c697175696469747960501b6044820152606490fd5b6119bb91508c8d3d106109b0576109a281836127c0565b8c6118d8565b89513d5f823e3d90fd5b601188634e487b7160e01b5f525260245ffd5b8b5162461bcd60e51b81526020818a0152600d60248201526c11549497d31253525517d3d555609a1b6044820152606490fd5b60118a634e487b7160e01b5f525260245ffd5b601189634e487b7160e01b5f525260245ffd5b601187634e487b7160e01b5f525260245ffd5b855162461bcd60e51b8152602081840181905260248201527f416d6f756e74206d7573742062652067726561746572207468616e207a65726f6044820152606490fd5b855162461bcd60e51b8152602081840152601a60248201527f43616e6e6f742073776170207468652073616d6520746f6b656e0000000000006044820152606490fd5b8451633ee5aeb560e01b8152fd5b82346105a9575f3660031901126105a957600654611afb816128a7565b905f5b818110611b1a578351602080825281906104af9082018661271e565b80611b26600192612774565b50828060a01b03905416611b3a82866128d9565b5201611afe565b82346105a9575f3660031901126105a95760209051601e8152f35b82346105a957602090610309611b9c6102e8610ced61149e61149e6114a961148f61154c610304611b8c366126f8565b9a949793918896929e919e612e60565b9c82612ec5565b9050346105a957816003193601126105a957611bbd6125da565b91611bc66125f0565b611bcf84612aff565b50611bd981612aff565b50815163313ce56760e01b81526020946001600160a01b0391868187818587165afa908115611cda579060ff915f91611cbd575b501691600c541691604d8111611caa57845163248391ff60e01b81526001600160a01b03928316968101968752939091166020860152600a0a60408501529092849184918290819060600103915afa918215611ca0575f92611c71575b5051908152f35b9091508281813d8311611c99575b611c8981836127c0565b810103126105a957519083611c6a565b503d611c7f565b50513d5f823e3d90fd5b601186634e487b7160e01b5f525260245ffd5b611cd49150883d8a116109b0576109a281836127c0565b88611c0d565b85513d5f823e3d90fd5b82346105a9576020611cf5366126c3565b600c54855163248391ff60e01b81526001600160a01b03948516978101978852928416602088015260408701919091529094859290839003606001918391165afa908115611d83575f91611d4e575b6020925051908152f35b90506020823d602011611d7b575b81611d69602093836127c0565b810103126105a9576020915190611d44565b3d9150611d5c565b513d5f823e3d90fd5b82346105a9575f3660031901126105a9576104af611da8612ba2565b83929192519384938452806020850152830190612606565b82346105a9575f3660031901126105a9576020905160128152f35b9050346105a957611deb366126c3565b6001600160a01b0383165f81815260016020818152888320338452905290879020549295939493908301611e28575b602087610d91888888612cf8565b858310611e90578115611e7a573315611e6457505f90815260016020908152868220338352815290869020918590039091558290610d91611e1a565b6024905f885191634a1406b160e11b8352820152fd5b6024905f88519163e602df0560e01b8352820152fd5b8651637dc7a0d960e11b8152339181019182526020820193909352604081018690528291506060010390fd5b82346105a9575f3660031901126105a957600654611ed9816128a7565b905f5b818110611ef8578351602080825281906104af90820186612606565b806001611f058193612774565b500154611f1282866128d9565b5201611edc565b82346105a9575f3660031901126105a957602090611f35612ba2565b509051908152f35b82346105a9575f3660031901126105a957602090516305f5e1008152f35b82346105a9575f3660031901126105a9576020906002549051908152f35b82346105a957806003193601126105a957611f926125da565b611f9a6125f0565b92611fa482612aff565b93611fae81612aff565b845163313ce56760e01b80825260209791946001600160a01b039390929091898785818b89165afa9687156119c157908a915f986120db575b50848a5180978193825289165afa9384156120d1575f946120b2575b50670de0b6b3a764000095868202918083048814901517156114d6579060ff61202d921690612767565b928582029180830487149015171561209f5761205c9160ff612050921690612767565b956103e8918291612cab565b04938585029480860487149015171561209f5761207890612cab565b048481029481860414901517156114af57506117679261189861030995936102e893612e60565b601183634e487b7160e01b5f525260245ffd5b6120ca919450893d8b116109b0576109a281836127c0565b9289612003565b88513d5f823e3d90fd5b6120f3919850823d84116109b0576109a281836127c0565b968b611fe7565b82346105a957806003193601126105a9576121136125da565b60243590331561218c576001600160a01b03169081156121765760209350335f5260018452825f20825f52845280835f205582519081527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925843392a35160018152f35b8251634a1406b160e11b81525f81860152602490fd5b825163e602df0560e01b81525f81860152602490fd5b82346105a9575f3660031901126105a9576104af906121bf6128ed565b9051918291602083526020830190612606565b9050346105a957602091826003193601126105a9576121ef6125da565b9160018060a01b03936122078560095416331461280e565b61221261034d612aa9565b61221a612ba2565b6006549491612228866128a7565b915f5b878110612444575050505f905f5b8681106124255750600b54835163313ce56760e01b81529089169285828881875afa918215611cda575f92612406575b5060ff670de0b6b3a764000092168203918211611a37576122939161228d91612639565b966128a7565b955f5b82518110156123ae576122a981846128d9565b516122b7575b600101612296565b6122c181846128d9565b51868b6122cd84612774565b5054600c54895163248391ff60e01b81526001600160a01b038a81168e830190815294909316909216602084015260408301949094529283918290036060019082908f165afa9081156111c1575f91612381575b50801561233e5790600191612336828b6128d9565b5290506122af565b855162461bcd60e51b8152808901889052601b60248201527f496e76616c696420746f6b656e20616d6f756e7420746f2061646400000000006044820152606490fd5b90508681813d83116123a7575b61239881836127c0565b810103126105a957518b612321565b503d61238e565b87866104af87866123bf878f612c36565b7fa95ad530009c6f929555e70a66aadbeae7231e45756c5b028ca77fbaa376e73e8251858152806123f4339488830190612606565b0390a251928284938452830190612606565b61241e919250863d88116109b0576109a281836127c0565b908a612269565b9161243d60019161243685856128d9565b519061275a565b9201612239565b8061271061246060016124578195612774565b50015486612639565b048061246c83866128d9565b511061247a575b500161222b565b6124889061054183866128d9565b61249282876128d9565b528b612473565b82346105a9575f3660031901126105a9578051905f9260035460018160011c91600181168015612583575b6020948585108214612570575083875290811561255057506001146124f6575b505050610e82826104af9403836127c0565b60035f9081529295507fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b82841061253d57505050826104af94610e8292820101946124e4565b8054868501880152928601928101612521565b60ff1916868501525050151560051b8301019250610e82826104af6124e4565b602290634e487b7160e01b5f525260245ffd5b92607f16926124c4565b346105a9575f3660031901126105a957600c546001600160a01b03168152602090f35b602060409281835280519182918282860152018484015e5f828201840152601f01601f1916010190565b600435906001600160a01b03821682036105a957565b602435906001600160a01b03821682036105a957565b9081518082526020808093019301915f5b828110612625575050505090565b835185529381019392810192600101612617565b8181029291811591840414171561264c57565b634e487b7160e01b5f52601160045260245ffd5b346105a9575f3660031901126105a95760206040516802b5e3af16b18800008152f35b811561268d570490565b634e487b7160e01b5f52601260045260245ffd5b346105a9575f3660031901126105a9576020604051670de0b6b3a76400008152f35b60609060031901126105a9576001600160a01b039060043582811681036105a9579160243590811681036105a9579060443590565b60c09060031901126105a957600435906024359060443590606435906084359060a43590565b9081518082526020808093019301915f5b82811061273d575050505090565b83516001600160a01b03168552938101939281019260010161272f565b9190820180921161264c57565b9190820391821161264c57565b6006548110156127ac5760065f5260011b7ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f01905f90565b634e487b7160e01b5f52603260045260245ffd5b90601f8019910116810190811067ffffffffffffffff8211176127e257604052565b634e487b7160e01b5f52604160045260245ffd5b67ffffffffffffffff81116127e25760051b60200190565b1561281557565b60405162461bcd60e51b815260206004820152600e60248201526d4f6e6c792050657269706865727960901b6044820152606490fd5b1561285257565b60405162461bcd60e51b8152602060048201526014602482015273149958985b185b98d9481b9bdd081b995959195960621b6044820152606490fd5b908160209103126105a9575160ff811681036105a95790565b906128b1826127f6565b6128be60405191826127c0565b82815280926128cf601f19916127f6565b0190602036910137565b80518210156127ac5760209160051b010190565b600954604051630fa6707960e21b8152306004820152905f90829060249082906001600160a01b03165afa9081156129b7575f91612929575090565b90503d805f833e61293a81836127c0565b81019060209081818403126105a95780519067ffffffffffffffff82116105a957019180601f840112156105a9578251612973816127f6565b9361298160405195866127c0565b818552838086019260051b8201019283116105a9578301905b8282106129a8575050505090565b8151815290830190830161299a565b6040513d5f823e3d90fd5b6129ca612ba2565b9190600654906129d9826127f6565b916129e760405193846127c0565b808352601f196129f6826127f6565b01366020850137612a06816128a7565b945f5b828110612a1857505050509190565b612a2281836128d9565b51906127109182810292818404149015171561264c57612a4485600193612683565b612a4d82612774565b50830154839181811115612a825790612a6591612767565b612a6f838b6128d9565b52612a7a82886128d9565b525b01612a09565b90612a8d9250612767565b612a97828a6128d9565b525f612aa382886128d9565b52612a7c565b612ab16129c2565b5f5b8151811015612af857612ac681846128d9565b51151580612ae3575b612adb57600101612ab3565b505050600190565b50612aee81836128d9565b5160075410612acf565b5050505f90565b60095460405163a3e113fb60e01b81523060048201526001600160a01b039283166024820152916020918391168180604481015b03915afa9081156129b7575f91612b48575090565b90506020813d602011612b6f575b81612b63602093836127c0565b810103126105a9575190565b3d9150612b56565b612b7f612ba2565b506002548015612b9c5761090a612b999260085490612639565b90565b50505f90565b600654905f612bb0836128a7565b600b5490935f916001600160a01b03908116905b828410612bd357505050509190565b90919293612c1260019183612be788612774565b505416612bf381612aff565b90868103612c1c5750612c06888b6128d9565b525b612436878a6128d9565b9401929190612bc4565b90612c2691613263565b612c30888b6128d9565b52612c08565b6001600160a01b0316908115612c93577fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef602082612c775f9460025461275a565b60025584845283825260408420818154019055604051908152a3565b60405163ec442f0560e01b81525f6004820152602490fd5b600654905f5b828110612cbf575050505f90565b612cc881612774565b50546001600160a01b03838116911614612ce457600101612cb1565b60019250612cf29150612774565b50015490565b916001600160a01b03808416928315612da25716928315612c9357825f525f60205260405f205490828210612d705750817fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92602092855f525f84520360405f2055845f5260405f20818154019055604051908152a3565b60405163391434e360e21b81526001600160a01b03919091166004820152602481019190915260448101829052606490fd5b604051634b637e8f60e11b81525f6004820152602490fd5b15612dc157565b60405162461bcd60e51b815260206004820152601060248201526f11549497d1125597d25395115493905360821b6044820152606490fd5b8015612e2c576ec097ce7bc90715b34b9f1000000000908060011c820180831161264c5761090a612b9993821015612dba565b60405162461bcd60e51b815260206004820152600c60248201526b4552525f4449565f5a45524f60a01b6044820152606490fd5b908015612e2c57670de0b6b3a764000091828102908015818304851481171561264c57612b9994612e98928215612eb1575050612dba565b61090a612ea88360011c8361275a565b91821015612dba565b612ebd91925084612683565b145f806115ad565b90612ed0908261275a565b908110612eda5790565b60405162461bcd60e51b815260206004820152601060248201526f4552525f4144445f4f564552464c4f5760801b6044820152606490fd5b91906001928381106130c157671bc16d674ec7ffff811161308357670de0b6b3a764000091828104908382029180830485149015171561264c57612f5782859261321b565b910491808684161561307d57815b93871c90815b613050575050811561304857612f83909391936132a7565b82949183915f9289955b6305f5e100821015612fac575b50505050505050612b999293506131aa565b909192939495978189029289840483148a15171561264c5783610304612fe992610ce1612fe2612fdc8b99613212565b8d613319565b98906131aa565b9283156130415784613039575b613031575b8286156130225761300b9161321b565b975b5f19811461264c578a01959493929190612f8d565b61302b91612ec5565b9761300d565b941594612ffb565b951595612ff6565b5097612f9a565b509093505050565b8061305a916131aa565b9087811661306c575b871c9081612f6b565b9381613077916131aa565b93613063565b84612f65565b60405162461bcd60e51b815260206004820152601660248201527508aa4a4be84a09eaebe8482a68abea89e9ebe90928e960531b6044820152606490fd5b60405162461bcd60e51b81526020600482015260156024820152744552525f42504f575f424153455f544f4f5f4c4f5760581b6044820152606490fd5b1561310557565b60405162461bcd60e51b815260206004820152601060248201526f4552525f4d554c5f4f564552464c4f5760801b6044820152606490fd5b670de0b6b3a764001e9081810291811590828404811482171561264c5761316b9282156131965750506130fe565b6706f05b59d3b20000810180821161264c57613192670de0b6b3a7640000928210156130fe565b0490565b6131a291925084612683565b145f8061143c565b61316b906131b88382612639565b9281159182156131965750506130fe565b6131d2906132e0565b6131d95790565b60405162461bcd60e51b81526020600482015260116024820152704552525f5355425f554e444552464c4f5760781b6044820152606490fd5b6131d2906132a7565b906131d291613319565b1561322c57565b60405162461bcd60e51b815260206004820152600f60248201526e08aa4a4be9a82a890be82a0a0a49eb608b1b6044820152606490fd5b600c54600b5460405163248391ff60e01b81526001600160a01b03938416600482015290831660248201526044810193909352602091839116818060648101612b33565b670de0b6b3a76400008082106132d05750670de0b6b3a763ffff19810190811161264c57905f90565b90810390811161264c5790600190565b670de0b6b3a7640000908082106132ff57810390811161264c57905f90565b670de0b6b3a763ffff1981019150811161264c5790600190565b81811061332f579061332a91612767565b905f90565b61333891612767565b9060019056fea2646970667358221220b71b02d2c9c67070abd5edd7aed54964fa1025337a855a655ba976286c7bc78b64736f6c634300081900339016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300a26469706673582212200e6deb655f5a71ce04c035882674114a2d282c61d02ac892face61502df7871264736f6c63430008190033","opcodes":"PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 DUP1 CALLDATASIZE LT ISZERO PUSH2 0x14 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR SWAP3 DUP4 PUSH4 0x1D22CCD EQ PUSH2 0x1022 JUMPI POP DUP3 PUSH4 0x2D5E94A7 EQ PUSH2 0x743 JUMPI DUP3 PUSH4 0x3069873B EQ PUSH2 0xB1A JUMPI DUP3 PUSH4 0x41D1DE97 EQ PUSH2 0xADD JUMPI DUP3 PUSH4 0x4276B97B EQ PUSH2 0xA5C JUMPI DUP3 PUSH4 0x4F1EF286 EQ PUSH2 0x808 JUMPI DUP3 PUSH4 0x52D1902D EQ PUSH2 0x791 JUMPI DUP3 PUSH4 0x531AA03E EQ PUSH2 0x743 JUMPI DUP3 PUSH4 0x715018A6 EQ PUSH2 0x6DC JUMPI DUP3 PUSH4 0x77AACE1A EQ PUSH2 0x6B4 JUMPI DUP3 PUSH4 0x89345EFB EQ PUSH2 0x686 JUMPI DUP3 PUSH4 0x8DA5CB5B EQ PUSH2 0x652 JUMPI DUP3 PUSH4 0x8F2248BC EQ PUSH2 0x565 JUMPI DUP3 PUSH4 0xAD3CB1CC EQ PUSH2 0x4E5 JUMPI DUP3 PUSH4 0xB4340E6A EQ PUSH2 0x370 JUMPI DUP3 PUSH4 0xB4AC6860 EQ PUSH2 0x353 JUMPI DUP3 PUSH4 0xC4D66DE8 EQ PUSH2 0x202 JUMPI POP DUP2 PUSH4 0xD88FF1F4 EQ PUSH2 0x16E JUMPI POP DUP1 PUSH4 0xE9B31CFF EQ PUSH2 0x12B JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0xFC JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x127 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x127 JUMPI PUSH2 0x125 PUSH2 0x118 PUSH2 0x1045 JUMP JUMPDEST PUSH2 0x120 PUSH2 0x12E8 JUMP JUMPDEST PUSH2 0x1277 JUMP JUMPDEST STOP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x127 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x127 JUMPI PUSH2 0x144 PUSH2 0x1045 JUMP JUMPDEST PUSH2 0x14C PUSH2 0x12E8 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE STOP JUMPDEST CALLVALUE PUSH2 0x127 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x127 JUMPI DUP1 MLOAD PUSH0 DUP1 SLOAD DUP1 DUP4 MSTORE DUP2 DUP1 MSTORE PUSH1 0x20 DUP1 DUP5 ADD SWAP5 SWAP3 PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563 SWAP3 SWAP2 JUMPDEST DUP3 DUP3 LT PUSH2 0x1E2 JUMPI PUSH2 0x1DE DUP7 DUP7 PUSH2 0x1CC DUP3 DUP12 SUB DUP4 PUSH2 0x1071 JUMP JUMPDEST MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x1106 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST DUP4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 MSTORE SWAP6 DUP7 ADD SWAP6 PUSH1 0x1 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x1B4 JUMP JUMPDEST CALLVALUE PUSH2 0x127 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x127 JUMPI PUSH2 0x21B PUSH2 0x1045 JUMP JUMPDEST SWAP1 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP2 DUP3 SLOAD PUSH1 0xFF DUP2 DUP7 SHR AND ISZERO SWAP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND DUP1 ISZERO SWAP1 DUP2 PUSH2 0x34B JUMPI JUMPDEST PUSH1 0x1 EQ SWAP1 DUP2 PUSH2 0x341 JUMPI JUMPDEST ISZERO SWAP1 DUP2 PUSH2 0x338 JUMPI JUMPDEST POP PUSH2 0x32A JUMPI POP PUSH8 0xFFFFFFFFFFFFFFFF NOT DUP2 AND PUSH1 0x1 OR DUP5 SSTORE DUP3 PUSH2 0x30B JUMPI JUMPDEST POP PUSH2 0x294 PUSH2 0x1320 JUMP JUMPDEST PUSH2 0x29C PUSH2 0x1320 JUMP JUMPDEST PUSH2 0x2A4 PUSH2 0x1320 JUMP JUMPDEST PUSH2 0x2AD CALLER PUSH2 0x1277 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL PUSH1 0x2 SLOAD AND OR PUSH1 0x2 SSTORE PUSH2 0x2D3 JUMPI STOP JUMPDEST DUP1 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND SWAP1 SSTORE MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 SWAP1 LOG1 STOP JUMPDEST PUSH9 0xFFFFFFFFFFFFFFFFFF NOT AND PUSH9 0x10000000000000001 OR DUP4 SSTORE DUP5 PUSH2 0x28B JUMP JUMPDEST DUP6 MLOAD PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE REVERT JUMPDEST SWAP1 POP ISZERO DUP8 PUSH2 0x26E JUMP JUMPDEST ADDRESS EXTCODESIZE ISZERO SWAP2 POP PUSH2 0x266 JUMP JUMPDEST DUP6 SWAP2 POP PUSH2 0x25C JUMP JUMPDEST POP CALLVALUE PUSH2 0x127 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x127 JUMPI PUSH1 0x20 SWAP1 PUSH0 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x127 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x127 JUMPI PUSH2 0x389 PUSH2 0x1045 JUMP JUMPDEST SWAP1 PUSH0 SLOAD SWAP2 PUSH2 0x396 DUP4 PUSH2 0x1245 JUMP JUMPDEST SWAP3 PUSH0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP5 SWAP2 SWAP1 DUP5 AND JUMPDEST DUP4 DUP4 LT PUSH2 0x3FD JUMPI JUMPDEST POP POP POP POP PUSH2 0x3BD DUP3 PUSH2 0x1245 JUMP JUMPDEST SWAP3 PUSH0 JUMPDEST DUP4 DUP2 LT PUSH2 0x3DC JUMPI DUP6 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 SWAP1 PUSH2 0x1DE SWAP1 DUP3 ADD DUP9 PUSH2 0x1106 JUMP JUMPDEST DUP1 DUP4 PUSH2 0x3EA PUSH1 0x1 SWAP4 DUP6 PUSH2 0x115E JUMP JUMPDEST MLOAD AND PUSH2 0x3F6 DUP3 DUP9 PUSH2 0x115E JUMP JUMPDEST MSTORE ADD PUSH2 0x3C0 JUMP JUMPDEST DUP5 PUSH2 0x40D DUP5 SWAP8 SWAP5 SWAP9 SWAP7 SWAP6 SWAP9 PUSH2 0x10BF JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND SWAP1 DUP9 MLOAD SWAP8 PUSH4 0x19F92B0B PUSH1 0xE2 SHL DUP10 MSTORE PUSH0 DUP10 DUP6 DUP2 DUP7 GAS STATICCALL SWAP9 DUP10 ISZERO PUSH2 0x4DB JUMPI PUSH0 SWAP10 PUSH2 0x4B7 JUMPI JUMPDEST POP PUSH0 JUMPDEST DUP10 MLOAD DUP2 LT ISZERO PUSH2 0x4A9 JUMPI DUP3 DUP8 PUSH2 0x450 DUP4 DUP14 PUSH2 0x115E JUMP JUMPDEST MLOAD AND EQ PUSH2 0x45F JUMPI PUSH1 0x1 ADD PUSH2 0x43B JUMP JUMPDEST POP SWAP4 SWAP2 SWAP1 SWAP5 SWAP6 SWAP8 POP PUSH2 0x471 DUP3 DUP10 PUSH2 0x115E JUMP JUMPDEST MSTORE PUSH0 NOT DUP2 EQ PUSH2 0x496 JUMPI PUSH1 0x1 ADD SWAP5 JUMPDEST DUP7 MLOAD DUP7 EQ PUSH2 0x491 JUMPI PUSH1 0x1 ADD SWAP2 SWAP3 PUSH2 0x3A8 JUMP JUMPDEST PUSH2 0x3B0 JUMP JUMPDEST PUSH1 0x11 DUP3 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP4 SWAP7 SWAP2 POP SWAP4 SWAP5 SWAP7 POP PUSH2 0x47F JUMP JUMPDEST PUSH2 0x4D4 SWAP2 SWAP10 POP RETURNDATASIZE DUP1 PUSH0 DUP4 RETURNDATACOPY PUSH2 0x4CC DUP2 DUP4 PUSH2 0x1071 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x1172 JUMP JUMPDEST SWAP8 DUP11 PUSH2 0x438 JUMP JUMPDEST DUP11 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 CALLVALUE PUSH2 0x127 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x127 JUMPI DUP1 MLOAD SWAP2 DUP2 DUP4 ADD SWAP1 DUP4 DUP3 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT OR PUSH2 0x552 JUMPI POP DUP2 MSTORE PUSH1 0x5 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 PUSH5 0x352E302E3 PUSH1 0xDC SHL DUP4 MSTORE DUP2 MLOAD SWAP3 DUP4 SWAP2 PUSH1 0x20 DUP4 MSTORE MLOAD DUP1 SWAP2 DUP2 PUSH1 0x20 DUP6 ADD MSTORE DUP5 DUP5 ADD MCOPY PUSH0 DUP3 DUP3 ADD DUP5 ADD MSTORE PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SUB ADD SWAP1 RETURN JUMPDEST PUSH1 0x41 SWAP1 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP1 CALLVALUE PUSH2 0x127 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x127 JUMPI PUSH2 0x57E PUSH2 0x1045 JUMP JUMPDEST SWAP2 PUSH1 0x24 CALLDATALOAD SWAP3 PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 DUP2 DUP6 AND DUP1 SWAP6 SUB PUSH2 0x127 JUMPI PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP3 DUP4 SLOAD SWAP3 DUP7 PUSH1 0xFF DUP6 DUP9 SHR AND SWAP2 DUP3 ISZERO PUSH2 0x645 JUMPI JUMPDEST POP POP PUSH2 0x637 JUMPI PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND OR SWAP1 SSTORE PUSH9 0xFFFFFFFFFFFFFFFFFF NOT DUP4 AND DUP7 OR PUSH1 0x1 PUSH1 0x40 SHL OR PUSH1 0xFF PUSH1 0x40 SHL NOT AND DUP5 SSTORE DUP5 MLOAD DUP7 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 SWAP1 LOG1 STOP JUMPDEST DUP5 MLOAD PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE REVERT JUMPDEST DUP6 AND LT ISZERO SWAP1 POP DUP7 DUP9 PUSH2 0x5CB JUMP JUMPDEST POP CALLVALUE PUSH2 0x127 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x127 JUMPI PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x509A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x127 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x127 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x6AB PUSH2 0x6A6 PUSH2 0x1045 JUMP JUMPDEST PUSH2 0x11FC JUMP JUMPDEST SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x127 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x127 JUMPI PUSH1 0x3 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x127 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x127 JUMPI PUSH2 0x6F4 PUSH2 0x12E8 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x509A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND SWAP1 SWAP2 SSTORE PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 STOP JUMPDEST POP CALLVALUE PUSH2 0x127 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x127 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x75F PUSH2 0x1045 JUMP JUMPDEST PUSH2 0x767 PUSH2 0x105B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 DUP6 MSTORE DUP4 DUP2 KECCAK256 SWAP2 DUP4 AND DUP2 MSTORE SWAP1 DUP5 MSTORE DUP3 SWAP1 KECCAK256 SLOAD SWAP2 MLOAD SWAP2 AND DUP2 MSTORE RETURN JUMPDEST SWAP1 CALLVALUE PUSH2 0x127 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x127 JUMPI PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ADDRESS SUB PUSH2 0x7FB JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP2 MSTORE RETURN JUMPDEST MLOAD PUSH4 0x703E46DD PUSH1 0xE1 SHL DUP2 MSTORE REVERT JUMPDEST DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x127 JUMPI PUSH2 0x81B PUSH2 0x1045 JUMP JUMPDEST PUSH1 0x24 SWAP3 DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x127 JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x127 JUMPI DUP1 DUP5 ADD CALLDATALOAD PUSH2 0x847 DUP2 PUSH2 0x1142 JUMP JUMPDEST SWAP4 PUSH2 0x854 DUP5 MLOAD SWAP6 DUP7 PUSH2 0x1071 JUMP JUMPDEST DUP2 DUP6 MSTORE PUSH1 0x20 SWAP2 DUP3 DUP7 ADD SWAP4 CALLDATASIZE DUP10 DUP4 DUP4 ADD ADD GT PUSH2 0x127 JUMPI DUP2 PUSH0 SWAP3 DUP11 DUP7 SWAP4 ADD DUP8 CALLDATACOPY DUP8 ADD ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 DUP2 AND ADDRESS DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0xA2E JUMPI JUMPDEST POP PUSH2 0xA1E JUMPI PUSH2 0x8B9 PUSH2 0x12E8 JUMP JUMPDEST DUP2 AND SWAP5 DUP5 MLOAD PUSH4 0x52D1902D PUSH1 0xE0 SHL DUP2 MSTORE DUP4 DUP2 DUP10 DUP2 DUP11 GAS STATICCALL PUSH0 SWAP2 DUP2 PUSH2 0x9EF JUMPI JUMPDEST POP PUSH2 0x8F2 JUMPI POP POP POP POP POP MLOAD SWAP2 PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 DUP8 DUP8 DUP8 SWAP5 SWAP4 DUP12 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SWAP2 DUP3 DUP2 SUB PUSH2 0x9DA JUMPI POP DUP6 EXTCODESIZE ISZERO PUSH2 0x9C6 JUMPI POP DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP3 OR SWAP1 SSTORE DUP5 MLOAD SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH0 DUP1 LOG2 DUP3 MLOAD ISZERO PUSH2 0x9AC JUMPI POP POP PUSH0 PUSH2 0x125 SWAP6 DUP2 SWAP3 MLOAD SWAP1 DUP5 GAS DELEGATECALL SWAP2 RETURNDATASIZE ISZERO PUSH2 0x9A2 JUMPI RETURNDATASIZE PUSH2 0x994 PUSH2 0x98B DUP3 PUSH2 0x1142 JUMP JUMPDEST SWAP3 MLOAD SWAP3 DUP4 PUSH2 0x1071 JUMP JUMPDEST DUP2 MSTORE PUSH0 DUP2 SWAP5 RETURNDATASIZE SWAP3 ADD RETURNDATACOPY PUSH2 0x1361 JUMP JUMPDEST POP PUSH1 0x60 SWAP3 POP PUSH2 0x1361 JUMP JUMPDEST SWAP5 POP SWAP5 POP POP POP POP CALLVALUE PUSH2 0x9BA JUMPI STOP JUMPDEST PUSH4 0xB398979F PUSH1 0xE0 SHL DUP2 MSTORE REVERT JUMPDEST DUP7 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE DUP1 DUP6 ADD DUP5 SWAP1 MSTORE REVERT JUMPDEST DUP8 MLOAD PUSH4 0x2A875269 PUSH1 0xE2 SHL DUP2 MSTORE DUP1 DUP7 ADD SWAP2 SWAP1 SWAP2 MSTORE REVERT JUMPDEST SWAP1 SWAP2 POP DUP5 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0xA17 JUMPI JUMPDEST PUSH2 0xA07 DUP2 DUP4 PUSH2 0x1071 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x127 JUMPI MLOAD SWAP1 DUP11 PUSH2 0x8D7 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x9FD JUMP JUMPDEST DUP5 MLOAD PUSH4 0x703E46DD PUSH1 0xE1 SHL DUP2 MSTORE DUP8 SWAP1 REVERT JUMPDEST SWAP1 POP DUP2 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD AND EQ ISZERO DUP10 PUSH2 0x8AC JUMP JUMPDEST CALLVALUE PUSH2 0x127 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x127 JUMPI PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xA7E PUSH2 0x1045 JUMP JUMPDEST AND DUP4 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH4 0x19F92B0B PUSH1 0xE2 SHL DUP3 MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xAD3 JUMPI SWAP2 PUSH2 0x1DE SWAP3 PUSH0 SWAP3 PUSH2 0xAB7 JUMPI JUMPDEST POP MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x1106 JUMP JUMPDEST PUSH2 0xACC SWAP2 SWAP3 POP RETURNDATASIZE DUP1 PUSH0 DUP4 RETURNDATACOPY PUSH2 0x4CC DUP2 DUP4 PUSH2 0x1071 JUMP JUMPDEST SWAP1 DUP4 PUSH2 0xAA4 JUMP JUMPDEST DUP3 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x127 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x127 JUMPI CALLDATALOAD SWAP1 PUSH0 SLOAD DUP3 LT ISZERO PUSH2 0x127 JUMPI PUSH2 0xB04 PUSH1 0x20 SWAP3 PUSH2 0x10BF JUMP JUMPDEST SWAP1 SLOAD SWAP2 MLOAD SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 PUSH1 0x3 SHL SHR AND DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x127 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x127 JUMPI PUSH8 0xFFFFFFFFFFFFFFFF SWAP2 DUP2 CALLDATALOAD DUP4 DUP2 GT PUSH2 0x127 JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x127 JUMPI DUP1 DUP4 ADD CALLDATALOAD SWAP4 PUSH1 0x24 PUSH2 0xB59 DUP7 PUSH2 0x10A7 JUMP JUMPDEST SWAP3 PUSH2 0xB66 DUP6 MLOAD SWAP5 DUP6 PUSH2 0x1071 JUMP JUMPDEST DUP7 DUP5 MSTORE PUSH1 0x20 SWAP7 DUP3 DUP9 DUP7 ADD SWAP2 PUSH1 0x5 SHL DUP4 ADD ADD SWAP2 CALLDATASIZE DUP4 GT PUSH2 0x127 JUMPI DUP4 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x1003 JUMPI POP POP POP DUP1 CALLDATALOAD DUP3 DUP2 GT PUSH2 0x127 JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x127 JUMPI DUP1 DUP7 ADD CALLDATALOAD SWAP1 PUSH2 0xBAF DUP3 PUSH2 0x10A7 JUMP JUMPDEST SWAP1 PUSH2 0xBBC DUP8 MLOAD SWAP3 DUP4 PUSH2 0x1071 JUMP JUMPDEST DUP3 DUP3 MSTORE DUP9 DUP3 ADD SWAP3 PUSH1 0x5 SHL DUP2 ADD DUP5 ADD SWAP1 DUP4 CALLDATASIZE DUP4 GT PUSH2 0x127 JUMPI DUP6 DUP12 SWAP3 ADD SWAP1 JUMPDEST DUP4 DUP3 LT PUSH2 0xFF4 JUMPI POP POP PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 PUSH1 0x44 SWAP6 SWAP4 POP SWAP1 DUP8 AND SWAP2 POP DUP2 ISZERO PUSH2 0xFBE JUMPI PUSH1 0x1 SWAP5 DUP6 DUP10 MLOAD GT ISZERO PUSH2 0xF7E JUMPI DUP9 MLOAD DUP6 MLOAD SUB PUSH2 0xF31 JUMPI PUSH0 DUP7 JUMPDEST PUSH2 0xE43 JUMPI JUMPDEST POP POP DUP7 PUSH1 0x2 SLOAD AND SWAP4 DUP10 MLOAD SWAP5 PUSH2 0x3CD5 DUP1 DUP8 ADD SWAP4 DUP8 DUP6 LT SWAP1 DUP6 GT OR PUSH2 0xE31 JUMPI SWAP1 DUP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0x13C5 DUP8 CODECOPY DUP3 MSTORE PUSH1 0xA0 DUP14 DUP4 ADD MSTORE DUP13 PUSH2 0xC5A PUSH1 0xA0 DUP5 ADD DUP13 PUSH2 0x1106 JUMP JUMPDEST DUP4 DUP2 SUB DUP14 DUP6 ADD MSTORE SWAP2 MLOAD DUP1 DUP4 MSTORE SWAP2 ADD SWAP4 SWAP1 PUSH0 DUP9 DUP16 JUMPDEST DUP4 DUP4 LT PUSH2 0xE1A JUMPI POP POP POP PUSH1 0x44 CALLDATALOAD PUSH1 0x60 DUP5 ADD MSTORE POP POP PUSH1 0x80 ADD MSTORE SUB SWAP1 PUSH0 CREATE DUP1 ISZERO PUSH2 0xE10 JUMPI DUP4 AND SWAP6 PUSH0 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0xDFE JUMPI SWAP1 PUSH2 0xCB5 DUP3 DUP5 DUP11 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 ADD PUSH0 SSTORE PUSH2 0x10BF JUMP JUMPDEST DUP2 SLOAD SWAP1 PUSH1 0x3 SHL SWAP1 DUP7 DUP10 DUP4 SHL SWAP3 SHL NOT AND OR SWAP1 SSTORE DUP2 PUSH0 SWAP1 JUMPDEST PUSH2 0xD1D JUMPI JUMPDEST POP POP POP POP PUSH32 0x93DE7D9DE9F3E05BA87A0170FCBB71AF623439CAF5E5079587B9D38C5DA9B0D1 SWAP2 PUSH2 0xD0F SWAP2 PUSH1 0x2 SLOAD AND DUP6 MLOAD SWAP3 DUP4 SWAP3 DUP8 DUP5 MSTORE DUP8 DUP5 ADD SWAP1 PUSH2 0x1106 JUMP JUMPDEST SWAP1 DUP9 DUP4 ADD MSTORE SUB SWAP1 LOG2 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 DUP7 MLOAD DUP3 LT ISZERO PUSH2 0xDF6 JUMPI POP DUP3 DUP2 ADD DUP1 DUP3 GT PUSH2 0xDE4 JUMPI DUP4 SWAP3 SWAP2 SWAP1 DUP4 JUMPDEST PUSH2 0xD4F JUMPI JUMPDEST POP DUP3 ADD DUP9 SWAP7 SWAP6 SWAP5 SWAP4 PUSH2 0xCCB JUMP JUMPDEST DUP8 SWAP4 SWAP2 SWAP3 SWAP4 MLOAD DUP2 LT ISZERO PUSH2 0xDDB JUMPI DUP2 SWAP1 DUP8 PUSH2 0xD69 DUP6 DUP12 PUSH2 0x115E JUMP JUMPDEST MLOAD AND PUSH0 MSTORE DUP2 DUP13 MSTORE DUP10 PUSH0 KECCAK256 DUP9 PUSH2 0xD7E DUP4 DUP13 PUSH2 0x115E JUMP JUMPDEST MLOAD AND PUSH0 MSTORE DUP13 MSTORE DUP10 PUSH0 KECCAK256 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL SWAP1 DUP13 DUP3 DUP3 SLOAD AND OR SWAP1 SSTORE DUP9 PUSH2 0xDAB DUP4 DUP13 PUSH2 0x115E JUMP JUMPDEST MLOAD AND PUSH0 MSTORE DUP3 DUP14 MSTORE DUP11 PUSH0 KECCAK256 DUP10 PUSH2 0xDC0 DUP8 DUP14 PUSH2 0x115E JUMP JUMPDEST MLOAD AND PUSH0 MSTORE DUP14 MSTORE DUP12 DUP12 PUSH0 KECCAK256 SWAP2 DUP3 SLOAD AND OR SWAP1 SSTORE ADD DUP2 SWAP4 SWAP3 SWAP2 PUSH2 0xD3D JUMP JUMPDEST SWAP3 SWAP2 SWAP1 SWAP3 PUSH2 0xD42 JUMP JUMPDEST DUP5 PUSH1 0x11 DUP5 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE MSTORE PUSH0 REVERT JUMPDEST SWAP6 SWAP5 SWAP4 PUSH2 0xCD0 JUMP JUMPDEST DUP4 PUSH1 0x41 DUP4 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE MSTORE PUSH0 REVERT JUMPDEST DUP6 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP5 MLOAD DUP9 MSTORE DUP10 SWAP9 POP SWAP7 DUP8 ADD SWAP7 SWAP1 SWAP4 ADD SWAP3 ADD DUP9 DUP16 PUSH2 0xC6E JUMP JUMPDEST DUP9 PUSH1 0x41 DUP15 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE MSTORE PUSH0 REVERT JUMPDEST DUP10 MLOAD DUP2 LT ISZERO PUSH2 0xF2C JUMPI DUP7 DUP2 ADD DUP1 DUP3 GT PUSH2 0xF1A JUMPI DUP8 SWAP3 SWAP2 SWAP1 DUP12 DUP16 DUP13 DUP16 DUP8 JUMPDEST PUSH2 0xE73 JUMPI JUMPDEST POP POP POP POP POP DUP3 ADD SWAP1 SWAP2 PUSH2 0xC16 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 DUP5 MLOAD DUP7 LT ISZERO PUSH2 0xF0D JUMPI POP DUP5 PUSH2 0xEA3 SWAP2 DUP4 PUSH2 0xE94 DUP10 DUP9 PUSH2 0x115E JUMP JUMPDEST MLOAD AND PUSH0 MSTORE DUP14 DUP6 MSTORE PUSH0 KECCAK256 SWAP5 PUSH2 0x115E JUMP JUMPDEST MLOAD AND PUSH0 MSTORE MSTORE DUP10 DUP13 PUSH0 KECCAK256 SLOAD AND PUSH2 0xEC2 JUMPI DUP8 SWAP3 SWAP2 SWAP1 DUP4 ADD DUP12 DUP16 DUP13 DUP16 DUP8 PUSH2 0xE60 JUMP JUMPDEST DUP12 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP15 ADD DUP16 SWAP1 MSTORE PUSH1 0x21 DUP2 DUP12 ADD MSTORE PUSH32 0x506F6F6C20616C72656164792065786973747320666F72207468697320706169 DUP2 DUP6 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP7 SWAP6 SWAP5 POP SWAP1 DUP4 SWAP3 SWAP2 PUSH2 0xE65 JUMP JUMPDEST DUP9 PUSH1 0x11 DUP15 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE MSTORE PUSH0 REVERT JUMPDEST PUSH2 0xC1B JUMP JUMPDEST DUP10 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP13 ADD DUP14 SWAP1 MSTORE PUSH1 0x22 DUP2 DUP10 ADD MSTORE PUSH32 0x41737365747320616E642077656967687473206C656E677468206D69736D6174 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0xC6D PUSH1 0xF3 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x64 DUP12 DUP14 DUP10 DUP2 DUP15 MLOAD SWAP4 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP6 MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x4174206C656173742074776F2061737365747320617265207265717569726564 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP9 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP12 ADD DUP13 SWAP1 MSTORE PUSH1 0x11 DUP2 DUP9 ADD MSTORE PUSH17 0x14195C9A5C1A195C9E481B9BDD081CD95D PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE SWAP1 DUP3 ADD SWAP1 DUP3 ADD PUSH2 0xBD9 JUMP JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x127 JUMPI DUP2 MSTORE SWAP1 DUP9 ADD SWAP1 DUP9 ADD PUSH2 0xB83 JUMP JUMPDEST CALLVALUE PUSH2 0x127 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x127 JUMPI PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x127 JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x127 JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x1093 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x1093 JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH0 SLOAD DUP2 LT ISZERO PUSH2 0x10F2 JUMPI PUSH0 DUP1 MSTORE PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563 ADD SWAP1 PUSH0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP1 DUP2 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP1 SWAP4 ADD SWAP4 ADD SWAP2 PUSH0 JUMPDEST DUP3 DUP2 LT PUSH2 0x1125 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x1117 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x1093 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x10F2 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 DUP2 DUP5 SUB SLT PUSH2 0x127 JUMPI DUP1 MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x127 JUMPI ADD SWAP2 DUP1 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x127 JUMPI DUP3 MLOAD PUSH2 0x11A8 DUP2 PUSH2 0x10A7 JUMP JUMPDEST SWAP4 PUSH2 0x11B6 PUSH1 0x40 MLOAD SWAP6 DUP7 PUSH2 0x1071 JUMP JUMPDEST DUP2 DUP6 MSTORE DUP4 DUP1 DUP7 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x127 JUMPI DUP4 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x11DD JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x127 JUMPI DUP2 MSTORE SWAP1 DUP4 ADD SWAP1 DUP4 ADD PUSH2 0x11CF JUMP JUMPDEST PUSH0 SWAP1 PUSH0 SLOAD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH2 0x1210 JUMPI POP POP POP PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x1219 DUP2 PUSH2 0x10BF JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x3 SWAP2 SWAP1 SWAP2 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP4 AND EQ PUSH2 0x123D JUMPI PUSH1 0x1 ADD PUSH2 0x1202 JUMP JUMPDEST POP POP POP PUSH1 0x1 SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x124F DUP3 PUSH2 0x10A7 JUMP JUMPDEST PUSH2 0x125C PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x1071 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP1 SWAP3 PUSH2 0x126D PUSH1 0x1F NOT SWAP2 PUSH2 0x10A7 JUMP JUMPDEST ADD SWAP1 PUSH1 0x20 CALLDATASIZE SWAP2 ADD CALLDATACOPY JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x12D0 JUMPI PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x509A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP5 OR SWAP1 SWAP2 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH0 DUP1 LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x509A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x1308 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0xFF PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SLOAD PUSH1 0x40 SHR AND ISZERO PUSH2 0x134F JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1AFCD79F PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0x1388 JUMPI POP DUP1 MLOAD ISZERO PUSH2 0x1376 JUMPI DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA12F521 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST DUP2 MLOAD ISZERO DUP1 PUSH2 0x13BB JUMPI JUMPDEST PUSH2 0x1399 JUMPI POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x9996B315 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST POP DUP1 EXTCODESIZE ISZERO PUSH2 0x1391 JUMP INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x439 JUMPI PUSH2 0x3CD5 DUP1 CODESIZE SUB DUP1 SWAP2 PUSH2 0x1C DUP3 DUP6 PUSH2 0x8FE JUMP JUMPDEST DUP4 CODECOPY DUP2 ADD PUSH1 0xA0 DUP3 DUP3 SUB SLT PUSH2 0x439 JUMPI PUSH2 0x33 DUP3 PUSH2 0x921 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MLOAD SWAP1 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x439 JUMPI DUP4 ADD SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x439 JUMPI DUP3 MLOAD SWAP3 PUSH2 0x63 DUP5 PUSH2 0x935 JUMP JUMPDEST SWAP4 PUSH2 0x71 PUSH1 0x40 MLOAD SWAP6 DUP7 PUSH2 0x8FE JUMP JUMPDEST DUP1 DUP6 MSTORE PUSH1 0x20 DUP1 DUP7 ADD SWAP2 PUSH1 0x5 SHL DUP4 ADD ADD SWAP2 DUP5 DUP4 GT PUSH2 0x439 JUMPI PUSH1 0x20 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x8CB JUMPI POP POP POP PUSH1 0x40 DUP5 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x439 JUMPI DUP5 ADD SWAP2 DUP1 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x439 JUMPI DUP3 MLOAD PUSH2 0xC3 DUP2 PUSH2 0x935 JUMP JUMPDEST SWAP4 PUSH2 0xD1 PUSH1 0x40 MLOAD SWAP6 DUP7 PUSH2 0x8FE JUMP JUMPDEST DUP2 DUP6 MSTORE PUSH1 0x20 DUP1 DUP7 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x439 JUMPI PUSH1 0x20 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x8BB JUMPI POP POP POP PUSH2 0x107 PUSH1 0x80 PUSH1 0x60 DUP7 ADD MLOAD SWAP6 ADD PUSH2 0x921 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x113 DUP2 PUSH2 0x8E3 JUMP JUMPDEST PUSH1 0x9 DUP2 MSTORE PUSH9 0x42616C756E69204C5 PUSH1 0xBC SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP1 PUSH2 0x136 DUP3 PUSH2 0x8E3 JUMP JUMPDEST PUSH1 0x9 DUP3 MSTORE PUSH9 0x42414C554E492D4C5 PUSH1 0xBC SHL PUSH1 0x20 DUP4 ADD MSTORE DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x496 JUMPI PUSH1 0x3 SLOAD SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x8B1 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x792 JUMPI DUP2 PUSH1 0x1F DUP5 SWAP4 GT PUSH2 0x843 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x7BB JUMPI PUSH0 SWAP3 PUSH2 0x7B0 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x3 SSTORE JUMPDEST DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x496 JUMPI PUSH1 0x4 SLOAD SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x7A6 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x792 JUMPI DUP2 PUSH1 0x1F DUP5 SWAP4 GT PUSH2 0x724 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x6A0 JUMPI PUSH0 SWAP3 PUSH2 0x695 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x4 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x5 SSTORE PUSH1 0x9 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND OR SWAP1 SWAP2 SSTORE PUSH1 0xA DUP1 SLOAD DUP3 AND CALLER OR SWAP1 SSTORE PUSH1 0xC DUP1 SLOAD SWAP1 SWAP2 AND SWAP2 DUP4 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH8 0xDE0B6B3A7640000 PUSH1 0x8 SSTORE DUP3 MLOAD DUP3 MLOAD SUB PUSH2 0x645 JUMPI PUSH0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x525 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x280 DUP3 DUP7 PUSH2 0x94C JUMP JUMPDEST MLOAD AND ISZERO PUSH2 0x4E0 JUMPI PUSH2 0x291 DUP2 DUP5 PUSH2 0x94C JUMP JUMPDEST MLOAD ISZERO PUSH2 0x4AA JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x2A9 DUP3 DUP7 PUSH2 0x94C JUMP JUMPDEST MLOAD AND PUSH2 0x2B5 DUP3 DUP6 PUSH2 0x94C JUMP JUMPDEST MLOAD PUSH1 0x40 DUP1 MLOAD SWAP3 SWAP1 DUP4 ADD DUP1 DUP5 GT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 SWAP2 GT OR PUSH2 0x496 JUMPI PUSH1 0x40 DUP4 ADD PUSH1 0x40 MSTORE DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x6 SLOAD PUSH9 0x10000000000000000 DUP2 LT ISZERO PUSH2 0x496 JUMPI PUSH1 0x1 DUP2 ADD DUP1 PUSH1 0x6 SSTORE DUP2 LT ISZERO PUSH2 0x482 JUMPI PUSH1 0x6 PUSH0 MSTORE DUP2 MLOAD PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F PUSH1 0x1 SWAP3 SWAP1 SWAP3 SHL SWAP2 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE PUSH1 0x20 SWAP1 SWAP3 ADD MLOAD PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D40 SWAP1 SWAP2 ADD SSTORE PUSH2 0x383 DUP3 DUP7 PUSH2 0x94C JUMP JUMPDEST MLOAD AND PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0xC SLOAD AND PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE DUP2 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x44 DUP2 DUP7 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x445 JUMPI PUSH0 SWAP2 PUSH2 0x450 JUMPI JUMPDEST POP ISZERO PUSH2 0x3D1 JUMPI JUMPDEST POP POP PUSH1 0x1 ADD PUSH2 0x265 JUMP JUMPDEST PUSH0 SWAP2 PUSH1 0x44 PUSH1 0x20 SWAP3 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP4 DUP5 SWAP3 PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE DUP2 NOT PUSH1 0x24 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x445 JUMPI PUSH2 0x409 JUMPI JUMPDEST DUP1 PUSH2 0x3C7 JUMP JUMPDEST PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x43D JUMPI JUMPDEST DUP2 PUSH2 0x422 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x8FE JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x439 JUMPI MLOAD DUP1 ISZERO ISZERO SUB PUSH2 0x439 JUMPI PUSH0 PUSH2 0x403 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x415 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x47A JUMPI JUMPDEST DUP2 PUSH2 0x46B PUSH1 0x20 SWAP4 DUP4 PUSH2 0x8FE JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x439 JUMPI MLOAD PUSH0 PUSH2 0x3C0 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x45E JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x125B9D985B1A59081DD95A59DA1D PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420617373657420616464726573730000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH1 0x7 DUP5 SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH4 0x89A30271 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x4 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x445 JUMPI PUSH0 SWAP2 PUSH2 0x60B JUMPI JUMPDEST POP PUSH1 0xB DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH0 SWAP1 DUP2 JUMPDEST DUP2 MLOAD DUP4 LT ISZERO PUSH2 0x5BD JUMPI PUSH2 0x594 DUP4 DUP4 PUSH2 0x94C JUMP JUMPDEST MLOAD DUP2 ADD DUP1 SWAP2 GT PUSH2 0x5A9 JUMPI PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 PUSH2 0x581 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x2710 SUB PUSH2 0x5D4 JUMPI PUSH1 0x40 MLOAD PUSH2 0x3374 SWAP1 DUP2 PUSH2 0x961 DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x496E76616C69642077656967687473 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x63D JUMPI JUMPDEST DUP2 PUSH2 0x626 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x8FE JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x439 JUMPI PUSH2 0x637 SWAP1 PUSH2 0x921 JUMP JUMPDEST DUP3 PUSH2 0x55C JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x619 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41737365747320616E642077656967687473206C656E677468206D69736D6174 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0xC6D PUSH1 0xF3 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ADD MLOAD SWAP1 POP PUSH0 DUP1 PUSH2 0x1FB JUMP JUMPDEST PUSH1 0x4 PUSH0 SWAP1 DUP2 MSTORE PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B SWAP4 POP PUSH1 0x1F NOT DUP6 AND SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x70C JUMPI POP SWAP1 DUP5 PUSH1 0x1 SWAP6 SWAP5 SWAP4 SWAP3 LT PUSH2 0x6F4 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x4 SSTORE PUSH2 0x210 JUMP JUMPDEST ADD MLOAD PUSH0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE PUSH0 DUP1 DUP1 PUSH2 0x6E6 JUMP JUMPDEST SWAP3 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH2 0x6D0 JUMP JUMPDEST PUSH1 0x4 PUSH0 MSTORE SWAP1 SWAP2 POP PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP6 LT PUSH2 0x788 JUMPI JUMPDEST SWAP1 PUSH1 0x1F DUP6 SWAP5 SWAP4 SWAP3 ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x77A JUMPI POP PUSH2 0x1E5 JUMP JUMPDEST PUSH0 DUP2 SSTORE DUP5 SWAP4 POP PUSH1 0x1 ADD PUSH2 0x76D JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x75F JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x1D1 JUMP JUMPDEST ADD MLOAD SWAP1 POP PUSH0 DUP1 PUSH2 0x199 JUMP JUMPDEST PUSH1 0x3 PUSH0 SWAP1 DUP2 MSTORE SWAP4 POP PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B SWAP2 SWAP1 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0x828 JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x810 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x3 SSTORE PUSH2 0x1AE JUMP JUMPDEST ADD MLOAD PUSH0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE PUSH0 DUP1 DUP1 PUSH2 0x802 JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x7E7 JUMP JUMPDEST PUSH1 0x3 PUSH0 MSTORE SWAP1 SWAP2 POP PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP6 LT PUSH2 0x8A7 JUMPI JUMPDEST SWAP1 PUSH1 0x1F DUP6 SWAP5 SWAP4 SWAP3 ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x899 JUMPI POP PUSH2 0x183 JUMP JUMPDEST PUSH0 DUP2 SSTORE DUP5 SWAP4 POP PUSH1 0x1 ADD PUSH2 0x88C JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x87E JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x16F JUMP JUMPDEST DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0xEC JUMP JUMPDEST PUSH1 0x20 DUP1 SWAP2 PUSH2 0x8D8 DUP5 PUSH2 0x921 JUMP JUMPDEST DUP2 MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0x8D JUMP JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x496 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT SWAP1 DUP3 LT OR PUSH2 0x496 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x439 JUMPI JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x496 JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x482 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP INVALID PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 SWAP2 DUP3 CALLDATASIZE LT ISZERO PUSH2 0x15 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 SWAP3 PUSH0 CALLDATALOAD PUSH1 0xE0 SHR SWAP2 DUP3 PUSH4 0x1D22CCD EQ PUSH2 0x258D JUMPI POP DUP2 PUSH4 0x6FDDE03 EQ PUSH2 0x2499 JUMPI DUP2 PUSH4 0x723C999 EQ PUSH2 0x21D2 JUMPI DUP2 PUSH4 0x902F1AC EQ PUSH2 0x21A2 JUMPI DUP2 PUSH4 0x95EA7B3 EQ PUSH2 0x20FA JUMPI DUP2 PUSH4 0x9A3BBE4 EQ PUSH2 0x6EC JUMPI DUP2 PUSH4 0xD0FA029 EQ PUSH2 0x1F79 JUMPI DUP2 PUSH4 0x18160DDD EQ PUSH2 0x1F5B JUMPI DUP2 PUSH4 0x189D00CA EQ PUSH2 0x1F3D JUMPI DUP2 PUSH4 0x1A686502 EQ PUSH2 0x1F19 JUMPI DUP2 PUSH4 0x218B5382 EQ PUSH2 0xC3D JUMPI DUP2 PUSH4 0x22ACB867 EQ PUSH2 0x1EBC JUMPI DUP2 PUSH4 0x23B872DD EQ PUSH2 0x1DDB JUMPI DUP2 PUSH4 0x313CE567 EQ PUSH2 0x1DC0 JUMPI DUP2 PUSH4 0x36BF6E39 EQ PUSH2 0x1D8C JUMPI DUP2 PUSH4 0x4AA06652 EQ PUSH2 0x1CE4 JUMPI DUP2 PUSH4 0x58D19698 EQ PUSH2 0x1BA3 JUMPI DUP2 PUSH4 0x5C1BBAF7 EQ PUSH2 0x1B5C JUMPI DUP2 PUSH4 0x67A6C440 EQ PUSH2 0x1B41 JUMPI DUP2 PUSH4 0x67E4AC2C EQ PUSH2 0x1ADE JUMPI DUP2 PUSH4 0x6E81221C EQ PUSH2 0x168C JUMPI DUP2 PUSH4 0x70A08231 EQ PUSH2 0x1656 JUMPI DUP2 PUSH4 0x76C7A3C7 EQ PUSH2 0x1637 JUMPI DUP2 PUSH4 0x77AACE1A EQ PUSH2 0x160F JUMPI DUP2 PUSH4 0x7FEC8D38 EQ PUSH2 0x15F1 JUMPI DUP2 PUSH4 0x82F652AD EQ PUSH2 0x1551 JUMPI DUP2 PUSH4 0x8656B653 EQ PUSH2 0x1506 JUMPI DUP2 PUSH4 0x867378C5 EQ PUSH2 0x14E9 JUMPI DUP2 PUSH4 0x89298012 EQ PUSH2 0x13F5 JUMPI DUP2 PUSH4 0x89AB3532 EQ PUSH2 0x138B JUMPI DUP2 PUSH4 0x89AFCB44 EQ PUSH2 0xF6C JUMPI DUP2 PUSH4 0x8A77C8DC EQ PUSH2 0xF47 JUMPI DUP2 PUSH4 0x9381CD2B EQ PUSH2 0xF24 JUMPI DUP2 PUSH4 0x95D89B41 EQ PUSH2 0xE26 JUMPI DUP2 PUSH4 0x992E2A92 EQ PUSH2 0xE04 JUMPI DUP2 PUSH4 0x9A86139B EQ PUSH2 0xDE1 JUMPI DUP2 PUSH4 0xA221EE49 EQ PUSH2 0xD98 JUMPI DUP2 PUSH4 0xA9059CBB EQ PUSH2 0xD68 JUMPI DUP2 PUSH4 0xB0E0D136 EQ PUSH2 0xD4D JUMPI DUP2 PUSH4 0xB2B55D70 EQ PUSH2 0xD28 JUMPI DUP2 PUSH4 0xB7B800A4 EQ PUSH2 0xD0D JUMPI DUP2 PUSH4 0xBA019DAB EQ PUSH2 0xCF2 JUMPI DUP2 PUSH4 0xBA9530A6 EQ PUSH2 0xCA4 JUMPI DUP2 PUSH4 0xBC063E1A EQ PUSH2 0xC82 JUMPI DUP2 PUSH4 0xBC694EA2 EQ PUSH2 0xC60 JUMPI DUP2 PUSH4 0xC2EE3A08 EQ PUSH2 0xC42 JUMPI DUP2 PUSH4 0xC36596A6 EQ PUSH2 0xC3D JUMPI DUP2 PUSH4 0xC45A0155 EQ PUSH2 0xC15 JUMPI DUP2 PUSH4 0xC6580D12 EQ PUSH2 0xBFB JUMPI DUP2 PUSH4 0xCDF456E1 EQ PUSH2 0xBD3 JUMPI DUP2 PUSH4 0xCF8FA764 EQ PUSH2 0xB5B JUMPI DUP2 PUSH4 0xD14EF46D EQ PUSH2 0xB0F JUMPI DUP2 PUSH4 0xDD62ED3E EQ PUSH2 0xAC6 JUMPI DUP2 PUSH4 0xDE836EBD EQ PUSH2 0x6F1 JUMPI DUP2 PUSH4 0xE4A28A52 EQ PUSH2 0x6EC JUMPI DUP2 PUSH4 0xE73FAA2D EQ PUSH2 0x6D0 JUMPI DUP2 PUSH4 0xEC093021 EQ PUSH2 0x6AE JUMPI DUP2 PUSH4 0xF47B45E8 EQ PUSH2 0x314 JUMPI POP PUSH4 0xF8D6AED4 EQ PUSH2 0x2AB JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x310 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x309 PUSH2 0x2E8 PUSH2 0x304 PUSH2 0x2EE PUSH2 0x2FE PUSH2 0x2F8 PUSH2 0x2F3 PUSH2 0x2E1 PUSH2 0x2D4 CALLDATASIZE PUSH2 0x26F8 JUMP JUMPDEST SWAP10 SWAP5 SWAP12 SWAP3 SWAP4 SWAP1 SWAP6 SWAP2 PUSH2 0x2E60 JUMP JUMPDEST SWAP4 DUP3 PUSH2 0x321B JUMP JUMPDEST SWAP1 PUSH2 0x2E60 JUMP JUMPDEST PUSH2 0x2F12 JUMP JUMPDEST PUSH2 0x3212 JUMP JUMPDEST SWAP2 PUSH2 0x31C9 JUMP JUMPDEST SWAP3 PUSH2 0x31AA JUMP JUMPDEST PUSH2 0x2E60 JUMP JUMPDEST SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x5A9 JUMPI PUSH1 0x3 NOT PUSH0 CALLDATASIZE DUP3 ADD SLT PUSH2 0x5A9 JUMPI PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 DUP6 AND SWAP2 PUSH2 0x342 CALLER DUP5 EQ PUSH2 0x280E JUMP JUMPDEST PUSH2 0x352 PUSH2 0x34D PUSH2 0x2AA9 JUMP JUMPDEST PUSH2 0x284B JUMP JUMPDEST PUSH1 0x6 SLOAD SWAP4 PUSH2 0x35F DUP6 PUSH2 0x28A7 JUMP JUMPDEST SWAP4 PUSH2 0x369 DUP7 PUSH2 0x28A7 JUMP JUMPDEST SWAP8 PUSH2 0x373 DUP8 PUSH2 0x28A7 JUMP JUMPDEST SWAP3 PUSH2 0x37D DUP9 PUSH2 0x28A7 JUMP JUMPDEST SWAP5 PUSH2 0x387 DUP10 PUSH2 0x28A7 JUMP JUMPDEST SWAP11 PUSH2 0x391 DUP11 PUSH2 0x28A7 JUMP JUMPDEST SWAP10 PUSH0 JUMPDEST DUP2 DUP2 LT PUSH2 0x5F5 JUMPI POP POP PUSH2 0x3A5 PUSH2 0x28ED JUMP JUMPDEST DUP5 PUSH1 0xC SLOAD AND SWAP2 PUSH1 0x7 SLOAD DUP7 PUSH1 0xB SLOAD AND DUP5 EXTCODESIZE ISZERO PUSH2 0x5A9 JUMPI DUP15 MLOAD PUSH4 0x3C2FDDC5 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0xE0 DUP2 DUP15 ADD MSTORE DUP14 SWAP10 SWAP1 SWAP7 DUP8 SWAP6 DUP7 SWAP6 SWAP2 SWAP1 PUSH2 0x3E4 SWAP1 PUSH1 0xE4 DUP9 ADD SWAP1 PUSH2 0x2606 JUMP JUMPDEST SWAP12 PUSH1 0x24 SWAP13 DUP3 DUP9 DUP3 SUB ADD PUSH1 0x24 DUP10 ADD MSTORE PUSH2 0x3FB SWAP2 PUSH2 0x271E JUMP JUMPDEST SWAP1 DUP7 DUP3 SUB ADD PUSH1 0x44 DUP8 ADD MSTORE PUSH2 0x40E SWAP2 PUSH2 0x2606 JUMP JUMPDEST SWAP3 PUSH1 0x64 DUP6 ADD MSTORE DUP1 PUSH1 0x84 DUP6 ADD MSTORE PUSH1 0xA4 DUP5 ADD MSTORE PUSH1 0xC4 DUP4 ADD MSTORE SUB DUP2 GAS PUSH0 SWAP5 DUP6 SWAP2 CALL DUP1 ISZERO PUSH2 0x5EB JUMPI PUSH2 0x5BE JUMPI JUMPDEST POP PUSH1 0x6 SLOAD PUSH1 0x9 SLOAD SWAP1 SWAP7 SWAP1 DUP4 AND SWAP3 DUP3 JUMPDEST DUP9 DUP2 LT PUSH2 0x4B3 JUMPI DUP13 DUP13 PUSH2 0x4AF DUP14 DUP14 PUSH32 0x279B343370F587AF7FB675AE7C8578E9C8ABCC373236AD02C501A4771FE7A7B8 DUP5 MLOAD PUSH1 0x20 DUP2 MSTORE DUP1 PUSH2 0x48B CALLER SWAP5 PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x271E JUMP JUMPDEST SUB SWAP1 LOG2 PUSH2 0x4A1 DUP4 MLOAD SWAP5 DUP5 DUP7 SWAP6 DUP7 MSTORE DUP6 ADD SWAP1 PUSH2 0x2606 JUMP JUMPDEST SWAP1 DUP4 DUP3 SUB PUSH1 0x20 DUP6 ADD MSTORE PUSH2 0x2606 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST DUP2 PUSH2 0x4BE DUP3 DUP13 PUSH2 0x28D9 JUMP JUMPDEST MLOAD AND DUP13 MLOAD DUP1 SWAP2 PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP3 MSTORE DUP8 DUP7 DUP4 ADD MSTORE DUP2 DUP10 PUSH1 0x20 SWAP5 DUP6 SWAP4 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x5B4 JUMPI DUP16 SWAP1 DUP11 SWAP5 SWAP4 DUP16 SWAP2 SWAP4 DUP14 SWAP5 DUP11 SWAP3 PUSH2 0x573 JUMPI JUMPDEST POP POP SWAP5 DUP5 SWAP2 PUSH1 0x1 SWAP7 PUSH2 0x506 DUP5 DUP8 PUSH2 0x28D9 JUMP JUMPDEST MSTORE PUSH2 0x511 DUP4 DUP7 PUSH2 0x28D9 JUMP JUMPDEST MLOAD PUSH2 0x51C DUP5 DUP5 PUSH2 0x28D9 JUMP JUMPDEST MLOAD LT ISZERO PUSH2 0x556 JUMPI POP PUSH2 0x548 SWAP1 PUSH2 0x541 DUP4 PUSH2 0x53A DUP2 PUSH2 0x54E SWAP8 SWAP9 PUSH2 0x28D9 JUMP JUMPDEST MLOAD SWAP3 PUSH2 0x28D9 JUMP JUMPDEST MLOAD SWAP1 PUSH2 0x2767 JUMP JUMPDEST SWAP3 PUSH2 0x28D9 JUMP JUMPDEST MSTORE JUMPDEST ADD PUSH2 0x446 JUMP JUMPDEST SWAP4 PUSH2 0x56D SWAP4 POP PUSH2 0x541 DUP4 PUSH2 0x53A DUP2 PUSH2 0x548 SWAP6 PUSH2 0x28D9 JUMP JUMPDEST MSTORE PUSH2 0x550 JUMP JUMPDEST SWAP5 POP SWAP6 POP POP POP POP DUP3 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x5AD JUMPI JUMPDEST PUSH2 0x58E DUP2 DUP4 PUSH2 0x27C0 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x5A9 JUMPI DUP9 DUP15 DUP3 DUP11 DUP16 PUSH1 0x1 SWAP7 MLOAD SWAP2 SWAP7 DUP2 SWAP4 POP PUSH2 0x4F4 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x584 JUMP JUMPDEST DUP15 MLOAD RETURNDATASIZE DUP9 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x5D8 JUMPI DUP9 MSTORE PUSH0 DUP11 PUSH2 0x437 JUMP JUMPDEST PUSH1 0x41 DUP7 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP11 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP6 PUSH2 0x5FF DUP3 PUSH2 0x2774 JUMP JUMPDEST POP SLOAD AND PUSH2 0x60C DUP3 DUP14 PUSH2 0x28D9 JUMP JUMPDEST MSTORE PUSH1 0x1 PUSH2 0x618 DUP3 PUSH2 0x2774 JUMP JUMPDEST POP ADD SLOAD PUSH2 0x625 DUP3 DUP6 PUSH2 0x28D9 JUMP JUMPDEST MSTORE DUP6 PUSH2 0x631 DUP3 DUP14 PUSH2 0x28D9 JUMP JUMPDEST MLOAD AND SWAP1 DUP14 MLOAD DUP1 SWAP3 PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP3 MSTORE DUP10 DUP14 DUP4 ADD MSTORE DUP2 PUSH1 0x24 PUSH1 0x20 SWAP4 DUP5 SWAP4 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x6A4 JUMPI PUSH0 SWAP2 PUSH2 0x675 JUMPI JUMPDEST POP PUSH1 0x1 SWAP3 POP PUSH2 0x66E DUP3 DUP12 PUSH2 0x28D9 JUMP JUMPDEST MSTORE ADD PUSH2 0x394 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x69D JUMPI JUMPDEST PUSH2 0x68B DUP2 DUP4 PUSH2 0x27C0 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x5A9 JUMPI PUSH1 0x1 SWAP2 MLOAD PUSH0 PUSH2 0x65F JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x681 JUMP JUMPDEST DUP16 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH8 0x6F05B59D3B20000 DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x309 PUSH2 0x2B77 JUMP JUMPDEST PUSH2 0x2660 JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x5A9 JUMPI PUSH2 0x70A PUSH2 0x25DA JUMP JUMPDEST SWAP1 PUSH1 0x24 SWAP2 DUP3 CALLDATALOAD SWAP4 PUSH8 0xFFFFFFFFFFFFFFFF DUP6 GT PUSH2 0x5A9 JUMPI CALLDATASIZE PUSH1 0x23 DUP7 ADD SLT ISZERO PUSH2 0x5A9 JUMPI DUP5 DUP2 ADD CALLDATALOAD SWAP4 PUSH2 0x739 DUP6 PUSH2 0x27F6 JUMP JUMPDEST SWAP5 PUSH2 0x746 DUP6 MLOAD SWAP7 DUP8 PUSH2 0x27C0 JUMP JUMPDEST DUP1 DUP7 MSTORE PUSH1 0x20 SWAP7 DUP3 DUP9 DUP9 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP2 CALLDATASIZE DUP4 GT PUSH2 0x5A9 JUMPI DUP4 DUP10 SWAP3 ADD SWAP1 JUMPDEST DUP4 DUP3 LT PUSH2 0xAB7 JUMPI POP POP PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP8 SWAP3 POP PUSH2 0x78A SWAP2 POP DUP8 AND CALLER EQ PUSH2 0x280E JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 PUSH0 SWAP1 PUSH2 0x798 PUSH2 0x28ED JUMP JUMPDEST SWAP1 PUSH1 0x6 SLOAD SWAP2 MLOAD DUP3 SUB PUSH2 0xA75 JUMPI DUP2 ISZERO PUSH2 0xA47 JUMPI SWAP1 PUSH0 SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0xA0E JUMPI POP POP POP DUP1 ISZERO PUSH2 0x9C1 JUMPI DUP4 DUP9 DUP9 PUSH1 0xB SLOAD AND DUP9 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH4 0x313CE567 PUSH1 0xE0 SHL DUP3 MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x9B7 JUMPI SWAP1 PUSH1 0xFF SWAP2 PUSH0 SWAP2 PUSH2 0x98A JUMPI JUMPDEST POP AND SWAP2 DUP1 PUSH2 0x8EC JUMPI POP PUSH8 0xDE0B6B3A7640000 DUP1 DUP3 MUL SWAP2 DUP3 DIV SUB PUSH2 0x8DA JUMPI SWAP1 PUSH2 0x810 SWAP2 PUSH2 0x2767 JUMP JUMPDEST SWAP5 JUMPDEST DUP6 ISZERO PUSH2 0x8A8 JUMPI PUSH2 0x843 DUP7 SWAP2 CALLER PUSH0 MSTORE PUSH0 DUP10 MSTORE DUP7 PUSH0 KECCAK256 SLOAD SWAP6 PUSH2 0x832 DUP5 DUP3 PUSH2 0x2C36 JUMP JUMPDEST AND SWAP5 DUP6 PUSH0 MSTORE PUSH0 DUP10 MSTORE DUP7 PUSH0 KECCAK256 SLOAD PUSH2 0x2767 JUMP JUMPDEST SUB PUSH2 0x878 JUMPI POP POP PUSH32 0xF6798A560793A54C3BCFE86A93CDE1E73087D944C0EA20544137D4121396885 DUP5 DUP4 MLOAD DUP6 DUP2 MSTORE LOG2 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP4 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP2 DUP3 ADD DUP7 SWAP1 MSTORE PUSH1 0xB SWAP1 DUP3 ADD MSTORE PUSH11 0x135A5B9D0811985A5B1959 PUSH1 0xAA SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP5 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP5 ADD DUP9 SWAP1 MSTORE PUSH1 0xD DUP2 DUP5 ADD MSTORE PUSH13 0x4D696E7420717479206973203 PUSH1 0x9C SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x11 DUP6 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE MSTORE PUSH0 REVERT JUMPDEST PUSH2 0x8F4 PUSH2 0x2BA2 JUMP JUMPDEST POP SWAP2 DUP3 ISZERO PUSH2 0x939 JUMPI PUSH2 0x90F SWAP3 SWAP2 PUSH2 0x90A SWAP2 PUSH2 0x2639 JUMP JUMPDEST PUSH2 0x2683 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 SWAP1 DUP2 DUP2 MUL SWAP2 DUP2 DUP4 DIV EQ SWAP1 ISZERO OR ISZERO PUSH2 0x8DA JUMPI SWAP1 PUSH2 0x933 SWAP2 PUSH2 0x2767 JUMP JUMPDEST SWAP5 PUSH2 0x812 JUMP JUMPDEST DUP8 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP8 ADD DUP12 SWAP1 MSTORE PUSH1 0x26 DUP2 DUP8 ADD MSTORE PUSH32 0x546F74616C206C6971756964697479206D757374206265206772656174657220 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x7468616E203 PUSH1 0xD4 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH2 0x9AA SWAP2 POP DUP11 RETURNDATASIZE DUP13 GT PUSH2 0x9B0 JUMPI JUMPDEST PUSH2 0x9A2 DUP2 DUP4 PUSH2 0x27C0 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x288E JUMP JUMPDEST DUP11 PUSH2 0x7E9 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x998 JUMP JUMPDEST DUP8 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP6 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP6 ADD DUP10 SWAP1 MSTORE PUSH1 0x22 DUP2 DUP6 ADD MSTORE PUSH32 0x546F74616C2076616C7565206D7573742062652067726561746572207468616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x203 PUSH1 0xF4 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 SWAP2 SWAP3 PUSH2 0xA3E PUSH1 0x1 SWAP2 PUSH2 0xA38 DUP13 PUSH2 0xA24 DUP9 PUSH2 0x2774 JUMP JUMPDEST POP SLOAD AND PUSH2 0xA31 DUP9 DUP8 PUSH2 0x28D9 JUMP JUMPDEST MLOAD SWAP1 PUSH2 0x3263 JUMP JUMPDEST SWAP1 PUSH2 0x275A JUMP JUMPDEST SWAP4 ADD SWAP2 SWAP1 PUSH2 0x7AE JUMP JUMPDEST DUP8 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP8 ADD DUP12 SWAP1 MSTORE PUSH1 0x9 DUP2 DUP8 ADD MSTORE PUSH9 0x4E6F20617373657473 PUSH1 0xB8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP8 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP8 ADD DUP12 SWAP1 MSTORE PUSH1 0x17 DUP2 DUP8 ADD MSTORE PUSH32 0x496E76616C6964207265736572766573206C656E677468000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE SWAP1 DUP3 ADD SWAP1 DUP3 ADD PUSH2 0x765 JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x5A9 JUMPI PUSH1 0x20 SWAP1 PUSH2 0xAE2 PUSH2 0x25DA JUMP JUMPDEST PUSH2 0xAEA PUSH2 0x25F0 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP2 AND PUSH0 MSTORE PUSH1 0x1 DUP5 MSTORE DUP3 PUSH0 KECCAK256 SWAP2 AND PUSH0 MSTORE DUP3 MSTORE DUP1 PUSH0 KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x5A9 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI CALLDATALOAD PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x5A9 JUMPI PUSH2 0xB36 SWAP1 PUSH2 0x2774 JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD SWAP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x5A9 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI DUP1 CALLDATALOAD SWAP1 PUSH2 0xB79 PUSH2 0x2BA2 JUMP JUMPDEST DUP1 SWAP3 SWAP2 POP MLOAD DUP4 LT ISZERO PUSH2 0xB9A JUMPI PUSH1 0x20 DUP5 PUSH2 0xB92 DUP6 DUP6 PUSH2 0x28D9 JUMP JUMPDEST MLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x20 DUP6 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x92DCECC2D8D2C840C2E6E6CAE840D2DCC8CAF PUSH1 0x6B SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI PUSH1 0xB SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH0 DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI PUSH1 0xA SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH2 0x26A1 JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x8 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH8 0x1BC16D674EC7FFFF DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH8 0x16345785D8A0000 DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x309 PUSH2 0xCDB PUSH2 0xCE1 PUSH2 0xCED PUSH2 0xCE7 PUSH2 0x2EE PUSH2 0xCE1 PUSH2 0x2E8 PUSH2 0xCCE CALLDATASIZE PUSH2 0x26F8 JUMP JUMPDEST SWAP9 SWAP5 SWAP7 SWAP3 SWAP12 SWAP2 SWAP1 SWAP4 PUSH2 0x2E60 JUMP JUMPDEST SWAP7 PUSH2 0x31C9 JUMP JUMPDEST SWAP1 PUSH2 0x31AA JUMP JUMPDEST DUP3 PUSH2 0x2EC5 JUMP JUMPDEST PUSH2 0x31C9 JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH1 0x2 DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x309 PUSH2 0xD48 PUSH2 0x25DA JUMP JUMPDEST PUSH2 0x2AFF JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH1 0x8 DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x5A9 JUMPI PUSH1 0x20 SWAP1 PUSH2 0xD91 PUSH2 0xD87 PUSH2 0x25DA JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x2CF8 JUMP JUMPDEST MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI PUSH2 0x309 PUSH2 0xDCE PUSH2 0xDC0 PUSH1 0x20 SWAP5 PUSH1 0x24 CALLDATALOAD SWAP1 CALLDATALOAD PUSH2 0x2E60 JUMP JUMPDEST PUSH2 0x2E8 PUSH1 0x64 CALLDATALOAD PUSH1 0x44 CALLDATALOAD PUSH2 0x2E60 JUMP JUMPDEST PUSH2 0xCE1 PUSH2 0xDDC PUSH1 0x84 CALLDATALOAD PUSH2 0x31C9 JUMP JUMPDEST PUSH2 0x2DF9 JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI MLOAD PUSH6 0x42524F4E5A45 PUSH1 0xD0 SHL DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH8 0x4A03CE68D215556 DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI DUP1 MLOAD SWAP1 PUSH0 SWAP3 DUP1 SLOAD SWAP1 PUSH1 0x1 DUP3 PUSH1 0x1 SHR SWAP2 PUSH1 0x1 DUP5 AND SWAP4 DUP5 ISZERO PUSH2 0xF1A JUMPI JUMPDEST PUSH1 0x20 SWAP5 DUP6 DUP6 LT DUP2 EQ PUSH2 0xF07 JUMPI DUP5 DUP9 MSTORE SWAP1 DUP2 ISZERO PUSH2 0xEE5 JUMPI POP PUSH1 0x1 EQ PUSH2 0xE8C JUMPI JUMPDEST PUSH2 0x4AF DUP7 DUP7 PUSH2 0xE82 DUP3 DUP12 SUB DUP4 PUSH2 0x27C0 JUMP JUMPDEST MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x25B0 JUMP JUMPDEST PUSH0 SWAP1 DUP2 MSTORE SWAP3 SWAP6 POP PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B JUMPDEST DUP3 DUP5 LT PUSH2 0xED2 JUMPI POP POP POP DUP3 PUSH2 0x4AF SWAP5 PUSH2 0xE82 SWAP3 DUP3 ADD ADD SWAP5 DUP7 PUSH2 0xE71 JUMP JUMPDEST DUP1 SLOAD DUP7 DUP6 ADD DUP9 ADD MSTORE SWAP3 DUP7 ADD SWAP3 DUP2 ADD PUSH2 0xEB5 JUMP JUMPDEST PUSH1 0xFF NOT AND DUP8 DUP7 ADD MSTORE POP POP POP ISZERO ISZERO PUSH1 0x5 SHL DUP4 ADD ADD SWAP3 POP PUSH2 0xE82 DUP3 PUSH2 0x4AF DUP7 PUSH2 0xE71 JUMP JUMPDEST PUSH1 0x22 DUP4 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP3 PUSH1 0x7F AND SWAP3 PUSH2 0xE52 JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH9 0x56BC75E2D63100000 DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI PUSH1 0x20 SWAP1 PUSH2 0xF63 PUSH2 0x2AA9 JUMP JUMPDEST SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI PUSH1 0x20 SWAP1 DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x5A9 JUMPI PUSH2 0xF88 PUSH2 0x25DA JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 PUSH2 0xFA2 CALLER DUP5 EQ PUSH2 0x280E JUMP JUMPDEST ADDRESS PUSH0 MSTORE PUSH0 DUP6 MSTORE DUP4 PUSH0 KECCAK256 SLOAD SWAP6 DUP7 ISZERO PUSH2 0x1348 JUMPI PUSH1 0x2 SLOAD SWAP7 DUP8 ISZERO PUSH2 0x1316 JUMPI PUSH1 0x6 SLOAD PUSH2 0xFC9 DUP2 PUSH2 0x28A7 JUMP JUMPDEST SWAP9 PUSH1 0x1E DUP4 MUL DUP4 DUP2 DIV PUSH1 0x1E SUB PUSH2 0x1303 JUMPI PUSH2 0x2710 PUSH2 0xFE7 SWAP2 DIV DUP1 SWAP5 PUSH2 0x2767 JUMP JUMPDEST SWAP7 PUSH0 JUMPDEST DUP4 DUP2 LT PUSH2 0x1248 JUMPI POP POP POP POP ADDRESS PUSH0 MSTORE PUSH0 DUP8 MSTORE DUP5 DUP7 PUSH0 KECCAK256 SLOAD LT PUSH2 0x1205 JUMPI DUP2 DUP8 DUP6 PUSH1 0xC SLOAD AND DUP9 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH4 0x61D027B3 PUSH1 0xE0 SHL DUP3 MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x9B7 JUMPI SWAP1 DUP9 SWAP2 PUSH0 SWAP2 PUSH2 0x11CB JUMPI JUMPDEST POP DUP8 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP5 DUP3 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP3 SWAP1 DUP2 SWAP1 PUSH1 0x40 ADD JUMPDEST SUB DUP2 PUSH0 ADDRESS GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x11C1 JUMPI PUSH0 SWAP2 PUSH2 0x118B JUMPI JUMPDEST POP ISZERO PUSH2 0x1152 JUMPI ADDRESS ISZERO PUSH2 0x113C JUMPI ADDRESS PUSH0 MSTORE PUSH0 DUP7 MSTORE DUP5 PUSH0 KECCAK256 SLOAD SWAP1 DUP5 DUP3 LT PUSH2 0x1111 JUMPI POP DUP4 SWAP3 PUSH32 0xCC16F5DBB4873280815C1EE09DBD06736CFFCC184412CF7A71A0FDB75D397CA5 SWAP3 PUSH2 0x4AF SWAP7 SWAP6 DUP9 SWAP4 ADDRESS PUSH0 MSTORE PUSH0 DUP6 MSTORE SUB DUP7 PUSH0 KECCAK256 SSTORE DUP5 PUSH1 0x2 SLOAD SUB PUSH1 0x2 SSTORE PUSH0 DUP7 MLOAD DUP7 DUP2 MSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP6 ADDRESS SWAP3 LOG3 DUP6 MLOAD SWAP5 DUP6 MSTORE AND SWAP3 LOG2 MLOAD SWAP3 DUP3 DUP5 SWAP4 DUP5 MSTORE DUP4 ADD SWAP1 PUSH2 0x2606 JUMP JUMPDEST DUP6 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE ADDRESS SWAP2 DUP2 ADD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 DUP2 ADD DUP6 SWAP1 MSTORE DUP2 SWAP1 PUSH1 0x60 ADD SUB SWAP1 REVERT JUMPDEST PUSH1 0x24 SWAP1 PUSH0 DUP7 MLOAD SWAP2 PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST DUP5 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x119959481D1C985B9CD9995C8819985A5B1959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 POP DUP7 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x11BA JUMPI JUMPDEST PUSH2 0x11A2 DUP2 DUP4 PUSH2 0x27C0 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x5A9 JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x5A9 JUMPI DUP9 PUSH2 0x1072 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1198 JUMP JUMPDEST DUP7 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP3 DUP2 SWAP4 SWAP3 POP RETURNDATASIZE DUP4 GT PUSH2 0x11FE JUMPI JUMPDEST PUSH2 0x11E2 DUP2 DUP4 PUSH2 0x27C0 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x5A9 JUMPI MLOAD DUP5 DUP2 AND DUP2 SUB PUSH2 0x5A9 JUMPI DUP8 SWAP1 PUSH2 0x105E PUSH2 0x102F JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x11D8 JUMP JUMPDEST DUP6 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP4 ADD DUP9 SWAP1 MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E742042414C554E49206C6971756964697479000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x128A DUP12 DUP10 PUSH2 0x1256 DUP5 PUSH2 0x2774 JUMP JUMPDEST POP SLOAD DUP14 MLOAD PUSH4 0xA3E113FB PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS DUP12 DUP3 ADD SWAP1 DUP2 MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP4 ADD MSTORE SWAP3 DUP4 SWAP2 DUP3 SWAP2 PUSH1 0x40 SWAP1 SWAP2 ADD SWAP1 JUMP JUMPDEST SUB DUP2 DUP7 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x12F9 JUMPI DUP11 DUP6 SWAP4 SWAP3 DUP16 SWAP3 PUSH0 SWAP2 PUSH2 0x12BF JUMPI JUMPDEST POP PUSH2 0x548 PUSH1 0x1 SWAP6 PUSH2 0x90A PUSH2 0x12B8 SWAP5 DUP8 SWAP5 PUSH2 0x2639 JUMP JUMPDEST MSTORE ADD PUSH2 0xFEA JUMP JUMPDEST SWAP5 POP POP POP POP DUP12 DUP3 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x12F2 JUMPI JUMPDEST PUSH2 0x12D9 DUP2 DUP4 PUSH2 0x27C0 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x5A9 JUMPI SWAP1 MLOAD DUP4 SWAP2 SWAP1 DUP14 SWAP1 DUP12 SWAP1 PUSH2 0x548 PUSH2 0x12A3 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x12CF JUMP JUMPDEST DUP12 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x11 DUP6 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP6 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP4 ADD DUP9 SWAP1 MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x4E6F206C6971756964697479 PUSH1 0xA0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP5 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5368617265206D7573742062652067726561746572207468616E203000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI PUSH2 0x13A4 PUSH2 0x29C2 JUMP JUMPDEST DUP3 MLOAD SWAP3 DUP4 SWAP2 DUP2 DUP4 ADD SWAP2 DUP4 MSTORE DUP4 MLOAD DUP1 SWAP3 MSTORE PUSH1 0x60 DUP4 ADD SWAP2 PUSH1 0x20 DUP1 SWAP6 ADD SWAP5 PUSH0 JUMPDEST DUP3 DUP2 LT PUSH2 0x13DC JUMPI DUP6 DUP1 PUSH2 0x4AF DUP8 DUP8 DUP4 DUP3 SUB PUSH1 0x20 DUP6 ADD MSTORE PUSH2 0x2606 JUMP JUMPDEST DUP7 MLOAD ISZERO ISZERO DUP6 MSTORE SWAP6 DUP2 ADD SWAP6 DUP8 SWAP6 POP SWAP4 DUP2 ADD SWAP4 PUSH1 0x1 ADD PUSH2 0x13C1 JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI PUSH2 0x1411 PUSH2 0x1407 CALLDATASIZE PUSH2 0x26F8 JUMP JUMPDEST SWAP6 SWAP2 SWAP1 SWAP3 SWAP4 PUSH2 0x2E60 JUMP JUMPDEST SWAP6 PUSH8 0xDE0B6B3A7640000 SWAP2 DUP3 DUP2 MUL SWAP1 DUP1 ISZERO SWAP1 DUP1 DUP4 DIV DUP6 EQ DUP3 OR ISZERO PUSH2 0x14D6 JUMPI SWAP1 DUP5 PUSH2 0x1443 SWAP3 DUP3 ISZERO PUSH2 0x14C2 JUMPI JUMPDEST POP POP PUSH2 0x30FE JUMP JUMPDEST PUSH8 0x6F05B59D3B20000 DUP2 ADD SWAP2 DUP3 DUP3 GT PUSH2 0x14AF JUMPI POP PUSH2 0x14A9 DUP6 PUSH2 0x14A3 PUSH1 0x20 SWAP11 SWAP8 PUSH2 0x149E PUSH2 0x148F PUSH2 0xCE1 SWAP10 PUSH2 0x304 PUSH2 0xCED SWAP11 DUP11 PUSH2 0x309 SWAP16 SWAP12 PUSH2 0x149E SWAP12 PUSH2 0x1488 SWAP2 LT ISZERO PUSH2 0x30FE JUMP JUMPDEST DIV DUP3 PUSH2 0x321B JUMP JUMPDEST PUSH2 0x1498 DUP12 PUSH2 0x2DF9 JUMP JUMPDEST SWAP1 PUSH2 0x2F12 JUMP JUMPDEST PUSH2 0x31AA JUMP JUMPDEST SWAP1 PUSH2 0x321B JUMP JUMPDEST SWAP5 PUSH2 0x31C9 JUMP JUMPDEST PUSH1 0x11 SWAP1 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x14CE SWAP2 SWAP3 POP DUP5 PUSH2 0x2683 JUMP JUMPDEST EQ DUP5 DUP12 PUSH2 0x143C JUMP JUMPDEST PUSH1 0x11 DUP5 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH3 0xF4240 DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x309 PUSH2 0xCED PUSH2 0x154C PUSH2 0x1542 PUSH2 0x149E PUSH2 0xCE7 PUSH2 0x2EE PUSH2 0xCE1 PUSH2 0x304 PUSH2 0x1533 CALLDATASIZE PUSH2 0x26F8 JUMP JUMPDEST SWAP9 SWAP5 SWAP7 SWAP3 SWAP13 SWAP2 DUP14 SWAP12 SWAP2 SWAP5 PUSH2 0x2E60 JUMP JUMPDEST SWAP8 PUSH2 0x149E DUP10 PUSH2 0x31C9 JUMP JUMPDEST PUSH2 0x321B JUMP JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x5A9 JUMPI PUSH2 0x1582 PUSH2 0xCED PUSH2 0x14A3 PUSH2 0x1542 PUSH2 0x149E PUSH2 0x157C PUSH2 0x2EE PUSH2 0x2E8 PUSH2 0x304 PUSH2 0x1533 CALLDATASIZE PUSH2 0x26F8 JUMP JUMPDEST DUP3 PUSH2 0x321B JUMP JUMPDEST SWAP2 PUSH8 0xDE0B6B3A7640000 SWAP1 DUP2 DUP5 MUL SWAP4 DUP1 ISZERO SWAP1 DUP1 DUP7 DIV DUP5 EQ DUP3 OR ISZERO PUSH2 0x1303 JUMPI SWAP1 DUP4 PUSH2 0x15B4 SWAP3 DUP3 ISZERO PUSH2 0x15DD JUMPI JUMPDEST POP POP PUSH2 0x2DBA JUMP JUMPDEST PUSH8 0x6F05B59D3B20000 DUP5 ADD SWAP3 DUP4 DUP6 GT PUSH2 0x14AF JUMPI POP PUSH2 0x15D6 PUSH1 0x20 SWAP5 DUP5 LT ISZERO PUSH2 0x2DBA JUMP JUMPDEST MLOAD SWAP2 DIV DUP2 MSTORE RETURN JUMPDEST PUSH2 0x15E9 SWAP2 SWAP3 POP DUP8 PUSH2 0x2683 JUMP JUMPDEST EQ DUP4 DUP8 PUSH2 0x15AD JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x7 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI PUSH1 0x9 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH5 0xE8D4A51000 DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x167B PUSH2 0x25DA JUMP JUMPDEST AND PUSH0 MSTORE PUSH0 DUP3 MSTORE DUP1 PUSH0 KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x5A9 JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI PUSH2 0x16A7 PUSH2 0x25DA JUMP JUMPDEST SWAP2 PUSH2 0x16B0 PUSH2 0x25F0 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 PUSH1 0x64 CALLDATALOAD DUP4 DUP2 AND SWAP2 SWAP1 DUP3 SWAP1 SUB PUSH2 0x5A9 JUMPI PUSH1 0x2 PUSH1 0x5 SLOAD EQ PUSH2 0x1AD0 JUMPI PUSH1 0x2 PUSH1 0x5 SSTORE DUP4 DUP4 AND SWAP4 DUP8 AND SWAP3 DUP5 DUP5 EQ PUSH2 0x1A8D JUMPI DUP7 ISZERO PUSH2 0x1A4A JUMPI PUSH2 0x16F9 DUP2 PUSH2 0x2AFF JUMP JUMPDEST SWAP8 PUSH2 0x1703 DUP2 PUSH2 0x2AFF JUMP JUMPDEST SWAP1 PUSH2 0x3E8 SWAP1 DUP2 PUSH2 0x1712 DUP3 PUSH2 0x2CAB JUMP JUMPDEST DIV SWAP11 PUSH8 0xDE0B6B3A7640000 SWAP12 DUP13 DUP2 MUL SWAP1 DUP14 DUP2 DUP4 DIV EQ SWAP1 ISZERO OR ISZERO PUSH2 0x1A37 JUMPI DUP13 SWAP1 DUP5 PUSH2 0x173B DUP9 PUSH2 0x2CAB JUMP JUMPDEST DIV DUP3 DUP2 MUL SWAP3 DUP2 DUP5 DIV EQ SWAP1 ISZERO OR ISZERO PUSH2 0x19CB JUMPI PUSH2 0x176C SWAP2 PUSH2 0x2E8 PUSH2 0x1760 PUSH2 0x1767 SWAP4 DUP10 PUSH2 0x2E60 JUMP JUMPDEST SWAP2 DUP6 PUSH2 0x2E60 JUMP JUMPDEST PUSH2 0x313D JUMP JUMPDEST SWAP3 DUP13 DUP2 PUSH2 0x1778 DUP6 PUSH2 0x2CAB JUMP JUMPDEST DIV DUP2 DUP2 MUL SWAP2 DUP2 DUP4 DIV EQ SWAP1 ISZERO OR ISZERO PUSH2 0x19CB JUMPI DUP14 SWAP1 DUP3 PUSH2 0x1795 DUP10 PUSH2 0x2CAB JUMP JUMPDEST DIV DUP3 DUP2 MUL SWAP3 DUP2 DUP5 DIV EQ SWAP1 ISZERO OR ISZERO PUSH2 0x1A24 JUMPI SWAP1 PUSH2 0x17B0 SWAP2 PUSH2 0x2E60 JUMP JUMPDEST DUP13 PUSH8 0xDE0B6B3A763FFE2 DUP1 DUP3 MUL SWAP2 DUP3 DIV DUP2 SUB PUSH2 0x1A11 JUMPI PUSH2 0x17DB SWAP1 DUP16 PUSH2 0x17D5 SWAP1 DUP5 PUSH2 0x2683 JUMP JUMPDEST EQ PUSH2 0x30FE JUMP JUMPDEST PUSH8 0x6F05B59D3B20000 DUP2 ADD SWAP1 DUP2 DUP2 GT PUSH2 0x1A11 JUMPI DUP16 SWAP3 PUSH2 0x2EE PUSH2 0x1814 PUSH2 0x1820 SWAP6 DUP6 PUSH2 0x180D PUSH2 0xCED SWAP7 PUSH2 0x181A SWAP9 LT ISZERO PUSH2 0x30FE JUMP JUMPDEST DIV DUP12 PUSH2 0x2EC5 JUMP JUMPDEST DUP11 PUSH2 0x2E60 JUMP JUMPDEST DUP4 PUSH2 0x31AA JUMP JUMPDEST SWAP5 PUSH1 0x1 DUP7 LT PUSH2 0x19DE JUMPI SWAP1 DUP1 PUSH2 0x184C DUP16 SWAP5 SWAP4 DUP16 PUSH2 0x1840 DUP11 SWAP2 PUSH2 0x1846 SWAP4 PUSH2 0x2EC5 JUMP JUMPDEST SWAP6 PUSH2 0x321B JUMP JUMPDEST SWAP6 PUSH2 0x2CAB JUMP JUMPDEST DIV DUP4 DUP2 MUL SWAP4 DUP2 DUP6 DIV EQ SWAP1 ISZERO OR ISZERO PUSH2 0x19CB JUMPI SWAP1 DUP14 SWAP3 SWAP2 PUSH2 0x186A DUP9 PUSH2 0x2CAB JUMP JUMPDEST DIV DUP4 DUP2 MUL SWAP4 DUP2 DUP6 DIV EQ SWAP1 ISZERO OR ISZERO PUSH2 0x19CB JUMPI PUSH2 0x1767 DUP6 SWAP5 PUSH2 0x2E8 PUSH2 0x18A5 SWAP6 PUSH2 0x1898 PUSH2 0x18AF SWAP10 SWAP7 PUSH2 0x189E SWAP7 PUSH2 0x2E60 JUMP JUMPDEST SWAP3 PUSH2 0x2E60 JUMP JUMPDEST LT ISZERO PUSH2 0x3225 JUMP JUMPDEST PUSH2 0x189E DUP4 DUP12 PUSH2 0x2E60 JUMP JUMPDEST DUP7 MLOAD PUSH4 0x313CE567 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x20 SWAP10 SWAP1 DUP11 DUP2 DUP7 DUP2 DUP12 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x19C1 JUMPI SWAP1 PUSH1 0xFF SWAP2 PUSH0 SWAP2 PUSH2 0x19A4 JUMPI JUMPDEST POP AND SWAP1 SUB PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 DUP2 DUP2 GT PUSH2 0x1303 JUMPI SWAP2 PUSH2 0x18FF SWAP2 PUSH2 0x1907 SWAP6 SWAP5 SWAP4 AND SWAP1 PUSH2 0x2683 JUMP JUMPDEST SWAP3 DUP4 SWAP2 PUSH2 0x2AFF JUMP JUMPDEST LT PUSH2 0x1968 JUMPI PUSH1 0x1E DUP3 MUL SWAP1 DUP3 DUP3 DIV PUSH1 0x1E EQ DUP4 ISZERO OR ISZERO PUSH2 0x14AF JUMPI POP PUSH2 0x1951 PUSH32 0xCD3829A3813DC3CDD188FD3D01DCF3268C16BE2FDD2DD21D0665418816E46062 SWAP3 PUSH2 0x2710 DUP9 SWAP4 DIV SWAP1 PUSH2 0x2767 JUMP JUMPDEST SWAP7 DUP2 MLOAD SWAP1 DUP2 MSTORE DUP8 DUP10 DUP3 ADD MSTORE LOG4 PUSH1 0x1 PUSH1 0x5 SSTORE MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP6 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x496E73756666696369656E74204C6971756964697479 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x19BB SWAP2 POP DUP13 DUP14 RETURNDATASIZE LT PUSH2 0x9B0 JUMPI PUSH2 0x9A2 DUP2 DUP4 PUSH2 0x27C0 JUMP JUMPDEST DUP13 PUSH2 0x18D8 JUMP JUMPDEST DUP10 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x11 DUP9 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP12 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP11 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x11549497D31253525517D3D555 PUSH1 0x9A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x11 DUP11 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x11 DUP10 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x11 DUP8 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP6 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP5 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E207A65726F PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP6 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP5 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F742073776170207468652073616D6520746F6B656E000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP5 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE REVERT JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI PUSH1 0x6 SLOAD PUSH2 0x1AFB DUP2 PUSH2 0x28A7 JUMP JUMPDEST SWAP1 PUSH0 JUMPDEST DUP2 DUP2 LT PUSH2 0x1B1A JUMPI DUP4 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 SWAP1 PUSH2 0x4AF SWAP1 DUP3 ADD DUP7 PUSH2 0x271E JUMP JUMPDEST DUP1 PUSH2 0x1B26 PUSH1 0x1 SWAP3 PUSH2 0x2774 JUMP JUMPDEST POP DUP3 DUP1 PUSH1 0xA0 SHL SUB SWAP1 SLOAD AND PUSH2 0x1B3A DUP3 DUP7 PUSH2 0x28D9 JUMP JUMPDEST MSTORE ADD PUSH2 0x1AFE JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH1 0x1E DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x309 PUSH2 0x1B9C PUSH2 0x2E8 PUSH2 0xCED PUSH2 0x149E PUSH2 0x149E PUSH2 0x14A9 PUSH2 0x148F PUSH2 0x154C PUSH2 0x304 PUSH2 0x1B8C CALLDATASIZE PUSH2 0x26F8 JUMP JUMPDEST SWAP11 SWAP5 SWAP8 SWAP4 SWAP2 DUP9 SWAP7 SWAP3 SWAP15 SWAP2 SWAP15 PUSH2 0x2E60 JUMP JUMPDEST SWAP13 DUP3 PUSH2 0x2EC5 JUMP JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x5A9 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x5A9 JUMPI PUSH2 0x1BBD PUSH2 0x25DA JUMP JUMPDEST SWAP2 PUSH2 0x1BC6 PUSH2 0x25F0 JUMP JUMPDEST PUSH2 0x1BCF DUP5 PUSH2 0x2AFF JUMP JUMPDEST POP PUSH2 0x1BD9 DUP2 PUSH2 0x2AFF JUMP JUMPDEST POP DUP2 MLOAD PUSH4 0x313CE567 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x20 SWAP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP7 DUP2 DUP8 DUP2 DUP6 DUP8 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x1CDA JUMPI SWAP1 PUSH1 0xFF SWAP2 PUSH0 SWAP2 PUSH2 0x1CBD JUMPI JUMPDEST POP AND SWAP2 PUSH1 0xC SLOAD AND SWAP2 PUSH1 0x4D DUP2 GT PUSH2 0x1CAA JUMPI DUP5 MLOAD PUSH4 0x248391FF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP7 DUP2 ADD SWAP7 DUP8 MSTORE SWAP4 SWAP1 SWAP2 AND PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0xA EXP PUSH1 0x40 DUP6 ADD MSTORE SWAP1 SWAP3 DUP5 SWAP2 DUP5 SWAP2 DUP3 SWAP1 DUP2 SWAP1 PUSH1 0x60 ADD SUB SWAP2 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x1CA0 JUMPI PUSH0 SWAP3 PUSH2 0x1C71 JUMPI JUMPDEST POP MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 SWAP2 POP DUP3 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x1C99 JUMPI JUMPDEST PUSH2 0x1C89 DUP2 DUP4 PUSH2 0x27C0 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x5A9 JUMPI MLOAD SWAP1 DUP4 PUSH2 0x1C6A JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1C7F JUMP JUMPDEST POP MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x11 DUP7 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1CD4 SWAP2 POP DUP9 RETURNDATASIZE DUP11 GT PUSH2 0x9B0 JUMPI PUSH2 0x9A2 DUP2 DUP4 PUSH2 0x27C0 JUMP JUMPDEST DUP9 PUSH2 0x1C0D JUMP JUMPDEST DUP6 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI PUSH1 0x20 PUSH2 0x1CF5 CALLDATASIZE PUSH2 0x26C3 JUMP JUMPDEST PUSH1 0xC SLOAD DUP6 MLOAD PUSH4 0x248391FF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND SWAP8 DUP2 ADD SWAP8 DUP9 MSTORE SWAP3 DUP5 AND PUSH1 0x20 DUP9 ADD MSTORE PUSH1 0x40 DUP8 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP5 DUP6 SWAP3 SWAP1 DUP4 SWAP1 SUB PUSH1 0x60 ADD SWAP2 DUP4 SWAP2 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x1D83 JUMPI PUSH0 SWAP2 PUSH2 0x1D4E JUMPI JUMPDEST PUSH1 0x20 SWAP3 POP MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 POP PUSH1 0x20 DUP3 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1D7B JUMPI JUMPDEST DUP2 PUSH2 0x1D69 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x27C0 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x5A9 JUMPI PUSH1 0x20 SWAP2 MLOAD SWAP1 PUSH2 0x1D44 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x1D5C JUMP JUMPDEST MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI PUSH2 0x4AF PUSH2 0x1DA8 PUSH2 0x2BA2 JUMP JUMPDEST DUP4 SWAP3 SWAP2 SWAP3 MLOAD SWAP4 DUP5 SWAP4 DUP5 MSTORE DUP1 PUSH1 0x20 DUP6 ADD MSTORE DUP4 ADD SWAP1 PUSH2 0x2606 JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH1 0x12 DUP2 MSTORE RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x5A9 JUMPI PUSH2 0x1DEB CALLDATASIZE PUSH2 0x26C3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE DUP9 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 MSTORE SWAP1 DUP8 SWAP1 KECCAK256 SLOAD SWAP3 SWAP6 SWAP4 SWAP5 SWAP4 SWAP1 DUP4 ADD PUSH2 0x1E28 JUMPI JUMPDEST PUSH1 0x20 DUP8 PUSH2 0xD91 DUP9 DUP9 DUP9 PUSH2 0x2CF8 JUMP JUMPDEST DUP6 DUP4 LT PUSH2 0x1E90 JUMPI DUP2 ISZERO PUSH2 0x1E7A JUMPI CALLER ISZERO PUSH2 0x1E64 JUMPI POP PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE DUP7 DUP3 KECCAK256 CALLER DUP4 MSTORE DUP2 MSTORE SWAP1 DUP7 SWAP1 KECCAK256 SWAP2 DUP6 SWAP1 SUB SWAP1 SWAP2 SSTORE DUP3 SWAP1 PUSH2 0xD91 PUSH2 0x1E1A JUMP JUMPDEST PUSH1 0x24 SWAP1 PUSH0 DUP9 MLOAD SWAP2 PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x24 SWAP1 PUSH0 DUP9 MLOAD SWAP2 PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST DUP7 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE CALLER SWAP2 DUP2 ADD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 DUP2 ADD DUP7 SWAP1 MSTORE DUP3 SWAP2 POP PUSH1 0x60 ADD SUB SWAP1 REVERT JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI PUSH1 0x6 SLOAD PUSH2 0x1ED9 DUP2 PUSH2 0x28A7 JUMP JUMPDEST SWAP1 PUSH0 JUMPDEST DUP2 DUP2 LT PUSH2 0x1EF8 JUMPI DUP4 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 SWAP1 PUSH2 0x4AF SWAP1 DUP3 ADD DUP7 PUSH2 0x2606 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH2 0x1F05 DUP2 SWAP4 PUSH2 0x2774 JUMP JUMPDEST POP ADD SLOAD PUSH2 0x1F12 DUP3 DUP7 PUSH2 0x28D9 JUMP JUMPDEST MSTORE ADD PUSH2 0x1EDC JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x1F35 PUSH2 0x2BA2 JUMP JUMPDEST POP SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH4 0x5F5E100 DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x2 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x5A9 JUMPI PUSH2 0x1F92 PUSH2 0x25DA JUMP JUMPDEST PUSH2 0x1F9A PUSH2 0x25F0 JUMP JUMPDEST SWAP3 PUSH2 0x1FA4 DUP3 PUSH2 0x2AFF JUMP JUMPDEST SWAP4 PUSH2 0x1FAE DUP2 PUSH2 0x2AFF JUMP JUMPDEST DUP5 MLOAD PUSH4 0x313CE567 PUSH1 0xE0 SHL DUP1 DUP3 MSTORE PUSH1 0x20 SWAP8 SWAP2 SWAP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP10 DUP8 DUP6 DUP2 DUP12 DUP10 AND GAS STATICCALL SWAP7 DUP8 ISZERO PUSH2 0x19C1 JUMPI SWAP1 DUP11 SWAP2 PUSH0 SWAP9 PUSH2 0x20DB JUMPI JUMPDEST POP DUP5 DUP11 MLOAD DUP1 SWAP8 DUP2 SWAP4 DUP3 MSTORE DUP10 AND GAS STATICCALL SWAP4 DUP5 ISZERO PUSH2 0x20D1 JUMPI PUSH0 SWAP5 PUSH2 0x20B2 JUMPI JUMPDEST POP PUSH8 0xDE0B6B3A7640000 SWAP6 DUP7 DUP3 MUL SWAP2 DUP1 DUP4 DIV DUP9 EQ SWAP1 ISZERO OR ISZERO PUSH2 0x14D6 JUMPI SWAP1 PUSH1 0xFF PUSH2 0x202D SWAP3 AND SWAP1 PUSH2 0x2767 JUMP JUMPDEST SWAP3 DUP6 DUP3 MUL SWAP2 DUP1 DUP4 DIV DUP8 EQ SWAP1 ISZERO OR ISZERO PUSH2 0x209F JUMPI PUSH2 0x205C SWAP2 PUSH1 0xFF PUSH2 0x2050 SWAP3 AND SWAP1 PUSH2 0x2767 JUMP JUMPDEST SWAP6 PUSH2 0x3E8 SWAP2 DUP3 SWAP2 PUSH2 0x2CAB JUMP JUMPDEST DIV SWAP4 DUP6 DUP6 MUL SWAP5 DUP1 DUP7 DIV DUP8 EQ SWAP1 ISZERO OR ISZERO PUSH2 0x209F JUMPI PUSH2 0x2078 SWAP1 PUSH2 0x2CAB JUMP JUMPDEST DIV DUP5 DUP2 MUL SWAP5 DUP2 DUP7 DIV EQ SWAP1 ISZERO OR ISZERO PUSH2 0x14AF JUMPI POP PUSH2 0x1767 SWAP3 PUSH2 0x1898 PUSH2 0x309 SWAP6 SWAP4 PUSH2 0x2E8 SWAP4 PUSH2 0x2E60 JUMP JUMPDEST PUSH1 0x11 DUP4 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x20CA SWAP2 SWAP5 POP DUP10 RETURNDATASIZE DUP12 GT PUSH2 0x9B0 JUMPI PUSH2 0x9A2 DUP2 DUP4 PUSH2 0x27C0 JUMP JUMPDEST SWAP3 DUP10 PUSH2 0x2003 JUMP JUMPDEST DUP9 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x20F3 SWAP2 SWAP9 POP DUP3 RETURNDATASIZE DUP5 GT PUSH2 0x9B0 JUMPI PUSH2 0x9A2 DUP2 DUP4 PUSH2 0x27C0 JUMP JUMPDEST SWAP7 DUP12 PUSH2 0x1FE7 JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x5A9 JUMPI PUSH2 0x2113 PUSH2 0x25DA JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER ISZERO PUSH2 0x218C JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x2176 JUMPI PUSH1 0x20 SWAP4 POP CALLER PUSH0 MSTORE PUSH1 0x1 DUP5 MSTORE DUP3 PUSH0 KECCAK256 DUP3 PUSH0 MSTORE DUP5 MSTORE DUP1 DUP4 PUSH0 KECCAK256 SSTORE DUP3 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 CALLER SWAP3 LOG3 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST DUP3 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 DUP2 DUP7 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP3 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 DUP2 DUP7 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI PUSH2 0x4AF SWAP1 PUSH2 0x21BF PUSH2 0x28ED JUMP JUMPDEST SWAP1 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x2606 JUMP JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x5A9 JUMPI PUSH1 0x20 SWAP2 DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x5A9 JUMPI PUSH2 0x21EF PUSH2 0x25DA JUMP JUMPDEST SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP4 PUSH2 0x2207 DUP6 PUSH1 0x9 SLOAD AND CALLER EQ PUSH2 0x280E JUMP JUMPDEST PUSH2 0x2212 PUSH2 0x34D PUSH2 0x2AA9 JUMP JUMPDEST PUSH2 0x221A PUSH2 0x2BA2 JUMP JUMPDEST PUSH1 0x6 SLOAD SWAP5 SWAP2 PUSH2 0x2228 DUP7 PUSH2 0x28A7 JUMP JUMPDEST SWAP2 PUSH0 JUMPDEST DUP8 DUP2 LT PUSH2 0x2444 JUMPI POP POP POP PUSH0 SWAP1 PUSH0 JUMPDEST DUP7 DUP2 LT PUSH2 0x2425 JUMPI POP PUSH1 0xB SLOAD DUP4 MLOAD PUSH4 0x313CE567 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 DUP10 AND SWAP3 DUP6 DUP3 DUP9 DUP2 DUP8 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x1CDA JUMPI PUSH0 SWAP3 PUSH2 0x2406 JUMPI JUMPDEST POP PUSH1 0xFF PUSH8 0xDE0B6B3A7640000 SWAP3 AND DUP3 SUB SWAP2 DUP3 GT PUSH2 0x1A37 JUMPI PUSH2 0x2293 SWAP2 PUSH2 0x228D SWAP2 PUSH2 0x2639 JUMP JUMPDEST SWAP7 PUSH2 0x28A7 JUMP JUMPDEST SWAP6 PUSH0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x23AE JUMPI PUSH2 0x22A9 DUP2 DUP5 PUSH2 0x28D9 JUMP JUMPDEST MLOAD PUSH2 0x22B7 JUMPI JUMPDEST PUSH1 0x1 ADD PUSH2 0x2296 JUMP JUMPDEST PUSH2 0x22C1 DUP2 DUP5 PUSH2 0x28D9 JUMP JUMPDEST MLOAD DUP7 DUP12 PUSH2 0x22CD DUP5 PUSH2 0x2774 JUMP JUMPDEST POP SLOAD PUSH1 0xC SLOAD DUP10 MLOAD PUSH4 0x248391FF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 DUP2 AND DUP15 DUP4 ADD SWAP1 DUP2 MSTORE SWAP5 SWAP1 SWAP4 AND SWAP1 SWAP3 AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP3 DUP4 SWAP2 DUP3 SWAP1 SUB PUSH1 0x60 ADD SWAP1 DUP3 SWAP1 DUP16 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x11C1 JUMPI PUSH0 SWAP2 PUSH2 0x2381 JUMPI JUMPDEST POP DUP1 ISZERO PUSH2 0x233E JUMPI SWAP1 PUSH1 0x1 SWAP2 PUSH2 0x2336 DUP3 DUP12 PUSH2 0x28D9 JUMP JUMPDEST MSTORE SWAP1 POP PUSH2 0x22AF JUMP JUMPDEST DUP6 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP10 ADD DUP9 SWAP1 MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420746F6B656E20616D6F756E7420746F206164640000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 POP DUP7 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x23A7 JUMPI JUMPDEST PUSH2 0x2398 DUP2 DUP4 PUSH2 0x27C0 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x5A9 JUMPI MLOAD DUP12 PUSH2 0x2321 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x238E JUMP JUMPDEST DUP8 DUP7 PUSH2 0x4AF DUP8 DUP7 PUSH2 0x23BF DUP8 DUP16 PUSH2 0x2C36 JUMP JUMPDEST PUSH32 0xA95AD530009C6F929555E70A66AADBEAE7231E45756C5B028CA77FBAA376E73E DUP3 MLOAD DUP6 DUP2 MSTORE DUP1 PUSH2 0x23F4 CALLER SWAP5 DUP9 DUP4 ADD SWAP1 PUSH2 0x2606 JUMP JUMPDEST SUB SWAP1 LOG2 MLOAD SWAP3 DUP3 DUP5 SWAP4 DUP5 MSTORE DUP4 ADD SWAP1 PUSH2 0x2606 JUMP JUMPDEST PUSH2 0x241E SWAP2 SWAP3 POP DUP7 RETURNDATASIZE DUP9 GT PUSH2 0x9B0 JUMPI PUSH2 0x9A2 DUP2 DUP4 PUSH2 0x27C0 JUMP JUMPDEST SWAP1 DUP11 PUSH2 0x2269 JUMP JUMPDEST SWAP2 PUSH2 0x243D PUSH1 0x1 SWAP2 PUSH2 0x2436 DUP6 DUP6 PUSH2 0x28D9 JUMP JUMPDEST MLOAD SWAP1 PUSH2 0x275A JUMP JUMPDEST SWAP3 ADD PUSH2 0x2239 JUMP JUMPDEST DUP1 PUSH2 0x2710 PUSH2 0x2460 PUSH1 0x1 PUSH2 0x2457 DUP2 SWAP6 PUSH2 0x2774 JUMP JUMPDEST POP ADD SLOAD DUP7 PUSH2 0x2639 JUMP JUMPDEST DIV DUP1 PUSH2 0x246C DUP4 DUP7 PUSH2 0x28D9 JUMP JUMPDEST MLOAD LT PUSH2 0x247A JUMPI JUMPDEST POP ADD PUSH2 0x222B JUMP JUMPDEST PUSH2 0x2488 SWAP1 PUSH2 0x541 DUP4 DUP7 PUSH2 0x28D9 JUMP JUMPDEST PUSH2 0x2492 DUP3 DUP8 PUSH2 0x28D9 JUMP JUMPDEST MSTORE DUP12 PUSH2 0x2473 JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x5A9 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI DUP1 MLOAD SWAP1 PUSH0 SWAP3 PUSH1 0x3 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 SHR SWAP2 PUSH1 0x1 DUP2 AND DUP1 ISZERO PUSH2 0x2583 JUMPI JUMPDEST PUSH1 0x20 SWAP5 DUP6 DUP6 LT DUP3 EQ PUSH2 0x2570 JUMPI POP DUP4 DUP8 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x2550 JUMPI POP PUSH1 0x1 EQ PUSH2 0x24F6 JUMPI JUMPDEST POP POP POP PUSH2 0xE82 DUP3 PUSH2 0x4AF SWAP5 SUB DUP4 PUSH2 0x27C0 JUMP JUMPDEST PUSH1 0x3 PUSH0 SWAP1 DUP2 MSTORE SWAP3 SWAP6 POP PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B JUMPDEST DUP3 DUP5 LT PUSH2 0x253D JUMPI POP POP POP DUP3 PUSH2 0x4AF SWAP5 PUSH2 0xE82 SWAP3 DUP3 ADD ADD SWAP5 PUSH2 0x24E4 JUMP JUMPDEST DUP1 SLOAD DUP7 DUP6 ADD DUP9 ADD MSTORE SWAP3 DUP7 ADD SWAP3 DUP2 ADD PUSH2 0x2521 JUMP JUMPDEST PUSH1 0xFF NOT AND DUP7 DUP6 ADD MSTORE POP POP ISZERO ISZERO PUSH1 0x5 SHL DUP4 ADD ADD SWAP3 POP PUSH2 0xE82 DUP3 PUSH2 0x4AF PUSH2 0x24E4 JUMP JUMPDEST PUSH1 0x22 SWAP1 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP3 PUSH1 0x7F AND SWAP3 PUSH2 0x24C4 JUMP JUMPDEST CALLVALUE PUSH2 0x5A9 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH1 0x20 PUSH1 0x40 SWAP3 DUP2 DUP4 MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP2 DUP3 DUP3 DUP7 ADD MSTORE ADD DUP5 DUP5 ADD MCOPY PUSH0 DUP3 DUP3 ADD DUP5 ADD MSTORE PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x5A9 JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x5A9 JUMPI JUMP JUMPDEST SWAP1 DUP2 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP1 SWAP4 ADD SWAP4 ADD SWAP2 PUSH0 JUMPDEST DUP3 DUP2 LT PUSH2 0x2625 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x2617 JUMP JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x264C JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0x5A9 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH9 0x2B5E3AF16B1880000 DUP2 MSTORE RETURN JUMPDEST DUP2 ISZERO PUSH2 0x268D JUMPI DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0x5A9 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH8 0xDE0B6B3A7640000 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x60 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH1 0x4 CALLDATALOAD DUP3 DUP2 AND DUP2 SUB PUSH2 0x5A9 JUMPI SWAP2 PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 AND DUP2 SUB PUSH2 0x5A9 JUMPI SWAP1 PUSH1 0x44 CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0xC0 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0x5A9 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x44 CALLDATALOAD SWAP1 PUSH1 0x64 CALLDATALOAD SWAP1 PUSH1 0x84 CALLDATALOAD SWAP1 PUSH1 0xA4 CALLDATALOAD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP1 SWAP4 ADD SWAP4 ADD SWAP2 PUSH0 JUMPDEST DUP3 DUP2 LT PUSH2 0x273D JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x272F JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x264C JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x264C JUMPI JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x27AC JUMPI PUSH1 0x6 PUSH0 MSTORE PUSH1 0x1 SHL PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F ADD SWAP1 PUSH0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x27E2 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x27E2 JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x2815 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x4F6E6C7920506572697068657279 PUSH1 0x90 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x2852 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x149958985B185B98D9481B9BDD081B9959591959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x5A9 JUMPI MLOAD PUSH1 0xFF DUP2 AND DUP2 SUB PUSH2 0x5A9 JUMPI SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x28B1 DUP3 PUSH2 0x27F6 JUMP JUMPDEST PUSH2 0x28BE PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x27C0 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP1 SWAP3 PUSH2 0x28CF PUSH1 0x1F NOT SWAP2 PUSH2 0x27F6 JUMP JUMPDEST ADD SWAP1 PUSH1 0x20 CALLDATASIZE SWAP2 ADD CALLDATACOPY JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x27AC JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD PUSH4 0xFA67079 PUSH1 0xE2 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 PUSH0 SWAP1 DUP3 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x29B7 JUMPI PUSH0 SWAP2 PUSH2 0x2929 JUMPI POP SWAP1 JUMP JUMPDEST SWAP1 POP RETURNDATASIZE DUP1 PUSH0 DUP4 RETURNDATACOPY PUSH2 0x293A DUP2 DUP4 PUSH2 0x27C0 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 SWAP1 DUP2 DUP2 DUP5 SUB SLT PUSH2 0x5A9 JUMPI DUP1 MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x5A9 JUMPI ADD SWAP2 DUP1 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x5A9 JUMPI DUP3 MLOAD PUSH2 0x2973 DUP2 PUSH2 0x27F6 JUMP JUMPDEST SWAP4 PUSH2 0x2981 PUSH1 0x40 MLOAD SWAP6 DUP7 PUSH2 0x27C0 JUMP JUMPDEST DUP2 DUP6 MSTORE DUP4 DUP1 DUP7 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x5A9 JUMPI DUP4 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x29A8 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP2 MLOAD DUP2 MSTORE SWAP1 DUP4 ADD SWAP1 DUP4 ADD PUSH2 0x299A JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x29CA PUSH2 0x2BA2 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x6 SLOAD SWAP1 PUSH2 0x29D9 DUP3 PUSH2 0x27F6 JUMP JUMPDEST SWAP2 PUSH2 0x29E7 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x27C0 JUMP JUMPDEST DUP1 DUP4 MSTORE PUSH1 0x1F NOT PUSH2 0x29F6 DUP3 PUSH2 0x27F6 JUMP JUMPDEST ADD CALLDATASIZE PUSH1 0x20 DUP6 ADD CALLDATACOPY PUSH2 0x2A06 DUP2 PUSH2 0x28A7 JUMP JUMPDEST SWAP5 PUSH0 JUMPDEST DUP3 DUP2 LT PUSH2 0x2A18 JUMPI POP POP POP POP SWAP2 SWAP1 JUMP JUMPDEST PUSH2 0x2A22 DUP2 DUP4 PUSH2 0x28D9 JUMP JUMPDEST MLOAD SWAP1 PUSH2 0x2710 SWAP2 DUP3 DUP2 MUL SWAP3 DUP2 DUP5 DIV EQ SWAP1 ISZERO OR ISZERO PUSH2 0x264C JUMPI PUSH2 0x2A44 DUP6 PUSH1 0x1 SWAP4 PUSH2 0x2683 JUMP JUMPDEST PUSH2 0x2A4D DUP3 PUSH2 0x2774 JUMP JUMPDEST POP DUP4 ADD SLOAD DUP4 SWAP2 DUP2 DUP2 GT ISZERO PUSH2 0x2A82 JUMPI SWAP1 PUSH2 0x2A65 SWAP2 PUSH2 0x2767 JUMP JUMPDEST PUSH2 0x2A6F DUP4 DUP12 PUSH2 0x28D9 JUMP JUMPDEST MSTORE PUSH2 0x2A7A DUP3 DUP9 PUSH2 0x28D9 JUMP JUMPDEST MSTORE JUMPDEST ADD PUSH2 0x2A09 JUMP JUMPDEST SWAP1 PUSH2 0x2A8D SWAP3 POP PUSH2 0x2767 JUMP JUMPDEST PUSH2 0x2A97 DUP3 DUP11 PUSH2 0x28D9 JUMP JUMPDEST MSTORE PUSH0 PUSH2 0x2AA3 DUP3 DUP9 PUSH2 0x28D9 JUMP JUMPDEST MSTORE PUSH2 0x2A7C JUMP JUMPDEST PUSH2 0x2AB1 PUSH2 0x29C2 JUMP JUMPDEST PUSH0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x2AF8 JUMPI PUSH2 0x2AC6 DUP2 DUP5 PUSH2 0x28D9 JUMP JUMPDEST MLOAD ISZERO ISZERO DUP1 PUSH2 0x2AE3 JUMPI JUMPDEST PUSH2 0x2ADB JUMPI PUSH1 0x1 ADD PUSH2 0x2AB3 JUMP JUMPDEST POP POP POP PUSH1 0x1 SWAP1 JUMP JUMPDEST POP PUSH2 0x2AEE DUP2 DUP4 PUSH2 0x28D9 JUMP JUMPDEST MLOAD PUSH1 0x7 SLOAD LT PUSH2 0x2ACF JUMP JUMPDEST POP POP POP PUSH0 SWAP1 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA3E113FB PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE SWAP2 PUSH1 0x20 SWAP2 DUP4 SWAP2 AND DUP2 DUP1 PUSH1 0x44 DUP2 ADD JUMPDEST SUB SWAP2 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x29B7 JUMPI PUSH0 SWAP2 PUSH2 0x2B48 JUMPI POP SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x2B6F JUMPI JUMPDEST DUP2 PUSH2 0x2B63 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x27C0 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x5A9 JUMPI MLOAD SWAP1 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x2B56 JUMP JUMPDEST PUSH2 0x2B7F PUSH2 0x2BA2 JUMP JUMPDEST POP PUSH1 0x2 SLOAD DUP1 ISZERO PUSH2 0x2B9C JUMPI PUSH2 0x90A PUSH2 0x2B99 SWAP3 PUSH1 0x8 SLOAD SWAP1 PUSH2 0x2639 JUMP JUMPDEST SWAP1 JUMP JUMPDEST POP POP PUSH0 SWAP1 JUMP JUMPDEST PUSH1 0x6 SLOAD SWAP1 PUSH0 PUSH2 0x2BB0 DUP4 PUSH2 0x28A7 JUMP JUMPDEST PUSH1 0xB SLOAD SWAP1 SWAP4 PUSH0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 JUMPDEST DUP3 DUP5 LT PUSH2 0x2BD3 JUMPI POP POP POP POP SWAP2 SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 PUSH2 0x2C12 PUSH1 0x1 SWAP2 DUP4 PUSH2 0x2BE7 DUP9 PUSH2 0x2774 JUMP JUMPDEST POP SLOAD AND PUSH2 0x2BF3 DUP2 PUSH2 0x2AFF JUMP JUMPDEST SWAP1 DUP7 DUP2 SUB PUSH2 0x2C1C JUMPI POP PUSH2 0x2C06 DUP9 DUP12 PUSH2 0x28D9 JUMP JUMPDEST MSTORE JUMPDEST PUSH2 0x2436 DUP8 DUP11 PUSH2 0x28D9 JUMP JUMPDEST SWAP5 ADD SWAP3 SWAP2 SWAP1 PUSH2 0x2BC4 JUMP JUMPDEST SWAP1 PUSH2 0x2C26 SWAP2 PUSH2 0x3263 JUMP JUMPDEST PUSH2 0x2C30 DUP9 DUP12 PUSH2 0x28D9 JUMP JUMPDEST MSTORE PUSH2 0x2C08 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x2C93 JUMPI PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x20 DUP3 PUSH2 0x2C77 PUSH0 SWAP5 PUSH1 0x2 SLOAD PUSH2 0x275A JUMP JUMPDEST PUSH1 0x2 SSTORE DUP5 DUP5 MSTORE DUP4 DUP3 MSTORE PUSH1 0x40 DUP5 KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x6 SLOAD SWAP1 PUSH0 JUMPDEST DUP3 DUP2 LT PUSH2 0x2CBF JUMPI POP POP POP PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x2CC8 DUP2 PUSH2 0x2774 JUMP JUMPDEST POP SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 AND EQ PUSH2 0x2CE4 JUMPI PUSH1 0x1 ADD PUSH2 0x2CB1 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP PUSH2 0x2CF2 SWAP2 POP PUSH2 0x2774 JUMP JUMPDEST POP ADD SLOAD SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND SWAP3 DUP4 ISZERO PUSH2 0x2DA2 JUMPI AND SWAP3 DUP4 ISZERO PUSH2 0x2C93 JUMPI DUP3 PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SLOAD SWAP1 DUP3 DUP3 LT PUSH2 0x2D70 JUMPI POP DUP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 PUSH1 0x20 SWAP3 DUP6 PUSH0 MSTORE PUSH0 DUP5 MSTORE SUB PUSH1 0x40 PUSH0 KECCAK256 SSTORE DUP5 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x2DC1 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x11549497D1125597D253951154939053 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP1 ISZERO PUSH2 0x2E2C JUMPI PUSH15 0xC097CE7BC90715B34B9F1000000000 SWAP1 DUP1 PUSH1 0x1 SHR DUP3 ADD DUP1 DUP4 GT PUSH2 0x264C JUMPI PUSH2 0x90A PUSH2 0x2B99 SWAP4 DUP3 LT ISZERO PUSH2 0x2DBA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x4552525F4449565F5A45524F PUSH1 0xA0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 DUP1 ISZERO PUSH2 0x2E2C JUMPI PUSH8 0xDE0B6B3A7640000 SWAP2 DUP3 DUP2 MUL SWAP1 DUP1 ISZERO DUP2 DUP4 DIV DUP6 EQ DUP2 OR ISZERO PUSH2 0x264C JUMPI PUSH2 0x2B99 SWAP5 PUSH2 0x2E98 SWAP3 DUP3 ISZERO PUSH2 0x2EB1 JUMPI POP POP PUSH2 0x2DBA JUMP JUMPDEST PUSH2 0x90A PUSH2 0x2EA8 DUP4 PUSH1 0x1 SHR DUP4 PUSH2 0x275A JUMP JUMPDEST SWAP2 DUP3 LT ISZERO PUSH2 0x2DBA JUMP JUMPDEST PUSH2 0x2EBD SWAP2 SWAP3 POP DUP5 PUSH2 0x2683 JUMP JUMPDEST EQ PUSH0 DUP1 PUSH2 0x15AD JUMP JUMPDEST SWAP1 PUSH2 0x2ED0 SWAP1 DUP3 PUSH2 0x275A JUMP JUMPDEST SWAP1 DUP2 LT PUSH2 0x2EDA JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x4552525F4144445F4F564552464C4F57 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 PUSH1 0x1 SWAP3 DUP4 DUP2 LT PUSH2 0x30C1 JUMPI PUSH8 0x1BC16D674EC7FFFF DUP2 GT PUSH2 0x3083 JUMPI PUSH8 0xDE0B6B3A7640000 SWAP2 DUP3 DUP2 DIV SWAP1 DUP4 DUP3 MUL SWAP2 DUP1 DUP4 DIV DUP6 EQ SWAP1 ISZERO OR ISZERO PUSH2 0x264C JUMPI PUSH2 0x2F57 DUP3 DUP6 SWAP3 PUSH2 0x321B JUMP JUMPDEST SWAP2 DIV SWAP2 DUP1 DUP7 DUP5 AND ISZERO PUSH2 0x307D JUMPI DUP2 JUMPDEST SWAP4 DUP8 SHR SWAP1 DUP2 JUMPDEST PUSH2 0x3050 JUMPI POP POP DUP2 ISZERO PUSH2 0x3048 JUMPI PUSH2 0x2F83 SWAP1 SWAP4 SWAP2 SWAP4 PUSH2 0x32A7 JUMP JUMPDEST DUP3 SWAP5 SWAP2 DUP4 SWAP2 PUSH0 SWAP3 DUP10 SWAP6 JUMPDEST PUSH4 0x5F5E100 DUP3 LT ISZERO PUSH2 0x2FAC JUMPI JUMPDEST POP POP POP POP POP POP POP PUSH2 0x2B99 SWAP3 SWAP4 POP PUSH2 0x31AA JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP8 DUP2 DUP10 MUL SWAP3 DUP10 DUP5 DIV DUP4 EQ DUP11 ISZERO OR ISZERO PUSH2 0x264C JUMPI DUP4 PUSH2 0x304 PUSH2 0x2FE9 SWAP3 PUSH2 0xCE1 PUSH2 0x2FE2 PUSH2 0x2FDC DUP12 SWAP10 PUSH2 0x3212 JUMP JUMPDEST DUP14 PUSH2 0x3319 JUMP JUMPDEST SWAP9 SWAP1 PUSH2 0x31AA JUMP JUMPDEST SWAP3 DUP4 ISZERO PUSH2 0x3041 JUMPI DUP5 PUSH2 0x3039 JUMPI JUMPDEST PUSH2 0x3031 JUMPI JUMPDEST DUP3 DUP7 ISZERO PUSH2 0x3022 JUMPI PUSH2 0x300B SWAP2 PUSH2 0x321B JUMP JUMPDEST SWAP8 JUMPDEST PUSH0 NOT DUP2 EQ PUSH2 0x264C JUMPI DUP11 ADD SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2F8D JUMP JUMPDEST PUSH2 0x302B SWAP2 PUSH2 0x2EC5 JUMP JUMPDEST SWAP8 PUSH2 0x300D JUMP JUMPDEST SWAP5 ISZERO SWAP5 PUSH2 0x2FFB JUMP JUMPDEST SWAP6 ISZERO SWAP6 PUSH2 0x2FF6 JUMP JUMPDEST POP SWAP8 PUSH2 0x2F9A JUMP JUMPDEST POP SWAP1 SWAP4 POP POP POP JUMP JUMPDEST DUP1 PUSH2 0x305A SWAP2 PUSH2 0x31AA JUMP JUMPDEST SWAP1 DUP8 DUP2 AND PUSH2 0x306C JUMPI JUMPDEST DUP8 SHR SWAP1 DUP2 PUSH2 0x2F6B JUMP JUMPDEST SWAP4 DUP2 PUSH2 0x3077 SWAP2 PUSH2 0x31AA JUMP JUMPDEST SWAP4 PUSH2 0x3063 JUMP JUMPDEST DUP5 PUSH2 0x2F65 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x8AA4A4BE84A09EAEBE8482A68ABEA89E9EBE90928E9 PUSH1 0x53 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x4552525F42504F575F424153455F544F4F5F4C4F57 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x3105 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x4552525F4D554C5F4F564552464C4F57 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH8 0xDE0B6B3A764001E SWAP1 DUP2 DUP2 MUL SWAP2 DUP2 ISZERO SWAP1 DUP3 DUP5 DIV DUP2 EQ DUP3 OR ISZERO PUSH2 0x264C JUMPI PUSH2 0x316B SWAP3 DUP3 ISZERO PUSH2 0x3196 JUMPI POP POP PUSH2 0x30FE JUMP JUMPDEST PUSH8 0x6F05B59D3B20000 DUP2 ADD DUP1 DUP3 GT PUSH2 0x264C JUMPI PUSH2 0x3192 PUSH8 0xDE0B6B3A7640000 SWAP3 DUP3 LT ISZERO PUSH2 0x30FE JUMP JUMPDEST DIV SWAP1 JUMP JUMPDEST PUSH2 0x31A2 SWAP2 SWAP3 POP DUP5 PUSH2 0x2683 JUMP JUMPDEST EQ PUSH0 DUP1 PUSH2 0x143C JUMP JUMPDEST PUSH2 0x316B SWAP1 PUSH2 0x31B8 DUP4 DUP3 PUSH2 0x2639 JUMP JUMPDEST SWAP3 DUP2 ISZERO SWAP2 DUP3 ISZERO PUSH2 0x3196 JUMPI POP POP PUSH2 0x30FE JUMP JUMPDEST PUSH2 0x31D2 SWAP1 PUSH2 0x32E0 JUMP JUMPDEST PUSH2 0x31D9 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x4552525F5355425F554E444552464C4F57 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x31D2 SWAP1 PUSH2 0x32A7 JUMP JUMPDEST SWAP1 PUSH2 0x31D2 SWAP2 PUSH2 0x3319 JUMP JUMPDEST ISZERO PUSH2 0x322C JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x8AA4A4BE9A82A890BE82A0A0A49EB PUSH1 0x8B SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0xC SLOAD PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH4 0x248391FF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP1 DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x20 SWAP2 DUP4 SWAP2 AND DUP2 DUP1 PUSH1 0x64 DUP2 ADD PUSH2 0x2B33 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP1 DUP3 LT PUSH2 0x32D0 JUMPI POP PUSH8 0xDE0B6B3A763FFFF NOT DUP2 ADD SWAP1 DUP2 GT PUSH2 0x264C JUMPI SWAP1 PUSH0 SWAP1 JUMP JUMPDEST SWAP1 DUP2 SUB SWAP1 DUP2 GT PUSH2 0x264C JUMPI SWAP1 PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 SWAP1 DUP1 DUP3 LT PUSH2 0x32FF JUMPI DUP2 SUB SWAP1 DUP2 GT PUSH2 0x264C JUMPI SWAP1 PUSH0 SWAP1 JUMP JUMPDEST PUSH8 0xDE0B6B3A763FFFF NOT DUP2 ADD SWAP2 POP DUP2 GT PUSH2 0x264C JUMPI SWAP1 PUSH1 0x1 SWAP1 JUMP JUMPDEST DUP2 DUP2 LT PUSH2 0x332F JUMPI SWAP1 PUSH2 0x332A SWAP2 PUSH2 0x2767 JUMP JUMPDEST SWAP1 PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x3338 SWAP2 PUSH2 0x2767 JUMP JUMPDEST SWAP1 PUSH1 0x1 SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB7 SHL MUL 0xD2 0xC9 0xC6 PUSH17 0x70ABD5EDD7AED54964FA1025337A855A65 JUMPDEST 0xA9 PUSH23 0x286C7BC78B64736F6C634300081900339016D09D72D40F 0xDA 0xE2 REVERT DUP13 0xEA 0xC6 0xB6 0x23 0x4C PUSH24 0x6214FD39C1CD1E609A0528C199300A26469706673582212 KECCAK256 0xE PUSH14 0xEB655F5A71CE04C035882674114A 0x2D 0x28 0x2C PUSH2 0xD02A 0xC8 SWAP3 STATICCALL 0xCE PUSH2 0x502D 0xF7 DUP8 SLT PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ","sourceMap":"1731:4718:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1731:4718:16;;;;2357:1:0;1731:4718:16;;:::i;:::-;2303:62:0;;:::i;:::-;2357:1;:::i;:::-;1731:4718:16;;;;;;;;;;;-1:-1:-1;;1731:4718:16;;;;;;:::i;:::-;2303:62:0;;:::i;:::-;6195:25:16;1731:4718;;-1:-1:-1;;;;;;1731:4718:16;-1:-1:-1;;;;;1731:4718:16;;;;;;;;;;;;;;;;;-1:-1:-1;;1731:4718:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;1731:4718:16;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1731:4718:16;;;;;;:::i;:::-;8837:64:1;;1731:4718:16;;;;;;;;4301:16:1;1731:4718:16;;;;4726:16:1;;:34;;;;1731:4718:16;4805:1:1;4790:16;:50;;;;1731:4718:16;4855:13:1;:30;;;;1731:4718:16;4851:91:1;;;-1:-1:-1;;;1731:4718:16;;4805:1:1;1731:4718:16;;;;4979:67:1;;1731:4718:16;6893:76:1;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;6961:1;2176:10:16;6961:1:1;:::i;:::-;1731:4718:16;;;;;;;;;2194:24;1731:4718;;;2194:24;1731:4718;5066:101:1;;1731:4718:16;5066:101:1;1731:4718:16;;-1:-1:-1;;;;1731:4718:16;;;;-1:-1:-1;1731:4718:16;;5142:14:1;;1731:4718:16;;5142:14:1;1731:4718:16;4979:67:1;-1:-1:-1;;1731:4718:16;;;;;4979:67:1;;;4851:91;1731:4718:16;;-1:-1:-1;;;4908:23:1;;;4855:30;4872:13;;;4855:30;;;4790:50;4818:4;4810:25;:30;;-1:-1:-1;4790:50:1;;4726:34;;;-1:-1:-1;4726:34:1;;1731:4718:16;;;;;;;-1:-1:-1;;1731:4718:16;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1731:4718:16;;;;;;:::i;:::-;;;;5338:30;;;;:::i;:::-;5375:17;1731:4718;;-1:-1:-1;;;;;1731:4718:16;;;5406:13;1731:4718;;5421:19;;;;;;5401:411;5846:20;;;;;;;:::i;:::-;5878:13;1731:4718;5893:9;;;;;;1731:4718;;;;;;;;;;;;;;:::i;5904:3::-;5930:8;;;1731:4718;5930:8;;;:::i;:::-;1731:4718;;5918:20;;;;:::i;:::-;1731:4718;;5878:13;;5442:3;5489:11;;;;;;;;;;:::i;:::-;1731:4718;;;;;;;;;;;;;;5536:16;;1731:4718;5536:16;;;;;;;;;;;1731:4718;5536:16;;;5442:3;5568:13;1731:4718;5602:3;1731:4718;;5583:17;;;;;5622:9;;;;;;:::i;:::-;1731:4718;;5622:18;5618:115;;1731:4718;;5568:13;;5618:115;5655:28;;;;;;;;;;;;:::i;:::-;1731:4718;-1:-1:-1;;1731:4718:16;;;;;;5716:5;5563:179;1731:4718;;5756:21;;5752:53;;1731:4718;;5406:13;;;;5752:53;5790:5;;1731:4718;;;;;;;;;;;;5583:17;;;;;;;;;;;;5536:16;;;;;;;1731:4718;5536:16;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;1731:4718;;;;;;;;;;;;;;;;-1:-1:-1;;1731:4718:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1731:4718:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1731:4718:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;8837:64:1;1731:4718:16;;;;;;;;;;6431:44:1;;;;;1731:4718:16;6427:105:1;;;;2328:24:16;1731:4718;;-1:-1:-1;;;;;;1731:4718:16;-1:-1:-1;;;;;1731:4718:16;;;;;-1:-1:-1;;1731:4718:16;;;;-1:-1:-1;;;1731:4718:16;-1:-1:-1;;;;1731:4718:16;;;;;;;;6656:20:1;;1731:4718:16;;6656:20:1;1731:4718:16;6427:105:1;1731:4718:16;;-1:-1:-1;;;6498:23:1;;;6431:44;1731:4718:16;;6450:25:1;;;-1:-1:-1;6431:44:1;;;;1731:4718:16;;;;;;;-1:-1:-1;;1731:4718:16;;;;-1:-1:-1;;;;;;;;;;;1731:4718:16;;;-1:-1:-1;;;;;1731:4718:16;;;;;;;;;;;;;;;-1:-1:-1;;1731:4718:16;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;1731:4718:16;;;;1948:24;1731:4718;;;-1:-1:-1;;;;;1731:4718:16;;;;;;;;;;;;;;-1:-1:-1;;1731:4718:16;;;;2303:62:0;;:::i;:::-;-1:-1:-1;;;;;;;;;;;1731:4718:16;;-1:-1:-1;;;;;;1731:4718:16;;;;;;;-1:-1:-1;;;;;1731:4718:16;3975:40:0;1731:4718:16;;3975:40:0;1731:4718:16;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;-1:-1:-1;;;;;1731:4718:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1731:4718:16;;;;5111:6:2;-1:-1:-1;;;;;1731:4718:16;5102:4:2;5094:23;5090:145;;1731:4718:16;;;1327:66:6;1731:4718:16;;;5090:145:2;1731:4718:16;-1:-1:-1;;;5195:29:2;;;1731:4718:16;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4688:6:2;1731:4718:16;;4679:4:2;4671:23;;;:120;;;;1731:4718:16;4654:251:2;;;2303:62:0;;:::i;:::-;1731:4718:16;;;;;;;;6151:52:2;;;;;;;;;1731:4718:16;;6151:52:2;;;1731:4718:16;-1:-1:-1;6147:437:2;;1731:4718:16;;;;;;2320:47:6;;;;6513:60:2;;;;1731:4718:16;6513:60:2;6147:437;1327:66:6;;;;;;;;6245:40:2;;;;6241:120;;2263:29:6;;;:34;2259:119;;-1:-1:-1;1731:4718:16;;-1:-1:-1;;;;;;1731:4718:16;;;;;;;;2922:27:6;-1:-1:-1;;2922:27:6;1731:4718:16;;2964:15:6;:11;;4255:25:11;;1731:4718:16;4297:55:11;4255:25;;;;;;;;;1731:4718:16;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;4297:55:11;:::i;1731:4718:16:-;-1:-1:-1;1731:4718:16;;-1:-1:-1;4297:55:11;:::i;2960:148:6:-;6648:9;;;;;;;;6644:70;;1731:4718:16;6644:70:6;-1:-1:-1;;;6684:19:6;;;2259:119;1731:4718:16;;-1:-1:-1;;;2320:47:6;;;;;1731:4718:16;;;2320:47:6;6241:120:2;1731:4718:16;;-1:-1:-1;;;6312:34:2;;;;;1731:4718:16;;;;6312:34:2;6151:52;;;;;;;;;;;;;;;;;:::i;:::-;;;1731:4718:16;;;;;6151:52:2;;;;;;;;;4654:251;1731:4718:16;;-1:-1:-1;;;4865:29:2;;1731:4718:16;;4865:29:2;4671:120;1731:4718:16;;;1327:66:6;1731:4718:16;;4749:42:2;;4671:120;;;1731:4718:16;;;;;;-1:-1:-1;;1731:4718:16;;;;;-1:-1:-1;;;;;1731:4718:16;;:::i;:::-;;;;;;;;;;;4632:16;;;;;;;;;;1731:4718;4632:16;1731:4718;4632:16;;;1731:4718;;;;;;;;;;;;;;:::i;4632:16::-;;;;;;;1731:4718;4632:16;;;;;;:::i;:::-;;;;;;1731:4718;;;;;;;;;;;;;;;-1:-1:-1;;1731:4718:16;;;;;;;;1819:25;;;;;;1731:4718;1819:25;;:::i;:::-;1731:4718;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1731:4718:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2956:9:16;1731:4718;-1:-1:-1;;;;;1731:4718:16;;;;-1:-1:-1;1731:4718:16;;;;-1:-1:-1;2956:23:16;;1731:4718;;;;;;;3016:17;1731:4718;;;;;;;3085:31;1731:4718;;;3169:13;1731:4718;;;3164:227;1731:4718;;;3439:10;1731:4718;;;;;3422:65;;;;;;;;;;;;;;;;;;;;;;;;;1731:4718;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1731:4718:16;;;;;;-1:-1:-1;;1731:4718:16;;;3422:65;;-1:-1:-1;3422:65:16;;;;;1731:4718;;;;;-1:-1:-1;;;1731:4718:16;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;2956:9;1731:4718;;;;;;;;;;;;;3581:13;1731:4718;3576:226;1731:4718;;;3576:226;1731:4718;;;;3815:44;1731:4718;;;3439:10;1731:4718;;;;;;;;;;;;;;;:::i;:::-;;;;;;3815:44;;;1731:4718;;;;;3615:3;1731:4718;;;;;;;;3596:17;;;;;1731:4718;;;;;;;;;3634:17;;;;;1731:4718;;;3629:166;3615:3;;1731:4718;3581:13;;;;;;;3672:3;1731:4718;;;;;;3653:17;;;;;3696:9;;;;;;;:::i;:::-;1731:4718;;;;;;;;;;3707:9;;;;;:::i;:::-;1731:4718;;;;;;;;;;;;;;;;;;;;;3750:9;;;;;:::i;:::-;1731:4718;;;;;;;;;;3761:9;;;;;:::i;:::-;1731:4718;;;;;;;;;;;;;;;;;;3634:17;;;;;;3653;;;;;;;1731:4718;;;;;;;;;;;;3596:17;;;;;;1731:4718;;;;;;;;;;;;3422:65;1731:4718;;;;;;;;;;;;;;;;-1:-1:-1;1731:4718:16;;;;;;;;;;;;;3422:65;1731:4718;;;;;;;;;;;3203:3;1731:4718;;3184:17;;;;;1731:4718;;;;;;;;3222:17;;;;;;;;;1731:4718;;;3217:167;3203:3;;;;;;1731:4718;3169:13;;;;3260:3;1731:4718;;;;;;;;;3241:17;;;;;3300:9;;3311;3300;;;;;;:::i;:::-;1731:4718;;;;;;;;;3311:9;;:::i;:::-;1731:4718;;;;;;;;;;;;;3260:3;;3222:17;;1731:4718;;3222:17;;;;3260:3;3222:17;;1731:4718;;;-1:-1:-1;;;1731:4718:16;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1731:4718:16;;;;;;;3241:17;;;;;;;;;;;1731:4718;;;;;;;;;;;;3184:17;;;1731:4718;;;-1:-1:-1;;;1731:4718:16;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1731:4718:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1731:4718:16;;;;;;;;;;;;;-1:-1:-1;;;1731:4718:16;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1731:4718:16;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1731:4718:16;;;;1918:25;1731:4718;-1:-1:-1;;;;;1731:4718:16;;;;;;;;;;-1:-1:-1;;;;;1731:4718:16;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;1731:4718:16;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1731:4718:16;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;1731:4718:16;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1731:4718:16;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;1731:4718:16;;;;;;;;;;;;;;;;6232:214;6319:1;1731:4718;6319:1;1731:4718;6302:120;6322:19;;;;;;6428:12;;;6319:1;6232:214;:::o;6343:3::-;6361:11;;;:::i;:::-;1731:4718;;;;;;;;-1:-1:-1;;;;;1731:4718:16;;;;;;6361:20;6357:58;;1731:4718;;6307:13;;6357:58;6394:11;;;1731:4718;6394:11;:::o;1731:4718::-;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;:::o;3405:215:0:-;-1:-1:-1;;;;;1731:4718:16;;;;3489:22:0;;3485:91;;-1:-1:-1;;;;;;;;;;;1731:4718:16;;-1:-1:-1;;;;;;1731:4718:16;;;;;;;;3975:40:0;-1:-1:-1;;3975:40:0;3405:215::o;3485:91::-;1731:4718:16;;-1:-1:-1;;;3534:31:0;;3509:1;3534:31;;;1731:4718:16;;;3534:31:0;2658:162;-1:-1:-1;;;;;;;;;;;1731:4718:16;-1:-1:-1;;;;;1731:4718:16;966:10:3;2717:23:0;2713:101;;2658:162::o;2713:101::-;1731:4718:16;;-1:-1:-1;;;2763:40:0;;966:10:3;2763:40:0;;;1731:4718:16;;;2763:40:0;7084:141:1;1731:4718:16;8837:64:1;1731:4718:16;;;;7150:18:1;7146:73;;7084:141::o;7146:73::-;1731:4718:16;;-1:-1:-1;;;7191:17:1;;;;;4625:582:11;;4797:8;;-1:-1:-1;1731:4718:16;;5874:21:11;:17;;6046:142;;;;;;5870:383;1731:4718:16;;-1:-1:-1;;;6225:17:11;;;;;4793:408;1731:4718:16;;5045:22:11;:49;;;4793:408;5041:119;;5173:17;;:::o;5041:119::-;1731:4718:16;;-1:-1:-1;;;5121:24:11;;-1:-1:-1;;;;;1731:4718:16;;;5121:24:11;;;1731:4718:16;;;5121:24:11;5045:49;5071:18;;;:23;5045:49;"},"gasEstimates":{"creation":{"codeDepositCost":"4143800","executionCost":"infinite","totalCost":"infinite"},"external":{"UPGRADE_INTERFACE_VERSION()":"657","allPools(uint256)":"6662","changePeriphery(address)":"infinite","createPool(address[],uint256[],uint256)":"infinite","getAllPools()":"infinite","getPool(address,address)":"2732","getPoolAssets(address)":"infinite","getPoolByAssets(address,address)":"2600","getPoolsByAsset(address)":"infinite","getPoolsCount()":"2596","initialize(address)":"infinite","owner()":"infinite","periphery()":"2486","poolExist(address)":"infinite","proxiableUUID()":"infinite","rebalancer()":"2272","reinitialize(address,uint64)":"50171","renounceOwnership()":"infinite","transferOwnership(address)":"infinite","upgradeToAndCall(address,bytes)":"infinite"},"internal":{"_authorizeUpgrade(address)":"infinite"}},"methodIdentifiers":{"UPGRADE_INTERFACE_VERSION()":"ad3cb1cc","allPools(uint256)":"41d1de97","changePeriphery(address)":"e9b31cff","createPool(address[],uint256[],uint256)":"3069873b","getAllPools()":"d88ff1f4","getPool(address,address)":"531aa03e","getPoolAssets(address)":"4276b97b","getPoolByAssets(address,address)":"2d5e94a7","getPoolsByAsset(address)":"b4340e6a","getPoolsCount()":"b4ac6860","initialize(address)":"c4d66de8","owner()":"8da5cb5b","periphery()":"77aace1a","poolExist(address)":"89345efb","proxiableUUID()":"52d1902d","rebalancer()":"01d22ccd","reinitialize(address,uint64)":"8f2248bc","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b","upgradeToAndCall(address,bytes)":"4f1ef286"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"rebalancer\",\"type\":\"address\"}],\"name\":\"PoolCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allPools\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newPeriphery\",\"type\":\"address\"}],\"name\":\"changePeriphery\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"weights\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"trigger\",\"type\":\"uint256\"}],\"name\":\"createPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllPools\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"getPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"poolAddress\",\"type\":\"address\"}],\"name\":\"getPoolAssets\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"asset2\",\"type\":\"address\"}],\"name\":\"getPoolByAssets\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getPoolsByAsset\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPoolsCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_rebalancer\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"periphery\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_pool\",\"type\":\"address\"}],\"name\":\"poolExist\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rebalancer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_rebalancer\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"_version\",\"type\":\"uint64\"}],\"name\":\"reinitialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"changePeriphery(address)\":{\"details\":\"Changes the address of the periphery contract.\",\"params\":{\"_newPeriphery\":\"The new address of the periphery contract.\"}},\"createPool(address[],uint256[],uint256)\":{\"details\":\"Creates a new BaluniV1Pool contract and registers it in the factory.\",\"params\":{\"assets\":\"The array of asset addresses to be included in the pool.\",\"trigger\":\"The trigger value for rebalancing the pool.\",\"weights\":\"The array of weights corresponding to each asset in the pool.\"},\"returns\":{\"_0\":\"The address of the newly created pool.\"}},\"getAllPools()\":{\"details\":\"Retrieves all the pools created by the factory.\",\"returns\":{\"_0\":\"An array of pool addresses.\"}},\"getPoolAssets(address)\":{\"details\":\"Retrieves the assets of a specific pool.\",\"params\":{\"poolAddress\":\"The address of the pool.\"},\"returns\":{\"_0\":\"An array of asset addresses.\"}},\"getPoolByAssets(address,address)\":{\"details\":\"Retrieves the pool address based on the given assets.\",\"params\":{\"asset1\":\"The address of the first asset.\",\"asset2\":\"The address of the second asset.\"},\"returns\":{\"_0\":\"The address of the pool.\"}},\"getPoolsByAsset(address)\":{\"details\":\"Returns an array of pool addresses that contain the specified token.\",\"params\":{\"token\":\"The address of the token to search for.\"},\"returns\":{\"_0\":\"An array of pool addresses.\"}},\"getPoolsCount()\":{\"details\":\"Retrieves the number of pools created by the factory.\",\"returns\":{\"_0\":\"The count of pools.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BaluniV1PoolFactory.sol\":\"BaluniV1PoolFactory\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {ContextUpgradeable} from \\\"../utils/ContextUpgradeable.sol\\\";\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\\n    /// @custom:storage-location erc7201:openzeppelin.storage.Ownable\\n    struct OwnableStorage {\\n        address _owner;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.Ownable\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant OwnableStorageLocation = 0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300;\\n\\n    function _getOwnableStorage() private pure returns (OwnableStorage storage $) {\\n        assembly {\\n            $.slot := OwnableStorageLocation\\n        }\\n    }\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    function __Ownable_init(address initialOwner) internal onlyInitializing {\\n        __Ownable_init_unchained(initialOwner);\\n    }\\n\\n    function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        OwnableStorage storage $ = _getOwnableStorage();\\n        return $._owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        OwnableStorage storage $ = _getOwnableStorage();\\n        address oldOwner = $._owner;\\n        $._owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Storage of the initializable contract.\\n     *\\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\\n     * when using with upgradeable contracts.\\n     *\\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\\n     */\\n    struct InitializableStorage {\\n        /**\\n         * @dev Indicates that the contract has been initialized.\\n         */\\n        uint64 _initialized;\\n        /**\\n         * @dev Indicates that the contract is in the process of being initialized.\\n         */\\n        bool _initializing;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.Initializable\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\\n\\n    /**\\n     * @dev The contract is already initialized.\\n     */\\n    error InvalidInitialization();\\n\\n    /**\\n     * @dev The contract is not initializing.\\n     */\\n    error NotInitializing();\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint64 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\\n     * production.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        // Cache values to avoid duplicated sloads\\n        bool isTopLevelCall = !$._initializing;\\n        uint64 initialized = $._initialized;\\n\\n        // Allowed calls:\\n        // - initialSetup: the contract is not in the initializing state and no previous version was\\n        //                 initialized\\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\\n        //                 current contract is just being deployed\\n        bool initialSetup = initialized == 0 && isTopLevelCall;\\n        bool construction = initialized == 1 && address(this).code.length == 0;\\n\\n        if (!initialSetup && !construction) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = 1;\\n        if (isTopLevelCall) {\\n            $._initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            $._initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint64 version) {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing || $._initialized >= version) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = version;\\n        $._initializing = true;\\n        _;\\n        $._initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        _checkInitializing();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\\n     */\\n    function _checkInitializing() internal view virtual {\\n        if (!_isInitializing()) {\\n            revert NotInitializing();\\n        }\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing) {\\n            revert InvalidInitialization();\\n        }\\n        if ($._initialized != type(uint64).max) {\\n            $._initialized = type(uint64).max;\\n            emit Initialized(type(uint64).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint64) {\\n        return _getInitializableStorage()._initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _getInitializableStorage()._initializing;\\n    }\\n\\n    /**\\n     * @dev Returns a pointer to the storage namespace.\\n     */\\n    // solhint-disable-next-line var-name-mixedcase\\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\\n        assembly {\\n            $.slot := INITIALIZABLE_STORAGE\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/UUPSUpgradeable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC1822Proxiable} from \\\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\\\";\\nimport {ERC1967Utils} from \\\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\\\";\\nimport {Initializable} from \\\"./Initializable.sol\\\";\\n\\n/**\\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\\n *\\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\\n * `UUPSUpgradeable` with a custom implementation of upgrades.\\n *\\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\\n */\\nabstract contract UUPSUpgradeable is Initializable, IERC1822Proxiable {\\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable\\n    address private immutable __self = address(this);\\n\\n    /**\\n     * @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\\n     * and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\\n     * while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\\n     * If the getter returns `\\\"5.0.0\\\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\\n     * be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\\n     * during an upgrade.\\n     */\\n    string public constant UPGRADE_INTERFACE_VERSION = \\\"5.0.0\\\";\\n\\n    /**\\n     * @dev The call is from an unauthorized context.\\n     */\\n    error UUPSUnauthorizedCallContext();\\n\\n    /**\\n     * @dev The storage `slot` is unsupported as a UUID.\\n     */\\n    error UUPSUnsupportedProxiableUUID(bytes32 slot);\\n\\n    /**\\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\\n     * a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\\n     * function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\\n     * fail.\\n     */\\n    modifier onlyProxy() {\\n        _checkProxy();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\\n     * callable on the implementing contract but not through proxies.\\n     */\\n    modifier notDelegated() {\\n        _checkNotDelegated();\\n        _;\\n    }\\n\\n    function __UUPSUpgradeable_init() internal onlyInitializing {\\n    }\\n\\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\\n    }\\n    /**\\n     * @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\\n     */\\n    function proxiableUUID() external view virtual notDelegated returns (bytes32) {\\n        return ERC1967Utils.IMPLEMENTATION_SLOT;\\n    }\\n\\n    /**\\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\\n     * encoded in `data`.\\n     *\\n     * Calls {_authorizeUpgrade}.\\n     *\\n     * Emits an {Upgraded} event.\\n     *\\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\\n     */\\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {\\n        _authorizeUpgrade(newImplementation);\\n        _upgradeToAndCallUUPS(newImplementation, data);\\n    }\\n\\n    /**\\n     * @dev Reverts if the execution is not performed via delegatecall or the execution\\n     * context is not of a proxy with an ERC1967-compliant implementation pointing to self.\\n     * See {_onlyProxy}.\\n     */\\n    function _checkProxy() internal view virtual {\\n        if (\\n            address(this) == __self || // Must be called through delegatecall\\n            ERC1967Utils.getImplementation() != __self // Must be called through an active proxy\\n        ) {\\n            revert UUPSUnauthorizedCallContext();\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts if the execution is performed via delegatecall.\\n     * See {notDelegated}.\\n     */\\n    function _checkNotDelegated() internal view virtual {\\n        if (address(this) != __self) {\\n            // Must not be called through delegatecall\\n            revert UUPSUnauthorizedCallContext();\\n        }\\n    }\\n\\n    /**\\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\\n     * {upgradeToAndCall}.\\n     *\\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\\n     *\\n     * ```solidity\\n     * function _authorizeUpgrade(address) internal onlyOwner {}\\n     * ```\\n     */\\n    function _authorizeUpgrade(address newImplementation) internal virtual;\\n\\n    /**\\n     * @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\\n     *\\n     * As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\\n     * is expected to be the implementation slot in ERC1967.\\n     *\\n     * Emits an {IERC1967-Upgraded} event.\\n     */\\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {\\n        try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\\n            if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {\\n                revert UUPSUnsupportedProxiableUUID(slot);\\n            }\\n            ERC1967Utils.upgradeToAndCall(newImplementation, data);\\n        } catch {\\n            // The implementation is not UUPS\\n            revert ERC1967Utils.ERC1967InvalidImplementation(newImplementation);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x3f13b947637c4969c0644cab4ef399cdc4b67f101463b8775c5a43b118558e53\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC1822.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\\n * proxy whose upgrades are fully controlled by the current implementation.\\n */\\ninterface IERC1822Proxiable {\\n    /**\\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\\n     * address.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy.\\n     */\\n    function proxiableUUID() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/ERC1967/ERC1967Utils.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IBeacon} from \\\"../beacon/IBeacon.sol\\\";\\nimport {Address} from \\\"../../utils/Address.sol\\\";\\nimport {StorageSlot} from \\\"../../utils/StorageSlot.sol\\\";\\n\\n/**\\n * @dev This abstract contract provides getters and event emitting update functions for\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\\n */\\nlibrary ERC1967Utils {\\n    // We re-declare ERC-1967 events here because they can't be used directly from IERC1967.\\n    // This will be fixed in Solidity 0.8.21. At that point we should remove these events.\\n    /**\\n     * @dev Emitted when the implementation is upgraded.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Emitted when the admin account has changed.\\n     */\\n    event AdminChanged(address previousAdmin, address newAdmin);\\n\\n    /**\\n     * @dev Emitted when the beacon is changed.\\n     */\\n    event BeaconUpgraded(address indexed beacon);\\n\\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /**\\n     * @dev The `implementation` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidImplementation(address implementation);\\n\\n    /**\\n     * @dev The `admin` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidAdmin(address admin);\\n\\n    /**\\n     * @dev The `beacon` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidBeacon(address beacon);\\n\\n    /**\\n     * @dev An upgrade function sees `msg.value > 0` that may be lost.\\n     */\\n    error ERC1967NonPayable();\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function getImplementation() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 implementation slot.\\n     */\\n    function _setImplementation(address newImplementation) private {\\n        if (newImplementation.code.length == 0) {\\n            revert ERC1967InvalidImplementation(newImplementation);\\n        }\\n        StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation;\\n    }\\n\\n    /**\\n     * @dev Performs implementation upgrade with additional setup call if data is nonempty.\\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\\n     * to avoid stuck value in the contract.\\n     *\\n     * Emits an {IERC1967-Upgraded} event.\\n     */\\n    function upgradeToAndCall(address newImplementation, bytes memory data) internal {\\n        _setImplementation(newImplementation);\\n        emit Upgraded(newImplementation);\\n\\n        if (data.length > 0) {\\n            Address.functionDelegateCall(newImplementation, data);\\n        } else {\\n            _checkNonPayable();\\n        }\\n    }\\n\\n    /**\\n     * @dev Storage slot with the admin of the contract.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n\\n    /**\\n     * @dev Returns the current admin.\\n     *\\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using\\n     * the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\\n     */\\n    function getAdmin() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(ADMIN_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 admin slot.\\n     */\\n    function _setAdmin(address newAdmin) private {\\n        if (newAdmin == address(0)) {\\n            revert ERC1967InvalidAdmin(address(0));\\n        }\\n        StorageSlot.getAddressSlot(ADMIN_SLOT).value = newAdmin;\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {IERC1967-AdminChanged} event.\\n     */\\n    function changeAdmin(address newAdmin) internal {\\n        emit AdminChanged(getAdmin(), newAdmin);\\n        _setAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.beacon\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\\n\\n    /**\\n     * @dev Returns the current beacon.\\n     */\\n    function getBeacon() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(BEACON_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\\n     */\\n    function _setBeacon(address newBeacon) private {\\n        if (newBeacon.code.length == 0) {\\n            revert ERC1967InvalidBeacon(newBeacon);\\n        }\\n\\n        StorageSlot.getAddressSlot(BEACON_SLOT).value = newBeacon;\\n\\n        address beaconImplementation = IBeacon(newBeacon).implementation();\\n        if (beaconImplementation.code.length == 0) {\\n            revert ERC1967InvalidImplementation(beaconImplementation);\\n        }\\n    }\\n\\n    /**\\n     * @dev Change the beacon and trigger a setup call if data is nonempty.\\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\\n     * to avoid stuck value in the contract.\\n     *\\n     * Emits an {IERC1967-BeaconUpgraded} event.\\n     *\\n     * CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\\n     * it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\\n     * efficiency.\\n     */\\n    function upgradeBeaconToAndCall(address newBeacon, bytes memory data) internal {\\n        _setBeacon(newBeacon);\\n        emit BeaconUpgraded(newBeacon);\\n\\n        if (data.length > 0) {\\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\\n        } else {\\n            _checkNonPayable();\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\\n     * if an upgrade doesn't perform an initialization call.\\n     */\\n    function _checkNonPayable() private {\\n        if (msg.value > 0) {\\n            revert ERC1967NonPayable();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeacon {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {UpgradeableBeacon} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"./IERC20.sol\\\";\\nimport {IERC20Metadata} from \\\"./extensions/IERC20Metadata.sol\\\";\\nimport {Context} from \\\"../../utils/Context.sol\\\";\\nimport {IERC20Errors} from \\\"../../interfaces/draft-IERC6093.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n */\\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\\n    mapping(address account => uint256) private _balances;\\n\\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `value`.\\n     */\\n    function transfer(address to, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `value`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `value`.\\n     */\\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, value);\\n        _transfer(from, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _transfer(address from, address to, uint256 value) internal {\\n        if (from == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        if (to == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\\n     * this function.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _update(address from, address to, uint256 value) internal virtual {\\n        if (from == address(0)) {\\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\\n            _totalSupply += value;\\n        } else {\\n            uint256 fromBalance = _balances[from];\\n            if (fromBalance < value) {\\n                revert ERC20InsufficientBalance(from, fromBalance, value);\\n            }\\n            unchecked {\\n                // Overflow not possible: value <= fromBalance <= totalSupply.\\n                _balances[from] = fromBalance - value;\\n            }\\n        }\\n\\n        if (to == address(0)) {\\n            unchecked {\\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\\n                _totalSupply -= value;\\n            }\\n        } else {\\n            unchecked {\\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\\n                _balances[to] += value;\\n            }\\n        }\\n\\n        emit Transfer(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\\n     * Relies on the `_update` mechanism\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _mint(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(address(0), account, value);\\n    }\\n\\n    /**\\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\\n     * Relies on the `_update` mechanism.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead\\n     */\\n    function _burn(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        _update(account, address(0), value);\\n    }\\n\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     *\\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\\n     */\\n    function _approve(address owner, address spender, uint256 value) internal {\\n        _approve(owner, spender, value, true);\\n    }\\n\\n    /**\\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\\n     *\\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\\n     * `Approval` event during `transferFrom` operations.\\n     *\\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\\n     * true using the following override:\\n     * ```\\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\\n     *     super._approve(owner, spender, value, true);\\n     * }\\n     * ```\\n     *\\n     * Requirements are the same as {_approve}.\\n     */\\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\\n        if (owner == address(0)) {\\n            revert ERC20InvalidApprover(address(0));\\n        }\\n        if (spender == address(0)) {\\n            revert ERC20InvalidSpender(address(0));\\n        }\\n        _allowances[owner][spender] = value;\\n        if (emitEvent) {\\n            emit Approval(owner, spender, value);\\n        }\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\\n     *\\n     * Does not update the allowance value in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Does not emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            if (currentAllowance < value) {\\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\\n            }\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - value, false);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev The ETH balance of the account is not enough to perform the operation.\\n     */\\n    error AddressInsufficientBalance(address account);\\n\\n    /**\\n     * @dev There's no code at `target` (it is not a contract).\\n     */\\n    error AddressEmptyCode(address target);\\n\\n    /**\\n     * @dev A call to an address target failed. The target may have reverted.\\n     */\\n    error FailedInnerCall();\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        if (address(this).balance < amount) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        if (!success) {\\n            revert FailedInnerCall();\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason or custom error, it is bubbled\\n     * up by this function (like regular Solidity function calls). However, if\\n     * the call reverted with no returned reason, this function reverts with a\\n     * {FailedInnerCall} error.\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        if (address(this).balance < value) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\\n     * unsuccessful call.\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata\\n    ) internal view returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            // only check if target is a contract if the call was successful and the return data is empty\\n            // otherwise we already know that it was a contract\\n            if (returndata.length == 0 && target.code.length == 0) {\\n                revert AddressEmptyCode(target);\\n            }\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\\n     * revert reason or with a default {FailedInnerCall} error.\\n     */\\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\\n     */\\n    function _revert(bytes memory returndata) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert FailedInnerCall();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant NOT_ENTERED = 1;\\n    uint256 private constant ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    /**\\n     * @dev Unauthorized reentrant call.\\n     */\\n    error ReentrancyGuardReentrantCall();\\n\\n    constructor() {\\n        _status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\\n        if (_status == ENTERED) {\\n            revert ReentrancyGuardReentrantCall();\\n        }\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Returns true if the reentrancy guard is currently set to \\\"entered\\\", which indicates there is a\\n     * `nonReentrant` function in the call stack.\\n     */\\n    function _reentrancyGuardEntered() internal view returns (bool) {\\n        return _status == ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```solidity\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(newImplementation.code.length > 0);\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    struct StringSlot {\\n        string value;\\n    }\\n\\n    struct BytesSlot {\\n        bytes value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\\n     */\\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\\n     */\\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\\n     */\\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\\n     */\\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\"},\"contracts/BaluniV1Pool.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n/**\\r\\n *  __                  __                      __\\r\\n * /  |                /  |                    /  |\\r\\n * $$ |____    ______  $$ | __    __  _______  $$/\\r\\n * $$      \\\\  /      \\\\ $$ |/  |  /  |/       \\\\ /  |\\r\\n * $$$$$$$  | $$$$$$  |$$ |$$ |  $$ |$$$$$$$  |$$ |\\r\\n * $$ |  $$ | /    $$ |$$ |$$ |  $$ |$$ |  $$ |$$ |\\r\\n * $$ |__$$ |/$$$$$$$ |$$ |$$ \\\\__$$ |$$ |  $$ |$$ |\\r\\n * $$    $$/ $$    $$ |$$ |$$    $$/ $$ |  $$ |$$ |\\r\\n * $$$$$$$/   $$$$$$$/ $$/  $$$$$$/  $$/   $$/ $$/\\r\\n *\\r\\n *\\r\\n *                  ,-\\\"\\\"\\\"\\\"-.\\r\\n *                ,'      _ `.\\r\\n *               /       )_)  \\\\\\r\\n *              :              :\\r\\n *              \\\\              /\\r\\n *               \\\\            /\\r\\n *                `.        ,'\\r\\n *                  `.    ,'\\r\\n *                    `.,'\\r\\n *                     /\\\\`.   ,-._\\r\\n *                         `-'    \\\\__\\r\\n *                              .\\r\\n *               s                \\\\\\r\\n *                                \\\\\\\\\\r\\n *                                 \\\\\\\\\\r\\n *                                  >\\\\/7\\r\\n *                              _.-(6'  \\\\\\r\\n *                             (=___._/` \\\\\\r\\n *                                  )  \\\\ |\\r\\n *                                 /   / |\\r\\n *                                /    > /\\r\\n *                               j    < _\\\\\\r\\n *                           _.-' :      ``.\\r\\n *                           \\\\ r=._\\\\        `.\\r\\n */\\r\\nimport './interfaces/IBaluniV1Rebalancer.sol';\\r\\nimport './interfaces/IBaluniV1Router.sol';\\r\\nimport '@openzeppelin/contracts/token/ERC20/ERC20.sol';\\r\\nimport '@openzeppelin/contracts/utils/ReentrancyGuard.sol';\\r\\n\\r\\nimport './interfaces/IBaluniV1PoolPeriphery.sol';\\r\\nimport './balancer/BMath.sol';\\r\\n\\r\\ncontract BaluniV1Pool is ERC20, ReentrancyGuard, BMath {\\r\\n    AssetInfo[] public assetInfos;\\r\\n    uint256 public trigger;\\r\\n    uint256 public ONE;\\r\\n    address public periphery;\\r\\n    address public factory;\\r\\n    uint256 public constant SWAP_FEE_BPS = 30; // 0.3%\\r\\n    address public baseAsset;\\r\\n    address public rebalancer;\\r\\n\\r\\n    struct AssetInfo {\\r\\n        address asset;\\r\\n        uint256 weight;\\r\\n    }\\r\\n\\r\\n    event RebalancePerformed(address indexed by, address[] assets);\\r\\n    event WeightsRebalanced(address indexed user, uint256[] amountsAdded);\\r\\n    event Burn(address indexed user, uint256 sharesBurned);\\r\\n    event Mint(address indexed to, uint256 sharesMinted);\\r\\n    event Swap(\\r\\n        address indexed user,\\r\\n        address indexed fromToken,\\r\\n        address indexed toToken,\\r\\n        uint256 amountIn,\\r\\n        uint256 amountOut\\r\\n    );\\r\\n\\r\\n    /**\\r\\n     * @dev Initializes a new instance of the BaluniV1Pool contract.\\r\\n     * @param _rebalancer The address of the rebalancer contract.\\r\\n     * @param _assets An array of addresses representing the assets in the pool.\\r\\n     * @param _weights An array of weights corresponding to the assets in the pool.\\r\\n     * @param _trigger The trigger value for rebalancing the pool.\\r\\n     * @param _periphery The address of the periphery contract.\\r\\n     */\\r\\n    constructor(\\r\\n        address _rebalancer,\\r\\n        address[] memory _assets,\\r\\n        uint256[] memory _weights,\\r\\n        uint256 _trigger,\\r\\n        address _periphery\\r\\n    ) ERC20('Baluni LP', 'BALUNI-LP') {\\r\\n        // Initialize contract state variables\\r\\n        periphery = _periphery;\\r\\n        factory = msg.sender;\\r\\n        rebalancer = _rebalancer;\\r\\n        ONE = 1e18;\\r\\n\\r\\n        // Initialize assets and weights\\r\\n        initializeAssets(_assets, _weights);\\r\\n\\r\\n        // Set trigger value\\r\\n        trigger = _trigger;\\r\\n\\r\\n        // Set base asset\\r\\n        baseAsset = IBaluniV1Rebalancer(_rebalancer).USDC();\\r\\n        //baseAsset = IBaluniV1Rebalancer(_rebalancer).WNATIVE();\\r\\n\\r\\n        // Ensure the sum of weights equals 10000\\r\\n        uint256 totalWeight = 0;\\r\\n        for (uint256 i = 0; i < _weights.length; i++) {\\r\\n            totalWeight += _weights[i];\\r\\n        }\\r\\n        require(totalWeight == 10000, 'Invalid weights');\\r\\n    }\\r\\n\\r\\n    modifier onlyPeriphery() {\\r\\n        require(msg.sender == periphery, 'Only Periphery');\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    function calcSpotPrice(address fromToken, address toToken) public view returns (uint256) {\\r\\n        uint256 reserveFrom = getAssetReserve(fromToken);\\r\\n        uint256 reserveTo = getAssetReserve(toToken);\\r\\n\\r\\n        // check decimal of from and to token and scale to 18 decimal\\r\\n        uint256 fromDecimal = IERC20Metadata(fromToken).decimals();\\r\\n        uint256 toDecimal = IERC20Metadata(toToken).decimals();\\r\\n\\r\\n        uint256 tokenBalanceIn = reserveFrom * 10 ** 18 - fromDecimal;\\r\\n        uint256 tokenBalanceOut = reserveTo * 10 ** 18 - toDecimal;\\r\\n\\r\\n        // convert the weight 3000 into 0.1*1e18 format\\r\\n        uint256 tokenWeightIn = (_getTargetWeight(fromToken) / 1000) * 10 ** 18;\\r\\n        uint256 tokenWeightOut = (_getTargetWeight(toToken) / 1000) * 10 ** 18;\\r\\n\\r\\n        return BMath.calcSpotPrice(tokenBalanceIn, tokenWeightIn, tokenBalanceOut, tokenWeightOut, SWAP_FEE_BPS);\\r\\n    }\\r\\n\\r\\n    function calcOraclePrice(address fromToken, address toToken) external view returns (uint256) {\\r\\n        uint256 reserveFrom = getAssetReserve(fromToken);\\r\\n        uint256 reserveTo = getAssetReserve(toToken);\\r\\n        uint fromDecimal = IERC20Metadata(fromToken).decimals();\\r\\n        return IBaluniV1Rebalancer(rebalancer).convert(fromToken, toToken, 1 * 10 ** fromDecimal);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Initializes the assets and their weights for the pool.\\r\\n     * @param _assets The array of asset addresses.\\r\\n     * @param _weights The array of weights corresponding to each asset.\\r\\n     */\\r\\n    function initializeAssets(address[] memory _assets, uint256[] memory _weights) internal {\\r\\n        require(_assets.length == _weights.length, 'Assets and weights length mismatch');\\r\\n\\r\\n        for (uint256 i = 0; i < _assets.length; i++) {\\r\\n            require(_assets[i] != address(0), 'Invalid asset address');\\r\\n            require(_weights[i] > 0, 'Invalid weight');\\r\\n\\r\\n            assetInfos.push(AssetInfo({asset: _assets[i], weight: _weights[i]}));\\r\\n\\r\\n            IERC20 asset = IERC20(_assets[i]);\\r\\n            if (asset.allowance(address(this), address(rebalancer)) == 0) {\\r\\n                asset.approve(address(rebalancer), type(uint256).max);\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Rebalances the weights of the pool by calculating the amounts to add for each token,\\r\\n     * transferring the calculated amounts from the user to the pool, minting the total added liquidity,\\r\\n     * updating the reserves, and emitting an event to indicate the rebalancing of weights.\\r\\n     * @param receiver The address to receive the minted liquidity tokens.\\r\\n     */\\r\\n    function rebalanceWeights(address receiver) external onlyPeriphery returns (uint256[] memory) {\\r\\n        require(isRebalanceNeeded(), 'Rebalance not needed');\\r\\n        (uint256 totalValuation, uint256[] memory valuations) = _computeTotalValuation();\\r\\n\\r\\n        uint256[] memory amountsToAdd = _calculateAmountsToAdd(totalValuation, valuations);\\r\\n\\r\\n        // Calculate total added liquidity before minting\\r\\n        uint256 totalAddedLiquidity = _calculateTotalAddedLiquidity(amountsToAdd);\\r\\n\\r\\n        uint baseDecimal = IERC20Metadata(baseAsset).decimals();\\r\\n\\r\\n        totalAddedLiquidity *= 10 ** 18 - baseDecimal;\\r\\n\\r\\n        uint256[] memory amounts = new uint256[](assetInfos.length);\\r\\n\\r\\n        for (uint256 i = 0; i < amountsToAdd.length; i++) {\\r\\n            if (amountsToAdd[i] > 0) {\\r\\n                amounts[i] = _calculateLiquidity(i, amountsToAdd[i]);\\r\\n            }\\r\\n        }\\r\\n\\r\\n        _mint(receiver, totalAddedLiquidity);\\r\\n\\r\\n        emit WeightsRebalanced(msg.sender, amountsToAdd);\\r\\n\\r\\n        return amounts;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Swaps `amount` of `fromToken` to `toToken` and transfers the received amount to `receiver`.\\r\\n     *\\r\\n     * Requirements:\\r\\n     * - `fromToken` and `toToken` must be different tokens.\\r\\n     * - `amount` must be greater than zero.\\r\\n     * - Sufficient liquidity of `toToken` must be available in the contract.\\r\\n     *\\r\\n     * Emits a `Swap` event with the details of the swap.\\r\\n     *\\r\\n     * Updates the reserves after the swap.\\r\\n     *\\r\\n     * @param fromToken The address of the token to swap from.\\r\\n     * @param toToken The address of the token to swap to.\\r\\n     * @param amount The amount of `fromToken` to swap.\\r\\n     * @param receiver The address to receive the swapped tokens.\\r\\n     * @return toSend The amount of `toToken` received after the swap.\\r\\n     */\\r\\n    function swap(\\r\\n        address fromToken,\\r\\n        address toToken,\\r\\n        uint256 amount,\\r\\n        address receiver\\r\\n    ) external nonReentrant returns (uint256 toSend) {\\r\\n        require(fromToken != toToken, 'Cannot swap the same token');\\r\\n        require(amount > 0, 'Amount must be greater than zero');\\r\\n\\r\\n        //uint256 receivedAmount = getAmountOut(fromToken, toToken, amount);\\r\\n\\r\\n        uint256 receivedAmount = _swapExactAmountIn(fromToken, amount, toToken, 1, 1e18);\\r\\n        receivedAmount /= 10 ** 18 - IERC20Metadata(toToken).decimals();\\r\\n\\r\\n        // uint256 toDecimal = IERC20Metadata(toToken).decimals();\\r\\n        // uint256 price = calcSpotPrice(fromToken, toToken);\\r\\n        // uint256 receivedAmount = (amount * price) / 10 ** 18 - toDecimal;\\r\\n\\r\\n        require(getAssetReserve(toToken) >= receivedAmount, 'Insufficient Liquidity');\\r\\n\\r\\n        uint256 fee = (receivedAmount * SWAP_FEE_BPS) / 10000;\\r\\n        toSend = receivedAmount - fee;\\r\\n\\r\\n        emit Swap(receiver, fromToken, toToken, amount, toSend);\\r\\n\\r\\n        return toSend;\\r\\n    }\\r\\n\\r\\n    function _swapExactAmountIn(\\r\\n        address tokenIn,\\r\\n        uint tokenAmountIn,\\r\\n        address tokenOut,\\r\\n        uint minAmountOut,\\r\\n        uint maxPrice\\r\\n    ) internal returns (uint tokenAmountOut) {\\r\\n        uint256 tokenOutReserve = getAssetReserve(tokenOut);\\r\\n        uint256 tokenInReserve = getAssetReserve(tokenIn);\\r\\n\\r\\n        //uint spotPriceBefore = calcSpotPrice(tokenIn, tokenOut);\\r\\n        uint spotPriceBefore = calcSpotPrice(\\r\\n            tokenInReserve,\\r\\n            (_getTargetWeight(tokenIn) / 1000) * 1e18,\\r\\n            tokenOutReserve,\\r\\n            (_getTargetWeight(tokenOut) / 1000) * 1e18,\\r\\n            SWAP_FEE_BPS\\r\\n        );\\r\\n\\r\\n        //require(spotPriceBefore <= maxPrice, 'ERR_BAD_LIMIT_PRICE');\\r\\n\\r\\n        tokenAmountOut = calcOutGivenIn(\\r\\n            tokenInReserve,\\r\\n            (_getTargetWeight(tokenIn) / 1000) * 1e18,\\r\\n            tokenOutReserve,\\r\\n            (_getTargetWeight(tokenOut) / 1000) * 1e18,\\r\\n            tokenAmountIn,\\r\\n            SWAP_FEE_BPS\\r\\n        );\\r\\n        require(tokenAmountOut >= minAmountOut, 'ERR_LIMIT_OUT');\\r\\n\\r\\n        tokenInReserve = badd(tokenInReserve, tokenAmountIn);\\r\\n        tokenOutReserve = bsub(tokenOutReserve, tokenAmountOut);\\r\\n\\r\\n        uint256 spotPriceAfter = calcSpotPrice(\\r\\n            tokenInReserve,\\r\\n            (_getTargetWeight(tokenIn) / 1000) * 1e18,\\r\\n            tokenOutReserve,\\r\\n            (_getTargetWeight(tokenOut) / 1000) * 1e18,\\r\\n            SWAP_FEE_BPS\\r\\n        );\\r\\n        require(spotPriceAfter >= spotPriceBefore, 'ERR_MATH_APPROX');\\r\\n        //require(spotPriceAfter <= maxPrice, 'ERR_LIMIT_PRICE');\\r\\n        require(spotPriceBefore <= bdiv(tokenAmountIn, tokenAmountOut), 'ERR_MATH_APPROX');\\r\\n\\r\\n        return (tokenAmountOut);\\r\\n    }\\r\\n\\r\\n    function _swapExactAmountOut(\\r\\n        address tokenIn,\\r\\n        uint maxAmountIn,\\r\\n        address tokenOut,\\r\\n        uint tokenAmountOut,\\r\\n        uint maxPrice\\r\\n    ) internal returns (uint tokenAmountIn) {\\r\\n        uint256 tokenOutReserve = getAssetReserve(tokenOut);\\r\\n        uint256 tokenInReserve = getAssetReserve(tokenIn);\\r\\n\\r\\n        uint spotPriceBefore = calcSpotPrice(tokenIn, tokenOut);\\r\\n        require(spotPriceBefore <= maxPrice, 'ERR_BAD_LIMIT_PRICE');\\r\\n\\r\\n        tokenAmountIn = calcInGivenOut(\\r\\n            tokenInReserve,\\r\\n            (_getTargetWeight(tokenIn) / 1000) * 1e18,\\r\\n            tokenOutReserve,\\r\\n            (_getTargetWeight(tokenOut) / 1000) * 1e18,\\r\\n            tokenAmountOut,\\r\\n            SWAP_FEE_BPS\\r\\n        );\\r\\n\\r\\n        tokenInReserve = badd(tokenInReserve, tokenAmountIn);\\r\\n        tokenOutReserve = bsub(tokenOutReserve, tokenAmountOut);\\r\\n\\r\\n        uint256 spotPriceAfter = calcSpotPrice(\\r\\n            tokenInReserve,\\r\\n            (_getTargetWeight(tokenIn) / 1000) * 1e18,\\r\\n            tokenOutReserve,\\r\\n            (_getTargetWeight(tokenOut) / 1000) * 1e18,\\r\\n            SWAP_FEE_BPS\\r\\n        );\\r\\n        require(spotPriceAfter >= spotPriceBefore, 'ERR_MATH_APPROX');\\r\\n        require(spotPriceAfter <= maxPrice, 'ERR_LIMIT_PRICE');\\r\\n        require(spotPriceBefore <= bdiv(tokenAmountIn, tokenAmountOut), 'ERR_MATH_APPROX');\\r\\n\\r\\n        return (tokenAmountOut);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Mints new tokens and adds them to the specified address.\\r\\n     * @param to The address to which the new tokens will be minted.\\r\\n     * @return The amount of tokens minted.\\r\\n     */\\r\\n    function mint(address to, uint256[] memory amounts) external onlyPeriphery returns (uint256) {\\r\\n        uint256 totalSupply = totalSupply();\\r\\n        uint256 totalValue = 0;\\r\\n        uint256[] memory _reserves = getReserves();\\r\\n        require(assetInfos.length == _reserves.length, 'Invalid reserves length');\\r\\n        require(assetInfos.length > 0, 'No assets');\\r\\n\\r\\n        for (uint256 i = 0; i < assetInfos.length; i++) {\\r\\n            address asset = assetInfos[i].asset;\\r\\n\\r\\n            uint256 valuation = _convertTokenToBase(asset, amounts[i]);\\r\\n            totalValue += valuation;\\r\\n        }\\r\\n\\r\\n        require(totalValue > 0, 'Total value must be greater than 0');\\r\\n\\r\\n        uint256 toMint;\\r\\n\\r\\n        // Calculate total added liquidity before minting\\r\\n\\r\\n        uint baseDecimal = IERC20Metadata(baseAsset).decimals();\\r\\n\\r\\n        if (totalSupply == 0) {\\r\\n            toMint = totalValue * 10 ** 18 - baseDecimal;\\r\\n        } else {\\r\\n            (uint256 totalLiquidity, ) = _computeTotalValuation();\\r\\n            require(totalLiquidity > 0, 'Total liquidity must be greater than 0');\\r\\n            toMint = (((totalValue) * totalSupply) / totalLiquidity) * 10 ** 18 - baseDecimal;\\r\\n        }\\r\\n        require(toMint != 0, 'Mint qty is 0');\\r\\n\\r\\n        uint256 b4 = balanceOf(msg.sender);\\r\\n        _mint(to, toMint);\\r\\n        uint256 b = balanceOf(to) - b4;\\r\\n\\r\\n        require(b == toMint, 'Mint Failed');\\r\\n\\r\\n        emit Mint(to, toMint);\\r\\n\\r\\n        return toMint;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Burns the pool tokens and transfers the underlying assets to the specified address.\\r\\n     * @param to The address to transfer the underlying assets to.\\r\\n     * @notice This function can only be called by the periphery contract.\\r\\n     * @notice The pool tokens must have a balance greater than 0.\\r\\n     * @notice The total supply of pool tokens must be greater than 0.\\r\\n     * @notice The function calculates the amounts of each underlying asset to transfer based on the share of pool tokens being burned.\\r\\n     * @notice A fee is deducted from the share of pool tokens being burned and transferred to the treasury address.\\r\\n     * @notice The function checks if the pool has sufficient liquidity before performing any transfers.\\r\\n     * @notice If any transfer fails, the function reverts the entire operation.\\r\\n     * @notice After the transfers, the function updates the reserves of the pool.\\r\\n     * @notice Emits a `Burn` event with the address and share of pool tokens burned.\\r\\n     */\\r\\n    function burn(address to) external onlyPeriphery returns (uint256[] memory) {\\r\\n        uint256 share = balanceOf(address(this));\\r\\n        require(share > 0, 'Share must be greater than 0');\\r\\n\\r\\n        uint256 totalSupply = totalSupply();\\r\\n        require(totalSupply > 0, 'No liquidity');\\r\\n\\r\\n        uint256[] memory amounts = new uint256[](assetInfos.length);\\r\\n        uint256 fee = (share * SWAP_FEE_BPS) / 10000;\\r\\n        uint256 shareAfterFee = share - fee;\\r\\n\\r\\n        for (uint256 i = 0; i < assetInfos.length; i++) {\\r\\n            uint256 assetBalance = IBaluniV1PoolPeriphery(periphery).getAssetReserve(\\r\\n                address(this),\\r\\n                assetInfos[i].asset\\r\\n            );\\r\\n            amounts[i] = (assetBalance * shareAfterFee) / totalSupply;\\r\\n        }\\r\\n\\r\\n        require(balanceOf(address(this)) >= shareAfterFee, 'Insufficient BALUNI liquidity');\\r\\n\\r\\n        bool feeTransferSuccess = IERC20(address(this)).transfer(IBaluniV1Rebalancer(rebalancer).treasury(), fee);\\r\\n        require(feeTransferSuccess, 'Fee transfer failed');\\r\\n\\r\\n        _burn(address(this), shareAfterFee);\\r\\n\\r\\n        emit Burn(to, shareAfterFee);\\r\\n\\r\\n        return amounts;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Calculates the amount of `toToken` that will be received when swapping `fromToken` for `toToken`.\\r\\n     * @param fromToken The address of the token being swapped from.\\r\\n     * @param toToken The address of the token being swapped to.\\r\\n     * @param amount The amount of `fromToken` being swapped.\\r\\n     * @return The amount of `toToken` that will be received.\\r\\n     */\\r\\n    function getAmountOut(address fromToken, address toToken, uint256 amount) public view returns (uint256) {\\r\\n        return IBaluniV1Rebalancer(rebalancer).convert(fromToken, toToken, amount);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Performs rebalance\\r\\n     */\\r\\n    function performRebalanceIfNeeded()\\r\\n        external\\r\\n        onlyPeriphery\\r\\n        returns (uint256[] memory amountsToAdd, uint256[] memory amountsToRemove)\\r\\n    {\\r\\n        require(isRebalanceNeeded(), 'Rebalance not needed');\\r\\n        return _performRebalanceIfNeeded();\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the deviation between the current weights and target weights of the assets in the pool.\\r\\n     * @return directions An array of boolean values indicating whether the current weight is higher (true) or lower (false) than the target weight.\\r\\n     */\\r\\n    function getDeviation() public view returns (bool[] memory directions, uint256[] memory deviations) {\\r\\n        (uint256 totVal, uint256[] memory valuations) = _computeTotalValuation();\\r\\n        uint256 numAssets = assetInfos.length;\\r\\n\\r\\n        directions = new bool[](numAssets);\\r\\n        deviations = new uint256[](numAssets);\\r\\n\\r\\n        for (uint256 i = 0; i < numAssets; i++) {\\r\\n            uint256 currentWeight = (valuations[i] * 10000) / totVal;\\r\\n            uint256 targetWeight = assetInfos[i].weight;\\r\\n\\r\\n            if (currentWeight > targetWeight) {\\r\\n                deviations[i] = currentWeight - targetWeight;\\r\\n                directions[i] = true;\\r\\n            } else {\\r\\n                deviations[i] = targetWeight - currentWeight;\\r\\n                directions[i] = false;\\r\\n            }\\r\\n        }\\r\\n\\r\\n        return (directions, deviations);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the liquidity of a specific asset in the pool.\\r\\n     * @param assetIndex The index of the asset.\\r\\n     * @return The liquidity of the asset.\\r\\n     */\\r\\n    function assetLiquidity(uint256 assetIndex) external view returns (uint256) {\\r\\n        (, uint256[] memory usdValuations) = _computeTotalValuation();\\r\\n        require(assetIndex < usdValuations.length, 'Invalid asset index');\\r\\n        return usdValuations[assetIndex];\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Computes the total valuation of the pool and returns the total valuation and an array of individual valuations.\\r\\n     * @return totalVal The total valuation of the pool.\\r\\n     * @return valuations An array of individual valuations.\\r\\n     */\\r\\n    function computeTotalValuation() external view returns (uint256 totalVal, uint256[] memory valuations) {\\r\\n        (totalVal, valuations) = _computeTotalValuation();\\r\\n        return (totalVal, valuations);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the total liquidity of the pool.\\r\\n     * @return The total liquidity of the pool.\\r\\n     */\\r\\n    function liquidity() external view returns (uint256) {\\r\\n        (uint256 totalVal, ) = _computeTotalValuation();\\r\\n        return totalVal;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the unit price of the pool.\\r\\n     * @return The unit price of the pool.\\r\\n     */\\r\\n    function unitPrice() external view returns (uint256) {\\r\\n        (uint256 totalVal, ) = _computeTotalValuation();\\r\\n        uint256 totalSupply = totalSupply();\\r\\n        if (totalSupply == 0) {\\r\\n            return 0;\\r\\n        }\\r\\n        return (totalVal * ONE) / totalSupply;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns an array of reserves for each asset in the pool.\\r\\n     * @return An array of reserves.\\r\\n     */\\r\\n    function getReserves() public view returns (uint256[] memory) {\\r\\n        return IBaluniV1PoolPeriphery(periphery).getReserves(address(this));\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the reserve amount of the specified asset.\\r\\n     * @param asset The address of the asset.\\r\\n     * @return The reserve amount of the asset.\\r\\n     */\\r\\n    function getAssetReserve(address asset) public view returns (uint256) {\\r\\n        return IBaluniV1PoolPeriphery(periphery).getAssetReserve(address(this), asset);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Retrieves the list of assets in the pool.\\r\\n     * @return An array of addresses representing the assets.\\r\\n     */\\r\\n    function getAssets() external view returns (address[] memory) {\\r\\n        address[] memory assets = new address[](assetInfos.length);\\r\\n        for (uint256 i = 0; i < assetInfos.length; i++) {\\r\\n            assets[i] = assetInfos[i].asset;\\r\\n        }\\r\\n        return assets;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Retrieves the list of weights associated with the assets in the pool.\\r\\n     * @return An array of uint256 values representing the weights.\\r\\n     */\\r\\n    function getWeights() external view returns (uint256[] memory) {\\r\\n        uint256[] memory weights = new uint256[](assetInfos.length);\\r\\n        for (uint256 i = 0; i < assetInfos.length; i++) {\\r\\n            weights[i] = assetInfos[i].weight;\\r\\n        }\\r\\n        return weights;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Computes the total valuation of the assets in the pool.\\r\\n     * @return totalValuation The total valuation of the assets.\\r\\n     * @return valuations An array of valuations for each asset in the pool.\\r\\n     */\\r\\n    function _computeTotalValuation() internal view returns (uint256 totalValuation, uint256[] memory valuations) {\\r\\n        uint256 numAssets = assetInfos.length;\\r\\n        valuations = new uint256[](numAssets);\\r\\n        for (uint256 i = 0; i < numAssets; i++) {\\r\\n            address asset = assetInfos[i].asset;\\r\\n            uint256 assetReserve = getAssetReserve(address(asset));\\r\\n\\r\\n            if ((address(asset) == baseAsset)) {\\r\\n                valuations[i] = assetReserve;\\r\\n            } else {\\r\\n                uint256 valuation = _convertTokenToBase(address(asset), assetReserve);\\r\\n                valuations[i] = valuation;\\r\\n            }\\r\\n            totalValuation += valuations[i];\\r\\n        }\\r\\n        return (totalValuation, valuations);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Performs rebalance if needed.\\r\\n     * This function retrieves the assets and weights from the `assetInfos` array,\\r\\n     * and calls the `rebalance` function of the `rebalancer` contract with the retrieved values.\\r\\n     * It emits a `RebalancePerformed` event after the rebalance is performed.\\r\\n     * @notice This function should only be called internally.\\r\\n     */\\r\\n    function _performRebalanceIfNeeded() internal returns (uint256[] memory, uint256[] memory) {\\r\\n        address[] memory assets = new address[](assetInfos.length);\\r\\n        uint256[] memory weights = new uint256[](assetInfos.length);\\r\\n        uint256[] memory peripheryBalancesB4 = new uint256[](assetInfos.length);\\r\\n        uint256[] memory peripheryBalancesAfter = new uint256[](assetInfos.length);\\r\\n        uint256[] memory amountsToAdd = new uint256[](assetInfos.length);\\r\\n        uint256[] memory amountsToRemove = new uint256[](assetInfos.length);\\r\\n\\r\\n        for (uint256 i = 0; i < assetInfos.length; i++) {\\r\\n            assets[i] = assetInfos[i].asset;\\r\\n            weights[i] = assetInfos[i].weight;\\r\\n            peripheryBalancesB4[i] = IERC20(assets[i]).balanceOf(periphery);\\r\\n        }\\r\\n\\r\\n        uint256[] memory balances = getReserves();\\r\\n\\r\\n        IBaluniV1Rebalancer(rebalancer).rebalance(balances, assets, weights, trigger, periphery, periphery, baseAsset);\\r\\n\\r\\n        for (uint256 i = 0; i < assetInfos.length; i++) {\\r\\n            peripheryBalancesAfter[i] = IERC20(assets[i]).balanceOf(periphery);\\r\\n\\r\\n            if (peripheryBalancesAfter[i] > peripheryBalancesB4[i]) {\\r\\n                amountsToAdd[i] = peripheryBalancesAfter[i] - peripheryBalancesB4[i];\\r\\n            } else {\\r\\n                amountsToRemove[i] = peripheryBalancesB4[i] - peripheryBalancesAfter[i];\\r\\n            }\\r\\n        }\\r\\n\\r\\n        emit RebalancePerformed(msg.sender, assets);\\r\\n\\r\\n        return (amountsToAdd, amountsToRemove);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Calculates the total added liquidity based on the amounts to add.\\r\\n     * @param amountsToAdd An array of amounts to add for each asset.\\r\\n     * @return totalAddedLiquidity The total added liquidity.\\r\\n     */\\r\\n    function _calculateTotalAddedLiquidity(\\r\\n        uint256[] memory amountsToAdd\\r\\n    ) internal view returns (uint256 totalAddedLiquidity) {\\r\\n        for (uint256 i = 0; i < assetInfos.length; i++) {\\r\\n            totalAddedLiquidity += amountsToAdd[i];\\r\\n        }\\r\\n        return totalAddedLiquidity;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Calculates the amounts to add to each asset based on the total valuation and current valuations.\\r\\n     * @param totalValuation The total valuation of the pool.\\r\\n     * @param valuations An array of current valuations for each asset.\\r\\n     * @return amountsToAdd An array of amounts to add to each asset.\\r\\n     */\\r\\n    function _calculateAmountsToAdd(\\r\\n        uint256 totalValuation,\\r\\n        uint256[] memory valuations\\r\\n    ) internal view returns (uint256[] memory amountsToAdd) {\\r\\n        amountsToAdd = new uint256[](assetInfos.length);\\r\\n        for (uint256 i = 0; i < assetInfos.length; i++) {\\r\\n            uint256 targetValuation = (totalValuation * assetInfos[i].weight) / 10000;\\r\\n            if (valuations[i] < targetValuation) {\\r\\n                amountsToAdd[i] = targetValuation - valuations[i];\\r\\n            }\\r\\n        }\\r\\n        return amountsToAdd;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Internal function to transfer tokens from the caller to the contract and calculate the liquidity.\\r\\n     * @param index The index of the asset in the assetInfos array.\\r\\n     * @param amountToAdd The amount of native tokens to add as liquidity.\\r\\n     */\\r\\n    function _calculateLiquidity(uint256 index, uint256 amountToAdd) internal view returns (uint256) {\\r\\n        uint256 tokenAmount = _convertBaseToToken(assetInfos[index].asset, amountToAdd);\\r\\n        require(tokenAmount > 0, 'Invalid token amount to add');\\r\\n        return tokenAmount;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Converts the specified amount of native token to the corresponding token amount.\\r\\n     * @param fromToken The address of the native token to convert from.\\r\\n     * @param amount The amount of native token to convert.\\r\\n     * @return The corresponding token amount.\\r\\n     */\\r\\n    function _convertBaseToToken(address fromToken, uint256 amount) internal view returns (uint256) {\\r\\n        uint256 tokenAmount = IBaluniV1Rebalancer(rebalancer).convert(baseAsset, fromToken, amount);\\r\\n        return tokenAmount;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the maximum of two uint8 values.\\r\\n     * @param a The first uint8 value.\\r\\n     * @param b The second uint8 value.\\r\\n     * @return The maximum value between a and b.\\r\\n     */\\r\\n    function max(uint8 a, uint8 b) private pure returns (uint8) {\\r\\n        return a >= b ? a : b;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the minimum of two uint8 values.\\r\\n     * @param a The first uint8 value.\\r\\n     * @param b The second uint8 value.\\r\\n     * @return The minimum value between a and b.\\r\\n     */\\r\\n    function min(uint8 a, uint8 b) private pure returns (uint8) {\\r\\n        return a <= b ? a : b;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Converts the specified token to the native token using the rebalancer contract.\\r\\n     * @param fromToken The address of the token to convert from.\\r\\n     * @param amount The amount of tokens to convert.\\r\\n     * @return scaledAmount The converted amount of tokens.\\r\\n     */\\r\\n    function _convertTokenToBase(address fromToken, uint256 amount) internal view returns (uint256 scaledAmount) {\\r\\n        uint256 tokenAmount = IBaluniV1Rebalancer(rebalancer).convert(fromToken, baseAsset, amount);\\r\\n        return tokenAmount;\\r\\n    }\\r\\n\\r\\n    // return true if one of the deviation overcome the trigger\\r\\n    /**\\r\\n     * @dev Checks if rebalancing is needed for the pool.\\r\\n     * @return A boolean value indicating whether rebalancing is needed or not.\\r\\n     */\\r\\n    function isRebalanceNeeded() public view returns (bool) {\\r\\n        (bool[] memory directions, uint256[] memory deviations) = getDeviation();\\r\\n        for (uint256 i = 0; i < deviations.length; i++) {\\r\\n            if (directions[i] && deviations[i] > trigger) {\\r\\n                return true;\\r\\n            }\\r\\n        }\\r\\n        return false;\\r\\n    }\\r\\n\\r\\n    function _getTargetWeight(address _token) internal view returns (uint256) {\\r\\n        for (uint256 i = 0; i < assetInfos.length; i++) {\\r\\n            if (assetInfos[i].asset == _token) {\\r\\n                return assetInfos[i].weight;\\r\\n            }\\r\\n        }\\r\\n        return 0;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x62d5ba024cc01d43e5870bc495d04f98671f6244e251df64a27cec359c0e7ea7\",\"license\":\"GNU AGPLv3\"},\"contracts/BaluniV1PoolFactory.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n/**\\r\\n *  __                  __                      __\\r\\n * /  |                /  |                    /  |\\r\\n * $$ |____    ______  $$ | __    __  _______  $$/\\r\\n * $$      \\\\  /      \\\\ $$ |/  |  /  |/       \\\\ /  |\\r\\n * $$$$$$$  | $$$$$$  |$$ |$$ |  $$ |$$$$$$$  |$$ |\\r\\n * $$ |  $$ | /    $$ |$$ |$$ |  $$ |$$ |  $$ |$$ |\\r\\n * $$ |__$$ |/$$$$$$$ |$$ |$$ \\\\__$$ |$$ |  $$ |$$ |\\r\\n * $$    $$/ $$    $$ |$$ |$$    $$/ $$ |  $$ |$$ |\\r\\n * $$$$$$$/   $$$$$$$/ $$/  $$$$$$/  $$/   $$/ $$/\\r\\n *\\r\\n *\\r\\n *                  ,-\\\"\\\"\\\"\\\"-.\\r\\n *                ,'      _ `.\\r\\n *               /       )_)  \\\\\\r\\n *              :              :\\r\\n *              \\\\              /\\r\\n *               \\\\            /\\r\\n *                `.        ,'\\r\\n *                  `.    ,'\\r\\n *                    `.,'\\r\\n *                     /\\\\`.   ,-._\\r\\n *                         `-'    \\\\__\\r\\n *                              .\\r\\n *               s                \\\\\\r\\n *                                \\\\\\\\\\r\\n *                                 \\\\\\\\\\r\\n *                                  >\\\\/7\\r\\n *                              _.-(6'  \\\\\\r\\n *                             (=___._/` \\\\\\r\\n *                                  )  \\\\ |\\r\\n *                                 /   / |\\r\\n *                                /    > /\\r\\n *                               j    < _\\\\\\r\\n *                           _.-' :      ``.\\r\\n *                           \\\\ r=._\\\\        `.\\r\\n */\\r\\nimport './BaluniV1Pool.sol';\\r\\nimport '@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol';\\r\\nimport '@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol';\\r\\nimport '@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol';\\r\\n\\r\\ncontract BaluniV1PoolFactory is Initializable, UUPSUpgradeable, OwnableUpgradeable {\\r\\n  address[] public allPools;\\r\\n  mapping(address => mapping(address => address)) public getPool;\\r\\n\\r\\n  address public rebalancer;\\r\\n  address public periphery;\\r\\n\\r\\n  event PoolCreated(address indexed pool, address[] assets, address rebalancer);\\r\\n\\r\\n  function initialize(address _rebalancer) public initializer {\\r\\n    __UUPSUpgradeable_init();\\r\\n    __Ownable_init(msg.sender);\\r\\n    rebalancer = _rebalancer;\\r\\n  }\\r\\n\\r\\n  function reinitialize(address _rebalancer, uint64 _version) public reinitializer(_version) {\\r\\n    rebalancer = _rebalancer;\\r\\n  }\\r\\n\\r\\n  function _authorizeUpgrade(address newImplementation) internal override onlyOwner {}\\r\\n\\r\\n  /**\\r\\n   * @dev Creates a new BaluniV1Pool contract and registers it in the factory.\\r\\n   * @param assets The array of asset addresses to be included in the pool.\\r\\n   * @param weights The array of weights corresponding to each asset in the pool.\\r\\n   * @param trigger The trigger value for rebalancing the pool.\\r\\n   * @return The address of the newly created pool.\\r\\n   */\\r\\n  function createPool(address[] memory assets, uint256[] memory weights, uint256 trigger) external returns (address) {\\r\\n    require(periphery != address(0), 'Periphery not set');\\r\\n    require(assets.length > 1, 'At least two assets are required');\\r\\n    require(assets.length == weights.length, 'Assets and weights length mismatch');\\r\\n\\r\\n    for (uint256 i = 0; i < assets.length; i++) {\\r\\n      for (uint256 j = i + 1; j < assets.length; j++) {\\r\\n        require(address(getPool[assets[i]][assets[j]]) == address(0), 'Pool already exists for this pair');\\r\\n      }\\r\\n    }\\r\\n\\r\\n    BaluniV1Pool newPool = new BaluniV1Pool(rebalancer, assets, weights, trigger, periphery);\\r\\n\\r\\n    address poolAddress = address(newPool);\\r\\n\\r\\n    allPools.push(poolAddress);\\r\\n    for (uint256 i = 0; i < assets.length; i++) {\\r\\n      for (uint256 j = i + 1; j < assets.length; j++) {\\r\\n        getPool[assets[i]][assets[j]] = poolAddress;\\r\\n        getPool[assets[j]][assets[i]] = poolAddress;\\r\\n      }\\r\\n    }\\r\\n\\r\\n    emit PoolCreated(poolAddress, assets, rebalancer);\\r\\n\\r\\n    return poolAddress;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Retrieves all the pools created by the factory.\\r\\n   * @return An array of pool addresses.\\r\\n   */\\r\\n  function getAllPools() external view returns (address[] memory) {\\r\\n    return allPools;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Retrieves the number of pools created by the factory.\\r\\n   * @return The count of pools.\\r\\n   */\\r\\n  function getPoolsCount() external view returns (uint256) {\\r\\n    return allPools.length;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Retrieves the assets of a specific pool.\\r\\n   * @param poolAddress The address of the pool.\\r\\n   * @return An array of asset addresses.\\r\\n   */\\r\\n  function getPoolAssets(address poolAddress) external view returns (address[] memory) {\\r\\n    BaluniV1Pool pool = BaluniV1Pool(poolAddress);\\r\\n    return pool.getAssets();\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Retrieves the pool address based on the given assets.\\r\\n   * @param asset1 The address of the first asset.\\r\\n   * @param asset2 The address of the second asset.\\r\\n   * @return The address of the pool.\\r\\n   */\\r\\n  function getPoolByAssets(address asset1, address asset2) external view returns (address) {\\r\\n    return address(getPool[asset1][asset2]);\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Returns an array of pool addresses that contain the specified token.\\r\\n   * @param token The address of the token to search for.\\r\\n   * @return An array of pool addresses.\\r\\n   */\\r\\n  function getPoolsByAsset(address token) external view returns (address[] memory) {\\r\\n    address[] memory pools = new address[](allPools.length);\\r\\n    uint256 count = 0;\\r\\n\\r\\n    for (uint256 i = 0; i < allPools.length; i++) {\\r\\n      BaluniV1Pool pool = BaluniV1Pool(allPools[i]);\\r\\n      address[] memory assets = pool.getAssets();\\r\\n\\r\\n      for (uint256 j = 0; j < assets.length; j++) {\\r\\n        if (assets[j] == token) {\\r\\n          pools[count] = address(pool);\\r\\n          count++;\\r\\n          break;\\r\\n        }\\r\\n      }\\r\\n\\r\\n      if (count == pools.length) {\\r\\n        break;\\r\\n      }\\r\\n    }\\r\\n\\r\\n    address[] memory result = new address[](count);\\r\\n    for (uint256 i = 0; i < count; i++) {\\r\\n      result[i] = pools[i];\\r\\n    }\\r\\n\\r\\n    return result;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Changes the address of the periphery contract.\\r\\n   * @param _newPeriphery The new address of the periphery contract.\\r\\n   */\\r\\n  function changePeriphery(address _newPeriphery) external onlyOwner {\\r\\n    periphery = _newPeriphery;\\r\\n  }\\r\\n\\r\\n  function poolExist(address _pool) external view returns (bool) {\\r\\n    for (uint256 i = 0; i < allPools.length; i++) {\\r\\n      if (allPools[i] == _pool) {\\r\\n        return true;\\r\\n      }\\r\\n    }\\r\\n    return false;\\r\\n  }\\r\\n}\\r\\n\",\"keccak256\":\"0xa8e6121f55010cdfc0eb044b9bafc81c33f6b1c44cba7aa529855fc0f592dc4d\",\"license\":\"GNU AGPLv3\"},\"contracts/balancer/BColor.sol\":{\"content\":\"// This program is free software: you can redistribute it and/or modify\\r\\n// it under the terms of the GNU General Public License as published by\\r\\n// the Free Software Foundation, either version 3 of the License, or\\r\\n// (at your option) any later version.\\r\\n\\r\\n// This program is distributed in the hope that it will be useful,\\r\\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\\r\\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\r\\n// GNU General Public License for more details.\\r\\n\\r\\n// You should have received a copy of the GNU General Public License\\r\\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\\r\\n\\r\\npragma solidity 0.8.25;\\r\\n\\r\\nabstract contract BColor {\\r\\n    function getColor() external view virtual returns (bytes32);\\r\\n}\\r\\n\\r\\ncontract BBronze is BColor {\\r\\n    function getColor() external view override returns (bytes32) {\\r\\n        return bytes32('BRONZE');\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xfebf562cc76ad2f7d522afc383f11c4802fc39fc675bad0da602bde5e2212710\"},\"contracts/balancer/BConst.sol\":{\"content\":\"// This program is free software: you can redistribute it and/or modify\\r\\n// it under the terms of the GNU General Public License as published by\\r\\n// the Free Software Foundation, either version 3 of the License, or\\r\\n// (at your option) any later version.\\r\\n\\r\\n// This program is distributed in the hope that it will be useful,\\r\\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\\r\\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\r\\n// GNU General Public License for more details.\\r\\n\\r\\n// You should have received a copy of the GNU General Public License\\r\\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\\r\\n\\r\\npragma solidity 0.8.25;\\r\\n\\r\\nimport './BColor.sol';\\r\\n\\r\\ncontract BConst is BBronze {\\r\\n    uint public constant BONE = 10 ** 18;\\r\\n\\r\\n    uint public constant MIN_BOUND_TOKENS = 2;\\r\\n    uint public constant MAX_BOUND_TOKENS = 8;\\r\\n\\r\\n    uint public constant MIN_FEE = BONE / 10 ** 6;\\r\\n    uint public constant MAX_FEE = BONE / 10;\\r\\n    uint public constant EXIT_FEE = 0;\\r\\n\\r\\n    uint public constant MIN_WEIGHT = BONE;\\r\\n    uint public constant MAX_WEIGHT = BONE * 50;\\r\\n    uint public constant MAX_TOTAL_WEIGHT = BONE * 50;\\r\\n    uint public constant MIN_BALANCE = BONE / 10 ** 12;\\r\\n\\r\\n    uint public constant INIT_POOL_SUPPLY = BONE * 100;\\r\\n\\r\\n    uint public constant MIN_BPOW_BASE = 1 wei;\\r\\n    uint public constant MAX_BPOW_BASE = (2 * BONE) - 1 wei;\\r\\n    uint public constant BPOW_PRECISION = BONE / 10 ** 10;\\r\\n\\r\\n    uint public constant MAX_IN_RATIO = BONE / 2;\\r\\n    uint public constant MAX_OUT_RATIO = (BONE / 3) + 1 wei;\\r\\n}\\r\\n\",\"keccak256\":\"0xdda4746d3e2d40d8ecd62b61fec957d560ad405dd82aaf3e43d7e708168b7df6\"},\"contracts/balancer/BMath.sol\":{\"content\":\"// This program is free software: you can redistribute it and/or modify\\r\\n// it under the terms of the GNU General Public License as published by\\r\\n// the Free Software Foundation, either version 3 of the License, or\\r\\n// (at your option) any later version.\\r\\n\\r\\n// This program is distributed in the hope that it will be useful,\\r\\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\\r\\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\r\\n// GNU General Public License for more details.\\r\\n\\r\\n// You should have received a copy of the GNU General Public License\\r\\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\\r\\n\\r\\npragma solidity 0.8.25;\\r\\n\\r\\nimport \\\"./BNum.sol\\\";\\r\\n\\r\\ncontract BMath is BBronze, BConst, BNum {\\r\\n    /**********************************************************************************************\\r\\n    // calcSpotPrice                                                                             //\\r\\n    // sP = spotPrice                                                                            //\\r\\n    // bI = tokenBalanceIn                ( bI / wI )         1                                  //\\r\\n    // bO = tokenBalanceOut         sP =  -----------  *  ----------                             //\\r\\n    // wI = tokenWeightIn                 ( bO / wO )     ( 1 - sF )                             //\\r\\n    // wO = tokenWeightOut                                                                       //\\r\\n    // sF = swapFee                                                                              //\\r\\n    **********************************************************************************************/\\r\\n    function calcSpotPrice(\\r\\n        uint tokenBalanceIn,\\r\\n        uint tokenWeightIn,\\r\\n        uint tokenBalanceOut,\\r\\n        uint tokenWeightOut,\\r\\n        uint swapFee\\r\\n    )\\r\\n        public pure\\r\\n        returns (uint spotPrice)\\r\\n    {\\r\\n        uint numer = bdiv(tokenBalanceIn, tokenWeightIn);\\r\\n        uint denom = bdiv(tokenBalanceOut, tokenWeightOut);\\r\\n        uint ratio = bdiv(numer, denom);\\r\\n        uint scale = bdiv(BONE, bsub(BONE, swapFee));\\r\\n        return  (spotPrice = bmul(ratio, scale));\\r\\n    }\\r\\n\\r\\n    /**********************************************************************************************\\r\\n    // calcOutGivenIn                                                                            //\\r\\n    // aO = tokenAmountOut                                                                       //\\r\\n    // bO = tokenBalanceOut                                                                      //\\r\\n    // bI = tokenBalanceIn              /      /            bI             \\\\    (wI / wO) \\\\      //\\r\\n    // aI = tokenAmountIn    aO = bO * |  1 - | --------------------------  | ^            |     //\\r\\n    // wI = tokenWeightIn               \\\\      \\\\ ( bI + ( aI * ( 1 - sF )) /              /      //\\r\\n    // wO = tokenWeightOut                                                                       //\\r\\n    // sF = swapFee                                                                              //\\r\\n    **********************************************************************************************/\\r\\n    function calcOutGivenIn(\\r\\n        uint tokenBalanceIn,\\r\\n        uint tokenWeightIn,\\r\\n        uint tokenBalanceOut,\\r\\n        uint tokenWeightOut,\\r\\n        uint tokenAmountIn,\\r\\n        uint swapFee\\r\\n    )\\r\\n        public pure\\r\\n        returns (uint tokenAmountOut)\\r\\n    {\\r\\n        uint weightRatio = bdiv(tokenWeightIn, tokenWeightOut);\\r\\n        uint adjustedIn = bsub(BONE, swapFee);\\r\\n        adjustedIn = bmul(tokenAmountIn, adjustedIn);\\r\\n        uint y = bdiv(tokenBalanceIn, badd(tokenBalanceIn, adjustedIn));\\r\\n        uint foo = bpow(y, weightRatio);\\r\\n        uint bar = bsub(BONE, foo);\\r\\n        tokenAmountOut = bmul(tokenBalanceOut, bar);\\r\\n        return tokenAmountOut;\\r\\n    }\\r\\n\\r\\n    /**********************************************************************************************\\r\\n    // calcInGivenOut                                                                            //\\r\\n    // aI = tokenAmountIn                                                                        //\\r\\n    // bO = tokenBalanceOut               /  /     bO      \\\\    (wO / wI)      \\\\                 //\\r\\n    // bI = tokenBalanceIn          bI * |  | ------------  | ^            - 1  |                //\\r\\n    // aO = tokenAmountOut    aI =        \\\\  \\\\ ( bO - aO ) /                   /                 //\\r\\n    // wI = tokenWeightIn           --------------------------------------------                 //\\r\\n    // wO = tokenWeightOut                          ( 1 - sF )                                   //\\r\\n    // sF = swapFee                                                                              //\\r\\n    **********************************************************************************************/\\r\\n    function calcInGivenOut(\\r\\n        uint tokenBalanceIn,\\r\\n        uint tokenWeightIn,\\r\\n        uint tokenBalanceOut,\\r\\n        uint tokenWeightOut,\\r\\n        uint tokenAmountOut,\\r\\n        uint swapFee\\r\\n    )\\r\\n        public pure\\r\\n        returns (uint tokenAmountIn)\\r\\n    {\\r\\n        uint weightRatio = bdiv(tokenWeightOut, tokenWeightIn);\\r\\n        uint diff = bsub(tokenBalanceOut, tokenAmountOut);\\r\\n        uint y = bdiv(tokenBalanceOut, diff);\\r\\n        uint foo = bpow(y, weightRatio);\\r\\n        foo = bsub(foo, BONE);\\r\\n        tokenAmountIn = bsub(BONE, swapFee);\\r\\n        tokenAmountIn = bdiv(bmul(tokenBalanceIn, foo), tokenAmountIn);\\r\\n        return tokenAmountIn;\\r\\n    }\\r\\n\\r\\n    /**********************************************************************************************\\r\\n    // calcPoolOutGivenSingleIn                                                                  //\\r\\n    // pAo = poolAmountOut         /                                              \\\\              //\\r\\n    // tAi = tokenAmountIn        ///      /     //    wI \\\\      \\\\\\\\       \\\\     wI \\\\             //\\r\\n    // wI = tokenWeightIn        //| tAi *| 1 - || 1 - --  | * sF || + tBi \\\\    --  \\\\            //\\r\\n    // tW = totalWeight     pAo=||  \\\\      \\\\     \\\\\\\\    tW /      //         | ^ tW   | * pS - pS //\\r\\n    // tBi = tokenBalanceIn      \\\\\\\\  ------------------------------------- /        /            //\\r\\n    // pS = poolSupply            \\\\\\\\                    tBi               /        /             //\\r\\n    // sF = swapFee                \\\\                                              /              //\\r\\n    **********************************************************************************************/\\r\\n    function calcPoolOutGivenSingleIn(\\r\\n        uint tokenBalanceIn,\\r\\n        uint tokenWeightIn,\\r\\n        uint poolSupply,\\r\\n        uint totalWeight,\\r\\n        uint tokenAmountIn,\\r\\n        uint swapFee\\r\\n    )\\r\\n        public pure\\r\\n        returns (uint poolAmountOut)\\r\\n    {\\r\\n        // Charge the trading fee for the proportion of tokenAi\\r\\n        ///  which is implicitly traded to the other pool tokens.\\r\\n        // That proportion is (1- weightTokenIn)\\r\\n        // tokenAiAfterFee = tAi * (1 - (1-weightTi) * poolFee);\\r\\n        uint normalizedWeight = bdiv(tokenWeightIn, totalWeight);\\r\\n        uint zaz = bmul(bsub(BONE, normalizedWeight), swapFee); \\r\\n        uint tokenAmountInAfterFee = bmul(tokenAmountIn, bsub(BONE, zaz));\\r\\n\\r\\n        uint newTokenBalanceIn = badd(tokenBalanceIn, tokenAmountInAfterFee);\\r\\n        uint tokenInRatio = bdiv(newTokenBalanceIn, tokenBalanceIn);\\r\\n\\r\\n        // uint newPoolSupply = (ratioTi ^ weightTi) * poolSupply;\\r\\n        uint poolRatio = bpow(tokenInRatio, normalizedWeight);\\r\\n        uint newPoolSupply = bmul(poolRatio, poolSupply);\\r\\n        poolAmountOut = bsub(newPoolSupply, poolSupply);\\r\\n        return poolAmountOut;\\r\\n    }\\r\\n\\r\\n    /**********************************************************************************************\\r\\n    // calcSingleInGivenPoolOut                                                                  //\\r\\n    // tAi = tokenAmountIn              //(pS + pAo)\\\\     /    1    \\\\\\\\                           //\\r\\n    // pS = poolSupply                 || ---------  | ^ | --------- || * bI - bI                //\\r\\n    // pAo = poolAmountOut              \\\\\\\\    pS    /     \\\\(wI / tW)//                           //\\r\\n    // bI = balanceIn          tAi =  --------------------------------------------               //\\r\\n    // wI = weightIn                              /      wI  \\\\                                   //\\r\\n    // tW = totalWeight                          |  1 - ----  |  * sF                            //\\r\\n    // sF = swapFee                               \\\\      tW  /                                   //\\r\\n    **********************************************************************************************/\\r\\n    function calcSingleInGivenPoolOut(\\r\\n        uint tokenBalanceIn,\\r\\n        uint tokenWeightIn,\\r\\n        uint poolSupply,\\r\\n        uint totalWeight,\\r\\n        uint poolAmountOut,\\r\\n        uint swapFee\\r\\n    )\\r\\n        public pure\\r\\n        returns (uint tokenAmountIn)\\r\\n    {\\r\\n        uint normalizedWeight = bdiv(tokenWeightIn, totalWeight);\\r\\n        uint newPoolSupply = badd(poolSupply, poolAmountOut);\\r\\n        uint poolRatio = bdiv(newPoolSupply, poolSupply);\\r\\n      \\r\\n        //uint newBalTi = poolRatio^(1/weightTi) * balTi;\\r\\n        uint boo = bdiv(BONE, normalizedWeight); \\r\\n        uint tokenInRatio = bpow(poolRatio, boo);\\r\\n        uint newTokenBalanceIn = bmul(tokenInRatio, tokenBalanceIn);\\r\\n        uint tokenAmountInAfterFee = bsub(newTokenBalanceIn, tokenBalanceIn);\\r\\n        // Do reverse order of fees charged in joinswap_ExternAmountIn, this way \\r\\n        //     ``` pAo == joinswap_ExternAmountIn(Ti, joinswap_PoolAmountOut(pAo, Ti)) ```\\r\\n        //uint tAi = tAiAfterFee / (1 - (1-weightTi) * swapFee) ;\\r\\n        uint zar = bmul(bsub(BONE, normalizedWeight), swapFee);\\r\\n        tokenAmountIn = bdiv(tokenAmountInAfterFee, bsub(BONE, zar));\\r\\n        return tokenAmountIn;\\r\\n    }\\r\\n\\r\\n    /**********************************************************************************************\\r\\n    // calcSingleOutGivenPoolIn                                                                  //\\r\\n    // tAo = tokenAmountOut            /      /                                             \\\\\\\\   //\\r\\n    // bO = tokenBalanceOut           /      // pS - (pAi * (1 - eF)) \\\\     /    1    \\\\      \\\\\\\\  //\\r\\n    // pAi = poolAmountIn            | bO - || ----------------------- | ^ | --------- | * b0 || //\\r\\n    // ps = poolSupply                \\\\      \\\\\\\\          pS           /     \\\\(wO / tW)/      //  //\\r\\n    // wI = tokenWeightIn      tAo =   \\\\      \\\\                                             //   //\\r\\n    // tW = totalWeight                    /     /      wO \\\\       \\\\                             //\\r\\n    // sF = swapFee                    *  | 1 - |  1 - ---- | * sF  |                            //\\r\\n    // eF = exitFee                        \\\\     \\\\      tW /       /                             //\\r\\n    **********************************************************************************************/\\r\\n    function calcSingleOutGivenPoolIn(\\r\\n        uint tokenBalanceOut,\\r\\n        uint tokenWeightOut,\\r\\n        uint poolSupply,\\r\\n        uint totalWeight,\\r\\n        uint poolAmountIn,\\r\\n        uint swapFee\\r\\n    )\\r\\n        public pure\\r\\n        returns (uint tokenAmountOut)\\r\\n    {\\r\\n        uint normalizedWeight = bdiv(tokenWeightOut, totalWeight);\\r\\n        // charge exit fee on the pool token side\\r\\n        // pAiAfterExitFee = pAi*(1-exitFee)\\r\\n        uint poolAmountInAfterExitFee = bmul(poolAmountIn, bsub(BONE, EXIT_FEE));\\r\\n        uint newPoolSupply = bsub(poolSupply, poolAmountInAfterExitFee);\\r\\n        uint poolRatio = bdiv(newPoolSupply, poolSupply);\\r\\n     \\r\\n        // newBalTo = poolRatio^(1/weightTo) * balTo;\\r\\n        uint tokenOutRatio = bpow(poolRatio, bdiv(BONE, normalizedWeight));\\r\\n        uint newTokenBalanceOut = bmul(tokenOutRatio, tokenBalanceOut);\\r\\n\\r\\n        uint tokenAmountOutBeforeSwapFee = bsub(tokenBalanceOut, newTokenBalanceOut);\\r\\n\\r\\n        // charge swap fee on the output token side \\r\\n        //uint tAo = tAoBeforeSwapFee * (1 - (1-weightTo) * swapFee)\\r\\n        uint zaz = bmul(bsub(BONE, normalizedWeight), swapFee); \\r\\n        tokenAmountOut = bmul(tokenAmountOutBeforeSwapFee, bsub(BONE, zaz));\\r\\n        return tokenAmountOut;\\r\\n    }\\r\\n\\r\\n    /**********************************************************************************************\\r\\n    // calcPoolInGivenSingleOut                                                                  //\\r\\n    // pAi = poolAmountIn               // /               tAo             \\\\\\\\     / wO \\\\     \\\\   //\\r\\n    // bO = tokenBalanceOut            // | bO - -------------------------- |\\\\   | ---- |     \\\\  //\\r\\n    // tAo = tokenAmountOut      pS - ||   \\\\     1 - ((1 - (tO / tW)) * sF)/  | ^ \\\\ tW /  * pS | //\\r\\n    // ps = poolSupply                 \\\\\\\\ -----------------------------------/                /  //\\r\\n    // wO = tokenWeightOut  pAi =       \\\\\\\\               bO                 /                /   //\\r\\n    // tW = totalWeight           -------------------------------------------------------------  //\\r\\n    // sF = swapFee                                        ( 1 - eF )                            //\\r\\n    // eF = exitFee                                                                              //\\r\\n    **********************************************************************************************/\\r\\n    function calcPoolInGivenSingleOut(\\r\\n        uint tokenBalanceOut,\\r\\n        uint tokenWeightOut,\\r\\n        uint poolSupply,\\r\\n        uint totalWeight,\\r\\n        uint tokenAmountOut,\\r\\n        uint swapFee\\r\\n    )\\r\\n        public pure\\r\\n        returns (uint poolAmountIn)\\r\\n    {\\r\\n\\r\\n        // charge swap fee on the output token side \\r\\n        uint normalizedWeight = bdiv(tokenWeightOut, totalWeight);\\r\\n        //uint tAoBeforeSwapFee = tAo / (1 - (1-weightTo) * swapFee) ;\\r\\n        uint zoo = bsub(BONE, normalizedWeight);\\r\\n        uint zar = bmul(zoo, swapFee); \\r\\n        uint tokenAmountOutBeforeSwapFee = bdiv(tokenAmountOut, bsub(BONE, zar));\\r\\n\\r\\n        uint newTokenBalanceOut = bsub(tokenBalanceOut, tokenAmountOutBeforeSwapFee);\\r\\n        uint tokenOutRatio = bdiv(newTokenBalanceOut, tokenBalanceOut);\\r\\n\\r\\n        //uint newPoolSupply = (ratioTo ^ weightTo) * poolSupply;\\r\\n        uint poolRatio = bpow(tokenOutRatio, normalizedWeight);\\r\\n        uint newPoolSupply = bmul(poolRatio, poolSupply);\\r\\n        uint poolAmountInAfterExitFee = bsub(poolSupply, newPoolSupply);\\r\\n\\r\\n        // charge exit fee on the pool token side\\r\\n        // pAi = pAiAfterExitFee/(1-exitFee)\\r\\n        poolAmountIn = bdiv(poolAmountInAfterExitFee, bsub(BONE, EXIT_FEE));\\r\\n        return poolAmountIn;\\r\\n    }\\r\\n\\r\\n\\r\\n}\\r\\n\",\"keccak256\":\"0x910359d7e653af19e0479399fd651af8014a530be1abc0b4b589ba08cfa63fb6\"},\"contracts/balancer/BNum.sol\":{\"content\":\"// This program is free software: you can redistribute it and/or modify\\r\\n// it under the terms of the GNU General Public License as published by\\r\\n// the Free Software Foundation, either version 3 of the License, or\\r\\n// (at your option) any later version.\\r\\n\\r\\n// This program is distributed in the hope that it will be useful,\\r\\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\\r\\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\r\\n// GNU General Public License for more details.\\r\\n\\r\\n// You should have received a copy of the GNU General Public License\\r\\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\\r\\n\\r\\npragma solidity 0.8.25;\\r\\n\\r\\nimport \\\"./BConst.sol\\\";\\r\\n\\r\\ncontract BNum is BConst {\\r\\n\\r\\n    function btoi(uint a)\\r\\n        internal pure \\r\\n        returns (uint)\\r\\n    {\\r\\n        return a / BONE;\\r\\n    }\\r\\n\\r\\n    function bfloor(uint a)\\r\\n        internal pure\\r\\n        returns (uint)\\r\\n    {\\r\\n        return btoi(a) * BONE;\\r\\n    }\\r\\n\\r\\n    function badd(uint a, uint b)\\r\\n        internal pure\\r\\n        returns (uint)\\r\\n    {\\r\\n        uint c = a + b;\\r\\n        require(c >= a, \\\"ERR_ADD_OVERFLOW\\\");\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    function bsub(uint a, uint b)\\r\\n        internal pure\\r\\n        returns (uint)\\r\\n    {\\r\\n        (uint c, bool flag) = bsubSign(a, b);\\r\\n        require(!flag, \\\"ERR_SUB_UNDERFLOW\\\");\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    function bsubSign(uint a, uint b)\\r\\n        internal pure\\r\\n        returns (uint, bool)\\r\\n    {\\r\\n        if (a >= b) {\\r\\n            return (a - b, false);\\r\\n        } else {\\r\\n            return (b - a, true);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function bmul(uint a, uint b)\\r\\n        internal pure\\r\\n        returns (uint)\\r\\n    {\\r\\n        uint c0 = a * b;\\r\\n        require(a == 0 || c0 / a == b, \\\"ERR_MUL_OVERFLOW\\\");\\r\\n        uint c1 = c0 + (BONE / 2);\\r\\n        require(c1 >= c0, \\\"ERR_MUL_OVERFLOW\\\");\\r\\n        uint c2 = c1 / BONE;\\r\\n        return c2;\\r\\n    }\\r\\n\\r\\n    function bdiv(uint a, uint b)\\r\\n        internal pure\\r\\n        returns (uint)\\r\\n    {\\r\\n        require(b != 0, \\\"ERR_DIV_ZERO\\\");\\r\\n        uint c0 = a * BONE;\\r\\n        require(a == 0 || c0 / a == BONE, \\\"ERR_DIV_INTERNAL\\\"); // bmul overflow\\r\\n        uint c1 = c0 + (b / 2);\\r\\n        require(c1 >= c0, \\\"ERR_DIV_INTERNAL\\\"); //  badd require\\r\\n        uint c2 = c1 / b;\\r\\n        return c2;\\r\\n    }\\r\\n\\r\\n    // DSMath.wpow\\r\\n    function bpowi(uint a, uint n)\\r\\n        internal pure\\r\\n        returns (uint)\\r\\n    {\\r\\n        uint z = n % 2 != 0 ? a : BONE;\\r\\n\\r\\n        for (n /= 2; n != 0; n /= 2) {\\r\\n            a = bmul(a, a);\\r\\n\\r\\n            if (n % 2 != 0) {\\r\\n                z = bmul(z, a);\\r\\n            }\\r\\n        }\\r\\n        return z;\\r\\n    }\\r\\n\\r\\n    // Compute b^(e.w) by splitting it into (b^e)*(b^0.w).\\r\\n    // Use `bpowi` for `b^e` and `bpowK` for k iterations\\r\\n    // of approximation of b^0.w\\r\\n    function bpow(uint base, uint exp)\\r\\n        internal pure\\r\\n        returns (uint)\\r\\n    {\\r\\n        require(base >= MIN_BPOW_BASE, \\\"ERR_BPOW_BASE_TOO_LOW\\\");\\r\\n        require(base <= MAX_BPOW_BASE, \\\"ERR_BPOW_BASE_TOO_HIGH\\\");\\r\\n\\r\\n        uint whole  = bfloor(exp);   \\r\\n        uint remain = bsub(exp, whole);\\r\\n\\r\\n        uint wholePow = bpowi(base, btoi(whole));\\r\\n\\r\\n        if (remain == 0) {\\r\\n            return wholePow;\\r\\n        }\\r\\n\\r\\n        uint partialResult = bpowApprox(base, remain, BPOW_PRECISION);\\r\\n        return bmul(wholePow, partialResult);\\r\\n    }\\r\\n\\r\\n    function bpowApprox(uint base, uint exp, uint precision)\\r\\n        internal pure\\r\\n        returns (uint)\\r\\n    {\\r\\n        // term 0:\\r\\n        uint a     = exp;\\r\\n        (uint x, bool xneg)  = bsubSign(base, BONE);\\r\\n        uint term = BONE;\\r\\n        uint sum   = term;\\r\\n        bool negative = false;\\r\\n\\r\\n\\r\\n        // term(k) = numer / denom \\r\\n        //         = (product(a - i - 1, i=1-->k) * x^k) / (k!)\\r\\n        // each iteration, multiply previous term by (a-(k-1)) * x / k\\r\\n        // continue until term is less than precision\\r\\n        for (uint i = 1; term >= precision; i++) {\\r\\n            uint bigK = i * BONE;\\r\\n            (uint c, bool cneg) = bsubSign(a, bsub(bigK, BONE));\\r\\n            term = bmul(term, bmul(c, x));\\r\\n            term = bdiv(term, bigK);\\r\\n            if (term == 0) break;\\r\\n\\r\\n            if (xneg) negative = !negative;\\r\\n            if (cneg) negative = !negative;\\r\\n            if (negative) {\\r\\n                sum = bsub(sum, term);\\r\\n            } else {\\r\\n                sum = badd(sum, term);\\r\\n            }\\r\\n        }\\r\\n\\r\\n        return sum;\\r\\n    }\\r\\n\\r\\n}\\r\\n\",\"keccak256\":\"0x202057e3b3eb9ac515caa18b50148fc342bd8065e37c4ff08dd9ade76daee5ce\"},\"contracts/interfaces/I1inchSpotAgg.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\nimport '@openzeppelin/contracts/token/ERC20/IERC20.sol';\\r\\n\\r\\ninterface I1inchSpotAgg {\\r\\n  function getRate(IERC20 srcToken, IERC20 dstToken, bool useWrappers) external view returns (uint256 weightedRate);\\r\\n\\r\\n  function getRateToEth(IERC20 srcToken, bool useWrappers) external view returns (uint256 weightedRate);\\r\\n}\\r\\n\",\"keccak256\":\"0x29417a441b068263f01adb36906270f1b76431d3017d214f506824ee41ada1b3\",\"license\":\"GNU AGPLv3\"},\"contracts/interfaces/IBaluniV1Agent.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n\\r\\ninterface IBaluniV1Agent {\\r\\n  struct Call {\\r\\n    address to;\\r\\n    uint256 value;\\r\\n    bytes data;\\r\\n  }\\r\\n\\r\\n  function execute(Call[] memory calls, address[] memory tokensReturn) external;\\r\\n}\\r\\n\",\"keccak256\":\"0x1bbf5ddbc4f525451e727d6997e6a20a6238d69232b58b3813760a16e7f60bbe\",\"license\":\"GNU AGPLv3\"},\"contracts/interfaces/IBaluniV1PoolPeriphery.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n\\r\\ninterface IBaluniV1PoolPeriphery {\\r\\n    function getReserves(address pool) external view returns (uint256[] memory);\\r\\n\\r\\n    function getAssetReserve(address pool, address asset) external view returns (uint256);\\r\\n}\\r\\n\",\"keccak256\":\"0x07a47e40a96a436f7dab0a5bb58c27622fd7f9a7c98b5c3f3d223ce848cbdf28\",\"license\":\"GNU AGPLv3\"},\"contracts/interfaces/IBaluniV1Rebalancer.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n\\r\\nimport './IBaluniV1Router.sol';\\r\\n\\r\\ninterface IBaluniV1Rebalancer {\\r\\n  struct RebalanceVars {\\r\\n    uint256 length;\\r\\n    uint256 totalValue;\\r\\n    uint256 finalUsdBalance;\\r\\n    uint256 overweightVaultsLength;\\r\\n    uint256 underweightVaultsLength;\\r\\n    uint256 totalActiveWeight;\\r\\n    uint256 amountOut;\\r\\n    uint256[] overweightVaults;\\r\\n    uint256[] overweightAmounts;\\r\\n    uint256[] underweightVaults;\\r\\n    uint256[] underweightAmounts;\\r\\n    uint256[] balances;\\r\\n  }\\r\\n\\r\\n  // Variables\\r\\n  function baluniRouter() external view returns (address);\\r\\n\\r\\n  function USDC() external view returns (address);\\r\\n\\r\\n  function WNATIVE() external view returns (address);\\r\\n\\r\\n  function uniswapRouter() external view returns (address);\\r\\n\\r\\n  function uniswapFactory() external view returns (address);\\r\\n\\r\\n  function _1InchSpotAgg() external view returns (address);\\r\\n\\r\\n  function treasury() external view returns (address);\\r\\n\\r\\n  // Functions\\r\\n  function rebalance(\\r\\n    uint256[] memory balances,\\r\\n    address[] calldata assets,\\r\\n    uint256[] calldata weights,\\r\\n    uint256 limit,\\r\\n    address sender,\\r\\n    address receiver,\\r\\n    address baseAsset\\r\\n  ) external;\\r\\n\\r\\n  function checkRebalance(\\r\\n    uint256[] memory balances,\\r\\n    address[] calldata assets,\\r\\n    uint256[] calldata weights,\\r\\n    uint256 limit,\\r\\n    address sender,\\r\\n    address baseAsset\\r\\n  ) external view returns (RebalanceVars memory);\\r\\n\\r\\n  function convert(address fromToken, address toToken, uint256 amount) external view returns (uint256);\\r\\n}\\r\\n\",\"keccak256\":\"0xe7e9c4fbe80061f09e49a3c9861c415d023383069ee1c59b39f85290791e8c3f\",\"license\":\"GNU AGPLv3\"},\"contracts/interfaces/IBaluniV1Router.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n\\r\\nimport '@openzeppelin/contracts/token/ERC20/IERC20.sol';\\r\\nimport '@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol';\\r\\nimport './I1inchSpotAgg.sol';\\r\\nimport './IBaluniV1Agent.sol';\\r\\n\\r\\ninterface IBaluniV1Router {\\r\\n  struct Call {\\r\\n    address to;\\r\\n    uint256 value;\\r\\n    bytes data;\\r\\n  }\\r\\n\\r\\n  // Variables\\r\\n  function _MAX_BPS_FEE() external view returns (uint256);\\r\\n\\r\\n  function _BPS_FEE() external view returns (uint256);\\r\\n\\r\\n  function _BPS_BASE() external view returns (uint256);\\r\\n\\r\\n  function getTokens() external view returns (address[] memory);\\r\\n\\r\\n  function USDC() external view returns (IERC20);\\r\\n\\r\\n  function WNATIVE() external view returns (address);\\r\\n\\r\\n  function oracle() external view returns (address);\\r\\n\\r\\n  function uniswapRouter() external view returns (address);\\r\\n\\r\\n  function uniswapFactory() external view returns (address);\\r\\n\\r\\n  function agentFactory() external view returns (address);\\r\\n\\r\\n  function marketOracle() external view returns (address);\\r\\n\\r\\n  function rebalancer() external view returns (address);\\r\\n\\r\\n  function treasury() external view returns (address);\\r\\n\\r\\n  // Functions\\r\\n  function initialize(\\r\\n    address _usdc,\\r\\n    address _wnative,\\r\\n    address _1inchSpotAgg,\\r\\n    address _uniRouter,\\r\\n    address _uniFactory,\\r\\n    address _rebalancer\\r\\n  ) external;\\r\\n\\r\\n  function reinitialize(\\r\\n    address _usdc,\\r\\n    address _wnative,\\r\\n    address _1inchSpotAgg,\\r\\n    address _uniRouter,\\r\\n    address _uniFactory,\\r\\n    address _rebalancer,\\r\\n    uint64 version\\r\\n  ) external;\\r\\n\\r\\n  function initializeMarketOracle(address _marketOracle) external;\\r\\n\\r\\n  function changeMarketOracle(address _marketOracle) external;\\r\\n\\r\\n  function changeBpsFee(uint256 _newFee) external;\\r\\n\\r\\n  function changeTreasury(address _newTreasury) external;\\r\\n\\r\\n  function changeRebalancer(address _newRebalancer) external;\\r\\n\\r\\n  function changeAgentFactory(address _agentFactory) external;\\r\\n\\r\\n  function execute(IBaluniV1Agent.Call[] memory calls, address[] memory tokensReturn) external;\\r\\n\\r\\n  function liquidate(address token) external;\\r\\n\\r\\n  function liquidateAll() external;\\r\\n\\r\\n  function burnERC20(uint256 burnAmount) external;\\r\\n\\r\\n  function burnUSDC(uint256 burnAmount) external;\\r\\n\\r\\n  function getAgentAddress(address _user) external view returns (address);\\r\\n\\r\\n  function mintWithUSDC(uint256 balAmountToMint) external;\\r\\n\\r\\n  function callRebalance(\\r\\n    address[] calldata assets,\\r\\n    uint256[] calldata weights,\\r\\n    address sender,\\r\\n    address receiver,\\r\\n    uint256 limit,\\r\\n    address baseAsset\\r\\n  ) external;\\r\\n\\r\\n  function requiredUSDCtoMint(uint256 balAmountToMint) external view returns (uint256);\\r\\n\\r\\n  function calculateTokenShare(\\r\\n    uint256 totalBaluni,\\r\\n    uint256 totalERC20Balance,\\r\\n    uint256 baluniAmount,\\r\\n    uint256 tokenDecimals\\r\\n  ) external pure returns (uint256);\\r\\n\\r\\n  function tokenValuation(uint256 amount, address token) external view returns (uint256);\\r\\n\\r\\n  function totalValuation() external view returns (uint256);\\r\\n\\r\\n  function getUSDCShareValue(uint256 amount) external view returns (uint256);\\r\\n\\r\\n  function fetchMarketPrices() external view returns (uint256, uint256);\\r\\n\\r\\n  function getVersion() external view returns (uint64);\\r\\n\\r\\n  function unitPrice() external view returns (uint256);\\r\\n  \\r\\n}\\r\\n\",\"keccak256\":\"0x0795abf370daca8b74052ab6f425ab982bb4e0aecc4a72de19b3ff505d9e18a5\",\"license\":\"GNU AGPLv3\"}},\"version\":1}","storageLayout":{"storage":[{"astId":4440,"contract":"contracts/BaluniV1PoolFactory.sol:BaluniV1PoolFactory","label":"allPools","offset":0,"slot":"0","type":"t_array(t_address)dyn_storage"},{"astId":4446,"contract":"contracts/BaluniV1PoolFactory.sol:BaluniV1PoolFactory","label":"getPool","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_address))"},{"astId":4448,"contract":"contracts/BaluniV1PoolFactory.sol:BaluniV1PoolFactory","label":"rebalancer","offset":0,"slot":"2","type":"t_address"},{"astId":4450,"contract":"contracts/BaluniV1PoolFactory.sol:BaluniV1PoolFactory","label":"periphery","offset":0,"slot":"3","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_address)dyn_storage":{"base":"t_address","encoding":"dynamic_array","label":"address[]","numberOfBytes":"32"},"t_mapping(t_address,t_address)":{"encoding":"mapping","key":"t_address","label":"mapping(address => address)","numberOfBytes":"32","value":"t_address"},"t_mapping(t_address,t_mapping(t_address,t_address))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => address))","numberOfBytes":"32","value":"t_mapping(t_address,t_address)"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/balancer/BColor.sol":{"BBronze":{"abi":[{"inputs":[],"name":"getColor","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601357607c908160188239f35b5f80fdfe60808060405260043610156011575f80fd5b5f3560e01c639a86139b146023575f80fd5b346042575f3660031901126042576542524f4e5a4560d01b8152602090f35b5f80fdfea2646970667358221220e197f4d1a676911ee8ad38cdb1a5502a5970b5522d2fc327ad69babb1cb7aa8864736f6c63430008190033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x13 JUMPI PUSH1 0x7C SWAP1 DUP2 PUSH1 0x18 DUP3 CODECOPY RETURN JUMPDEST PUSH0 DUP1 REVERT INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH1 0x11 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR PUSH4 0x9A86139B EQ PUSH1 0x23 JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH1 0x42 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH1 0x42 JUMPI PUSH6 0x42524F4E5A45 PUSH1 0xD0 SHL DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE1 SWAP8 DELEGATECALL 0xD1 0xA6 PUSH23 0x911EE8AD38CDB1A5502A5970B5522D2FC327AD69BABB1C 0xB7 0xAA DUP9 PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ","sourceMap":"782:141:17:-:0;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"60808060405260043610156011575f80fd5b5f3560e01c639a86139b146023575f80fd5b346042575f3660031901126042576542524f4e5a4560d01b8152602090f35b5f80fdfea2646970667358221220e197f4d1a676911ee8ad38cdb1a5502a5970b5522d2fc327ad69babb1cb7aa8864736f6c63430008190033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH1 0x11 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR PUSH4 0x9A86139B EQ PUSH1 0x23 JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH1 0x42 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH1 0x42 JUMPI PUSH6 0x42524F4E5A45 PUSH1 0xD0 SHL DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE1 SWAP8 DELEGATECALL 0xD1 0xA6 PUSH23 0x911EE8AD38CDB1A5502A5970B5522D2FC327AD69BABB1C 0xB7 0xAA DUP9 PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ","sourceMap":"782:141:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;782:141:17;;;;-1:-1:-1;;;782:141:17;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"24800","executionCost":"81","totalCost":"24881"},"external":{"getColor()":"148"}},"methodIdentifiers":{"getColor()":"9a86139b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"getColor\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/balancer/BColor.sol\":\"BBronze\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/balancer/BColor.sol\":{\"content\":\"// This program is free software: you can redistribute it and/or modify\\r\\n// it under the terms of the GNU General Public License as published by\\r\\n// the Free Software Foundation, either version 3 of the License, or\\r\\n// (at your option) any later version.\\r\\n\\r\\n// This program is distributed in the hope that it will be useful,\\r\\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\\r\\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\r\\n// GNU General Public License for more details.\\r\\n\\r\\n// You should have received a copy of the GNU General Public License\\r\\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\\r\\n\\r\\npragma solidity 0.8.25;\\r\\n\\r\\nabstract contract BColor {\\r\\n    function getColor() external view virtual returns (bytes32);\\r\\n}\\r\\n\\r\\ncontract BBronze is BColor {\\r\\n    function getColor() external view override returns (bytes32) {\\r\\n        return bytes32('BRONZE');\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xfebf562cc76ad2f7d522afc383f11c4802fc39fc675bad0da602bde5e2212710\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}},"BColor":{"abi":[{"inputs":[],"name":"getColor","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"getColor()":"9a86139b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"getColor\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/balancer/BColor.sol\":\"BColor\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/balancer/BColor.sol\":{\"content\":\"// This program is free software: you can redistribute it and/or modify\\r\\n// it under the terms of the GNU General Public License as published by\\r\\n// the Free Software Foundation, either version 3 of the License, or\\r\\n// (at your option) any later version.\\r\\n\\r\\n// This program is distributed in the hope that it will be useful,\\r\\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\\r\\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\r\\n// GNU General Public License for more details.\\r\\n\\r\\n// You should have received a copy of the GNU General Public License\\r\\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\\r\\n\\r\\npragma solidity 0.8.25;\\r\\n\\r\\nabstract contract BColor {\\r\\n    function getColor() external view virtual returns (bytes32);\\r\\n}\\r\\n\\r\\ncontract BBronze is BColor {\\r\\n    function getColor() external view override returns (bytes32) {\\r\\n        return bytes32('BRONZE');\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xfebf562cc76ad2f7d522afc383f11c4802fc39fc675bad0da602bde5e2212710\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/balancer/BConst.sol":{"BConst":{"abi":[{"inputs":[],"name":"BONE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"BPOW_PRECISION","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"EXIT_FEE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"INIT_POOL_SUPPLY","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MAX_BOUND_TOKENS","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MAX_BPOW_BASE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MAX_FEE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MAX_IN_RATIO","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MAX_OUT_RATIO","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MAX_TOTAL_WEIGHT","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MAX_WEIGHT","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MIN_BALANCE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MIN_BOUND_TOKENS","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MIN_BPOW_BASE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MIN_FEE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MIN_WEIGHT","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getColor","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"608080604052346015576102f0908161001a8239f35b5f80fdfe6040608081526004361015610012575f80fd5b5f3560e01c806309a3bbe414610275578063189d00ca14610257578063218b53821461011957806376c7a3c714610238578063867378c51461021b5780639381cd2b146101f8578063992e2a92146101d65780639a86139b146101b3578063b0e0d13614610198578063b7b800a41461017d578063ba019dab14610162578063bc063e1a14610140578063bc694ea21461011e578063c36596a614610119578063c6580d12146100ff578063e4a28a52146100fa5763ec093021146100d5575f80fd5b346100f6575f3660031901126100f657602090516706f05b59d3b200008152f35b5f80fd5b610275565b50346100f6575f3660031901126100f657602090515f8152f35b610298565b50346100f6575f3660031901126100f65760209051671bc16d674ec7ffff8152f35b50346100f6575f3660031901126100f6576020905167016345785d8a00008152f35b50346100f6575f3660031901126100f6576020905160018152f35b50346100f6575f3660031901126100f6576020905160028152f35b50346100f6575f3660031901126100f6576020905160088152f35b50346100f6575f3660031901126100f657516542524f4e5a4560d01b8152602090f35b50346100f6575f3660031901126100f657602090516704a03ce68d2155568152f35b50346100f6575f3660031901126100f6576020905168056bc75e2d631000008152f35b50346100f6575f3660031901126100f65760209051620f42408152f35b50346100f6575f3660031901126100f6576020905164e8d4a510008152f35b50346100f6575f3660031901126100f657602090516305f5e1008152f35b346100f6575f3660031901126100f65760206040516802b5e3af16b18800008152f35b346100f6575f3660031901126100f6576020604051670de0b6b3a76400008152f3fea2646970667358221220d129abf2d95ac4c8a133863179fe1c4bd5ac7e9331fce3a9e95ac216a67a32c964736f6c63430008190033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x15 JUMPI PUSH2 0x2F0 SWAP1 DUP2 PUSH2 0x1A DUP3 CODECOPY RETURN JUMPDEST PUSH0 DUP1 REVERT INVALID PUSH1 0x40 PUSH1 0x80 DUP2 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9A3BBE4 EQ PUSH2 0x275 JUMPI DUP1 PUSH4 0x189D00CA EQ PUSH2 0x257 JUMPI DUP1 PUSH4 0x218B5382 EQ PUSH2 0x119 JUMPI DUP1 PUSH4 0x76C7A3C7 EQ PUSH2 0x238 JUMPI DUP1 PUSH4 0x867378C5 EQ PUSH2 0x21B JUMPI DUP1 PUSH4 0x9381CD2B EQ PUSH2 0x1F8 JUMPI DUP1 PUSH4 0x992E2A92 EQ PUSH2 0x1D6 JUMPI DUP1 PUSH4 0x9A86139B EQ PUSH2 0x1B3 JUMPI DUP1 PUSH4 0xB0E0D136 EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0xB7B800A4 EQ PUSH2 0x17D JUMPI DUP1 PUSH4 0xBA019DAB EQ PUSH2 0x162 JUMPI DUP1 PUSH4 0xBC063E1A EQ PUSH2 0x140 JUMPI DUP1 PUSH4 0xBC694EA2 EQ PUSH2 0x11E JUMPI DUP1 PUSH4 0xC36596A6 EQ PUSH2 0x119 JUMPI DUP1 PUSH4 0xC6580D12 EQ PUSH2 0xFF JUMPI DUP1 PUSH4 0xE4A28A52 EQ PUSH2 0xFA JUMPI PUSH4 0xEC093021 EQ PUSH2 0xD5 JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xF6 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF6 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH8 0x6F05B59D3B20000 DUP2 MSTORE RETURN JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x275 JUMP JUMPDEST POP CALLVALUE PUSH2 0xF6 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF6 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH0 DUP2 MSTORE RETURN JUMPDEST PUSH2 0x298 JUMP JUMPDEST POP CALLVALUE PUSH2 0xF6 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF6 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH8 0x1BC16D674EC7FFFF DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0xF6 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF6 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH8 0x16345785D8A0000 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0xF6 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF6 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0xF6 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF6 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH1 0x2 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0xF6 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF6 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH1 0x8 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0xF6 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF6 JUMPI MLOAD PUSH6 0x42524F4E5A45 PUSH1 0xD0 SHL DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0xF6 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF6 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH8 0x4A03CE68D215556 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0xF6 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF6 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH9 0x56BC75E2D63100000 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0xF6 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF6 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH3 0xF4240 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0xF6 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF6 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH5 0xE8D4A51000 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0xF6 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF6 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH4 0x5F5E100 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xF6 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF6 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH9 0x2B5E3AF16B1880000 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xF6 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF6 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH8 0xDE0B6B3A7640000 DUP2 MSTORE RETURN INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD1 0x29 0xAB CALLCODE 0xD9 GAS 0xC4 0xC8 LOG1 CALLER DUP7 BALANCE PUSH26 0xFE1C4BD5AC7E9331FCE3A9E95AC216A67A32C964736F6C634300 ADDMOD NOT STOP CALLER ","sourceMap":"709:870:18:-:0;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"external_fun_MAX_TOTAL_WEIGHT":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_MIN_WEIGHT":{"entryPoint":664,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"6040608081526004361015610012575f80fd5b5f3560e01c806309a3bbe414610275578063189d00ca14610257578063218b53821461011957806376c7a3c714610238578063867378c51461021b5780639381cd2b146101f8578063992e2a92146101d65780639a86139b146101b3578063b0e0d13614610198578063b7b800a41461017d578063ba019dab14610162578063bc063e1a14610140578063bc694ea21461011e578063c36596a614610119578063c6580d12146100ff578063e4a28a52146100fa5763ec093021146100d5575f80fd5b346100f6575f3660031901126100f657602090516706f05b59d3b200008152f35b5f80fd5b610275565b50346100f6575f3660031901126100f657602090515f8152f35b610298565b50346100f6575f3660031901126100f65760209051671bc16d674ec7ffff8152f35b50346100f6575f3660031901126100f6576020905167016345785d8a00008152f35b50346100f6575f3660031901126100f6576020905160018152f35b50346100f6575f3660031901126100f6576020905160028152f35b50346100f6575f3660031901126100f6576020905160088152f35b50346100f6575f3660031901126100f657516542524f4e5a4560d01b8152602090f35b50346100f6575f3660031901126100f657602090516704a03ce68d2155568152f35b50346100f6575f3660031901126100f6576020905168056bc75e2d631000008152f35b50346100f6575f3660031901126100f65760209051620f42408152f35b50346100f6575f3660031901126100f6576020905164e8d4a510008152f35b50346100f6575f3660031901126100f657602090516305f5e1008152f35b346100f6575f3660031901126100f65760206040516802b5e3af16b18800008152f35b346100f6575f3660031901126100f6576020604051670de0b6b3a76400008152f3fea2646970667358221220d129abf2d95ac4c8a133863179fe1c4bd5ac7e9331fce3a9e95ac216a67a32c964736f6c63430008190033","opcodes":"PUSH1 0x40 PUSH1 0x80 DUP2 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9A3BBE4 EQ PUSH2 0x275 JUMPI DUP1 PUSH4 0x189D00CA EQ PUSH2 0x257 JUMPI DUP1 PUSH4 0x218B5382 EQ PUSH2 0x119 JUMPI DUP1 PUSH4 0x76C7A3C7 EQ PUSH2 0x238 JUMPI DUP1 PUSH4 0x867378C5 EQ PUSH2 0x21B JUMPI DUP1 PUSH4 0x9381CD2B EQ PUSH2 0x1F8 JUMPI DUP1 PUSH4 0x992E2A92 EQ PUSH2 0x1D6 JUMPI DUP1 PUSH4 0x9A86139B EQ PUSH2 0x1B3 JUMPI DUP1 PUSH4 0xB0E0D136 EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0xB7B800A4 EQ PUSH2 0x17D JUMPI DUP1 PUSH4 0xBA019DAB EQ PUSH2 0x162 JUMPI DUP1 PUSH4 0xBC063E1A EQ PUSH2 0x140 JUMPI DUP1 PUSH4 0xBC694EA2 EQ PUSH2 0x11E JUMPI DUP1 PUSH4 0xC36596A6 EQ PUSH2 0x119 JUMPI DUP1 PUSH4 0xC6580D12 EQ PUSH2 0xFF JUMPI DUP1 PUSH4 0xE4A28A52 EQ PUSH2 0xFA JUMPI PUSH4 0xEC093021 EQ PUSH2 0xD5 JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xF6 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF6 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH8 0x6F05B59D3B20000 DUP2 MSTORE RETURN JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x275 JUMP JUMPDEST POP CALLVALUE PUSH2 0xF6 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF6 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH0 DUP2 MSTORE RETURN JUMPDEST PUSH2 0x298 JUMP JUMPDEST POP CALLVALUE PUSH2 0xF6 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF6 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH8 0x1BC16D674EC7FFFF DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0xF6 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF6 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH8 0x16345785D8A0000 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0xF6 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF6 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0xF6 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF6 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH1 0x2 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0xF6 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF6 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH1 0x8 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0xF6 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF6 JUMPI MLOAD PUSH6 0x42524F4E5A45 PUSH1 0xD0 SHL DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0xF6 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF6 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH8 0x4A03CE68D215556 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0xF6 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF6 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH9 0x56BC75E2D63100000 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0xF6 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF6 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH3 0xF4240 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0xF6 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF6 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH5 0xE8D4A51000 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0xF6 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF6 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH4 0x5F5E100 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xF6 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF6 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH9 0x2B5E3AF16B1880000 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xF6 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF6 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH8 0xDE0B6B3A7640000 DUP2 MSTORE RETURN INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD1 0x29 0xAB CALLCODE 0xD9 GAS 0xC4 0xC8 LOG1 CALLER DUP7 BALANCE PUSH26 0xFE1C4BD5AC7E9331FCE3A9E95AC216A67A32C964736F6C634300 ADDMOD NOT STOP CALLER ","sourceMap":"709:870:18:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;709:870:18;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;709:870:18;;;;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;709:870:18;;;;;;;;;;;;;;;;;;-1:-1:-1;;709:870:18;;;;;;;;;;;;;;;;;;-1:-1:-1;;709:870:18;;;;;;;1333:5;709:870;;;;;;;;;;-1:-1:-1;;709:870:18;;;;;;;828:1;709:870;;;;;;;;;;-1:-1:-1;;709:870:18;;;;;;;876:1;709:870;;;;;;;;;;-1:-1:-1;;709:870:18;;;;;-1:-1:-1;;;709:870:18;;;;;;;;;;;;-1:-1:-1;;709:870:18;;;;;;;;;;;;;;;;;;-1:-1:-1;;709:870:18;;;;;;;771:8;709:870;;;;;;;;;;-1:-1:-1;;709:870:18;;;;;;;;;;;;;;;;;;-1:-1:-1;;709:870:18;;;;;;;;;;;;;;;;;;-1:-1:-1;;709:870:18;;;;;;;;;;;;;;;;;-1:-1:-1;;709:870:18;;;;;;;771:8;709:870;;;;;;;;;-1:-1:-1;;709:870:18;;;;;;;771:8;709:870;;"},"gasEstimates":{"creation":{"codeDepositCost":"150400","executionCost":"202","totalCost":"150602"},"external":{"BONE()":"446","BPOW_PRECISION()":"172","EXIT_FEE()":"457","INIT_POOL_SUPPLY()":"260","MAX_BOUND_TOKENS()":"326","MAX_BPOW_BASE()":"414","MAX_FEE()":"392","MAX_IN_RATIO()":"497","MAX_OUT_RATIO()":"282","MAX_TOTAL_WEIGHT()":"148","MAX_WEIGHT()":"490","MIN_BALANCE()":"238","MIN_BOUND_TOKENS()":"348","MIN_BPOW_BASE()":"370","MIN_FEE()":"216","MIN_WEIGHT()":"204","getColor()":"310"}},"methodIdentifiers":{"BONE()":"c36596a6","BPOW_PRECISION()":"189d00ca","EXIT_FEE()":"c6580d12","INIT_POOL_SUPPLY()":"9381cd2b","MAX_BOUND_TOKENS()":"b0e0d136","MAX_BPOW_BASE()":"bc694ea2","MAX_FEE()":"bc063e1a","MAX_IN_RATIO()":"ec093021","MAX_OUT_RATIO()":"992e2a92","MAX_TOTAL_WEIGHT()":"09a3bbe4","MAX_WEIGHT()":"e4a28a52","MIN_BALANCE()":"867378c5","MIN_BOUND_TOKENS()":"b7b800a4","MIN_BPOW_BASE()":"ba019dab","MIN_FEE()":"76c7a3c7","MIN_WEIGHT()":"218b5382","getColor()":"9a86139b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"BONE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"BPOW_PRECISION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"EXIT_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"INIT_POOL_SUPPLY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_BOUND_TOKENS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_BPOW_BASE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_IN_RATIO\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_OUT_RATIO\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_TOTAL_WEIGHT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_WEIGHT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_BALANCE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_BOUND_TOKENS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_BPOW_BASE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_WEIGHT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getColor\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/balancer/BConst.sol\":\"BConst\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/balancer/BColor.sol\":{\"content\":\"// This program is free software: you can redistribute it and/or modify\\r\\n// it under the terms of the GNU General Public License as published by\\r\\n// the Free Software Foundation, either version 3 of the License, or\\r\\n// (at your option) any later version.\\r\\n\\r\\n// This program is distributed in the hope that it will be useful,\\r\\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\\r\\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\r\\n// GNU General Public License for more details.\\r\\n\\r\\n// You should have received a copy of the GNU General Public License\\r\\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\\r\\n\\r\\npragma solidity 0.8.25;\\r\\n\\r\\nabstract contract BColor {\\r\\n    function getColor() external view virtual returns (bytes32);\\r\\n}\\r\\n\\r\\ncontract BBronze is BColor {\\r\\n    function getColor() external view override returns (bytes32) {\\r\\n        return bytes32('BRONZE');\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xfebf562cc76ad2f7d522afc383f11c4802fc39fc675bad0da602bde5e2212710\"},\"contracts/balancer/BConst.sol\":{\"content\":\"// This program is free software: you can redistribute it and/or modify\\r\\n// it under the terms of the GNU General Public License as published by\\r\\n// the Free Software Foundation, either version 3 of the License, or\\r\\n// (at your option) any later version.\\r\\n\\r\\n// This program is distributed in the hope that it will be useful,\\r\\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\\r\\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\r\\n// GNU General Public License for more details.\\r\\n\\r\\n// You should have received a copy of the GNU General Public License\\r\\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\\r\\n\\r\\npragma solidity 0.8.25;\\r\\n\\r\\nimport './BColor.sol';\\r\\n\\r\\ncontract BConst is BBronze {\\r\\n    uint public constant BONE = 10 ** 18;\\r\\n\\r\\n    uint public constant MIN_BOUND_TOKENS = 2;\\r\\n    uint public constant MAX_BOUND_TOKENS = 8;\\r\\n\\r\\n    uint public constant MIN_FEE = BONE / 10 ** 6;\\r\\n    uint public constant MAX_FEE = BONE / 10;\\r\\n    uint public constant EXIT_FEE = 0;\\r\\n\\r\\n    uint public constant MIN_WEIGHT = BONE;\\r\\n    uint public constant MAX_WEIGHT = BONE * 50;\\r\\n    uint public constant MAX_TOTAL_WEIGHT = BONE * 50;\\r\\n    uint public constant MIN_BALANCE = BONE / 10 ** 12;\\r\\n\\r\\n    uint public constant INIT_POOL_SUPPLY = BONE * 100;\\r\\n\\r\\n    uint public constant MIN_BPOW_BASE = 1 wei;\\r\\n    uint public constant MAX_BPOW_BASE = (2 * BONE) - 1 wei;\\r\\n    uint public constant BPOW_PRECISION = BONE / 10 ** 10;\\r\\n\\r\\n    uint public constant MAX_IN_RATIO = BONE / 2;\\r\\n    uint public constant MAX_OUT_RATIO = (BONE / 3) + 1 wei;\\r\\n}\\r\\n\",\"keccak256\":\"0xdda4746d3e2d40d8ecd62b61fec957d560ad405dd82aaf3e43d7e708168b7df6\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/balancer/BMath.sol":{"BMath":{"abi":[{"inputs":[],"name":"BONE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"BPOW_PRECISION","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"EXIT_FEE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"INIT_POOL_SUPPLY","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MAX_BOUND_TOKENS","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MAX_BPOW_BASE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MAX_FEE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MAX_IN_RATIO","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MAX_OUT_RATIO","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MAX_TOTAL_WEIGHT","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MAX_WEIGHT","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MIN_BALANCE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MIN_BOUND_TOKENS","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MIN_BPOW_BASE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MIN_FEE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MIN_WEIGHT","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenBalanceIn","type":"uint256"},{"internalType":"uint256","name":"tokenWeightIn","type":"uint256"},{"internalType":"uint256","name":"tokenBalanceOut","type":"uint256"},{"internalType":"uint256","name":"tokenWeightOut","type":"uint256"},{"internalType":"uint256","name":"tokenAmountOut","type":"uint256"},{"internalType":"uint256","name":"swapFee","type":"uint256"}],"name":"calcInGivenOut","outputs":[{"internalType":"uint256","name":"tokenAmountIn","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenBalanceIn","type":"uint256"},{"internalType":"uint256","name":"tokenWeightIn","type":"uint256"},{"internalType":"uint256","name":"tokenBalanceOut","type":"uint256"},{"internalType":"uint256","name":"tokenWeightOut","type":"uint256"},{"internalType":"uint256","name":"tokenAmountIn","type":"uint256"},{"internalType":"uint256","name":"swapFee","type":"uint256"}],"name":"calcOutGivenIn","outputs":[{"internalType":"uint256","name":"tokenAmountOut","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenBalanceOut","type":"uint256"},{"internalType":"uint256","name":"tokenWeightOut","type":"uint256"},{"internalType":"uint256","name":"poolSupply","type":"uint256"},{"internalType":"uint256","name":"totalWeight","type":"uint256"},{"internalType":"uint256","name":"tokenAmountOut","type":"uint256"},{"internalType":"uint256","name":"swapFee","type":"uint256"}],"name":"calcPoolInGivenSingleOut","outputs":[{"internalType":"uint256","name":"poolAmountIn","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenBalanceIn","type":"uint256"},{"internalType":"uint256","name":"tokenWeightIn","type":"uint256"},{"internalType":"uint256","name":"poolSupply","type":"uint256"},{"internalType":"uint256","name":"totalWeight","type":"uint256"},{"internalType":"uint256","name":"tokenAmountIn","type":"uint256"},{"internalType":"uint256","name":"swapFee","type":"uint256"}],"name":"calcPoolOutGivenSingleIn","outputs":[{"internalType":"uint256","name":"poolAmountOut","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenBalanceIn","type":"uint256"},{"internalType":"uint256","name":"tokenWeightIn","type":"uint256"},{"internalType":"uint256","name":"poolSupply","type":"uint256"},{"internalType":"uint256","name":"totalWeight","type":"uint256"},{"internalType":"uint256","name":"poolAmountOut","type":"uint256"},{"internalType":"uint256","name":"swapFee","type":"uint256"}],"name":"calcSingleInGivenPoolOut","outputs":[{"internalType":"uint256","name":"tokenAmountIn","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenBalanceOut","type":"uint256"},{"internalType":"uint256","name":"tokenWeightOut","type":"uint256"},{"internalType":"uint256","name":"poolSupply","type":"uint256"},{"internalType":"uint256","name":"totalWeight","type":"uint256"},{"internalType":"uint256","name":"poolAmountIn","type":"uint256"},{"internalType":"uint256","name":"swapFee","type":"uint256"}],"name":"calcSingleOutGivenPoolIn","outputs":[{"internalType":"uint256","name":"tokenAmountOut","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenBalanceIn","type":"uint256"},{"internalType":"uint256","name":"tokenWeightIn","type":"uint256"},{"internalType":"uint256","name":"tokenBalanceOut","type":"uint256"},{"internalType":"uint256","name":"tokenWeightOut","type":"uint256"},{"internalType":"uint256","name":"swapFee","type":"uint256"}],"name":"calcSpotPrice","outputs":[{"internalType":"uint256","name":"spotPrice","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"getColor","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601557610bc9908161001a8239f35b5f80fdfe604060808152600480361015610013575f80fd5b5f3560e01c90816309a3bbe4146105fb578163189d00ca146105dd578163218b5382146101cf5781635c1bbaf71461059657816376c7a3c71461057757816382f652ad146104c45781638656b65314610479578163867378c51461045c57816389298012146103685781639381cd2b14610345578163992e2a92146103235781639a86139b14610300578163a221ee49146102b757508063b0e0d1361461029c578063b7b800a414610281578063ba019dab14610266578063ba9530a614610218578063bc063e1a146101f6578063bc694ea2146101d4578063c36596a6146101cf578063c6580d12146101b5578063e4a28a52146101b0578063ec0930211461018e5763f8d6aed414610125575f80fd5b3461018a5760209061018361016261017e61016861017861017261016d61015b61014e3661065e565b99949b9293909591610760565b9382610af2565b90610760565b610812565b610ae9565b91610aa0565b92610a3d565b610760565b9051908152f35b5f80fd5b503461018a575f36600319011261018a57602090516706f05b59d3b200008152f35b6105fb565b503461018a575f36600319011261018a57602090515f8152f35b61063c565b503461018a575f36600319011261018a5760209051671bc16d674ec7ffff8152f35b503461018a575f36600319011261018a576020905167016345785d8a00008152f35b503461018a5760209061018361024f61025561026161025b6101686102556101626102423661065e565b989496929b919093610760565b96610aa0565b90610a3d565b826107c5565b610aa0565b503461018a575f36600319011261018a576020905160018152f35b503461018a575f36600319011261018a576020905160028152f35b503461018a575f36600319011261018a576020905160088152f35b823461018a5760a036600319011261018a576101836102ed6102df6020946024359035610760565b610162606435604435610760565b6102556102fb608435610aa0565b6106f1565b823461018a575f36600319011261018a57516542524f4e5a4560d01b8152602090f35b823461018a575f36600319011261018a57602090516704a03ce68d2155568152f35b823461018a575f36600319011261018a576020905168056bc75e2d631000008152f35b823461018a5761038461037a3661065e565b9591909293610760565b95670de0b6b3a7640000918281029080159080830485148217156104495790846103b6928215610435575b50506109fe565b6706f05b59d3b20000810191828211610422575061041c8561041660209a976104116104026102559961017e6102619a8a6101839f9b6104119b6103fb9110156109fe565b0482610af2565b61040b8b6106f1565b90610812565b610a3d565b90610af2565b94610aa0565b601190634e487b7160e01b5f525260245ffd5b6104419192508461061e565b14848b6103af565b601184634e487b7160e01b5f525260245ffd5b823461018a575f36600319011261018a5760209051620f42408152f35b823461018a576020906101836102616104bf6104b561041161025b61016861025561017e6104a63661065e565b989496929c918d9b9194610760565b9761041189610aa0565b610af2565b90503461018a576104f56102616104166104b56104116104ef61016861016261017e6104a63661065e565b82610af2565b91670de0b6b3a764000090818402938015908086048414821715610564579083610527928215610550575b50506106b2565b6706f05b59d3b2000084019283851161042257506105496020948410156106b2565b5191048152f35b61055c9192508761061e565b14835f610520565b601185634e487b7160e01b5f525260245ffd5b823461018a575f36600319011261018a576020905164e8d4a510008152f35b823461018a576020906101836105d661016261026161041161041161041c6104026104bf61017e6105c63661065e565b9a949793918896929e919e610760565b9c826107c5565b823461018a575f36600319011261018a57602090516305f5e1008152f35b3461018a575f36600319011261018a5760206040516802b5e3af16b18800008152f35b8115610628570490565b634e487b7160e01b5f52601260045260245ffd5b3461018a575f36600319011261018a576020604051670de0b6b3a76400008152f35b60c090600319011261018a57600435906024359060443590606435906084359060a43590565b9190820180921161069157565b634e487b7160e01b5f52601160045260245ffd5b9190820391821161069157565b156106b957565b60405162461bcd60e51b815260206004820152601060248201526f11549497d1125597d25395115493905360821b6044820152606490fd5b801561072c576ec097ce7bc90715b34b9f1000000000908060011c820180831161069157610724610729938210156106b2565b61061e565b90565b60405162461bcd60e51b815260206004820152600c60248201526b4552525f4449565f5a45524f60a01b6044820152606490fd5b90801561072c57670de0b6b3a764000091828102908015818304851481171561069157610729946107989282156107b15750506106b2565b6107246107a88360011c83610684565b918210156106b2565b6107bd9192508461061e565b145f80610520565b906107d09082610684565b9081106107da5790565b60405162461bcd60e51b815260206004820152601060248201526f4552525f4144445f4f564552464c4f5760801b6044820152606490fd5b91906001928381106109c157671bc16d674ec7ffff811161098357670de0b6b3a764000091828104908382029180830485149015171561069157610857828592610af2565b910491808684161561097d57815b93871c90815b61095057505081156109485761088390939193610afc565b82949183915f9289955b6305f5e1008210156108ac575b50505050505050610729929350610a3d565b909192939495978189029289840483148a151715610691578361017e6108e9926102556108e26108dc8b99610ae9565b8d610b6e565b9890610a3d565b9283156109415784610939575b610931575b8286156109225761090b91610af2565b975b5f198114610691578a0195949392919061088d565b61092b916107c5565b9761090d565b9415946108fb565b9515956108f6565b509761089a565b509093505050565b8061095a91610a3d565b9087811661096c575b871c908161086b565b938161097791610a3d565b93610963565b84610865565b60405162461bcd60e51b815260206004820152601660248201527508aa4a4be84a09eaebe8482a68abea89e9ebe90928e960531b6044820152606490fd5b60405162461bcd60e51b81526020600482015260156024820152744552525f42504f575f424153455f544f4f5f4c4f5760581b6044820152606490fd5b15610a0557565b60405162461bcd60e51b815260206004820152601060248201526f4552525f4d554c5f4f564552464c4f5760801b6044820152606490fd5b81810291811590828404811482171561069157610a61928215610a8c5750506109fe565b6706f05b59d3b20000810180821161069157610a88670de0b6b3a7640000928210156109fe565b0490565b610a989192508461061e565b145f806103af565b610aa990610b35565b610ab05790565b60405162461bcd60e51b81526020600482015260116024820152704552525f5355425f554e444552464c4f5760781b6044820152606490fd5b610aa990610afc565b90610aa991610b6e565b670de0b6b3a7640000808210610b255750670de0b6b3a763ffff19810190811161069157905f90565b9081039081116106915790600190565b670de0b6b3a764000090808210610b5457810390811161069157905f90565b670de0b6b3a763ffff198101915081116106915790600190565b818110610b845790610b7f916106a5565b905f90565b610b8d916106a5565b9060019056fea26469706673582212201bf0c51113e645e3eff4a3d111f52bfea0af04cc6d2b51d668a82644bf68aab764736f6c63430008190033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x15 JUMPI PUSH2 0xBC9 SWAP1 DUP2 PUSH2 0x1A DUP3 CODECOPY RETURN JUMPDEST PUSH0 DUP1 REVERT INVALID PUSH1 0x40 PUSH1 0x80 DUP2 MSTORE PUSH1 0x4 DUP1 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x9A3BBE4 EQ PUSH2 0x5FB JUMPI DUP2 PUSH4 0x189D00CA EQ PUSH2 0x5DD JUMPI DUP2 PUSH4 0x218B5382 EQ PUSH2 0x1CF JUMPI DUP2 PUSH4 0x5C1BBAF7 EQ PUSH2 0x596 JUMPI DUP2 PUSH4 0x76C7A3C7 EQ PUSH2 0x577 JUMPI DUP2 PUSH4 0x82F652AD EQ PUSH2 0x4C4 JUMPI DUP2 PUSH4 0x8656B653 EQ PUSH2 0x479 JUMPI DUP2 PUSH4 0x867378C5 EQ PUSH2 0x45C JUMPI DUP2 PUSH4 0x89298012 EQ PUSH2 0x368 JUMPI DUP2 PUSH4 0x9381CD2B EQ PUSH2 0x345 JUMPI DUP2 PUSH4 0x992E2A92 EQ PUSH2 0x323 JUMPI DUP2 PUSH4 0x9A86139B EQ PUSH2 0x300 JUMPI DUP2 PUSH4 0xA221EE49 EQ PUSH2 0x2B7 JUMPI POP DUP1 PUSH4 0xB0E0D136 EQ PUSH2 0x29C JUMPI DUP1 PUSH4 0xB7B800A4 EQ PUSH2 0x281 JUMPI DUP1 PUSH4 0xBA019DAB EQ PUSH2 0x266 JUMPI DUP1 PUSH4 0xBA9530A6 EQ PUSH2 0x218 JUMPI DUP1 PUSH4 0xBC063E1A EQ PUSH2 0x1F6 JUMPI DUP1 PUSH4 0xBC694EA2 EQ PUSH2 0x1D4 JUMPI DUP1 PUSH4 0xC36596A6 EQ PUSH2 0x1CF JUMPI DUP1 PUSH4 0xC6580D12 EQ PUSH2 0x1B5 JUMPI DUP1 PUSH4 0xE4A28A52 EQ PUSH2 0x1B0 JUMPI DUP1 PUSH4 0xEC093021 EQ PUSH2 0x18E JUMPI PUSH4 0xF8D6AED4 EQ PUSH2 0x125 JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x18A JUMPI PUSH1 0x20 SWAP1 PUSH2 0x183 PUSH2 0x162 PUSH2 0x17E PUSH2 0x168 PUSH2 0x178 PUSH2 0x172 PUSH2 0x16D PUSH2 0x15B PUSH2 0x14E CALLDATASIZE PUSH2 0x65E JUMP JUMPDEST SWAP10 SWAP5 SWAP12 SWAP3 SWAP4 SWAP1 SWAP6 SWAP2 PUSH2 0x760 JUMP JUMPDEST SWAP4 DUP3 PUSH2 0xAF2 JUMP JUMPDEST SWAP1 PUSH2 0x760 JUMP JUMPDEST PUSH2 0x812 JUMP JUMPDEST PUSH2 0xAE9 JUMP JUMPDEST SWAP2 PUSH2 0xAA0 JUMP JUMPDEST SWAP3 PUSH2 0xA3D JUMP JUMPDEST PUSH2 0x760 JUMP JUMPDEST SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH0 DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x18A JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x18A JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH8 0x6F05B59D3B20000 DUP2 MSTORE RETURN JUMPDEST PUSH2 0x5FB JUMP JUMPDEST POP CALLVALUE PUSH2 0x18A JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x18A JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH0 DUP2 MSTORE RETURN JUMPDEST PUSH2 0x63C JUMP JUMPDEST POP CALLVALUE PUSH2 0x18A JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x18A JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH8 0x1BC16D674EC7FFFF DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x18A JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x18A JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH8 0x16345785D8A0000 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x18A JUMPI PUSH1 0x20 SWAP1 PUSH2 0x183 PUSH2 0x24F PUSH2 0x255 PUSH2 0x261 PUSH2 0x25B PUSH2 0x168 PUSH2 0x255 PUSH2 0x162 PUSH2 0x242 CALLDATASIZE PUSH2 0x65E JUMP JUMPDEST SWAP9 SWAP5 SWAP7 SWAP3 SWAP12 SWAP2 SWAP1 SWAP4 PUSH2 0x760 JUMP JUMPDEST SWAP7 PUSH2 0xAA0 JUMP JUMPDEST SWAP1 PUSH2 0xA3D JUMP JUMPDEST DUP3 PUSH2 0x7C5 JUMP JUMPDEST PUSH2 0xAA0 JUMP JUMPDEST POP CALLVALUE PUSH2 0x18A JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x18A JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x18A JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x18A JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH1 0x2 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x18A JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x18A JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH1 0x8 DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x18A JUMPI PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x18A JUMPI PUSH2 0x183 PUSH2 0x2ED PUSH2 0x2DF PUSH1 0x20 SWAP5 PUSH1 0x24 CALLDATALOAD SWAP1 CALLDATALOAD PUSH2 0x760 JUMP JUMPDEST PUSH2 0x162 PUSH1 0x64 CALLDATALOAD PUSH1 0x44 CALLDATALOAD PUSH2 0x760 JUMP JUMPDEST PUSH2 0x255 PUSH2 0x2FB PUSH1 0x84 CALLDATALOAD PUSH2 0xAA0 JUMP JUMPDEST PUSH2 0x6F1 JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x18A JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x18A JUMPI MLOAD PUSH6 0x42524F4E5A45 PUSH1 0xD0 SHL DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x18A JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x18A JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH8 0x4A03CE68D215556 DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x18A JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x18A JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH9 0x56BC75E2D63100000 DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x18A JUMPI PUSH2 0x384 PUSH2 0x37A CALLDATASIZE PUSH2 0x65E JUMP JUMPDEST SWAP6 SWAP2 SWAP1 SWAP3 SWAP4 PUSH2 0x760 JUMP JUMPDEST SWAP6 PUSH8 0xDE0B6B3A7640000 SWAP2 DUP3 DUP2 MUL SWAP1 DUP1 ISZERO SWAP1 DUP1 DUP4 DIV DUP6 EQ DUP3 OR ISZERO PUSH2 0x449 JUMPI SWAP1 DUP5 PUSH2 0x3B6 SWAP3 DUP3 ISZERO PUSH2 0x435 JUMPI JUMPDEST POP POP PUSH2 0x9FE JUMP JUMPDEST PUSH8 0x6F05B59D3B20000 DUP2 ADD SWAP2 DUP3 DUP3 GT PUSH2 0x422 JUMPI POP PUSH2 0x41C DUP6 PUSH2 0x416 PUSH1 0x20 SWAP11 SWAP8 PUSH2 0x411 PUSH2 0x402 PUSH2 0x255 SWAP10 PUSH2 0x17E PUSH2 0x261 SWAP11 DUP11 PUSH2 0x183 SWAP16 SWAP12 PUSH2 0x411 SWAP12 PUSH2 0x3FB SWAP2 LT ISZERO PUSH2 0x9FE JUMP JUMPDEST DIV DUP3 PUSH2 0xAF2 JUMP JUMPDEST PUSH2 0x40B DUP12 PUSH2 0x6F1 JUMP JUMPDEST SWAP1 PUSH2 0x812 JUMP JUMPDEST PUSH2 0xA3D JUMP JUMPDEST SWAP1 PUSH2 0xAF2 JUMP JUMPDEST SWAP5 PUSH2 0xAA0 JUMP JUMPDEST PUSH1 0x11 SWAP1 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x441 SWAP2 SWAP3 POP DUP5 PUSH2 0x61E JUMP JUMPDEST EQ DUP5 DUP12 PUSH2 0x3AF JUMP JUMPDEST PUSH1 0x11 DUP5 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP3 CALLVALUE PUSH2 0x18A JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x18A JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH3 0xF4240 DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x18A JUMPI PUSH1 0x20 SWAP1 PUSH2 0x183 PUSH2 0x261 PUSH2 0x4BF PUSH2 0x4B5 PUSH2 0x411 PUSH2 0x25B PUSH2 0x168 PUSH2 0x255 PUSH2 0x17E PUSH2 0x4A6 CALLDATASIZE PUSH2 0x65E JUMP JUMPDEST SWAP9 SWAP5 SWAP7 SWAP3 SWAP13 SWAP2 DUP14 SWAP12 SWAP2 SWAP5 PUSH2 0x760 JUMP JUMPDEST SWAP8 PUSH2 0x411 DUP10 PUSH2 0xAA0 JUMP JUMPDEST PUSH2 0xAF2 JUMP JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x18A JUMPI PUSH2 0x4F5 PUSH2 0x261 PUSH2 0x416 PUSH2 0x4B5 PUSH2 0x411 PUSH2 0x4EF PUSH2 0x168 PUSH2 0x162 PUSH2 0x17E PUSH2 0x4A6 CALLDATASIZE PUSH2 0x65E JUMP JUMPDEST DUP3 PUSH2 0xAF2 JUMP JUMPDEST SWAP2 PUSH8 0xDE0B6B3A7640000 SWAP1 DUP2 DUP5 MUL SWAP4 DUP1 ISZERO SWAP1 DUP1 DUP7 DIV DUP5 EQ DUP3 OR ISZERO PUSH2 0x564 JUMPI SWAP1 DUP4 PUSH2 0x527 SWAP3 DUP3 ISZERO PUSH2 0x550 JUMPI JUMPDEST POP POP PUSH2 0x6B2 JUMP JUMPDEST PUSH8 0x6F05B59D3B20000 DUP5 ADD SWAP3 DUP4 DUP6 GT PUSH2 0x422 JUMPI POP PUSH2 0x549 PUSH1 0x20 SWAP5 DUP5 LT ISZERO PUSH2 0x6B2 JUMP JUMPDEST MLOAD SWAP2 DIV DUP2 MSTORE RETURN JUMPDEST PUSH2 0x55C SWAP2 SWAP3 POP DUP8 PUSH2 0x61E JUMP JUMPDEST EQ DUP4 PUSH0 PUSH2 0x520 JUMP JUMPDEST PUSH1 0x11 DUP6 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP3 CALLVALUE PUSH2 0x18A JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x18A JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH5 0xE8D4A51000 DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x18A JUMPI PUSH1 0x20 SWAP1 PUSH2 0x183 PUSH2 0x5D6 PUSH2 0x162 PUSH2 0x261 PUSH2 0x411 PUSH2 0x411 PUSH2 0x41C PUSH2 0x402 PUSH2 0x4BF PUSH2 0x17E PUSH2 0x5C6 CALLDATASIZE PUSH2 0x65E JUMP JUMPDEST SWAP11 SWAP5 SWAP8 SWAP4 SWAP2 DUP9 SWAP7 SWAP3 SWAP15 SWAP2 SWAP15 PUSH2 0x760 JUMP JUMPDEST SWAP13 DUP3 PUSH2 0x7C5 JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x18A JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x18A JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH4 0x5F5E100 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x18A JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x18A JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH9 0x2B5E3AF16B1880000 DUP2 MSTORE RETURN JUMPDEST DUP2 ISZERO PUSH2 0x628 JUMPI DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0x18A JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x18A JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH8 0xDE0B6B3A7640000 DUP2 MSTORE RETURN JUMPDEST PUSH1 0xC0 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0x18A JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x44 CALLDATALOAD SWAP1 PUSH1 0x64 CALLDATALOAD SWAP1 PUSH1 0x84 CALLDATALOAD SWAP1 PUSH1 0xA4 CALLDATALOAD SWAP1 JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x691 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x691 JUMPI JUMP JUMPDEST ISZERO PUSH2 0x6B9 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x11549497D1125597D253951154939053 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP1 ISZERO PUSH2 0x72C JUMPI PUSH15 0xC097CE7BC90715B34B9F1000000000 SWAP1 DUP1 PUSH1 0x1 SHR DUP3 ADD DUP1 DUP4 GT PUSH2 0x691 JUMPI PUSH2 0x724 PUSH2 0x729 SWAP4 DUP3 LT ISZERO PUSH2 0x6B2 JUMP JUMPDEST PUSH2 0x61E JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x4552525F4449565F5A45524F PUSH1 0xA0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 DUP1 ISZERO PUSH2 0x72C JUMPI PUSH8 0xDE0B6B3A7640000 SWAP2 DUP3 DUP2 MUL SWAP1 DUP1 ISZERO DUP2 DUP4 DIV DUP6 EQ DUP2 OR ISZERO PUSH2 0x691 JUMPI PUSH2 0x729 SWAP5 PUSH2 0x798 SWAP3 DUP3 ISZERO PUSH2 0x7B1 JUMPI POP POP PUSH2 0x6B2 JUMP JUMPDEST PUSH2 0x724 PUSH2 0x7A8 DUP4 PUSH1 0x1 SHR DUP4 PUSH2 0x684 JUMP JUMPDEST SWAP2 DUP3 LT ISZERO PUSH2 0x6B2 JUMP JUMPDEST PUSH2 0x7BD SWAP2 SWAP3 POP DUP5 PUSH2 0x61E JUMP JUMPDEST EQ PUSH0 DUP1 PUSH2 0x520 JUMP JUMPDEST SWAP1 PUSH2 0x7D0 SWAP1 DUP3 PUSH2 0x684 JUMP JUMPDEST SWAP1 DUP2 LT PUSH2 0x7DA JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x4552525F4144445F4F564552464C4F57 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 PUSH1 0x1 SWAP3 DUP4 DUP2 LT PUSH2 0x9C1 JUMPI PUSH8 0x1BC16D674EC7FFFF DUP2 GT PUSH2 0x983 JUMPI PUSH8 0xDE0B6B3A7640000 SWAP2 DUP3 DUP2 DIV SWAP1 DUP4 DUP3 MUL SWAP2 DUP1 DUP4 DIV DUP6 EQ SWAP1 ISZERO OR ISZERO PUSH2 0x691 JUMPI PUSH2 0x857 DUP3 DUP6 SWAP3 PUSH2 0xAF2 JUMP JUMPDEST SWAP2 DIV SWAP2 DUP1 DUP7 DUP5 AND ISZERO PUSH2 0x97D JUMPI DUP2 JUMPDEST SWAP4 DUP8 SHR SWAP1 DUP2 JUMPDEST PUSH2 0x950 JUMPI POP POP DUP2 ISZERO PUSH2 0x948 JUMPI PUSH2 0x883 SWAP1 SWAP4 SWAP2 SWAP4 PUSH2 0xAFC JUMP JUMPDEST DUP3 SWAP5 SWAP2 DUP4 SWAP2 PUSH0 SWAP3 DUP10 SWAP6 JUMPDEST PUSH4 0x5F5E100 DUP3 LT ISZERO PUSH2 0x8AC JUMPI JUMPDEST POP POP POP POP POP POP POP PUSH2 0x729 SWAP3 SWAP4 POP PUSH2 0xA3D JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP8 DUP2 DUP10 MUL SWAP3 DUP10 DUP5 DIV DUP4 EQ DUP11 ISZERO OR ISZERO PUSH2 0x691 JUMPI DUP4 PUSH2 0x17E PUSH2 0x8E9 SWAP3 PUSH2 0x255 PUSH2 0x8E2 PUSH2 0x8DC DUP12 SWAP10 PUSH2 0xAE9 JUMP JUMPDEST DUP14 PUSH2 0xB6E JUMP JUMPDEST SWAP9 SWAP1 PUSH2 0xA3D JUMP JUMPDEST SWAP3 DUP4 ISZERO PUSH2 0x941 JUMPI DUP5 PUSH2 0x939 JUMPI JUMPDEST PUSH2 0x931 JUMPI JUMPDEST DUP3 DUP7 ISZERO PUSH2 0x922 JUMPI PUSH2 0x90B SWAP2 PUSH2 0xAF2 JUMP JUMPDEST SWAP8 JUMPDEST PUSH0 NOT DUP2 EQ PUSH2 0x691 JUMPI DUP11 ADD SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x88D JUMP JUMPDEST PUSH2 0x92B SWAP2 PUSH2 0x7C5 JUMP JUMPDEST SWAP8 PUSH2 0x90D JUMP JUMPDEST SWAP5 ISZERO SWAP5 PUSH2 0x8FB JUMP JUMPDEST SWAP6 ISZERO SWAP6 PUSH2 0x8F6 JUMP JUMPDEST POP SWAP8 PUSH2 0x89A JUMP JUMPDEST POP SWAP1 SWAP4 POP POP POP JUMP JUMPDEST DUP1 PUSH2 0x95A SWAP2 PUSH2 0xA3D JUMP JUMPDEST SWAP1 DUP8 DUP2 AND PUSH2 0x96C JUMPI JUMPDEST DUP8 SHR SWAP1 DUP2 PUSH2 0x86B JUMP JUMPDEST SWAP4 DUP2 PUSH2 0x977 SWAP2 PUSH2 0xA3D JUMP JUMPDEST SWAP4 PUSH2 0x963 JUMP JUMPDEST DUP5 PUSH2 0x865 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x8AA4A4BE84A09EAEBE8482A68ABEA89E9EBE90928E9 PUSH1 0x53 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x4552525F42504F575F424153455F544F4F5F4C4F57 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0xA05 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x4552525F4D554C5F4F564552464C4F57 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP2 DUP2 MUL SWAP2 DUP2 ISZERO SWAP1 DUP3 DUP5 DIV DUP2 EQ DUP3 OR ISZERO PUSH2 0x691 JUMPI PUSH2 0xA61 SWAP3 DUP3 ISZERO PUSH2 0xA8C JUMPI POP POP PUSH2 0x9FE JUMP JUMPDEST PUSH8 0x6F05B59D3B20000 DUP2 ADD DUP1 DUP3 GT PUSH2 0x691 JUMPI PUSH2 0xA88 PUSH8 0xDE0B6B3A7640000 SWAP3 DUP3 LT ISZERO PUSH2 0x9FE JUMP JUMPDEST DIV SWAP1 JUMP JUMPDEST PUSH2 0xA98 SWAP2 SWAP3 POP DUP5 PUSH2 0x61E JUMP JUMPDEST EQ PUSH0 DUP1 PUSH2 0x3AF JUMP JUMPDEST PUSH2 0xAA9 SWAP1 PUSH2 0xB35 JUMP JUMPDEST PUSH2 0xAB0 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x4552525F5355425F554E444552464C4F57 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0xAA9 SWAP1 PUSH2 0xAFC JUMP JUMPDEST SWAP1 PUSH2 0xAA9 SWAP2 PUSH2 0xB6E JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP1 DUP3 LT PUSH2 0xB25 JUMPI POP PUSH8 0xDE0B6B3A763FFFF NOT DUP2 ADD SWAP1 DUP2 GT PUSH2 0x691 JUMPI SWAP1 PUSH0 SWAP1 JUMP JUMPDEST SWAP1 DUP2 SUB SWAP1 DUP2 GT PUSH2 0x691 JUMPI SWAP1 PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 SWAP1 DUP1 DUP3 LT PUSH2 0xB54 JUMPI DUP2 SUB SWAP1 DUP2 GT PUSH2 0x691 JUMPI SWAP1 PUSH0 SWAP1 JUMP JUMPDEST PUSH8 0xDE0B6B3A763FFFF NOT DUP2 ADD SWAP2 POP DUP2 GT PUSH2 0x691 JUMPI SWAP1 PUSH1 0x1 SWAP1 JUMP JUMPDEST DUP2 DUP2 LT PUSH2 0xB84 JUMPI SWAP1 PUSH2 0xB7F SWAP2 PUSH2 0x6A5 JUMP JUMPDEST SWAP1 PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0xB8D SWAP2 PUSH2 0x6A5 JUMP JUMPDEST SWAP1 PUSH1 0x1 SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHL CREATE 0xC5 GT SGT 0xE6 GASLIMIT 0xE3 0xEF DELEGATECALL LOG3 0xD1 GT CREATE2 0x2B INVALID LOG0 0xAF DIV 0xCC PUSH14 0x2B51D668A82644BF68AAB764736F PUSH13 0x63430008190033000000000000 ","sourceMap":"707:14045:19:-:0;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"abi_decode_uint256t_uint256t_uint256t_uint256t_uint256t_uint256":{"entryPoint":1630,"id":null,"parameterSlots":1,"returnSlots":6},"checked_add_uint256":{"entryPoint":1668,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_uint256":{"entryPoint":1566,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_uint256":{"entryPoint":1701,"id":null,"parameterSlots":2,"returnSlots":1},"external_fun_MAX_TOTAL_WEIGHT":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_MIN_WEIGHT":{"entryPoint":1596,"id":null,"parameterSlots":0,"returnSlots":0},"fun_badd":{"entryPoint":1989,"id":5656,"parameterSlots":2,"returnSlots":1},"fun_bdiv":{"entryPoint":1888,"id":5826,"parameterSlots":2,"returnSlots":1},"fun_bdiv_4889":{"entryPoint":1777,"id":5826,"parameterSlots":1,"returnSlots":1},"fun_bmul":{"entryPoint":2621,"id":5766,"parameterSlots":2,"returnSlots":1},"fun_bpow":{"entryPoint":2066,"id":5949,"parameterSlots":2,"returnSlots":1},"fun_bsub":{"entryPoint":2802,"id":5683,"parameterSlots":2,"returnSlots":1},"fun_bsubSign":{"entryPoint":2926,"id":5713,"parameterSlots":2,"returnSlots":2},"fun_bsubSign_11641":{"entryPoint":2869,"id":5713,"parameterSlots":1,"returnSlots":2},"fun_bsubSign_4956":{"entryPoint":2812,"id":5713,"parameterSlots":1,"returnSlots":2},"fun_bsub_4890":{"entryPoint":2720,"id":5683,"parameterSlots":1,"returnSlots":1},"fun_bsub_4910":{"entryPoint":2793,"id":5683,"parameterSlots":1,"returnSlots":1},"require_helper_stringliteral_7bb2":{"entryPoint":1714,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_aa15":{"entryPoint":2558,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"604060808152600480361015610013575f80fd5b5f3560e01c90816309a3bbe4146105fb578163189d00ca146105dd578163218b5382146101cf5781635c1bbaf71461059657816376c7a3c71461057757816382f652ad146104c45781638656b65314610479578163867378c51461045c57816389298012146103685781639381cd2b14610345578163992e2a92146103235781639a86139b14610300578163a221ee49146102b757508063b0e0d1361461029c578063b7b800a414610281578063ba019dab14610266578063ba9530a614610218578063bc063e1a146101f6578063bc694ea2146101d4578063c36596a6146101cf578063c6580d12146101b5578063e4a28a52146101b0578063ec0930211461018e5763f8d6aed414610125575f80fd5b3461018a5760209061018361016261017e61016861017861017261016d61015b61014e3661065e565b99949b9293909591610760565b9382610af2565b90610760565b610812565b610ae9565b91610aa0565b92610a3d565b610760565b9051908152f35b5f80fd5b503461018a575f36600319011261018a57602090516706f05b59d3b200008152f35b6105fb565b503461018a575f36600319011261018a57602090515f8152f35b61063c565b503461018a575f36600319011261018a5760209051671bc16d674ec7ffff8152f35b503461018a575f36600319011261018a576020905167016345785d8a00008152f35b503461018a5760209061018361024f61025561026161025b6101686102556101626102423661065e565b989496929b919093610760565b96610aa0565b90610a3d565b826107c5565b610aa0565b503461018a575f36600319011261018a576020905160018152f35b503461018a575f36600319011261018a576020905160028152f35b503461018a575f36600319011261018a576020905160088152f35b823461018a5760a036600319011261018a576101836102ed6102df6020946024359035610760565b610162606435604435610760565b6102556102fb608435610aa0565b6106f1565b823461018a575f36600319011261018a57516542524f4e5a4560d01b8152602090f35b823461018a575f36600319011261018a57602090516704a03ce68d2155568152f35b823461018a575f36600319011261018a576020905168056bc75e2d631000008152f35b823461018a5761038461037a3661065e565b9591909293610760565b95670de0b6b3a7640000918281029080159080830485148217156104495790846103b6928215610435575b50506109fe565b6706f05b59d3b20000810191828211610422575061041c8561041660209a976104116104026102559961017e6102619a8a6101839f9b6104119b6103fb9110156109fe565b0482610af2565b61040b8b6106f1565b90610812565b610a3d565b90610af2565b94610aa0565b601190634e487b7160e01b5f525260245ffd5b6104419192508461061e565b14848b6103af565b601184634e487b7160e01b5f525260245ffd5b823461018a575f36600319011261018a5760209051620f42408152f35b823461018a576020906101836102616104bf6104b561041161025b61016861025561017e6104a63661065e565b989496929c918d9b9194610760565b9761041189610aa0565b610af2565b90503461018a576104f56102616104166104b56104116104ef61016861016261017e6104a63661065e565b82610af2565b91670de0b6b3a764000090818402938015908086048414821715610564579083610527928215610550575b50506106b2565b6706f05b59d3b2000084019283851161042257506105496020948410156106b2565b5191048152f35b61055c9192508761061e565b14835f610520565b601185634e487b7160e01b5f525260245ffd5b823461018a575f36600319011261018a576020905164e8d4a510008152f35b823461018a576020906101836105d661016261026161041161041161041c6104026104bf61017e6105c63661065e565b9a949793918896929e919e610760565b9c826107c5565b823461018a575f36600319011261018a57602090516305f5e1008152f35b3461018a575f36600319011261018a5760206040516802b5e3af16b18800008152f35b8115610628570490565b634e487b7160e01b5f52601260045260245ffd5b3461018a575f36600319011261018a576020604051670de0b6b3a76400008152f35b60c090600319011261018a57600435906024359060443590606435906084359060a43590565b9190820180921161069157565b634e487b7160e01b5f52601160045260245ffd5b9190820391821161069157565b156106b957565b60405162461bcd60e51b815260206004820152601060248201526f11549497d1125597d25395115493905360821b6044820152606490fd5b801561072c576ec097ce7bc90715b34b9f1000000000908060011c820180831161069157610724610729938210156106b2565b61061e565b90565b60405162461bcd60e51b815260206004820152600c60248201526b4552525f4449565f5a45524f60a01b6044820152606490fd5b90801561072c57670de0b6b3a764000091828102908015818304851481171561069157610729946107989282156107b15750506106b2565b6107246107a88360011c83610684565b918210156106b2565b6107bd9192508461061e565b145f80610520565b906107d09082610684565b9081106107da5790565b60405162461bcd60e51b815260206004820152601060248201526f4552525f4144445f4f564552464c4f5760801b6044820152606490fd5b91906001928381106109c157671bc16d674ec7ffff811161098357670de0b6b3a764000091828104908382029180830485149015171561069157610857828592610af2565b910491808684161561097d57815b93871c90815b61095057505081156109485761088390939193610afc565b82949183915f9289955b6305f5e1008210156108ac575b50505050505050610729929350610a3d565b909192939495978189029289840483148a151715610691578361017e6108e9926102556108e26108dc8b99610ae9565b8d610b6e565b9890610a3d565b9283156109415784610939575b610931575b8286156109225761090b91610af2565b975b5f198114610691578a0195949392919061088d565b61092b916107c5565b9761090d565b9415946108fb565b9515956108f6565b509761089a565b509093505050565b8061095a91610a3d565b9087811661096c575b871c908161086b565b938161097791610a3d565b93610963565b84610865565b60405162461bcd60e51b815260206004820152601660248201527508aa4a4be84a09eaebe8482a68abea89e9ebe90928e960531b6044820152606490fd5b60405162461bcd60e51b81526020600482015260156024820152744552525f42504f575f424153455f544f4f5f4c4f5760581b6044820152606490fd5b15610a0557565b60405162461bcd60e51b815260206004820152601060248201526f4552525f4d554c5f4f564552464c4f5760801b6044820152606490fd5b81810291811590828404811482171561069157610a61928215610a8c5750506109fe565b6706f05b59d3b20000810180821161069157610a88670de0b6b3a7640000928210156109fe565b0490565b610a989192508461061e565b145f806103af565b610aa990610b35565b610ab05790565b60405162461bcd60e51b81526020600482015260116024820152704552525f5355425f554e444552464c4f5760781b6044820152606490fd5b610aa990610afc565b90610aa991610b6e565b670de0b6b3a7640000808210610b255750670de0b6b3a763ffff19810190811161069157905f90565b9081039081116106915790600190565b670de0b6b3a764000090808210610b5457810390811161069157905f90565b670de0b6b3a763ffff198101915081116106915790600190565b818110610b845790610b7f916106a5565b905f90565b610b8d916106a5565b9060019056fea26469706673582212201bf0c51113e645e3eff4a3d111f52bfea0af04cc6d2b51d668a82644bf68aab764736f6c63430008190033","opcodes":"PUSH1 0x40 PUSH1 0x80 DUP2 MSTORE PUSH1 0x4 DUP1 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x9A3BBE4 EQ PUSH2 0x5FB JUMPI DUP2 PUSH4 0x189D00CA EQ PUSH2 0x5DD JUMPI DUP2 PUSH4 0x218B5382 EQ PUSH2 0x1CF JUMPI DUP2 PUSH4 0x5C1BBAF7 EQ PUSH2 0x596 JUMPI DUP2 PUSH4 0x76C7A3C7 EQ PUSH2 0x577 JUMPI DUP2 PUSH4 0x82F652AD EQ PUSH2 0x4C4 JUMPI DUP2 PUSH4 0x8656B653 EQ PUSH2 0x479 JUMPI DUP2 PUSH4 0x867378C5 EQ PUSH2 0x45C JUMPI DUP2 PUSH4 0x89298012 EQ PUSH2 0x368 JUMPI DUP2 PUSH4 0x9381CD2B EQ PUSH2 0x345 JUMPI DUP2 PUSH4 0x992E2A92 EQ PUSH2 0x323 JUMPI DUP2 PUSH4 0x9A86139B EQ PUSH2 0x300 JUMPI DUP2 PUSH4 0xA221EE49 EQ PUSH2 0x2B7 JUMPI POP DUP1 PUSH4 0xB0E0D136 EQ PUSH2 0x29C JUMPI DUP1 PUSH4 0xB7B800A4 EQ PUSH2 0x281 JUMPI DUP1 PUSH4 0xBA019DAB EQ PUSH2 0x266 JUMPI DUP1 PUSH4 0xBA9530A6 EQ PUSH2 0x218 JUMPI DUP1 PUSH4 0xBC063E1A EQ PUSH2 0x1F6 JUMPI DUP1 PUSH4 0xBC694EA2 EQ PUSH2 0x1D4 JUMPI DUP1 PUSH4 0xC36596A6 EQ PUSH2 0x1CF JUMPI DUP1 PUSH4 0xC6580D12 EQ PUSH2 0x1B5 JUMPI DUP1 PUSH4 0xE4A28A52 EQ PUSH2 0x1B0 JUMPI DUP1 PUSH4 0xEC093021 EQ PUSH2 0x18E JUMPI PUSH4 0xF8D6AED4 EQ PUSH2 0x125 JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x18A JUMPI PUSH1 0x20 SWAP1 PUSH2 0x183 PUSH2 0x162 PUSH2 0x17E PUSH2 0x168 PUSH2 0x178 PUSH2 0x172 PUSH2 0x16D PUSH2 0x15B PUSH2 0x14E CALLDATASIZE PUSH2 0x65E JUMP JUMPDEST SWAP10 SWAP5 SWAP12 SWAP3 SWAP4 SWAP1 SWAP6 SWAP2 PUSH2 0x760 JUMP JUMPDEST SWAP4 DUP3 PUSH2 0xAF2 JUMP JUMPDEST SWAP1 PUSH2 0x760 JUMP JUMPDEST PUSH2 0x812 JUMP JUMPDEST PUSH2 0xAE9 JUMP JUMPDEST SWAP2 PUSH2 0xAA0 JUMP JUMPDEST SWAP3 PUSH2 0xA3D JUMP JUMPDEST PUSH2 0x760 JUMP JUMPDEST SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH0 DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x18A JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x18A JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH8 0x6F05B59D3B20000 DUP2 MSTORE RETURN JUMPDEST PUSH2 0x5FB JUMP JUMPDEST POP CALLVALUE PUSH2 0x18A JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x18A JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH0 DUP2 MSTORE RETURN JUMPDEST PUSH2 0x63C JUMP JUMPDEST POP CALLVALUE PUSH2 0x18A JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x18A JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH8 0x1BC16D674EC7FFFF DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x18A JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x18A JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH8 0x16345785D8A0000 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x18A JUMPI PUSH1 0x20 SWAP1 PUSH2 0x183 PUSH2 0x24F PUSH2 0x255 PUSH2 0x261 PUSH2 0x25B PUSH2 0x168 PUSH2 0x255 PUSH2 0x162 PUSH2 0x242 CALLDATASIZE PUSH2 0x65E JUMP JUMPDEST SWAP9 SWAP5 SWAP7 SWAP3 SWAP12 SWAP2 SWAP1 SWAP4 PUSH2 0x760 JUMP JUMPDEST SWAP7 PUSH2 0xAA0 JUMP JUMPDEST SWAP1 PUSH2 0xA3D JUMP JUMPDEST DUP3 PUSH2 0x7C5 JUMP JUMPDEST PUSH2 0xAA0 JUMP JUMPDEST POP CALLVALUE PUSH2 0x18A JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x18A JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x18A JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x18A JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH1 0x2 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x18A JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x18A JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH1 0x8 DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x18A JUMPI PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x18A JUMPI PUSH2 0x183 PUSH2 0x2ED PUSH2 0x2DF PUSH1 0x20 SWAP5 PUSH1 0x24 CALLDATALOAD SWAP1 CALLDATALOAD PUSH2 0x760 JUMP JUMPDEST PUSH2 0x162 PUSH1 0x64 CALLDATALOAD PUSH1 0x44 CALLDATALOAD PUSH2 0x760 JUMP JUMPDEST PUSH2 0x255 PUSH2 0x2FB PUSH1 0x84 CALLDATALOAD PUSH2 0xAA0 JUMP JUMPDEST PUSH2 0x6F1 JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x18A JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x18A JUMPI MLOAD PUSH6 0x42524F4E5A45 PUSH1 0xD0 SHL DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x18A JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x18A JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH8 0x4A03CE68D215556 DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x18A JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x18A JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH9 0x56BC75E2D63100000 DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x18A JUMPI PUSH2 0x384 PUSH2 0x37A CALLDATASIZE PUSH2 0x65E JUMP JUMPDEST SWAP6 SWAP2 SWAP1 SWAP3 SWAP4 PUSH2 0x760 JUMP JUMPDEST SWAP6 PUSH8 0xDE0B6B3A7640000 SWAP2 DUP3 DUP2 MUL SWAP1 DUP1 ISZERO SWAP1 DUP1 DUP4 DIV DUP6 EQ DUP3 OR ISZERO PUSH2 0x449 JUMPI SWAP1 DUP5 PUSH2 0x3B6 SWAP3 DUP3 ISZERO PUSH2 0x435 JUMPI JUMPDEST POP POP PUSH2 0x9FE JUMP JUMPDEST PUSH8 0x6F05B59D3B20000 DUP2 ADD SWAP2 DUP3 DUP3 GT PUSH2 0x422 JUMPI POP PUSH2 0x41C DUP6 PUSH2 0x416 PUSH1 0x20 SWAP11 SWAP8 PUSH2 0x411 PUSH2 0x402 PUSH2 0x255 SWAP10 PUSH2 0x17E PUSH2 0x261 SWAP11 DUP11 PUSH2 0x183 SWAP16 SWAP12 PUSH2 0x411 SWAP12 PUSH2 0x3FB SWAP2 LT ISZERO PUSH2 0x9FE JUMP JUMPDEST DIV DUP3 PUSH2 0xAF2 JUMP JUMPDEST PUSH2 0x40B DUP12 PUSH2 0x6F1 JUMP JUMPDEST SWAP1 PUSH2 0x812 JUMP JUMPDEST PUSH2 0xA3D JUMP JUMPDEST SWAP1 PUSH2 0xAF2 JUMP JUMPDEST SWAP5 PUSH2 0xAA0 JUMP JUMPDEST PUSH1 0x11 SWAP1 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x441 SWAP2 SWAP3 POP DUP5 PUSH2 0x61E JUMP JUMPDEST EQ DUP5 DUP12 PUSH2 0x3AF JUMP JUMPDEST PUSH1 0x11 DUP5 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP3 CALLVALUE PUSH2 0x18A JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x18A JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH3 0xF4240 DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x18A JUMPI PUSH1 0x20 SWAP1 PUSH2 0x183 PUSH2 0x261 PUSH2 0x4BF PUSH2 0x4B5 PUSH2 0x411 PUSH2 0x25B PUSH2 0x168 PUSH2 0x255 PUSH2 0x17E PUSH2 0x4A6 CALLDATASIZE PUSH2 0x65E JUMP JUMPDEST SWAP9 SWAP5 SWAP7 SWAP3 SWAP13 SWAP2 DUP14 SWAP12 SWAP2 SWAP5 PUSH2 0x760 JUMP JUMPDEST SWAP8 PUSH2 0x411 DUP10 PUSH2 0xAA0 JUMP JUMPDEST PUSH2 0xAF2 JUMP JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x18A JUMPI PUSH2 0x4F5 PUSH2 0x261 PUSH2 0x416 PUSH2 0x4B5 PUSH2 0x411 PUSH2 0x4EF PUSH2 0x168 PUSH2 0x162 PUSH2 0x17E PUSH2 0x4A6 CALLDATASIZE PUSH2 0x65E JUMP JUMPDEST DUP3 PUSH2 0xAF2 JUMP JUMPDEST SWAP2 PUSH8 0xDE0B6B3A7640000 SWAP1 DUP2 DUP5 MUL SWAP4 DUP1 ISZERO SWAP1 DUP1 DUP7 DIV DUP5 EQ DUP3 OR ISZERO PUSH2 0x564 JUMPI SWAP1 DUP4 PUSH2 0x527 SWAP3 DUP3 ISZERO PUSH2 0x550 JUMPI JUMPDEST POP POP PUSH2 0x6B2 JUMP JUMPDEST PUSH8 0x6F05B59D3B20000 DUP5 ADD SWAP3 DUP4 DUP6 GT PUSH2 0x422 JUMPI POP PUSH2 0x549 PUSH1 0x20 SWAP5 DUP5 LT ISZERO PUSH2 0x6B2 JUMP JUMPDEST MLOAD SWAP2 DIV DUP2 MSTORE RETURN JUMPDEST PUSH2 0x55C SWAP2 SWAP3 POP DUP8 PUSH2 0x61E JUMP JUMPDEST EQ DUP4 PUSH0 PUSH2 0x520 JUMP JUMPDEST PUSH1 0x11 DUP6 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP3 CALLVALUE PUSH2 0x18A JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x18A JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH5 0xE8D4A51000 DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x18A JUMPI PUSH1 0x20 SWAP1 PUSH2 0x183 PUSH2 0x5D6 PUSH2 0x162 PUSH2 0x261 PUSH2 0x411 PUSH2 0x411 PUSH2 0x41C PUSH2 0x402 PUSH2 0x4BF PUSH2 0x17E PUSH2 0x5C6 CALLDATASIZE PUSH2 0x65E JUMP JUMPDEST SWAP11 SWAP5 SWAP8 SWAP4 SWAP2 DUP9 SWAP7 SWAP3 SWAP15 SWAP2 SWAP15 PUSH2 0x760 JUMP JUMPDEST SWAP13 DUP3 PUSH2 0x7C5 JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x18A JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x18A JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH4 0x5F5E100 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x18A JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x18A JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH9 0x2B5E3AF16B1880000 DUP2 MSTORE RETURN JUMPDEST DUP2 ISZERO PUSH2 0x628 JUMPI DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0x18A JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x18A JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH8 0xDE0B6B3A7640000 DUP2 MSTORE RETURN JUMPDEST PUSH1 0xC0 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0x18A JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x44 CALLDATALOAD SWAP1 PUSH1 0x64 CALLDATALOAD SWAP1 PUSH1 0x84 CALLDATALOAD SWAP1 PUSH1 0xA4 CALLDATALOAD SWAP1 JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x691 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x691 JUMPI JUMP JUMPDEST ISZERO PUSH2 0x6B9 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x11549497D1125597D253951154939053 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP1 ISZERO PUSH2 0x72C JUMPI PUSH15 0xC097CE7BC90715B34B9F1000000000 SWAP1 DUP1 PUSH1 0x1 SHR DUP3 ADD DUP1 DUP4 GT PUSH2 0x691 JUMPI PUSH2 0x724 PUSH2 0x729 SWAP4 DUP3 LT ISZERO PUSH2 0x6B2 JUMP JUMPDEST PUSH2 0x61E JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x4552525F4449565F5A45524F PUSH1 0xA0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 DUP1 ISZERO PUSH2 0x72C JUMPI PUSH8 0xDE0B6B3A7640000 SWAP2 DUP3 DUP2 MUL SWAP1 DUP1 ISZERO DUP2 DUP4 DIV DUP6 EQ DUP2 OR ISZERO PUSH2 0x691 JUMPI PUSH2 0x729 SWAP5 PUSH2 0x798 SWAP3 DUP3 ISZERO PUSH2 0x7B1 JUMPI POP POP PUSH2 0x6B2 JUMP JUMPDEST PUSH2 0x724 PUSH2 0x7A8 DUP4 PUSH1 0x1 SHR DUP4 PUSH2 0x684 JUMP JUMPDEST SWAP2 DUP3 LT ISZERO PUSH2 0x6B2 JUMP JUMPDEST PUSH2 0x7BD SWAP2 SWAP3 POP DUP5 PUSH2 0x61E JUMP JUMPDEST EQ PUSH0 DUP1 PUSH2 0x520 JUMP JUMPDEST SWAP1 PUSH2 0x7D0 SWAP1 DUP3 PUSH2 0x684 JUMP JUMPDEST SWAP1 DUP2 LT PUSH2 0x7DA JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x4552525F4144445F4F564552464C4F57 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 PUSH1 0x1 SWAP3 DUP4 DUP2 LT PUSH2 0x9C1 JUMPI PUSH8 0x1BC16D674EC7FFFF DUP2 GT PUSH2 0x983 JUMPI PUSH8 0xDE0B6B3A7640000 SWAP2 DUP3 DUP2 DIV SWAP1 DUP4 DUP3 MUL SWAP2 DUP1 DUP4 DIV DUP6 EQ SWAP1 ISZERO OR ISZERO PUSH2 0x691 JUMPI PUSH2 0x857 DUP3 DUP6 SWAP3 PUSH2 0xAF2 JUMP JUMPDEST SWAP2 DIV SWAP2 DUP1 DUP7 DUP5 AND ISZERO PUSH2 0x97D JUMPI DUP2 JUMPDEST SWAP4 DUP8 SHR SWAP1 DUP2 JUMPDEST PUSH2 0x950 JUMPI POP POP DUP2 ISZERO PUSH2 0x948 JUMPI PUSH2 0x883 SWAP1 SWAP4 SWAP2 SWAP4 PUSH2 0xAFC JUMP JUMPDEST DUP3 SWAP5 SWAP2 DUP4 SWAP2 PUSH0 SWAP3 DUP10 SWAP6 JUMPDEST PUSH4 0x5F5E100 DUP3 LT ISZERO PUSH2 0x8AC JUMPI JUMPDEST POP POP POP POP POP POP POP PUSH2 0x729 SWAP3 SWAP4 POP PUSH2 0xA3D JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP8 DUP2 DUP10 MUL SWAP3 DUP10 DUP5 DIV DUP4 EQ DUP11 ISZERO OR ISZERO PUSH2 0x691 JUMPI DUP4 PUSH2 0x17E PUSH2 0x8E9 SWAP3 PUSH2 0x255 PUSH2 0x8E2 PUSH2 0x8DC DUP12 SWAP10 PUSH2 0xAE9 JUMP JUMPDEST DUP14 PUSH2 0xB6E JUMP JUMPDEST SWAP9 SWAP1 PUSH2 0xA3D JUMP JUMPDEST SWAP3 DUP4 ISZERO PUSH2 0x941 JUMPI DUP5 PUSH2 0x939 JUMPI JUMPDEST PUSH2 0x931 JUMPI JUMPDEST DUP3 DUP7 ISZERO PUSH2 0x922 JUMPI PUSH2 0x90B SWAP2 PUSH2 0xAF2 JUMP JUMPDEST SWAP8 JUMPDEST PUSH0 NOT DUP2 EQ PUSH2 0x691 JUMPI DUP11 ADD SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x88D JUMP JUMPDEST PUSH2 0x92B SWAP2 PUSH2 0x7C5 JUMP JUMPDEST SWAP8 PUSH2 0x90D JUMP JUMPDEST SWAP5 ISZERO SWAP5 PUSH2 0x8FB JUMP JUMPDEST SWAP6 ISZERO SWAP6 PUSH2 0x8F6 JUMP JUMPDEST POP SWAP8 PUSH2 0x89A JUMP JUMPDEST POP SWAP1 SWAP4 POP POP POP JUMP JUMPDEST DUP1 PUSH2 0x95A SWAP2 PUSH2 0xA3D JUMP JUMPDEST SWAP1 DUP8 DUP2 AND PUSH2 0x96C JUMPI JUMPDEST DUP8 SHR SWAP1 DUP2 PUSH2 0x86B JUMP JUMPDEST SWAP4 DUP2 PUSH2 0x977 SWAP2 PUSH2 0xA3D JUMP JUMPDEST SWAP4 PUSH2 0x963 JUMP JUMPDEST DUP5 PUSH2 0x865 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x8AA4A4BE84A09EAEBE8482A68ABEA89E9EBE90928E9 PUSH1 0x53 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x4552525F42504F575F424153455F544F4F5F4C4F57 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0xA05 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x4552525F4D554C5F4F564552464C4F57 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP2 DUP2 MUL SWAP2 DUP2 ISZERO SWAP1 DUP3 DUP5 DIV DUP2 EQ DUP3 OR ISZERO PUSH2 0x691 JUMPI PUSH2 0xA61 SWAP3 DUP3 ISZERO PUSH2 0xA8C JUMPI POP POP PUSH2 0x9FE JUMP JUMPDEST PUSH8 0x6F05B59D3B20000 DUP2 ADD DUP1 DUP3 GT PUSH2 0x691 JUMPI PUSH2 0xA88 PUSH8 0xDE0B6B3A7640000 SWAP3 DUP3 LT ISZERO PUSH2 0x9FE JUMP JUMPDEST DIV SWAP1 JUMP JUMPDEST PUSH2 0xA98 SWAP2 SWAP3 POP DUP5 PUSH2 0x61E JUMP JUMPDEST EQ PUSH0 DUP1 PUSH2 0x3AF JUMP JUMPDEST PUSH2 0xAA9 SWAP1 PUSH2 0xB35 JUMP JUMPDEST PUSH2 0xAB0 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x4552525F5355425F554E444552464C4F57 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0xAA9 SWAP1 PUSH2 0xAFC JUMP JUMPDEST SWAP1 PUSH2 0xAA9 SWAP2 PUSH2 0xB6E JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP1 DUP3 LT PUSH2 0xB25 JUMPI POP PUSH8 0xDE0B6B3A763FFFF NOT DUP2 ADD SWAP1 DUP2 GT PUSH2 0x691 JUMPI SWAP1 PUSH0 SWAP1 JUMP JUMPDEST SWAP1 DUP2 SUB SWAP1 DUP2 GT PUSH2 0x691 JUMPI SWAP1 PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 SWAP1 DUP1 DUP3 LT PUSH2 0xB54 JUMPI DUP2 SUB SWAP1 DUP2 GT PUSH2 0x691 JUMPI SWAP1 PUSH0 SWAP1 JUMP JUMPDEST PUSH8 0xDE0B6B3A763FFFF NOT DUP2 ADD SWAP2 POP DUP2 GT PUSH2 0x691 JUMPI SWAP1 PUSH1 0x1 SWAP1 JUMP JUMPDEST DUP2 DUP2 LT PUSH2 0xB84 JUMPI SWAP1 PUSH2 0xB7F SWAP2 PUSH2 0x6A5 JUMP JUMPDEST SWAP1 PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0xB8D SWAP2 PUSH2 0x6A5 JUMP JUMPDEST SWAP1 PUSH1 0x1 SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHL CREATE 0xC5 GT SGT 0xE6 GASLIMIT 0xE3 0xEF DELEGATECALL LOG3 0xD1 GT CREATE2 0x2B INVALID LOG0 0xAF DIV 0xCC PUSH14 0x2B51D668A82644BF68AAB764736F PUSH13 0x63430008190033000000000000 ","sourceMap":"707:14045:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5478:46;5247:37;5483:25;5304:27;5432:19;5390:15;5353:20;5189:35;707:14045;;;:::i;:::-;5189:35;;;;;;;;;:::i;:::-;5247:37;;;:::i;:::-;5304:27;;:::i;:::-;5353:20;:::i;:::-;5390:15;:::i;:::-;5432:19;;:::i;:::-;5483:25;;:::i;:::-;5478:46;:::i;:::-;707:14045;;;;;;;;;;;;;;;;;-1:-1:-1;;707:14045:19;;;;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;707:14045:19;;;;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;707:14045:19;;;;;;;;;;;;;;;;;;-1:-1:-1;;707:14045:19;;;;;;;;;;;;;;;;;;3807:26;3488:35;3764:15;3722:20;3595:31;3646:54;3552:19;3667:32;707:14045;;;:::i;:::-;3488:35;;;;;;;;;:::i;:::-;3552:19;;:::i;:::-;3595:31;;:::i;:::-;3667:32;;:::i;3722:20::-;3764:15;:::i;707:14045::-;;;;;;;-1:-1:-1;;707:14045:19;;;;;;;1333:5:18;707:14045:19;;;;;;;;;;-1:-1:-1;;707:14045:19;;;;;;;828:1:18;707:14045:19;;;;;;;;;;-1:-1:-1;;707:14045:19;;;;;;;876:1:18;707:14045:19;;;;;;;;;;-1:-1:-1;;707:14045:19;;;;2145:18;2040;1920:35;707:14045;;;;;;1920:35;:::i;:::-;1979:37;707:14045;;;;1979:37;:::i;2040:18::-;2082:31;2093:19;707:14045;;2093:19;:::i;:::-;2082:31;:::i;707:14045::-;;;;;;;-1:-1:-1;;707:14045:19;;;;;-1:-1:-1;;;707:14045:19;;;;;;;;;;;;-1:-1:-1;;707:14045:19;;;;;;;;;;;;;;;;;;-1:-1:-1;;707:14045:19;;;;;;;771:8:18;707:14045:19;;;;;;;;11384:33;707:14045;;;:::i;:::-;11384:33;;;;;;:::i;:::-;771:8:18;;;;;;;;;;;;;;;;;;;;1739:21:20;;1731:50;1739:21;;;;;707:14045:19;1731:50:20;;;:::i;:::-;707:14045:19;;;;;;;;;1836:8:20;11990:41:19;1836:8:20;11906:36:19;707:14045;1836:8:20;;11824:45:19;11699:31;12285:15;1836:8:20;11629:42:19;12179:43;1836:8:20;;12251:50:19;1836:8:20;;12184:28:19;1836:8:20;1828:37;1836:8;;;1828:37;:::i;:::-;707:14045:19;11629:42;;:::i;11699:31::-;11840:28;;;:::i;:::-;11824:45;;:::i;:::-;11906:36;:::i;:::-;11990:41;;:::i;:::-;12184:28;;:::i;707:14045::-;771:8:18;;;;;707:14045:19;771:8:18;;;707:14045:19;771:8:18;1739:21:20;1749:6;;;;;;:::i;:::-;:11;1739:21;;;;771:8:18;;;;;;707:14045:19;771:8:18;;;707:14045:19;771:8:18;707:14045:19;;;;;;;-1:-1:-1;;707:14045:19;;;;;;;;;;;;;;;;;;7678:31;7187:43;7624:27;7133:32;7556:36;7271;7419:39;7291:15;7345:43;707:14045;;;:::i;:::-;7133:32;;;;;;;;;;;:::i;:::-;7192:28;;;;:::i;7624:27::-;7678:31;:::i;707:14045::-;;;;;;14499:31;13999:18;14429:27;13822:33;14360:37;14064;14222:41;14085:15;14140:50;707:14045;;;:::i;14064:37::-;14140:50;;:::i;14499:31::-;771:8:18;;;;;;;;;;;;;;;;;;;;2103:24:20;;2095:53;2103:24;;;;;707:14045:19;2095:53:20;;;:::i;:::-;707:14045:19;;;;;;;;;2217:8:20;2209:37;707:14045:19;2217:8:20;;;;2209:37;:::i;:::-;707:14045:19;;;;;;2103:24:20;2113:6;;;;;;:::i;:::-;:14;2103:24;;;;771:8:18;;;;;;707:14045:19;771:8:18;;;707:14045:19;771:8:18;707:14045:19;;;;;;;-1:-1:-1;;707:14045:19;;;;;;;;;;;;;;;;;;9876:44;9070:32;9904:15;9806:43;9373:20;9811:28;9503:39;9193:31;9429:34;9134:31;707:14045;;;:::i;:::-;9070:32;;;;;;;;;;;;:::i;:::-;9134:31;;;:::i;707:14045::-;;;;;;;-1:-1:-1;;707:14045:19;;;;;;;;;;;;;;;;;-1:-1:-1;;707:14045:19;;;;;;;771:8:18;707:14045:19;;;;;;;;;;:::o;:::-;771:8:18;;;707:14045:19;;;;;;;;;;;;;;-1:-1:-1;;707:14045:19;;;;;;;771:8:18;707:14045:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;771:8:18;;;;;;;;;;;707:14045:19;;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;707:14045:19;;;;;;;;;;;;-1:-1:-1;;;707:14045:19;;;;;;;1931:387:20;2032:6;;707:14045:19;;771:8:18;707:14045:19;;2113:14:20;707:14045:19;;;;;;;;2209:37:20;2284:6;2217:8;;;;2209:37;:::i;:::-;2284:6;:::i;:::-;1931:387;:::o;707:14045:19:-;;;-1:-1:-1;;;707:14045:19;;;;;;;;;;;;-1:-1:-1;;;707:14045:19;;;;;;;1931:387:20;;2032:6;;707:14045:19;;771:8:18;;;;;;;;;;;;;;;;;;2284:6:20;2103:24;2095:53;2103:24;;;;;2095:53;;;:::i;:::-;2209:37;2186:12;707:14045:19;;;2186:12:20;;:::i;:::-;2217:8;;;;2209:37;:::i;2103:24::-;2113:6;;;;;;:::i;:::-;:14;2103:24;;;;983:180;;1085:5;983:180;1085:5;;:::i;:::-;1109:6;;;707:14045:19;;983:180:20;:::o;707:14045:19:-;;;-1:-1:-1;;;707:14045:19;;;;;;;;;;;;-1:-1:-1;;;707:14045:19;;;;;;;2821:555:20;;;1333:5:18;2927:21:20;;;;707:14045:19;;;2993:21:20;;707:14045:19;;771:8:18;707:14045:19;;;;771:8:18;;;;;;;;;;;;;;;;3107:16:20;;;;;:::i;:::-;707:14045:19;;;3152:24:20;707:14045:19;;;2449:10:20;1333:5:18;;2449:21:20;;707:14045:19;;;2483:151:20;;2496:6;;;3193:11;;;;3189:59;;3574:20;;;;;;:::i;:::-;3632:17;;;3605:16;3660:21;-1:-1:-1;3930:10:20;;3925:509;3942:17;707:14045:19;3942:17:20;;;;;3925:509;3339:29;;;;;;;;;;;;:::i;3961:3::-;771:8:18;;;;;;;;;;;;;;;;;;;;;;4050:16:20;4089:22;4133:16;4050;4100:10;4038:29;4050:16;;;;:::i;:::-;4038:29;;:::i;:::-;4100:10;;;:::i;4133:16::-;4168:9;;;4164:20;;4201:30;;;3961:3;4246:30;;3961:3;4291:132;;;;;4330:15;;;:::i;:::-;4291:132;;-1:-1:-1;;707:14045:19;;;;;;3930:10:20;;;;;;;;4291:132;4392:15;;;:::i;:::-;4291:132;;;4246:30;4267:9;;4246:30;;;4201;4222:9;;4201:30;;;4164:20;4179:5;;;;3189:59;-1:-1:-1;3221:15:20;;-1:-1:-1;;;3221:15:20:o;2504:6::-;2531:10;;;;:::i;:::-;707:14045:19;;;;2558:65:20;;2504:6;707:14045:19;;2488:6:20;;;;2558:65;2597:10;;;;;:::i;:::-;2558:65;;;2449:21;;;;707:14045:19;;;-1:-1:-1;;;707:14045:19;;;;;;;;;;;;-1:-1:-1;;;707:14045:19;;;;;;;;;;-1:-1:-1;;;707:14045:19;;;;;;;;;;;;-1:-1:-1;;;707:14045:19;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;707:14045:19;;;;;;;;;;;;-1:-1:-1;;;707:14045:19;;;;;;;1612:311:20;771:8:18;;;;;;;;;;;;;;;;;1731:50:20;1739:21;;;;;1731:50;;;:::i;:::-;707:14045:19;;;;;;;;1828:37:20;771:8:18;1836::20;;;;1828:37;:::i;:::-;707:14045:19;1612:311:20;:::o;1739:21::-;1749:6;;;;;;:::i;:::-;:11;1739:21;;;;1171:202;1286:14;1171:202;1286:14;:::i;:::-;707:14045:19;;1171:202:20;:::o;707:14045:19:-;;;-1:-1:-1;;;707:14045:19;;;;;;;;;;;;-1:-1:-1;;;707:14045:19;;;;;;;1171:202:20;1286:14;1171:202;1286:14;:::i;1171:202::-;;1286:14;1171:202;1286:14;:::i;1381:223::-;771:8:18;1488:6:20;;;771:8:18;;-1:-1:-1;;;707:14045:19;;;;;;;1511:21:20;-1:-1:-1;1511:21:20;:::o;1484:113::-;707:14045:19;;;;;;;;1565:20:20;1580:4;1565:20;:::o;1381:223::-;771:8:18;;1488:6:20;;;;;707:14045:19;;;;;;;1511:21:20;-1:-1:-1;1511:21:20;:::o;1484:113::-;-1:-1:-1;;707:14045:19;;;-1:-1:-1;707:14045:19;;;;1565:20:20;1580:4;1565:20;:::o;1381:223::-;1488:6;;;;;1519:5;;;;:::i;:::-;1511:21;1526:5;1511:21;:::o;1484:113::-;1573:5;;;:::i;:::-;1565:20;1580:4;1565:20;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"603400","executionCost":"646","totalCost":"604046"},"external":{"BONE()":"586","BPOW_PRECISION()":"179","EXIT_FEE()":"597","INIT_POOL_SUPPLY()":"355","MAX_BOUND_TOKENS()":"444","MAX_BPOW_BASE()":"554","MAX_FEE()":"532","MAX_IN_RATIO()":"642","MAX_OUT_RATIO()":"377","MAX_TOTAL_WEIGHT()":"154","MAX_WEIGHT()":"630","MIN_BALANCE()":"311","MIN_BOUND_TOKENS()":"466","MIN_BPOW_BASE()":"488","MIN_FEE()":"245","MIN_WEIGHT()":"210","calcInGivenOut(uint256,uint256,uint256,uint256,uint256,uint256)":"infinite","calcOutGivenIn(uint256,uint256,uint256,uint256,uint256,uint256)":"infinite","calcPoolInGivenSingleOut(uint256,uint256,uint256,uint256,uint256,uint256)":"infinite","calcPoolOutGivenSingleIn(uint256,uint256,uint256,uint256,uint256,uint256)":"infinite","calcSingleInGivenPoolOut(uint256,uint256,uint256,uint256,uint256,uint256)":"infinite","calcSingleOutGivenPoolIn(uint256,uint256,uint256,uint256,uint256,uint256)":"infinite","calcSpotPrice(uint256,uint256,uint256,uint256,uint256)":"infinite","getColor()":"405"}},"methodIdentifiers":{"BONE()":"c36596a6","BPOW_PRECISION()":"189d00ca","EXIT_FEE()":"c6580d12","INIT_POOL_SUPPLY()":"9381cd2b","MAX_BOUND_TOKENS()":"b0e0d136","MAX_BPOW_BASE()":"bc694ea2","MAX_FEE()":"bc063e1a","MAX_IN_RATIO()":"ec093021","MAX_OUT_RATIO()":"992e2a92","MAX_TOTAL_WEIGHT()":"09a3bbe4","MAX_WEIGHT()":"e4a28a52","MIN_BALANCE()":"867378c5","MIN_BOUND_TOKENS()":"b7b800a4","MIN_BPOW_BASE()":"ba019dab","MIN_FEE()":"76c7a3c7","MIN_WEIGHT()":"218b5382","calcInGivenOut(uint256,uint256,uint256,uint256,uint256,uint256)":"f8d6aed4","calcOutGivenIn(uint256,uint256,uint256,uint256,uint256,uint256)":"ba9530a6","calcPoolInGivenSingleOut(uint256,uint256,uint256,uint256,uint256,uint256)":"82f652ad","calcPoolOutGivenSingleIn(uint256,uint256,uint256,uint256,uint256,uint256)":"8656b653","calcSingleInGivenPoolOut(uint256,uint256,uint256,uint256,uint256,uint256)":"5c1bbaf7","calcSingleOutGivenPoolIn(uint256,uint256,uint256,uint256,uint256,uint256)":"89298012","calcSpotPrice(uint256,uint256,uint256,uint256,uint256)":"a221ee49","getColor()":"9a86139b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"BONE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"BPOW_PRECISION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"EXIT_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"INIT_POOL_SUPPLY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_BOUND_TOKENS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_BPOW_BASE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_IN_RATIO\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_OUT_RATIO\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_TOTAL_WEIGHT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_WEIGHT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_BALANCE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_BOUND_TOKENS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_BPOW_BASE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_WEIGHT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenBalanceIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenWeightIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenBalanceOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenWeightOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenAmountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"swapFee\",\"type\":\"uint256\"}],\"name\":\"calcInGivenOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenAmountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenBalanceIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenWeightIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenBalanceOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenWeightOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenAmountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"swapFee\",\"type\":\"uint256\"}],\"name\":\"calcOutGivenIn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenAmountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenBalanceOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenWeightOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"poolSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalWeight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenAmountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"swapFee\",\"type\":\"uint256\"}],\"name\":\"calcPoolInGivenSingleOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"poolAmountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenBalanceIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenWeightIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"poolSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalWeight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenAmountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"swapFee\",\"type\":\"uint256\"}],\"name\":\"calcPoolOutGivenSingleIn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"poolAmountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenBalanceIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenWeightIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"poolSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalWeight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"poolAmountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"swapFee\",\"type\":\"uint256\"}],\"name\":\"calcSingleInGivenPoolOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenAmountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenBalanceOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenWeightOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"poolSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalWeight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"poolAmountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"swapFee\",\"type\":\"uint256\"}],\"name\":\"calcSingleOutGivenPoolIn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenAmountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenBalanceIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenWeightIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenBalanceOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenWeightOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"swapFee\",\"type\":\"uint256\"}],\"name\":\"calcSpotPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"spotPrice\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getColor\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/balancer/BMath.sol\":\"BMath\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/balancer/BColor.sol\":{\"content\":\"// This program is free software: you can redistribute it and/or modify\\r\\n// it under the terms of the GNU General Public License as published by\\r\\n// the Free Software Foundation, either version 3 of the License, or\\r\\n// (at your option) any later version.\\r\\n\\r\\n// This program is distributed in the hope that it will be useful,\\r\\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\\r\\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\r\\n// GNU General Public License for more details.\\r\\n\\r\\n// You should have received a copy of the GNU General Public License\\r\\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\\r\\n\\r\\npragma solidity 0.8.25;\\r\\n\\r\\nabstract contract BColor {\\r\\n    function getColor() external view virtual returns (bytes32);\\r\\n}\\r\\n\\r\\ncontract BBronze is BColor {\\r\\n    function getColor() external view override returns (bytes32) {\\r\\n        return bytes32('BRONZE');\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xfebf562cc76ad2f7d522afc383f11c4802fc39fc675bad0da602bde5e2212710\"},\"contracts/balancer/BConst.sol\":{\"content\":\"// This program is free software: you can redistribute it and/or modify\\r\\n// it under the terms of the GNU General Public License as published by\\r\\n// the Free Software Foundation, either version 3 of the License, or\\r\\n// (at your option) any later version.\\r\\n\\r\\n// This program is distributed in the hope that it will be useful,\\r\\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\\r\\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\r\\n// GNU General Public License for more details.\\r\\n\\r\\n// You should have received a copy of the GNU General Public License\\r\\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\\r\\n\\r\\npragma solidity 0.8.25;\\r\\n\\r\\nimport './BColor.sol';\\r\\n\\r\\ncontract BConst is BBronze {\\r\\n    uint public constant BONE = 10 ** 18;\\r\\n\\r\\n    uint public constant MIN_BOUND_TOKENS = 2;\\r\\n    uint public constant MAX_BOUND_TOKENS = 8;\\r\\n\\r\\n    uint public constant MIN_FEE = BONE / 10 ** 6;\\r\\n    uint public constant MAX_FEE = BONE / 10;\\r\\n    uint public constant EXIT_FEE = 0;\\r\\n\\r\\n    uint public constant MIN_WEIGHT = BONE;\\r\\n    uint public constant MAX_WEIGHT = BONE * 50;\\r\\n    uint public constant MAX_TOTAL_WEIGHT = BONE * 50;\\r\\n    uint public constant MIN_BALANCE = BONE / 10 ** 12;\\r\\n\\r\\n    uint public constant INIT_POOL_SUPPLY = BONE * 100;\\r\\n\\r\\n    uint public constant MIN_BPOW_BASE = 1 wei;\\r\\n    uint public constant MAX_BPOW_BASE = (2 * BONE) - 1 wei;\\r\\n    uint public constant BPOW_PRECISION = BONE / 10 ** 10;\\r\\n\\r\\n    uint public constant MAX_IN_RATIO = BONE / 2;\\r\\n    uint public constant MAX_OUT_RATIO = (BONE / 3) + 1 wei;\\r\\n}\\r\\n\",\"keccak256\":\"0xdda4746d3e2d40d8ecd62b61fec957d560ad405dd82aaf3e43d7e708168b7df6\"},\"contracts/balancer/BMath.sol\":{\"content\":\"// This program is free software: you can redistribute it and/or modify\\r\\n// it under the terms of the GNU General Public License as published by\\r\\n// the Free Software Foundation, either version 3 of the License, or\\r\\n// (at your option) any later version.\\r\\n\\r\\n// This program is distributed in the hope that it will be useful,\\r\\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\\r\\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\r\\n// GNU General Public License for more details.\\r\\n\\r\\n// You should have received a copy of the GNU General Public License\\r\\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\\r\\n\\r\\npragma solidity 0.8.25;\\r\\n\\r\\nimport \\\"./BNum.sol\\\";\\r\\n\\r\\ncontract BMath is BBronze, BConst, BNum {\\r\\n    /**********************************************************************************************\\r\\n    // calcSpotPrice                                                                             //\\r\\n    // sP = spotPrice                                                                            //\\r\\n    // bI = tokenBalanceIn                ( bI / wI )         1                                  //\\r\\n    // bO = tokenBalanceOut         sP =  -----------  *  ----------                             //\\r\\n    // wI = tokenWeightIn                 ( bO / wO )     ( 1 - sF )                             //\\r\\n    // wO = tokenWeightOut                                                                       //\\r\\n    // sF = swapFee                                                                              //\\r\\n    **********************************************************************************************/\\r\\n    function calcSpotPrice(\\r\\n        uint tokenBalanceIn,\\r\\n        uint tokenWeightIn,\\r\\n        uint tokenBalanceOut,\\r\\n        uint tokenWeightOut,\\r\\n        uint swapFee\\r\\n    )\\r\\n        public pure\\r\\n        returns (uint spotPrice)\\r\\n    {\\r\\n        uint numer = bdiv(tokenBalanceIn, tokenWeightIn);\\r\\n        uint denom = bdiv(tokenBalanceOut, tokenWeightOut);\\r\\n        uint ratio = bdiv(numer, denom);\\r\\n        uint scale = bdiv(BONE, bsub(BONE, swapFee));\\r\\n        return  (spotPrice = bmul(ratio, scale));\\r\\n    }\\r\\n\\r\\n    /**********************************************************************************************\\r\\n    // calcOutGivenIn                                                                            //\\r\\n    // aO = tokenAmountOut                                                                       //\\r\\n    // bO = tokenBalanceOut                                                                      //\\r\\n    // bI = tokenBalanceIn              /      /            bI             \\\\    (wI / wO) \\\\      //\\r\\n    // aI = tokenAmountIn    aO = bO * |  1 - | --------------------------  | ^            |     //\\r\\n    // wI = tokenWeightIn               \\\\      \\\\ ( bI + ( aI * ( 1 - sF )) /              /      //\\r\\n    // wO = tokenWeightOut                                                                       //\\r\\n    // sF = swapFee                                                                              //\\r\\n    **********************************************************************************************/\\r\\n    function calcOutGivenIn(\\r\\n        uint tokenBalanceIn,\\r\\n        uint tokenWeightIn,\\r\\n        uint tokenBalanceOut,\\r\\n        uint tokenWeightOut,\\r\\n        uint tokenAmountIn,\\r\\n        uint swapFee\\r\\n    )\\r\\n        public pure\\r\\n        returns (uint tokenAmountOut)\\r\\n    {\\r\\n        uint weightRatio = bdiv(tokenWeightIn, tokenWeightOut);\\r\\n        uint adjustedIn = bsub(BONE, swapFee);\\r\\n        adjustedIn = bmul(tokenAmountIn, adjustedIn);\\r\\n        uint y = bdiv(tokenBalanceIn, badd(tokenBalanceIn, adjustedIn));\\r\\n        uint foo = bpow(y, weightRatio);\\r\\n        uint bar = bsub(BONE, foo);\\r\\n        tokenAmountOut = bmul(tokenBalanceOut, bar);\\r\\n        return tokenAmountOut;\\r\\n    }\\r\\n\\r\\n    /**********************************************************************************************\\r\\n    // calcInGivenOut                                                                            //\\r\\n    // aI = tokenAmountIn                                                                        //\\r\\n    // bO = tokenBalanceOut               /  /     bO      \\\\    (wO / wI)      \\\\                 //\\r\\n    // bI = tokenBalanceIn          bI * |  | ------------  | ^            - 1  |                //\\r\\n    // aO = tokenAmountOut    aI =        \\\\  \\\\ ( bO - aO ) /                   /                 //\\r\\n    // wI = tokenWeightIn           --------------------------------------------                 //\\r\\n    // wO = tokenWeightOut                          ( 1 - sF )                                   //\\r\\n    // sF = swapFee                                                                              //\\r\\n    **********************************************************************************************/\\r\\n    function calcInGivenOut(\\r\\n        uint tokenBalanceIn,\\r\\n        uint tokenWeightIn,\\r\\n        uint tokenBalanceOut,\\r\\n        uint tokenWeightOut,\\r\\n        uint tokenAmountOut,\\r\\n        uint swapFee\\r\\n    )\\r\\n        public pure\\r\\n        returns (uint tokenAmountIn)\\r\\n    {\\r\\n        uint weightRatio = bdiv(tokenWeightOut, tokenWeightIn);\\r\\n        uint diff = bsub(tokenBalanceOut, tokenAmountOut);\\r\\n        uint y = bdiv(tokenBalanceOut, diff);\\r\\n        uint foo = bpow(y, weightRatio);\\r\\n        foo = bsub(foo, BONE);\\r\\n        tokenAmountIn = bsub(BONE, swapFee);\\r\\n        tokenAmountIn = bdiv(bmul(tokenBalanceIn, foo), tokenAmountIn);\\r\\n        return tokenAmountIn;\\r\\n    }\\r\\n\\r\\n    /**********************************************************************************************\\r\\n    // calcPoolOutGivenSingleIn                                                                  //\\r\\n    // pAo = poolAmountOut         /                                              \\\\              //\\r\\n    // tAi = tokenAmountIn        ///      /     //    wI \\\\      \\\\\\\\       \\\\     wI \\\\             //\\r\\n    // wI = tokenWeightIn        //| tAi *| 1 - || 1 - --  | * sF || + tBi \\\\    --  \\\\            //\\r\\n    // tW = totalWeight     pAo=||  \\\\      \\\\     \\\\\\\\    tW /      //         | ^ tW   | * pS - pS //\\r\\n    // tBi = tokenBalanceIn      \\\\\\\\  ------------------------------------- /        /            //\\r\\n    // pS = poolSupply            \\\\\\\\                    tBi               /        /             //\\r\\n    // sF = swapFee                \\\\                                              /              //\\r\\n    **********************************************************************************************/\\r\\n    function calcPoolOutGivenSingleIn(\\r\\n        uint tokenBalanceIn,\\r\\n        uint tokenWeightIn,\\r\\n        uint poolSupply,\\r\\n        uint totalWeight,\\r\\n        uint tokenAmountIn,\\r\\n        uint swapFee\\r\\n    )\\r\\n        public pure\\r\\n        returns (uint poolAmountOut)\\r\\n    {\\r\\n        // Charge the trading fee for the proportion of tokenAi\\r\\n        ///  which is implicitly traded to the other pool tokens.\\r\\n        // That proportion is (1- weightTokenIn)\\r\\n        // tokenAiAfterFee = tAi * (1 - (1-weightTi) * poolFee);\\r\\n        uint normalizedWeight = bdiv(tokenWeightIn, totalWeight);\\r\\n        uint zaz = bmul(bsub(BONE, normalizedWeight), swapFee); \\r\\n        uint tokenAmountInAfterFee = bmul(tokenAmountIn, bsub(BONE, zaz));\\r\\n\\r\\n        uint newTokenBalanceIn = badd(tokenBalanceIn, tokenAmountInAfterFee);\\r\\n        uint tokenInRatio = bdiv(newTokenBalanceIn, tokenBalanceIn);\\r\\n\\r\\n        // uint newPoolSupply = (ratioTi ^ weightTi) * poolSupply;\\r\\n        uint poolRatio = bpow(tokenInRatio, normalizedWeight);\\r\\n        uint newPoolSupply = bmul(poolRatio, poolSupply);\\r\\n        poolAmountOut = bsub(newPoolSupply, poolSupply);\\r\\n        return poolAmountOut;\\r\\n    }\\r\\n\\r\\n    /**********************************************************************************************\\r\\n    // calcSingleInGivenPoolOut                                                                  //\\r\\n    // tAi = tokenAmountIn              //(pS + pAo)\\\\     /    1    \\\\\\\\                           //\\r\\n    // pS = poolSupply                 || ---------  | ^ | --------- || * bI - bI                //\\r\\n    // pAo = poolAmountOut              \\\\\\\\    pS    /     \\\\(wI / tW)//                           //\\r\\n    // bI = balanceIn          tAi =  --------------------------------------------               //\\r\\n    // wI = weightIn                              /      wI  \\\\                                   //\\r\\n    // tW = totalWeight                          |  1 - ----  |  * sF                            //\\r\\n    // sF = swapFee                               \\\\      tW  /                                   //\\r\\n    **********************************************************************************************/\\r\\n    function calcSingleInGivenPoolOut(\\r\\n        uint tokenBalanceIn,\\r\\n        uint tokenWeightIn,\\r\\n        uint poolSupply,\\r\\n        uint totalWeight,\\r\\n        uint poolAmountOut,\\r\\n        uint swapFee\\r\\n    )\\r\\n        public pure\\r\\n        returns (uint tokenAmountIn)\\r\\n    {\\r\\n        uint normalizedWeight = bdiv(tokenWeightIn, totalWeight);\\r\\n        uint newPoolSupply = badd(poolSupply, poolAmountOut);\\r\\n        uint poolRatio = bdiv(newPoolSupply, poolSupply);\\r\\n      \\r\\n        //uint newBalTi = poolRatio^(1/weightTi) * balTi;\\r\\n        uint boo = bdiv(BONE, normalizedWeight); \\r\\n        uint tokenInRatio = bpow(poolRatio, boo);\\r\\n        uint newTokenBalanceIn = bmul(tokenInRatio, tokenBalanceIn);\\r\\n        uint tokenAmountInAfterFee = bsub(newTokenBalanceIn, tokenBalanceIn);\\r\\n        // Do reverse order of fees charged in joinswap_ExternAmountIn, this way \\r\\n        //     ``` pAo == joinswap_ExternAmountIn(Ti, joinswap_PoolAmountOut(pAo, Ti)) ```\\r\\n        //uint tAi = tAiAfterFee / (1 - (1-weightTi) * swapFee) ;\\r\\n        uint zar = bmul(bsub(BONE, normalizedWeight), swapFee);\\r\\n        tokenAmountIn = bdiv(tokenAmountInAfterFee, bsub(BONE, zar));\\r\\n        return tokenAmountIn;\\r\\n    }\\r\\n\\r\\n    /**********************************************************************************************\\r\\n    // calcSingleOutGivenPoolIn                                                                  //\\r\\n    // tAo = tokenAmountOut            /      /                                             \\\\\\\\   //\\r\\n    // bO = tokenBalanceOut           /      // pS - (pAi * (1 - eF)) \\\\     /    1    \\\\      \\\\\\\\  //\\r\\n    // pAi = poolAmountIn            | bO - || ----------------------- | ^ | --------- | * b0 || //\\r\\n    // ps = poolSupply                \\\\      \\\\\\\\          pS           /     \\\\(wO / tW)/      //  //\\r\\n    // wI = tokenWeightIn      tAo =   \\\\      \\\\                                             //   //\\r\\n    // tW = totalWeight                    /     /      wO \\\\       \\\\                             //\\r\\n    // sF = swapFee                    *  | 1 - |  1 - ---- | * sF  |                            //\\r\\n    // eF = exitFee                        \\\\     \\\\      tW /       /                             //\\r\\n    **********************************************************************************************/\\r\\n    function calcSingleOutGivenPoolIn(\\r\\n        uint tokenBalanceOut,\\r\\n        uint tokenWeightOut,\\r\\n        uint poolSupply,\\r\\n        uint totalWeight,\\r\\n        uint poolAmountIn,\\r\\n        uint swapFee\\r\\n    )\\r\\n        public pure\\r\\n        returns (uint tokenAmountOut)\\r\\n    {\\r\\n        uint normalizedWeight = bdiv(tokenWeightOut, totalWeight);\\r\\n        // charge exit fee on the pool token side\\r\\n        // pAiAfterExitFee = pAi*(1-exitFee)\\r\\n        uint poolAmountInAfterExitFee = bmul(poolAmountIn, bsub(BONE, EXIT_FEE));\\r\\n        uint newPoolSupply = bsub(poolSupply, poolAmountInAfterExitFee);\\r\\n        uint poolRatio = bdiv(newPoolSupply, poolSupply);\\r\\n     \\r\\n        // newBalTo = poolRatio^(1/weightTo) * balTo;\\r\\n        uint tokenOutRatio = bpow(poolRatio, bdiv(BONE, normalizedWeight));\\r\\n        uint newTokenBalanceOut = bmul(tokenOutRatio, tokenBalanceOut);\\r\\n\\r\\n        uint tokenAmountOutBeforeSwapFee = bsub(tokenBalanceOut, newTokenBalanceOut);\\r\\n\\r\\n        // charge swap fee on the output token side \\r\\n        //uint tAo = tAoBeforeSwapFee * (1 - (1-weightTo) * swapFee)\\r\\n        uint zaz = bmul(bsub(BONE, normalizedWeight), swapFee); \\r\\n        tokenAmountOut = bmul(tokenAmountOutBeforeSwapFee, bsub(BONE, zaz));\\r\\n        return tokenAmountOut;\\r\\n    }\\r\\n\\r\\n    /**********************************************************************************************\\r\\n    // calcPoolInGivenSingleOut                                                                  //\\r\\n    // pAi = poolAmountIn               // /               tAo             \\\\\\\\     / wO \\\\     \\\\   //\\r\\n    // bO = tokenBalanceOut            // | bO - -------------------------- |\\\\   | ---- |     \\\\  //\\r\\n    // tAo = tokenAmountOut      pS - ||   \\\\     1 - ((1 - (tO / tW)) * sF)/  | ^ \\\\ tW /  * pS | //\\r\\n    // ps = poolSupply                 \\\\\\\\ -----------------------------------/                /  //\\r\\n    // wO = tokenWeightOut  pAi =       \\\\\\\\               bO                 /                /   //\\r\\n    // tW = totalWeight           -------------------------------------------------------------  //\\r\\n    // sF = swapFee                                        ( 1 - eF )                            //\\r\\n    // eF = exitFee                                                                              //\\r\\n    **********************************************************************************************/\\r\\n    function calcPoolInGivenSingleOut(\\r\\n        uint tokenBalanceOut,\\r\\n        uint tokenWeightOut,\\r\\n        uint poolSupply,\\r\\n        uint totalWeight,\\r\\n        uint tokenAmountOut,\\r\\n        uint swapFee\\r\\n    )\\r\\n        public pure\\r\\n        returns (uint poolAmountIn)\\r\\n    {\\r\\n\\r\\n        // charge swap fee on the output token side \\r\\n        uint normalizedWeight = bdiv(tokenWeightOut, totalWeight);\\r\\n        //uint tAoBeforeSwapFee = tAo / (1 - (1-weightTo) * swapFee) ;\\r\\n        uint zoo = bsub(BONE, normalizedWeight);\\r\\n        uint zar = bmul(zoo, swapFee); \\r\\n        uint tokenAmountOutBeforeSwapFee = bdiv(tokenAmountOut, bsub(BONE, zar));\\r\\n\\r\\n        uint newTokenBalanceOut = bsub(tokenBalanceOut, tokenAmountOutBeforeSwapFee);\\r\\n        uint tokenOutRatio = bdiv(newTokenBalanceOut, tokenBalanceOut);\\r\\n\\r\\n        //uint newPoolSupply = (ratioTo ^ weightTo) * poolSupply;\\r\\n        uint poolRatio = bpow(tokenOutRatio, normalizedWeight);\\r\\n        uint newPoolSupply = bmul(poolRatio, poolSupply);\\r\\n        uint poolAmountInAfterExitFee = bsub(poolSupply, newPoolSupply);\\r\\n\\r\\n        // charge exit fee on the pool token side\\r\\n        // pAi = pAiAfterExitFee/(1-exitFee)\\r\\n        poolAmountIn = bdiv(poolAmountInAfterExitFee, bsub(BONE, EXIT_FEE));\\r\\n        return poolAmountIn;\\r\\n    }\\r\\n\\r\\n\\r\\n}\\r\\n\",\"keccak256\":\"0x910359d7e653af19e0479399fd651af8014a530be1abc0b4b589ba08cfa63fb6\"},\"contracts/balancer/BNum.sol\":{\"content\":\"// This program is free software: you can redistribute it and/or modify\\r\\n// it under the terms of the GNU General Public License as published by\\r\\n// the Free Software Foundation, either version 3 of the License, or\\r\\n// (at your option) any later version.\\r\\n\\r\\n// This program is distributed in the hope that it will be useful,\\r\\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\\r\\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\r\\n// GNU General Public License for more details.\\r\\n\\r\\n// You should have received a copy of the GNU General Public License\\r\\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\\r\\n\\r\\npragma solidity 0.8.25;\\r\\n\\r\\nimport \\\"./BConst.sol\\\";\\r\\n\\r\\ncontract BNum is BConst {\\r\\n\\r\\n    function btoi(uint a)\\r\\n        internal pure \\r\\n        returns (uint)\\r\\n    {\\r\\n        return a / BONE;\\r\\n    }\\r\\n\\r\\n    function bfloor(uint a)\\r\\n        internal pure\\r\\n        returns (uint)\\r\\n    {\\r\\n        return btoi(a) * BONE;\\r\\n    }\\r\\n\\r\\n    function badd(uint a, uint b)\\r\\n        internal pure\\r\\n        returns (uint)\\r\\n    {\\r\\n        uint c = a + b;\\r\\n        require(c >= a, \\\"ERR_ADD_OVERFLOW\\\");\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    function bsub(uint a, uint b)\\r\\n        internal pure\\r\\n        returns (uint)\\r\\n    {\\r\\n        (uint c, bool flag) = bsubSign(a, b);\\r\\n        require(!flag, \\\"ERR_SUB_UNDERFLOW\\\");\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    function bsubSign(uint a, uint b)\\r\\n        internal pure\\r\\n        returns (uint, bool)\\r\\n    {\\r\\n        if (a >= b) {\\r\\n            return (a - b, false);\\r\\n        } else {\\r\\n            return (b - a, true);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function bmul(uint a, uint b)\\r\\n        internal pure\\r\\n        returns (uint)\\r\\n    {\\r\\n        uint c0 = a * b;\\r\\n        require(a == 0 || c0 / a == b, \\\"ERR_MUL_OVERFLOW\\\");\\r\\n        uint c1 = c0 + (BONE / 2);\\r\\n        require(c1 >= c0, \\\"ERR_MUL_OVERFLOW\\\");\\r\\n        uint c2 = c1 / BONE;\\r\\n        return c2;\\r\\n    }\\r\\n\\r\\n    function bdiv(uint a, uint b)\\r\\n        internal pure\\r\\n        returns (uint)\\r\\n    {\\r\\n        require(b != 0, \\\"ERR_DIV_ZERO\\\");\\r\\n        uint c0 = a * BONE;\\r\\n        require(a == 0 || c0 / a == BONE, \\\"ERR_DIV_INTERNAL\\\"); // bmul overflow\\r\\n        uint c1 = c0 + (b / 2);\\r\\n        require(c1 >= c0, \\\"ERR_DIV_INTERNAL\\\"); //  badd require\\r\\n        uint c2 = c1 / b;\\r\\n        return c2;\\r\\n    }\\r\\n\\r\\n    // DSMath.wpow\\r\\n    function bpowi(uint a, uint n)\\r\\n        internal pure\\r\\n        returns (uint)\\r\\n    {\\r\\n        uint z = n % 2 != 0 ? a : BONE;\\r\\n\\r\\n        for (n /= 2; n != 0; n /= 2) {\\r\\n            a = bmul(a, a);\\r\\n\\r\\n            if (n % 2 != 0) {\\r\\n                z = bmul(z, a);\\r\\n            }\\r\\n        }\\r\\n        return z;\\r\\n    }\\r\\n\\r\\n    // Compute b^(e.w) by splitting it into (b^e)*(b^0.w).\\r\\n    // Use `bpowi` for `b^e` and `bpowK` for k iterations\\r\\n    // of approximation of b^0.w\\r\\n    function bpow(uint base, uint exp)\\r\\n        internal pure\\r\\n        returns (uint)\\r\\n    {\\r\\n        require(base >= MIN_BPOW_BASE, \\\"ERR_BPOW_BASE_TOO_LOW\\\");\\r\\n        require(base <= MAX_BPOW_BASE, \\\"ERR_BPOW_BASE_TOO_HIGH\\\");\\r\\n\\r\\n        uint whole  = bfloor(exp);   \\r\\n        uint remain = bsub(exp, whole);\\r\\n\\r\\n        uint wholePow = bpowi(base, btoi(whole));\\r\\n\\r\\n        if (remain == 0) {\\r\\n            return wholePow;\\r\\n        }\\r\\n\\r\\n        uint partialResult = bpowApprox(base, remain, BPOW_PRECISION);\\r\\n        return bmul(wholePow, partialResult);\\r\\n    }\\r\\n\\r\\n    function bpowApprox(uint base, uint exp, uint precision)\\r\\n        internal pure\\r\\n        returns (uint)\\r\\n    {\\r\\n        // term 0:\\r\\n        uint a     = exp;\\r\\n        (uint x, bool xneg)  = bsubSign(base, BONE);\\r\\n        uint term = BONE;\\r\\n        uint sum   = term;\\r\\n        bool negative = false;\\r\\n\\r\\n\\r\\n        // term(k) = numer / denom \\r\\n        //         = (product(a - i - 1, i=1-->k) * x^k) / (k!)\\r\\n        // each iteration, multiply previous term by (a-(k-1)) * x / k\\r\\n        // continue until term is less than precision\\r\\n        for (uint i = 1; term >= precision; i++) {\\r\\n            uint bigK = i * BONE;\\r\\n            (uint c, bool cneg) = bsubSign(a, bsub(bigK, BONE));\\r\\n            term = bmul(term, bmul(c, x));\\r\\n            term = bdiv(term, bigK);\\r\\n            if (term == 0) break;\\r\\n\\r\\n            if (xneg) negative = !negative;\\r\\n            if (cneg) negative = !negative;\\r\\n            if (negative) {\\r\\n                sum = bsub(sum, term);\\r\\n            } else {\\r\\n                sum = badd(sum, term);\\r\\n            }\\r\\n        }\\r\\n\\r\\n        return sum;\\r\\n    }\\r\\n\\r\\n}\\r\\n\",\"keccak256\":\"0x202057e3b3eb9ac515caa18b50148fc342bd8065e37c4ff08dd9ade76daee5ce\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/balancer/BNum.sol":{"BNum":{"abi":[{"inputs":[],"name":"BONE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"BPOW_PRECISION","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"EXIT_FEE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"INIT_POOL_SUPPLY","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MAX_BOUND_TOKENS","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MAX_BPOW_BASE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MAX_FEE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MAX_IN_RATIO","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MAX_OUT_RATIO","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MAX_TOTAL_WEIGHT","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MAX_WEIGHT","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MIN_BALANCE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MIN_BOUND_TOKENS","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MIN_BPOW_BASE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MIN_FEE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MIN_WEIGHT","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getColor","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"608080604052346015576102f0908161001a8239f35b5f80fdfe6040608081526004361015610012575f80fd5b5f3560e01c806309a3bbe414610275578063189d00ca14610257578063218b53821461011957806376c7a3c714610238578063867378c51461021b5780639381cd2b146101f8578063992e2a92146101d65780639a86139b146101b3578063b0e0d13614610198578063b7b800a41461017d578063ba019dab14610162578063bc063e1a14610140578063bc694ea21461011e578063c36596a614610119578063c6580d12146100ff578063e4a28a52146100fa5763ec093021146100d5575f80fd5b346100f6575f3660031901126100f657602090516706f05b59d3b200008152f35b5f80fd5b610275565b50346100f6575f3660031901126100f657602090515f8152f35b610298565b50346100f6575f3660031901126100f65760209051671bc16d674ec7ffff8152f35b50346100f6575f3660031901126100f6576020905167016345785d8a00008152f35b50346100f6575f3660031901126100f6576020905160018152f35b50346100f6575f3660031901126100f6576020905160028152f35b50346100f6575f3660031901126100f6576020905160088152f35b50346100f6575f3660031901126100f657516542524f4e5a4560d01b8152602090f35b50346100f6575f3660031901126100f657602090516704a03ce68d2155568152f35b50346100f6575f3660031901126100f6576020905168056bc75e2d631000008152f35b50346100f6575f3660031901126100f65760209051620f42408152f35b50346100f6575f3660031901126100f6576020905164e8d4a510008152f35b50346100f6575f3660031901126100f657602090516305f5e1008152f35b346100f6575f3660031901126100f65760206040516802b5e3af16b18800008152f35b346100f6575f3660031901126100f6576020604051670de0b6b3a76400008152f3fea2646970667358221220e624e66c94c1a1617bcfb790949d90614c0f77045f81977d3fcbe220364d040564736f6c63430008190033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x15 JUMPI PUSH2 0x2F0 SWAP1 DUP2 PUSH2 0x1A DUP3 CODECOPY RETURN JUMPDEST PUSH0 DUP1 REVERT INVALID PUSH1 0x40 PUSH1 0x80 DUP2 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9A3BBE4 EQ PUSH2 0x275 JUMPI DUP1 PUSH4 0x189D00CA EQ PUSH2 0x257 JUMPI DUP1 PUSH4 0x218B5382 EQ PUSH2 0x119 JUMPI DUP1 PUSH4 0x76C7A3C7 EQ PUSH2 0x238 JUMPI DUP1 PUSH4 0x867378C5 EQ PUSH2 0x21B JUMPI DUP1 PUSH4 0x9381CD2B EQ PUSH2 0x1F8 JUMPI DUP1 PUSH4 0x992E2A92 EQ PUSH2 0x1D6 JUMPI DUP1 PUSH4 0x9A86139B EQ PUSH2 0x1B3 JUMPI DUP1 PUSH4 0xB0E0D136 EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0xB7B800A4 EQ PUSH2 0x17D JUMPI DUP1 PUSH4 0xBA019DAB EQ PUSH2 0x162 JUMPI DUP1 PUSH4 0xBC063E1A EQ PUSH2 0x140 JUMPI DUP1 PUSH4 0xBC694EA2 EQ PUSH2 0x11E JUMPI DUP1 PUSH4 0xC36596A6 EQ PUSH2 0x119 JUMPI DUP1 PUSH4 0xC6580D12 EQ PUSH2 0xFF JUMPI DUP1 PUSH4 0xE4A28A52 EQ PUSH2 0xFA JUMPI PUSH4 0xEC093021 EQ PUSH2 0xD5 JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xF6 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF6 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH8 0x6F05B59D3B20000 DUP2 MSTORE RETURN JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x275 JUMP JUMPDEST POP CALLVALUE PUSH2 0xF6 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF6 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH0 DUP2 MSTORE RETURN JUMPDEST PUSH2 0x298 JUMP JUMPDEST POP CALLVALUE PUSH2 0xF6 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF6 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH8 0x1BC16D674EC7FFFF DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0xF6 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF6 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH8 0x16345785D8A0000 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0xF6 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF6 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0xF6 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF6 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH1 0x2 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0xF6 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF6 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH1 0x8 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0xF6 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF6 JUMPI MLOAD PUSH6 0x42524F4E5A45 PUSH1 0xD0 SHL DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0xF6 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF6 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH8 0x4A03CE68D215556 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0xF6 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF6 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH9 0x56BC75E2D63100000 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0xF6 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF6 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH3 0xF4240 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0xF6 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF6 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH5 0xE8D4A51000 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0xF6 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF6 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH4 0x5F5E100 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xF6 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF6 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH9 0x2B5E3AF16B1880000 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xF6 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF6 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH8 0xDE0B6B3A7640000 DUP2 MSTORE RETURN INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE6 0x24 0xE6 PUSH13 0x94C1A1617BCFB790949D90614C 0xF PUSH24 0x45F81977D3FCBE220364D040564736F6C63430008190033 ","sourceMap":"709:3760:20:-:0;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"external_fun_MAX_TOTAL_WEIGHT":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_MIN_WEIGHT":{"entryPoint":664,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"6040608081526004361015610012575f80fd5b5f3560e01c806309a3bbe414610275578063189d00ca14610257578063218b53821461011957806376c7a3c714610238578063867378c51461021b5780639381cd2b146101f8578063992e2a92146101d65780639a86139b146101b3578063b0e0d13614610198578063b7b800a41461017d578063ba019dab14610162578063bc063e1a14610140578063bc694ea21461011e578063c36596a614610119578063c6580d12146100ff578063e4a28a52146100fa5763ec093021146100d5575f80fd5b346100f6575f3660031901126100f657602090516706f05b59d3b200008152f35b5f80fd5b610275565b50346100f6575f3660031901126100f657602090515f8152f35b610298565b50346100f6575f3660031901126100f65760209051671bc16d674ec7ffff8152f35b50346100f6575f3660031901126100f6576020905167016345785d8a00008152f35b50346100f6575f3660031901126100f6576020905160018152f35b50346100f6575f3660031901126100f6576020905160028152f35b50346100f6575f3660031901126100f6576020905160088152f35b50346100f6575f3660031901126100f657516542524f4e5a4560d01b8152602090f35b50346100f6575f3660031901126100f657602090516704a03ce68d2155568152f35b50346100f6575f3660031901126100f6576020905168056bc75e2d631000008152f35b50346100f6575f3660031901126100f65760209051620f42408152f35b50346100f6575f3660031901126100f6576020905164e8d4a510008152f35b50346100f6575f3660031901126100f657602090516305f5e1008152f35b346100f6575f3660031901126100f65760206040516802b5e3af16b18800008152f35b346100f6575f3660031901126100f6576020604051670de0b6b3a76400008152f3fea2646970667358221220e624e66c94c1a1617bcfb790949d90614c0f77045f81977d3fcbe220364d040564736f6c63430008190033","opcodes":"PUSH1 0x40 PUSH1 0x80 DUP2 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9A3BBE4 EQ PUSH2 0x275 JUMPI DUP1 PUSH4 0x189D00CA EQ PUSH2 0x257 JUMPI DUP1 PUSH4 0x218B5382 EQ PUSH2 0x119 JUMPI DUP1 PUSH4 0x76C7A3C7 EQ PUSH2 0x238 JUMPI DUP1 PUSH4 0x867378C5 EQ PUSH2 0x21B JUMPI DUP1 PUSH4 0x9381CD2B EQ PUSH2 0x1F8 JUMPI DUP1 PUSH4 0x992E2A92 EQ PUSH2 0x1D6 JUMPI DUP1 PUSH4 0x9A86139B EQ PUSH2 0x1B3 JUMPI DUP1 PUSH4 0xB0E0D136 EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0xB7B800A4 EQ PUSH2 0x17D JUMPI DUP1 PUSH4 0xBA019DAB EQ PUSH2 0x162 JUMPI DUP1 PUSH4 0xBC063E1A EQ PUSH2 0x140 JUMPI DUP1 PUSH4 0xBC694EA2 EQ PUSH2 0x11E JUMPI DUP1 PUSH4 0xC36596A6 EQ PUSH2 0x119 JUMPI DUP1 PUSH4 0xC6580D12 EQ PUSH2 0xFF JUMPI DUP1 PUSH4 0xE4A28A52 EQ PUSH2 0xFA JUMPI PUSH4 0xEC093021 EQ PUSH2 0xD5 JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xF6 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF6 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH8 0x6F05B59D3B20000 DUP2 MSTORE RETURN JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x275 JUMP JUMPDEST POP CALLVALUE PUSH2 0xF6 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF6 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH0 DUP2 MSTORE RETURN JUMPDEST PUSH2 0x298 JUMP JUMPDEST POP CALLVALUE PUSH2 0xF6 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF6 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH8 0x1BC16D674EC7FFFF DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0xF6 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF6 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH8 0x16345785D8A0000 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0xF6 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF6 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0xF6 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF6 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH1 0x2 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0xF6 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF6 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH1 0x8 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0xF6 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF6 JUMPI MLOAD PUSH6 0x42524F4E5A45 PUSH1 0xD0 SHL DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0xF6 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF6 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH8 0x4A03CE68D215556 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0xF6 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF6 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH9 0x56BC75E2D63100000 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0xF6 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF6 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH3 0xF4240 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0xF6 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF6 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH5 0xE8D4A51000 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0xF6 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF6 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH4 0x5F5E100 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xF6 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF6 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH9 0x2B5E3AF16B1880000 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xF6 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF6 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH8 0xDE0B6B3A7640000 DUP2 MSTORE RETURN INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE6 0x24 0xE6 PUSH13 0x94C1A1617BCFB790949D90614C 0xF PUSH24 0x45F81977D3FCBE220364D040564736F6C63430008190033 ","sourceMap":"709:3760:20:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;709:3760:20;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;709:3760:20;;;;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;709:3760:20;;;;;;;;;;;;;;;;;;-1:-1:-1;;709:3760:20;;;;;;;;;;;;;;;;;;-1:-1:-1;;709:3760:20;;;;;;;1333:5:18;709:3760:20;;;;;;;;;;-1:-1:-1;;709:3760:20;;;;;;;828:1:18;709:3760:20;;;;;;;;;;-1:-1:-1;;709:3760:20;;;;;;;876:1:18;709:3760:20;;;;;;;;;;-1:-1:-1;;709:3760:20;;;;;-1:-1:-1;;;709:3760:20;;;;;;;;;;;;-1:-1:-1;;709:3760:20;;;;;;;;;;;;;;;;;;-1:-1:-1;;709:3760:20;;;;;;;771:8:18;709:3760:20;;;;;;;;;;-1:-1:-1;;709:3760:20;;;;;;;;;;;;;;;;;;-1:-1:-1;;709:3760:20;;;;;;;;;;;;;;;;;;-1:-1:-1;;709:3760:20;;;;;;;;;;;;;;;;;-1:-1:-1;;709:3760:20;;;;;;;771:8:18;709:3760:20;;;;;;;;;-1:-1:-1;;709:3760:20;;;;;;;771:8:18;709:3760:20;;"},"gasEstimates":{"creation":{"codeDepositCost":"150400","executionCost":"202","totalCost":"150602"},"external":{"BONE()":"446","BPOW_PRECISION()":"172","EXIT_FEE()":"457","INIT_POOL_SUPPLY()":"260","MAX_BOUND_TOKENS()":"326","MAX_BPOW_BASE()":"414","MAX_FEE()":"392","MAX_IN_RATIO()":"497","MAX_OUT_RATIO()":"282","MAX_TOTAL_WEIGHT()":"148","MAX_WEIGHT()":"490","MIN_BALANCE()":"238","MIN_BOUND_TOKENS()":"348","MIN_BPOW_BASE()":"370","MIN_FEE()":"216","MIN_WEIGHT()":"204","getColor()":"310"},"internal":{"badd(uint256,uint256)":"infinite","bdiv(uint256,uint256)":"infinite","bfloor(uint256)":"infinite","bmul(uint256,uint256)":"infinite","bpow(uint256,uint256)":"infinite","bpowApprox(uint256,uint256,uint256)":"infinite","bpowi(uint256,uint256)":"infinite","bsub(uint256,uint256)":"infinite","bsubSign(uint256,uint256)":"infinite","btoi(uint256)":"infinite"}},"methodIdentifiers":{"BONE()":"c36596a6","BPOW_PRECISION()":"189d00ca","EXIT_FEE()":"c6580d12","INIT_POOL_SUPPLY()":"9381cd2b","MAX_BOUND_TOKENS()":"b0e0d136","MAX_BPOW_BASE()":"bc694ea2","MAX_FEE()":"bc063e1a","MAX_IN_RATIO()":"ec093021","MAX_OUT_RATIO()":"992e2a92","MAX_TOTAL_WEIGHT()":"09a3bbe4","MAX_WEIGHT()":"e4a28a52","MIN_BALANCE()":"867378c5","MIN_BOUND_TOKENS()":"b7b800a4","MIN_BPOW_BASE()":"ba019dab","MIN_FEE()":"76c7a3c7","MIN_WEIGHT()":"218b5382","getColor()":"9a86139b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"BONE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"BPOW_PRECISION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"EXIT_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"INIT_POOL_SUPPLY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_BOUND_TOKENS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_BPOW_BASE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_IN_RATIO\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_OUT_RATIO\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_TOTAL_WEIGHT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_WEIGHT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_BALANCE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_BOUND_TOKENS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_BPOW_BASE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_WEIGHT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getColor\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/balancer/BNum.sol\":\"BNum\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/balancer/BColor.sol\":{\"content\":\"// This program is free software: you can redistribute it and/or modify\\r\\n// it under the terms of the GNU General Public License as published by\\r\\n// the Free Software Foundation, either version 3 of the License, or\\r\\n// (at your option) any later version.\\r\\n\\r\\n// This program is distributed in the hope that it will be useful,\\r\\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\\r\\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\r\\n// GNU General Public License for more details.\\r\\n\\r\\n// You should have received a copy of the GNU General Public License\\r\\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\\r\\n\\r\\npragma solidity 0.8.25;\\r\\n\\r\\nabstract contract BColor {\\r\\n    function getColor() external view virtual returns (bytes32);\\r\\n}\\r\\n\\r\\ncontract BBronze is BColor {\\r\\n    function getColor() external view override returns (bytes32) {\\r\\n        return bytes32('BRONZE');\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xfebf562cc76ad2f7d522afc383f11c4802fc39fc675bad0da602bde5e2212710\"},\"contracts/balancer/BConst.sol\":{\"content\":\"// This program is free software: you can redistribute it and/or modify\\r\\n// it under the terms of the GNU General Public License as published by\\r\\n// the Free Software Foundation, either version 3 of the License, or\\r\\n// (at your option) any later version.\\r\\n\\r\\n// This program is distributed in the hope that it will be useful,\\r\\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\\r\\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\r\\n// GNU General Public License for more details.\\r\\n\\r\\n// You should have received a copy of the GNU General Public License\\r\\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\\r\\n\\r\\npragma solidity 0.8.25;\\r\\n\\r\\nimport './BColor.sol';\\r\\n\\r\\ncontract BConst is BBronze {\\r\\n    uint public constant BONE = 10 ** 18;\\r\\n\\r\\n    uint public constant MIN_BOUND_TOKENS = 2;\\r\\n    uint public constant MAX_BOUND_TOKENS = 8;\\r\\n\\r\\n    uint public constant MIN_FEE = BONE / 10 ** 6;\\r\\n    uint public constant MAX_FEE = BONE / 10;\\r\\n    uint public constant EXIT_FEE = 0;\\r\\n\\r\\n    uint public constant MIN_WEIGHT = BONE;\\r\\n    uint public constant MAX_WEIGHT = BONE * 50;\\r\\n    uint public constant MAX_TOTAL_WEIGHT = BONE * 50;\\r\\n    uint public constant MIN_BALANCE = BONE / 10 ** 12;\\r\\n\\r\\n    uint public constant INIT_POOL_SUPPLY = BONE * 100;\\r\\n\\r\\n    uint public constant MIN_BPOW_BASE = 1 wei;\\r\\n    uint public constant MAX_BPOW_BASE = (2 * BONE) - 1 wei;\\r\\n    uint public constant BPOW_PRECISION = BONE / 10 ** 10;\\r\\n\\r\\n    uint public constant MAX_IN_RATIO = BONE / 2;\\r\\n    uint public constant MAX_OUT_RATIO = (BONE / 3) + 1 wei;\\r\\n}\\r\\n\",\"keccak256\":\"0xdda4746d3e2d40d8ecd62b61fec957d560ad405dd82aaf3e43d7e708168b7df6\"},\"contracts/balancer/BNum.sol\":{\"content\":\"// This program is free software: you can redistribute it and/or modify\\r\\n// it under the terms of the GNU General Public License as published by\\r\\n// the Free Software Foundation, either version 3 of the License, or\\r\\n// (at your option) any later version.\\r\\n\\r\\n// This program is distributed in the hope that it will be useful,\\r\\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\\r\\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\r\\n// GNU General Public License for more details.\\r\\n\\r\\n// You should have received a copy of the GNU General Public License\\r\\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\\r\\n\\r\\npragma solidity 0.8.25;\\r\\n\\r\\nimport \\\"./BConst.sol\\\";\\r\\n\\r\\ncontract BNum is BConst {\\r\\n\\r\\n    function btoi(uint a)\\r\\n        internal pure \\r\\n        returns (uint)\\r\\n    {\\r\\n        return a / BONE;\\r\\n    }\\r\\n\\r\\n    function bfloor(uint a)\\r\\n        internal pure\\r\\n        returns (uint)\\r\\n    {\\r\\n        return btoi(a) * BONE;\\r\\n    }\\r\\n\\r\\n    function badd(uint a, uint b)\\r\\n        internal pure\\r\\n        returns (uint)\\r\\n    {\\r\\n        uint c = a + b;\\r\\n        require(c >= a, \\\"ERR_ADD_OVERFLOW\\\");\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    function bsub(uint a, uint b)\\r\\n        internal pure\\r\\n        returns (uint)\\r\\n    {\\r\\n        (uint c, bool flag) = bsubSign(a, b);\\r\\n        require(!flag, \\\"ERR_SUB_UNDERFLOW\\\");\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    function bsubSign(uint a, uint b)\\r\\n        internal pure\\r\\n        returns (uint, bool)\\r\\n    {\\r\\n        if (a >= b) {\\r\\n            return (a - b, false);\\r\\n        } else {\\r\\n            return (b - a, true);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function bmul(uint a, uint b)\\r\\n        internal pure\\r\\n        returns (uint)\\r\\n    {\\r\\n        uint c0 = a * b;\\r\\n        require(a == 0 || c0 / a == b, \\\"ERR_MUL_OVERFLOW\\\");\\r\\n        uint c1 = c0 + (BONE / 2);\\r\\n        require(c1 >= c0, \\\"ERR_MUL_OVERFLOW\\\");\\r\\n        uint c2 = c1 / BONE;\\r\\n        return c2;\\r\\n    }\\r\\n\\r\\n    function bdiv(uint a, uint b)\\r\\n        internal pure\\r\\n        returns (uint)\\r\\n    {\\r\\n        require(b != 0, \\\"ERR_DIV_ZERO\\\");\\r\\n        uint c0 = a * BONE;\\r\\n        require(a == 0 || c0 / a == BONE, \\\"ERR_DIV_INTERNAL\\\"); // bmul overflow\\r\\n        uint c1 = c0 + (b / 2);\\r\\n        require(c1 >= c0, \\\"ERR_DIV_INTERNAL\\\"); //  badd require\\r\\n        uint c2 = c1 / b;\\r\\n        return c2;\\r\\n    }\\r\\n\\r\\n    // DSMath.wpow\\r\\n    function bpowi(uint a, uint n)\\r\\n        internal pure\\r\\n        returns (uint)\\r\\n    {\\r\\n        uint z = n % 2 != 0 ? a : BONE;\\r\\n\\r\\n        for (n /= 2; n != 0; n /= 2) {\\r\\n            a = bmul(a, a);\\r\\n\\r\\n            if (n % 2 != 0) {\\r\\n                z = bmul(z, a);\\r\\n            }\\r\\n        }\\r\\n        return z;\\r\\n    }\\r\\n\\r\\n    // Compute b^(e.w) by splitting it into (b^e)*(b^0.w).\\r\\n    // Use `bpowi` for `b^e` and `bpowK` for k iterations\\r\\n    // of approximation of b^0.w\\r\\n    function bpow(uint base, uint exp)\\r\\n        internal pure\\r\\n        returns (uint)\\r\\n    {\\r\\n        require(base >= MIN_BPOW_BASE, \\\"ERR_BPOW_BASE_TOO_LOW\\\");\\r\\n        require(base <= MAX_BPOW_BASE, \\\"ERR_BPOW_BASE_TOO_HIGH\\\");\\r\\n\\r\\n        uint whole  = bfloor(exp);   \\r\\n        uint remain = bsub(exp, whole);\\r\\n\\r\\n        uint wholePow = bpowi(base, btoi(whole));\\r\\n\\r\\n        if (remain == 0) {\\r\\n            return wholePow;\\r\\n        }\\r\\n\\r\\n        uint partialResult = bpowApprox(base, remain, BPOW_PRECISION);\\r\\n        return bmul(wholePow, partialResult);\\r\\n    }\\r\\n\\r\\n    function bpowApprox(uint base, uint exp, uint precision)\\r\\n        internal pure\\r\\n        returns (uint)\\r\\n    {\\r\\n        // term 0:\\r\\n        uint a     = exp;\\r\\n        (uint x, bool xneg)  = bsubSign(base, BONE);\\r\\n        uint term = BONE;\\r\\n        uint sum   = term;\\r\\n        bool negative = false;\\r\\n\\r\\n\\r\\n        // term(k) = numer / denom \\r\\n        //         = (product(a - i - 1, i=1-->k) * x^k) / (k!)\\r\\n        // each iteration, multiply previous term by (a-(k-1)) * x / k\\r\\n        // continue until term is less than precision\\r\\n        for (uint i = 1; term >= precision; i++) {\\r\\n            uint bigK = i * BONE;\\r\\n            (uint c, bool cneg) = bsubSign(a, bsub(bigK, BONE));\\r\\n            term = bmul(term, bmul(c, x));\\r\\n            term = bdiv(term, bigK);\\r\\n            if (term == 0) break;\\r\\n\\r\\n            if (xneg) negative = !negative;\\r\\n            if (cneg) negative = !negative;\\r\\n            if (negative) {\\r\\n                sum = bsub(sum, term);\\r\\n            } else {\\r\\n                sum = badd(sum, term);\\r\\n            }\\r\\n        }\\r\\n\\r\\n        return sum;\\r\\n    }\\r\\n\\r\\n}\\r\\n\",\"keccak256\":\"0x202057e3b3eb9ac515caa18b50148fc342bd8065e37c4ff08dd9ade76daee5ce\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interfaces/I1inchSpotAgg.sol":{"I1inchSpotAgg":{"abi":[{"inputs":[{"internalType":"contract IERC20","name":"srcToken","type":"address"},{"internalType":"contract IERC20","name":"dstToken","type":"address"},{"internalType":"bool","name":"useWrappers","type":"bool"}],"name":"getRate","outputs":[{"internalType":"uint256","name":"weightedRate","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"contract IERC20","name":"srcToken","type":"address"},{"internalType":"bool","name":"useWrappers","type":"bool"}],"name":"getRateToEth","outputs":[{"internalType":"uint256","name":"weightedRate","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"getRate(address,address,bool)":"802431fb","getRateToEth(address,bool)":"7de4fd10"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"srcToken\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"dstToken\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useWrappers\",\"type\":\"bool\"}],\"name\":\"getRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"weightedRate\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"srcToken\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useWrappers\",\"type\":\"bool\"}],\"name\":\"getRateToEth\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"weightedRate\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/I1inchSpotAgg.sol\":\"I1inchSpotAgg\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"contracts/interfaces/I1inchSpotAgg.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\nimport '@openzeppelin/contracts/token/ERC20/IERC20.sol';\\r\\n\\r\\ninterface I1inchSpotAgg {\\r\\n  function getRate(IERC20 srcToken, IERC20 dstToken, bool useWrappers) external view returns (uint256 weightedRate);\\r\\n\\r\\n  function getRateToEth(IERC20 srcToken, bool useWrappers) external view returns (uint256 weightedRate);\\r\\n}\\r\\n\",\"keccak256\":\"0x29417a441b068263f01adb36906270f1b76431d3017d214f506824ee41ada1b3\",\"license\":\"GNU AGPLv3\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interfaces/IBaluniV1Agent.sol":{"IBaluniV1Agent":{"abi":[{"inputs":[{"components":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"internalType":"struct IBaluniV1Agent.Call[]","name":"calls","type":"tuple[]"},{"internalType":"address[]","name":"tokensReturn","type":"address[]"}],"name":"execute","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"execute((address,uint256,bytes)[],address[])":"eedc3c50"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct IBaluniV1Agent.Call[]\",\"name\":\"calls\",\"type\":\"tuple[]\"},{\"internalType\":\"address[]\",\"name\":\"tokensReturn\",\"type\":\"address[]\"}],\"name\":\"execute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IBaluniV1Agent.sol\":\"IBaluniV1Agent\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/interfaces/IBaluniV1Agent.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n\\r\\ninterface IBaluniV1Agent {\\r\\n  struct Call {\\r\\n    address to;\\r\\n    uint256 value;\\r\\n    bytes data;\\r\\n  }\\r\\n\\r\\n  function execute(Call[] memory calls, address[] memory tokensReturn) external;\\r\\n}\\r\\n\",\"keccak256\":\"0x1bbf5ddbc4f525451e727d6997e6a20a6238d69232b58b3813760a16e7f60bbe\",\"license\":\"GNU AGPLv3\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interfaces/IBaluniV1PoolPeriphery.sol":{"IBaluniV1PoolPeriphery":{"abi":[{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"address","name":"asset","type":"address"}],"name":"getAssetReserve","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"}],"name":"getReserves","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"getAssetReserve(address,address)":"a3e113fb","getReserves(address)":"3e99c1e4"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getAssetReserve\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"getReserves\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IBaluniV1PoolPeriphery.sol\":\"IBaluniV1PoolPeriphery\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/interfaces/IBaluniV1PoolPeriphery.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n\\r\\ninterface IBaluniV1PoolPeriphery {\\r\\n    function getReserves(address pool) external view returns (uint256[] memory);\\r\\n\\r\\n    function getAssetReserve(address pool, address asset) external view returns (uint256);\\r\\n}\\r\\n\",\"keccak256\":\"0x07a47e40a96a436f7dab0a5bb58c27622fd7f9a7c98b5c3f3d223ce848cbdf28\",\"license\":\"GNU AGPLv3\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interfaces/IBaluniV1Rebalancer.sol":{"IBaluniV1Rebalancer":{"abi":[{"inputs":[],"name":"USDC","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"WNATIVE","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"_1InchSpotAgg","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"baluniRouter","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256[]","name":"balances","type":"uint256[]"},{"internalType":"address[]","name":"assets","type":"address[]"},{"internalType":"uint256[]","name":"weights","type":"uint256[]"},{"internalType":"uint256","name":"limit","type":"uint256"},{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"baseAsset","type":"address"}],"name":"checkRebalance","outputs":[{"components":[{"internalType":"uint256","name":"length","type":"uint256"},{"internalType":"uint256","name":"totalValue","type":"uint256"},{"internalType":"uint256","name":"finalUsdBalance","type":"uint256"},{"internalType":"uint256","name":"overweightVaultsLength","type":"uint256"},{"internalType":"uint256","name":"underweightVaultsLength","type":"uint256"},{"internalType":"uint256","name":"totalActiveWeight","type":"uint256"},{"internalType":"uint256","name":"amountOut","type":"uint256"},{"internalType":"uint256[]","name":"overweightVaults","type":"uint256[]"},{"internalType":"uint256[]","name":"overweightAmounts","type":"uint256[]"},{"internalType":"uint256[]","name":"underweightVaults","type":"uint256[]"},{"internalType":"uint256[]","name":"underweightAmounts","type":"uint256[]"},{"internalType":"uint256[]","name":"balances","type":"uint256[]"}],"internalType":"struct IBaluniV1Rebalancer.RebalanceVars","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"fromToken","type":"address"},{"internalType":"address","name":"toToken","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"convert","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256[]","name":"balances","type":"uint256[]"},{"internalType":"address[]","name":"assets","type":"address[]"},{"internalType":"uint256[]","name":"weights","type":"uint256[]"},{"internalType":"uint256","name":"limit","type":"uint256"},{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"receiver","type":"address"},{"internalType":"address","name":"baseAsset","type":"address"}],"name":"rebalance","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"treasury","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"uniswapFactory","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"uniswapRouter","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"USDC()":"89a30271","WNATIVE()":"b381cf40","_1InchSpotAgg()":"eb06b29d","baluniRouter()":"39b65140","checkRebalance(uint256[],address[],uint256[],uint256,address,address)":"997146f5","convert(address,address,uint256)":"248391ff","rebalance(uint256[],address[],uint256[],uint256,address,address,address)":"f0bf7714","treasury()":"61d027b3","uniswapFactory()":"8bdb2afa","uniswapRouter()":"735de9f7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"USDC\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WNATIVE\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_1InchSpotAgg\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baluniRouter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"balances\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"weights\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"baseAsset\",\"type\":\"address\"}],\"name\":\"checkRebalance\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"finalUsdBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"overweightVaultsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"underweightVaultsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalActiveWeight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"overweightVaults\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"overweightAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"underweightVaults\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"underweightAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"balances\",\"type\":\"uint256[]\"}],\"internalType\":\"struct IBaluniV1Rebalancer.RebalanceVars\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"toToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"convert\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"balances\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"weights\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"baseAsset\",\"type\":\"address\"}],\"name\":\"rebalance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"treasury\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswapFactory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswapRouter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IBaluniV1Rebalancer.sol\":\"IBaluniV1Rebalancer\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\"},\"contracts/interfaces/I1inchSpotAgg.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\nimport '@openzeppelin/contracts/token/ERC20/IERC20.sol';\\r\\n\\r\\ninterface I1inchSpotAgg {\\r\\n  function getRate(IERC20 srcToken, IERC20 dstToken, bool useWrappers) external view returns (uint256 weightedRate);\\r\\n\\r\\n  function getRateToEth(IERC20 srcToken, bool useWrappers) external view returns (uint256 weightedRate);\\r\\n}\\r\\n\",\"keccak256\":\"0x29417a441b068263f01adb36906270f1b76431d3017d214f506824ee41ada1b3\",\"license\":\"GNU AGPLv3\"},\"contracts/interfaces/IBaluniV1Agent.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n\\r\\ninterface IBaluniV1Agent {\\r\\n  struct Call {\\r\\n    address to;\\r\\n    uint256 value;\\r\\n    bytes data;\\r\\n  }\\r\\n\\r\\n  function execute(Call[] memory calls, address[] memory tokensReturn) external;\\r\\n}\\r\\n\",\"keccak256\":\"0x1bbf5ddbc4f525451e727d6997e6a20a6238d69232b58b3813760a16e7f60bbe\",\"license\":\"GNU AGPLv3\"},\"contracts/interfaces/IBaluniV1Rebalancer.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n\\r\\nimport './IBaluniV1Router.sol';\\r\\n\\r\\ninterface IBaluniV1Rebalancer {\\r\\n  struct RebalanceVars {\\r\\n    uint256 length;\\r\\n    uint256 totalValue;\\r\\n    uint256 finalUsdBalance;\\r\\n    uint256 overweightVaultsLength;\\r\\n    uint256 underweightVaultsLength;\\r\\n    uint256 totalActiveWeight;\\r\\n    uint256 amountOut;\\r\\n    uint256[] overweightVaults;\\r\\n    uint256[] overweightAmounts;\\r\\n    uint256[] underweightVaults;\\r\\n    uint256[] underweightAmounts;\\r\\n    uint256[] balances;\\r\\n  }\\r\\n\\r\\n  // Variables\\r\\n  function baluniRouter() external view returns (address);\\r\\n\\r\\n  function USDC() external view returns (address);\\r\\n\\r\\n  function WNATIVE() external view returns (address);\\r\\n\\r\\n  function uniswapRouter() external view returns (address);\\r\\n\\r\\n  function uniswapFactory() external view returns (address);\\r\\n\\r\\n  function _1InchSpotAgg() external view returns (address);\\r\\n\\r\\n  function treasury() external view returns (address);\\r\\n\\r\\n  // Functions\\r\\n  function rebalance(\\r\\n    uint256[] memory balances,\\r\\n    address[] calldata assets,\\r\\n    uint256[] calldata weights,\\r\\n    uint256 limit,\\r\\n    address sender,\\r\\n    address receiver,\\r\\n    address baseAsset\\r\\n  ) external;\\r\\n\\r\\n  function checkRebalance(\\r\\n    uint256[] memory balances,\\r\\n    address[] calldata assets,\\r\\n    uint256[] calldata weights,\\r\\n    uint256 limit,\\r\\n    address sender,\\r\\n    address baseAsset\\r\\n  ) external view returns (RebalanceVars memory);\\r\\n\\r\\n  function convert(address fromToken, address toToken, uint256 amount) external view returns (uint256);\\r\\n}\\r\\n\",\"keccak256\":\"0xe7e9c4fbe80061f09e49a3c9861c415d023383069ee1c59b39f85290791e8c3f\",\"license\":\"GNU AGPLv3\"},\"contracts/interfaces/IBaluniV1Router.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n\\r\\nimport '@openzeppelin/contracts/token/ERC20/IERC20.sol';\\r\\nimport '@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol';\\r\\nimport './I1inchSpotAgg.sol';\\r\\nimport './IBaluniV1Agent.sol';\\r\\n\\r\\ninterface IBaluniV1Router {\\r\\n  struct Call {\\r\\n    address to;\\r\\n    uint256 value;\\r\\n    bytes data;\\r\\n  }\\r\\n\\r\\n  // Variables\\r\\n  function _MAX_BPS_FEE() external view returns (uint256);\\r\\n\\r\\n  function _BPS_FEE() external view returns (uint256);\\r\\n\\r\\n  function _BPS_BASE() external view returns (uint256);\\r\\n\\r\\n  function getTokens() external view returns (address[] memory);\\r\\n\\r\\n  function USDC() external view returns (IERC20);\\r\\n\\r\\n  function WNATIVE() external view returns (address);\\r\\n\\r\\n  function oracle() external view returns (address);\\r\\n\\r\\n  function uniswapRouter() external view returns (address);\\r\\n\\r\\n  function uniswapFactory() external view returns (address);\\r\\n\\r\\n  function agentFactory() external view returns (address);\\r\\n\\r\\n  function marketOracle() external view returns (address);\\r\\n\\r\\n  function rebalancer() external view returns (address);\\r\\n\\r\\n  function treasury() external view returns (address);\\r\\n\\r\\n  // Functions\\r\\n  function initialize(\\r\\n    address _usdc,\\r\\n    address _wnative,\\r\\n    address _1inchSpotAgg,\\r\\n    address _uniRouter,\\r\\n    address _uniFactory,\\r\\n    address _rebalancer\\r\\n  ) external;\\r\\n\\r\\n  function reinitialize(\\r\\n    address _usdc,\\r\\n    address _wnative,\\r\\n    address _1inchSpotAgg,\\r\\n    address _uniRouter,\\r\\n    address _uniFactory,\\r\\n    address _rebalancer,\\r\\n    uint64 version\\r\\n  ) external;\\r\\n\\r\\n  function initializeMarketOracle(address _marketOracle) external;\\r\\n\\r\\n  function changeMarketOracle(address _marketOracle) external;\\r\\n\\r\\n  function changeBpsFee(uint256 _newFee) external;\\r\\n\\r\\n  function changeTreasury(address _newTreasury) external;\\r\\n\\r\\n  function changeRebalancer(address _newRebalancer) external;\\r\\n\\r\\n  function changeAgentFactory(address _agentFactory) external;\\r\\n\\r\\n  function execute(IBaluniV1Agent.Call[] memory calls, address[] memory tokensReturn) external;\\r\\n\\r\\n  function liquidate(address token) external;\\r\\n\\r\\n  function liquidateAll() external;\\r\\n\\r\\n  function burnERC20(uint256 burnAmount) external;\\r\\n\\r\\n  function burnUSDC(uint256 burnAmount) external;\\r\\n\\r\\n  function getAgentAddress(address _user) external view returns (address);\\r\\n\\r\\n  function mintWithUSDC(uint256 balAmountToMint) external;\\r\\n\\r\\n  function callRebalance(\\r\\n    address[] calldata assets,\\r\\n    uint256[] calldata weights,\\r\\n    address sender,\\r\\n    address receiver,\\r\\n    uint256 limit,\\r\\n    address baseAsset\\r\\n  ) external;\\r\\n\\r\\n  function requiredUSDCtoMint(uint256 balAmountToMint) external view returns (uint256);\\r\\n\\r\\n  function calculateTokenShare(\\r\\n    uint256 totalBaluni,\\r\\n    uint256 totalERC20Balance,\\r\\n    uint256 baluniAmount,\\r\\n    uint256 tokenDecimals\\r\\n  ) external pure returns (uint256);\\r\\n\\r\\n  function tokenValuation(uint256 amount, address token) external view returns (uint256);\\r\\n\\r\\n  function totalValuation() external view returns (uint256);\\r\\n\\r\\n  function getUSDCShareValue(uint256 amount) external view returns (uint256);\\r\\n\\r\\n  function fetchMarketPrices() external view returns (uint256, uint256);\\r\\n\\r\\n  function getVersion() external view returns (uint64);\\r\\n\\r\\n  function unitPrice() external view returns (uint256);\\r\\n  \\r\\n}\\r\\n\",\"keccak256\":\"0x0795abf370daca8b74052ab6f425ab982bb4e0aecc4a72de19b3ff505d9e18a5\",\"license\":\"GNU AGPLv3\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interfaces/IBaluniV1Router.sol":{"IBaluniV1Router":{"abi":[{"inputs":[],"name":"USDC","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"WNATIVE","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"_BPS_BASE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"_BPS_FEE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"_MAX_BPS_FEE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"agentFactory","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"burnAmount","type":"uint256"}],"name":"burnERC20","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"burnAmount","type":"uint256"}],"name":"burnUSDC","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"totalBaluni","type":"uint256"},{"internalType":"uint256","name":"totalERC20Balance","type":"uint256"},{"internalType":"uint256","name":"baluniAmount","type":"uint256"},{"internalType":"uint256","name":"tokenDecimals","type":"uint256"}],"name":"calculateTokenShare","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"address[]","name":"assets","type":"address[]"},{"internalType":"uint256[]","name":"weights","type":"uint256[]"},{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"receiver","type":"address"},{"internalType":"uint256","name":"limit","type":"uint256"},{"internalType":"address","name":"baseAsset","type":"address"}],"name":"callRebalance","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_agentFactory","type":"address"}],"name":"changeAgentFactory","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_newFee","type":"uint256"}],"name":"changeBpsFee","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_marketOracle","type":"address"}],"name":"changeMarketOracle","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_newRebalancer","type":"address"}],"name":"changeRebalancer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_newTreasury","type":"address"}],"name":"changeTreasury","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"internalType":"struct IBaluniV1Agent.Call[]","name":"calls","type":"tuple[]"},{"internalType":"address[]","name":"tokensReturn","type":"address[]"}],"name":"execute","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"fetchMarketPrices","outputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_user","type":"address"}],"name":"getAgentAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getTokens","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"getUSDCShareValue","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getVersion","outputs":[{"internalType":"uint64","name":"","type":"uint64"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_usdc","type":"address"},{"internalType":"address","name":"_wnative","type":"address"},{"internalType":"address","name":"_1inchSpotAgg","type":"address"},{"internalType":"address","name":"_uniRouter","type":"address"},{"internalType":"address","name":"_uniFactory","type":"address"},{"internalType":"address","name":"_rebalancer","type":"address"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_marketOracle","type":"address"}],"name":"initializeMarketOracle","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"liquidate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"liquidateAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"marketOracle","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"balAmountToMint","type":"uint256"}],"name":"mintWithUSDC","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"oracle","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"rebalancer","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_usdc","type":"address"},{"internalType":"address","name":"_wnative","type":"address"},{"internalType":"address","name":"_1inchSpotAgg","type":"address"},{"internalType":"address","name":"_uniRouter","type":"address"},{"internalType":"address","name":"_uniFactory","type":"address"},{"internalType":"address","name":"_rebalancer","type":"address"},{"internalType":"uint64","name":"version","type":"uint64"}],"name":"reinitialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"balAmountToMint","type":"uint256"}],"name":"requiredUSDCtoMint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"token","type":"address"}],"name":"tokenValuation","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalValuation","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"treasury","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"uniswapFactory","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"uniswapRouter","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"unitPrice","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"USDC()":"89a30271","WNATIVE()":"b381cf40","_BPS_BASE()":"85377188","_BPS_FEE()":"b9f5e617","_MAX_BPS_FEE()":"34decfc9","agentFactory()":"7df107ea","burnERC20(uint256)":"1a168da2","burnUSDC(uint256)":"fe0a4dd1","calculateTokenShare(uint256,uint256,uint256,uint256)":"fe330a51","callRebalance(address[],uint256[],address,address,uint256,address)":"599f69f7","changeAgentFactory(address)":"0a38abab","changeBpsFee(uint256)":"06497cb9","changeMarketOracle(address)":"35aa0efa","changeRebalancer(address)":"0918281b","changeTreasury(address)":"b14f2a39","execute((address,uint256,bytes)[],address[])":"eedc3c50","fetchMarketPrices()":"8d483df1","getAgentAddress(address)":"27d54a92","getTokens()":"aa6ca808","getUSDCShareValue(uint256)":"71ddcfb8","getVersion()":"0d8e6e2c","initialize(address,address,address,address,address,address)":"cc2a9a5b","initializeMarketOracle(address)":"980d24f9","liquidate(address)":"2f865568","liquidateAll()":"3c2066a9","marketOracle()":"60961528","mintWithUSDC(uint256)":"0cfc7386","oracle()":"7dc0d1d0","rebalancer()":"01d22ccd","reinitialize(address,address,address,address,address,address,uint64)":"b0d60ba0","requiredUSDCtoMint(uint256)":"aa95d893","tokenValuation(uint256,address)":"2bdd955a","totalValuation()":"295b9300","treasury()":"61d027b3","uniswapFactory()":"8bdb2afa","uniswapRouter()":"735de9f7","unitPrice()":"e73faa2d"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"USDC\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WNATIVE\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_BPS_BASE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_BPS_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_MAX_BPS_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"agentFactory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"burnAmount\",\"type\":\"uint256\"}],\"name\":\"burnERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"burnAmount\",\"type\":\"uint256\"}],\"name\":\"burnUSDC\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"totalBaluni\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalERC20Balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"baluniAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenDecimals\",\"type\":\"uint256\"}],\"name\":\"calculateTokenShare\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"weights\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"baseAsset\",\"type\":\"address\"}],\"name\":\"callRebalance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_agentFactory\",\"type\":\"address\"}],\"name\":\"changeAgentFactory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newFee\",\"type\":\"uint256\"}],\"name\":\"changeBpsFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_marketOracle\",\"type\":\"address\"}],\"name\":\"changeMarketOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newRebalancer\",\"type\":\"address\"}],\"name\":\"changeRebalancer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newTreasury\",\"type\":\"address\"}],\"name\":\"changeTreasury\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct IBaluniV1Agent.Call[]\",\"name\":\"calls\",\"type\":\"tuple[]\"},{\"internalType\":\"address[]\",\"name\":\"tokensReturn\",\"type\":\"address[]\"}],\"name\":\"execute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fetchMarketPrices\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getAgentAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTokens\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"getUSDCShareValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVersion\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_usdc\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_wnative\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_1inchSpotAgg\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_uniRouter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_uniFactory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_rebalancer\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_marketOracle\",\"type\":\"address\"}],\"name\":\"initializeMarketOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"liquidate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidateAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketOracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balAmountToMint\",\"type\":\"uint256\"}],\"name\":\"mintWithUSDC\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rebalancer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_usdc\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_wnative\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_1inchSpotAgg\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_uniRouter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_uniFactory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_rebalancer\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"reinitialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balAmountToMint\",\"type\":\"uint256\"}],\"name\":\"requiredUSDCtoMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"tokenValuation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalValuation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"treasury\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswapFactory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswapRouter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unitPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IBaluniV1Router.sol\":\"IBaluniV1Router\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\"},\"contracts/interfaces/I1inchSpotAgg.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\nimport '@openzeppelin/contracts/token/ERC20/IERC20.sol';\\r\\n\\r\\ninterface I1inchSpotAgg {\\r\\n  function getRate(IERC20 srcToken, IERC20 dstToken, bool useWrappers) external view returns (uint256 weightedRate);\\r\\n\\r\\n  function getRateToEth(IERC20 srcToken, bool useWrappers) external view returns (uint256 weightedRate);\\r\\n}\\r\\n\",\"keccak256\":\"0x29417a441b068263f01adb36906270f1b76431d3017d214f506824ee41ada1b3\",\"license\":\"GNU AGPLv3\"},\"contracts/interfaces/IBaluniV1Agent.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n\\r\\ninterface IBaluniV1Agent {\\r\\n  struct Call {\\r\\n    address to;\\r\\n    uint256 value;\\r\\n    bytes data;\\r\\n  }\\r\\n\\r\\n  function execute(Call[] memory calls, address[] memory tokensReturn) external;\\r\\n}\\r\\n\",\"keccak256\":\"0x1bbf5ddbc4f525451e727d6997e6a20a6238d69232b58b3813760a16e7f60bbe\",\"license\":\"GNU AGPLv3\"},\"contracts/interfaces/IBaluniV1Router.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n\\r\\nimport '@openzeppelin/contracts/token/ERC20/IERC20.sol';\\r\\nimport '@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol';\\r\\nimport './I1inchSpotAgg.sol';\\r\\nimport './IBaluniV1Agent.sol';\\r\\n\\r\\ninterface IBaluniV1Router {\\r\\n  struct Call {\\r\\n    address to;\\r\\n    uint256 value;\\r\\n    bytes data;\\r\\n  }\\r\\n\\r\\n  // Variables\\r\\n  function _MAX_BPS_FEE() external view returns (uint256);\\r\\n\\r\\n  function _BPS_FEE() external view returns (uint256);\\r\\n\\r\\n  function _BPS_BASE() external view returns (uint256);\\r\\n\\r\\n  function getTokens() external view returns (address[] memory);\\r\\n\\r\\n  function USDC() external view returns (IERC20);\\r\\n\\r\\n  function WNATIVE() external view returns (address);\\r\\n\\r\\n  function oracle() external view returns (address);\\r\\n\\r\\n  function uniswapRouter() external view returns (address);\\r\\n\\r\\n  function uniswapFactory() external view returns (address);\\r\\n\\r\\n  function agentFactory() external view returns (address);\\r\\n\\r\\n  function marketOracle() external view returns (address);\\r\\n\\r\\n  function rebalancer() external view returns (address);\\r\\n\\r\\n  function treasury() external view returns (address);\\r\\n\\r\\n  // Functions\\r\\n  function initialize(\\r\\n    address _usdc,\\r\\n    address _wnative,\\r\\n    address _1inchSpotAgg,\\r\\n    address _uniRouter,\\r\\n    address _uniFactory,\\r\\n    address _rebalancer\\r\\n  ) external;\\r\\n\\r\\n  function reinitialize(\\r\\n    address _usdc,\\r\\n    address _wnative,\\r\\n    address _1inchSpotAgg,\\r\\n    address _uniRouter,\\r\\n    address _uniFactory,\\r\\n    address _rebalancer,\\r\\n    uint64 version\\r\\n  ) external;\\r\\n\\r\\n  function initializeMarketOracle(address _marketOracle) external;\\r\\n\\r\\n  function changeMarketOracle(address _marketOracle) external;\\r\\n\\r\\n  function changeBpsFee(uint256 _newFee) external;\\r\\n\\r\\n  function changeTreasury(address _newTreasury) external;\\r\\n\\r\\n  function changeRebalancer(address _newRebalancer) external;\\r\\n\\r\\n  function changeAgentFactory(address _agentFactory) external;\\r\\n\\r\\n  function execute(IBaluniV1Agent.Call[] memory calls, address[] memory tokensReturn) external;\\r\\n\\r\\n  function liquidate(address token) external;\\r\\n\\r\\n  function liquidateAll() external;\\r\\n\\r\\n  function burnERC20(uint256 burnAmount) external;\\r\\n\\r\\n  function burnUSDC(uint256 burnAmount) external;\\r\\n\\r\\n  function getAgentAddress(address _user) external view returns (address);\\r\\n\\r\\n  function mintWithUSDC(uint256 balAmountToMint) external;\\r\\n\\r\\n  function callRebalance(\\r\\n    address[] calldata assets,\\r\\n    uint256[] calldata weights,\\r\\n    address sender,\\r\\n    address receiver,\\r\\n    uint256 limit,\\r\\n    address baseAsset\\r\\n  ) external;\\r\\n\\r\\n  function requiredUSDCtoMint(uint256 balAmountToMint) external view returns (uint256);\\r\\n\\r\\n  function calculateTokenShare(\\r\\n    uint256 totalBaluni,\\r\\n    uint256 totalERC20Balance,\\r\\n    uint256 baluniAmount,\\r\\n    uint256 tokenDecimals\\r\\n  ) external pure returns (uint256);\\r\\n\\r\\n  function tokenValuation(uint256 amount, address token) external view returns (uint256);\\r\\n\\r\\n  function totalValuation() external view returns (uint256);\\r\\n\\r\\n  function getUSDCShareValue(uint256 amount) external view returns (uint256);\\r\\n\\r\\n  function fetchMarketPrices() external view returns (uint256, uint256);\\r\\n\\r\\n  function getVersion() external view returns (uint64);\\r\\n\\r\\n  function unitPrice() external view returns (uint256);\\r\\n  \\r\\n}\\r\\n\",\"keccak256\":\"0x0795abf370daca8b74052ab6f425ab982bb4e0aecc4a72de19b3ff505d9e18a5\",\"license\":\"GNU AGPLv3\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}